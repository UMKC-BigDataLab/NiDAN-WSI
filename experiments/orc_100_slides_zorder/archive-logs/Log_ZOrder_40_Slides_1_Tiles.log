Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 19:39:25 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:39:39 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:39:39 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:39:40 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 19:39:42 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:39:53 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524193942-0586).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.305671141 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:=>                                                     (4 + 111) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:===================================>                   (75 + 40) / 115][Stage 0:========================================>              (85 + 30) / 115][Stage 0:============================================>          (93 + 22) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:==========================>                            (56 + 60) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:=======================================>               (83 + 33) / 116][Stage 1:=========================================>             (87 + 29) / 116][Stage 1:=============================================>         (97 + 19) / 116][Stage 1:====================================================>  (110 + 6) / 116][Stage 1:====================================================>  (111 + 5) / 116][Stage 1:=====================================================> (113 + 3) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.672506042 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.65877484 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=================================>                     (70 + 45) / 115][Stage 2:===================================>                   (74 + 41) / 115][Stage 2:======================================>                (81 + 34) / 115][Stage 2:=========================================>             (87 + 28) / 115][Stage 2:==============================================>        (97 + 18) / 115][Stage 2:===================================================>   (107 + 8) / 115][Stage 2:====================================================>  (109 + 6) / 115][Stage 2:====================================================>  (110 + 5) / 115][Stage 2:=====================================================> (111 + 4) / 115][Stage 2:======================================================>(114 + 1) / 115]                                                                                [Stage 3:=====================================>                 (80 + 36) / 116][Stage 3:======================================>                (82 + 34) / 116][Stage 3:========================================>              (86 + 30) / 116][Stage 3:===========================================>           (92 + 24) / 116][Stage 3:===============================================>      (101 + 15) / 116][Stage 3:===================================================>   (108 + 8) / 116][Stage 3:===================================================>   (109 + 7) / 116][Stage 3:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 5.085671505 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=8", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=8,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.667110712 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (57 + 56) / 113][Stage 4:============================>                          (58 + 55) / 113][Stage 4:================================>                      (66 + 47) / 113][Stage 4:====================================>                  (74 + 39) / 113][Stage 4:========================================>              (83 + 30) / 113][Stage 4:================================================>     (101 + 12) / 113][Stage 4:====================================================>  (108 + 5) / 113][Stage 4:=====================================================> (110 + 3) / 113]                                                                                [Stage 5:===========================>                           (58 + 56) / 114][Stage 5:=============================>                         (62 + 52) / 114][Stage 5:=======================================>               (81 + 33) / 114][Stage 5:=============================================>         (95 + 19) / 114][Stage 5:================================================>     (103 + 11) / 114][Stage 5:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.543800511 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.648057412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==========================>                            (58 + 62) / 120][Stage 6:============================>                          (62 + 58) / 120][Stage 6:==============================>                        (67 + 53) / 120][Stage 6:=========================================>             (90 + 30) / 120][Stage 6:=============================================>        (100 + 20) / 120][Stage 6:====================================================>  (114 + 6) / 120][Stage 6:======================================================>(119 + 1) / 120]                                                                                [Stage 7:===========================>                           (60 + 61) / 121][Stage 7:==============================>                        (67 + 54) / 121][Stage 7:===================================>                   (78 + 43) / 121][Stage 7:=============================================>         (99 + 22) / 121][Stage 7:=================================================>    (110 + 11) / 121][Stage 7:=====================================================> (117 + 4) / 121]                                                                                Time elapsed: 4.050987278 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=164", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=164,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.642828461 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==========================>                            (59 + 62) / 121][Stage 8:===========================>                           (60 + 61) / 121][Stage 8:============================>                          (62 + 59) / 121][Stage 8:=================================>                     (74 + 47) / 121][Stage 8:==========================================>            (93 + 28) / 121][Stage 8:=================================================>    (111 + 10) / 121][Stage 8:======================================================>(119 + 2) / 121]                                                                                [Stage 9:===========================>                           (61 + 61) / 122][Stage 9:===========================>                           (62 + 60) / 122][Stage 9:================================>                      (72 + 50) / 122][Stage 9:=========================================>             (91 + 31) / 122][Stage 9:============================================>         (101 + 21) / 122][Stage 9:==================================================>    (113 + 9) / 122][Stage 9:=====================================================> (118 + 4) / 122][Stage 9:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.992477639 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=9", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=9,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.618133771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (57 + 56) / 113][Stage 10:============================>                         (60 + 53) / 113][Stage 10:================================>                     (68 + 45) / 113][Stage 10:=======================================>              (83 + 30) / 113][Stage 10:===============================================>     (102 + 11) / 113][Stage 10:====================================================> (109 + 4) / 113][Stage 10:====================================================> (110 + 3) / 113]                                                                                [Stage 11:===========================>                          (57 + 57) / 114][Stage 11:=============================>                        (62 + 52) / 114][Stage 11:==================================>                   (73 + 41) / 114][Stage 11:===========================================>          (92 + 22) / 114][Stage 11:===============================================>     (102 + 12) / 114][Stage 11:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.786734509 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=166", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=166,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.577274772 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:================================>                     (71 + 47) / 118][Stage 12:=================================>                    (73 + 45) / 118][Stage 12:=====================================>                (83 + 35) / 118][Stage 12:=============================================>       (102 + 16) / 118][Stage 12:====================================================> (115 + 3) / 118]                                                                                [Stage 13:=================================>                    (73 + 46) / 119][Stage 13:====================================>                 (80 + 39) / 119][Stage 13:============================================>        (100 + 19) / 119][Stage 13:===============================================>     (107 + 12) / 119][Stage 13:==================================================>   (112 + 7) / 119][Stage 13:====================================================> (115 + 4) / 119][Stage 13:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.644729488 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=184", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=184,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.556879103 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (60 + 60) / 120][Stage 14:==============================>                       (67 + 53) / 120][Stage 14:====================================>                 (81 + 39) / 120][Stage 14:============================================>        (101 + 19) / 120][Stage 14:===================================================>  (115 + 5) / 120][Stage 14:=====================================================>(119 + 1) / 120]                                                                                [Stage 15:===========================>                          (61 + 60) / 121][Stage 15:=============================>                        (65 + 56) / 121][Stage 15:==================================>                   (77 + 44) / 121][Stage 15:==========================================>           (95 + 26) / 121][Stage 15:================================================>    (111 + 10) / 121][Stage 15:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.611749348 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.54261489 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (60 + 60) / 120][Stage 16:===============================>                      (69 + 51) / 120][Stage 16:==========================================>           (94 + 26) / 120][Stage 16:================================================>    (110 + 10) / 120][Stage 16:=====================================================>(119 + 1) / 120]                                                                                [Stage 17:===========================>                          (61 + 60) / 121][Stage 17:=============================>                        (65 + 56) / 121][Stage 17:====================================>                 (81 + 40) / 121][Stage 17:===========================================>          (97 + 24) / 121][Stage 17:===================================================>  (115 + 6) / 121][Stage 17:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.334027069 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=80", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=80,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.475684755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:======================================>               (81 + 34) / 115][Stage 18:=========================================>            (88 + 27) / 115][Stage 18:=============================================>        (96 + 19) / 115][Stage 18:===============================================>     (103 + 12) / 115][Stage 18:===================================================>  (110 + 5) / 115]                                                                                [Stage 19:=======================================>              (84 + 32) / 116][Stage 19:============================================>         (95 + 21) / 116][Stage 19:=================================================>    (107 + 9) / 116][Stage 19:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.469173049 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=243", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=243,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.552820998 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==========================>                           (60 + 61) / 121][Stage 20:===========================>                          (61 + 60) / 121][Stage 20:==============================>                       (69 + 52) / 121][Stage 20:=======================================>              (89 + 32) / 121][Stage 20:==================================================>   (113 + 8) / 121]                                                                                [Stage 21:===========================>                          (61 + 61) / 122][Stage 21:==============================>                       (69 + 53) / 122][Stage 21:=====================================>                (84 + 38) / 122][Stage 21:===========================================>         (101 + 21) / 122][Stage 21:================================================>    (111 + 11) / 122][Stage 21:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.572343097 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=75", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=75,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.524498617 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (60 + 60) / 120][Stage 22:=============================>                        (66 + 54) / 120][Stage 22:=====================================>                (83 + 37) / 120][Stage 22:==============================================>      (106 + 14) / 120][Stage 22:====================================================> (117 + 3) / 120][Stage 22:======================================================(120 + 0) / 120]                                                                                [Stage 23:===========================>                          (61 + 60) / 121][Stage 23:=============================>                        (67 + 54) / 121][Stage 23:====================================>                 (82 + 39) / 121][Stage 23:=============================================>       (103 + 18) / 121][Stage 23:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.387856814 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=179", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=179,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.491573253 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (58 + 55) / 113][Stage 24:=============================>                        (61 + 52) / 113][Stage 24:=================================>                    (71 + 42) / 113][Stage 24:=============================================>        (96 + 17) / 113][Stage 24:===================================================>  (107 + 6) / 113][Stage 24:=====================================================>(111 + 2) / 113]                                                                                [Stage 25:===========================>                          (59 + 55) / 114][Stage 25:==================================>                   (72 + 42) / 114][Stage 25:=======================================>              (84 + 30) / 114][Stage 25:===============================================>     (102 + 12) / 114][Stage 25:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.536191914 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=171", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=171,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483219554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (58 + 55) / 113][Stage 26:================================>                     (69 + 44) / 113][Stage 26:==========================================>           (89 + 24) / 113][Stage 26:=================================================>    (104 + 9) / 113][Stage 26:=====================================================>(111 + 2) / 113]                                                                                [Stage 27:============================>                         (60 + 54) / 114][Stage 27:==============================>                       (64 + 50) / 114][Stage 27:====================================>                 (77 + 37) / 114][Stage 27:=============================================>        (96 + 18) / 114][Stage 27:===================================================>  (108 + 6) / 114][Stage 27:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.360679675 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=140", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=140,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426302293 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:=====================================>                (79 + 34) / 113][Stage 28:===========================================>          (92 + 21) / 113][Stage 28:===============================================>      (99 + 14) / 113][Stage 28:=================================================>    (104 + 9) / 113][Stage 28:===================================================>  (107 + 6) / 113][Stage 28:====================================================> (109 + 4) / 113]                                                                                [Stage 29:=======================================>              (83 + 31) / 114][Stage 29:==========================================>           (90 + 24) / 114][Stage 29:================================================>    (104 + 10) / 114][Stage 29:====================================================> (110 + 4) / 114][Stage 29:=====================================================>(112 + 2) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.778596475 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=55", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=55,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.475339738 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==============================>                       (65 + 50) / 115][Stage 30:==================================>                   (74 + 41) / 115][Stage 30:=========================================>            (89 + 26) / 115][Stage 30:===============================================>     (104 + 11) / 115][Stage 30:====================================================> (112 + 3) / 115][Stage 30:=====================================================>(114 + 1) / 115]                                                                                [Stage 31:================================>                     (69 + 47) / 116][Stage 31:========================================>             (87 + 29) / 116][Stage 31:=============================================>        (98 + 18) / 116][Stage 31:====================================================> (112 + 4) / 116][Stage 31:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.666328913 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=117", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=117,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.490291312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (60 + 60) / 120][Stage 32:=================================>                    (75 + 45) / 120][Stage 32:========================================>             (91 + 29) / 120][Stage 32:====================================================> (116 + 4) / 120]                                                                                [Stage 33:===========================>                          (62 + 59) / 121][Stage 33:================================>                     (72 + 49) / 121][Stage 33:========================================>             (91 + 30) / 121][Stage 33:===============================================>     (108 + 13) / 121][Stage 33:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.261725927 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=228", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=228,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.54287339 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (60 + 60) / 120][Stage 34:============================>                         (63 + 57) / 120][Stage 34:===================================>                  (78 + 42) / 120][Stage 34:===========================================>          (96 + 24) / 120][Stage 34:=================================================>    (111 + 9) / 120]                                                                                [Stage 35:=============================>                        (65 + 56) / 121][Stage 35:==================================>                   (77 + 44) / 121][Stage 35:=============================================>       (103 + 18) / 121][Stage 35:==================================================>   (113 + 8) / 121][Stage 35:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.227137977 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=232", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=232,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.445357279 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:=================================>                    (71 + 42) / 113][Stage 36:=======================================>              (82 + 31) / 113][Stage 36:==========================================>           (88 + 25) / 113][Stage 36:==============================================>      (100 + 13) / 113][Stage 36:==================================================>   (106 + 7) / 113][Stage 36:=====================================================>(111 + 2) / 113]                                                                                [Stage 37:===================================>                  (74 + 40) / 114][Stage 37:=========================================>            (87 + 27) / 114][Stage 37:=============================================>        (96 + 18) / 114][Stage 37:===================================================>  (109 + 5) / 114][Stage 37:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.13004672 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=54", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=54,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464664433 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (72 + 46) / 118][Stage 38:===================================>                  (77 + 41) / 118][Stage 38:======================================>               (84 + 34) / 118][Stage 38:=============================================>       (101 + 17) / 118][Stage 38:================================================>    (108 + 10) / 118]                                                                                [Stage 39:=================================>                    (73 + 46) / 119][Stage 39:==================================>                   (76 + 43) / 119][Stage 39:=======================================>              (86 + 33) / 119][Stage 39:==========================================>           (93 + 26) / 119][Stage 39:================================================>    (108 + 11) / 119][Stage 39:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.561797697 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=44", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=44,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400013442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:======================================>               (83 + 32) / 115][Stage 40:============================================>         (94 + 21) / 115][Stage 40:===================================================>  (110 + 5) / 115]                                                                                [Stage 41:=======================================>              (85 + 31) / 116][Stage 41:=============================================>       (100 + 16) / 116][Stage 41:===================================================>  (111 + 5) / 116][Stage 41:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.812909406 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444128882 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:======================================>               (81 + 34) / 115][Stage 42:========================================>             (87 + 28) / 115][Stage 42:================================================>    (105 + 10) / 115]                                                                                [Stage 43:======================================>               (83 + 33) / 116][Stage 43:===========================================>          (93 + 23) / 116][Stage 43:===============================================>     (104 + 12) / 116][Stage 43:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.671325087 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=172", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=172,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439538458 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=================================>                    (71 + 44) / 115][Stage 44:=======================================>              (84 + 31) / 115][Stage 44:============================================>         (94 + 21) / 115][Stage 44:===============================================>     (104 + 11) / 115][Stage 44:===================================================>  (110 + 5) / 115]                                                                                [Stage 45:===============================>                      (68 + 48) / 116][Stage 45:========================================>             (86 + 30) / 116][Stage 45:==============================================>       (99 + 17) / 116][Stage 45:===================================================>  (111 + 5) / 116][Stage 45:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.20389762 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=61", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=61,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431917447 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==============================>                       (64 + 51) / 115][Stage 46:==================================>                   (74 + 41) / 115][Stage 46:=======================================>              (84 + 31) / 115][Stage 46:=============================================>        (96 + 19) / 115][Stage 46:===================================================>  (110 + 5) / 115][Stage 46:=====================================================>(114 + 1) / 115]                                                                                [Stage 47:=====================================>                (80 + 36) / 116][Stage 47:==========================================>           (92 + 24) / 116][Stage 47:==================================================>   (108 + 8) / 116][Stage 47:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.268699876 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=196", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=196,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391360497 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:======================================>               (81 + 34) / 115][Stage 48:=======================================>              (85 + 30) / 115][Stage 48:=============================================>        (97 + 18) / 115][Stage 48:===================================================>  (110 + 5) / 115]                                                                                [Stage 49:=======================================>              (84 + 32) / 116][Stage 49:============================================>         (96 + 20) / 116][Stage 49:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.680416917 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=71", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=71,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447510785 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:================================>                     (70 + 45) / 115][Stage 50:=======================================>              (84 + 31) / 115][Stage 50:==============================================>       (98 + 17) / 115][Stage 50:=================================================>    (106 + 9) / 115][Stage 50:=====================================================>(113 + 2) / 115]                                                                                [Stage 51:================================>                     (69 + 47) / 116][Stage 51:===================================>                  (77 + 39) / 116][Stage 51:===========================================>          (94 + 22) / 116][Stage 51:================================================>    (106 + 10) / 116][Stage 51:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.097128552 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=190", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=190,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427894306 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:================================>                     (70 + 45) / 115][Stage 52:========================================>             (86 + 29) / 115][Stage 52:==============================================>      (101 + 14) / 115][Stage 52:===================================================>  (109 + 6) / 115]                                                                                [Stage 53:=================================>                    (71 + 45) / 116][Stage 53:=======================================>              (85 + 31) / 116][Stage 53:================================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.670645668 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410077643 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=================================>                    (70 + 43) / 113][Stage 54:======================================>               (81 + 32) / 113][Stage 54:==========================================>           (89 + 24) / 113][Stage 54:===============================================>      (99 + 14) / 113][Stage 54:==================================================>   (106 + 7) / 113][Stage 54:=====================================================>(111 + 2) / 113]                                                                                [Stage 55:=======================================>              (83 + 31) / 114][Stage 55:===========================================>          (92 + 22) / 114][Stage 55:================================================>    (104 + 10) / 114][Stage 55:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.110776513 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=127", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=127,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.586217439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:>                                                       (0 + 0) / 121][Stage 56:==========================>                           (60 + 61) / 121][Stage 56:==============================>                       (69 + 52) / 121][Stage 56:======================================>               (87 + 34) / 121][Stage 56:============================================>        (102 + 19) / 121][Stage 56:====================================================> (118 + 3) / 121]                                                                                [Stage 57:===========================>                          (61 + 61) / 122][Stage 57:===============================>                      (72 + 50) / 122][Stage 57:=======================================>              (89 + 33) / 122][Stage 57:================================================>    (112 + 10) / 122][Stage 57:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.312356328 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=142", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=142,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474430083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:===============================>                      (69 + 51) / 120][Stage 58:====================================>                 (81 + 39) / 120][Stage 58:==========================================>           (95 + 25) / 120][Stage 58:===================================================>  (114 + 6) / 120]                                                                                [Stage 59:============================>                         (64 + 57) / 121][Stage 59:================================>                     (72 + 49) / 121][Stage 59:=======================================>              (89 + 32) / 121][Stage 59:==================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.123191959 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=32", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=32,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381818722 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:=======================================>              (84 + 31) / 115][Stage 60:===========================================>          (93 + 22) / 115][Stage 60:==============================================>      (100 + 15) / 115][Stage 60:====================================================> (111 + 4) / 115]                                                                                [Stage 61:=======================================>              (85 + 31) / 116][Stage 61:==========================================>           (91 + 25) / 116][Stage 61:==============================================>      (102 + 14) / 116][Stage 61:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 3.02984062 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=10", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=10,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46019525 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (62 + 58) / 120][Stage 62:=================================>                    (74 + 46) / 120][Stage 62:========================================>             (91 + 29) / 120][Stage 62:================================================>    (110 + 10) / 120][Stage 62:====================================================> (117 + 3) / 120]                                                                                [Stage 63:=============================>                        (66 + 55) / 121][Stage 63:==================================>                   (78 + 43) / 121][Stage 63:=============================================>       (103 + 18) / 121][Stage 63:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.347789089 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=45", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=45,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447863036 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==========================>                           (60 + 61) / 121][Stage 64:==============================>                       (69 + 52) / 121][Stage 64:=====================================>                (84 + 37) / 121][Stage 64:================================================>    (110 + 11) / 121][Stage 64:=====================================================>(120 + 1) / 121]                                                                                [Stage 65:===========================>                          (61 + 61) / 122][Stage 65:==============================>                       (69 + 53) / 122][Stage 65:=====================================>                (85 + 37) / 122][Stage 65:=============================================>       (105 + 17) / 122]                                                                                Time elapsed: 3.026380245 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=225", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=225,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40979043 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=====================================>                (78 + 35) / 113][Stage 66:=======================================>              (83 + 30) / 113][Stage 66:=============================================>        (95 + 18) / 113][Stage 66:==================================================>   (105 + 8) / 113][Stage 66:=====================================================>(112 + 1) / 113]                                                                                [Stage 67:==================================>                   (72 + 42) / 114][Stage 67:======================================>               (82 + 32) / 114][Stage 67:===========================================>          (91 + 23) / 114][Stage 67:================================================>    (104 + 10) / 114][Stage 67:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.016301662 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=6", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=6,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456967216 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (60 + 60) / 120][Stage 68:================================>                     (73 + 47) / 120][Stage 68:============================================>         (99 + 21) / 120][Stage 68:================================================>    (110 + 10) / 120]                                                                                [Stage 69:===========================>                          (61 + 60) / 121][Stage 69:================================>                     (72 + 49) / 121][Stage 69:========================================>             (91 + 30) / 121][Stage 69:==============================================>      (107 + 14) / 121]                                                                                Time elapsed: 3.092182436 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=102", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=102,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378772306 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:======================================>               (82 + 33) / 115][Stage 70:========================================>             (86 + 29) / 115][Stage 70:==============================================>       (98 + 17) / 115][Stage 70:================================================>    (105 + 10) / 115][Stage 70:=====================================================>(114 + 1) / 115]                                                                                [Stage 71:=======================================>              (84 + 32) / 116][Stage 71:========================================>             (88 + 28) / 116][Stage 71:===============================================>     (105 + 11) / 116][Stage 71:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.880617031 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=185", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=185,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.513256841 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:================================>                     (72 + 46) / 118][Stage 72:==================================>                   (76 + 42) / 118][Stage 72:====================================>                 (80 + 38) / 118][Stage 72:=======================================>              (87 + 31) / 118][Stage 72:==============================================>      (104 + 14) / 118][Stage 72:====================================================> (114 + 4) / 118]                                                                                [Stage 73:=================================>                    (73 + 46) / 119][Stage 73:==================================>                   (75 + 44) / 119][Stage 73:====================================>                 (81 + 38) / 119][Stage 73:=======================================>              (87 + 32) / 119][Stage 73:==============================================>      (104 + 15) / 119][Stage 73:==================================================>   (111 + 8) / 119][Stage 73:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.68706521 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417272011 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (58 + 55) / 113][Stage 74:====================================>                 (76 + 37) / 113][Stage 74:=============================================>        (96 + 17) / 113][Stage 74:====================================================> (110 + 3) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:============================>                         (61 + 53) / 114][Stage 75:===============================>                      (66 + 48) / 114][Stage 75:=========================================>            (88 + 26) / 114][Stage 75:=================================================>    (105 + 9) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.18755196 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=187", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=187,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402433636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==============================>                       (65 + 50) / 115][Stage 76:====================================>                 (78 + 37) / 115][Stage 76:===========================================>          (92 + 23) / 115][Stage 76:================================================>    (105 + 10) / 115][Stage 76:=====================================================>(114 + 1) / 115]                                                                                [Stage 77:==================================>                   (74 + 42) / 116][Stage 77:==========================================>           (91 + 25) / 116][Stage 77:===============================================>     (104 + 12) / 116][Stage 77:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.00726142 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=141", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=141,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372275421 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:======================================>               (83 + 32) / 115][Stage 78:==========================================>           (90 + 25) / 115][Stage 78:===============================================>     (102 + 13) / 115][Stage 78:=====================================================>(114 + 1) / 115]                                                                                [Stage 79:======================================>               (83 + 33) / 116][Stage 79:==========================================>           (91 + 25) / 116][Stage 79:============================================>         (96 + 20) / 116][Stage 79:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.676050179 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=43", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=43,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439041543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (62 + 58) / 120][Stage 80:===============================>                      (69 + 51) / 120][Stage 80:==========================================>           (95 + 25) / 120][Stage 80:===================================================>  (114 + 6) / 120]                                                                                [Stage 81:============================>                         (64 + 57) / 121][Stage 81:==================================>                   (77 + 44) / 121][Stage 81:===========================================>         (100 + 21) / 121][Stage 81:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 2.983517604 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=229", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=229,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432360941 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==========================>                           (60 + 61) / 121][Stage 82:============================>                         (63 + 58) / 121][Stage 82:==================================>                   (77 + 44) / 121][Stage 82:============================================>        (101 + 20) / 121][Stage 82:====================================================> (117 + 4) / 121][Stage 82:=====================================================>(120 + 1) / 121]                                                                                [Stage 83:===========================>                          (61 + 61) / 122][Stage 83:==============================>                       (70 + 52) / 122][Stage 83:======================================>               (87 + 35) / 122][Stage 83:==============================================>      (106 + 16) / 122][Stage 83:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.217769105 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=7", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=7,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423043635 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:============================>                         (59 + 54) / 113][Stage 84:=============================>                        (62 + 51) / 113][Stage 84:=====================================>                (78 + 35) / 113][Stage 84:==============================================>       (97 + 16) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:============================>                         (61 + 53) / 114][Stage 85:===================================>                  (74 + 40) / 114][Stage 85:==============================================>       (99 + 15) / 114][Stage 85:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.255663774 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=108,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395249863 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===============================>                      (67 + 48) / 115][Stage 86:======================================>               (81 + 34) / 115][Stage 86:==============================================>       (99 + 16) / 115][Stage 86:====================================================> (112 + 3) / 115]                                                                                [Stage 87:===================================>                  (77 + 39) / 116][Stage 87:===========================================>          (93 + 23) / 116][Stage 87:===================================================>  (110 + 6) / 116][Stage 87:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.81604838 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=237", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=237,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427544993 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (60 + 60) / 120][Stage 88:=============================>                        (66 + 54) / 120][Stage 88:========================================>             (91 + 29) / 120][Stage 88:===============================================>     (108 + 12) / 120][Stage 88:=====================================================>(119 + 1) / 120]                                                                                [Stage 89:=============================>                        (65 + 56) / 121][Stage 89:===================================>                  (80 + 41) / 121][Stage 89:============================================>        (101 + 20) / 121][Stage 89:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.045740939 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=62", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=62,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388515779 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:=================================>                    (73 + 45) / 118][Stage 90:=====================================>                (81 + 37) / 118][Stage 90:============================================>         (97 + 21) / 118][Stage 90:==================================================>   (110 + 8) / 118]                                                                                [Stage 91:==================================>                   (75 + 44) / 119][Stage 91:===================================>                  (79 + 40) / 119][Stage 91:=======================================>              (88 + 31) / 119][Stage 91:============================================>        (101 + 18) / 119][Stage 91:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.200855544 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=18", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=18,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42980655 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:============================>                         (64 + 57) / 121][Stage 92:=================================>                    (75 + 46) / 121][Stage 92:==========================================>           (95 + 26) / 121][Stage 92:===================================================>  (115 + 6) / 121]                                                                                [Stage 93:===========================>                          (61 + 61) / 122][Stage 93:============================>                         (65 + 57) / 122][Stage 93:======================================>               (88 + 34) / 122][Stage 93:==================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.019920022 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=197", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=197,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415973323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (60 + 60) / 120][Stage 94:===========================>                          (62 + 58) / 120][Stage 94:==================================>                   (76 + 44) / 120][Stage 94:=========================================>            (92 + 28) / 120][Stage 94:====================================================> (116 + 4) / 120]                                                                                [Stage 95:=============================>                        (65 + 56) / 121][Stage 95:=====================================>                (84 + 37) / 121][Stage 95:============================================>        (102 + 19) / 121][Stage 95:====================================================> (117 + 4) / 121][Stage 95:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.181030461 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=124", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=124,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414217885 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (60 + 60) / 120][Stage 96:=============================>                        (65 + 55) / 120][Stage 96:====================================>                 (80 + 40) / 120][Stage 96:==============================================>      (105 + 15) / 120]                                                                                [Stage 97:=============================>                        (65 + 56) / 121][Stage 97:=================================>                    (75 + 46) / 121][Stage 97:=========================================>            (93 + 28) / 121][Stage 97:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 2.890354974 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=147", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=147,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4070102 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:============================>                         (59 + 54) / 113][Stage 98:=============================>                        (62 + 51) / 113][Stage 98:======================================>               (81 + 32) / 113][Stage 98:==================================================>   (105 + 8) / 113][Stage 98:=====================================================>(111 + 2) / 113]                                                                                [Stage 99:============================>                         (60 + 54) / 114][Stage 99:=============================>                        (63 + 51) / 114][Stage 99:=====================================>                (79 + 35) / 114][Stage 99:==============================================>      (100 + 14) / 114][Stage 99:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.182644431 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376574245 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:=================================>                   (72 + 41) / 113][Stage 100:======================================>              (83 + 30) / 113][Stage 100:=============================================>       (97 + 16) / 113][Stage 100:=================================================>   (106 + 7) / 113][Stage 100:===================================================> (109 + 4) / 113][Stage 100:====================================================>(112 + 1) / 113]                                                                                [Stage 101:=================================>                   (72 + 42) / 114][Stage 101:=======================================>             (85 + 29) / 114][Stage 101:=============================================>       (97 + 17) / 114][Stage 101:==================================================>  (109 + 5) / 114][Stage 101:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.205092621 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=93", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=93,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411813579 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 61) / 121][Stage 102:=============================>                       (68 + 53) / 121][Stage 102:======================================>              (87 + 34) / 121][Stage 102:==============================================>     (109 + 12) / 121][Stage 102:====================================================>(120 + 1) / 121]                                                                                [Stage 103:==========================>                          (61 + 61) / 122][Stage 103:=============================>                       (69 + 53) / 122][Stage 103:====================================>                (85 + 37) / 122][Stage 103:============================================>       (105 + 17) / 122][Stage 103:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.271776747 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=31", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=31,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392776127 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===============================>                     (68 + 47) / 115][Stage 104:=========================================>           (90 + 25) / 115][Stage 104:=================================================>   (108 + 7) / 115][Stage 104:====================================================>(114 + 1) / 115]                                                                                [Stage 105:===============================>                     (70 + 46) / 116][Stage 105:====================================>                (79 + 37) / 116][Stage 105:=============================================>       (99 + 17) / 116][Stage 105:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.802106958 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=125", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=125,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444785112 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 60) / 120][Stage 106:==============================>                      (70 + 50) / 120][Stage 106:=======================================>             (90 + 30) / 120][Stage 106:=================================================>   (112 + 8) / 120][Stage 106:===================================================> (117 + 3) / 120]                                                                                [Stage 107:=============================>                       (67 + 54) / 121][Stage 107:==================================>                  (78 + 43) / 121][Stage 107:==========================================>         (100 + 21) / 121][Stage 107:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.055847985 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39121291 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==================================>                  (74 + 41) / 115][Stage 108:=========================================>           (89 + 26) / 115][Stage 108:==============================================>     (103 + 12) / 115][Stage 108:====================================================>(113 + 2) / 115]                                                                                [Stage 109:====================================>                (79 + 37) / 116][Stage 109:==========================================>          (93 + 23) / 116][Stage 109:============================================>       (100 + 16) / 116][Stage 109:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.925731987 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=218", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=218,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356847141 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:====================================>                (77 + 36) / 113][Stage 110:==========================================>          (91 + 22) / 113][Stage 110:=============================================>       (96 + 17) / 113][Stage 110:=================================================>   (106 + 7) / 113][Stage 110:====================================================>(112 + 1) / 113]                                                                                [Stage 111:========================================>            (88 + 26) / 114][Stage 111:==============================================>      (99 + 15) / 114][Stage 111:===============================================>    (104 + 10) / 114][Stage 111:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.115715339 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=50", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=50,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402298486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:>                                                      (0 + 0) / 120][Stage 112:==========================>                          (60 + 60) / 120][Stage 112:==============================>                      (69 + 51) / 120][Stage 112:=======================================>             (89 + 31) / 120][Stage 112:===============================================>    (110 + 10) / 120][Stage 112:====================================================>(118 + 2) / 120]                                                                                [Stage 113:==========================>                          (61 + 60) / 121][Stage 113:=============================>                       (67 + 54) / 121][Stage 113:===================================>                 (80 + 41) / 121][Stage 113:=============================================>      (106 + 15) / 121][Stage 113:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.079384382 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=135", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=135,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366189822 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:================================>                    (72 + 46) / 118][Stage 114:===================================>                 (78 + 40) / 118][Stage 114:=============================================>      (104 + 14) / 118][Stage 114:===================================================> (114 + 4) / 118]                                                                                [Stage 115:================================>                    (73 + 46) / 119][Stage 115:=====================================>               (84 + 35) / 119][Stage 115:============================================>       (102 + 17) / 119][Stage 115:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 2.894977698 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=239", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=239,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355256922 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:====================================>                (77 + 36) / 113][Stage 116:===========================================>         (92 + 21) / 113][Stage 116:==============================================>      (99 + 14) / 113][Stage 116:=================================================>   (106 + 7) / 113]                                                                                [Stage 117:====================================>                (79 + 35) / 114][Stage 117:=========================================>           (90 + 24) / 114][Stage 117:==============================================>     (103 + 11) / 114][Stage 117:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.927883122 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=111", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=111,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.507420863 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:================================>                    (73 + 45) / 118][Stage 118:==================================>                  (77 + 41) / 118][Stage 118:======================================>              (85 + 33) / 118][Stage 118:============================================>        (99 + 19) / 118][Stage 118:==================================================>  (113 + 5) / 118][Stage 118:====================================================>(117 + 1) / 118]                                                                                [Stage 119:================================>                    (73 + 46) / 119][Stage 119:=================================>                   (75 + 44) / 119][Stage 119:====================================>                (83 + 36) / 119][Stage 119:=========================================>           (94 + 25) / 119][Stage 119:==============================================>     (106 + 13) / 119][Stage 119:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.571591874 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=155", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=155,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365532691 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:================================>                    (73 + 45) / 118][Stage 120:=====================================>               (84 + 34) / 118][Stage 120:===========================================>         (97 + 21) / 118][Stage 120:==================================================>  (112 + 6) / 118]                                                                                [Stage 121:===================================>                 (79 + 40) / 119][Stage 121:========================================>            (92 + 27) / 119][Stage 121:=============================================>      (103 + 16) / 119][Stage 121:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 2.928915369 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=186", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=186,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383960575 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (59 + 54) / 113][Stage 122:==============================>                      (65 + 48) / 113][Stage 122:====================================>                (77 + 36) / 113][Stage 122:===========================================>         (92 + 21) / 113][Stage 122:====================================================>(111 + 2) / 113]                                                                                [Stage 123:===========================>                         (60 + 54) / 114][Stage 123:==============================>                      (66 + 48) / 114][Stage 123:====================================>                (78 + 36) / 114][Stage 123:============================================>        (95 + 19) / 114][Stage 123:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.157311901 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=92", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=92,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404041093 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 61) / 121][Stage 124:===========================>                         (62 + 59) / 121][Stage 124:================================>                    (75 + 46) / 121][Stage 124:===========================================>        (102 + 19) / 121][Stage 124:===================================================> (117 + 4) / 121]                                                                                [Stage 125:==========================>                          (62 + 60) / 122][Stage 125:================================>                    (74 + 48) / 122][Stage 125:===========================================>        (102 + 20) / 122][Stage 125:==================================================>  (117 + 5) / 122][Stage 125:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.202950178 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=20", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=20,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38587307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (59 + 54) / 113][Stage 126:================================>                    (70 + 43) / 113][Stage 126:=========================================>           (89 + 24) / 113][Stage 126:=================================================>   (106 + 7) / 113][Stage 126:===================================================> (109 + 4) / 113]                                                                                [Stage 127:============================>                        (61 + 53) / 114][Stage 127:==================================>                  (75 + 39) / 114][Stage 127:==============================================>      (99 + 15) / 114][Stage 127:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.075324445 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=157", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=157,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372866472 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===================================>                 (75 + 38) / 113][Stage 128:======================================>              (82 + 31) / 113][Stage 128:===========================================>         (93 + 20) / 113][Stage 128:=================================================>   (105 + 8) / 113][Stage 128:====================================================>(111 + 2) / 113]                                                                                [Stage 129:=====================================>               (80 + 34) / 114][Stage 129:==========================================>          (92 + 22) / 114][Stage 129:==============================================>     (103 + 11) / 114][Stage 129:===================================================> (110 + 4) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.133850217 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37398748 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===============================>                     (68 + 47) / 115][Stage 130:=====================================>               (82 + 33) / 115][Stage 130:==========================================>          (93 + 22) / 115][Stage 130:=================================================>   (107 + 8) / 115][Stage 130:====================================================>(114 + 1) / 115]                                                                                [Stage 131:===============================>                     (70 + 46) / 116][Stage 131:=====================================>               (83 + 33) / 116][Stage 131:============================================>       (100 + 16) / 116][Stage 131:===================================================> (113 + 3) / 116][Stage 131:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.972459984 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=24", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=24,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335204772 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:=====================================>               (81 + 34) / 115][Stage 132:=======================================>             (85 + 30) / 115][Stage 132:=========================================>           (91 + 24) / 115][Stage 132:===============================================>    (105 + 10) / 115][Stage 132:====================================================>(113 + 2) / 115]                                                                                [Stage 133:=====================================>               (83 + 33) / 116][Stage 133:===========================================>         (95 + 21) / 116][Stage 133:===============================================>    (106 + 10) / 116][Stage 133:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.081217724 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=188", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=188,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337684293 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=====================================>               (82 + 33) / 115][Stage 134:=========================================>           (89 + 26) / 115][Stage 134:==============================================>     (102 + 13) / 115][Stage 134:===================================================> (112 + 3) / 115]                                                                                [Stage 135:=====================================>               (82 + 34) / 116][Stage 135:==========================================>          (92 + 24) / 116][Stage 135:============================================>       (100 + 16) / 116][Stage 135:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.581103271 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380186232 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (59 + 54) / 113][Stage 136:================================>                    (69 + 44) / 113][Stage 136:========================================>            (87 + 26) / 113][Stage 136:=================================================>   (106 + 7) / 113][Stage 136:====================================================>(112 + 1) / 113]                                                                                [Stage 137:===========================>                         (60 + 54) / 114][Stage 137:=============================>                       (63 + 51) / 114][Stage 137:==================================>                  (74 + 40) / 114][Stage 137:==========================================>          (91 + 23) / 114][Stage 137:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.100746757 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=152", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=152,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.490983578 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (58 + 55) / 113][Stage 138:==============================>                      (65 + 48) / 113][Stage 138:======================================>              (83 + 30) / 113][Stage 138:===============================================>    (103 + 10) / 113][Stage 138:====================================================>(111 + 2) / 113][Stage 138:====================================================>(112 + 1) / 113]                                                                                [Stage 139:===========================>                         (60 + 54) / 114][Stage 139:================================>                    (69 + 45) / 114][Stage 139:=======================================>             (84 + 30) / 114][Stage 139:===============================================>    (104 + 10) / 114][Stage 139:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.220058889 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351919997 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:====================================>                (78 + 35) / 113][Stage 140:==========================================>          (90 + 23) / 113][Stage 140:=============================================>       (98 + 15) / 113][Stage 140:===================================================> (109 + 4) / 113]                                                                                [Stage 141:=====================================>               (80 + 34) / 114][Stage 141:===========================================>         (94 + 20) / 114][Stage 141:================================================>    (105 + 9) / 114][Stage 141:==================================================>  (108 + 6) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.259153745 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369679874 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:====================================>                (80 + 35) / 115][Stage 142:===========================================>         (94 + 21) / 115][Stage 142:===================================================> (111 + 4) / 115][Stage 142:====================================================>(114 + 1) / 115]                                                                                [Stage 143:=================================>                   (74 + 42) / 116][Stage 143:=========================================>           (91 + 25) / 116][Stage 143:=============================================>      (102 + 14) / 116][Stage 143:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.967072191 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361136836 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:================================>                    (72 + 46) / 118][Stage 144:===================================>                 (78 + 40) / 118][Stage 144:============================================>       (102 + 16) / 118][Stage 144:=================================================>   (111 + 7) / 118]                                                                                [Stage 145:================================>                    (73 + 46) / 119][Stage 145:===================================>                 (80 + 39) / 119][Stage 145:========================================>            (91 + 28) / 119][Stage 145:===============================================>    (109 + 10) / 119][Stage 145:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.069445073 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=211", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=211,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38081997 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==================================>                  (74 + 41) / 115][Stage 146:========================================>            (87 + 28) / 115][Stage 146:=============================================>      (101 + 14) / 115][Stage 146:===================================================> (111 + 4) / 115][Stage 146:====================================================>(114 + 1) / 115]                                                                                [Stage 147:====================================>                (79 + 37) / 116][Stage 147:==========================================>          (92 + 24) / 116][Stage 147:===============================================>    (106 + 10) / 116][Stage 147:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.211472466 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=105", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=105,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40450664 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (60 + 60) / 120][Stage 148:============================>                        (64 + 56) / 120][Stage 148:===================================>                 (81 + 39) / 120][Stage 148:==============================================>     (108 + 12) / 120][Stage 148:====================================================>(119 + 1) / 120]                                                                                [Stage 149:==========================>                          (61 + 60) / 121][Stage 149:============================>                        (66 + 55) / 121][Stage 149:===================================>                 (82 + 39) / 121][Stage 149:==============================================>     (109 + 12) / 121][Stage 149:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.184965418 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=231", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=231,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380705187 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (59 + 54) / 113][Stage 150:===============================>                     (67 + 46) / 113][Stage 150:=========================================>           (89 + 24) / 113][Stage 150:===============================================>    (103 + 10) / 113][Stage 150:====================================================>(112 + 1) / 113]                                                                                [Stage 151:============================>                        (61 + 53) / 114][Stage 151:=================================>                   (73 + 41) / 114][Stage 151:===========================================>         (94 + 20) / 114][Stage 151:===================================================> (111 + 3) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.222254977 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=198", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=198,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387818028 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (59 + 54) / 113][Stage 152:============================>                        (61 + 52) / 113][Stage 152:=================================>                   (72 + 41) / 113][Stage 152:===========================================>         (93 + 20) / 113][Stage 152:==================================================>  (108 + 5) / 113][Stage 152:====================================================>(112 + 1) / 113]                                                                                [Stage 153:=============================>                       (63 + 51) / 114][Stage 153:==================================>                  (75 + 39) / 114][Stage 153:=============================================>       (98 + 16) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.277083433 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=195", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=195,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392312286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 61) / 121][Stage 154:============================>                        (65 + 56) / 121][Stage 154:=================================>                   (77 + 44) / 121][Stage 154:========================================>            (92 + 29) / 121][Stage 154:==================================================>  (116 + 5) / 121]                                                                                [Stage 155:============================>                        (65 + 57) / 122][Stage 155:==================================>                  (79 + 43) / 122][Stage 155:===========================================>        (103 + 19) / 122][Stage 155:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.010590233 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=151", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=151,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391219876 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:============================>                        (60 + 53) / 113][Stage 156:===============================>                     (67 + 46) / 113][Stage 156:=====================================>               (81 + 32) / 113][Stage 156:==============================================>     (100 + 13) / 113][Stage 156:====================================================>(111 + 2) / 113]                                                                                [Stage 157:===========================>                         (59 + 55) / 114][Stage 157:===============================>                     (67 + 47) / 114][Stage 157:=======================================>             (84 + 30) / 114][Stage 157:=============================================>      (100 + 14) / 114][Stage 157:====================================================>(112 + 2) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.244665221 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=153", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=153,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366502875 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:================================>                    (72 + 46) / 118][Stage 158:=================================>                   (75 + 43) / 118][Stage 158:=======================================>             (89 + 29) / 118][Stage 158:=============================================>      (103 + 15) / 118][Stage 158:==================================================>  (112 + 6) / 118]                                                                                [Stage 159:==================================>                  (77 + 42) / 119][Stage 159:======================================>              (87 + 32) / 119][Stage 159:============================================>       (102 + 17) / 119][Stage 159:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 2.942374885 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=79", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=79,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348561074 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:=================================>                   (72 + 41) / 113][Stage 160:=======================================>             (85 + 28) / 113][Stage 160:=============================================>       (97 + 16) / 113][Stage 160:=================================================>   (105 + 8) / 113][Stage 160:====================================================>(111 + 2) / 113]                                                                                [Stage 161:====================================>                (79 + 35) / 114][Stage 161:==========================================>          (92 + 22) / 114][Stage 161:==============================================>     (103 + 11) / 114][Stage 161:==================================================>  (108 + 6) / 114][Stage 161:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.084977561 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3966663 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 60) / 120][Stage 162:============================>                        (64 + 56) / 120][Stage 162:==================================>                  (78 + 42) / 120][Stage 162:===========================================>        (101 + 19) / 120][Stage 162:====================================================>(119 + 1) / 120]                                                                                [Stage 163:==========================>                          (61 + 60) / 121][Stage 163:==============================>                      (69 + 52) / 121][Stage 163:=======================================>             (90 + 31) / 121][Stage 163:===============================================>    (111 + 10) / 121]                                                                                Time elapsed: 2.920660552 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=15", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=15,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379046762 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (59 + 54) / 113][Stage 164:=============================>                       (63 + 50) / 113][Stage 164:===================================>                 (75 + 38) / 113][Stage 164:=============================================>       (97 + 16) / 113][Stage 164:===================================================> (110 + 3) / 113][Stage 164:====================================================>(111 + 2) / 113]                                                                                [Stage 165:===========================>                         (59 + 55) / 114][Stage 165:============================>                        (62 + 52) / 114][Stage 165:=========================================>           (89 + 25) / 114][Stage 165:================================================>    (105 + 9) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.305647295 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347154098 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===================================>                 (76 + 37) / 113][Stage 166:==========================================>          (90 + 23) / 113][Stage 166:==============================================>     (101 + 12) / 113][Stage 166:===================================================> (109 + 4) / 113]                                                                                [Stage 167:=====================================>               (81 + 33) / 114][Stage 167:=========================================>           (90 + 24) / 114][Stage 167:==============================================>     (102 + 12) / 114][Stage 167:===================================================> (110 + 4) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.986648616 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=183", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=183,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349776 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:====================================>                (80 + 35) / 115][Stage 168:======================================>              (84 + 31) / 115][Stage 168:=============================================>      (100 + 15) / 115][Stage 168:==================================================>  (109 + 6) / 115]                                                                                [Stage 169:=======================================>             (87 + 29) / 116][Stage 169:===========================================>         (96 + 20) / 116][Stage 169:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.615212734 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=238", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=238,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35212828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:======================================>              (83 + 30) / 113][Stage 170:==========================================>          (90 + 23) / 113][Stage 170:==============================================>     (101 + 12) / 113][Stage 170:====================================================>(111 + 2) / 113][Stage 170:====================================================>(112 + 1) / 113]                                                                                [Stage 171:=======================================>             (85 + 29) / 114][Stage 171:============================================>        (95 + 19) / 114][Stage 171:=================================================>   (107 + 7) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.120615882 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=220", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=220,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380995795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=================================>                   (73 + 42) / 115][Stage 172:=========================================>           (89 + 26) / 115][Stage 172:===============================================>    (105 + 10) / 115][Stage 172:===================================================> (111 + 4) / 115][Stage 172:====================================================>(114 + 1) / 115]                                                                                [Stage 173:===============================>                     (69 + 47) / 116][Stage 173:=====================================>               (83 + 33) / 116][Stage 173:===========================================>         (96 + 20) / 116][Stage 173:==================================================>  (110 + 6) / 116][Stage 173:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.250945145 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39190935 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (59 + 54) / 113][Stage 174:============================>                        (61 + 52) / 113][Stage 174:==================================>                  (73 + 40) / 113][Stage 174:==========================================>          (90 + 23) / 113][Stage 174:================================================>    (104 + 9) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:=============================>                       (64 + 50) / 114][Stage 175:===================================>                 (77 + 37) / 114][Stage 175:==========================================>          (92 + 22) / 114][Stage 175:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.255520333 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=3", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=3,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.330479745 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:====================================>                (80 + 35) / 115][Stage 176:=======================================>             (86 + 29) / 115][Stage 176:============================================>        (97 + 18) / 115][Stage 176:================================================>    (106 + 9) / 115][Stage 176:====================================================>(114 + 1) / 115]                                                                                [Stage 177:=====================================>               (83 + 33) / 116][Stage 177:=========================================>           (90 + 26) / 116][Stage 177:=============================================>      (101 + 15) / 116][Stage 177:===================================================> (112 + 4) / 116][Stage 177:====================================================>(114 + 2) / 116][Stage 177:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.433394955 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=216", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=216,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335321566 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=====================================>               (82 + 33) / 115][Stage 178:=======================================>             (86 + 29) / 115][Stage 178:============================================>        (97 + 18) / 115][Stage 178:==================================================>  (110 + 5) / 115][Stage 178:====================================================>(114 + 1) / 115]                                                                                [Stage 179:========================================>            (88 + 28) / 116][Stage 179:==========================================>          (92 + 24) / 116][Stage 179:===============================================>    (106 + 10) / 116][Stage 179:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.850910892 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=78", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=78,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343424597 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=====================================>               (82 + 33) / 115][Stage 180:========================================>            (88 + 27) / 115][Stage 180:=============================================>       (99 + 16) / 115][Stage 180:===============================================>    (105 + 10) / 115][Stage 180:===================================================> (111 + 4) / 115][Stage 180:====================================================>(114 + 1) / 115]                                                                                [Stage 181:======================================>              (84 + 32) / 116][Stage 181:==========================================>          (94 + 22) / 116][Stage 181:=================================================>   (108 + 8) / 116][Stage 181:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.266514196 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=223", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=223,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451808813 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (60 + 61) / 121][Stage 182:=============================>                       (67 + 54) / 121][Stage 182:=====================================>               (85 + 36) / 121][Stage 182:==============================================>     (109 + 12) / 121][Stage 182:====================================================>(119 + 2) / 121]                                                                                [Stage 183:==========================>                          (61 + 61) / 122][Stage 183:=============================>                       (67 + 55) / 122][Stage 183:=====================================>               (87 + 35) / 122][Stage 183:=============================================>      (106 + 16) / 122][Stage 183:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 2.997835889 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=129", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=129,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352814577 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=====================================>               (81 + 32) / 113][Stage 184:===========================================>         (92 + 21) / 113][Stage 184:==============================================>     (102 + 11) / 113][Stage 184:==================================================>  (108 + 5) / 113]                                                                                [Stage 185:===================================>                 (77 + 37) / 114][Stage 185:=========================================>           (90 + 24) / 114][Stage 185:=============================================>      (100 + 14) / 114][Stage 185:===================================================> (110 + 4) / 114][Stage 185:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.067487914 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=189", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=189,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386810815 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==================================>                  (74 + 41) / 115][Stage 186:=======================================>             (86 + 29) / 115][Stage 186:==============================================>     (102 + 13) / 115][Stage 186:====================================================>(114 + 1) / 115]                                                                                [Stage 187:===============================>                     (68 + 48) / 116][Stage 187:====================================>                (80 + 36) / 116][Stage 187:==========================================>          (94 + 22) / 116][Stage 187:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.765329775 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=96", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=96,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344062918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:======================================>              (83 + 32) / 115][Stage 188:=========================================>           (89 + 26) / 115][Stage 188:=================================================>   (108 + 7) / 115][Stage 188:===================================================> (111 + 4) / 115]                                                                                [Stage 189:=======================================>             (87 + 29) / 116][Stage 189:============================================>        (97 + 19) / 116][Stage 189:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.66832971 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=206", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=206,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368085968 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:=============================>                       (64 + 51) / 115][Stage 190:===================================>                 (77 + 38) / 115][Stage 190:==========================================>          (93 + 22) / 115][Stage 190:===============================================>    (104 + 11) / 115][Stage 190:===================================================> (112 + 3) / 115]                                                                                [Stage 191:=================================>                   (74 + 42) / 116][Stage 191:=========================================>           (91 + 25) / 116][Stage 191:=============================================>      (102 + 14) / 116][Stage 191:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.961199685 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=63", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=63,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400053249 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (62 + 58) / 120][Stage 192:================================>                    (74 + 46) / 120][Stage 192:==========================================>          (96 + 24) / 120][Stage 192:==================================================>  (115 + 5) / 120]                                                                                [Stage 193:==========================>                          (61 + 60) / 121][Stage 193:============================>                        (65 + 56) / 121][Stage 193:====================================>                (83 + 38) / 121][Stage 193:=============================================>      (107 + 14) / 121][Stage 193:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.914667125 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=162", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=162,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386307306 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==================================>                  (74 + 41) / 115][Stage 194:=========================================>           (89 + 26) / 115][Stage 194:==============================================>     (102 + 13) / 115][Stage 194:====================================================>(114 + 1) / 115]                                                                                [Stage 195:================================>                    (71 + 45) / 116][Stage 195:========================================>            (89 + 27) / 116][Stage 195:=============================================>      (102 + 14) / 116][Stage 195:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.666483967 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=11", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=11,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406431482 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (63 + 57) / 120][Stage 196:================================>                    (74 + 46) / 120][Stage 196:=======================================>             (90 + 30) / 120][Stage 196:=================================================>   (111 + 9) / 120]                                                                                [Stage 197:===========================>                         (63 + 58) / 121][Stage 197:=================================>                   (77 + 44) / 121][Stage 197:=========================================>           (94 + 27) / 121][Stage 197:===============================================>    (110 + 11) / 121]                                                                                Time elapsed: 3.195958464 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=161", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=161,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40975435 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==========================>                          (60 + 61) / 121][Stage 198:===============================>                     (73 + 48) / 121][Stage 198:========================================>            (93 + 28) / 121][Stage 198:==============================================>     (109 + 12) / 121]                                                                                [Stage 199:==========================>                          (62 + 60) / 122][Stage 199:================================>                    (75 + 47) / 122][Stage 199:=========================================>           (95 + 27) / 122][Stage 199:===============================================>    (112 + 10) / 122][Stage 199:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.064911938 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362951516 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:================================>                    (72 + 46) / 118][Stage 200:=================================>                   (75 + 43) / 118][Stage 200:==========================================>          (94 + 24) / 118][Stage 200:===================================================> (114 + 4) / 118][Stage 200:====================================================>(117 + 1) / 118]                                                                                [Stage 201:================================>                    (74 + 45) / 119][Stage 201:====================================>                (83 + 36) / 119][Stage 201:=========================================>           (93 + 26) / 119][Stage 201:===============================================>    (109 + 10) / 119][Stage 201:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.938118351 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m50.308s
user	11m27.104s
sys	0m28.924s
