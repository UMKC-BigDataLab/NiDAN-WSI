Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 16:16:11 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:16:25 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:16:25 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:16:26 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 16:16:28 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:16:38 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524161628-0567).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.438096473 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=========================>                             (53 + 62) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:=========================================>             (86 + 29) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:==========================>                            (56 + 60) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:==============================================>        (98 + 18) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:=====================================================> (112 + 4) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.535555334 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR   partitionIndex = 177  OR  partitionIndex = 178 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.685953939 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:============================>                          (61 + 57) / 118][Stage 2:=============================>                         (64 + 54) / 118][Stage 2:===============================>                       (68 + 50) / 118][Stage 2:==================================>                    (74 + 44) / 118][Stage 2:===================================>                   (76 + 42) / 118][Stage 2:=====================================>                 (81 + 37) / 118][Stage 2:=======================================>               (84 + 34) / 118][Stage 2:=========================================>             (89 + 29) / 118][Stage 2:=============================================>        (100 + 18) / 118][Stage 2:================================================>     (107 + 11) / 118]                                                                                [Stage 3:=================================>                     (73 + 46) / 119][Stage 3:====================================>                  (79 + 40) / 119][Stage 3:=====================================>                 (81 + 38) / 119][Stage 3:=======================================>               (86 + 33) / 119][Stage 3:==========================================>            (91 + 28) / 119][Stage 3:==============================================>       (103 + 16) / 119][Stage 3:=================================================>    (109 + 10) / 119][Stage 3:=====================================================> (115 + 4) / 119][Stage 3:======================================================>(117 + 2) / 119]                                                                                Time elapsed: 5.560067617 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR   partitionIndex = 226  OR  partitionIndex = 227 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 226  OR  partitionIndex = 227 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.718247166 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=========================>                             (53 + 60) / 113][Stage 4:===========================>                           (57 + 56) / 113][Stage 4:============================>                          (59 + 54) / 113][Stage 4:==============================>                        (62 + 51) / 113][Stage 4:====================================>                  (74 + 39) / 113][Stage 4:==============================================>        (96 + 17) / 113][Stage 4:====================================================>  (108 + 5) / 113]                                                                                [Stage 5:===========================>                           (57 + 57) / 114][Stage 5:============================>                          (60 + 54) / 114][Stage 5:===============================>                       (65 + 49) / 114][Stage 5:=================================>                     (70 + 44) / 114][Stage 5:========================================>              (83 + 31) / 114][Stage 5:==============================================>        (97 + 17) / 114][Stage 5:=====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.507921645 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 216  OR   partitionIndex = 229  OR  partitionIndex = 230 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 229  OR  partitionIndex = 230 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.603716211 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:================================>                      (70 + 48) / 118][Stage 6:=================================>                     (72 + 46) / 118][Stage 6:==================================>                    (74 + 44) / 118][Stage 6:=====================================>                 (80 + 38) / 118][Stage 6:=========================================>             (88 + 30) / 118][Stage 6:===========================================>           (93 + 25) / 118][Stage 6:==============================================>       (101 + 17) / 118][Stage 6:====================================================>  (112 + 6) / 118]                                                                                [Stage 7:=================================>                     (72 + 47) / 119][Stage 7:===================================>                   (77 + 42) / 119][Stage 7:=======================================>               (85 + 34) / 119][Stage 7:=========================================>             (89 + 30) / 119][Stage 7:============================================>          (96 + 23) / 119][Stage 7:================================================>     (107 + 12) / 119][Stage 7:====================================================>  (113 + 6) / 119][Stage 7:=====================================================> (115 + 4) / 119][Stage 7:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.336993945 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 164  OR   partitionIndex = 177  OR  partitionIndex = 178 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 177  OR  partitionIndex = 178 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.528819212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=====================================>                 (79 + 36) / 115][Stage 8:=======================================>               (82 + 33) / 115][Stage 8:==========================================>            (88 + 27) / 115][Stage 8:=============================================>         (96 + 19) / 115][Stage 8:=================================================>    (105 + 10) / 115][Stage 8:=====================================================> (111 + 4) / 115]                                                                                [Stage 9:=======================================>               (83 + 33) / 116][Stage 9:==========================================>            (90 + 26) / 116][Stage 9:===============================================>      (102 + 14) / 116][Stage 9:=================================================>    (106 + 10) / 116][Stage 9:=====================================================> (112 + 4) / 116][Stage 9:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.935575981 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR   partitionIndex = 233  OR  partitionIndex = 234 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.597155641 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=======================>                              (50 + 63) / 113][Stage 10:===========================>                          (57 + 56) / 113][Stage 10:==============================>                       (63 + 50) / 113][Stage 10:======================================>               (81 + 32) / 113][Stage 10:=============================================>        (95 + 18) / 113][Stage 10:===================================================>  (107 + 6) / 113][Stage 10:=====================================================>(111 + 2) / 113]                                                                                [Stage 11:===========================>                          (57 + 57) / 114][Stage 11:=============================>                        (63 + 51) / 114][Stage 11:====================================>                 (77 + 37) / 114][Stage 11:===========================================>          (91 + 23) / 114][Stage 11:===============================================>     (103 + 11) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.845428425 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 161  OR   partitionIndex = 175  OR  partitionIndex = 176 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.596731102 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (58 + 55) / 113][Stage 12:=============================>                        (62 + 51) / 113][Stage 12:=====================================>                (78 + 35) / 113][Stage 12:===========================================>          (91 + 22) / 113][Stage 12:===============================================>      (99 + 14) / 113][Stage 12:=====================================================>(112 + 1) / 113]                                                                                [Stage 13:===========================>                          (58 + 56) / 114][Stage 13:============================>                         (60 + 54) / 114][Stage 13:====================================>                 (76 + 38) / 114][Stage 13:==============================================>       (98 + 16) / 114][Stage 13:====================================================> (110 + 4) / 114][Stage 13:====================================================> (111 + 3) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.946398906 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 111  OR  partitionIndex = 112 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 111  OR  partitionIndex = 112 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.521759524 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (57 + 56) / 113][Stage 14:=============================>                        (61 + 52) / 113][Stage 14:====================================>                 (76 + 37) / 113][Stage 14:==========================================>           (89 + 24) / 113][Stage 14:===============================================>     (101 + 12) / 113][Stage 14:===================================================>  (108 + 5) / 113]                                                                                [Stage 15:============================>                         (60 + 54) / 114][Stage 15:===============================>                      (67 + 47) / 114][Stage 15:============================================>         (94 + 20) / 114][Stage 15:===============================================>     (102 + 12) / 114][Stage 15:===================================================>  (108 + 6) / 114][Stage 15:====================================================> (111 + 3) / 114][Stage 15:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.357097396 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR   partitionIndex = 147  OR  partitionIndex = 148 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.553240951 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:============================>                         (59 + 54) / 113][Stage 16:================================>                     (67 + 46) / 113][Stage 16:========================================>             (85 + 28) / 113][Stage 16:===============================================>      (99 + 14) / 113][Stage 16:==================================================>   (106 + 7) / 113]                                                                                [Stage 17:===========================>                          (59 + 55) / 114][Stage 17:==============================>                       (65 + 49) / 114][Stage 17:========================================>             (86 + 28) / 114][Stage 17:=============================================>        (95 + 19) / 114][Stage 17:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.727046755 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR   partitionIndex = 201  OR  partitionIndex = 202 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478952471 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:=================================>                    (71 + 42) / 113][Stage 18:====================================>                 (77 + 36) / 113][Stage 18:===========================================>          (90 + 23) / 113][Stage 18:===============================================>      (99 + 14) / 113][Stage 18:==================================================>   (106 + 7) / 113][Stage 18:====================================================> (109 + 4) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:=================================>                    (71 + 43) / 114][Stage 19:========================================>             (85 + 29) / 114][Stage 19:============================================>         (94 + 20) / 114][Stage 19:===============================================>     (102 + 12) / 114][Stage 19:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.641129074 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155  OR   partitionIndex = 169  OR  partitionIndex = 170 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439990454 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:=====================================>                (80 + 35) / 115][Stage 20:========================================>             (86 + 29) / 115][Stage 20:============================================>         (95 + 20) / 115][Stage 20:===================================================>  (109 + 6) / 115][Stage 20:===================================================>  (110 + 5) / 115][Stage 20:=====================================================>(114 + 1) / 115]                                                                                [Stage 21:======================================>               (82 + 34) / 116][Stage 21:========================================>             (86 + 30) / 116][Stage 21:===============================================>     (105 + 11) / 116][Stage 21:====================================================> (112 + 4) / 116][Stage 21:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.38694195 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR   partitionIndex = 203  OR  partitionIndex = 204 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493893597 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:============================>                         (59 + 54) / 113][Stage 22:=================================>                    (70 + 43) / 113][Stage 22:=========================================>            (86 + 27) / 113][Stage 22:==================================================>   (105 + 8) / 113][Stage 22:====================================================> (110 + 3) / 113]                                                                                [Stage 23:===========================>                          (59 + 55) / 114][Stage 23:==============================>                       (64 + 50) / 114][Stage 23:=======================================>              (84 + 30) / 114][Stage 23:===============================================>     (103 + 11) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.544727829 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR   partitionIndex = 163  OR  partitionIndex = 177 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49172666 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (58 + 55) / 113][Stage 24:=============================>                        (61 + 52) / 113][Stage 24:===================================>                  (74 + 39) / 113][Stage 24:===========================================>          (90 + 23) / 113][Stage 24:==================================================>   (106 + 7) / 113][Stage 24:=====================================================>(112 + 1) / 113]                                                                                [Stage 25:===========================>                          (59 + 55) / 114][Stage 25:===============================>                      (67 + 47) / 114][Stage 25:=======================================>              (83 + 31) / 114][Stage 25:===========================================>          (92 + 22) / 114][Stage 25:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.411379376 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR   partitionIndex = 229  OR  partitionIndex = 230 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447547308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:=====================================>                (78 + 35) / 113][Stage 26:==========================================>           (89 + 24) / 113][Stage 26:===============================================>     (101 + 12) / 113][Stage 26:====================================================> (109 + 4) / 113][Stage 26:=====================================================>(112 + 1) / 113]                                                                                [Stage 27:==================================>                   (73 + 41) / 114][Stage 27:========================================>             (85 + 29) / 114][Stage 27:==============================================>       (99 + 15) / 114][Stage 27:==================================================>   (107 + 7) / 114][Stage 27:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.186067119 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  pa rtitionIndex = 28  OR  partitionIndex = 29 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 28  OR  partitionIndex = 29 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448695327 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:=====================================>                (79 + 34) / 113][Stage 28:============================================>         (94 + 19) / 113][Stage 28:===============================================>     (101 + 12) / 113][Stage 28:==================================================>   (105 + 8) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:=======================================>              (84 + 30) / 114][Stage 29:===========================================>          (91 + 23) / 114][Stage 29:=============================================>        (97 + 17) / 114][Stage 29:===============================================>     (103 + 11) / 114][Stage 29:=================================================>    (105 + 9) / 114][Stage 29:==================================================>   (106 + 8) / 114][Stage 29:===================================================>  (108 + 6) / 114][Stage 29:===================================================>  (109 + 5) / 114][Stage 29:====================================================> (110 + 4) / 114][Stage 29:=====================================================>(112 + 2) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 8.083608072 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  part itionIndex = 21  OR  partitionIndex = 22 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.506928068 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:=============================>                        (65 + 56) / 121][Stage 30:=====================================>                (85 + 36) / 121][Stage 30:============================================>        (102 + 19) / 121][Stage 30:====================================================> (118 + 3) / 121][Stage 30:=====================================================>(120 + 1) / 121]                                                                                [Stage 31:===========================>                          (61 + 61) / 122][Stage 31:==============================>                       (68 + 54) / 122][Stage 31:=====================================>                (85 + 37) / 122][Stage 31:=============================================>       (105 + 17) / 122][Stage 31:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.550609592 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR   partitionIndex = 204  OR  partitionIndex = 205 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 204  OR  partitionIndex = 205 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407583692 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:=====================================>                (80 + 35) / 115][Stage 32:=======================================>              (85 + 30) / 115][Stage 32:==============================================>      (101 + 14) / 115][Stage 32:==================================================>   (108 + 7) / 115][Stage 32:====================================================> (111 + 4) / 115][Stage 32:====================================================> (112 + 3) / 115]                                                                                [Stage 33:=======================================>              (84 + 32) / 116][Stage 33:===========================================>          (93 + 23) / 116][Stage 33:================================================>    (106 + 10) / 116][Stage 33:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.685119438 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  pa rtitionIndex = 54  OR  partitionIndex = 55 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 54  OR  partitionIndex = 55 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446183292 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:================================>                     (72 + 46) / 118][Stage 34:===================================>                  (77 + 41) / 118][Stage 34:========================================>             (89 + 29) / 118][Stage 34:================================================>    (107 + 11) / 118][Stage 34:====================================================> (115 + 3) / 118]                                                                                [Stage 35:=================================>                    (73 + 46) / 119][Stage 35:===================================>                  (78 + 41) / 119][Stage 35:=======================================>              (88 + 31) / 119][Stage 35:============================================>         (98 + 21) / 119][Stage 35:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.535277721 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219  OR  partitionIndex = 220  OR   partitionIndex = 233  OR  partitionIndex = 234 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 233  OR  partitionIndex = 234 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.522225974 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==========================>                           (60 + 61) / 121][Stage 36:============================>                         (63 + 58) / 121][Stage 36:==================================>                   (77 + 44) / 121][Stage 36:=========================================>            (94 + 27) / 121][Stage 36:=================================================>    (112 + 9) / 121]                                                                                [Stage 37:===========================>                          (61 + 61) / 122][Stage 37:=============================>                        (67 + 55) / 122][Stage 37:====================================>                 (83 + 39) / 122][Stage 37:=============================================>       (104 + 18) / 122][Stage 37:===================================================>  (116 + 6) / 122][Stage 37:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.743657189 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  pa rtitionIndex = 105  OR  partitionIndex = 106 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429950911 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===================================>                  (75 + 38) / 113][Stage 38:==========================================>           (88 + 25) / 113][Stage 38:=============================================>        (96 + 17) / 113][Stage 38:===================================================>  (107 + 6) / 113]                                                                                [Stage 39:====================================>                 (76 + 38) / 114][Stage 39:=========================================>            (88 + 26) / 114][Stage 39:===============================================>     (102 + 12) / 114][Stage 39:===================================================>  (109 + 5) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.957030996 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  pa rtitionIndex = 109  OR  partitionIndex = 110 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486154034 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===============================>                      (68 + 47) / 115][Stage 40:====================================>                 (78 + 37) / 115][Stage 40:===========================================>          (92 + 23) / 115][Stage 40:===================================================>  (109 + 6) / 115]                                                                                [Stage 41:===================================>                  (76 + 40) / 116][Stage 41:========================================>             (87 + 29) / 116][Stage 41:===============================================>     (103 + 13) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.022181653 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195  OR   partitionIndex = 207  OR  partitionIndex = 208 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 207  OR  partitionIndex = 208 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425187657 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:======================================>               (81 + 34) / 115][Stage 42:========================================>             (86 + 29) / 115][Stage 42:============================================>         (94 + 21) / 115][Stage 42:==================================================>   (108 + 7) / 115]                                                                                [Stage 43:========================================>             (86 + 30) / 116][Stage 43:=============================================>        (97 + 19) / 116][Stage 43:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.703746349 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 156  OR   partitionIndex = 169  OR  partitionIndex = 170 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 169  OR  partitionIndex = 170 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440708562 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=================================>                    (70 + 43) / 113][Stage 44:======================================>               (81 + 32) / 113][Stage 44:==========================================>           (89 + 24) / 113][Stage 44:=============================================>        (96 + 17) / 113][Stage 44:==================================================>   (106 + 7) / 113][Stage 44:====================================================> (109 + 4) / 113][Stage 44:=====================================================>(112 + 1) / 113]                                                                                [Stage 45:===================================>                  (75 + 39) / 114][Stage 45:=======================================>              (83 + 31) / 114][Stage 45:============================================>         (94 + 20) / 114][Stage 45:===============================================>     (103 + 11) / 114][Stage 45:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.384635426 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21  OR  par titionIndex = 22  OR  partitionIndex = 34 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439492664 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (58 + 55) / 113][Stage 46:=============================>                        (62 + 51) / 113][Stage 46:==================================>                   (73 + 40) / 113][Stage 46:==============================================>       (98 + 15) / 113]                                                                                [Stage 47:============================>                         (60 + 54) / 114][Stage 47:===============================>                      (67 + 47) / 114][Stage 47:==========================================>           (89 + 25) / 114][Stage 47:===============================================>     (103 + 11) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.629603277 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  pa rtitionIndex = 25  OR  partitionIndex = 26 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446974777 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:============================>                         (59 + 54) / 113][Stage 48:==============================>                       (63 + 50) / 113][Stage 48:======================================>               (81 + 32) / 113][Stage 48:===============================================>     (102 + 11) / 113][Stage 48:====================================================> (110 + 3) / 113]                                                                                [Stage 49:=============================>                        (62 + 52) / 114][Stage 49:===================================>                  (75 + 39) / 114][Stage 49:=============================================>        (97 + 17) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.674098798 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  pa rtitionIndex = 30  OR  partitionIndex = 31 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.471652952 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (60 + 60) / 120][Stage 50:==============================>                       (67 + 53) / 120][Stage 50:========================================>             (89 + 31) / 120][Stage 50:==================================================>   (112 + 8) / 120]                                                                                [Stage 51:===========================>                          (61 + 60) / 121][Stage 51:=================================>                    (75 + 46) / 121][Stage 51:===========================================>          (97 + 24) / 121][Stage 51:==================================================>   (113 + 8) / 121][Stage 51:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.399646768 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159  OR  partitionIndex = 160  OR   partitionIndex = 173  OR  partitionIndex = 174 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476055088 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:============================>                         (63 + 57) / 120][Stage 52:================================>                     (72 + 48) / 120][Stage 52:=======================================>              (87 + 33) / 120][Stage 52:=============================================>       (104 + 16) / 120][Stage 52:===================================================>  (114 + 6) / 120]                                                                                [Stage 53:=============================>                        (66 + 55) / 121][Stage 53:==================================>                   (78 + 43) / 121][Stage 53:==========================================>           (96 + 25) / 121][Stage 53:================================================>    (111 + 10) / 121][Stage 53:=====================================================>(119 + 2) / 121][Stage 53:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.856224443 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR   partitionIndex = 177  OR  partitionIndex = 178 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 178 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441568205 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:============================>                         (59 + 54) / 113][Stage 54:===================================>                  (75 + 38) / 113][Stage 54:==============================================>       (97 + 16) / 113][Stage 54:=====================================================>(111 + 2) / 113]                                                                                [Stage 55:=============================>                        (62 + 52) / 114][Stage 55:===============================>                      (66 + 48) / 114][Stage 55:====================================>                 (77 + 37) / 114][Stage 55:===============================================>     (102 + 12) / 114][Stage 55:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.341102519 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR   partitionIndex = 138  OR  partitionIndex = 150 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425971021 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:============================>                         (59 + 54) / 113][Stage 56:=============================>                        (61 + 52) / 113][Stage 56:====================================>                 (76 + 37) / 113][Stage 56:==============================================>      (100 + 13) / 113][Stage 56:====================================================> (109 + 4) / 113][Stage 56:=====================================================>(112 + 1) / 113]                                                                                [Stage 57:============================>                         (60 + 54) / 114][Stage 57:================================>                     (68 + 46) / 114][Stage 57:========================================>             (86 + 28) / 114][Stage 57:===============================================>     (103 + 11) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.517906423 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 152  OR   partitionIndex = 165  OR  partitionIndex = 166 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 165  OR  partitionIndex = 166 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375091195 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:======================================>               (81 + 34) / 115][Stage 58:========================================>             (87 + 28) / 115][Stage 58:=============================================>        (97 + 18) / 115][Stage 58:===================================================>  (110 + 5) / 115][Stage 58:=====================================================>(114 + 1) / 115]                                                                                [Stage 59:======================================>               (82 + 34) / 116][Stage 59:========================================>             (88 + 28) / 116][Stage 59:================================================>    (106 + 10) / 116][Stage 59:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.784720762 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  pa rtitionIndex = 24  OR  partitionIndex = 25 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 24  OR  partitionIndex = 25 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462688006 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (62 + 58) / 120][Stage 60:================================>                     (73 + 47) / 120][Stage 60:=======================================>              (87 + 33) / 120][Stage 60:==============================================>      (105 + 15) / 120][Stage 60:===================================================>  (115 + 5) / 120]                                                                                [Stage 61:=============================>                        (66 + 55) / 121][Stage 61:==================================>                   (77 + 44) / 121][Stage 61:=========================================>            (92 + 29) / 121][Stage 61:=================================================>    (112 + 9) / 121]                                                                                Time elapsed: 3.503988048 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  pa rtitionIndex = 60  OR  partitionIndex = 68 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37047114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:======================================>               (82 + 33) / 115][Stage 62:=============================================>        (96 + 19) / 115][Stage 62:===================================================>  (109 + 6) / 115][Stage 62:====================================================> (112 + 3) / 115]                                                                                [Stage 63:========================================>             (88 + 28) / 116][Stage 63:==========================================>           (92 + 24) / 116][Stage 63:================================================>    (106 + 10) / 116][Stage 63:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.355612486 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR   partitionIndex = 150  OR  partitionIndex = 162 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454732635 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (60 + 60) / 120][Stage 64:==============================>                       (67 + 53) / 120][Stage 64:===================================>                  (79 + 41) / 120][Stage 64:===========================================>          (97 + 23) / 120][Stage 64:===================================================>  (114 + 6) / 120]                                                                                [Stage 65:============================>                         (63 + 58) / 121][Stage 65:================================>                     (73 + 48) / 121][Stage 65:=========================================>            (92 + 29) / 121][Stage 65:================================================>    (111 + 10) / 121][Stage 65:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.682274418 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 44  OR  pa rtitionIndex = 57  OR  partitionIndex = 58 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 57  OR  partitionIndex = 58 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435404196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (60 + 60) / 120][Stage 66:===============================>                      (69 + 51) / 120][Stage 66:=====================================>                (84 + 36) / 120][Stage 66:=============================================>       (104 + 16) / 120][Stage 66:=====================================================>(119 + 1) / 120]                                                                                [Stage 67:=============================>                        (66 + 55) / 121][Stage 67:====================================>                 (81 + 40) / 121][Stage 67:===========================================>         (100 + 21) / 121][Stage 67:===================================================>  (116 + 5) / 121][Stage 67:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.691209134 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 40  OR  pa rtitionIndex = 53  OR  partitionIndex = 54 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 53  OR  partitionIndex = 54 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.477317273 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:=====================================>                (79 + 34) / 113][Stage 68:===========================================>          (91 + 22) / 113][Stage 68:=============================================>        (96 + 17) / 113][Stage 68:==================================================>   (105 + 8) / 113]                                                                                [Stage 69:====================================>                 (78 + 36) / 114][Stage 69:=========================================>            (88 + 26) / 114][Stage 69:=============================================>        (97 + 17) / 114][Stage 69:==================================================>   (106 + 8) / 114][Stage 69:====================================================> (111 + 3) / 114][Stage 69:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.627471931 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  pa rtitionIndex = 49  OR  partitionIndex = 50 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441611191 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (58 + 55) / 113][Stage 70:=================================>                    (71 + 42) / 113][Stage 70:===========================================>          (90 + 23) / 113][Stage 70:=================================================>    (104 + 9) / 113]                                                                                [Stage 71:============================>                         (61 + 53) / 114][Stage 71:====================================>                 (77 + 37) / 114][Stage 71:============================================>         (94 + 20) / 114][Stage 71:==================================================>   (106 + 8) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.393883572 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  pa rtitionIndex = 38  OR  partitionIndex = 39 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40431797 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==================================>                   (72 + 41) / 113][Stage 72:========================================>             (85 + 28) / 113][Stage 72:=============================================>        (96 + 17) / 113][Stage 72:==============================================>      (100 + 13) / 113][Stage 72:=====================================================>(111 + 2) / 113]                                                                                [Stage 73:==================================>                   (73 + 41) / 114][Stage 73:========================================>             (85 + 29) / 114][Stage 73:===========================================>          (91 + 23) / 114][Stage 73:==============================================>      (101 + 13) / 114][Stage 73:===================================================>  (108 + 6) / 114][Stage 73:====================================================> (111 + 3) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.907198123 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR   partitionIndex = 114  OR  partitionIndex = 115 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 114  OR  partitionIndex = 115 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421710633 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:============================>                         (60 + 53) / 113][Stage 74:===================================>                  (75 + 38) / 113][Stage 74:=============================================>        (95 + 18) / 113][Stage 74:====================================================> (110 + 3) / 113]                                                                                [Stage 75:===========================>                          (59 + 55) / 114][Stage 75:==============================>                       (64 + 50) / 114][Stage 75:====================================>                 (78 + 36) / 114][Stage 75:==============================================>      (101 + 13) / 114][Stage 75:=================================================>    (105 + 9) / 114][Stage 75:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.548833787 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  pa rtitionIndex = 81  OR  partitionIndex = 82 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423276352 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:================================>                     (72 + 46) / 118][Stage 76:==================================>                   (75 + 43) / 118][Stage 76:=====================================>                (83 + 35) / 118][Stage 76:============================================>         (97 + 21) / 118][Stage 76:===============================================>     (106 + 12) / 118][Stage 76:=====================================================>(116 + 2) / 118]                                                                                [Stage 77:=================================>                    (74 + 45) / 119][Stage 77:=====================================>                (82 + 37) / 119][Stage 77:=========================================>            (91 + 28) / 119][Stage 77:=============================================>       (103 + 16) / 119][Stage 77:====================================================> (115 + 4) / 119][Stage 77:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.726424633 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 47  OR  partitionIndex = 48 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 47  OR  partitionIndex = 48 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397376059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:=================================>                    (74 + 44) / 118][Stage 78:=====================================>                (81 + 37) / 118][Stage 78:==========================================>           (92 + 26) / 118][Stage 78:==================================================>   (110 + 8) / 118]                                                                                [Stage 79:=================================>                    (73 + 46) / 119][Stage 79:===================================>                  (78 + 41) / 119][Stage 79:=======================================>              (88 + 31) / 119][Stage 79:=============================================>       (102 + 17) / 119][Stage 79:==================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.407740921 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR   partitionIndex = 171  OR  partitionIndex = 172 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372294425 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:==================================>                   (73 + 40) / 113][Stage 80:======================================>               (81 + 32) / 113][Stage 80:============================================>         (93 + 20) / 113][Stage 80:================================================>    (103 + 10) / 113][Stage 80:====================================================> (110 + 3) / 113]                                                                                [Stage 81:=======================================>              (84 + 30) / 114][Stage 81:===========================================>          (92 + 22) / 114][Stage 81:================================================>    (104 + 10) / 114][Stage 81:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.039076038 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52  OR  partitionIndex = 60  OR  pa rtitionIndex = 61  OR  partitionIndex = 75 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402737275 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==============================>                       (65 + 50) / 115][Stage 82:===================================>                  (76 + 39) / 115][Stage 82:============================================>         (94 + 21) / 115][Stage 82:===============================================>     (104 + 11) / 115][Stage 82:====================================================> (112 + 3) / 115]                                                                                [Stage 83:=================================>                    (73 + 43) / 116][Stage 83:========================================>             (86 + 30) / 116][Stage 83:============================================>         (96 + 20) / 116][Stage 83:===================================================>  (110 + 6) / 116][Stage 83:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.817895919 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  pa rtitionIndex = 50  OR  partitionIndex = 51 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 50  OR  partitionIndex = 51 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422745075 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (60 + 60) / 120][Stage 84:============================>                         (64 + 56) / 120][Stage 84:====================================>                 (82 + 38) / 120][Stage 84:============================================>        (101 + 19) / 120][Stage 84:=====================================================>(118 + 2) / 120]                                                                                [Stage 85:===========================>                          (61 + 60) / 121][Stage 85:==============================>                       (68 + 53) / 121][Stage 85:======================================>               (86 + 35) / 121][Stage 85:===================================================>  (115 + 6) / 121][Stage 85:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.218643667 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR   partitionIndex = 141  OR  partitionIndex = 142 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382658556 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:================================>                     (72 + 46) / 118][Stage 86:====================================>                 (80 + 38) / 118][Stage 86:========================================>             (89 + 29) / 118][Stage 86:==============================================>      (103 + 15) / 118][Stage 86:===================================================>  (113 + 5) / 118]                                                                                [Stage 87:=================================>                    (73 + 46) / 119][Stage 87:==================================>                   (77 + 42) / 119][Stage 87:=========================================>            (91 + 28) / 119][Stage 87:===============================================>     (107 + 12) / 119][Stage 87:====================================================> (116 + 3) / 119][Stage 87:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.604489966 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR   partitionIndex = 142  OR  partitionIndex = 154 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411896008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (60 + 53) / 113][Stage 88:=================================>                    (70 + 43) / 113][Stage 88:===========================================>          (92 + 21) / 113][Stage 88:===================================================>  (108 + 5) / 113]                                                                                [Stage 89:=============================>                        (62 + 52) / 114][Stage 89:================================>                     (68 + 46) / 114][Stage 89:=========================================>            (88 + 26) / 114][Stage 89:===============================================>     (102 + 12) / 114][Stage 89:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.209675866 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 32  OR  pa rtitionIndex = 45  OR  partitionIndex = 46 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 45  OR  partitionIndex = 46 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408432712 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (58 + 55) / 113][Stage 90:==============================>                       (63 + 50) / 113][Stage 90:=======================================>              (83 + 30) / 113][Stage 90:==================================================>   (106 + 7) / 113][Stage 90:====================================================> (110 + 3) / 113]                                                                                [Stage 91:=============================>                        (63 + 51) / 114][Stage 91:========================================>             (85 + 29) / 114][Stage 91:===============================================>     (103 + 11) / 114][Stage 91:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.15084341 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  pa rtitionIndex = 34  OR  partitionIndex = 35 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404982336 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:============================>                         (59 + 54) / 113][Stage 92:==============================>                       (63 + 50) / 113][Stage 92:====================================>                 (77 + 36) / 113][Stage 92:============================================>         (93 + 20) / 113][Stage 92:===================================================>  (108 + 5) / 113]                                                                                [Stage 93:=============================>                        (63 + 51) / 114][Stage 93:===================================>                  (74 + 40) / 114][Stage 93:=============================================>        (96 + 18) / 114][Stage 93:==================================================>   (106 + 8) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.387136199 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195  OR   partitionIndex = 208  OR  partitionIndex = 209 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 208  OR  partitionIndex = 209 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454466647 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==================================>                   (73 + 40) / 113][Stage 94:=======================================>              (83 + 30) / 113][Stage 94:============================================>         (93 + 20) / 113][Stage 94:==============================================>      (100 + 13) / 113][Stage 94:===================================================>  (107 + 6) / 113]                                                                                [Stage 95:=======================================>              (84 + 30) / 114][Stage 95:==========================================>           (90 + 24) / 114][Stage 95:==============================================>       (99 + 15) / 114][Stage 95:==================================================>   (107 + 7) / 114][Stage 95:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.176445195 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR   partitionIndex = 148  OR  partitionIndex = 149 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 148  OR  partitionIndex = 149 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419344342 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (60 + 60) / 120][Stage 96:===============================>                      (71 + 49) / 120][Stage 96:=======================================>              (88 + 32) / 120][Stage 96:================================================>    (110 + 10) / 120][Stage 96:=====================================================>(119 + 1) / 120]                                                                                [Stage 97:===========================>                          (61 + 60) / 121][Stage 97:=============================>                        (67 + 54) / 121][Stage 97:=========================================>            (93 + 28) / 121][Stage 97:=================================================>    (112 + 9) / 121][Stage 97:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.401997075 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  pa rtitionIndex = 55  OR  partitionIndex = 56 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367913714 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:==================================>                   (72 + 41) / 113][Stage 98:======================================>               (81 + 32) / 113][Stage 98:===========================================>          (91 + 22) / 113][Stage 98:===============================================>     (102 + 11) / 113][Stage 98:===================================================>  (107 + 6) / 113]                                                                                [Stage 99:=====================================>                (80 + 34) / 114][Stage 99:==========================================>           (89 + 25) / 114][Stage 99:=============================================>        (97 + 17) / 114][Stage 99:================================================>    (104 + 10) / 114][Stage 99:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.661763302 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  pa rtitionIndex = 58  OR  partitionIndex = 59 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 58  OR  partitionIndex = 59 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497320167 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (61 + 60) / 121][Stage 100:=================================>                   (76 + 45) / 121][Stage 100:==========================================>          (98 + 23) / 121][Stage 100:==================================================>  (116 + 5) / 121]                                                                                [Stage 101:===========================>                         (63 + 59) / 122][Stage 101:==============================>                      (70 + 52) / 122][Stage 101:======================================>              (88 + 34) / 122][Stage 101:==============================================>     (108 + 14) / 122][Stage 101:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.689086282 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR   partitionIndex = 175  OR  partitionIndex = 176 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420211844 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (61 + 59) / 120][Stage 102:==============================>                      (68 + 52) / 120][Stage 102:=======================================>             (90 + 30) / 120][Stage 102:==============================================>     (108 + 12) / 120][Stage 102:====================================================>(118 + 2) / 120]                                                                                [Stage 103:==========================>                          (61 + 60) / 121][Stage 103:============================>                        (65 + 56) / 121][Stage 103:================================>                    (74 + 47) / 121][Stage 103:=======================================>             (91 + 30) / 121][Stage 103:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.297083555 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR   partitionIndex = 199  OR  partitionIndex = 200 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 200 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397034447 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (58 + 55) / 113][Stage 104:==============================>                      (65 + 48) / 113][Stage 104:========================================>            (86 + 27) / 113][Stage 104:==============================================>      (99 + 14) / 113][Stage 104:===================================================> (110 + 3) / 113]                                                                                [Stage 105:===========================>                         (59 + 55) / 114][Stage 105:===============================>                     (67 + 47) / 114][Stage 105:=====================================>               (81 + 33) / 114][Stage 105:=============================================>       (98 + 16) / 114][Stage 105:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.279859037 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR   partitionIndex = 165  OR  partitionIndex = 166 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417122348 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (58 + 55) / 113][Stage 106:==============================>                      (64 + 49) / 113][Stage 106:====================================>                (77 + 36) / 113][Stage 106:=============================================>       (98 + 15) / 113][Stage 106:==================================================>  (108 + 5) / 113]                                                                                [Stage 107:===========================>                         (59 + 55) / 114][Stage 107:=============================>                       (64 + 50) / 114][Stage 107:======================================>              (82 + 32) / 114][Stage 107:==============================================>      (99 + 15) / 114][Stage 107:==================================================>  (109 + 5) / 114][Stage 107:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.480243144 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR   partitionIndex = 215  OR  partitionIndex = 229 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429616956 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (61 + 59) / 120][Stage 108:==============================>                      (70 + 50) / 120][Stage 108:=====================================>               (84 + 36) / 120][Stage 108:==============================================>     (107 + 13) / 120][Stage 108:===================================================> (117 + 3) / 120]                                                                                [Stage 109:============================>                        (64 + 57) / 121][Stage 109:==================================>                  (78 + 43) / 121][Stage 109:===========================================>         (99 + 22) / 121][Stage 109:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.338267749 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  pa rtitionIndex = 106  OR  partitionIndex = 107 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 106  OR  partitionIndex = 107 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3659379 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=====================================>               (79 + 34) / 113][Stage 110:========================================>            (86 + 27) / 113][Stage 110:==============================================>     (101 + 12) / 113][Stage 110:==================================================>  (108 + 5) / 113]                                                                                [Stage 111:=====================================>               (81 + 33) / 114][Stage 111:========================================>            (88 + 26) / 114][Stage 111:============================================>        (95 + 19) / 114][Stage 111:=================================================>   (106 + 8) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.270782541 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 19  OR  partitionIndex = 48 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 48 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381396144 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:=================================>                   (72 + 43) / 115][Stage 112:==========================================>          (93 + 22) / 115][Stage 112:=================================================>   (108 + 7) / 115]                                                                                [Stage 113:=================================>                   (73 + 43) / 116][Stage 113:===========================================>         (95 + 21) / 116][Stage 113:=============================================>      (102 + 14) / 116][Stage 113:=================================================>   (108 + 8) / 116][Stage 113:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.508329229 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR   partitionIndex = 139  OR  partitionIndex = 168 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 168 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335990911 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:======================================>              (83 + 32) / 115][Stage 114:=========================================>           (89 + 26) / 115][Stage 114:================================================>    (106 + 9) / 115][Stage 114:===================================================> (112 + 3) / 115]                                                                                [Stage 115:======================================>              (84 + 32) / 116][Stage 115:===========================================>         (95 + 21) / 116][Stage 115:=================================================>   (108 + 8) / 116][Stage 115:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.791456843 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 117  OR  partitionIndex = 118 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403555065 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (63 + 57) / 120][Stage 116:================================>                    (73 + 47) / 120][Stage 116:======================================>              (88 + 32) / 120][Stage 116:==============================================>     (108 + 12) / 120]                                                                                [Stage 117:============================>                        (64 + 57) / 121][Stage 117:=================================>                   (77 + 44) / 121][Stage 117:==========================================>          (97 + 24) / 121][Stage 117:==================================================>  (116 + 5) / 121][Stage 117:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.463583989 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  pa rtitionIndex = 88  OR  partitionIndex = 89 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 88  OR  partitionIndex = 89 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355049693 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:=======================================>             (84 + 29) / 113][Stage 118:===========================================>         (92 + 21) / 113][Stage 118:==============================================>     (100 + 13) / 113][Stage 118:=================================================>   (106 + 7) / 113]                                                                                [Stage 119:======================================>              (83 + 31) / 114][Stage 119:==========================================>          (92 + 22) / 114][Stage 119:===============================================>    (104 + 10) / 114][Stage 119:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.000207168 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR   partitionIndex = 115  OR  partitionIndex = 116 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403581926 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 60) / 120][Stage 120:=============================>                       (67 + 53) / 120][Stage 120:====================================>                (82 + 38) / 120][Stage 120:===========================================>        (101 + 19) / 120][Stage 120:====================================================>(118 + 2) / 120]                                                                                [Stage 121:==========================>                          (61 + 60) / 121][Stage 121:===============================>                     (72 + 49) / 121][Stage 121:=====================================>               (85 + 36) / 121][Stage 121:===============================================>    (111 + 10) / 121]                                                                                Time elapsed: 3.385224096 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  pa rtitionIndex = 57  OR  partitionIndex = 58 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353470935 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=================================>                   (71 + 42) / 113][Stage 122:=======================================>             (85 + 28) / 113][Stage 122:=============================================>       (96 + 17) / 113][Stage 122:=================================================>   (105 + 8) / 113][Stage 122:====================================================>(111 + 2) / 113][Stage 122:====================================================>(112 + 1) / 113]                                                                                [Stage 123:==================================>                  (75 + 39) / 114][Stage 123:======================================>              (82 + 32) / 114][Stage 123:==========================================>          (91 + 23) / 114][Stage 123:=================================================>   (106 + 8) / 114][Stage 123:===================================================> (111 + 3) / 114][Stage 123:====================================================>(112 + 2) / 114][Stage 123:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.55720602 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90  OR  pa rtitionIndex = 102  OR  partitionIndex = 103 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367898002 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:================================>                    (73 + 45) / 118][Stage 124:==================================>                  (77 + 41) / 118][Stage 124:======================================>              (85 + 33) / 118][Stage 124:============================================>        (99 + 19) / 118][Stage 124:===================================================> (114 + 4) / 118]                                                                                [Stage 125:=================================>                   (75 + 44) / 119][Stage 125:====================================>                (81 + 38) / 119][Stage 125:===========================================>         (98 + 21) / 119][Stage 125:================================================>    (110 + 9) / 119][Stage 125:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.631417608 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR   partitionIndex = 172  OR  partitionIndex = 180 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355295735 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=====================================>               (80 + 33) / 113][Stage 126:===========================================>         (92 + 21) / 113][Stage 126:==============================================>      (99 + 14) / 113][Stage 126:===================================================> (109 + 4) / 113]                                                                                [Stage 127:=======================================>             (84 + 30) / 114][Stage 127:==========================================>          (92 + 22) / 114][Stage 127:==============================================>      (99 + 15) / 114][Stage 127:=================================================>   (107 + 7) / 114][Stage 127:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.021622445 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR   partitionIndex = 211  OR  partitionIndex = 225 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37135028 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==================================>                  (73 + 40) / 113][Stage 128:========================================>            (86 + 27) / 113][Stage 128:=============================================>       (96 + 17) / 113][Stage 128:==================================================>  (107 + 6) / 113]                                                                                [Stage 129:=====================================>               (81 + 33) / 114][Stage 129:=========================================>           (90 + 24) / 114][Stage 129:==============================================>     (102 + 12) / 114][Stage 129:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.773112171 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  part itionIndex = 16  OR  partitionIndex = 17 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 16  OR  partitionIndex = 17 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384018468 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (59 + 54) / 113][Stage 130:=====================================>               (79 + 34) / 113][Stage 130:=============================================>       (98 + 15) / 113][Stage 130:====================================================>(111 + 2) / 113]                                                                                [Stage 131:===========================>                         (60 + 54) / 114][Stage 131:================================>                    (69 + 45) / 114][Stage 131:=======================================>             (84 + 30) / 114][Stage 131:===============================================>    (104 + 10) / 114][Stage 131:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.572359961 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  pa rtitionIndex = 94  OR  partitionIndex = 95 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41298858 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 61) / 121][Stage 132:============================>                        (66 + 55) / 121][Stage 132:=====================================>               (85 + 36) / 121][Stage 132:===============================================>    (110 + 11) / 121][Stage 132:====================================================>(120 + 1) / 121]                                                                                [Stage 133:==========================>                          (61 + 61) / 122][Stage 133:===============================>                     (72 + 50) / 122][Stage 133:=====================================>               (86 + 36) / 122][Stage 133:==============================================>     (108 + 14) / 122][Stage 133:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.47482442 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  pa rtitionIndex = 35  OR  partitionIndex = 49 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37248212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==============================>                      (66 + 49) / 115][Stage 134:==================================>                  (74 + 41) / 115][Stage 134:==========================================>          (92 + 23) / 115][Stage 134:===============================================>    (104 + 11) / 115][Stage 134:====================================================>(114 + 1) / 115]                                                                                [Stage 135:===============================>                     (70 + 46) / 116][Stage 135:======================================>              (85 + 31) / 116][Stage 135:=============================================>      (102 + 14) / 116][Stage 135:=================================================>   (109 + 7) / 116][Stage 135:====================================================>(114 + 2) / 116][Stage 135:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.984147371 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  pa rtitionIndex = 53  OR  partitionIndex = 54 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387835286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (59 + 54) / 113][Stage 136:==================================>                  (73 + 40) / 113][Stage 136:===========================================>         (93 + 20) / 113][Stage 136:===================================================> (110 + 3) / 113]                                                                                [Stage 137:=============================>                       (64 + 50) / 114][Stage 137:====================================>                (78 + 36) / 114][Stage 137:=============================================>      (100 + 14) / 114][Stage 137:===================================================> (111 + 3) / 114][Stage 137:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.579512513 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR   partitionIndex = 135  OR  partitionIndex = 136 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37402578 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==============================>                      (67 + 48) / 115][Stage 138:======================================>              (83 + 32) / 115][Stage 138:============================================>        (97 + 18) / 115][Stage 138:=================================================>   (107 + 8) / 115]                                                                                [Stage 139:===================================>                 (77 + 39) / 116][Stage 139:==========================================>          (92 + 24) / 116][Stage 139:=================================================>   (108 + 8) / 116][Stage 139:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.792545814 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR   partitionIndex = 205  OR  partitionIndex = 206 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39582872 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (62 + 58) / 120][Stage 140:===============================>                     (72 + 48) / 120][Stage 140:=========================================>           (94 + 26) / 120][Stage 140:=================================================>   (112 + 8) / 120]                                                                                [Stage 141:============================>                        (64 + 57) / 121][Stage 141:==================================>                  (78 + 43) / 121][Stage 141:=======================================>             (91 + 30) / 121][Stage 141:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.240063929 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 195  OR  partitionIndex = 196 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401489215 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (60 + 60) / 120][Stage 142:=============================>                       (67 + 53) / 120][Stage 142:====================================>                (82 + 38) / 120][Stage 142:===========================================>        (100 + 20) / 120][Stage 142:==================================================>  (114 + 6) / 120]                                                                                [Stage 143:==========================>                          (61 + 60) / 121][Stage 143:============================>                        (66 + 55) / 121][Stage 143:==================================>                  (78 + 43) / 121][Stage 143:==============================================>     (109 + 12) / 121][Stage 143:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.125394423 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  pa rtitionIndex = 115  OR  partitionIndex = 116 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 115  OR  partitionIndex = 116 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374690921 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===============================>                     (68 + 47) / 115][Stage 144:===================================>                 (78 + 37) / 115][Stage 144:===========================================>         (94 + 21) / 115][Stage 144:===================================================> (111 + 4) / 115]                                                                                [Stage 145:===================================>                 (78 + 38) / 116][Stage 145:========================================>            (89 + 27) / 116][Stage 145:===========================================>         (96 + 20) / 116]                                                                                Time elapsed: 2.641745111 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR   partitionIndex = 225  OR  partitionIndex = 226 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348821926 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==================================>                  (73 + 40) / 113][Stage 146:========================================>            (87 + 26) / 113][Stage 146:=============================================>       (96 + 17) / 113][Stage 146:==================================================>  (107 + 6) / 113][Stage 146:====================================================>(111 + 2) / 113]                                                                                [Stage 147:=====================================>               (80 + 34) / 114][Stage 147:=========================================>           (89 + 25) / 114][Stage 147:==============================================>     (102 + 12) / 114][Stage 147:=================================================>   (107 + 7) / 114][Stage 147:===================================================> (111 + 3) / 114][Stage 147:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.542818112 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR   partitionIndex = 210  OR  partitionIndex = 211 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362213034 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:================================>                    (72 + 46) / 118][Stage 148:=================================>                   (74 + 44) / 118][Stage 148:======================================>              (85 + 33) / 118][Stage 148:============================================>        (99 + 19) / 118][Stage 148:=================================================>   (111 + 7) / 118]                                                                                [Stage 149:================================>                    (74 + 45) / 119][Stage 149:====================================>                (81 + 38) / 119][Stage 149:=========================================>           (93 + 26) / 119][Stage 149:=============================================>      (105 + 14) / 119][Stage 149:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.420532714 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR   partitionIndex = 167  OR  partitionIndex = 168 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373564204 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:================================>                    (71 + 44) / 115][Stage 150:=====================================>               (81 + 34) / 115][Stage 150:==========================================>          (93 + 22) / 115][Stage 150:=================================================>   (108 + 7) / 115]                                                                                [Stage 151:=====================================>               (81 + 35) / 116][Stage 151:==========================================>          (94 + 22) / 116][Stage 151:===============================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.683315682 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  pa rtitionIndex = 46  OR  partitionIndex = 47 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 46  OR  partitionIndex = 47 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338228958 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:=====================================>               (82 + 33) / 115][Stage 152:===========================================>         (94 + 21) / 115][Stage 152:===============================================>    (105 + 10) / 115]                                                                                [Stage 153:=====================================>               (81 + 35) / 116][Stage 153:==========================================>          (93 + 23) / 116][Stage 153:============================================>       (100 + 16) / 116][Stage 153:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.548429242 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR   partitionIndex = 195  OR  partitionIndex = 196 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394458324 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===========================>                         (63 + 58) / 121][Stage 154:===============================>                     (73 + 48) / 121][Stage 154:==========================================>          (97 + 24) / 121][Stage 154:===================================================> (117 + 4) / 121]                                                                                [Stage 155:===========================>                         (64 + 58) / 122][Stage 155:================================>                    (74 + 48) / 122][Stage 155:========================================>            (94 + 28) / 122][Stage 155:=================================================>   (113 + 9) / 122][Stage 155:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.413939595 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR   partitionIndex = 202  OR  partitionIndex = 214 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343468393 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:====================================>                (77 + 36) / 113][Stage 156:=========================================>           (88 + 25) / 113][Stage 156:==============================================>     (101 + 12) / 113][Stage 156:==================================================>  (108 + 5) / 113][Stage 156:====================================================>(112 + 1) / 113]                                                                                [Stage 157:===================================>                 (77 + 37) / 114][Stage 157:========================================>            (88 + 26) / 114][Stage 157:==============================================>     (102 + 12) / 114][Stage 157:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.869102177 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 92  OR  pa rtitionIndex = 105  OR  partitionIndex = 106 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 105  OR  partitionIndex = 106 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36802561 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:=================================>                   (72 + 43) / 115][Stage 158:=========================================>           (89 + 26) / 115][Stage 158:=================================================>   (107 + 8) / 115][Stage 158:====================================================>(113 + 2) / 115]                                                                                [Stage 159:==================================>                  (75 + 41) / 116][Stage 159:======================================>              (85 + 31) / 116][Stage 159:============================================>        (97 + 19) / 116][Stage 159:===================================================> (112 + 4) / 116][Stage 159:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.051463008 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  pa rtitionIndex = 87  OR  partitionIndex = 88 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359437939 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===============================>                     (71 + 47) / 118][Stage 160:=================================>                   (75 + 43) / 118][Stage 160:======================================>              (85 + 33) / 118][Stage 160:============================================>       (101 + 17) / 118][Stage 160:===================================================> (114 + 4) / 118]                                                                                [Stage 161:================================>                    (74 + 45) / 119][Stage 161:====================================>                (81 + 38) / 119][Stage 161:=======================================>             (89 + 30) / 119][Stage 161:=============================================>      (103 + 16) / 119][Stage 161:================================================>    (110 + 9) / 119]                                                                                Time elapsed: 3.545517785 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  pa rtitionIndex = 49  OR  partitionIndex = 50 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402654959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 61) / 121][Stage 162:=============================>                       (67 + 54) / 121][Stage 162:=================================>                   (77 + 44) / 121][Stage 162:==========================================>          (98 + 23) / 121][Stage 162:===================================================> (117 + 4) / 121][Stage 162:====================================================>(120 + 1) / 121]                                                                                [Stage 163:===========================>                         (63 + 59) / 122][Stage 163:=================================>                   (78 + 44) / 122][Stage 163:===========================================>         (99 + 23) / 122][Stage 163:==================================================>  (116 + 6) / 122][Stage 163:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.484599628 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188  OR  partitionIndex = 189  OR   partitionIndex = 203  OR  partitionIndex = 204 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368823012 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:=================================>                   (74 + 44) / 118][Stage 164:===================================>                 (80 + 38) / 118][Stage 164:======================================>              (86 + 32) / 118][Stage 164:===============================================>    (107 + 11) / 118][Stage 164:===================================================> (115 + 3) / 118]                                                                                [Stage 165:================================>                    (73 + 46) / 119][Stage 165:================================>                    (74 + 45) / 119][Stage 165:=====================================>               (84 + 35) / 119][Stage 165:===========================================>         (97 + 22) / 119][Stage 165:=================================================>   (111 + 8) / 119][Stage 165:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.463290913 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 217  OR   partitionIndex = 231  OR  partitionIndex = 232 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391188312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 61) / 121][Stage 166:===========================>                         (62 + 59) / 121][Stage 166:==================================>                  (79 + 42) / 121][Stage 166:=================================================>   (114 + 7) / 121]                                                                                [Stage 167:==========================>                          (61 + 61) / 122][Stage 167:==============================>                      (70 + 52) / 122][Stage 167:=====================================>               (86 + 36) / 122][Stage 167:===========================================>        (102 + 20) / 122][Stage 167:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.333231441 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  pa rtitionIndex = 105  OR  partitionIndex = 106 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365242337 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:=====================================>               (80 + 33) / 113][Stage 168:=========================================>           (88 + 25) / 113][Stage 168:===========================================>         (93 + 20) / 113][Stage 168:=================================================>   (106 + 7) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:===================================>                 (76 + 38) / 114][Stage 169:=========================================>           (89 + 25) / 114][Stage 169:==============================================>      (99 + 15) / 114][Stage 169:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.8915025 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 130  OR   partitionIndex = 143  OR  partitionIndex = 144 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 143  OR  partitionIndex = 144 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364851557 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:================================>                    (72 + 46) / 118][Stage 170:==================================>                  (77 + 41) / 118][Stage 170:======================================>              (86 + 32) / 118][Stage 170:=============================================>      (103 + 15) / 118][Stage 170:===================================================> (114 + 4) / 118]                                                                                [Stage 171:================================>                    (73 + 46) / 119][Stage 171:=======================================>             (88 + 31) / 119][Stage 171:============================================>        (99 + 20) / 119][Stage 171:================================================>    (110 + 9) / 119][Stage 171:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.389623517 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR   partitionIndex = 144  OR  partitionIndex = 145 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 144  OR  partitionIndex = 145 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36242578 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===================================>                 (75 + 38) / 113][Stage 172:=======================================>             (84 + 29) / 113][Stage 172:============================================>        (95 + 18) / 113][Stage 172:==================================================>  (108 + 5) / 113][Stage 172:====================================================>(112 + 1) / 113]                                                                                [Stage 173:===================================>                 (76 + 38) / 114][Stage 173:==========================================>          (92 + 22) / 114][Stage 173:==============================================>     (103 + 11) / 114][Stage 173:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.0508853 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  pa rtitionIndex = 109  OR  partitionIndex = 110 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.48075693 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (58 + 55) / 113][Stage 174:===============================>                     (67 + 46) / 113][Stage 174:=====================================>               (80 + 33) / 113][Stage 174:=============================================>       (96 + 17) / 113][Stage 174:====================================================>(111 + 2) / 113]                                                                                [Stage 175:===========================>                         (60 + 54) / 114][Stage 175:==================================>                  (74 + 40) / 114][Stage 175:==========================================>          (92 + 22) / 114][Stage 175:=================================================>   (106 + 8) / 114][Stage 175:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.464014597 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 231  OR  partitionIndex = 232 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 231  OR  partitionIndex = 232 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353621869 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (72 + 46) / 118][Stage 176:===================================>                 (78 + 40) / 118][Stage 176:=======================================>             (89 + 29) / 118][Stage 176:=============================================>      (104 + 14) / 118][Stage 176:==================================================>  (112 + 6) / 118]                                                                                [Stage 177:================================>                    (73 + 46) / 119][Stage 177:====================================>                (83 + 36) / 119][Stage 177:==========================================>          (95 + 24) / 119][Stage 177:===============================================>    (108 + 11) / 119][Stage 177:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.57325202 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  p artitionIndex = 103  OR  partitionIndex = 117 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376460349 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (58 + 55) / 113][Stage 178:==============================>                      (66 + 47) / 113][Stage 178:======================================>              (83 + 30) / 113][Stage 178:=============================================>       (97 + 16) / 113][Stage 178:===================================================> (110 + 3) / 113]                                                                                [Stage 179:===========================>                         (59 + 55) / 114][Stage 179:==============================>                      (65 + 49) / 114][Stage 179:=========================================>           (89 + 25) / 114][Stage 179:=================================================>   (106 + 8) / 114][Stage 179:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.409991958 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR   partitionIndex = 235  OR  partitionIndex = 236 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335792707 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:======================================>              (84 + 31) / 115][Stage 180:===========================================>         (94 + 21) / 115][Stage 180:=================================================>   (108 + 7) / 115][Stage 180:===================================================> (112 + 3) / 115]                                                                                [Stage 181:=======================================>             (87 + 29) / 116][Stage 181:============================================>       (100 + 16) / 116][Stage 181:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.663408258 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  pa rtitionIndex = 83  OR  partitionIndex = 84 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396040391 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:================================>                    (72 + 46) / 118][Stage 182:===================================>                 (78 + 40) / 118][Stage 182:=====================================>               (84 + 34) / 118][Stage 182:============================================>        (98 + 20) / 118][Stage 182:=================================================>   (111 + 7) / 118]                                                                                [Stage 183:=================================>                   (75 + 44) / 119][Stage 183:====================================>                (81 + 38) / 119][Stage 183:=========================================>           (94 + 25) / 119][Stage 183:=============================================>      (105 + 14) / 119][Stage 183:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.457115883 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  pa rtitionIndex = 89  OR  partitionIndex = 90 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369018237 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=====================================>               (81 + 32) / 113][Stage 184:==========================================>          (90 + 23) / 113][Stage 184:==============================================>      (99 + 14) / 113][Stage 184:=================================================>   (106 + 7) / 113]                                                                                [Stage 185:====================================>                (79 + 35) / 114][Stage 185:========================================>            (87 + 27) / 114][Stage 185:===========================================>         (93 + 21) / 114][Stage 185:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 2.981728749 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  pa rtitionIndex = 91  OR  partitionIndex = 105 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390209298 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 60) / 120][Stage 186:===============================>                     (71 + 49) / 120][Stage 186:=====================================>               (84 + 36) / 120][Stage 186:===============================================>    (109 + 11) / 120]                                                                                [Stage 187:==========================>                          (61 + 60) / 121][Stage 187:============================>                        (66 + 55) / 121][Stage 187:=====================================>               (85 + 36) / 121][Stage 187:===============================================>    (110 + 11) / 121][Stage 187:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.245563588 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  pa rtitionIndex = 79  OR  partitionIndex = 80 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342198083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:=====================================>               (81 + 34) / 115][Stage 188:========================================>            (87 + 28) / 115][Stage 188:==============================================>     (103 + 12) / 115][Stage 188:===================================================> (111 + 4) / 115][Stage 188:====================================================>(114 + 1) / 115]                                                                                [Stage 189:=====================================>               (81 + 35) / 116][Stage 189:=========================================>           (90 + 26) / 116][Stage 189:============================================>       (100 + 16) / 116][Stage 189:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.999036682 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  pa rtitionIndex = 83  OR  partitionIndex = 84 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388205881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 60) / 120][Stage 190:===========================>                         (63 + 57) / 120][Stage 190:=====================================>               (84 + 36) / 120][Stage 190:===============================================>    (109 + 11) / 120][Stage 190:====================================================>(119 + 1) / 120]                                                                                [Stage 191:==========================>                          (61 + 60) / 121][Stage 191:==============================>                      (69 + 52) / 121][Stage 191:================================>                    (75 + 46) / 121][Stage 191:============================================>       (104 + 17) / 121][Stage 191:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.38302205 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 62  OR  pa rtitionIndex = 75  OR  partitionIndex = 76 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 75  OR  partitionIndex = 76 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34639616 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==================================>                  (74 + 39) / 113][Stage 192:=======================================>             (84 + 29) / 113][Stage 192:=============================================>       (97 + 16) / 113][Stage 192:=================================================>   (105 + 8) / 113][Stage 192:===================================================> (110 + 3) / 113]                                                                                [Stage 193:==================================>                  (74 + 40) / 114][Stage 193:=======================================>             (84 + 30) / 114][Stage 193:=========================================>           (90 + 24) / 114][Stage 193:==============================================>     (101 + 13) / 114][Stage 193:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.234182153 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 81  OR  pa rtitionIndex = 82  OR  partitionIndex = 94 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415448277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 60) / 120][Stage 194:==============================>                      (68 + 52) / 120][Stage 194:=========================================>           (94 + 26) / 120][Stage 194:=================================================>   (112 + 8) / 120]                                                                                [Stage 195:===========================>                         (62 + 59) / 121][Stage 195:================================>                    (74 + 47) / 121][Stage 195:=========================================>           (94 + 27) / 121][Stage 195:=================================================>   (112 + 9) / 121]                                                                                Time elapsed: 3.200614709 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  pa rtitionIndex = 87  OR  partitionIndex = 88 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 87  OR  partitionIndex = 88 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343214464 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:====================================>                (78 + 35) / 113][Stage 196:=======================================>             (85 + 28) / 113][Stage 196:=============================================>       (97 + 16) / 113][Stage 196:=================================================>   (105 + 8) / 113][Stage 196:====================================================>(111 + 2) / 113]                                                                                [Stage 197:=====================================>               (81 + 33) / 114][Stage 197:=========================================>           (89 + 25) / 114][Stage 197:==============================================>     (102 + 12) / 114][Stage 197:==================================================>  (109 + 5) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.33346117 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  part itionIndex = 19  OR  partitionIndex = 20 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389781401 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (58 + 55) / 113][Stage 198:==============================>                      (65 + 48) / 113][Stage 198:====================================>                (78 + 35) / 113][Stage 198:=================================================>   (105 + 8) / 113]                                                                                [Stage 199:===========================>                         (60 + 54) / 114][Stage 199:================================>                    (70 + 44) / 114][Stage 199:======================================>              (83 + 31) / 114][Stage 199:================================================>    (105 + 9) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.322859924 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR   partitionIndex = 174  OR  partitionIndex = 175 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 174  OR  partitionIndex = 175 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3479288 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:======================================>              (82 + 31) / 113][Stage 200:==========================================>          (90 + 23) / 113][Stage 200:==============================================>     (100 + 13) / 113][Stage 200:===================================================> (109 + 4) / 113][Stage 200:====================================================>(112 + 1) / 113]                                                                                [Stage 201:===================================>                 (76 + 38) / 114][Stage 201:========================================>            (87 + 27) / 114][Stage 201:=============================================>       (97 + 17) / 114][Stage 201:================================================>    (105 + 9) / 114][Stage 201:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.268335819 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m29.716s
user	11m51.648s
sys	0m55.328s
