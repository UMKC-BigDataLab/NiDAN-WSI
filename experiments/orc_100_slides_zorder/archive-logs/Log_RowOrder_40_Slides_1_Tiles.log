Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 19:49:15 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:49:29 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:49:29 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:49:30 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 19:49:32 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:49:43 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524194932-0587).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.37115759 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=======================>                               (49 + 66) / 115][Stage 0:========================>                              (52 + 63) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:======================================>                (80 + 35) / 115][Stage 0:==========================================>            (89 + 26) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:=====================================================> (111 + 4) / 115]                                                                                [Stage 1:========================>                              (52 + 64) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:=================================>                     (71 + 45) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:=======================================>               (83 + 33) / 116][Stage 1:=============================================>         (97 + 19) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.537524272 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.711040548 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===================================>                   (74 + 41) / 115][Stage 2:=====================================>                 (79 + 36) / 115][Stage 2:======================================>                (80 + 35) / 115][Stage 2:=======================================>               (82 + 33) / 115][Stage 2:============================================>          (92 + 23) / 115][Stage 2:===============================================>      (102 + 13) / 115][Stage 2:===================================================>   (108 + 7) / 115][Stage 2:====================================================>  (110 + 5) / 115][Stage 2:=====================================================> (112 + 3) / 115]                                                                                [Stage 3:======================================>                (82 + 34) / 116][Stage 3:=========================================>             (87 + 29) / 116][Stage 3:==========================================>            (90 + 26) / 116][Stage 3:==============================================>       (100 + 16) / 116][Stage 3:===================================================>   (109 + 7) / 116][Stage 3:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.717507588 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.721245853 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==========================>                            (55 + 58) / 113][Stage 4:============================>                          (58 + 55) / 113][Stage 4:============================>                          (59 + 54) / 113][Stage 4:================================>                      (66 + 47) / 113][Stage 4:======================================>                (79 + 34) / 113][Stage 4:=============================================>         (93 + 20) / 113][Stage 4:===================================================>   (105 + 8) / 113]                                                                                [Stage 5:===========================>                           (57 + 57) / 114][Stage 5:============================>                          (60 + 54) / 114][Stage 5:=================================>                     (69 + 45) / 114][Stage 5:=====================================>                 (78 + 36) / 114][Stage 5:=============================================>         (95 + 19) / 114][Stage 5:==================================================>    (105 + 9) / 114][Stage 5:=====================================================> (111 + 3) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.484974746 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.798157421 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (60 + 60) / 120][Stage 6:================================>                      (70 + 50) / 120][Stage 6:=====================================>                 (82 + 38) / 120][Stage 6:==========================================>            (93 + 27) / 120][Stage 6:=============================================>        (101 + 19) / 120][Stage 6:=====================================================> (117 + 3) / 120]                                                                                [Stage 7:===========================>                           (61 + 60) / 121][Stage 7:=============================>                         (65 + 56) / 121][Stage 7:===================================>                   (78 + 43) / 121][Stage 7:===========================================>           (96 + 25) / 121][Stage 7:===============================================>      (107 + 14) / 121][Stage 7:=====================================================> (117 + 4) / 121]                                                                                Time elapsed: 4.086409436 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.612574416 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (60 + 61) / 121][Stage 8:================================>                      (71 + 50) / 121][Stage 8:======================================>                (84 + 37) / 121][Stage 8:============================================>         (100 + 21) / 121][Stage 8:==================================================>    (112 + 9) / 121]                                                                                [Stage 9:===========================>                           (61 + 61) / 122][Stage 9:=============================>                         (65 + 57) / 122][Stage 9:=================================>                     (75 + 47) / 122][Stage 9:==========================================>            (94 + 28) / 122][Stage 9:===================================================>   (115 + 7) / 122][Stage 9:======================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.728001164 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.577665907 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:============================>                         (59 + 54) / 113][Stage 10:===============================>                      (65 + 48) / 113][Stage 10:====================================>                 (76 + 37) / 113][Stage 10:===========================================>          (92 + 21) / 113][Stage 10:===============================================>     (101 + 12) / 113][Stage 10:=====================================================>(112 + 1) / 113]                                                                                [Stage 11:===========================>                          (58 + 56) / 114][Stage 11:============================>                         (60 + 54) / 114][Stage 11:======================================>               (81 + 33) / 114][Stage 11:=============================================>        (97 + 17) / 114][Stage 11:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.443148278 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.535668298 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:================================>                     (72 + 46) / 118][Stage 12:=================================>                    (73 + 45) / 118][Stage 12:====================================>                 (79 + 39) / 118][Stage 12:=========================================>            (90 + 28) / 118][Stage 12:===============================================>     (105 + 13) / 118][Stage 12:====================================================> (114 + 4) / 118][Stage 12:=====================================================>(117 + 1) / 118]                                                                                [Stage 13:=================================>                    (73 + 46) / 119][Stage 13:==================================>                   (75 + 44) / 119][Stage 13:=======================================>              (88 + 31) / 119][Stage 13:=============================================>       (103 + 16) / 119][Stage 13:===================================================>  (113 + 6) / 119][Stage 13:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.727390965 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.540636459 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (60 + 60) / 120][Stage 14:===========================>                          (62 + 58) / 120][Stage 14:==================================>                   (76 + 44) / 120][Stage 14:============================================>         (99 + 21) / 120][Stage 14:==================================================>   (113 + 7) / 120][Stage 14:=====================================================>(119 + 1) / 120]                                                                                [Stage 15:===========================>                          (61 + 60) / 121][Stage 15:===========================>                          (62 + 59) / 121][Stage 15:==============================>                       (69 + 52) / 121][Stage 15:=========================================>            (93 + 28) / 121][Stage 15:==============================================>      (106 + 15) / 121][Stage 15:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.695472851 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.72661412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (60 + 60) / 120][Stage 16:=============================>                        (65 + 55) / 120][Stage 16:====================================>                 (80 + 40) / 120][Stage 16:============================================>         (98 + 22) / 120][Stage 16:================================================>    (110 + 10) / 120][Stage 16:=====================================================>(118 + 2) / 120]                                                                                [Stage 17:===========================>                          (61 + 60) / 121][Stage 17:=============================>                        (65 + 56) / 121][Stage 17:===================================>                  (79 + 42) / 121][Stage 17:============================================>        (101 + 20) / 121][Stage 17:================================================>    (110 + 11) / 121][Stage 17:===================================================>  (116 + 5) / 121][Stage 17:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.794860781 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438373103 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:======================================>               (82 + 33) / 115][Stage 18:=========================================>            (89 + 26) / 115][Stage 18:==============================================>       (98 + 17) / 115][Stage 18:==================================================>   (107 + 8) / 115][Stage 18:===================================================>  (110 + 5) / 115][Stage 18:=====================================================>(113 + 2) / 115]                                                                                [Stage 19:======================================>               (82 + 34) / 116][Stage 19:========================================>             (87 + 29) / 116][Stage 19:=============================================>        (98 + 18) / 116][Stage 19:===============================================>     (105 + 11) / 116][Stage 19:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.695976864 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.578403722 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==========================>                           (60 + 61) / 121][Stage 20:=============================>                        (67 + 54) / 121][Stage 20:=========================================>            (93 + 28) / 121][Stage 20:=============================================>       (104 + 17) / 121][Stage 20:=====================================================>(119 + 2) / 121]                                                                                [Stage 21:===========================>                          (61 + 61) / 122][Stage 21:================================>                     (74 + 48) / 122][Stage 21:======================================>               (87 + 35) / 122][Stage 21:================================================>    (111 + 11) / 122][Stage 21:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.459703589 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518245455 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (60 + 60) / 120][Stage 22:============================>                         (63 + 57) / 120][Stage 22:=====================================>                (84 + 36) / 120][Stage 22:===============================================>     (108 + 12) / 120]                                                                                [Stage 23:===========================>                          (61 + 60) / 121][Stage 23:=============================>                        (67 + 54) / 121][Stage 23:====================================>                 (82 + 39) / 121][Stage 23:=============================================>       (103 + 18) / 121][Stage 23:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.137813932 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494736389 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (58 + 55) / 113][Stage 24:=============================>                        (61 + 52) / 113][Stage 24:=====================================>                (79 + 34) / 113][Stage 24:================================================>    (103 + 10) / 113][Stage 24:====================================================> (109 + 4) / 113][Stage 24:=====================================================>(111 + 2) / 113]                                                                                [Stage 25:=============================>                        (62 + 52) / 114][Stage 25:===================================>                  (75 + 39) / 114][Stage 25:==============================================>       (98 + 16) / 114][Stage 25:==================================================>   (106 + 8) / 114][Stage 25:===================================================>  (109 + 5) / 114][Stage 25:====================================================> (110 + 4) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.795545046 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486489795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:============================>                         (59 + 54) / 113][Stage 26:===============================>                      (66 + 47) / 113][Stage 26:=========================================>            (87 + 26) / 113][Stage 26:===============================================>     (101 + 12) / 113][Stage 26:====================================================> (110 + 3) / 113]                                                                                [Stage 27:===========================>                          (59 + 55) / 114][Stage 27:============================>                         (61 + 53) / 114][Stage 27:=====================================>                (79 + 35) / 114][Stage 27:==============================================>      (101 + 13) / 114][Stage 27:==================================================>   (107 + 7) / 114][Stage 27:===================================================>  (109 + 5) / 114][Stage 27:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.672101997 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424294732 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:=================================>                    (71 + 42) / 113][Stage 28:======================================>               (81 + 32) / 113][Stage 28:=============================================>        (95 + 18) / 113][Stage 28:=================================================>    (104 + 9) / 113][Stage 28:====================================================> (109 + 4) / 113][Stage 28:=====================================================>(111 + 2) / 113]                                                                                [Stage 29:=====================================>                (79 + 35) / 114][Stage 29:===========================================>          (91 + 23) / 114][Stage 29:==============================================>       (98 + 16) / 114][Stage 29:==================================================>   (107 + 7) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.366536205 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462916266 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==============================>                       (66 + 49) / 115][Stage 30:=======================================>              (85 + 30) / 115][Stage 30:==============================================>      (100 + 15) / 115][Stage 30:==================================================>   (107 + 8) / 115][Stage 30:===================================================>  (110 + 5) / 115][Stage 30:=====================================================>(114 + 1) / 115]                                                                                [Stage 31:================================>                     (69 + 47) / 116][Stage 31:=======================================>              (84 + 32) / 116][Stage 31:===============================================>     (104 + 12) / 116][Stage 31:===================================================>  (111 + 5) / 116][Stage 31:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.254551998 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496526496 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (60 + 60) / 120][Stage 32:===========================>                          (61 + 59) / 120][Stage 32:==================================>                   (76 + 44) / 120][Stage 32:===========================================>          (97 + 23) / 120][Stage 32:==============================================>      (106 + 14) / 120][Stage 32:==================================================>   (113 + 7) / 120][Stage 32:====================================================> (116 + 4) / 120][Stage 32:=====================================================>(119 + 1) / 120]                                                                                [Stage 33:===========================>                          (61 + 60) / 121][Stage 33:==============================>                       (68 + 53) / 121][Stage 33:=========================================>            (92 + 29) / 121][Stage 33:================================================>    (111 + 10) / 121]                                                                                Time elapsed: 3.547327131 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.59615842 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (60 + 60) / 120][Stage 34:============================>                         (64 + 56) / 120][Stage 34:=================================>                    (75 + 45) / 120][Stage 34:===========================================>          (96 + 24) / 120][Stage 34:====================================================> (117 + 3) / 120]                                                                                [Stage 35:===========================>                          (62 + 59) / 121][Stage 35:=================================>                    (76 + 45) / 121][Stage 35:============================================>        (101 + 20) / 121][Stage 35:==================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.090243326 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455496277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:======================================>               (80 + 33) / 113][Stage 36:==========================================>           (89 + 24) / 113][Stage 36:=================================================>    (104 + 9) / 113][Stage 36:====================================================> (109 + 4) / 113]                                                                                [Stage 37:=======================================>              (83 + 31) / 114][Stage 37:===========================================>          (92 + 22) / 114][Stage 37:==================================================>   (106 + 8) / 114][Stage 37:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.912101248 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480663754 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:=================================>                    (73 + 45) / 118][Stage 38:==================================>                   (76 + 42) / 118][Stage 38:======================================>               (85 + 33) / 118][Stage 38:============================================>        (100 + 18) / 118][Stage 38:=====================================================>(117 + 1) / 118]                                                                                [Stage 39:==================================>                   (75 + 44) / 119][Stage 39:====================================>                 (80 + 39) / 119][Stage 39:=========================================>            (91 + 28) / 119][Stage 39:==============================================>      (105 + 14) / 119][Stage 39:===================================================>  (113 + 6) / 119][Stage 39:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.467088135 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420399068 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:======================================>               (81 + 34) / 115][Stage 40:========================================>             (87 + 28) / 115][Stage 40:===============================================>     (102 + 13) / 115][Stage 40:====================================================> (111 + 4) / 115][Stage 40:=====================================================>(113 + 2) / 115]                                                                                [Stage 41:=======================================>              (85 + 31) / 116][Stage 41:=============================================>        (98 + 18) / 116][Stage 41:===============================================>     (104 + 12) / 116][Stage 41:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.071620971 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415385643 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:========================================>             (86 + 29) / 115][Stage 42:==============================================>      (100 + 15) / 115][Stage 42:===================================================>  (110 + 5) / 115]                                                                                [Stage 43:=======================================>              (84 + 32) / 116][Stage 43:==========================================>           (92 + 24) / 116][Stage 43:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.61260392 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435253414 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:>                                                       (0 + 0) / 115][Stage 44:================================>                     (69 + 46) / 115][Stage 44:====================================>                 (77 + 38) / 115][Stage 44:===========================================>          (93 + 22) / 115][Stage 44:==================================================>   (108 + 7) / 115][Stage 44:====================================================> (111 + 4) / 115][Stage 44:=====================================================>(114 + 1) / 115]                                                                                [Stage 45:=================================>                    (71 + 45) / 116][Stage 45:=======================================>              (85 + 31) / 116][Stage 45:==============================================>      (102 + 14) / 116][Stage 45:===================================================>  (110 + 6) / 116][Stage 45:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.237840452 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435304074 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==============================>                       (65 + 50) / 115][Stage 46:====================================>                 (78 + 37) / 115][Stage 46:==========================================>           (90 + 25) / 115][Stage 46:==============================================>      (101 + 14) / 115][Stage 46:===================================================>  (110 + 5) / 115][Stage 46:=====================================================>(114 + 1) / 115]                                                                                [Stage 47:================================>                     (70 + 46) / 116][Stage 47:=======================================>              (84 + 32) / 116][Stage 47:===========================================>          (94 + 22) / 116][Stage 47:===================================================>  (110 + 6) / 116][Stage 47:====================================================> (112 + 4) / 116][Stage 47:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.334376077 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384949475 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:======================================>               (81 + 34) / 115][Stage 48:=======================================>              (84 + 31) / 115][Stage 48:============================================>         (94 + 21) / 115][Stage 48:==================================================>   (108 + 7) / 115][Stage 48:=====================================================>(113 + 2) / 115][Stage 48:=====================================================>(114 + 1) / 115]                                                                                [Stage 49:======================================>               (82 + 34) / 116][Stage 49:========================================>             (87 + 29) / 116][Stage 49:============================================>         (96 + 20) / 116][Stage 49:===============================================>     (104 + 12) / 116][Stage 49:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.187551693 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.492203182 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:=================================>                    (71 + 44) / 115][Stage 50:=======================================>              (85 + 30) / 115][Stage 50:==============================================>       (98 + 17) / 115][Stage 50:=================================================>    (106 + 9) / 115][Stage 50:=====================================================>(113 + 2) / 115]                                                                                [Stage 51:================================>                     (69 + 47) / 116][Stage 51:======================================>               (83 + 33) / 116][Stage 51:=============================================>        (98 + 18) / 116][Stage 51:===================================================>  (111 + 5) / 116][Stage 51:====================================================> (112 + 4) / 116][Stage 51:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.414947031 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422202315 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:================================>                     (70 + 45) / 115][Stage 52:======================================>               (82 + 33) / 115][Stage 52:=============================================>        (96 + 19) / 115][Stage 52:===============================================>     (104 + 11) / 115][Stage 52:===================================================>  (109 + 6) / 115][Stage 52:=====================================================>(114 + 1) / 115]                                                                                [Stage 53:===================================>                  (76 + 40) / 116][Stage 53:=======================================>              (84 + 32) / 116][Stage 53:==============================================>      (102 + 14) / 116][Stage 53:==================================================>   (108 + 8) / 116][Stage 53:==================================================>   (109 + 7) / 116][Stage 53:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.79757825 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407251264 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===================================>                  (75 + 38) / 113][Stage 54:==========================================>           (88 + 25) / 113][Stage 54:===========================================>          (92 + 21) / 113][Stage 54:================================================>    (103 + 10) / 113][Stage 54:====================================================> (109 + 4) / 113]                                                                                [Stage 55:===================================>                  (74 + 40) / 114][Stage 55:===========================================>          (92 + 22) / 114][Stage 55:==============================================>       (99 + 15) / 114][Stage 55:==================================================>   (107 + 7) / 114][Stage 55:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.277397856 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.445536314 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==========================>                           (60 + 61) / 121][Stage 56:============================>                         (64 + 57) / 121][Stage 56:====================================>                 (82 + 39) / 121][Stage 56:=============================================>       (103 + 18) / 121][Stage 56:==================================================>   (113 + 8) / 121][Stage 56:=====================================================>(119 + 2) / 121]                                                                                [Stage 57:===========================>                          (61 + 61) / 122][Stage 57:==============================>                       (70 + 52) / 122][Stage 57:=====================================>                (84 + 38) / 122][Stage 57:============================================>        (103 + 19) / 122][Stage 57:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.58118877 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472715287 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:>                                                       (0 + 0) / 120][Stage 58:===========================>                          (60 + 60) / 120][Stage 58:=============================>                        (65 + 55) / 120][Stage 58:====================================>                 (81 + 39) / 120][Stage 58:=============================================>       (104 + 16) / 120][Stage 58:===================================================>  (115 + 5) / 120][Stage 58:=====================================================>(119 + 1) / 120]                                                                                [Stage 59:===========================>                          (61 + 60) / 121][Stage 59:===============================>                      (70 + 51) / 121][Stage 59:====================================>                 (81 + 40) / 121][Stage 59:=============================================>       (103 + 18) / 121][Stage 59:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.390868831 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386826903 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:=====================================>                (80 + 35) / 115][Stage 60:======================================>               (83 + 32) / 115][Stage 60:=========================================>            (89 + 26) / 115][Stage 60:==============================================>       (99 + 16) / 115][Stage 60:===================================================>  (109 + 6) / 115][Stage 60:====================================================> (111 + 4) / 115]                                                                                [Stage 61:=======================================>              (85 + 31) / 116][Stage 61:==========================================>           (91 + 25) / 116][Stage 61:==============================================>      (101 + 15) / 116][Stage 61:=================================================>    (107 + 9) / 116][Stage 61:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.510933136 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46420559 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (61 + 59) / 120][Stage 62:===============================>                      (71 + 49) / 120][Stage 62:======================================>               (85 + 35) / 120][Stage 62:===============================================>     (108 + 12) / 120][Stage 62:===================================================>  (115 + 5) / 120][Stage 62:=====================================================>(119 + 1) / 120]                                                                                [Stage 63:=============================>                        (65 + 56) / 121][Stage 63:==================================>                   (78 + 43) / 121][Stage 63:==============================================>      (107 + 14) / 121]                                                                                Time elapsed: 3.23957516 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436181707 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==========================>                           (60 + 61) / 121][Stage 64:============================>                         (63 + 58) / 121][Stage 64:=================================>                    (74 + 47) / 121][Stage 64:===========================================>          (97 + 24) / 121][Stage 64:===============================================>     (109 + 12) / 121]                                                                                [Stage 65:===========================>                          (61 + 61) / 122][Stage 65:==================================>                   (78 + 44) / 122][Stage 65:========================================>             (92 + 30) / 122][Stage 65:===============================================>     (109 + 13) / 122][Stage 65:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.408032204 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394686047 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:========================================>             (84 + 29) / 113][Stage 66:==========================================>           (89 + 24) / 113][Stage 66:===============================================>     (102 + 11) / 113][Stage 66:=====================================================>(111 + 2) / 113]                                                                                [Stage 67:======================================>               (82 + 32) / 114][Stage 67:===========================================>          (91 + 23) / 114][Stage 67:=============================================>        (97 + 17) / 114][Stage 67:===================================================>  (109 + 5) / 114][Stage 67:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.082737224 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443755749 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (60 + 60) / 120][Stage 68:===============================>                      (69 + 51) / 120][Stage 68:========================================>             (89 + 31) / 120][Stage 68:=================================================>    (111 + 9) / 120][Stage 68:=====================================================>(118 + 2) / 120]                                                                                [Stage 69:=============================>                        (65 + 56) / 121][Stage 69:===================================>                  (79 + 42) / 121][Stage 69:=============================================>       (103 + 18) / 121][Stage 69:==================================================>   (114 + 7) / 121][Stage 69:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.322644543 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373740923 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:======================================>               (82 + 33) / 115][Stage 70:==========================================>           (91 + 24) / 115][Stage 70:===============================================>     (103 + 12) / 115][Stage 70:====================================================> (111 + 4) / 115][Stage 70:=====================================================>(114 + 1) / 115]                                                                                [Stage 71:======================================>               (83 + 33) / 116][Stage 71:==========================================>           (91 + 25) / 116][Stage 71:===============================================>     (104 + 12) / 116]                                                                                Time elapsed: 2.76225464 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41285576 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:================================>                     (72 + 46) / 118][Stage 72:=================================>                    (73 + 45) / 118][Stage 72:===================================>                  (77 + 41) / 118][Stage 72:========================================>             (88 + 30) / 118][Stage 72:============================================>         (98 + 20) / 118][Stage 72:===================================================>  (113 + 5) / 118]                                                                                [Stage 73:==================================>                   (75 + 44) / 119][Stage 73:====================================>                 (81 + 38) / 119][Stage 73:========================================>             (90 + 29) / 119][Stage 73:=============================================>       (103 + 16) / 119][Stage 73:=================================================>    (110 + 9) / 119][Stage 73:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.670192436 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405446894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (58 + 55) / 113][Stage 74:============================>                         (60 + 53) / 113][Stage 74:=================================>                    (71 + 42) / 113][Stage 74:========================================>             (84 + 29) / 113][Stage 74:===========================================>          (92 + 21) / 113]                                                                                [Stage 75:============================>                         (60 + 54) / 114][Stage 75:==============================>                       (65 + 49) / 114][Stage 75:========================================>             (86 + 28) / 114][Stage 75:================================================>    (104 + 10) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.249078895 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.575234615 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===============================>                      (67 + 48) / 115][Stage 76:======================================>               (83 + 32) / 115][Stage 76:=============================================>        (96 + 19) / 115][Stage 76:==============================================>      (100 + 15) / 115][Stage 76:==================================================>   (108 + 7) / 115][Stage 76:=====================================================>(114 + 1) / 115]                                                                                [Stage 77:=================================>                    (71 + 45) / 116][Stage 77:=========================================>            (89 + 27) / 116][Stage 77:==============================================>      (101 + 15) / 116][Stage 77:==================================================>   (108 + 8) / 116][Stage 77:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.192300954 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385617901 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:======================================>               (81 + 34) / 115][Stage 78:===========================================>          (93 + 22) / 115][Stage 78:===================================================>  (109 + 6) / 115]                                                                                [Stage 79:========================================>             (87 + 29) / 116][Stage 79:============================================>         (95 + 21) / 116][Stage 79:==================================================>   (109 + 7) / 116][Stage 79:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.605149849 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435964512 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (60 + 60) / 120][Stage 80:==================================>                   (77 + 43) / 120][Stage 80:============================================>         (99 + 21) / 120][Stage 80:=====================================================>(119 + 1) / 120]                                                                                [Stage 81:===========================>                          (61 + 60) / 121][Stage 81:==============================>                       (69 + 52) / 121][Stage 81:==========================================>           (96 + 25) / 121][Stage 81:=================================================>    (112 + 9) / 121]                                                                                Time elapsed: 2.816738502 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431655534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==========================>                           (60 + 61) / 121][Stage 82:============================>                         (63 + 58) / 121][Stage 82:===================================>                  (80 + 41) / 121][Stage 82:==========================================>           (95 + 26) / 121][Stage 82:===================================================>  (115 + 6) / 121]                                                                                [Stage 83:===========================>                          (62 + 60) / 122][Stage 83:==============================>                       (70 + 52) / 122][Stage 83:========================================>             (91 + 31) / 122][Stage 83:===============================================>     (109 + 13) / 122][Stage 83:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.227540587 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404160417 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:============================>                         (59 + 54) / 113][Stage 84:==============================>                       (63 + 50) / 113][Stage 84:=====================================>                (78 + 35) / 113][Stage 84:===============================================>      (99 + 14) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:===========================>                          (59 + 55) / 114][Stage 85:===============================>                      (67 + 47) / 114][Stage 85:==========================================>           (89 + 25) / 114][Stage 85:==================================================>   (106 + 8) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.93493024 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 114 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397809321 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===================================>                  (75 + 40) / 115][Stage 86:===========================================>          (92 + 23) / 115][Stage 86:==================================================>   (108 + 7) / 115][Stage 86:====================================================> (112 + 3) / 115][Stage 86:=====================================================>(114 + 1) / 115]                                                                                [Stage 87:=================================>                    (72 + 44) / 116][Stage 87:=======================================>              (84 + 32) / 116][Stage 87:==============================================>       (99 + 17) / 116][Stage 87:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.982106277 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430986684 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (60 + 60) / 120][Stage 88:===========================>                          (62 + 58) / 120][Stage 88:==================================>                   (77 + 43) / 120][Stage 88:============================================>        (101 + 19) / 120][Stage 88:====================================================> (116 + 4) / 120]                                                                                [Stage 89:===========================>                          (62 + 59) / 121][Stage 89:================================>                     (73 + 48) / 121][Stage 89:======================================>               (86 + 35) / 121][Stage 89:==============================================>      (107 + 14) / 121][Stage 89:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.210634011 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378958656 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:================================>                     (72 + 46) / 118][Stage 90:====================================>                 (80 + 38) / 118][Stage 90:=======================================>              (86 + 32) / 118][Stage 90:=============================================>       (101 + 17) / 118][Stage 90:===================================================>  (113 + 5) / 118][Stage 90:=====================================================>(117 + 1) / 118]                                                                                [Stage 91:=================================>                    (73 + 46) / 119][Stage 91:==================================>                   (75 + 44) / 119][Stage 91:=======================================>              (88 + 31) / 119][Stage 91:============================================>         (98 + 21) / 119][Stage 91:===============================================>     (107 + 12) / 119]                                                                                Time elapsed: 3.378167059 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440939207 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==========================>                           (60 + 61) / 121][Stage 92:=============================>                        (65 + 56) / 121][Stage 92:====================================>                 (81 + 40) / 121][Stage 92:============================================>        (101 + 20) / 121][Stage 92:====================================================> (118 + 3) / 121]                                                                                [Stage 93:===========================>                          (61 + 61) / 122][Stage 93:==============================>                       (68 + 54) / 122][Stage 93:======================================>               (87 + 35) / 122][Stage 93:===============================================>     (109 + 13) / 122][Stage 93:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 2.986366983 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424720567 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (62 + 58) / 120][Stage 94:===============================>                      (69 + 51) / 120][Stage 94:========================================>             (90 + 30) / 120][Stage 94:=============================================>       (102 + 18) / 120]                                                                                [Stage 95:============================>                         (63 + 58) / 121][Stage 95:================================>                     (73 + 48) / 121][Stage 95:=========================================>            (94 + 27) / 121][Stage 95:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 2.950122562 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417630064 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (60 + 60) / 120][Stage 96:============================>                         (64 + 56) / 120][Stage 96:=======================================>              (87 + 33) / 120][Stage 96:================================================>    (109 + 11) / 120][Stage 96:=====================================================>(119 + 1) / 120]                                                                                [Stage 97:===========================>                          (62 + 59) / 121][Stage 97:===================================>                  (79 + 42) / 121][Stage 97:==============================================>      (106 + 15) / 121][Stage 97:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.031359689 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402618294 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (58 + 55) / 113][Stage 98:================================>                     (67 + 46) / 113][Stage 98:=========================================>            (86 + 27) / 113][Stage 98:===================================================>  (107 + 6) / 113][Stage 98:=====================================================>(111 + 2) / 113]                                                                                [Stage 99:===========================>                          (59 + 55) / 114][Stage 99:=============================>                        (62 + 52) / 114][Stage 99:=======================================>              (84 + 30) / 114][Stage 99:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.051774215 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387369402 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===================================>                 (75 + 38) / 113][Stage 100:=======================================>             (85 + 28) / 113][Stage 100:=============================================>       (97 + 16) / 113][Stage 100:=================================================>   (106 + 7) / 113][Stage 100:===================================================> (110 + 3) / 113]                                                                                [Stage 101:===================================>                 (77 + 37) / 114][Stage 101:======================================>              (83 + 31) / 114][Stage 101:===========================================>         (94 + 20) / 114][Stage 101:===============================================>    (104 + 10) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.991126625 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425593648 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 61) / 121][Stage 102:==================================>                  (79 + 42) / 121][Stage 102:==========================================>          (97 + 24) / 121][Stage 102:====================================================>(119 + 2) / 121]                                                                                [Stage 103:==========================>                          (61 + 61) / 122][Stage 103:=============================>                       (68 + 54) / 122][Stage 103:==================================>                  (80 + 42) / 122][Stage 103:===========================================>        (101 + 21) / 122][Stage 103:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 2.972577697 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392354802 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:================================>                    (71 + 44) / 115][Stage 104:======================================>              (83 + 32) / 115][Stage 104:==============================================>     (102 + 13) / 115][Stage 104:===================================================> (112 + 3) / 115]                                                                                [Stage 105:===============================>                     (68 + 48) / 116][Stage 105:======================================>              (84 + 32) / 116][Stage 105:=============================================>      (102 + 14) / 116][Stage 105:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.916064583 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.541777901 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 60) / 120][Stage 106:=============================>                       (66 + 54) / 120][Stage 106:===================================>                 (80 + 40) / 120][Stage 106:===========================================>        (101 + 19) / 120][Stage 106:====================================================>(118 + 2) / 120]                                                                                [Stage 107:==========================>                          (61 + 60) / 121][Stage 107:==============================>                      (69 + 52) / 121][Stage 107:======================================>              (87 + 34) / 121][Stage 107:==============================================>     (108 + 13) / 121]                                                                                Time elapsed: 2.970551581 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388831429 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=============================>                       (65 + 50) / 115][Stage 108:===================================>                 (76 + 39) / 115][Stage 108:==========================================>          (92 + 23) / 115][Stage 108:===================================================> (112 + 3) / 115]                                                                                [Stage 109:================================>                    (71 + 45) / 116][Stage 109:======================================>              (85 + 31) / 116][Stage 109:=============================================>      (101 + 15) / 116][Stage 109:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.815825967 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360758028 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=====================================>               (79 + 34) / 113][Stage 110:==========================================>          (90 + 23) / 113][Stage 110:=============================================>       (97 + 16) / 113][Stage 110:===================================================> (109 + 4) / 113][Stage 110:====================================================>(112 + 1) / 113]                                                                                [Stage 111:=====================================>               (80 + 34) / 114][Stage 111:===========================================>         (93 + 21) / 114][Stage 111:==============================================>     (102 + 12) / 114][Stage 111:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.137297549 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402521525 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (61 + 59) / 120][Stage 112:==============================>                      (70 + 50) / 120][Stage 112:========================================>            (91 + 29) / 120][Stage 112:====================================================>(118 + 2) / 120]                                                                                [Stage 113:===========================>                         (63 + 58) / 121][Stage 113:================================>                    (75 + 46) / 121][Stage 113:==========================================>          (97 + 24) / 121][Stage 113:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.006291119 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372233143 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:================================>                    (72 + 46) / 118][Stage 114:================================>                    (73 + 45) / 118][Stage 114:========================================>            (90 + 28) / 118][Stage 114:=============================================>      (104 + 14) / 118][Stage 114:====================================================>(116 + 2) / 118]                                                                                [Stage 115:==================================>                  (77 + 42) / 119][Stage 115:=======================================>             (89 + 30) / 119][Stage 115:================================================>    (110 + 9) / 119][Stage 115:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.018663395 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362840463 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:====================================>                (78 + 35) / 113][Stage 116:===========================================>         (93 + 20) / 113][Stage 116:=============================================>       (97 + 16) / 113][Stage 116:=================================================>   (106 + 7) / 113][Stage 116:===================================================> (110 + 3) / 113]                                                                                [Stage 117:======================================>              (83 + 31) / 114][Stage 117:==========================================>          (91 + 23) / 114][Stage 117:==============================================>     (103 + 11) / 114][Stage 117:==================================================>  (108 + 6) / 114][Stage 117:===================================================> (111 + 3) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.451424904 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389070446 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:================================>                    (72 + 46) / 118][Stage 118:==================================>                  (76 + 42) / 118][Stage 118:=========================================>           (93 + 25) / 118][Stage 118:===============================================>    (107 + 11) / 118][Stage 118:==================================================>  (113 + 5) / 118]                                                                                [Stage 119:================================>                    (73 + 46) / 119][Stage 119:=================================>                   (75 + 44) / 119][Stage 119:===================================>                 (80 + 39) / 119][Stage 119:======================================>              (86 + 33) / 119][Stage 119:===========================================>         (97 + 22) / 119][Stage 119:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.469527028 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36640625 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:================================>                    (72 + 46) / 118][Stage 120:====================================>                (82 + 36) / 118][Stage 120:==========================================>          (95 + 23) / 118][Stage 120:================================================>    (109 + 9) / 118][Stage 120:====================================================>(116 + 2) / 118]                                                                                [Stage 121:================================>                    (73 + 46) / 119][Stage 121:===================================>                 (79 + 40) / 119][Stage 121:=======================================>             (89 + 30) / 119][Stage 121:============================================>       (102 + 17) / 119][Stage 121:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.073737715 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386700183 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (59 + 54) / 113][Stage 122:==============================>                      (65 + 48) / 113][Stage 122:==================================>                  (74 + 39) / 113][Stage 122:=============================================>       (97 + 16) / 113][Stage 122:=================================================>   (106 + 7) / 113]                                                                                [Stage 123:============================>                        (61 + 53) / 114][Stage 123:================================>                    (69 + 45) / 114][Stage 123:=======================================>             (85 + 29) / 114][Stage 123:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.219759693 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416611216 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 61) / 121][Stage 124:============================>                        (64 + 57) / 121][Stage 124:===================================>                 (80 + 41) / 121][Stage 124:==========================================>         (100 + 21) / 121][Stage 124:===================================================> (117 + 4) / 121]                                                                                [Stage 125:===========================>                         (64 + 58) / 122][Stage 125:===============================>                     (73 + 49) / 122][Stage 125:========================================>            (94 + 28) / 122][Stage 125:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.082820553 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389999868 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (59 + 54) / 113][Stage 126:================================>                    (70 + 43) / 113][Stage 126:=========================================>           (89 + 24) / 113][Stage 126:==============================================>     (102 + 11) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:===========================>                         (60 + 54) / 114][Stage 127:==============================>                      (65 + 49) / 114][Stage 127:=====================================>               (80 + 34) / 114][Stage 127:=============================================>       (97 + 17) / 114][Stage 127:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.096202157 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370388459 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=====================================>               (80 + 33) / 113][Stage 128:==========================================>          (91 + 22) / 113][Stage 128:===============================================>    (103 + 10) / 113][Stage 128:===================================================> (110 + 3) / 113]                                                                                [Stage 129:======================================>              (83 + 31) / 114][Stage 129:===========================================>         (93 + 21) / 114][Stage 129:=============================================>      (100 + 14) / 114][Stage 129:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.921668419 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38236194 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==================================>                  (75 + 40) / 115][Stage 130:=======================================>             (85 + 30) / 115][Stage 130:================================================>    (106 + 9) / 115][Stage 130:===================================================> (112 + 3) / 115]                                                                                [Stage 131:================================>                    (71 + 45) / 116][Stage 131:=======================================>             (86 + 30) / 116][Stage 131:============================================>        (98 + 18) / 116][Stage 131:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.15865207 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340857886 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:=====================================>               (81 + 34) / 115][Stage 132:=======================================>             (86 + 29) / 115][Stage 132:============================================>        (97 + 18) / 115][Stage 132:===============================================>    (105 + 10) / 115][Stage 132:==================================================>  (110 + 5) / 115]                                                                                [Stage 133:=======================================>             (86 + 30) / 116][Stage 133:==========================================>          (93 + 23) / 116][Stage 133:==============================================>     (104 + 12) / 116][Stage 133:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.111497239 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337925219 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=====================================>               (82 + 33) / 115][Stage 134:=========================================>           (91 + 24) / 115][Stage 134:===============================================>    (105 + 10) / 115][Stage 134:===================================================> (112 + 3) / 115][Stage 134:====================================================>(114 + 1) / 115]                                                                                [Stage 135:======================================>              (84 + 32) / 116][Stage 135:===========================================>         (96 + 20) / 116][Stage 135:===============================================>    (105 + 11) / 116][Stage 135:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.989321828 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38505518 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (58 + 55) / 113][Stage 136:=============================>                       (62 + 51) / 113][Stage 136:====================================>                (78 + 35) / 113][Stage 136:=============================================>       (98 + 15) / 113][Stage 136:===================================================> (110 + 3) / 113]                                                                                [Stage 137:===========================>                         (60 + 54) / 114][Stage 137:=============================>                       (64 + 50) / 114][Stage 137:==================================>                  (75 + 39) / 114][Stage 137:=========================================>           (90 + 24) / 114][Stage 137:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.184632562 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388236606 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (58 + 55) / 113][Stage 138:=============================>                       (63 + 50) / 113][Stage 138:=================================>                   (72 + 41) / 113][Stage 138:============================================>        (95 + 18) / 113][Stage 138:====================================================>(111 + 2) / 113]                                                                                [Stage 139:============================>                        (62 + 52) / 114][Stage 139:====================================>                (78 + 36) / 114][Stage 139:==============================================>      (99 + 15) / 114][Stage 139:==================================================>  (109 + 5) / 114][Stage 139:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.098919043 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355752728 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=================================>                   (72 + 41) / 113][Stage 140:=======================================>             (85 + 28) / 113][Stage 140:===========================================>         (93 + 20) / 113][Stage 140:==================================================>  (107 + 6) / 113][Stage 140:====================================================>(112 + 1) / 113]                                                                                [Stage 141:=================================>                   (73 + 41) / 114][Stage 141:==========================================>          (92 + 22) / 114][Stage 141:=============================================>      (100 + 14) / 114][Stage 141:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.872271244 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371455341 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==================================>                  (74 + 41) / 115][Stage 142:=======================================>             (85 + 30) / 115][Stage 142:===============================================>    (104 + 11) / 115][Stage 142:====================================================>(113 + 2) / 115]                                                                                [Stage 143:===============================>                     (69 + 47) / 116][Stage 143:======================================>              (84 + 32) / 116][Stage 143:============================================>        (98 + 18) / 116][Stage 143:=================================================>   (108 + 8) / 116][Stage 143:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.997010237 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365207866 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:================================>                    (72 + 46) / 118][Stage 144:==================================>                  (77 + 41) / 118][Stage 144:=========================================>           (93 + 25) / 118][Stage 144:===================================================> (115 + 3) / 118]                                                                                [Stage 145:================================>                    (74 + 45) / 119][Stage 145:======================================>              (87 + 32) / 119][Stage 145:=============================================>      (104 + 15) / 119][Stage 145:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 2.956627784 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 147 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390136897 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===================================>                 (76 + 39) / 115][Stage 146:==========================================>          (92 + 23) / 115][Stage 146:===============================================>    (104 + 11) / 115][Stage 146:===================================================> (111 + 4) / 115][Stage 146:====================================================>(114 + 1) / 115]                                                                                [Stage 147:===============================>                     (68 + 48) / 116][Stage 147:=====================================>               (82 + 34) / 116][Stage 147:============================================>        (97 + 19) / 116][Stage 147:==================================================>  (111 + 5) / 116][Stage 147:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.181536226 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410989373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (60 + 60) / 120][Stage 148:==============================>                      (69 + 51) / 120][Stage 148:======================================>              (87 + 33) / 120][Stage 148:=============================================>      (104 + 16) / 120][Stage 148:====================================================>(118 + 2) / 120]                                                                                [Stage 149:==========================>                          (61 + 60) / 121][Stage 149:=============================>                       (67 + 54) / 121][Stage 149:===================================>                 (81 + 40) / 121][Stage 149:=============================================>      (107 + 14) / 121][Stage 149:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.06073411 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385294513 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (59 + 54) / 113][Stage 150:==================================>                  (74 + 39) / 113][Stage 150:=============================================>       (98 + 15) / 113][Stage 150:=================================================>   (105 + 8) / 113]                                                                                [Stage 151:===========================>                         (59 + 55) / 114][Stage 151:======================================>              (83 + 31) / 114][Stage 151:============================================>        (96 + 18) / 114][Stage 151:===================================================> (110 + 4) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.061030543 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395815202 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (58 + 55) / 113][Stage 152:==============================>                      (64 + 49) / 113][Stage 152:=====================================>               (81 + 32) / 113][Stage 152:============================================>        (95 + 18) / 113][Stage 152:====================================================>(111 + 2) / 113]                                                                                [Stage 153:============================>                        (61 + 53) / 114][Stage 153:==================================>                  (75 + 39) / 114][Stage 153:=============================================>       (97 + 17) / 114][Stage 153:==================================================>  (109 + 5) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.384733162 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401929613 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (61 + 60) / 121][Stage 154:===============================>                     (72 + 49) / 121][Stage 154:========================================>            (92 + 29) / 121][Stage 154:=================================================>   (112 + 9) / 121][Stage 154:====================================================>(120 + 1) / 121]                                                                                [Stage 155:==========================>                          (61 + 61) / 122][Stage 155:==============================>                      (70 + 52) / 122][Stage 155:=======================================>             (91 + 31) / 122][Stage 155:=================================================>   (115 + 7) / 122][Stage 155:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.085175348 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386849903 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (58 + 55) / 113][Stage 156:============================>                        (61 + 52) / 113][Stage 156:====================================>                (78 + 35) / 113][Stage 156:==============================================>      (99 + 14) / 113]                                                                                [Stage 157:===========================>                         (60 + 54) / 114][Stage 157:================================>                    (69 + 45) / 114][Stage 157:=====================================>               (81 + 33) / 114][Stage 157:================================================>    (105 + 9) / 114][Stage 157:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.084630174 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363957548 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:================================>                    (73 + 45) / 118][Stage 158:===================================>                 (78 + 40) / 118][Stage 158:========================================>            (90 + 28) / 118][Stage 158:=============================================>      (103 + 15) / 118][Stage 158:====================================================>(116 + 2) / 118]                                                                                [Stage 159:================================>                    (74 + 45) / 119][Stage 159:====================================>                (82 + 37) / 119][Stage 159:========================================>            (90 + 29) / 119][Stage 159:==============================================>     (106 + 13) / 119][Stage 159:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.046730263 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354631928 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (70 + 43) / 113][Stage 160:======================================>              (83 + 30) / 113][Stage 160:============================================>        (94 + 19) / 113][Stage 160:=================================================>   (105 + 8) / 113][Stage 160:===================================================> (110 + 3) / 113]                                                                                [Stage 161:===================================>                 (77 + 37) / 114][Stage 161:========================================>            (88 + 26) / 114][Stage 161:==============================================>      (99 + 15) / 114][Stage 161:==================================================>  (109 + 5) / 114][Stage 161:====================================================>(112 + 2) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.289577373 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400151412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 60) / 120][Stage 162:===========================>                         (63 + 57) / 120][Stage 162:=====================================>               (84 + 36) / 120][Stage 162:==============================================>     (107 + 13) / 120]                                                                                [Stage 163:==========================>                          (61 + 60) / 121][Stage 163:===============================>                     (71 + 50) / 121][Stage 163:======================================>              (88 + 33) / 121][Stage 163:=================================================>   (114 + 7) / 121]                                                                                Time elapsed: 2.942203618 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383653211 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (59 + 54) / 113][Stage 164:==============================>                      (65 + 48) / 113][Stage 164:=====================================>               (80 + 33) / 113][Stage 164:=============================================>       (98 + 15) / 113][Stage 164:===================================================> (110 + 3) / 113]                                                                                [Stage 165:============================>                        (62 + 52) / 114][Stage 165:==================================>                  (74 + 40) / 114][Stage 165:=============================================>       (98 + 16) / 114][Stage 165:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.006839776 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353141072 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:=================================>                   (71 + 42) / 113][Stage 166:=====================================>               (81 + 32) / 113][Stage 166:===========================================>         (93 + 20) / 113][Stage 166:================================================>    (104 + 9) / 113][Stage 166:====================================================>(111 + 2) / 113]                                                                                [Stage 167:======================================>              (82 + 32) / 114][Stage 167:=========================================>           (90 + 24) / 114][Stage 167:==============================================>     (102 + 12) / 114][Stage 167:==================================================>  (108 + 6) / 114][Stage 167:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.158889816 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352079462 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:====================================>                (79 + 36) / 115][Stage 168:========================================>            (88 + 27) / 115][Stage 168:=============================================>       (99 + 16) / 115][Stage 168:===================================================> (111 + 4) / 115]                                                                                [Stage 169:======================================>              (85 + 31) / 116][Stage 169:===========================================>         (96 + 20) / 116][Stage 169:=================================================>   (108 + 8) / 116][Stage 169:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.779378233 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 221 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 221 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372807056 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:=====================================>               (79 + 34) / 113][Stage 170:==========================================>          (90 + 23) / 113][Stage 170:==============================================>     (100 + 13) / 113][Stage 170:===================================================> (109 + 4) / 113]                                                                                [Stage 171:=======================================>             (84 + 30) / 114][Stage 171:==========================================>          (91 + 23) / 114][Stage 171:=============================================>      (100 + 14) / 114][Stage 171:===================================================> (110 + 4) / 114][Stage 171:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.077813631 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 178 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397406123 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==================================>                  (74 + 41) / 115][Stage 172:=========================================>           (91 + 24) / 115][Stage 172:=================================================>   (107 + 8) / 115][Stage 172:====================================================>(114 + 1) / 115]                                                                                [Stage 173:====================================>                (79 + 37) / 116][Stage 173:=========================================>           (90 + 26) / 116][Stage 173:===============================================>    (105 + 11) / 116][Stage 173:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.004862264 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381589708 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (59 + 54) / 113][Stage 174:==============================>                      (65 + 48) / 113][Stage 174:======================================>              (82 + 31) / 113][Stage 174:===============================================>    (103 + 10) / 113][Stage 174:===================================================> (110 + 3) / 113]                                                                                [Stage 175:===========================>                         (60 + 54) / 114][Stage 175:==============================>                      (66 + 48) / 114][Stage 175:===================================>                 (77 + 37) / 114][Stage 175:=========================================>           (90 + 24) / 114][Stage 175:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.17696079 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354437017 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:======================================>              (84 + 31) / 115][Stage 176:=========================================>           (89 + 26) / 115][Stage 176:===============================================>    (105 + 10) / 115][Stage 176:===================================================> (112 + 3) / 115][Stage 176:====================================================>(114 + 1) / 115]                                                                                [Stage 177:=====================================>               (83 + 33) / 116][Stage 177:==========================================>          (93 + 23) / 116][Stage 177:=============================================>      (101 + 15) / 116][Stage 177:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.067417814 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336116621 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:>                                                      (0 + 0) / 115][Stage 178:=====================================>               (82 + 33) / 115][Stage 178:========================================>            (88 + 27) / 115][Stage 178:===============================================>    (104 + 11) / 115][Stage 178:===================================================> (111 + 4) / 115][Stage 178:====================================================>(114 + 1) / 115]                                                                                [Stage 179:======================================>              (84 + 32) / 116][Stage 179:=========================================>           (91 + 25) / 116][Stage 179:=============================================>      (102 + 14) / 116][Stage 179:==================================================>  (110 + 6) / 116][Stage 179:===================================================> (112 + 4) / 116][Stage 179:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.318039381 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342747576 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=====================================>               (81 + 34) / 115][Stage 180:========================================>            (87 + 28) / 115][Stage 180:=============================================>       (98 + 17) / 115][Stage 180:===============================================>    (105 + 10) / 115][Stage 180:====================================================>(113 + 2) / 115]                                                                                [Stage 181:====================================>                (80 + 36) / 116][Stage 181:========================================>            (88 + 28) / 116][Stage 181:============================================>       (100 + 16) / 116][Stage 181:=================================================>   (108 + 8) / 116][Stage 181:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.056391161 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441737931 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (60 + 61) / 121][Stage 182:==========================>                          (61 + 60) / 121][Stage 182:===================================>                 (80 + 41) / 121][Stage 182:============================================>       (103 + 18) / 121][Stage 182:====================================================>(119 + 2) / 121][Stage 182:====================================================>(120 + 1) / 121]                                                                                [Stage 183:=============================>                       (67 + 55) / 122][Stage 183:=====================================>               (86 + 36) / 122][Stage 183:============================================>       (104 + 18) / 122][Stage 183:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.272171793 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357060075 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:>                                                      (0 + 0) / 113][Stage 184:=================================>                   (72 + 41) / 113][Stage 184:=======================================>             (85 + 28) / 113][Stage 184:=============================================>       (97 + 16) / 113][Stage 184:==================================================>  (107 + 6) / 113][Stage 184:====================================================>(112 + 1) / 113]                                                                                [Stage 185:====================================>                (79 + 35) / 114][Stage 185:=========================================>           (90 + 24) / 114][Stage 185:==============================================>     (101 + 13) / 114][Stage 185:==================================================>  (109 + 5) / 114][Stage 185:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.952929249 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370435886 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==================================>                  (74 + 41) / 115][Stage 186:=========================================>           (91 + 24) / 115][Stage 186:=============================================>       (99 + 16) / 115]                                                                                [Stage 187:==================================>                  (75 + 41) / 116][Stage 187:==========================================>          (93 + 23) / 116][Stage 187:=============================================>       (99 + 17) / 116][Stage 187:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.643880772 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379500223 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:======================================>              (83 + 32) / 115][Stage 188:=========================================>           (91 + 24) / 115][Stage 188:=================================================>   (108 + 7) / 115][Stage 188:====================================================>(113 + 2) / 115]                                                                                [Stage 189:======================================>              (84 + 32) / 116][Stage 189:==========================================>          (94 + 22) / 116][Stage 189:=================================================>   (108 + 8) / 116][Stage 189:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.029551978 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366565592 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==============================>                      (67 + 48) / 115][Stage 190:===================================>                 (76 + 39) / 115][Stage 190:============================================>        (96 + 19) / 115][Stage 190:=================================================>   (107 + 8) / 115]                                                                                [Stage 191:=================================>                   (74 + 42) / 116][Stage 191:=======================================>             (87 + 29) / 116][Stage 191:===========================================>         (96 + 20) / 116][Stage 191:================================================>    (107 + 9) / 116][Stage 191:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.018947459 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40208635 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (61 + 59) / 120][Stage 192:==================================>                  (78 + 42) / 120][Stage 192:============================================>       (102 + 18) / 120]                                                                                [Stage 193:===========================>                         (62 + 59) / 121][Stage 193:=============================>                       (67 + 54) / 121][Stage 193:======================================>              (87 + 34) / 121][Stage 193:===============================================>    (110 + 11) / 121]                                                                                Time elapsed: 2.817469732 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390924035 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=================================>                   (73 + 42) / 115][Stage 194:========================================>            (88 + 27) / 115][Stage 194:===============================================>    (105 + 10) / 115][Stage 194:==================================================>  (110 + 5) / 115]                                                                                [Stage 195:===================================>                 (77 + 39) / 116][Stage 195:==========================================>          (92 + 24) / 116][Stage 195:===============================================>    (106 + 10) / 116][Stage 195:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.807206398 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39524313 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==========================>                          (60 + 60) / 120][Stage 196:=============================>                       (67 + 53) / 120][Stage 196:========================================>            (91 + 29) / 120][Stage 196:=============================================>      (104 + 16) / 120][Stage 196:==================================================>  (114 + 6) / 120]                                                                                [Stage 197:=============================>                       (67 + 54) / 121][Stage 197:==================================>                  (79 + 42) / 121][Stage 197:===========================================>        (101 + 20) / 121][Stage 197:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.046206703 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426774695 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==========================>                          (60 + 61) / 121][Stage 198:============================>                        (64 + 57) / 121][Stage 198:====================================>                (83 + 38) / 121][Stage 198:=============================================>      (106 + 15) / 121][Stage 198:====================================================>(120 + 1) / 121]                                                                                [Stage 199:==========================>                          (61 + 61) / 122][Stage 199:=============================>                       (69 + 53) / 122][Stage 199:===================================>                 (81 + 41) / 122][Stage 199:===============================================>    (111 + 11) / 122][Stage 199:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.067307451 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359062484 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:================================>                    (72 + 46) / 118][Stage 200:=====================================>               (84 + 34) / 118][Stage 200:============================================>       (102 + 16) / 118][Stage 200:====================================================>(116 + 2) / 118]                                                                                [Stage 201:================================>                    (73 + 46) / 119][Stage 201:=================================>                   (75 + 44) / 119][Stage 201:=========================================>           (93 + 26) / 119][Stage 201:===============================================>    (109 + 10) / 119][Stage 201:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.870704867 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m49.656s
user	11m20.116s
sys	0m29.184s
