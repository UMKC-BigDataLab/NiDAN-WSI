Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 16:26:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:26:56 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:26:56 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:26:56 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 16:26:59 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:27:09 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524162658-0568).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.392520261 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:===========>                                           (24 + 91) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:=========================================>             (86 + 29) / 115][Stage 0:============================================>          (93 + 22) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:===============================>                       (66 + 50) / 116][Stage 1:=================================>                     (71 + 45) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:========================================>              (85 + 31) / 116][Stage 1:===========================================>           (92 + 24) / 116][Stage 1:==============================================>       (100 + 16) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:====================================================>  (110 + 6) / 116][Stage 1:====================================================>  (111 + 5) / 116]                                                                                Time elapsed: 12.71069981 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=220", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=220,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.64404326 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=============================>                         (61 + 52) / 113][Stage 2:==================================>                    (70 + 43) / 113][Stage 2:===================================>                   (73 + 40) / 113][Stage 2:=======================================>               (82 + 31) / 113][Stage 2:==========================================>            (88 + 25) / 113][Stage 2:==============================================>        (95 + 18) / 113][Stage 2:===============================================>      (100 + 13) / 113][Stage 2:===================================================>   (106 + 7) / 113][Stage 2:====================================================>  (108 + 5) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:============================>                          (60 + 54) / 114][Stage 3:================================>                      (67 + 47) / 114][Stage 3:=================================>                     (70 + 44) / 114][Stage 3:======================================>                (79 + 35) / 114][Stage 3:===========================================>           (90 + 24) / 114][Stage 3:===============================================>       (98 + 16) / 114][Stage 3:===============================================>      (100 + 14) / 114][Stage 3:==================================================>    (105 + 9) / 114][Stage 3:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 5.138826401 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=231", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=231,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.63564807 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=================================>                     (69 + 44) / 113][Stage 4:====================================>                  (74 + 39) / 113][Stage 4:====================================>                  (76 + 37) / 113][Stage 4:========================================>              (83 + 30) / 113][Stage 4:=============================================>         (93 + 20) / 113][Stage 4:===============================================>       (97 + 16) / 113][Stage 4:===============================================>      (100 + 13) / 113][Stage 4:===================================================>   (106 + 7) / 113][Stage 4:=====================================================> (110 + 3) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:=====================================>                 (78 + 36) / 114][Stage 5:=======================================>               (81 + 33) / 114][Stage 5:========================================>              (84 + 30) / 114][Stage 5:==============================================>        (96 + 18) / 114][Stage 5:=================================================>    (104 + 10) / 114][Stage 5:=====================================================> (110 + 4) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.807005691 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=38", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=38,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.707385987 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=========================>                             (52 + 61) / 113][Stage 6:==============================>                        (63 + 50) / 113][Stage 6:=================================>                     (69 + 44) / 113][Stage 6:====================================>                  (76 + 37) / 113][Stage 6:==========================================>            (87 + 26) / 113][Stage 6:================================================>     (101 + 12) / 113][Stage 6:====================================================>  (108 + 5) / 113][Stage 6:=====================================================> (110 + 3) / 113][Stage 6:======================================================>(112 + 1) / 113]                                                                                [Stage 7:============================>                          (59 + 55) / 114][Stage 7:=============================>                         (61 + 53) / 114][Stage 7:==================================>                    (72 + 42) / 114][Stage 7:=========================================>             (86 + 28) / 114][Stage 7:=================================================>    (104 + 10) / 114][Stage 7:====================================================>  (109 + 5) / 114][Stage 7:=====================================================> (110 + 4) / 114][Stage 7:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.511115772 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=94", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=94,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.562872757 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=====================================>                 (79 + 36) / 115][Stage 8:=======================================>               (83 + 32) / 115][Stage 8:============================================>          (93 + 22) / 115][Stage 8:================================================>     (103 + 12) / 115][Stage 8:=====================================================> (111 + 4) / 115][Stage 8:=====================================================> (112 + 3) / 115]                                                                                [Stage 9:=======================================>               (83 + 33) / 116][Stage 9:=============================================>         (96 + 20) / 116][Stage 9:===================================================>   (108 + 8) / 116][Stage 9:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.872887605 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=193", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=193,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.597171308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (60 + 60) / 120][Stage 10:=============================>                        (65 + 55) / 120][Stage 10:=================================>                    (74 + 46) / 120][Stage 10:========================================>             (90 + 30) / 120][Stage 10:============================================>         (99 + 21) / 120][Stage 10:=================================================>    (111 + 9) / 120][Stage 10:=====================================================>(119 + 1) / 120]                                                                                [Stage 11:===========================>                          (62 + 59) / 121][Stage 11:===============================>                      (70 + 51) / 121][Stage 11:=====================================>                (85 + 36) / 121][Stage 11:=============================================>       (103 + 18) / 121][Stage 11:====================================================> (117 + 4) / 121][Stage 11:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.745261116 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=241", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=241,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.616222932 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (60 + 60) / 120][Stage 12:============================>                         (64 + 56) / 120][Stage 12:======================================>               (86 + 34) / 120][Stage 12:============================================>         (98 + 22) / 120][Stage 12:=================================================>    (111 + 9) / 120]                                                                                [Stage 13:===========================>                          (61 + 60) / 121][Stage 13:=============================>                        (66 + 55) / 121][Stage 13:====================================>                 (81 + 40) / 121][Stage 13:============================================>        (101 + 20) / 121][Stage 13:================================================>    (111 + 10) / 121][Stage 13:===================================================>  (115 + 6) / 121][Stage 13:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.37957611 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=207", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=207,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.560897462 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (60 + 61) / 121][Stage 14:==============================>                       (69 + 52) / 121][Stage 14:=====================================>                (83 + 38) / 121][Stage 14:============================================>        (101 + 20) / 121][Stage 14:===================================================>  (116 + 5) / 121]                                                                                [Stage 15:===========================>                          (61 + 61) / 122][Stage 15:=============================>                        (66 + 56) / 122][Stage 15:===================================>                  (81 + 41) / 122][Stage 15:============================================>        (102 + 20) / 122][Stage 15:===================================================>  (117 + 5) / 122][Stage 15:=====================================================>(120 + 2) / 122][Stage 15:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 6.247371104 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=147", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=147,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.515626964 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=================================>                    (70 + 43) / 113][Stage 16:=====================================>                (78 + 35) / 113][Stage 16:=========================================>            (86 + 27) / 113][Stage 16:============================================>         (94 + 19) / 113][Stage 16:===============================================>     (101 + 12) / 113][Stage 16:===================================================>  (107 + 6) / 113][Stage 16:====================================================> (110 + 3) / 113][Stage 16:=====================================================>(112 + 1) / 113]                                                                                [Stage 17:====================================>                 (78 + 36) / 114][Stage 17:========================================>             (85 + 29) / 114][Stage 17:=============================================>        (95 + 19) / 114][Stage 17:===============================================>     (103 + 11) / 114][Stage 17:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.802779878 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=171", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=171,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.548701296 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==========================>                           (60 + 61) / 121][Stage 18:================================>                     (73 + 48) / 121][Stage 18:=======================================>              (89 + 32) / 121][Stage 18:=============================================>       (104 + 17) / 121][Stage 18:==================================================>   (113 + 8) / 121][Stage 18:===================================================>  (116 + 5) / 121][Stage 18:======================================================(121 + 0) / 121]                                                                                [Stage 19:===========================>                          (61 + 61) / 122][Stage 19:=============================>                        (66 + 56) / 122][Stage 19:===================================>                  (80 + 42) / 122][Stage 19:==============================================>      (106 + 16) / 122][Stage 19:==================================================>   (114 + 8) / 122][Stage 19:==================================================>   (115 + 7) / 122][Stage 19:====================================================> (118 + 4) / 122][Stage 19:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.947918714 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=29", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=29,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.600720771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (60 + 60) / 120][Stage 20:============================>                         (63 + 57) / 120][Stage 20:===================================>                  (79 + 41) / 120][Stage 20:==============================================>      (105 + 15) / 120][Stage 20:====================================================> (116 + 4) / 120][Stage 20:=====================================================>(119 + 1) / 120]                                                                                [Stage 21:==========================>                           (60 + 61) / 121][Stage 21:============================>                         (63 + 58) / 121][Stage 21:=================================>                    (75 + 46) / 121][Stage 21:=========================================>            (93 + 28) / 121][Stage 21:==================================================>   (114 + 7) / 121][Stage 21:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.09985503 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=158", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=158,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.490898668 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===============================>                      (67 + 48) / 115][Stage 22:======================================>               (82 + 33) / 115][Stage 22:==============================================>      (101 + 14) / 115][Stage 22:===================================================>  (110 + 5) / 115][Stage 22:====================================================> (111 + 4) / 115]                                                                                [Stage 23:=================================>                    (71 + 45) / 116][Stage 23:=======================================>              (85 + 31) / 116][Stage 23:=============================================>       (100 + 16) / 116][Stage 23:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.47070281 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=54", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=54,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.498536002 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:============================>                         (59 + 54) / 113][Stage 24:============================>                         (60 + 53) / 113][Stage 24:=================================>                    (71 + 42) / 113][Stage 24:==============================================>       (98 + 15) / 113][Stage 24:=====================================================>(111 + 2) / 113]                                                                                [Stage 25:=============================>                        (63 + 51) / 114][Stage 25:==================================>                   (72 + 42) / 114][Stage 25:============================================>         (93 + 21) / 114][Stage 25:=================================================>    (105 + 9) / 114][Stage 25:==================================================>   (106 + 8) / 114][Stage 25:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.618659649 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=104", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=104,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494052007 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (58 + 55) / 113][Stage 26:==============================>                       (63 + 50) / 113][Stage 26:====================================>                 (76 + 37) / 113][Stage 26:===============================================>      (99 + 14) / 113][Stage 26:====================================================> (109 + 4) / 113]                                                                                [Stage 27:============================>                         (60 + 54) / 114][Stage 27:=================================>                    (71 + 43) / 114][Stage 27:============================================>         (94 + 20) / 114][Stage 27:===================================================>  (108 + 6) / 114][Stage 27:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.756660751 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=200", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=200,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416478116 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:======================================>               (83 + 32) / 115][Stage 28:=========================================>            (89 + 26) / 115][Stage 28:===============================================>     (103 + 12) / 115][Stage 28:====================================================> (112 + 3) / 115]                                                                                [Stage 29:=======================================>              (84 + 32) / 116][Stage 29:=============================================>       (100 + 16) / 116][Stage 29:==================================================>   (109 + 7) / 116][Stage 29:====================================================> (113 + 3) / 116][Stage 29:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.053671032 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=141", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=141,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.51489611 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:============================>                         (59 + 54) / 113][Stage 30:===============================>                      (66 + 47) / 113][Stage 30:===========================================>          (90 + 23) / 113][Stage 30:==================================================>   (105 + 8) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:===========================>                          (59 + 55) / 114][Stage 31:==============================>                       (64 + 50) / 114][Stage 31:=======================================>              (83 + 31) / 114][Stage 31:==============================================>      (100 + 14) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.767122414 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=41", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=41,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502869902 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (58 + 55) / 113][Stage 32:===============================>                      (65 + 48) / 113][Stage 32:======================================>               (81 + 32) / 113][Stage 32:===============================================>      (99 + 14) / 113][Stage 32:==================================================>   (106 + 7) / 113]                                                                                [Stage 33:============================>                         (60 + 54) / 114][Stage 33:==================================>                   (73 + 41) / 114][Stage 33:============================================>         (94 + 20) / 114][Stage 33:==================================================>   (106 + 8) / 114][Stage 33:=====================================================>(112 + 2) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.803013939 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=184", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=184,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.445446013 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:======================================>               (81 + 32) / 113][Stage 34:===========================================>          (90 + 23) / 113][Stage 34:===============================================>     (101 + 12) / 113][Stage 34:====================================================> (110 + 3) / 113]                                                                                [Stage 35:========================================>             (86 + 28) / 114][Stage 35:===========================================>          (92 + 22) / 114][Stage 35:==================================================>   (106 + 8) / 114][Stage 35:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.116546052 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=185", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=185,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47258847 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===============================>                      (68 + 47) / 115][Stage 36:===================================>                  (76 + 39) / 115][Stage 36:========================================>             (87 + 28) / 115][Stage 36:=================================================>    (106 + 9) / 115]                                                                                [Stage 37:===================================>                  (76 + 40) / 116][Stage 37:============================================>         (95 + 21) / 116][Stage 37:==============================================>      (102 + 14) / 116][Stage 37:====================================================> (113 + 3) / 116][Stage 37:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.173891667 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=206", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=206,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457751783 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (72 + 46) / 118][Stage 38:====================================>                 (80 + 38) / 118][Stage 38:=======================================>              (87 + 31) / 118][Stage 38:===========================================>          (94 + 24) / 118][Stage 38:============================================>        (100 + 18) / 118][Stage 38:=============================================>       (102 + 16) / 118][Stage 38:===============================================>     (106 + 12) / 118][Stage 38:====================================================> (114 + 4) / 118]                                                                                [Stage 39:=================================>                    (73 + 46) / 119][Stage 39:=====================================>                (82 + 37) / 119][Stage 39:=========================================>            (92 + 27) / 119][Stage 39:================================================>    (108 + 11) / 119][Stage 39:====================================================> (115 + 4) / 119][Stage 39:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 5.575280272 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=79", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=79,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.48562956 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (58 + 55) / 113][Stage 40:============================>                         (60 + 53) / 113][Stage 40:==================================>                   (73 + 40) / 113][Stage 40:===========================================>          (91 + 22) / 113][Stage 40:====================================================> (109 + 4) / 113]                                                                                [Stage 41:===========================>                          (59 + 55) / 114][Stage 41:================================>                     (69 + 45) / 114][Stage 41:========================================>             (86 + 28) / 114][Stage 41:===============================================>     (102 + 12) / 114][Stage 41:==================================================>   (107 + 7) / 114][Stage 41:===================================================>  (108 + 6) / 114][Stage 41:====================================================> (110 + 4) / 114][Stage 41:=====================================================>(112 + 2) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.560175641 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=31", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=31,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518288633 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==========================>                           (60 + 61) / 121][Stage 42:============================>                         (64 + 57) / 121][Stage 42:====================================>                 (82 + 39) / 121][Stage 42:===========================================>         (100 + 21) / 121][Stage 42:===================================================>  (116 + 5) / 121][Stage 42:=====================================================>(120 + 1) / 121]                                                                                [Stage 43:===========================>                          (61 + 61) / 122][Stage 43:=============================>                        (67 + 55) / 122][Stage 43:======================================>               (88 + 34) / 122][Stage 43:==================================================>   (115 + 7) / 122][Stage 43:=====================================================>(120 + 2) / 122][Stage 43:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.841438748 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=32", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=32,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.471527314 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (61 + 59) / 120][Stage 44:==============================>                       (68 + 52) / 120][Stage 44:====================================>                 (81 + 39) / 120][Stage 44:================================================>    (110 + 10) / 120][Stage 44:=====================================================>(119 + 1) / 120]                                                                                [Stage 45:===========================>                          (61 + 60) / 121][Stage 45:==============================>                       (68 + 53) / 121][Stage 45:=====================================>                (84 + 37) / 121][Stage 45:===============================================>     (109 + 12) / 121][Stage 45:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.900113323 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=237", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=237,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423193436 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:=================================>                    (73 + 45) / 118][Stage 46:====================================>                 (79 + 39) / 118][Stage 46:=======================================>              (86 + 32) / 118][Stage 46:===========================================>          (96 + 22) / 118][Stage 46:==================================================>   (111 + 7) / 118]                                                                                [Stage 47:=================================>                    (74 + 45) / 119][Stage 47:==================================>                   (76 + 43) / 119][Stage 47:=========================================>            (91 + 28) / 119][Stage 47:==============================================>      (104 + 15) / 119][Stage 47:===================================================>  (114 + 5) / 119][Stage 47:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.227921428 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=101", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=101,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.482485706 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==========================>                           (60 + 61) / 121][Stage 48:=============================>                        (65 + 56) / 121][Stage 48:===================================>                  (79 + 42) / 121][Stage 48:=============================================>       (104 + 17) / 121][Stage 48:====================================================> (117 + 4) / 121][Stage 48:=====================================================>(120 + 1) / 121]                                                                                [Stage 49:===========================>                          (61 + 61) / 122][Stage 49:============================>                         (65 + 57) / 122][Stage 49:======================================>               (87 + 35) / 122][Stage 49:============================================>        (102 + 20) / 122][Stage 49:===================================================>  (117 + 5) / 122][Stage 49:=====================================================>(120 + 2) / 122][Stage 49:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.557163293 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=197", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=197,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.50180477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (60 + 60) / 120][Stage 50:===============================>                      (71 + 49) / 120][Stage 50:==========================================>           (95 + 25) / 120][Stage 50:==============================================>      (106 + 14) / 120]                                                                                [Stage 51:===========================>                          (62 + 59) / 121][Stage 51:================================>                     (73 + 48) / 121][Stage 51:==========================================>           (95 + 26) / 121][Stage 51:=================================================>    (112 + 9) / 121][Stage 51:=====================================================>(119 + 2) / 121][Stage 51:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.134081703 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=166", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=166,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42100958 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==================================>                   (73 + 42) / 115][Stage 52:=========================================>            (88 + 27) / 115][Stage 52:===============================================>     (104 + 11) / 115]                                                                                [Stage 53:================================>                     (70 + 46) / 116][Stage 53:=====================================>                (81 + 35) / 116][Stage 53:===========================================>          (94 + 22) / 116][Stage 53:==================================================>   (108 + 8) / 116][Stage 53:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.96137811 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=21", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=21,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454657352 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (60 + 60) / 120][Stage 54:==============================>                       (67 + 53) / 120][Stage 54:=====================================>                (83 + 37) / 120][Stage 54:==============================================>      (105 + 15) / 120][Stage 54:=====================================================>(119 + 1) / 120]                                                                                [Stage 55:===========================>                          (61 + 60) / 121][Stage 55:=============================>                        (67 + 54) / 121][Stage 55:=================================>                    (76 + 45) / 121][Stage 55:==========================================>           (96 + 25) / 121][Stage 55:=================================================>    (112 + 9) / 121][Stage 55:=====================================================>(119 + 2) / 121][Stage 55:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.495786466 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=43", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=43,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467043122 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:>                                                       (0 + 0) / 121][Stage 56:==========================>                           (60 + 61) / 121][Stage 56:============================>                         (64 + 57) / 121][Stage 56:=====================================>                (84 + 37) / 121][Stage 56:===============================================>     (108 + 13) / 121]                                                                                [Stage 57:===========================>                          (62 + 60) / 122][Stage 57:============================>                         (64 + 58) / 122][Stage 57:===================================>                  (80 + 42) / 122][Stage 57:=============================================>       (104 + 18) / 122][Stage 57:===================================================>  (117 + 5) / 122][Stage 57:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.899836321 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=153", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=153,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424493959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:============================>                         (59 + 54) / 113][Stage 58:================================>                     (68 + 45) / 113][Stage 58:===========================================>          (92 + 21) / 113][Stage 58:===================================================>  (107 + 6) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:============================>                         (61 + 53) / 114][Stage 59:====================================>                 (78 + 36) / 114][Stage 59:==========================================>           (89 + 25) / 114][Stage 59:===================================================>  (108 + 6) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.133028869 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=20", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=20,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432386533 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:================================>                     (72 + 46) / 118][Stage 60:==================================>                   (75 + 43) / 118][Stage 60:=====================================>                (83 + 35) / 118][Stage 60:===========================================>          (94 + 24) / 118][Stage 60:==================================================>   (111 + 7) / 118]                                                                                [Stage 61:=================================>                    (73 + 46) / 119][Stage 61:====================================>                 (80 + 39) / 119][Stage 61:========================================>             (90 + 29) / 119][Stage 61:===============================================>     (107 + 12) / 119][Stage 61:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.771338422 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=204", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=204,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496783539 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (63 + 57) / 120][Stage 62:==================================>                   (76 + 44) / 120][Stage 62:==========================================>           (95 + 25) / 120][Stage 62:===================================================>  (115 + 5) / 120]                                                                                [Stage 63:===========================>                          (61 + 60) / 121][Stage 63:================================>                     (73 + 48) / 121][Stage 63:============================================>         (99 + 22) / 121][Stage 63:================================================>    (111 + 10) / 121][Stage 63:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.601410126 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=247", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=247,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435428412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (58 + 55) / 113][Stage 64:====================================>                 (76 + 37) / 113][Stage 64:===========================================>          (91 + 22) / 113][Stage 64:================================================>    (103 + 10) / 113]                                                                                [Stage 65:===========================>                          (59 + 55) / 114][Stage 65:===============================>                      (66 + 48) / 114][Stage 65:=======================================>              (84 + 30) / 114][Stage 65:==================================================>   (106 + 8) / 114][Stage 65:=====================================================>(112 + 2) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.707082469 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=93", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=93,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442144767 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:============================>                         (59 + 54) / 113][Stage 66:==============================>                       (63 + 50) / 113][Stage 66:====================================>                 (77 + 36) / 113][Stage 66:==============================================>       (97 + 16) / 113][Stage 66:===================================================>  (107 + 6) / 113]                                                                                [Stage 67:=============================>                        (63 + 51) / 114][Stage 67:==================================>                   (72 + 42) / 114][Stage 67:==============================================>       (98 + 16) / 114][Stage 67:==================================================>   (106 + 8) / 114][Stage 67:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.551815905 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=194", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=194,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434717614 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (58 + 55) / 113][Stage 68:==============================>                       (63 + 50) / 113][Stage 68:===================================>                  (75 + 38) / 113][Stage 68:================================================>    (103 + 10) / 113][Stage 68:====================================================> (109 + 4) / 113]                                                                                [Stage 69:============================>                         (60 + 54) / 114][Stage 69:=============================>                        (63 + 51) / 114][Stage 69:====================================>                 (76 + 38) / 114][Stage 69:===============================================>     (102 + 12) / 114][Stage 69:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.473934336 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=196", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=196,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435100674 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (60 + 53) / 113][Stage 70:=============================>                        (62 + 51) / 113][Stage 70:====================================>                 (77 + 36) / 113][Stage 70:================================================>    (103 + 10) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:===========================>                          (59 + 55) / 114][Stage 71:==============================>                       (65 + 49) / 114][Stage 71:========================================>             (86 + 28) / 114][Stage 71:===============================================>     (102 + 12) / 114][Stage 71:=====================================================>(112 + 2) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.648196974 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=74", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=74,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359599518 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:========================================>             (86 + 29) / 115][Stage 72:==============================================>       (99 + 16) / 115][Stage 72:==================================================>   (108 + 7) / 115][Stage 72:=====================================================>(113 + 2) / 115]                                                                                [Stage 73:========================================>             (88 + 28) / 116][Stage 73:===========================================>          (93 + 23) / 116][Stage 73:===============================================>     (105 + 11) / 116][Stage 73:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.039960929 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=119", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=119,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472836663 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (60 + 60) / 120][Stage 74:===============================>                      (69 + 51) / 120][Stage 74:=======================================>              (88 + 32) / 120][Stage 74:=============================================>       (102 + 18) / 120][Stage 74:=====================================================>(118 + 2) / 120]                                                                                [Stage 75:===========================>                          (61 + 60) / 121][Stage 75:=============================>                        (66 + 55) / 121][Stage 75:===================================>                  (79 + 42) / 121][Stage 75:============================================>         (99 + 22) / 121][Stage 75:====================================================> (118 + 3) / 121][Stage 75:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.560358937 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=201", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=201,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389028295 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:================================>                     (72 + 46) / 118][Stage 76:=================================>                    (73 + 45) / 118][Stage 76:====================================>                 (80 + 38) / 118][Stage 76:==========================================>           (93 + 25) / 118][Stage 76:==============================================>      (104 + 14) / 118][Stage 76:=====================================================>(116 + 2) / 118]                                                                                [Stage 77:=================================>                    (74 + 45) / 119][Stage 77:=====================================>                (82 + 37) / 119][Stage 77:=======================================>              (86 + 33) / 119][Stage 77:=================================================>    (110 + 9) / 119][Stage 77:====================================================> (116 + 3) / 119][Stage 77:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.324491544 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=91", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=91,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451012083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (61 + 60) / 121][Stage 78:===============================>                      (70 + 51) / 121][Stage 78:======================================>               (87 + 34) / 121][Stage 78:==============================================>      (107 + 14) / 121][Stage 78:=====================================================>(120 + 1) / 121]                                                                                [Stage 79:===========================>                          (61 + 61) / 122][Stage 79:=============================>                        (67 + 55) / 122][Stage 79:======================================>               (86 + 36) / 122][Stage 79:==============================================>      (107 + 15) / 122][Stage 79:===================================================>  (116 + 6) / 122][Stage 79:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.747632192 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=179", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=179,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377788325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:================================>                     (72 + 46) / 118][Stage 80:====================================>                 (79 + 39) / 118][Stage 80:=======================================>              (86 + 32) / 118][Stage 80:============================================>         (97 + 21) / 118][Stage 80:===================================================>  (112 + 6) / 118][Stage 80:=====================================================>(117 + 1) / 118]                                                                                [Stage 81:=================================>                    (73 + 46) / 119][Stage 81:==================================>                   (77 + 42) / 119][Stage 81:======================================>               (85 + 34) / 119][Stage 81:==========================================>           (94 + 25) / 119][Stage 81:================================================>    (109 + 10) / 119][Stage 81:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.849880652 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=173", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=173,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387409618 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:================================>                     (72 + 46) / 118][Stage 82:==================================>                   (76 + 42) / 118][Stage 82:========================================>             (88 + 30) / 118][Stage 82:===========================================>          (96 + 22) / 118][Stage 82:====================================================> (115 + 3) / 118]                                                                                [Stage 83:==================================>                   (75 + 44) / 119][Stage 83:====================================>                 (80 + 39) / 119][Stage 83:===========================================>          (95 + 24) / 119][Stage 83:===============================================>     (106 + 13) / 119][Stage 83:=====================================================>(117 + 2) / 119][Stage 83:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.902380994 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=235", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=235,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419373391 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==========================>                           (60 + 61) / 121][Stage 84:===========================>                          (61 + 60) / 121][Stage 84:=================================>                    (76 + 45) / 121][Stage 84:============================================>         (99 + 22) / 121][Stage 84:====================================================> (118 + 3) / 121]                                                                                [Stage 85:===========================>                          (61 + 61) / 122][Stage 85:============================>                         (64 + 58) / 122][Stage 85:====================================>                 (82 + 40) / 122][Stage 85:===========================================>         (100 + 22) / 122][Stage 85:====================================================> (118 + 4) / 122][Stage 85:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.715903635 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=211", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=211,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372004931 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==================================>                   (73 + 40) / 113][Stage 86:=========================================>            (86 + 27) / 113][Stage 86:=============================================>        (95 + 18) / 113][Stage 86:================================================>    (103 + 10) / 113][Stage 86:=====================================================>(111 + 2) / 113]                                                                                [Stage 87:=======================================>              (84 + 30) / 114][Stage 87:=============================================>        (96 + 18) / 114][Stage 87:=================================================>    (105 + 9) / 114][Stage 87:=====================================================>(112 + 2) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.142384856 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=168", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=168,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404990844 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:===============================>                      (65 + 48) / 113][Stage 88:=====================================>                (79 + 34) / 113][Stage 88:==============================================>      (100 + 13) / 113][Stage 88:====================================================> (110 + 3) / 113]                                                                                [Stage 89:===========================>                          (59 + 55) / 114][Stage 89:===============================>                      (67 + 47) / 114][Stage 89:=========================================>            (87 + 27) / 114][Stage 89:==============================================>      (101 + 13) / 114][Stage 89:====================================================> (110 + 4) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.740809146 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=187", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=187,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432266563 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:==========================>                           (60 + 61) / 121][Stage 90:=============================>                        (65 + 56) / 121][Stage 90:======================================>               (86 + 35) / 121][Stage 90:==============================================>      (107 + 14) / 121]                                                                                [Stage 91:===========================>                          (61 + 61) / 122][Stage 91:==============================>                       (68 + 54) / 122][Stage 91:====================================>                 (83 + 39) / 122][Stage 91:================================================>    (111 + 11) / 122][Stage 91:====================================================> (119 + 3) / 122][Stage 91:=====================================================>(120 + 2) / 122][Stage 91:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.809545549 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=150", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=150,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416492996 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (60 + 60) / 120][Stage 92:=============================>                        (65 + 55) / 120][Stage 92:==================================>                   (77 + 43) / 120][Stage 92:============================================>         (99 + 21) / 120][Stage 92:=====================================================>(118 + 2) / 120]                                                                                [Stage 93:=============================>                        (66 + 55) / 121][Stage 93:====================================>                 (81 + 40) / 121][Stage 93:=============================================>       (105 + 16) / 121][Stage 93:===================================================>  (116 + 5) / 121][Stage 93:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.654717185 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=245", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=245,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416319038 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==========================>                           (60 + 61) / 121][Stage 94:=============================>                        (66 + 55) / 121][Stage 94:===================================>                  (80 + 41) / 121][Stage 94:============================================>         (99 + 22) / 121][Stage 94:=====================================================>(119 + 2) / 121]                                                                                [Stage 95:===========================>                          (61 + 61) / 122][Stage 95:=============================>                        (66 + 56) / 122][Stage 95:==================================>                   (79 + 43) / 122][Stage 95:=============================================>       (105 + 17) / 122][Stage 95:====================================================> (119 + 3) / 122][Stage 95:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.094717273 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=92", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=92,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402603049 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:============================>                         (59 + 54) / 113][Stage 96:=============================>                        (62 + 51) / 113][Stage 96:==================================>                   (73 + 40) / 113][Stage 96:==========================================>           (88 + 25) / 113][Stage 96:====================================================> (109 + 4) / 113]                                                                                [Stage 97:=============================>                        (62 + 52) / 114][Stage 97:===================================>                  (75 + 39) / 114][Stage 97:==============================================>       (99 + 15) / 114][Stage 97:===================================================>  (108 + 6) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.766687948 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=233", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=233,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370691716 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=======================================>              (83 + 30) / 113][Stage 98:============================================>         (94 + 19) / 113][Stage 98:==================================================>   (105 + 8) / 113][Stage 98:=====================================================>(111 + 2) / 113][Stage 98:=====================================================>(112 + 1) / 113]                                                                                [Stage 99:====================================>                 (77 + 37) / 114][Stage 99:==========================================>           (90 + 24) / 114][Stage 99:==============================================>      (100 + 14) / 114][Stage 99:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 2.972611724 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=227", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=227,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363731543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:>                                                      (0 + 0) / 113][Stage 100:====================================>                (78 + 35) / 113][Stage 100:=======================================>             (85 + 28) / 113][Stage 100:============================================>        (95 + 18) / 113][Stage 100:=================================================>   (105 + 8) / 113][Stage 100:====================================================>(111 + 2) / 113]                                                                                [Stage 101:=====================================>               (81 + 33) / 114][Stage 101:========================================>            (88 + 26) / 114][Stage 101:=============================================>      (100 + 14) / 114][Stage 101:==================================================>  (109 + 5) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.297442721 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=42", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=42,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413370902 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 61) / 121][Stage 102:============================>                        (65 + 56) / 121][Stage 102:=====================================>               (85 + 36) / 121][Stage 102:=================================================>   (114 + 7) / 121][Stage 102:====================================================>(120 + 1) / 121]                                                                                [Stage 103:===========================>                         (64 + 58) / 122][Stage 103:=================================>                   (77 + 45) / 122][Stage 103:==========================================>          (98 + 24) / 122][Stage 103:=================================================>   (114 + 8) / 122][Stage 103:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.749467436 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=70", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=70,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362881224 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:====================================>                (80 + 35) / 115][Stage 104:======================================>              (84 + 31) / 115][Stage 104:===============================================>    (104 + 11) / 115][Stage 104:====================================================>(113 + 2) / 115]                                                                                [Stage 105:=====================================>               (82 + 34) / 116][Stage 105:=========================================>           (91 + 25) / 116][Stage 105:============================================>       (100 + 16) / 116][Stage 105:===================================================> (112 + 4) / 116][Stage 105:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.961217184 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=159", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=159,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378910791 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:================================>                    (72 + 46) / 118][Stage 106:================================>                    (73 + 45) / 118][Stage 106:=====================================>               (84 + 34) / 118][Stage 106:==========================================>          (94 + 24) / 118][Stage 106:================================================>    (109 + 9) / 118][Stage 106:====================================================>(117 + 1) / 118]                                                                                [Stage 107:==================================>                  (78 + 41) / 119][Stage 107:=====================================>               (84 + 35) / 119][Stage 107:=========================================>           (94 + 25) / 119][Stage 107:=============================================>      (104 + 15) / 119][Stage 107:====================================================>(117 + 2) / 119][Stage 107:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.790589559 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=40", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=40,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375826955 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===================================>                 (75 + 38) / 113][Stage 108:========================================>            (86 + 27) / 113][Stage 108:==========================================>          (90 + 23) / 113][Stage 108:=============================================>       (98 + 15) / 113][Stage 108:==================================================>  (107 + 6) / 113]                                                                                [Stage 109:=====================================>               (81 + 33) / 114][Stage 109:========================================>            (87 + 27) / 114][Stage 109:===========================================>         (94 + 20) / 114][Stage 109:==============================================>      (99 + 15) / 114][Stage 109:===================================================> (111 + 3) / 114][Stage 109:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 7.63256734 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=66", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=66,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366579783 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==================================>                  (74 + 39) / 113][Stage 110:=======================================>             (84 + 29) / 113][Stage 110:============================================>        (95 + 18) / 113][Stage 110:==============================================>     (101 + 12) / 113][Stage 110:====================================================>(111 + 2) / 113]                                                                                [Stage 111:======================================>              (82 + 32) / 114][Stage 111:==========================================>          (91 + 23) / 114][Stage 111:==============================================>      (99 + 15) / 114][Stage 111:===================================================> (110 + 4) / 114][Stage 111:====================================================>(112 + 2) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.301967114 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=121", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=121,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40831177 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (60 + 61) / 121][Stage 112:=============================>                       (67 + 54) / 121][Stage 112:=====================================>               (85 + 36) / 121][Stage 112:===============================================>    (111 + 10) / 121][Stage 112:===================================================> (117 + 4) / 121]                                                                                [Stage 113:===========================>                         (64 + 58) / 122][Stage 113:=================================>                   (76 + 46) / 122][Stage 113:===========================================>         (99 + 23) / 122][Stage 113:=================================================>   (113 + 9) / 122][Stage 113:====================================================>(120 + 2) / 122][Stage 113:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.375117041 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390590265 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (59 + 54) / 113][Stage 114:==============================>                      (64 + 49) / 113][Stage 114:======================================>              (82 + 31) / 113][Stage 114:=============================================>       (97 + 16) / 113][Stage 114:===================================================> (110 + 3) / 113]                                                                                [Stage 115:=============================>                       (64 + 50) / 114][Stage 115:===================================>                 (76 + 38) / 114][Stage 115:============================================>        (95 + 19) / 114][Stage 115:================================================>    (105 + 9) / 114][Stage 115:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.644575437 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=128", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=128,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402539395 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 60) / 120][Stage 116:=============================>                       (66 + 54) / 120][Stage 116:==================================>                  (78 + 42) / 120][Stage 116:==========================================>          (97 + 23) / 120][Stage 116:==================================================>  (114 + 6) / 120]                                                                                [Stage 117:============================>                        (65 + 56) / 121][Stage 117:=================================>                   (77 + 44) / 121][Stage 117:==========================================>          (96 + 25) / 121][Stage 117:=================================================>   (112 + 9) / 121][Stage 117:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.837032848 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=61", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=61,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392116104 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 60) / 120][Stage 118:===========================>                         (63 + 57) / 120][Stage 118:================================>                    (74 + 46) / 120][Stage 118:========================================>            (91 + 29) / 120][Stage 118:==================================================>  (114 + 6) / 120]                                                                                [Stage 119:============================>                        (64 + 57) / 121][Stage 119:===============================>                     (73 + 48) / 121][Stage 119:=====================================>               (86 + 35) / 121][Stage 119:=============================================>      (106 + 15) / 121][Stage 119:==================================================>  (116 + 5) / 121][Stage 119:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.863753668 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=58", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=58,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387190869 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===============================>                     (68 + 47) / 115][Stage 120:====================================>                (79 + 36) / 115][Stage 120:============================================>        (97 + 18) / 115][Stage 120:================================================>    (106 + 9) / 115][Stage 120:===================================================> (112 + 3) / 115]                                                                                [Stage 121:===============================>                     (69 + 47) / 116][Stage 121:====================================>                (79 + 37) / 116][Stage 121:==========================================>          (92 + 24) / 116][Stage 121:==============================================>     (103 + 13) / 116][Stage 121:==================================================>  (110 + 6) / 116][Stage 121:===================================================> (112 + 4) / 116][Stage 121:===================================================> (113 + 3) / 116][Stage 121:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.333677194 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=125", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=125,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417679146 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 60) / 120][Stage 122:=============================>                       (67 + 53) / 120][Stage 122:====================================>                (83 + 37) / 120][Stage 122:=============================================>      (106 + 14) / 120]                                                                                [Stage 123:===========================>                         (62 + 59) / 121][Stage 123:===============================>                     (73 + 48) / 121][Stage 123:========================================>            (92 + 29) / 121][Stage 123:===============================================>    (111 + 10) / 121][Stage 123:===================================================> (118 + 3) / 121][Stage 123:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.71079579 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=120", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=120,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392054407 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (58 + 55) / 113][Stage 124:=============================>                       (62 + 51) / 113][Stage 124:=====================================>               (80 + 33) / 113][Stage 124:==============================================>     (101 + 12) / 113][Stage 124:==================================================>  (107 + 6) / 113]                                                                                [Stage 125:============================>                        (61 + 53) / 114][Stage 125:=================================>                   (71 + 43) / 114][Stage 125:==========================================>          (91 + 23) / 114][Stage 125:===============================================>    (104 + 10) / 114][Stage 125:====================================================>(112 + 2) / 114][Stage 125:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.988783873 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=80", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=80,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407895294 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 60) / 120][Stage 126:=============================>                       (66 + 54) / 120][Stage 126:==================================>                  (78 + 42) / 120][Stage 126:==========================================>          (97 + 23) / 120][Stage 126:=================================================>   (112 + 8) / 120]                                                                                [Stage 127:===========================>                         (62 + 59) / 121][Stage 127:===============================>                     (72 + 49) / 121][Stage 127:========================================>            (93 + 28) / 121][Stage 127:=============================================>      (106 + 15) / 121][Stage 127:===================================================> (117 + 4) / 121][Stage 127:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.997721731 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=244", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=244,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364864549 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:================================>                    (72 + 46) / 118][Stage 128:================================>                    (73 + 45) / 118][Stage 128:======================================>              (85 + 33) / 118][Stage 128:===========================================>         (96 + 22) / 118][Stage 128:===============================================>    (107 + 11) / 118][Stage 128:====================================================>(116 + 2) / 118]                                                                                [Stage 129:================================>                    (73 + 46) / 119][Stage 129:==================================>                  (77 + 42) / 119][Stage 129:========================================>            (91 + 28) / 119][Stage 129:=============================================>      (103 + 16) / 119][Stage 129:==================================================>  (113 + 6) / 119][Stage 129:====================================================>(117 + 2) / 119][Stage 129:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.796898577 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399259142 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 60) / 120][Stage 130:================================>                    (73 + 47) / 120][Stage 130:=====================================>               (84 + 36) / 120][Stage 130:============================================>       (103 + 17) / 120][Stage 130:==================================================>  (114 + 6) / 120][Stage 130:====================================================>(119 + 1) / 120]                                                                                [Stage 131:==========================>                          (61 + 60) / 121][Stage 131:==============================>                      (69 + 52) / 121][Stage 131:======================================>              (89 + 32) / 121][Stage 131:==============================================>     (108 + 13) / 121][Stage 131:===================================================> (118 + 3) / 121][Stage 131:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.77507438 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=176", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=176,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372529165 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==================================>                  (74 + 41) / 115][Stage 132:=========================================>           (90 + 25) / 115][Stage 132:==================================================>  (109 + 6) / 115][Stage 132:====================================================>(114 + 1) / 115]                                                                                [Stage 133:================================>                    (71 + 45) / 116][Stage 133:=======================================>             (87 + 29) / 116][Stage 133:=============================================>      (101 + 15) / 116][Stage 133:================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.739096507 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=177", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=177,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395980726 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==========================>                          (61 + 59) / 120][Stage 134:===============================>                     (71 + 49) / 120][Stage 134:=====================================>               (84 + 36) / 120][Stage 134:=============================================>      (104 + 16) / 120][Stage 134:====================================================>(118 + 2) / 120]                                                                                [Stage 135:==========================>                          (61 + 60) / 121][Stage 135:==============================>                      (69 + 52) / 121][Stage 135:==================================>                  (78 + 43) / 121][Stage 135:============================================>       (103 + 18) / 121][Stage 135:===================================================> (117 + 4) / 121][Stage 135:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.818038175 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=102", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=102,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386721214 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (58 + 55) / 113][Stage 136:==============================>                      (66 + 47) / 113][Stage 136:=======================================>             (84 + 29) / 113][Stage 136:=============================================>       (97 + 16) / 113]                                                                                [Stage 137:============================>                        (62 + 52) / 114][Stage 137:===============================>                     (68 + 46) / 114][Stage 137:=======================================>             (84 + 30) / 114][Stage 137:================================================>    (105 + 9) / 114][Stage 137:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.598238175 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=47", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=47,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366316191 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (72 + 46) / 118][Stage 138:=================================>                   (75 + 43) / 118][Stage 138:===================================>                 (80 + 38) / 118][Stage 138:========================================>            (91 + 27) / 118][Stage 138:=============================================>      (103 + 15) / 118][Stage 138:====================================================>(116 + 2) / 118]                                                                                [Stage 139:================================>                    (74 + 45) / 119][Stage 139:=====================================>               (84 + 35) / 119][Stage 139:===========================================>         (97 + 22) / 119][Stage 139:==================================================>  (114 + 5) / 119][Stage 139:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.765223768 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=230", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=230,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387382414 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (59 + 54) / 113][Stage 140:=============================>                       (62 + 51) / 113][Stage 140:=====================================>               (81 + 32) / 113][Stage 140:============================================>        (95 + 18) / 113][Stage 140:=================================================>   (105 + 8) / 113]                                                                                [Stage 141:=============================>                       (63 + 51) / 114][Stage 141:==================================>                  (74 + 40) / 114][Stage 141:=============================================>       (97 + 17) / 114][Stage 141:=================================================>   (107 + 7) / 114][Stage 141:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.760168037 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=45", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=45,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369154249 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==================================>                  (74 + 41) / 115][Stage 142:=========================================>           (91 + 24) / 115][Stage 142:==============================================>     (103 + 12) / 115]                                                                                [Stage 143:=================================>                   (73 + 43) / 116][Stage 143:======================================>              (85 + 31) / 116][Stage 143:==========================================>          (93 + 23) / 116][Stage 143:==============================================>     (103 + 13) / 116][Stage 143:==================================================>  (111 + 5) / 116][Stage 143:===================================================> (113 + 3) / 116][Stage 143:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.458438971 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=95", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=95,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36918233 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===================================>                 (76 + 37) / 113][Stage 144:========================================>            (87 + 26) / 113][Stage 144:=============================================>       (97 + 16) / 113][Stage 144:==================================================>  (108 + 5) / 113][Stage 144:====================================================>(111 + 2) / 113]                                                                                [Stage 145:========================================>            (88 + 26) / 114][Stage 145:============================================>        (95 + 19) / 114][Stage 145:=============================================>      (100 + 14) / 114][Stage 145:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.066301615 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=115", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=115,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399793926 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 61) / 121][Stage 146:===============================>                     (72 + 49) / 121][Stage 146:==========================================>          (96 + 25) / 121][Stage 146:==================================================>  (115 + 6) / 121][Stage 146:====================================================>(120 + 1) / 121]                                                                                [Stage 147:==========================>                          (61 + 61) / 122][Stage 147:==========================>                          (62 + 60) / 122][Stage 147:=====================================>               (86 + 36) / 122][Stage 147:===========================================>         (99 + 23) / 122][Stage 147:=================================================>   (115 + 7) / 122][Stage 147:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 4.830304458 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=114", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=114,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357293881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==================================>                  (74 + 39) / 113][Stage 148:=======================================>             (84 + 29) / 113][Stage 148:=============================================>       (97 + 16) / 113][Stage 148:===============================================>    (103 + 10) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:===================================>                 (77 + 37) / 114][Stage 149:======================================>              (83 + 31) / 114][Stage 149:=========================================>           (90 + 24) / 114][Stage 149:================================================>    (105 + 9) / 114][Stage 149:===================================================> (111 + 3) / 114][Stage 149:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.254816936 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=218", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=218,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366581734 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:================================>                    (73 + 45) / 118][Stage 150:====================================>                (81 + 37) / 118][Stage 150:==========================================>          (95 + 23) / 118][Stage 150:==================================================>  (112 + 6) / 118][Stage 150:====================================================>(117 + 1) / 118]                                                                                [Stage 151:================================>                    (73 + 46) / 119][Stage 151:===================================>                 (79 + 40) / 119][Stage 151:=======================================>             (89 + 30) / 119][Stage 151:============================================>       (101 + 18) / 119][Stage 151:=================================================>   (111 + 8) / 119][Stage 151:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.934000211 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=209", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=209,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358516361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:================================>                    (73 + 45) / 118][Stage 152:===================================>                 (78 + 40) / 118][Stage 152:========================================>            (91 + 27) / 118][Stage 152:===============================================>    (108 + 10) / 118][Stage 152:====================================================>(117 + 1) / 118]                                                                                [Stage 153:================================>                    (73 + 46) / 119][Stage 153:==================================>                  (77 + 42) / 119][Stage 153:=======================================>             (89 + 30) / 119][Stage 153:=============================================>      (103 + 16) / 119][Stage 153:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.933536236 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=142", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=142,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350551787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:=====================================>               (81 + 32) / 113][Stage 154:===========================================>         (93 + 20) / 113][Stage 154:===============================================>    (103 + 10) / 113][Stage 154:====================================================>(111 + 2) / 113]                                                                                [Stage 155:===================================>                 (77 + 37) / 114][Stage 155:=========================================>           (89 + 25) / 114][Stage 155:==============================================>      (99 + 15) / 114][Stage 155:===================================================> (110 + 4) / 114][Stage 155:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.940768274 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=30", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=30,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353115545 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==================================>                  (74 + 39) / 113][Stage 156:========================================>            (86 + 27) / 113][Stage 156:===========================================>         (93 + 20) / 113][Stage 156:=================================================>   (105 + 8) / 113][Stage 156:===================================================> (110 + 3) / 113]                                                                                [Stage 157:====================================>                (79 + 35) / 114][Stage 157:=======================================>             (86 + 28) / 114][Stage 157:===========================================>         (94 + 20) / 114][Stage 157:==============================================>     (101 + 13) / 114][Stage 157:==================================================>  (108 + 6) / 114][Stage 157:===================================================> (110 + 4) / 114][Stage 157:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 7.970379195 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=181", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=181,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397719332 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==========================>                          (60 + 60) / 120][Stage 158:==============================>                      (68 + 52) / 120][Stage 158:=================================>                   (76 + 44) / 120][Stage 158:===========================================>        (100 + 20) / 120][Stage 158:=================================================>   (113 + 7) / 120]                                                                                [Stage 159:==============================>                      (69 + 52) / 121][Stage 159:==================================>                  (78 + 43) / 121][Stage 159:========================================>            (92 + 29) / 121][Stage 159:===============================================>    (111 + 10) / 121][Stage 159:====================================================>(119 + 2) / 121][Stage 159:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.233626223 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=180", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=180,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344537413 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:======================================>              (82 + 31) / 113][Stage 160:==========================================>          (90 + 23) / 113][Stage 160:==============================================>     (101 + 12) / 113][Stage 160:==================================================>  (107 + 6) / 113][Stage 160:==================================================>  (108 + 5) / 113][Stage 160:====================================================>(112 + 1) / 113]                                                                                [Stage 161:=================================>                   (73 + 41) / 114][Stage 161:=======================================>             (86 + 28) / 114][Stage 161:=============================================>       (97 + 17) / 114][Stage 161:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.139497394 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=39", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=39,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36316144 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==================================>                  (74 + 39) / 113][Stage 162:=========================================>           (88 + 25) / 113][Stage 162:=============================================>       (98 + 15) / 113][Stage 162:==================================================>  (108 + 5) / 113][Stage 162:====================================================>(112 + 1) / 113]                                                                                [Stage 163:====================================>                (79 + 35) / 114][Stage 163:========================================>            (87 + 27) / 114][Stage 163:========================================>            (88 + 26) / 114][Stage 163:==========================================>          (92 + 22) / 114][Stage 163:==================================================>  (109 + 5) / 114][Stage 163:===================================================> (111 + 3) / 114][Stage 163:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.5491802 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=135", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=135,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385018724 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (58 + 55) / 113][Stage 164:==============================>                      (64 + 49) / 113][Stage 164:=======================================>             (84 + 29) / 113][Stage 164:================================================>    (104 + 9) / 113][Stage 164:====================================================>(112 + 1) / 113]                                                                                [Stage 165:=============================>                       (64 + 50) / 114][Stage 165:==================================>                  (75 + 39) / 114][Stage 165:==========================================>          (92 + 22) / 114][Stage 165:=================================================>   (107 + 7) / 114][Stage 165:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.943981687 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=23", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=23,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368978916 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:=================================>                   (72 + 43) / 115][Stage 166:========================================>            (87 + 28) / 115][Stage 166:=============================================>       (99 + 16) / 115][Stage 166:===================================================> (111 + 4) / 115]                                                                                [Stage 167:==============================>                      (66 + 50) / 116][Stage 167:==================================>                  (76 + 40) / 116][Stage 167:============================================>        (98 + 18) / 116][Stage 167:=================================================>   (108 + 8) / 116][Stage 167:====================================================>(114 + 2) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.241747611 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=127", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=127,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355217488 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:=====================================>               (81 + 34) / 115][Stage 168:=========================================>           (91 + 24) / 115][Stage 168:=============================================>      (101 + 14) / 115][Stage 168:==================================================>  (110 + 5) / 115]                                                                                [Stage 169:======================================>              (84 + 32) / 116][Stage 169:==========================================>          (92 + 24) / 116][Stage 169:===============================================>    (106 + 10) / 116][Stage 169:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.874224059 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=33", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=33,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363395062 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:=====================================>               (79 + 34) / 113][Stage 170:=========================================>           (88 + 25) / 113][Stage 170:=============================================>       (97 + 16) / 113][Stage 170:==================================================>  (107 + 6) / 113][Stage 170:====================================================>(112 + 1) / 113]                                                                                [Stage 171:===================================>                 (76 + 38) / 114][Stage 171:=======================================>             (86 + 28) / 114][Stage 171:===========================================>         (94 + 20) / 114][Stage 171:==============================================>     (101 + 13) / 114][Stage 171:=================================================>   (107 + 7) / 114][Stage 171:==================================================>  (109 + 5) / 114][Stage 171:===================================================> (111 + 3) / 114][Stage 171:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 8.02312833 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=161", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=161,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35389961 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=====================================>               (79 + 34) / 113][Stage 172:==========================================>          (90 + 23) / 113][Stage 172:==============================================>     (100 + 13) / 113][Stage 172:==================================================>  (108 + 5) / 113][Stage 172:====================================================>(111 + 2) / 113][Stage 172:====================================================>(112 + 1) / 113]                                                                                [Stage 173:=======================================>             (86 + 28) / 114][Stage 173:============================================>        (96 + 18) / 114][Stage 173:==============================================>     (101 + 13) / 114][Stage 173:===================================================> (110 + 4) / 114][Stage 173:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.500564452 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=75", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=75,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.330247588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:====================================>                (80 + 35) / 115][Stage 174:======================================>              (84 + 31) / 115][Stage 174:=============================================>      (100 + 15) / 115][Stage 174:==================================================>  (109 + 6) / 115][Stage 174:===================================================> (112 + 3) / 115]                                                                                [Stage 175:=====================================>               (83 + 33) / 116][Stage 175:=========================================>           (91 + 25) / 116][Stage 175:==============================================>     (103 + 13) / 116][Stage 175:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.698876125 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=192", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=192,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389694964 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==========================>                          (60 + 60) / 120][Stage 176:==============================>                      (68 + 52) / 120][Stage 176:====================================>                (83 + 37) / 120][Stage 176:=============================================>      (106 + 14) / 120][Stage 176:====================================================>(119 + 1) / 120]                                                                                [Stage 177:==========================>                          (61 + 60) / 121][Stage 177:============================>                        (66 + 55) / 121][Stage 177:===================================>                 (82 + 39) / 121][Stage 177:==============================================>     (109 + 12) / 121][Stage 177:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.764802978 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=124", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=124,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389732704 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (63 + 57) / 120][Stage 178:==================================>                  (79 + 41) / 120][Stage 178:===========================================>        (101 + 19) / 120][Stage 178:===================================================> (117 + 3) / 120]                                                                                [Stage 179:===========================>                         (62 + 59) / 121][Stage 179:================================>                    (75 + 46) / 121][Stage 179:=========================================>           (94 + 27) / 121][Stage 179:=================================================>   (114 + 7) / 121][Stage 179:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.75775129 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=88", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=88,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415664825 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:======================================>              (84 + 31) / 115][Stage 180:========================================>            (88 + 27) / 115][Stage 180:==============================================>     (103 + 12) / 115][Stage 180:==================================================>  (109 + 6) / 115]                                                                                [Stage 181:=====================================>               (83 + 33) / 116][Stage 181:==========================================>          (93 + 23) / 116][Stage 181:=================================================>   (109 + 7) / 116][Stage 181:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.810467571 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=69", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=69,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410716409 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (58 + 55) / 113][Stage 182:===========================>                         (59 + 54) / 113][Stage 182:====================================>                (77 + 36) / 113][Stage 182:===========================================>         (93 + 20) / 113][Stage 182:==================================================>  (108 + 5) / 113]                                                                                [Stage 183:===========================>                         (60 + 54) / 114][Stage 183:==============================>                      (66 + 48) / 114][Stage 183:=====================================>               (81 + 33) / 114][Stage 183:==============================================>      (99 + 15) / 114][Stage 183:====================================================>(112 + 2) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.58315521 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=189", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=189,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349063976 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:>                                                      (0 + 0) / 115][Stage 184:======================================>              (83 + 32) / 115][Stage 184:=========================================>           (90 + 25) / 115][Stage 184:===============================================>    (104 + 11) / 115][Stage 184:====================================================>(114 + 1) / 115]                                                                                [Stage 185:======================================>              (84 + 32) / 116][Stage 185:==========================================>          (92 + 24) / 116][Stage 185:=================================================>   (108 + 8) / 116][Stage 185:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.620509241 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389862946 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (61 + 60) / 121][Stage 186:================================>                    (74 + 47) / 121][Stage 186:=======================================>             (91 + 30) / 121][Stage 186:==================================================>  (115 + 6) / 121][Stage 186:====================================================>(120 + 1) / 121]                                                                                [Stage 187:==========================>                          (61 + 61) / 122][Stage 187:============================>                        (65 + 57) / 122][Stage 187:====================================>                (83 + 39) / 122][Stage 187:==========================================>         (100 + 22) / 122][Stage 187:=================================================>   (114 + 8) / 122][Stage 187:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.570163295 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=49", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=49,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389271067 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (62 + 58) / 120][Stage 188:================================>                    (74 + 46) / 120][Stage 188:======================================>              (87 + 33) / 120][Stage 188:=================================================>   (112 + 8) / 120]                                                                                [Stage 189:===========================>                         (62 + 59) / 121][Stage 189:==============================>                      (69 + 52) / 121][Stage 189:======================================>              (88 + 33) / 121][Stage 189:=============================================>      (106 + 15) / 121][Stage 189:====================================================>(119 + 2) / 121][Stage 189:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.308412958 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389655667 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (59 + 54) / 113][Stage 190:============================>                        (61 + 52) / 113][Stage 190:===================================>                 (76 + 37) / 113][Stage 190:============================================>        (94 + 19) / 113][Stage 190:===================================================> (109 + 4) / 113][Stage 190:====================================================>(112 + 1) / 113]                                                                                [Stage 191:=============================>                       (63 + 51) / 114][Stage 191:===================================>                 (76 + 38) / 114][Stage 191:==============================================>      (99 + 15) / 114][Stage 191:===================================================> (110 + 4) / 114][Stage 191:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.10144934 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=229", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=229,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387717949 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (60 + 60) / 120][Stage 192:===========================>                         (62 + 58) / 120][Stage 192:=================================>                   (76 + 44) / 120][Stage 192:===========================================>         (98 + 22) / 120][Stage 192:==================================================>  (115 + 5) / 120]                                                                                [Stage 193:============================>                        (65 + 56) / 121][Stage 193:==================================>                  (78 + 43) / 121][Stage 193:============================================>       (103 + 18) / 121][Stage 193:==================================================>  (115 + 6) / 121][Stage 193:===================================================> (118 + 3) / 121][Stage 193:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 5.216033011 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=156", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=156,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407565475 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (61 + 60) / 121][Stage 194:===============================>                     (71 + 50) / 121][Stage 194:=========================================>           (95 + 26) / 121][Stage 194:===============================================>    (111 + 10) / 121][Stage 194:====================================================>(120 + 1) / 121]                                                                                [Stage 195:==========================>                          (61 + 61) / 122][Stage 195:============================>                        (66 + 56) / 122][Stage 195:=====================================>               (86 + 36) / 122][Stage 195:=============================================>      (107 + 15) / 122][Stage 195:===================================================> (118 + 4) / 122][Stage 195:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.584352372 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=28", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=28,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418723727 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==========================>                          (60 + 60) / 120][Stage 196:===========================>                         (63 + 57) / 120][Stage 196:==================================>                  (78 + 42) / 120][Stage 196:===========================================>        (100 + 20) / 120][Stage 196:====================================================>(118 + 2) / 120]                                                                                [Stage 197:==========================>                          (61 + 60) / 121][Stage 197:===============================>                     (73 + 48) / 121][Stage 197:========================================>            (93 + 28) / 121][Stage 197:=================================================>   (113 + 8) / 121][Stage 197:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.419848068 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=232", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=232,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38869543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:============================>                        (61 + 52) / 113][Stage 198:=================================>                   (72 + 41) / 113][Stage 198:===========================================>         (92 + 21) / 113][Stage 198:==================================================>  (108 + 5) / 113][Stage 198:====================================================>(111 + 2) / 113]                                                                                [Stage 199:=============================>                       (63 + 51) / 114][Stage 199:=====================================>               (81 + 33) / 114][Stage 199:==============================================>     (101 + 13) / 114][Stage 199:====================================================>(112 + 2) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.627753676 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=163", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=163,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396784045 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 61) / 121][Stage 200:==============================>                      (70 + 51) / 121][Stage 200:====================================>                (84 + 37) / 121][Stage 200:===============================================>    (110 + 11) / 121][Stage 200:====================================================>(119 + 2) / 121]                                                                                [Stage 201:==========================>                          (61 + 61) / 122][Stage 201:=============================>                       (69 + 53) / 122][Stage 201:========================================>            (94 + 28) / 122][Stage 201:============================================>       (105 + 17) / 122][Stage 201:===================================================> (119 + 3) / 122][Stage 201:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.074400369 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/24 16:38:21 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.16:44138) dropped. RpcEnv already stopped.
17/05/24 16:38:21 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.2:50386) dropped. RpcEnv already stopped.
17/05/24 16:38:21 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.16:44138) dropped. RpcEnv already stopped.
17/05/24 16:38:21 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.2:50386) dropped. RpcEnv already stopped.

real	11m43.188s
user	12m27.904s
sys	1m31.284s
