Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 17:40:30 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:40:44 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:40:44 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:40:44 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 17:40:47 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:40:57 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524174046-0575).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.378463013 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=========================>                             (54 + 61) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:==========================================>            (88 + 27) / 115][Stage 0:===========================================>           (91 + 24) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:=====================================================> (111 + 4) / 115][Stage 0:=====================================================> (112 + 3) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:=====================>                                 (45 + 71) / 116][Stage 1:=============================>                         (63 + 53) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:===========================================>           (92 + 24) / 116][Stage 1:===============================================>      (102 + 14) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.569579677 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 161  OR   partitionIndex = 175  OR  partitionIndex = 176 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.732702998 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==========================>                            (55 + 60) / 115][Stage 2:==============================>                        (63 + 52) / 115][Stage 2:===============================>                       (66 + 49) / 115][Stage 2:==================================>                    (72 + 43) / 115][Stage 2:=====================================>                 (79 + 36) / 115][Stage 2:==========================================>            (88 + 27) / 115][Stage 2:===========================================>           (91 + 24) / 115][Stage 2:===============================================>      (102 + 13) / 115][Stage 2:===================================================>   (107 + 8) / 115][Stage 2:===================================================>   (108 + 7) / 115][Stage 2:======================================================>(113 + 2) / 115][Stage 2:======================================================>(114 + 1) / 115]                                                                                [Stage 3:================================>                      (68 + 48) / 116][Stage 3:==================================>                    (72 + 44) / 116][Stage 3:====================================>                  (77 + 39) / 116][Stage 3:======================================>                (82 + 34) / 116][Stage 3:==============================================>        (98 + 18) / 116][Stage 3:===============================================>      (101 + 15) / 116][Stage 3:===============================================>      (103 + 13) / 116][Stage 3:===================================================>   (108 + 8) / 116][Stage 3:===================================================>   (109 + 7) / 116][Stage 3:====================================================>  (111 + 5) / 116][Stage 3:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 6.134221587 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR   partitionIndex = 227  OR  partitionIndex = 228 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.7357092 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==========================>                            (57 + 63) / 120][Stage 4:===========================>                           (61 + 59) / 120][Stage 4:=============================>                         (64 + 56) / 120][Stage 4:================================>                      (71 + 49) / 120][Stage 4:=====================================>                 (81 + 39) / 120][Stage 4:=============================================>         (99 + 21) / 120][Stage 4:=====================================================> (117 + 3) / 120]                                                                                [Stage 5:===========================>                           (61 + 60) / 121][Stage 5:==============================>                        (68 + 53) / 121][Stage 5:===================================>                   (79 + 42) / 121][Stage 5:=======================================>               (87 + 34) / 121][Stage 5:=================================================>    (110 + 11) / 121][Stage 5:======================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.314242074 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  pa rtitionIndex = 79  OR  partitionIndex = 80 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.596625175 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==============================>                        (64 + 51) / 115][Stage 6:=================================>                     (71 + 44) / 115][Stage 6:=========================================>             (86 + 29) / 115][Stage 6:============================================>          (92 + 23) / 115][Stage 6:================================================>     (104 + 11) / 115][Stage 6:=====================================================> (112 + 3) / 115]                                                                                [Stage 7:==================================>                    (73 + 43) / 116][Stage 7:======================================>                (82 + 34) / 116][Stage 7:=============================================>         (97 + 19) / 116][Stage 7:=================================================>    (106 + 10) / 116][Stage 7:====================================================>  (111 + 5) / 116][Stage 7:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.701810185 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  pa rtitionIndex = 45  OR  partitionIndex = 46 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.600179477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:========================>                              (50 + 63) / 113][Stage 8:============================>                          (58 + 55) / 113][Stage 8:==============================>                        (63 + 50) / 113][Stage 8:===================================>                   (72 + 41) / 113][Stage 8:===========================================>           (90 + 23) / 113][Stage 8:===============================================>      (100 + 13) / 113][Stage 8:===================================================>   (106 + 7) / 113][Stage 8:=====================================================> (110 + 3) / 113]                                                                                [Stage 9:============================>                          (59 + 55) / 114][Stage 9:==================================>                    (71 + 43) / 114][Stage 9:=========================================>             (86 + 28) / 114][Stage 9:=============================================>         (94 + 20) / 114][Stage 9:===============================================>      (101 + 13) / 114][Stage 9:===================================================>   (107 + 7) / 114]                                                                                Time elapsed: 4.453386649 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 62  OR  pa rtitionIndex = 75  OR  partitionIndex = 76 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 75  OR  partitionIndex = 76 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.587705289 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (58 + 55) / 113][Stage 10:============================>                         (59 + 54) / 113][Stage 10:================================>                     (68 + 45) / 113][Stage 10:=========================================>            (86 + 27) / 113][Stage 10:=================================================>    (104 + 9) / 113][Stage 10:===================================================>  (108 + 5) / 113][Stage 10:====================================================> (110 + 3) / 113][Stage 10:=====================================================>(112 + 1) / 113]                                                                                [Stage 11:============================>                         (60 + 54) / 114][Stage 11:==================================>                   (72 + 42) / 114][Stage 11:========================================>             (85 + 29) / 114][Stage 11:==============================================>      (100 + 14) / 114][Stage 11:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.253652025 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR   partitionIndex = 172  OR  partitionIndex = 180 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.550937387 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==============================>                       (65 + 50) / 115][Stage 12:=================================>                    (71 + 44) / 115][Stage 12:=====================================>                (79 + 36) / 115][Stage 12:===========================================>          (92 + 23) / 115][Stage 12:=============================================>        (97 + 18) / 115][Stage 12:===============================================>     (103 + 12) / 115][Stage 12:====================================================> (112 + 3) / 115]                                                                                [Stage 13:=================================>                    (72 + 44) / 116][Stage 13:=======================================>              (84 + 32) / 116][Stage 13:=============================================>        (97 + 19) / 116][Stage 13:===============================================>     (104 + 12) / 116][Stage 13:==================================================>   (109 + 7) / 116][Stage 13:===================================================>  (110 + 6) / 116][Stage 13:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.236806351 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  pa rtitionIndex = 58  OR  partitionIndex = 59 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 58  OR  partitionIndex = 59 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483090426 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==================================>                   (72 + 41) / 113][Stage 14:=========================================>            (86 + 27) / 113][Stage 14:==========================================>           (88 + 25) / 113][Stage 14:===============================================>      (99 + 14) / 113][Stage 14:===================================================>  (107 + 6) / 113][Stage 14:=====================================================>(112 + 1) / 113]                                                                                [Stage 15:=======================================>              (84 + 30) / 114][Stage 15:==========================================>           (90 + 24) / 114][Stage 15:=============================================>        (96 + 18) / 114][Stage 15:===============================================>     (102 + 12) / 114][Stage 15:===================================================>  (108 + 6) / 114][Stage 15:===================================================>  (109 + 5) / 114][Stage 15:====================================================> (111 + 3) / 114][Stage 15:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.989852136 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  pa rtitionIndex = 51  OR  partitionIndex = 52 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.596284624 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:========================>                             (56 + 65) / 121][Stage 16:==========================>                           (60 + 61) / 121][Stage 16:=============================>                        (67 + 54) / 121][Stage 16:=====================================>                (85 + 36) / 121][Stage 16:==========================================>           (95 + 26) / 121][Stage 16:=============================================>       (105 + 16) / 121][Stage 16:=================================================>    (112 + 9) / 121][Stage 16:=====================================================>(119 + 2) / 121]                                                                                [Stage 17:===========================>                          (61 + 61) / 122][Stage 17:==============================>                       (70 + 52) / 122][Stage 17:=========================================>            (93 + 29) / 122][Stage 17:==============================================>      (108 + 14) / 122][Stage 17:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 4.709206621 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR   partitionIndex = 211  OR  partitionIndex = 225 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.545394038 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (60 + 60) / 120][Stage 18:===========================>                          (61 + 59) / 120][Stage 18:================================>                     (72 + 48) / 120][Stage 18:============================================>         (99 + 21) / 120][Stage 18:===================================================>  (115 + 5) / 120][Stage 18:=====================================================>(119 + 1) / 120]                                                                                [Stage 19:==========================>                           (60 + 61) / 121][Stage 19:===========================>                          (62 + 59) / 121][Stage 19:================================>                     (73 + 48) / 121][Stage 19:=========================================>            (94 + 27) / 121][Stage 19:===============================================>     (109 + 12) / 121][Stage 19:==================================================>   (114 + 7) / 121][Stage 19:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.875003826 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  pa rtitionIndex = 94  OR  partitionIndex = 95 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.510922738 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (58 + 55) / 113][Stage 20:============================>                         (59 + 54) / 113][Stage 20:================================>                     (69 + 44) / 113][Stage 20:==============================================>       (98 + 15) / 113][Stage 20:=====================================================>(111 + 2) / 113]                                                                                [Stage 21:=============================>                        (62 + 52) / 114][Stage 21:================================>                     (69 + 45) / 114][Stage 21:=========================================>            (87 + 27) / 114][Stage 21:===============================================>     (103 + 11) / 114][Stage 21:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.493170946 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 14  OR  pa rtitionIndex = 27  OR  partitionIndex = 28 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 27  OR  partitionIndex = 28 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494783631 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:============================>                         (59 + 54) / 113][Stage 22:================================>                     (67 + 46) / 113][Stage 22:==========================================>           (88 + 25) / 113][Stage 22:============================================>         (93 + 20) / 113][Stage 22:==================================================>   (105 + 8) / 113]                                                                                [Stage 23:============================>                         (61 + 53) / 114][Stage 23:=====================================>                (80 + 34) / 114][Stage 23:==============================================>       (98 + 16) / 114][Stage 23:====================================================> (110 + 4) / 114][Stage 23:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.777736488 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR   partitionIndex = 167  OR  partitionIndex = 168 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.510892035 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:============================>                         (59 + 54) / 113][Stage 24:=============================>                        (62 + 51) / 113][Stage 24:======================================>               (81 + 32) / 113][Stage 24:===============================================>     (102 + 11) / 113][Stage 24:=====================================================>(111 + 2) / 113]                                                                                [Stage 25:===========================>                          (59 + 55) / 114][Stage 25:=============================>                        (62 + 52) / 114][Stage 25:====================================>                 (78 + 36) / 114][Stage 25:=============================================>        (97 + 17) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.264003315 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  pa rtitionIndex = 84  OR  partitionIndex = 85 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 84  OR  partitionIndex = 85 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411456111 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:=====================================>                (79 + 36) / 115][Stage 26:======================================>               (81 + 34) / 115][Stage 26:===========================================>          (93 + 22) / 115][Stage 26:===================================================>  (109 + 6) / 115][Stage 26:=====================================================>(114 + 1) / 115]                                                                                [Stage 27:========================================>             (88 + 28) / 116][Stage 27:=============================================>        (98 + 18) / 116][Stage 27:==================================================>   (109 + 7) / 116][Stage 27:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.073270064 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 195  OR  partitionIndex = 196 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.473878787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:============================>                         (59 + 54) / 113][Stage 28:================================>                     (69 + 44) / 113][Stage 28:==========================================>           (89 + 24) / 113][Stage 28:==================================================>   (105 + 8) / 113][Stage 28:=====================================================>(111 + 2) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:===========================>                          (59 + 55) / 114][Stage 29:==============================>                       (65 + 49) / 114][Stage 29:=======================================>              (84 + 30) / 114][Stage 29:===============================================>     (103 + 11) / 114][Stage 29:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.548415067 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR   partitionIndex = 219  OR  partitionIndex = 233 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469442234 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==================================>                   (73 + 40) / 113][Stage 30:==========================================>           (89 + 24) / 113][Stage 30:=============================================>        (95 + 18) / 113][Stage 30:================================================>    (103 + 10) / 113][Stage 30:====================================================> (110 + 3) / 113][Stage 30:=====================================================>(111 + 2) / 113]                                                                                [Stage 31:=======================================>              (83 + 31) / 114][Stage 31:==========================================>           (90 + 24) / 114][Stage 31:==============================================>       (98 + 16) / 114][Stage 31:===============================================>     (102 + 12) / 114][Stage 31:===================================================>  (109 + 5) / 114][Stage 31:====================================================> (110 + 4) / 114][Stage 31:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.89425422 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 199  OR  partitionIndex = 228 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 228 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.473356623 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:============================>                         (60 + 53) / 113][Stage 32:===================================>                  (74 + 39) / 113][Stage 32:=============================================>        (95 + 18) / 113][Stage 32:====================================================> (109 + 4) / 113]                                                                                [Stage 33:============================>                         (60 + 54) / 114][Stage 33:==================================>                   (72 + 42) / 114][Stage 33:============================================>         (94 + 20) / 114][Stage 33:===================================================>  (109 + 5) / 114][Stage 33:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.339409175 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR   partitionIndex = 165  OR  partitionIndex = 166 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.51125929 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (60 + 60) / 120][Stage 34:===============================>                      (69 + 51) / 120][Stage 34:==========================================>           (95 + 25) / 120][Stage 34:==================================================>   (113 + 7) / 120]                                                                                [Stage 35:===========================>                          (62 + 59) / 121][Stage 35:================================>                     (73 + 48) / 121][Stage 35:==========================================>           (95 + 26) / 121][Stage 35:=================================================>    (112 + 9) / 121][Stage 35:===================================================>  (115 + 6) / 121][Stage 35:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.641470123 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  pa rtitionIndex = 79  OR  partitionIndex = 108 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 108 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404478687 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:======================================>               (82 + 33) / 115][Stage 36:===========================================>          (92 + 23) / 115][Stage 36:===============================================>     (103 + 12) / 115][Stage 36:====================================================> (112 + 3) / 115]                                                                                [Stage 37:=====================================>                (81 + 35) / 116][Stage 37:========================================>             (86 + 30) / 116][Stage 37:=============================================>       (100 + 16) / 116][Stage 37:===================================================>  (110 + 6) / 116][Stage 37:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.095125887 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219  OR  partitionIndex = 220  OR   partitionIndex = 233  OR  partitionIndex = 234 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 233  OR  partitionIndex = 234 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.545854285 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==========================>                           (60 + 61) / 121][Stage 38:==============================>                       (69 + 52) / 121][Stage 38:=====================================>                (83 + 38) / 121][Stage 38:============================================>        (102 + 19) / 121][Stage 38:====================================================> (117 + 4) / 121]                                                                                [Stage 39:===========================>                          (63 + 59) / 122][Stage 39:=================================>                    (76 + 46) / 122][Stage 39:===========================================>          (98 + 24) / 122][Stage 39:==================================================>   (113 + 9) / 122][Stage 39:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.508021267 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133  OR  partitionIndex = 134  OR   partitionIndex = 147  OR  partitionIndex = 148 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 147  OR  partitionIndex = 148 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454306705 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==============================>                       (65 + 50) / 115][Stage 40:=====================================>                (79 + 36) / 115][Stage 40:============================================>         (94 + 21) / 115][Stage 40:================================================>    (105 + 10) / 115][Stage 40:====================================================> (111 + 4) / 115][Stage 40:=====================================================>(114 + 1) / 115]                                                                                [Stage 41:==============================>                       (66 + 50) / 116][Stage 41:==================================>                   (74 + 42) / 116][Stage 41:============================================>         (95 + 21) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.969305596 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR   partitionIndex = 145  OR  partitionIndex = 146 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47404004 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===============================>                      (68 + 47) / 115][Stage 42:======================================>               (82 + 33) / 115][Stage 42:==============================================>       (99 + 16) / 115][Stage 42:=================================================>    (106 + 9) / 115][Stage 42:=====================================================>(114 + 1) / 115]                                                                                [Stage 43:==================================>                   (74 + 42) / 116][Stage 43:=========================================>            (90 + 26) / 116][Stage 43:================================================>    (106 + 10) / 116][Stage 43:==================================================>   (109 + 7) / 116][Stage 43:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.273093087 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 101  OR  p artitionIndex = 115  OR  partitionIndex = 116 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456102208 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (60 + 60) / 120][Stage 44:=============================>                        (65 + 55) / 120][Stage 44:=====================================>                (83 + 37) / 120][Stage 44:=============================================>       (104 + 16) / 120][Stage 44:=====================================================>(119 + 1) / 120]                                                                                [Stage 45:===========================>                          (61 + 60) / 121][Stage 45:=============================>                        (65 + 56) / 121][Stage 45:=================================>                    (76 + 45) / 121][Stage 45:=============================================>       (104 + 17) / 121][Stage 45:====================================================> (118 + 3) / 121][Stage 45:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.593145043 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 81  OR  pa rtitionIndex = 82  OR  partitionIndex = 94 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418551421 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:=================================>                    (71 + 44) / 115][Stage 46:===========================================>          (92 + 23) / 115][Stage 46:===================================================>  (109 + 6) / 115][Stage 46:====================================================> (111 + 4) / 115]                                                                                [Stage 47:==================================>                   (74 + 42) / 116][Stage 47:=========================================>            (90 + 26) / 116][Stage 47:===============================================>     (105 + 11) / 116][Stage 47:===================================================>  (110 + 6) / 116][Stage 47:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.121418504 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR   partitionIndex = 135  OR  partitionIndex = 136 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457143769 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=================================>                    (71 + 44) / 115][Stage 48:=======================================>              (84 + 31) / 115][Stage 48:==============================================>      (101 + 14) / 115][Stage 48:=====================================================>(113 + 2) / 115]                                                                                [Stage 49:=================================>                    (72 + 44) / 116][Stage 49:============================================>         (96 + 20) / 116][Stage 49:====================================================> (112 + 4) / 116][Stage 49:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.827213047 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR   partitionIndex = 206  OR  partitionIndex = 218 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431201675 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:================================>                     (72 + 46) / 118][Stage 50:=================================>                    (74 + 44) / 118][Stage 50:====================================>                 (80 + 38) / 118][Stage 50:=========================================>            (91 + 27) / 118][Stage 50:=============================================>       (101 + 17) / 118][Stage 50:==================================================>   (111 + 7) / 118][Stage 50:====================================================> (114 + 4) / 118][Stage 50:=====================================================>(116 + 2) / 118]                                                                                [Stage 51:==================================>                   (76 + 43) / 119][Stage 51:======================================>               (84 + 35) / 119][Stage 51:===========================================>          (96 + 23) / 119][Stage 51:================================================>    (109 + 10) / 119][Stage 51:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.961247674 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  pa rtitionIndex = 46  OR  partitionIndex = 47 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 46  OR  partitionIndex = 47 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375407577 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:======================================>               (83 + 32) / 115][Stage 52:=========================================>            (88 + 27) / 115][Stage 52:===================================================>  (109 + 6) / 115][Stage 52:=====================================================>(114 + 1) / 115]                                                                                [Stage 53:======================================>               (83 + 33) / 116][Stage 53:========================================>             (88 + 28) / 116][Stage 53:===============================================>     (103 + 13) / 116][Stage 53:==================================================>   (109 + 7) / 116][Stage 53:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.670136685 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  pa rtitionIndex = 26  OR  partitionIndex = 38 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472757289 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (60 + 60) / 120][Stage 54:===========================>                          (62 + 58) / 120][Stage 54:================================>                     (73 + 47) / 120][Stage 54:==========================================>           (95 + 25) / 120][Stage 54:===================================================>  (115 + 5) / 120]                                                                                [Stage 55:============================>                         (63 + 58) / 121][Stage 55:=====================================>                (83 + 38) / 121][Stage 55:==============================================>      (106 + 15) / 121][Stage 55:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.296540566 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 33  OR  par titionIndex = 47  OR  partitionIndex = 48 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.532483355 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===============================>                      (68 + 47) / 115][Stage 56:======================================>               (81 + 34) / 115][Stage 56:============================================>         (94 + 21) / 115][Stage 56:================================================>    (105 + 10) / 115][Stage 56:==================================================>   (107 + 8) / 115][Stage 56:==================================================>   (108 + 7) / 115]                                                                                [Stage 57:=================================>                    (72 + 44) / 116][Stage 57:=======================================>              (84 + 32) / 116][Stage 57:==============================================>      (102 + 14) / 116][Stage 57:==================================================>   (108 + 8) / 116][Stage 57:===================================================>  (111 + 5) / 116][Stage 57:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.135417406 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR   partitionIndex = 159  OR  partitionIndex = 173 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408632426 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===============================>                      (68 + 47) / 115][Stage 58:==================================>                   (73 + 42) / 115][Stage 58:==========================================>           (91 + 24) / 115][Stage 58:==============================================>      (101 + 14) / 115][Stage 58:===================================================>  (109 + 6) / 115][Stage 58:=====================================================>(113 + 2) / 115]                                                                                [Stage 59:===============================>                      (67 + 49) / 116][Stage 59:======================================>               (82 + 34) / 116][Stage 59:=============================================>        (98 + 18) / 116][Stage 59:===============================================>     (103 + 13) / 116][Stage 59:===================================================>  (111 + 5) / 116][Stage 59:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.525573688 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR   partitionIndex = 171  OR  partitionIndex = 172 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393734624 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:=================================>                    (71 + 42) / 113][Stage 60:========================================>             (84 + 29) / 113][Stage 60:=============================================>        (96 + 17) / 113][Stage 60:================================================>    (103 + 10) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:=======================================>              (84 + 30) / 114][Stage 61:============================================>         (93 + 21) / 114][Stage 61:==============================================>      (100 + 14) / 114][Stage 61:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.276885063 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 97  OR  par titionIndex = 111  OR  partitionIndex = 112 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42116704 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:=================================>                    (74 + 44) / 118][Stage 62:======================================>               (84 + 34) / 118][Stage 62:===========================================>          (95 + 23) / 118][Stage 62:================================================>    (108 + 10) / 118][Stage 62:=====================================================>(117 + 1) / 118]                                                                                [Stage 63:=================================>                    (73 + 46) / 119][Stage 63:==================================>                   (76 + 43) / 119][Stage 63:===========================================>          (95 + 24) / 119][Stage 63:================================================>    (108 + 11) / 119][Stage 63:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.458244562 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 122  OR   partitionIndex = 135  OR  partitionIndex = 136 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 135  OR  partitionIndex = 136 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388725608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:================================>                     (72 + 46) / 118][Stage 64:====================================>                 (79 + 39) / 118][Stage 64:=========================================>            (90 + 28) / 118][Stage 64:===============================================>     (105 + 13) / 118][Stage 64:====================================================> (114 + 4) / 118]                                                                                [Stage 65:=================================>                    (74 + 45) / 119][Stage 65:===================================>                  (78 + 41) / 119][Stage 65:=====================================>                (83 + 36) / 119][Stage 65:===========================================>          (95 + 24) / 119][Stage 65:==============================================>      (105 + 14) / 119]                                                                                Time elapsed: 3.701927256 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 23  OR  partitionIndex = 24 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452955826 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (60 + 60) / 120][Stage 66:============================>                         (64 + 56) / 120][Stage 66:====================================>                 (81 + 39) / 120][Stage 66:===============================================>     (107 + 13) / 120][Stage 66:====================================================> (116 + 4) / 120]                                                                                [Stage 67:============================>                         (63 + 58) / 121][Stage 67:=================================>                    (74 + 47) / 121][Stage 67:=======================================>              (89 + 32) / 121][Stage 67:==================================================>   (113 + 8) / 121][Stage 67:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.457702225 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 152  OR   partitionIndex = 165  OR  partitionIndex = 166 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 165  OR  partitionIndex = 166 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409984746 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:=================================>                    (73 + 45) / 118][Stage 68:===================================>                  (78 + 40) / 118][Stage 68:==========================================>           (92 + 26) / 118][Stage 68:==============================================>      (103 + 15) / 118][Stage 68:=====================================================>(116 + 2) / 118][Stage 68:=====================================================>(117 + 1) / 118]                                                                                [Stage 69:=================================>                    (74 + 45) / 119][Stage 69:==================================>                   (75 + 44) / 119][Stage 69:=======================================>              (88 + 31) / 119][Stage 69:==============================================>      (105 + 14) / 119][Stage 69:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.697872327 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  pa rtitionIndex = 76  OR  partitionIndex = 77 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 76  OR  partitionIndex = 77 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432989329 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:================================>                     (72 + 46) / 118][Stage 70:=================================>                    (74 + 44) / 118][Stage 70:=======================================>              (87 + 31) / 118][Stage 70:============================================>         (98 + 20) / 118][Stage 70:==================================================>   (110 + 8) / 118][Stage 70:=====================================================>(117 + 1) / 118]                                                                                [Stage 71:=================================>                    (74 + 45) / 119][Stage 71:====================================>                 (81 + 38) / 119][Stage 71:==========================================>           (94 + 25) / 119][Stage 71:================================================>    (108 + 11) / 119][Stage 71:====================================================> (115 + 4) / 119][Stage 71:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.528248664 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 182  OR   partitionIndex = 195  OR  partitionIndex = 196 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 195  OR  partitionIndex = 196 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394022858 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:================================>                     (72 + 46) / 118][Stage 72:==================================>                   (75 + 43) / 118][Stage 72:======================================>               (84 + 34) / 118][Stage 72:============================================>         (97 + 21) / 118][Stage 72:================================================>    (107 + 11) / 118][Stage 72:===================================================>  (113 + 5) / 118]                                                                                [Stage 73:=================================>                    (73 + 46) / 119][Stage 73:====================================>                 (80 + 39) / 119][Stage 73:=========================================>            (91 + 28) / 119][Stage 73:============================================>         (99 + 20) / 119][Stage 73:================================================>    (109 + 10) / 119][Stage 73:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.612487311 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  pa rtitionIndex = 50  OR  partitionIndex = 51 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 50  OR  partitionIndex = 51 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365407038 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:======================================>               (82 + 33) / 115][Stage 74:=========================================>            (89 + 26) / 115][Stage 74:================================================>    (105 + 10) / 115][Stage 74:==================================================>   (108 + 7) / 115]                                                                                [Stage 75:=======================================>              (84 + 32) / 116][Stage 75:========================================>             (88 + 28) / 116][Stage 75:=============================================>        (98 + 18) / 116][Stage 75:===============================================>     (105 + 11) / 116][Stage 75:====================================================> (112 + 4) / 116][Stage 75:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.446059422 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  pa rtitionIndex = 35  OR  partitionIndex = 49 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412347348 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (58 + 55) / 113][Stage 76:================================>                     (69 + 44) / 113][Stage 76:=========================================>            (86 + 27) / 113][Stage 76:==================================================>   (105 + 8) / 113]                                                                                [Stage 77:============================>                         (61 + 53) / 114][Stage 77:==================================>                   (73 + 41) / 114][Stage 77:============================================>         (93 + 21) / 114][Stage 77:===================================================>  (108 + 6) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.423905687 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  pa rtitionIndex = 28  OR  partitionIndex = 29 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 28  OR  partitionIndex = 29 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388805481 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:==================================>                   (73 + 42) / 115][Stage 78:========================================>             (86 + 29) / 115][Stage 78:===============================================>     (103 + 12) / 115][Stage 78:====================================================> (112 + 3) / 115]                                                                                [Stage 79:===================================>                  (77 + 39) / 116][Stage 79:=========================================>            (90 + 26) / 116][Stage 79:===============================================>     (105 + 11) / 116][Stage 79:===================================================>  (110 + 6) / 116][Stage 79:====================================================> (113 + 3) / 116][Stage 79:=====================================================>(114 + 2) / 116][Stage 79:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.820638079 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211  OR   partitionIndex = 225  OR  partitionIndex = 226 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419732266 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (59 + 54) / 113][Stage 80:================================>                     (69 + 44) / 113][Stage 80:===========================================>          (91 + 22) / 113][Stage 80:=================================================>    (104 + 9) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:===========================>                          (58 + 56) / 114][Stage 81:==============================>                       (64 + 50) / 114][Stage 81:=========================================>            (87 + 27) / 114][Stage 81:==============================================>       (98 + 16) / 114][Stage 81:====================================================> (110 + 4) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.678532575 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 143  OR  partitionIndex = 232 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 232 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384059906 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:=================================>                    (73 + 45) / 118][Stage 82:=====================================>                (82 + 36) / 118][Stage 82:=========================================>            (90 + 28) / 118][Stage 82:===============================================>     (106 + 12) / 118][Stage 82:====================================================> (114 + 4) / 118]                                                                                [Stage 83:==================================>                   (75 + 44) / 119][Stage 83:=====================================>                (83 + 36) / 119][Stage 83:==========================================>           (93 + 26) / 119][Stage 83:==============================================>      (105 + 14) / 119][Stage 83:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.382273503 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 175  OR  partitionIndex = 176 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 175  OR  partitionIndex = 176 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399624588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==============================>                       (65 + 50) / 115][Stage 84:====================================>                 (77 + 38) / 115][Stage 84:==============================================>       (98 + 17) / 115][Stage 84:================================================>    (105 + 10) / 115][Stage 84:=====================================================>(114 + 1) / 115]                                                                                [Stage 85:=================================>                    (71 + 45) / 116][Stage 85:========================================>             (87 + 29) / 116][Stage 85:===============================================>     (103 + 13) / 116][Stage 85:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.688753234 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  pa rtitionIndex = 77  OR  partitionIndex = 78 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.532480875 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==============================>                       (65 + 50) / 115][Stage 86:==================================>                   (74 + 41) / 115][Stage 86:===========================================>          (92 + 23) / 115][Stage 86:================================================>    (105 + 10) / 115][Stage 86:===================================================>  (110 + 5) / 115]                                                                                [Stage 87:=================================>                    (72 + 44) / 116][Stage 87:==========================================>           (92 + 24) / 116][Stage 87:===============================================>     (104 + 12) / 116][Stage 87:===================================================>  (110 + 6) / 116][Stage 87:====================================================> (113 + 3) / 116][Stage 87:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.702465796 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 190  OR   partitionIndex = 203  OR  partitionIndex = 204 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 203  OR  partitionIndex = 204 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427587504 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (61 + 59) / 120][Stage 88:================================>                     (73 + 47) / 120][Stage 88:=========================================>            (93 + 27) / 120][Stage 88:==================================================>   (113 + 7) / 120]                                                                                [Stage 89:============================>                         (64 + 57) / 121][Stage 89:===================================>                  (80 + 41) / 121][Stage 89:============================================>        (101 + 20) / 121][Stage 89:==================================================>   (114 + 7) / 121][Stage 89:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.35664413 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 151  OR   partitionIndex = 165  OR  partitionIndex = 166 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418163597 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (60 + 60) / 120][Stage 90:============================>                         (63 + 57) / 120][Stage 90:======================================>               (86 + 34) / 120][Stage 90:===============================================>     (107 + 13) / 120]                                                                                [Stage 91:============================>                         (63 + 58) / 121][Stage 91:================================>                     (72 + 49) / 121][Stage 91:======================================>               (87 + 34) / 121][Stage 91:===============================================>     (108 + 13) / 121][Stage 91:=====================================================>(119 + 2) / 121][Stage 91:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.469399534 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR   partitionIndex = 207  OR  partitionIndex = 236 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 236 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434645182 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==========================>                           (60 + 61) / 121][Stage 92:============================>                         (64 + 57) / 121][Stage 92:==================================>                   (77 + 44) / 121][Stage 92:============================================>         (99 + 22) / 121][Stage 92:===================================================>  (116 + 5) / 121]                                                                                [Stage 93:===========================>                          (63 + 59) / 122][Stage 93:===================================>                  (80 + 42) / 122][Stage 93:============================================>        (102 + 20) / 122][Stage 93:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.254957214 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 117  OR  partitionIndex = 118 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380404591 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:================================>                     (72 + 46) / 118][Stage 94:==================================>                   (76 + 42) / 118][Stage 94:=========================================>            (91 + 27) / 118][Stage 94:=================================================>    (109 + 9) / 118][Stage 94:=====================================================>(117 + 1) / 118]                                                                                [Stage 95:=================================>                    (73 + 46) / 119][Stage 95:==================================>                   (76 + 43) / 119][Stage 95:========================================>             (90 + 29) / 119][Stage 95:============================================>        (100 + 19) / 119][Stage 95:=====================================================>(117 + 2) / 119][Stage 95:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.682182146 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  pa rtitionIndex = 83  OR  partitionIndex = 84 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345809135 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=====================================>                (80 + 35) / 115][Stage 96:=========================================>            (89 + 26) / 115][Stage 96:==============================================>      (101 + 14) / 115][Stage 96:===================================================>  (110 + 5) / 115][Stage 96:=====================================================>(114 + 1) / 115]                                                                                [Stage 97:======================================>               (83 + 33) / 116][Stage 97:=========================================>            (90 + 26) / 116][Stage 97:================================================>    (106 + 10) / 116][Stage 97:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.791506261 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 156  OR   partitionIndex = 169  OR  partitionIndex = 170 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 169  OR  partitionIndex = 170 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.50762356 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:==========================>                           (60 + 61) / 121][Stage 98:==============================>                       (69 + 52) / 121][Stage 98:=======================================>              (89 + 32) / 121][Stage 98:=============================================>       (103 + 18) / 121][Stage 98:===================================================>  (116 + 5) / 121]                                                                                [Stage 99:===========================>                          (61 + 61) / 122][Stage 99:============================>                         (65 + 57) / 122][Stage 99:==================================>                   (79 + 43) / 122][Stage 99:=========================================>            (94 + 28) / 122][Stage 99:===================================================>  (116 + 6) / 122][Stage 99:=====================================================>(120 + 2) / 122][Stage 99:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.715943183 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR   partitionIndex = 162  OR  partitionIndex = 163 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384106838 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (72 + 46) / 118][Stage 100:==================================>                  (77 + 41) / 118][Stage 100:==========================================>          (95 + 23) / 118][Stage 100:===============================================>    (108 + 10) / 118][Stage 100:====================================================>(116 + 2) / 118]                                                                                [Stage 101:================================>                    (73 + 46) / 119][Stage 101:=================================>                   (75 + 44) / 119][Stage 101:========================================>            (92 + 27) / 119][Stage 101:==============================================>     (106 + 13) / 119][Stage 101:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.194014817 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR   partitionIndex = 121  OR  partitionIndex = 135 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413091237 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 61) / 121][Stage 102:============================>                        (66 + 55) / 121][Stage 102:====================================>                (84 + 37) / 121][Stage 102:===========================================>         (99 + 22) / 121][Stage 102:===================================================> (118 + 3) / 121]                                                                                [Stage 103:==========================>                          (61 + 61) / 122][Stage 103:===========================>                         (63 + 59) / 122][Stage 103:=================================>                   (78 + 44) / 122][Stage 103:==========================================>          (98 + 24) / 122][Stage 103:=================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.378399897 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  pa rtitionIndex = 115  OR  partitionIndex = 116 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 115  OR  partitionIndex = 116 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386616203 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:================================>                    (73 + 45) / 118][Stage 104:===================================>                 (79 + 39) / 118][Stage 104:==========================================>          (94 + 24) / 118][Stage 104:=============================================>      (103 + 15) / 118][Stage 104:===================================================> (115 + 3) / 118]                                                                                [Stage 105:================================>                    (73 + 46) / 119][Stage 105:=================================>                   (76 + 43) / 119][Stage 105:====================================>                (83 + 36) / 119][Stage 105:==========================================>          (95 + 24) / 119][Stage 105:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.471407705 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR   partitionIndex = 173  OR  partitionIndex = 174 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406812678 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:===============================>                     (73 + 48) / 121][Stage 106:========================================>            (93 + 28) / 121][Stage 106:=================================================>   (114 + 7) / 121][Stage 106:====================================================>(120 + 1) / 121]                                                                                [Stage 107:==========================>                          (62 + 60) / 122][Stage 107:=============================>                       (68 + 54) / 122][Stage 107:======================================>              (88 + 34) / 122][Stage 107:=============================================>      (107 + 15) / 122][Stage 107:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.325431456 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  pa rtitionIndex = 105  OR  partitionIndex = 106 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420076293 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (60 + 60) / 120][Stage 108:=============================>                       (67 + 53) / 120][Stage 108:=======================================>             (89 + 31) / 120][Stage 108:==============================================>     (108 + 12) / 120]                                                                                [Stage 109:===========================>                         (62 + 59) / 121][Stage 109:==================================>                  (78 + 43) / 121][Stage 109:===========================================>        (101 + 20) / 121][Stage 109:==================================================>  (116 + 5) / 121][Stage 109:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.420495929 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 96  OR  pa rtitionIndex = 109  OR  partitionIndex = 110 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 109  OR  partitionIndex = 110 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40072772 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (61 + 60) / 121][Stage 110:===============================>                     (73 + 48) / 121][Stage 110:========================================>            (93 + 28) / 121][Stage 110:=================================================>   (113 + 8) / 121][Stage 110:====================================================>(120 + 1) / 121]                                                                                [Stage 111:==========================>                          (61 + 61) / 122][Stage 111:=============================>                       (68 + 54) / 122][Stage 111:=======================================>             (90 + 32) / 122][Stage 111:==============================================>     (110 + 12) / 122][Stage 111:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.400802809 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  pa rtitionIndex = 23  OR  partitionIndex = 24 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370585556 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:>                                                      (0 + 0) / 115][Stage 112:==============================>                      (67 + 48) / 115][Stage 112:=======================================>             (86 + 29) / 115][Stage 112:===========================================>         (94 + 21) / 115][Stage 112:==================================================>  (110 + 5) / 115]                                                                                [Stage 113:===================================>                 (78 + 38) / 116][Stage 113:===========================================>         (95 + 21) / 116][Stage 113:==============================================>     (103 + 13) / 116][Stage 113:===================================================> (112 + 4) / 116][Stage 113:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.854994805 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR   partitionIndex = 235  OR  partitionIndex = 236 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 235  OR  partitionIndex = 236 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385386655 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:================================>                    (72 + 46) / 118][Stage 114:================================>                    (73 + 45) / 118][Stage 114:====================================>                (81 + 37) / 118][Stage 114:=======================================>             (89 + 29) / 118][Stage 114:===============================================>    (107 + 11) / 118][Stage 114:====================================================>(116 + 2) / 118]                                                                                [Stage 115:================================>                    (73 + 46) / 119][Stage 115:==================================>                  (77 + 42) / 119][Stage 115:=====================================>               (84 + 35) / 119][Stage 115:============================================>        (99 + 20) / 119][Stage 115:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.481821834 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  pa rtitionIndex = 87  OR  partitionIndex = 116 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 116 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377410233 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==================================>                  (75 + 40) / 115][Stage 116:=========================================>           (89 + 26) / 115][Stage 116:===============================================>    (105 + 10) / 115][Stage 116:==================================================>  (110 + 5) / 115]                                                                                [Stage 117:================================>                    (72 + 44) / 116][Stage 117:=======================================>             (86 + 30) / 116][Stage 117:==============================================>     (104 + 12) / 116][Stage 117:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.94565976 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 217  OR   partitionIndex = 231  OR  partitionIndex = 232 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335941779 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:=====================================>               (82 + 33) / 115][Stage 118:=========================================>           (89 + 26) / 115][Stage 118:==============================================>     (102 + 13) / 115][Stage 118:====================================================>(113 + 2) / 115]                                                                                [Stage 119:======================================>              (85 + 31) / 116][Stage 119:============================================>        (98 + 18) / 116][Stage 119:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.764554078 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR   partitionIndex = 230  OR  partitionIndex = 231 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 230  OR  partitionIndex = 231 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375116605 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===============================>                     (68 + 47) / 115][Stage 120:===================================>                 (77 + 38) / 115][Stage 120:=============================================>       (98 + 17) / 115][Stage 120:=================================================>   (107 + 8) / 115][Stage 120:====================================================>(113 + 2) / 115]                                                                                [Stage 121:====================================>                (80 + 36) / 116][Stage 121:==========================================>          (92 + 24) / 116][Stage 121:=================================================>   (108 + 8) / 116][Stage 121:==================================================>  (111 + 5) / 116][Stage 121:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.141097162 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR   partitionIndex = 139  OR  partitionIndex = 168 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 168 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334764914 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:====================================>                (80 + 35) / 115][Stage 122:========================================>            (87 + 28) / 115][Stage 122:===============================================>    (105 + 10) / 115]                                                                                [Stage 123:======================================>              (85 + 31) / 116][Stage 123:========================================>            (89 + 27) / 116][Stage 123:===============================================>    (106 + 10) / 116][Stage 123:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.73234478 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  pa rtitionIndex = 45  OR  partitionIndex = 46 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352272922 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:======================================>              (84 + 31) / 115][Stage 124:=========================================>           (89 + 26) / 115][Stage 124:================================================>    (106 + 9) / 115][Stage 124:====================================================>(113 + 2) / 115]                                                                                [Stage 125:=======================================>             (87 + 29) / 116][Stage 125:===========================================>         (96 + 20) / 116][Stage 125:================================================>    (107 + 9) / 116][Stage 125:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.808381629 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR   partitionIndex = 173  OR  partitionIndex = 174 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4253526 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (61 + 59) / 120][Stage 126:=================================>                   (76 + 44) / 120][Stage 126:=======================================>             (89 + 31) / 120][Stage 126:=================================================>   (112 + 8) / 120][Stage 126:====================================================>(119 + 1) / 120]                                                                                [Stage 127:==========================>                          (61 + 60) / 121][Stage 127:=============================>                       (68 + 53) / 121][Stage 127:====================================>                (84 + 37) / 121][Stage 127:=============================================>      (105 + 16) / 121][Stage 127:==================================================>  (115 + 6) / 121][Stage 127:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.563829633 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  pa rtitionIndex = 109  OR  partitionIndex = 110 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397909384 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:================================>                    (70 + 45) / 115][Stage 128:========================================>            (87 + 28) / 115][Stage 128:==============================================>     (103 + 12) / 115][Stage 128:==================================================>  (110 + 5) / 115]                                                                                [Stage 129:==================================>                  (76 + 40) / 116][Stage 129:========================================>            (89 + 27) / 116][Stage 129:=============================================>      (102 + 14) / 116][Stage 129:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.898366433 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR   partitionIndex = 144  OR  partitionIndex = 145 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 144  OR  partitionIndex = 145 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398069804 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 60) / 120][Stage 130:=============================>                       (67 + 53) / 120][Stage 130:=====================================>               (84 + 36) / 120][Stage 130:==============================================>     (107 + 13) / 120][Stage 130:====================================================>(119 + 1) / 120]                                                                                [Stage 131:==========================>                          (61 + 60) / 121][Stage 131:==============================>                      (70 + 51) / 121][Stage 131:=====================================>               (85 + 36) / 121][Stage 131:==============================================>     (109 + 12) / 121][Stage 131:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.171740132 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21  OR  par titionIndex = 22  OR  partitionIndex = 34 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359809119 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:====================================>                (77 + 36) / 113][Stage 132:==========================================>          (91 + 22) / 113][Stage 132:=============================================>       (98 + 15) / 113][Stage 132:===================================================> (110 + 3) / 113]                                                                                [Stage 133:=====================================>               (80 + 34) / 114][Stage 133:========================================>            (88 + 26) / 114][Stage 133:=============================================>      (100 + 14) / 114][Stage 133:==================================================>  (108 + 6) / 114][Stage 133:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.325985203 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195  OR   partitionIndex = 208  OR  partitionIndex = 209 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 208  OR  partitionIndex = 209 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363872829 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:================================>                    (73 + 45) / 118][Stage 134:===================================>                 (80 + 38) / 118][Stage 134:=========================================>           (92 + 26) / 118][Stage 134:==============================================>     (106 + 12) / 118][Stage 134:====================================================>(117 + 1) / 118]                                                                                [Stage 135:================================>                    (73 + 46) / 119][Stage 135:=================================>                   (75 + 44) / 119][Stage 135:======================================>              (86 + 33) / 119][Stage 135:==========================================>          (96 + 23) / 119][Stage 135:=================================================>   (111 + 8) / 119][Stage 135:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.517669615 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR   partitionIndex = 178  OR  partitionIndex = 179 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 178  OR  partitionIndex = 179 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394833032 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (63 + 57) / 120][Stage 136:==============================>                      (68 + 52) / 120][Stage 136:======================================>              (87 + 33) / 120][Stage 136:===============================================>    (110 + 10) / 120]                                                                                [Stage 137:============================>                        (65 + 56) / 121][Stage 137:=================================>                   (76 + 45) / 121][Stage 137:========================================>            (92 + 29) / 121][Stage 137:===============================================>    (110 + 11) / 121][Stage 137:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.373447376 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  pa rtitionIndex = 107  OR  partitionIndex = 108 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 107  OR  partitionIndex = 108 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379687651 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (59 + 54) / 113][Stage 138:==================================>                  (73 + 40) / 113][Stage 138:=============================================>       (97 + 16) / 113][Stage 138:===================================================> (109 + 4) / 113]                                                                                [Stage 139:===========================>                         (59 + 55) / 114][Stage 139:===============================>                     (67 + 47) / 114][Stage 139:=======================================>             (84 + 30) / 114][Stage 139:==============================================>     (101 + 13) / 114][Stage 139:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.302457577 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR   partitionIndex = 174  OR  partitionIndex = 175 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 174  OR  partitionIndex = 175 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338595718 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:======================================>              (84 + 31) / 115][Stage 140:============================================>        (97 + 18) / 115][Stage 140:===================================================> (111 + 4) / 115]                                                                                [Stage 141:=====================================>               (82 + 34) / 116][Stage 141:========================================>            (89 + 27) / 116][Stage 141:==============================================>     (103 + 13) / 116][Stage 141:===================================================> (112 + 4) / 116][Stage 141:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.764328091 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR   partitionIndex = 114  OR  partitionIndex = 115 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 114  OR  partitionIndex = 115 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397656638 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (62 + 58) / 120][Stage 142:=============================>                       (67 + 53) / 120][Stage 142:=====================================>               (85 + 35) / 120][Stage 142:=============================================>      (104 + 16) / 120][Stage 142:====================================================>(118 + 2) / 120]                                                                                [Stage 143:===========================>                         (62 + 59) / 121][Stage 143:=============================>                       (67 + 54) / 121][Stage 143:=====================================>               (86 + 35) / 121][Stage 143:==============================================>     (108 + 13) / 121][Stage 143:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.618350699 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  pa rtitionIndex = 39  OR  partitionIndex = 53 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335449308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=====================================>               (81 + 34) / 115][Stage 144:=========================================>           (90 + 25) / 115][Stage 144:================================================>    (106 + 9) / 115][Stage 144:====================================================>(113 + 2) / 115]                                                                                [Stage 145:=======================================>             (86 + 30) / 116][Stage 145:============================================>        (97 + 19) / 116][Stage 145:================================================>    (107 + 9) / 116][Stage 145:====================================================>(114 + 2) / 116][Stage 145:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.333638645 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR   partitionIndex = 137  OR  partitionIndex = 138 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41061181 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (63 + 57) / 120][Stage 146:===================================>                 (80 + 40) / 120][Stage 146:===========================================>        (100 + 20) / 120][Stage 146:====================================================>(118 + 2) / 120]                                                                                [Stage 147:==========================>                          (61 + 60) / 121][Stage 147:==============================>                      (70 + 51) / 121][Stage 147:=======================================>             (90 + 31) / 121][Stage 147:===============================================>    (110 + 11) / 121][Stage 147:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.269616619 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  part itionIndex = 16  OR  partitionIndex = 17 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 16  OR  partitionIndex = 17 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379721027 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==============================>                      (67 + 48) / 115][Stage 148:==================================>                  (75 + 40) / 115][Stage 148:=============================================>       (98 + 17) / 115][Stage 148:==================================================>  (110 + 5) / 115]                                                                                [Stage 149:==================================>                  (76 + 40) / 116][Stage 149:========================================>            (88 + 28) / 116][Stage 149:==============================================>     (104 + 12) / 116][Stage 149:==================================================>  (110 + 6) / 116][Stage 149:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.449663098 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR   partitionIndex = 180  OR  partitionIndex = 188 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347568978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==================================>                  (74 + 39) / 113][Stage 150:=======================================>             (84 + 29) / 113][Stage 150:============================================>        (94 + 19) / 113][Stage 150:==============================================>     (100 + 13) / 113][Stage 150:==================================================>  (108 + 5) / 113]                                                                                [Stage 151:=====================================>               (80 + 34) / 114][Stage 151:=========================================>           (90 + 24) / 114][Stage 151:==============================================>     (101 + 13) / 114][Stage 151:===================================================> (110 + 4) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.319047216 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 231  OR  partitionIndex = 232 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 231  OR  partitionIndex = 232 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356614362 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===================================>                 (75 + 38) / 113][Stage 152:=======================================>             (84 + 29) / 113][Stage 152:==========================================>          (91 + 22) / 113][Stage 152:=============================================>       (98 + 15) / 113][Stage 152:====================================================>(111 + 2) / 113]                                                                                [Stage 153:======================================>              (83 + 31) / 114][Stage 153:==========================================>          (91 + 23) / 114][Stage 153:===============================================>    (104 + 10) / 114][Stage 153:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.055222777 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 197  OR  partitionIndex = 198 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37844624 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===========================>                         (59 + 54) / 113][Stage 154:===============================>                     (67 + 46) / 113][Stage 154:=======================================>             (84 + 29) / 113][Stage 154:================================================>    (104 + 9) / 113]                                                                                [Stage 155:===========================>                         (59 + 55) / 114][Stage 155:=================================>                   (72 + 42) / 114][Stage 155:========================================>            (88 + 26) / 114][Stage 155:===============================================>    (104 + 10) / 114][Stage 155:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.208246503 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 100  OR  p artitionIndex = 113  OR  partitionIndex = 114 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 113  OR  partitionIndex = 114 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361672134 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (72 + 46) / 118][Stage 156:==================================>                  (76 + 42) / 118][Stage 156:=======================================>             (87 + 31) / 118][Stage 156:=============================================>      (103 + 15) / 118][Stage 156:====================================================>(117 + 1) / 118]                                                                                [Stage 157:================================>                    (73 + 46) / 119][Stage 157:====================================>                (81 + 38) / 119][Stage 157:=========================================>           (93 + 26) / 119][Stage 157:================================================>    (110 + 9) / 119][Stage 157:===================================================> (116 + 3) / 119][Stage 157:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.423749596 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 6  OR  part itionIndex = 19  OR  partitionIndex = 20 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 19  OR  partitionIndex = 20 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363274697 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==================================>                  (73 + 40) / 113][Stage 158:======================================>              (83 + 30) / 113][Stage 158:============================================>        (94 + 19) / 113][Stage 158:=================================================>   (105 + 8) / 113][Stage 158:===================================================> (110 + 3) / 113]                                                                                [Stage 159:=====================================>               (81 + 33) / 114][Stage 159:===========================================>         (94 + 20) / 114][Stage 159:==============================================>     (103 + 11) / 114][Stage 159:=================================================>   (107 + 7) / 114][Stage 159:====================================================>(112 + 2) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.312280558 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR   partitionIndex = 151  OR  partitionIndex = 165 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382351127 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (59 + 54) / 113][Stage 160:==============================>                      (64 + 49) / 113][Stage 160:====================================>                (78 + 35) / 113][Stage 160:==============================================>     (100 + 13) / 113][Stage 160:====================================================>(112 + 1) / 113]                                                                                [Stage 161:===========================>                         (59 + 55) / 114][Stage 161:==============================>                      (65 + 49) / 114][Stage 161:===================================>                 (76 + 38) / 114][Stage 161:===============================================>    (104 + 10) / 114][Stage 161:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.223800923 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  pa rtitionIndex = 31  OR  partitionIndex = 45 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37206472 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===============================>                     (69 + 46) / 115][Stage 162:====================================>                (80 + 35) / 115][Stage 162:=============================================>      (101 + 14) / 115][Stage 162:=================================================>   (108 + 7) / 115][Stage 162:===================================================> (112 + 3) / 115]                                                                                [Stage 163:================================>                    (71 + 45) / 116][Stage 163:======================================>              (84 + 32) / 116][Stage 163:============================================>        (98 + 18) / 116][Stage 163:===============================================>    (105 + 11) / 116][Stage 163:==================================================>  (111 + 5) / 116][Stage 163:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.325359617 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR   partitionIndex = 150  OR  partitionIndex = 151 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401875858 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 60) / 120][Stage 164:============================>                        (64 + 56) / 120][Stage 164:==================================>                  (79 + 41) / 120][Stage 164:===============================================>    (110 + 10) / 120][Stage 164:====================================================>(119 + 1) / 120]                                                                                [Stage 165:============================>                        (64 + 57) / 121][Stage 165:==================================>                  (79 + 42) / 121][Stage 165:==========================================>          (97 + 24) / 121][Stage 165:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.425894928 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR   partitionIndex = 210  OR  partitionIndex = 211 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38041796 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:=============================>                       (63 + 50) / 113][Stage 166:===================================>                 (75 + 38) / 113][Stage 166:==========================================>          (90 + 23) / 113][Stage 166:===================================================> (109 + 4) / 113]                                                                                [Stage 167:============================>                        (62 + 52) / 114][Stage 167:===================================>                 (77 + 37) / 114][Stage 167:=============================================>       (97 + 17) / 114][Stage 167:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.115138209 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  pa rtitionIndex = 78  OR  partitionIndex = 90 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382581465 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:============================>                        (61 + 52) / 113][Stage 168:================================>                    (70 + 43) / 113][Stage 168:===========================================>         (92 + 21) / 113][Stage 168:===================================================> (109 + 4) / 113]                                                                                [Stage 169:============================>                        (61 + 53) / 114][Stage 169:===============================>                     (67 + 47) / 114][Stage 169:========================================>            (88 + 26) / 114][Stage 169:==============================================>     (101 + 13) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.222473209 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29  OR  pa rtitionIndex = 30  OR  partitionIndex = 42 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349714437 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===================================>                 (75 + 38) / 113][Stage 170:========================================>            (87 + 26) / 113][Stage 170:============================================>        (95 + 18) / 113][Stage 170:==================================================>  (107 + 6) / 113][Stage 170:====================================================>(112 + 1) / 113]                                                                                [Stage 171:====================================>                (79 + 35) / 114][Stage 171:========================================>            (88 + 26) / 114][Stage 171:===========================================>         (93 + 21) / 114][Stage 171:==============================================>     (101 + 13) / 114][Stage 171:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 5.721472427 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  pa rtitionIndex = 79  OR  partitionIndex = 80 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398935727 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (60 + 60) / 120][Stage 172:=============================>                       (67 + 53) / 120][Stage 172:======================================>              (87 + 33) / 120][Stage 172:==============================================>     (107 + 13) / 120][Stage 172:====================================================>(119 + 1) / 120]                                                                                [Stage 173:==========================>                          (61 + 60) / 121][Stage 173:=============================>                       (68 + 53) / 121][Stage 173:=======================================>             (90 + 31) / 121][Stage 173:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.046868444 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR   partitionIndex = 195  OR  partitionIndex = 196 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404731122 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (60 + 61) / 121][Stage 174:==============================>                      (69 + 52) / 121][Stage 174:=====================================>               (86 + 35) / 121][Stage 174:============================================>       (104 + 17) / 121][Stage 174:====================================================>(119 + 2) / 121]                                                                                [Stage 175:==========================>                          (61 + 61) / 122][Stage 175:===============================>                     (72 + 50) / 122][Stage 175:=====================================>               (86 + 36) / 122][Stage 175:===============================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.087775367 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 164  OR   partitionIndex = 177  OR  partitionIndex = 178 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 177  OR  partitionIndex = 178 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332595248 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=====================================>               (82 + 33) / 115][Stage 176:=======================================>             (85 + 30) / 115][Stage 176:===========================================>         (95 + 20) / 115][Stage 176:================================================>    (106 + 9) / 115]                                                                                [Stage 177:=====================================>               (83 + 33) / 116][Stage 177:===========================================>         (95 + 21) / 116][Stage 177:===============================================>    (106 + 10) / 116][Stage 177:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.657231192 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  pa rtitionIndex = 42  OR  partitionIndex = 43 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33331727 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:======================================>              (84 + 31) / 115][Stage 178:=========================================>           (89 + 26) / 115][Stage 178:==============================================>     (103 + 12) / 115][Stage 178:===================================================> (112 + 3) / 115]                                                                                [Stage 179:=====================================>               (83 + 33) / 116][Stage 179:==========================================>          (92 + 24) / 116][Stage 179:=============================================>      (102 + 14) / 116][Stage 179:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.838849678 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  pa rtitionIndex = 87  OR  partitionIndex = 88 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466789764 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (59 + 54) / 113][Stage 180:=================================>                   (71 + 42) / 113][Stage 180:========================================>            (87 + 26) / 113][Stage 180:==============================================>     (101 + 12) / 113][Stage 180:====================================================>(111 + 2) / 113]                                                                                [Stage 181:===========================>                         (60 + 54) / 114][Stage 181:================================>                    (70 + 44) / 114][Stage 181:===========================================>         (94 + 20) / 114][Stage 181:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.340358681 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR   partitionIndex = 202  OR  partitionIndex = 214 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425299713 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (58 + 55) / 113][Stage 182:=============================>                       (63 + 50) / 113][Stage 182:=====================================>               (80 + 33) / 113][Stage 182:==============================================>     (102 + 11) / 113][Stage 182:===================================================> (110 + 3) / 113]                                                                                [Stage 183:============================>                        (61 + 53) / 114][Stage 183:==================================>                  (74 + 40) / 114][Stage 183:==========================================>          (92 + 22) / 114][Stage 183:=================================================>   (107 + 7) / 114][Stage 183:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.428836909 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  pa rtitionIndex = 27  OR  partitionIndex = 56 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 56 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407772106 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==============================>                      (67 + 48) / 115][Stage 184:====================================>                (80 + 35) / 115][Stage 184:============================================>        (96 + 19) / 115][Stage 184:==================================================>  (109 + 6) / 115]                                                                                [Stage 185:==================================>                  (75 + 41) / 116][Stage 185:========================================>            (88 + 28) / 116][Stage 185:=============================================>      (102 + 14) / 116][Stage 185:================================================>    (107 + 9) / 116][Stage 185:===================================================> (113 + 3) / 116][Stage 185:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.221359729 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  pa rtitionIndex = 113  OR  partitionIndex = 114 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42507781 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===================================>                 (75 + 38) / 113][Stage 186:======================================>              (83 + 30) / 113][Stage 186:==========================================>          (91 + 22) / 113][Stage 186:==============================================>     (101 + 12) / 113][Stage 186:==================================================>  (108 + 5) / 113]                                                                                [Stage 187:======================================>              (83 + 31) / 114][Stage 187:==========================================>          (92 + 22) / 114][Stage 187:==============================================>     (101 + 13) / 114][Stage 187:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.082250232 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51  OR  pa rtitionIndex = 52  OR  partitionIndex = 60 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359078334 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===================================>                 (76 + 37) / 113][Stage 188:========================================>            (87 + 26) / 113][Stage 188:===========================================>         (93 + 20) / 113][Stage 188:==================================================>  (107 + 6) / 113][Stage 188:===================================================> (110 + 3) / 113]                                                                                [Stage 189:===================================>                 (77 + 37) / 114][Stage 189:=======================================>             (86 + 28) / 114][Stage 189:============================================>        (96 + 18) / 114][Stage 189:=================================================>   (107 + 7) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.509072854 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  pa rtitionIndex = 106  OR  partitionIndex = 107 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 106  OR  partitionIndex = 107 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400581663 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (61 + 59) / 120][Stage 190:==============================>                      (69 + 51) / 120][Stage 190:=====================================>               (86 + 34) / 120][Stage 190:=============================================>      (105 + 15) / 120][Stage 190:====================================================>(118 + 2) / 120]                                                                                [Stage 191:============================>                        (64 + 57) / 121][Stage 191:==================================>                  (78 + 43) / 121][Stage 191:=============================================>      (106 + 15) / 121][Stage 191:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.476239803 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195  OR   partitionIndex = 207  OR  partitionIndex = 208 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 207  OR  partitionIndex = 208 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369198619 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===============================>                     (68 + 47) / 115][Stage 192:==================================>                  (75 + 40) / 115][Stage 192:======================================>              (84 + 31) / 115][Stage 192:=================================================>   (107 + 8) / 115][Stage 192:====================================================>(114 + 1) / 115]                                                                                [Stage 193:=================================>                   (74 + 42) / 116][Stage 193:=======================================>             (86 + 30) / 116][Stage 193:=============================================>      (102 + 14) / 116][Stage 193:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.712339271 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR   partitionIndex = 180  OR  partitionIndex = 181 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.492844127 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (61 + 59) / 120][Stage 194:================================>                    (74 + 46) / 120][Stage 194:===========================================>         (98 + 22) / 120][Stage 194:====================================================>(119 + 1) / 120]                                                                                [Stage 195:==========================>                          (61 + 60) / 121][Stage 195:=============================>                       (67 + 54) / 121][Stage 195:=================================>                   (77 + 44) / 121][Stage 195:===========================================>        (101 + 20) / 121]                                                                                Time elapsed: 3.116354076 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  pa rtitionIndex = 87  OR  partitionIndex = 88 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 87  OR  partitionIndex = 88 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392471559 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==============================>                      (67 + 48) / 115][Stage 196:===================================>                 (77 + 38) / 115][Stage 196:=============================================>       (99 + 16) / 115][Stage 196:==================================================>  (110 + 5) / 115]                                                                                [Stage 197:=================================>                   (74 + 42) / 116][Stage 197:=======================================>             (86 + 30) / 116][Stage 197:=============================================>      (102 + 14) / 116][Stage 197:=================================================>   (109 + 7) / 116][Stage 197:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.99543485 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159  OR  partitionIndex = 160  OR   partitionIndex = 173  OR  partitionIndex = 174 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371825744 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:====================================>                (78 + 35) / 113][Stage 198:==========================================>          (90 + 23) / 113][Stage 198:==============================================>     (100 + 13) / 113][Stage 198:=================================================>   (106 + 7) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:==================================>                  (75 + 39) / 114][Stage 199:==========================================>          (91 + 23) / 114][Stage 199:============================================>        (96 + 18) / 114][Stage 199:==================================================>  (109 + 5) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.216962091 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR   partitionIndex = 215  OR  partitionIndex = 229 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394091982 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 61) / 121][Stage 200:============================>                        (66 + 55) / 121][Stage 200:===================================>                 (82 + 39) / 121][Stage 200:===============================================>    (110 + 11) / 121][Stage 200:====================================================>(119 + 2) / 121]                                                                                [Stage 201:==========================>                          (61 + 61) / 122][Stage 201:=============================>                       (67 + 55) / 122][Stage 201:==================================>                  (80 + 42) / 122][Stage 201:==========================================>         (100 + 22) / 122][Stage 201:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.265809593 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/24 17:51:00 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.2:56018) dropped. RpcEnv already stopped.
17/05/24 17:51:00 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.34:58458) dropped. RpcEnv already stopped.
17/05/24 17:51:00 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.2:56018) dropped. RpcEnv already stopped.
17/05/24 17:51:00 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.34:58458) dropped. RpcEnv already stopped.

real	10m33.755s
user	11m57.136s
sys	1m1.284s
