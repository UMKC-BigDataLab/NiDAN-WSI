Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 22:16:29 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 22:16:43 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 22:16:43 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 22:16:44 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 22:16:46 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 22:16:57 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524221646-0601).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 4.317767559 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:========================>                              (52 + 63) / 115][Stage 0:===========================>                           (57 + 58) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:========================================>              (85 + 30) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:====================================================>  (109 + 6) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:=========================>                             (53 + 63) / 116][Stage 1:=============================>                         (62 + 54) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:==================================>                    (72 + 44) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:==========================================>            (89 + 27) / 116][Stage 1:==============================================>        (98 + 18) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:====================================================>  (111 + 5) / 116][Stage 1:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 12.585442019 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  O R  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 105  OR  p artitionIndex = 106 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 105  OR  partitionIndex = 106 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.682640136 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 2:====================>                                  (43 + 75) / 118][Stage 2:==========================>                            (56 + 62) / 118][Stage 2:============================>                          (62 + 56) / 118][Stage 2:===============================>                       (68 + 50) / 118][Stage 2:===================================>                   (77 + 41) / 118][Stage 2:=======================================>               (84 + 34) / 118][Stage 2:==========================================>            (92 + 26) / 118][Stage 2:==============================================>       (102 + 16) / 118][Stage 2:======================================================>(117 + 1) / 118]                                                                                [Stage 3:=================================>                     (73 + 46) / 119][Stage 3:===================================>                   (76 + 43) / 119][Stage 3:====================================>                  (80 + 39) / 119][Stage 3:======================================>                (84 + 35) / 119][Stage 3:=========================================>             (89 + 30) / 119][Stage 3:==========================================>            (93 + 26) / 119][Stage 3:===============================================>      (104 + 15) / 119][Stage 3:================================================>     (107 + 12) / 119]                                                                                Time elapsed: 7.245313594 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  O R  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  pa rtitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.695445427 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==============================>                        (63 + 52) / 115][Stage 4:================================>                      (67 + 48) / 115][Stage 4:==================================>                    (72 + 43) / 115][Stage 4:======================================>                (80 + 35) / 115][Stage 4:=============================================>         (95 + 20) / 115][Stage 4:===================================================>   (107 + 8) / 115][Stage 4:=====================================================> (112 + 3) / 115][Stage 4:======================================================>(113 + 2) / 115]                                                                                [Stage 5:==============================>                        (64 + 52) / 116][Stage 5:==================================>                    (72 + 44) / 116][Stage 5:=====================================>                 (79 + 37) / 116][Stage 5:==========================================>            (89 + 27) / 116][Stage 5:==============================================>        (98 + 18) / 116][Stage 5:===================================================>   (109 + 7) / 116][Stage 5:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.890450382 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  O R  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  pa rtitionIndex = 60 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.650333103 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=============================>                         (62 + 53) / 115][Stage 6:=================================>                     (70 + 45) / 115][Stage 6:====================================>                  (76 + 39) / 115][Stage 6:========================================>              (84 + 31) / 115][Stage 6:==========================================>            (88 + 27) / 115][Stage 6:==============================================>        (98 + 17) / 115][Stage 6:==================================================>    (106 + 9) / 115][Stage 6:====================================================>  (109 + 6) / 115][Stage 6:======================================================>(114 + 1) / 115]                                                                                [Stage 7:==============================>                        (65 + 51) / 116][Stage 7:=================================>                     (71 + 45) / 116][Stage 7:====================================>                  (77 + 39) / 116][Stage 7:=====================================>                 (80 + 36) / 116][Stage 7:=========================================>             (87 + 29) / 116][Stage 7:=============================================>         (97 + 19) / 116][Stage 7:===============================================>      (101 + 15) / 116][Stage 7:=================================================>    (106 + 10) / 116][Stage 7:====================================================>  (111 + 5) / 116][Stage 7:=====================================================> (113 + 3) / 116][Stage 7:======================================================>(114 + 2) / 116][Stage 7:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 9.756590767 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  O R  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  pa rtitionIndex = 90 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.563151727 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==============================>                        (62 + 51) / 113][Stage 8:=================================>                     (68 + 45) / 113][Stage 8:========================================>              (83 + 30) / 113][Stage 8:==========================================>            (88 + 25) / 113][Stage 8:============================================>          (92 + 21) / 113][Stage 8:===============================================>       (97 + 16) / 113][Stage 8:===================================================>   (106 + 7) / 113][Stage 8:======================================================>(112 + 1) / 113]                                                                                [Stage 9:==================================>                    (71 + 43) / 114][Stage 9:========================================>              (83 + 31) / 114][Stage 9:=========================================>             (86 + 28) / 114][Stage 9:============================================>          (93 + 21) / 114][Stage 9:==============================================>        (97 + 17) / 114][Stage 9:==================================================>    (105 + 9) / 114][Stage 9:====================================================>  (109 + 5) / 114][Stage 9:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.660716414 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  2  OR  partitionIndex = 3  OR  partitionIndex = 15  OR  partitionIndex = 16  OR   partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  part itionIndex = 31 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.548213927 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=============================>                        (63 + 52) / 115][Stage 10:===============================>                      (67 + 48) / 115][Stage 10:==================================>                   (74 + 41) / 115][Stage 10:======================================>               (83 + 32) / 115][Stage 10:=========================================>            (88 + 27) / 115][Stage 10:==============================================>      (100 + 15) / 115][Stage 10:==================================================>   (108 + 7) / 115][Stage 10:=====================================================>(113 + 2) / 115]                                                                                [Stage 11:===============================>                      (67 + 49) / 116][Stage 11:===================================>                  (76 + 40) / 116][Stage 11:======================================>               (83 + 33) / 116][Stage 11:========================================>             (88 + 28) / 116][Stage 11:==========================================>           (91 + 25) / 116][Stage 11:==================================================>   (109 + 7) / 116][Stage 11:====================================================> (113 + 3) / 116][Stage 11:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 9.575290577 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  132  OR  partitionIndex = 133  OR  partitionIndex = 160  OR  partitionIndex = 16 1  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175   OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.537694924 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 12:================================>                     (69 + 44) / 113][Stage 12:=====================================>                (79 + 34) / 113][Stage 12:=========================================>            (87 + 26) / 113][Stage 12:===========================================>          (92 + 21) / 113][Stage 12:===============================================>      (99 + 14) / 113][Stage 12:==================================================>   (106 + 7) / 113][Stage 12:=====================================================>(111 + 2) / 113]                                                                                [Stage 13:================================>                     (69 + 45) / 114][Stage 13:====================================>                 (78 + 36) / 114][Stage 13:==========================================>           (89 + 25) / 114][Stage 13:==============================================>      (100 + 14) / 114][Stage 13:=================================================>    (105 + 9) / 114][Stage 13:==================================================>   (107 + 7) / 114][Stage 13:===================================================>  (109 + 5) / 114][Stage 13:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.114512886 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 14 7  OR  partitionIndex = 148  OR  partitionIndex = 161  OR  partitionIndex = 175   OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.464651966 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 14:=====================================>                (80 + 35) / 115][Stage 14:=========================================>            (88 + 27) / 115][Stage 14:==============================================>       (98 + 17) / 115][Stage 14:==============================================>      (101 + 14) / 115][Stage 14:===============================================>     (103 + 12) / 115][Stage 14:==================================================>   (108 + 7) / 115][Stage 14:====================================================> (112 + 3) / 115][Stage 14:=====================================================>(114 + 1) / 115]                                                                                [Stage 15:=======================================>              (84 + 32) / 116][Stage 15:===========================================>          (94 + 22) / 116][Stage 15:=================================================>    (107 + 9) / 116][Stage 15:===================================================>  (111 + 5) / 116][Stage 15:====================================================> (112 + 4) / 116][Stage 15:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.948128389 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  O R  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  pa rtitionIndex = 59 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.442370733 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=====================================>                (79 + 36) / 115][Stage 16:=======================================>              (85 + 30) / 115][Stage 16:===========================================>          (93 + 22) / 115][Stage 16:===============================================>     (104 + 11) / 115][Stage 16:====================================================> (112 + 3) / 115]                                                                                [Stage 17:=====================================>                (81 + 35) / 116][Stage 17:========================================>             (88 + 28) / 116][Stage 17:=============================================>        (97 + 19) / 116][Stage 17:===============================================>     (104 + 12) / 116][Stage 17:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 6.632564268 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 14 3  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 146   OR  partitionIndex = 158 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.465044031 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 18:======================================>               (81 + 34) / 115][Stage 18:=======================================>              (84 + 31) / 115][Stage 18:============================================>         (94 + 21) / 115][Stage 18:===============================================>     (102 + 13) / 115][Stage 18:==================================================>   (108 + 7) / 115][Stage 18:=====================================================>(113 + 2) / 115]                                                                                [Stage 19:=====================================>                (81 + 35) / 116][Stage 19:======================================>               (83 + 33) / 116][Stage 19:=============================================>        (98 + 18) / 116][Stage 19:==================================================>   (109 + 7) / 116][Stage 19:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.550866087 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  O R  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  pa rtitionIndex = 76 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.445762595 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==================================>                   (72 + 41) / 113][Stage 20:=========================================>            (86 + 27) / 113][Stage 20:============================================>         (93 + 20) / 113][Stage 20:==================================================>   (105 + 8) / 113][Stage 20:=====================================================>(111 + 2) / 113]                                                                                [Stage 21:=======================================>              (83 + 31) / 114][Stage 21:===========================================>          (91 + 23) / 114][Stage 21:=============================================>        (97 + 17) / 114][Stage 21:==================================================>   (107 + 7) / 114][Stage 21:====================================================> (111 + 3) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.273870512 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 100   OR  partitionIndex = 101  OR  partitionIndex = 114  OR  partitionIndex = 115  OR   partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 114  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.472230209 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 22:================================>                     (68 + 45) / 113][Stage 22:====================================>                 (77 + 36) / 113][Stage 22:=========================================>            (87 + 26) / 113][Stage 22:=============================================>        (96 + 17) / 113][Stage 22:==============================================>      (100 + 13) / 113][Stage 22:==================================================>   (105 + 8) / 113][Stage 22:===================================================>  (107 + 6) / 113][Stage 22:====================================================> (109 + 4) / 113]                                                                                [Stage 23:====================================>                 (78 + 36) / 114][Stage 23:========================================>             (86 + 28) / 114][Stage 23:=============================================>        (97 + 17) / 114][Stage 23:==============================================>      (101 + 13) / 114][Stage 23:====================================================> (110 + 4) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.052589979 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 20 3  OR  partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 206   OR  partitionIndex = 218 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.505095536 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==============================>                       (66 + 49) / 115][Stage 24:=====================================>                (79 + 36) / 115][Stage 24:=============================================>        (97 + 18) / 115][Stage 24:==============================================>      (101 + 14) / 115][Stage 24:====================================================> (111 + 4) / 115][Stage 24:====================================================> (112 + 3) / 115][Stage 24:=====================================================>(114 + 1) / 115]                                                                                [Stage 25:=================================>                    (71 + 45) / 116][Stage 25:==========================================>           (91 + 25) / 116][Stage 25:===================================================>  (110 + 6) / 116][Stage 25:====================================================> (113 + 3) / 116][Stage 25:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.165973396 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 18 0  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203   OR  partitionIndex = 204 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.495284828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 26:==========================>                           (56 + 57) / 113][Stage 26:=============================>                        (61 + 52) / 113][Stage 26:===============================>                      (66 + 47) / 113][Stage 26:=====================================>                (79 + 34) / 113][Stage 26:===============================================>     (101 + 12) / 113][Stage 26:==================================================>   (106 + 7) / 113][Stage 26:===================================================>  (107 + 6) / 113][Stage 26:=====================================================>(111 + 2) / 113]                                                                                [Stage 27:============================>                         (61 + 53) / 114][Stage 27:================================>                     (69 + 45) / 114][Stage 27:======================================>               (82 + 32) / 114][Stage 27:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 4.592211019 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  p artitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partit ionIndex = 22 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.507343098 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (60 + 60) / 120][Stage 28:=============================>                        (65 + 55) / 120][Stage 28:====================================>                 (80 + 40) / 120][Stage 28:============================================>        (100 + 20) / 120][Stage 28:====================================================> (117 + 3) / 120]                                                                                [Stage 29:===========================>                          (62 + 59) / 121][Stage 29:===============================>                      (70 + 51) / 121][Stage 29:=====================================>                (83 + 38) / 121][Stage 29:============================================>        (101 + 20) / 121][Stage 29:==================================================>   (114 + 7) / 121][Stage 29:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.299346114 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  1  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 15  OR   partitionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  parti tionIndex = 30 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.452332919 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===================================>                  (75 + 38) / 113][Stage 30:=========================================>            (87 + 26) / 113][Stage 30:==============================================>       (98 + 15) / 113][Stage 30:===================================================>  (107 + 6) / 113][Stage 30:=====================================================>(111 + 2) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:=====================================>                (79 + 35) / 114][Stage 31:=========================================>            (88 + 26) / 114][Stage 31:============================================>         (94 + 20) / 114][Stage 31:=============================================>        (96 + 18) / 114][Stage 31:===============================================>     (102 + 12) / 114][Stage 31:=================================================>    (105 + 9) / 114][Stage 31:===================================================>  (109 + 5) / 114][Stage 31:=====================================================>(112 + 2) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 9.168624359 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 20 8  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235   OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.424500872 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 32:=====================================>                (80 + 35) / 115][Stage 32:=========================================>            (88 + 27) / 115][Stage 32:==============================================>      (101 + 14) / 115][Stage 32:===================================================>  (109 + 6) / 115][Stage 32:=====================================================>(114 + 1) / 115]                                                                                [Stage 33:======================================>               (82 + 34) / 116][Stage 33:============================================>         (95 + 21) / 116][Stage 33:===================================================>  (110 + 6) / 116][Stage 33:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.895757907 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103   OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  O R  partitionIndex = 118 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.450739486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=======================================>              (84 + 31) / 115][Stage 34:=========================================>            (88 + 27) / 115][Stage 34:=============================================>        (97 + 18) / 115][Stage 34:===================================================>  (109 + 6) / 115][Stage 34:====================================================> (111 + 4) / 115][Stage 34:=====================================================>(113 + 2) / 115]                                                                                [Stage 35:=======================================>              (84 + 32) / 116][Stage 35:===========================================>          (94 + 22) / 116][Stage 35:==================================================>   (109 + 7) / 116][Stage 35:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.41731419 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 12 2  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136   OR  partitionIndex = 137 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.44854401 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 36:================================>                     (72 + 46) / 118][Stage 36:=================================>                    (74 + 44) / 118][Stage 36:======================================>               (84 + 34) / 118][Stage 36:==========================================>           (93 + 25) / 118][Stage 36:===================================================>  (112 + 6) / 118]                                                                                [Stage 37:==================================>                   (75 + 44) / 119][Stage 37:======================================>               (85 + 34) / 119][Stage 37:============================================>         (97 + 22) / 119][Stage 37:===================================================>  (113 + 6) / 119][Stage 37:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 6.047187977 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  72  OR  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 101   OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 115  O R  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.422966419 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 38:=====================================>                (80 + 35) / 115][Stage 38:=======================================>              (85 + 30) / 115][Stage 38:=========================================>            (88 + 27) / 115][Stage 38:==============================================>      (101 + 14) / 115][Stage 38:================================================>    (105 + 10) / 115][Stage 38:=====================================================>(114 + 1) / 115]                                                                                [Stage 39:=======================================>              (84 + 32) / 116][Stage 39:=========================================>            (89 + 27) / 116][Stage 39:=============================================>        (98 + 18) / 116][Stage 39:=================================================>    (107 + 9) / 116][Stage 39:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.456565143 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 15 1  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165   OR  partitionIndex = 166 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.468130654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 40:================================>                     (72 + 46) / 118][Stage 40:==================================>                   (76 + 42) / 118][Stage 40:=========================================>            (91 + 27) / 118][Stage 40:====================================================> (115 + 3) / 118]                                                                                [Stage 41:=================================>                    (74 + 45) / 119][Stage 41:=======================================>              (87 + 32) / 119][Stage 41:=============================================>       (103 + 16) / 119][Stage 41:==================================================>   (112 + 7) / 119][Stage 41:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.088301963 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 22 1  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235   OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.501121281 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (60 + 60) / 120][Stage 42:===========================>                          (61 + 59) / 120][Stage 42:==============================>                       (67 + 53) / 120][Stage 42:=======================================>              (88 + 32) / 120][Stage 42:==============================================>      (105 + 15) / 120][Stage 42:===================================================>  (114 + 6) / 120]                                                                                [Stage 43:===========================>                          (61 + 60) / 121][Stage 43:===============================>                      (70 + 51) / 121][Stage 43:========================================>             (91 + 30) / 121][Stage 43:=================================================>    (112 + 9) / 121][Stage 43:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.831164627 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 96  O R  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110  OR   partitionIndex = 111 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.493892551 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 44:==========================>                           (60 + 61) / 121][Stage 44:=============================>                        (65 + 56) / 121][Stage 44:=====================================>                (84 + 37) / 121][Stage 44:=================================================>    (112 + 9) / 121]                                                                                [Stage 45:===========================>                          (61 + 61) / 122][Stage 45:===============================>                      (72 + 50) / 122][Stage 45:======================================>               (86 + 36) / 122][Stage 45:=============================================>       (104 + 18) / 122][Stage 45:===================================================>  (116 + 6) / 122][Stage 45:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.337398405 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  192  OR  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 19 5  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 209   OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 209  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.456847912 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==============================>                       (65 + 50) / 115][Stage 46:==================================>                   (74 + 41) / 115][Stage 46:============================================>         (95 + 20) / 115][Stage 46:==================================================>   (107 + 8) / 115][Stage 46:=====================================================>(113 + 2) / 115]                                                                                [Stage 47:===============================>                      (68 + 48) / 116][Stage 47:======================================>               (82 + 34) / 116][Stage 47:==============================================>      (102 + 14) / 116][Stage 47:===================================================>  (110 + 6) / 116][Stage 47:===================================================>  (111 + 5) / 116][Stage 47:====================================================> (112 + 4) / 116][Stage 47:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.299115245 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 21 0  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 225   OR  partitionIndex = 226 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 225  OR  partitionIndex = 226 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.417835894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 48:====================================>                 (76 + 37) / 113][Stage 48:=========================================>            (86 + 27) / 113][Stage 48:==============================================>       (98 + 15) / 113][Stage 48:==================================================>   (105 + 8) / 113][Stage 48:====================================================> (109 + 4) / 113][Stage 48:=====================================================>(112 + 1) / 113]                                                                                [Stage 49:======================================>               (81 + 33) / 114][Stage 49:============================================>         (93 + 21) / 114][Stage 49:==============================================>      (101 + 13) / 114][Stage 49:====================================================> (110 + 4) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.629633021 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 14 0  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167   OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.455458197 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (62 + 58) / 120][Stage 50:==============================>                       (67 + 53) / 120][Stage 50:======================================>               (85 + 35) / 120][Stage 50:================================================>    (109 + 11) / 120][Stage 50:=====================================================>(119 + 1) / 120]                                                                                [Stage 51:===========================>                          (61 + 60) / 121][Stage 51:==============================>                       (68 + 53) / 121][Stage 51:======================================>               (86 + 35) / 121][Stage 51:============================================>        (102 + 19) / 121][Stage 51:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.982740839 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  8  OR  partitionIndex = 9  OR  partitionIndex = 96  OR  partitionIndex = 97  OR   partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111  OR  p artitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.41467234 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 52:================================>                     (72 + 46) / 118][Stage 52:===================================>                  (78 + 40) / 118][Stage 52:=========================================>            (91 + 27) / 118][Stage 52:==============================================>      (104 + 14) / 118][Stage 52:===================================================>  (113 + 5) / 118]                                                                                [Stage 53:=================================>                    (73 + 46) / 119][Stage 53:=====================================>                (82 + 37) / 119][Stage 53:==========================================>           (93 + 26) / 119][Stage 53:================================================>    (109 + 10) / 119][Stage 53:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.805013996 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  O R  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  pa rtitionIndex = 61 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.419091317 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 54:======================================>               (83 + 32) / 115][Stage 54:==========================================>           (90 + 25) / 115][Stage 54:================================================>    (105 + 10) / 115]                                                                                [Stage 55:======================================>               (83 + 33) / 116][Stage 55:=========================================>            (89 + 27) / 116][Stage 55:=============================================>       (100 + 16) / 116][Stage 55:=================================================>    (107 + 9) / 116][Stage 55:====================================================> (113 + 3) / 116][Stage 55:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.49537105 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 14 0  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154   OR  partitionIndex = 155 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.406751392 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 56:=================================>                    (71 + 42) / 113][Stage 56:=========================================>            (87 + 26) / 113][Stage 56:============================================>         (94 + 19) / 113][Stage 56:===============================================>     (102 + 11) / 113][Stage 56:=====================================================>(111 + 2) / 113][Stage 56:=====================================================>(112 + 1) / 113]                                                                                [Stage 57:==================================>                   (73 + 41) / 114][Stage 57:========================================>             (85 + 29) / 114][Stage 57:=============================================>        (97 + 17) / 114][Stage 57:================================================>    (104 + 10) / 114][Stage 57:====================================================> (110 + 4) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.415633323 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 16 0  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174   OR  partitionIndex = 175 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.462958278 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==========================>                           (60 + 61) / 121][Stage 58:===========================>                          (62 + 59) / 121][Stage 58:===============================>                      (70 + 51) / 121][Stage 58:=========================================>            (94 + 27) / 121][Stage 58:=====================================================>(119 + 2) / 121]                                                                                [Stage 59:===========================>                          (61 + 61) / 122][Stage 59:=============================>                        (67 + 55) / 122][Stage 59:===================================>                  (81 + 41) / 122][Stage 59:==========================================>           (95 + 27) / 122][Stage 59:==================================================>   (113 + 9) / 122][Stage 59:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.931580423 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 21 3  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 227   OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.427390475 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 60:================================>                     (72 + 46) / 118][Stage 60:===================================>                  (77 + 41) / 118][Stage 60:========================================>             (89 + 29) / 118][Stage 60:==================================================>   (110 + 8) / 118][Stage 60:=====================================================>(116 + 2) / 118]                                                                                [Stage 61:=================================>                    (73 + 46) / 119][Stage 61:=====================================>                (82 + 37) / 119][Stage 61:=============================================>       (103 + 16) / 119][Stage 61:================================================>    (109 + 10) / 119][Stage 61:=====================================================>(117 + 2) / 119][Stage 61:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.888800161 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 17 8  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188   OR  partitionIndex = 189 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.49433031 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (60 + 60) / 120][Stage 62:=================================>                    (75 + 45) / 120][Stage 62:============================================>        (101 + 19) / 120][Stage 62:====================================================> (116 + 4) / 120]                                                                                [Stage 63:===========================>                          (62 + 59) / 121][Stage 63:===============================>                      (70 + 51) / 121][Stage 63:=========================================>            (92 + 29) / 121][Stage 63:===================================================>  (116 + 5) / 121][Stage 63:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.017613611 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  12  OR  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 41  O R  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 55  OR  pa rtitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 55  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.451784775 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==========================>                           (60 + 61) / 121][Stage 64:===============================>                      (70 + 51) / 121][Stage 64:=======================================>              (88 + 33) / 121][Stage 64:=================================================>    (112 + 9) / 121]                                                                                [Stage 65:===========================>                          (63 + 59) / 122][Stage 65:==================================>                   (79 + 43) / 122][Stage 65:=========================================>            (94 + 28) / 122][Stage 65:==============================================>      (107 + 15) / 122][Stage 65:====================================================> (119 + 3) / 122][Stage 65:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.125936862 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  62  OR  partitionIndex = 63  OR  partitionIndex = 76  OR  partitionIndex = 77  O R  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  pa rtitionIndex = 105 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.378261729 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 66:======================================>               (81 + 34) / 115][Stage 66:========================================>             (86 + 29) / 115][Stage 66:==============================================>       (98 + 17) / 115][Stage 66:===================================================>  (109 + 6) / 115][Stage 66:====================================================> (112 + 3) / 115][Stage 66:=====================================================>(113 + 2) / 115]                                                                                [Stage 67:=====================================>                (81 + 35) / 116][Stage 67:========================================>             (88 + 28) / 116][Stage 67:==============================================>       (99 + 17) / 116][Stage 67:===================================================>  (111 + 5) / 116][Stage 67:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.190328676 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  O R  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  pa rtitionIndex = 46 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.452420058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (61 + 60) / 121][Stage 68:=================================>                    (76 + 45) / 121][Stage 68:============================================>         (99 + 22) / 121][Stage 68:==================================================>   (114 + 7) / 121]                                                                                [Stage 69:===========================>                          (63 + 59) / 122][Stage 69:=================================>                    (75 + 47) / 122][Stage 69:==========================================>           (97 + 25) / 122][Stage 69:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.389754914 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  O R  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  pa rtitionIndex = 60 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.404322686 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 70:================================>                     (72 + 46) / 118][Stage 70:=================================>                    (73 + 45) / 118][Stage 70:======================================>               (84 + 34) / 118][Stage 70:==========================================>           (93 + 25) / 118][Stage 70:====================================================> (114 + 4) / 118][Stage 70:=====================================================>(117 + 1) / 118]                                                                                [Stage 71:=================================>                    (73 + 46) / 119][Stage 71:==================================>                   (76 + 43) / 119][Stage 71:=======================================>              (88 + 31) / 119][Stage 71:============================================>        (101 + 18) / 119][Stage 71:================================================>    (109 + 10) / 119][Stage 71:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.713597373 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 19  OR   partitionIndex = 20  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  parti tionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.404028628 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 72:=================================>                    (72 + 43) / 115][Stage 72:========================================>             (86 + 29) / 115][Stage 72:==============================================>      (101 + 14) / 115][Stage 72:===================================================>  (109 + 6) / 115][Stage 72:====================================================> (111 + 4) / 115]                                                                                [Stage 73:====================================>                 (79 + 37) / 116][Stage 73:==========================================>           (91 + 25) / 116][Stage 73:=============================================>        (98 + 18) / 116][Stage 73:===============================================>     (104 + 12) / 116][Stage 73:===================================================>  (110 + 6) / 116][Stage 73:====================================================> (112 + 4) / 116][Stage 73:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.563915032 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  12  OR  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 15  O R  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  pa rtitionIndex = 30 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402908692 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 74:================================>                     (72 + 46) / 118][Stage 74:=================================>                    (74 + 44) / 118][Stage 74:========================================>             (88 + 30) / 118][Stage 74:==============================================>      (103 + 15) / 118][Stage 74:=====================================================>(116 + 2) / 118]                                                                                [Stage 75:==================================>                   (76 + 43) / 119][Stage 75:=======================================>              (88 + 31) / 119][Stage 75:============================================>         (98 + 21) / 119][Stage 75:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.687122357 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 87  O R  partitionIndex = 88  OR  partitionIndex = 101  OR  partitionIndex = 115  OR   partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.394630802 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 76:=======================================>              (83 + 30) / 113][Stage 76:===========================================>          (90 + 23) / 113][Stage 76:===============================================>      (99 + 14) / 113][Stage 76:===================================================>  (108 + 5) / 113]                                                                                [Stage 77:==================================>                   (73 + 41) / 114][Stage 77:========================================>             (86 + 28) / 114][Stage 77:=============================================>        (96 + 18) / 114][Stage 77:==================================================>   (107 + 7) / 114][Stage 77:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.024888525 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  O R  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  pa rtitionIndex = 69 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.430090169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===================================>                  (76 + 39) / 115][Stage 78:=======================================>              (85 + 30) / 115][Stage 78:============================================>         (94 + 21) / 115][Stage 78:====================================================> (111 + 4) / 115]                                                                                [Stage 79:==================================>                   (74 + 42) / 116][Stage 79:=========================================>            (90 + 26) / 116][Stage 79:===============================================>     (103 + 13) / 116][Stage 79:===================================================>  (110 + 6) / 116][Stage 79:====================================================> (112 + 4) / 116][Stage 79:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.032739672 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  162  OR  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 16 5  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179   OR  partitionIndex = 180 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179  OR  partitionIndex = 180 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.416528845 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 80:==========================>                           (60 + 61) / 121][Stage 80:===========================>                          (62 + 59) / 121][Stage 80:====================================>                 (82 + 39) / 121][Stage 80:=============================================>       (103 + 18) / 121][Stage 80:====================================================> (118 + 3) / 121][Stage 80:======================================================(121 + 0) / 121]                                                                                [Stage 81:===========================>                          (61 + 61) / 122][Stage 81:=============================>                        (67 + 55) / 122][Stage 81:=================================>                    (75 + 47) / 122][Stage 81:==========================================>           (96 + 26) / 122][Stage 81:===================================================>  (116 + 6) / 122][Stage 81:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.208378473 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  14  OR  partitionIndex = 15  OR  partitionIndex = 28  OR  partitionIndex = 29  O R  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  pa rtitionIndex = 57 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.405888317 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 82:====================================>                 (77 + 38) / 115][Stage 82:=========================================>            (89 + 26) / 115][Stage 82:===============================================>     (104 + 11) / 115][Stage 82:=====================================================>(113 + 2) / 115]                                                                                [Stage 83:================================>                     (70 + 46) / 116][Stage 83:=====================================>                (80 + 36) / 116][Stage 83:=========================================>            (89 + 27) / 116][Stage 83:===============================================>     (103 + 13) / 116][Stage 83:================================================>    (106 + 10) / 116][Stage 83:===================================================>  (110 + 6) / 116][Stage 83:====================================================> (113 + 3) / 116][Stage 83:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 8.811481223 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  98  OR  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 101   OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 115  O R  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.416520509 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (58 + 55) / 113][Stage 84:=============================>                        (62 + 51) / 113][Stage 84:===================================>                  (74 + 39) / 113][Stage 84:============================================>         (93 + 20) / 113][Stage 84:===================================================>  (107 + 6) / 113]                                                                                [Stage 85:============================>                         (61 + 53) / 114][Stage 85:=================================>                    (70 + 44) / 114][Stage 85:=========================================>            (88 + 26) / 114][Stage 85:==============================================>      (101 + 13) / 114][Stage 85:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.444786501 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 18 2  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196   OR  partitionIndex = 197 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.372466752 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 86:=================================>                    (71 + 42) / 113][Stage 86:=======================================>              (82 + 31) / 113][Stage 86:============================================>         (94 + 19) / 113][Stage 86:===============================================>     (101 + 12) / 113][Stage 86:==================================================>   (105 + 8) / 113][Stage 86:====================================================> (110 + 3) / 113][Stage 86:=====================================================>(112 + 1) / 113]                                                                                [Stage 87:=====================================>                (79 + 35) / 114][Stage 87:===========================================>          (91 + 23) / 114][Stage 87:==============================================>       (98 + 16) / 114][Stage 87:==================================================>   (107 + 7) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.527792633 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  4  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR   partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47  OR  par titionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.36588932 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===================================>                  (75 + 38) / 113][Stage 88:=======================================>              (83 + 30) / 113][Stage 88:============================================>         (94 + 19) / 113][Stage 88:================================================>    (103 + 10) / 113][Stage 88:===================================================>  (108 + 5) / 113][Stage 88:=====================================================>(111 + 2) / 113]                                                                                [Stage 89:====================================>                 (77 + 37) / 114][Stage 89:========================================>             (86 + 28) / 114][Stage 89:===========================================>          (92 + 22) / 114][Stage 89:==============================================>       (98 + 16) / 114][Stage 89:===============================================>     (103 + 11) / 114][Stage 89:=================================================>    (105 + 9) / 114][Stage 89:=====================================================>(112 + 2) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 8.13952298 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104   OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118   OR  partitionIndex = 119 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.42222967 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (60 + 53) / 113][Stage 90:===============================>                      (66 + 47) / 113][Stage 90:===========================================>          (90 + 23) / 113][Stage 90:==================================================>   (106 + 7) / 113][Stage 90:=====================================================>(112 + 1) / 113]                                                                                [Stage 91:===========================>                          (59 + 55) / 114][Stage 91:==============================>                       (64 + 50) / 114][Stage 91:====================================>                 (77 + 37) / 114][Stage 91:=============================================>        (96 + 18) / 114][Stage 91:===================================================>  (109 + 5) / 114][Stage 91:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.166211724 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  44  OR  partitionIndex = 45  OR  partitionIndex = 58  OR  partitionIndex = 59  O R  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  pa rtitionIndex = 83 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.423762851 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==========================>                           (60 + 61) / 121][Stage 92:============================>                         (64 + 57) / 121][Stage 92:==================================>                   (77 + 44) / 121][Stage 92:===========================================>          (98 + 23) / 121][Stage 92:====================================================> (118 + 3) / 121]                                                                                [Stage 93:===========================>                          (63 + 59) / 122][Stage 93:================================>                     (73 + 49) / 122][Stage 93:==========================================>           (96 + 26) / 122][Stage 93:===================================================>  (116 + 6) / 122][Stage 93:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.553679383 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  O R  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  p artitionIndex = 106 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.399507374 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===============================>                      (68 + 47) / 115][Stage 94:======================================>               (82 + 33) / 115][Stage 94:==============================================>       (99 + 16) / 115][Stage 94:==================================================>   (108 + 7) / 115][Stage 94:=====================================================>(114 + 1) / 115]                                                                                [Stage 95:===============================>                      (67 + 49) / 116][Stage 95:=======================================>              (85 + 31) / 116][Stage 95:==============================================>       (99 + 17) / 116][Stage 95:===================================================>  (111 + 5) / 116][Stage 95:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.363790929 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  O R  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 115  OR  p artitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.430140168 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 96:==========================>                           (60 + 61) / 121][Stage 96:===========================>                          (62 + 59) / 121][Stage 96:====================================>                 (82 + 39) / 121][Stage 96:===============================================>     (109 + 12) / 121]                                                                                [Stage 97:===========================>                          (61 + 61) / 122][Stage 97:==============================>                       (68 + 54) / 122][Stage 97:======================================>               (87 + 35) / 122][Stage 97:==============================================>      (108 + 14) / 122][Stage 97:==================================================>   (114 + 8) / 122][Stage 97:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.684769874 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  192  OR  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 19 5  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 235   OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.411802867 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 98:==========================>                           (60 + 61) / 121][Stage 98:=============================>                        (65 + 56) / 121][Stage 98:=====================================>                (85 + 36) / 121][Stage 98:==============================================>      (107 + 14) / 121][Stage 98:=====================================================>(119 + 2) / 121]                                                                                [Stage 99:===========================>                          (61 + 61) / 122][Stage 99:===========================>                          (62 + 60) / 122][Stage 99:===============================>                      (71 + 51) / 122][Stage 99:======================================>               (87 + 35) / 122][Stage 99:==============================================>      (108 + 14) / 122][Stage 99:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.72667585 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  O R  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 75  OR  pa rtitionIndex = 76 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 75  OR  partitionIndex = 76 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.395607563 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (58 + 55) / 113][Stage 100:==============================>                      (65 + 48) / 113][Stage 100:======================================>              (82 + 31) / 113][Stage 100:===============================================>    (103 + 10) / 113][Stage 100:===================================================> (109 + 4) / 113]                                                                                [Stage 101:============================>                        (61 + 53) / 114][Stage 101:================================>                    (69 + 45) / 114][Stage 101:========================================>            (88 + 26) / 114][Stage 101:===============================================>    (104 + 10) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.615296884 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  94  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  O R  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111  OR   partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.393438886 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==================================>                  (74 + 41) / 115][Stage 102:=========================================>           (91 + 24) / 115][Stage 102:====================================================>(113 + 2) / 115]                                                                                [Stage 103:================================>                    (71 + 45) / 116][Stage 103:==========================================>          (93 + 23) / 116][Stage 103:===============================================>    (106 + 10) / 116][Stage 103:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.674662962 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  0  OR  partitionIndex = 1  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  p artitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partit ionIndex = 18 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.416190547 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (61 + 60) / 121][Stage 104:===============================>                     (71 + 50) / 121][Stage 104:=========================================>           (94 + 27) / 121][Stage 104:=================================================>   (112 + 9) / 121]                                                                                [Stage 105:==========================>                          (61 + 61) / 122][Stage 105:==============================>                      (70 + 52) / 122][Stage 105:====================================>                (84 + 38) / 122][Stage 105:==============================================>     (109 + 13) / 122][Stage 105:===================================================> (119 + 3) / 122][Stage 105:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.152347651 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  2  OR  partitionIndex = 3  OR  partitionIndex = 16  OR  partitionIndex = 17  OR   partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  part itionIndex = 45 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398057025 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==============================>                      (66 + 49) / 115][Stage 106:=================================>                   (73 + 42) / 115][Stage 106:=======================================>             (85 + 30) / 115][Stage 106:==============================================>     (102 + 13) / 115][Stage 106:=================================================>   (108 + 7) / 115][Stage 106:====================================================>(113 + 2) / 115]                                                                                [Stage 107:================================>                    (71 + 45) / 116][Stage 107:========================================>            (89 + 27) / 116][Stage 107:=============================================>      (102 + 14) / 116][Stage 107:===============================================>    (105 + 11) / 116][Stage 107:=================================================>   (108 + 8) / 116][Stage 107:==================================================>  (111 + 5) / 116][Stage 107:===================================================> (112 + 4) / 116][Stage 107:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 9.277223386 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  104  OR  partitionIndex = 105  OR  partitionIndex = 118  OR  partitionIndex = 11 9  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121   OR  partitionIndex = 135 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.442739569 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (59 + 54) / 113][Stage 108:===============================>                     (67 + 46) / 113][Stage 108:=====================================>               (81 + 32) / 113][Stage 108:==============================================>     (100 + 13) / 113][Stage 108:====================================================>(111 + 2) / 113]                                                                                [Stage 109:===========================>                         (59 + 55) / 114][Stage 109:==============================>                      (65 + 49) / 114][Stage 109:===================================>                 (77 + 37) / 114][Stage 109:=========================================>           (89 + 25) / 114][Stage 109:=================================================>   (106 + 8) / 114][Stage 109:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.744220219 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 16 0  OR  partitionIndex = 161  OR  partitionIndex = 174  OR  partitionIndex = 175   OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.384556402 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===================================>                 (78 + 37) / 115][Stage 110:===========================================>         (95 + 20) / 115][Stage 110:=================================================>   (108 + 7) / 115][Stage 110:===================================================> (111 + 4) / 115]                                                                                [Stage 111:==================================>                  (75 + 41) / 116][Stage 111:========================================>            (88 + 28) / 116][Stage 111:==============================================>     (103 + 13) / 116][Stage 111:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.984700358 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  192  OR  partitionIndex = 193  OR  partitionIndex = 220  OR  partitionIndex = 22 1  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235   OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.41098418 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (60 + 61) / 121][Stage 112:===========================>                         (63 + 58) / 121][Stage 112:================================>                    (75 + 46) / 121][Stage 112:=========================================>           (94 + 27) / 121][Stage 112:===================================================> (117 + 4) / 121]                                                                                [Stage 113:============================>                        (65 + 57) / 122][Stage 113:================================>                    (74 + 48) / 122][Stage 113:=========================================>           (96 + 26) / 122][Stage 113:==================================================>  (117 + 5) / 122][Stage 113:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.805579211 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  184  OR  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 18 7  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 201   OR  partitionIndex = 202 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 202 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.414165299 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==========================>                          (60 + 61) / 121][Stage 114:===========================>                         (62 + 59) / 121][Stage 114:===================================>                 (82 + 39) / 121][Stage 114:============================================>       (104 + 17) / 121][Stage 114:====================================================>(120 + 1) / 121]                                                                                [Stage 115:===========================>                         (64 + 58) / 122][Stage 115:===============================>                     (73 + 49) / 122][Stage 115:========================================>            (93 + 29) / 122][Stage 115:=================================================>   (115 + 7) / 122][Stage 115:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 5.703561217 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 79  O R  partitionIndex = 80  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  p artitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.364821963 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 116:================================>                    (72 + 46) / 118][Stage 116:=================================>                   (74 + 44) / 118][Stage 116:===================================>                 (79 + 39) / 118][Stage 116:=====================================>               (84 + 34) / 118][Stage 116:============================================>        (99 + 19) / 118][Stage 116:===================================================> (115 + 3) / 118][Stage 116:====================================================>(117 + 1) / 118]                                                                                [Stage 117:================================>                    (73 + 46) / 119][Stage 117:=================================>                   (75 + 44) / 119][Stage 117:===================================>                 (80 + 39) / 119][Stage 117:========================================>            (92 + 27) / 119][Stage 117:============================================>       (101 + 18) / 119][Stage 117:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 4.119125173 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  128  OR  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 13 1  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 145   OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.380652131 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (58 + 55) / 113][Stage 118:======================================>              (82 + 31) / 113][Stage 118:=============================================>       (97 + 16) / 113][Stage 118:===================================================> (109 + 4) / 113]                                                                                [Stage 119:===========================>                         (60 + 54) / 114][Stage 119:============================>                        (62 + 52) / 114][Stage 119:=====================================>               (80 + 34) / 114][Stage 119:==============================================>     (102 + 12) / 114][Stage 119:===================================================> (111 + 3) / 114][Stage 119:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.519524866 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  O R  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  pa rtitionIndex = 54 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.390324765 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (58 + 55) / 113][Stage 120:=============================>                       (62 + 51) / 113][Stage 120:=====================================>               (81 + 32) / 113][Stage 120:==============================================>     (100 + 13) / 113][Stage 120:==================================================>  (108 + 5) / 113]                                                                                [Stage 121:===========================>                         (60 + 54) / 114][Stage 121:==================================>                  (74 + 40) / 114][Stage 121:=======================================>             (86 + 28) / 114][Stage 121:===============================================>    (104 + 10) / 114][Stage 121:===================================================> (110 + 4) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.039779256 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 18 3  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197   OR  partitionIndex = 198 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.365768687 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 122:================================>                    (72 + 46) / 118][Stage 122:====================================>                (81 + 37) / 118][Stage 122:==========================================>          (94 + 24) / 118][Stage 122:==============================================>     (106 + 12) / 118]                                                                                [Stage 123:================================>                    (74 + 45) / 119][Stage 123:===================================>                 (79 + 40) / 119][Stage 123:===========================================>         (98 + 21) / 119][Stage 123:===============================================>    (109 + 10) / 119][Stage 123:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 4.563454146 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 40  O R  partitionIndex = 41  OR  partitionIndex = 54  OR  partitionIndex = 55  OR  pa rtitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 54  OR  partitionIndex = 55  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.368838226 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 124:================================>                    (70 + 45) / 115][Stage 124:======================================>              (83 + 32) / 115][Stage 124:===========================================>         (95 + 20) / 115][Stage 124:===============================================>    (105 + 10) / 115][Stage 124:====================================================>(114 + 1) / 115]                                                                                [Stage 125:===============================>                     (69 + 47) / 116][Stage 125:====================================>                (80 + 36) / 116][Stage 125:==========================================>          (93 + 23) / 116][Stage 125:=============================================>      (102 + 14) / 116][Stage 125:==================================================>  (110 + 6) / 116][Stage 125:===================================================> (113 + 3) / 116][Stage 125:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 8.497287517 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 14 6  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173   OR  partitionIndex = 174 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.374191804 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 126:================================>                    (70 + 45) / 115][Stage 126:=======================================>             (86 + 29) / 115][Stage 126:=============================================>       (99 + 16) / 115][Stage 126:==================================================>  (110 + 5) / 115]                                                                                [Stage 127:================================>                    (72 + 44) / 116][Stage 127:==========================================>          (93 + 23) / 116][Stage 127:=================================================>   (108 + 8) / 116][Stage 127:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.805947515 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  O R  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  pa rtitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.362946394 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 128:====================================>                (78 + 35) / 113][Stage 128:=======================================>             (84 + 29) / 113][Stage 128:=============================================>       (97 + 16) / 113][Stage 128:=================================================>   (106 + 7) / 113][Stage 128:====================================================>(112 + 1) / 113]                                                                                [Stage 129:=======================================>             (84 + 30) / 114][Stage 129:=========================================>           (90 + 24) / 114][Stage 129:==============================================>     (101 + 13) / 114][Stage 129:==================================================>  (108 + 6) / 114][Stage 129:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.542905846 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  p artitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partit ionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.394864669 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (58 + 55) / 113][Stage 130:==============================>                      (66 + 47) / 113][Stage 130:=====================================>               (79 + 34) / 113][Stage 130:==============================================>     (102 + 11) / 113][Stage 130:====================================================>(111 + 2) / 113]                                                                                [Stage 131:===========================>                         (60 + 54) / 114][Stage 131:==============================>                      (65 + 49) / 114][Stage 131:====================================>                (78 + 36) / 114][Stage 131:=============================================>       (97 + 17) / 114][Stage 131:==================================================>  (108 + 6) / 114][Stage 131:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.680161251 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  126  OR  partitionIndex = 127  OR  partitionIndex = 140  OR  partitionIndex = 14 1  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155   OR  partitionIndex = 169 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.37252049 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 132:================================>                    (73 + 45) / 118][Stage 132:===================================>                 (78 + 40) / 118][Stage 132:========================================>            (91 + 27) / 118][Stage 132:=============================================>      (104 + 14) / 118][Stage 132:====================================================>(116 + 2) / 118]                                                                                [Stage 133:================================>                    (74 + 45) / 119][Stage 133:===================================>                 (79 + 40) / 119][Stage 133:========================================>            (90 + 29) / 119][Stage 133:============================================>       (101 + 18) / 119][Stage 133:===================================================> (115 + 4) / 119][Stage 133:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.605079302 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  O R  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  pa rtitionIndex = 98 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.399741369 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 134:============================>                        (64 + 56) / 120][Stage 134:===============================>                     (71 + 49) / 120][Stage 134:=========================================>           (95 + 25) / 120][Stage 134:=================================================>   (113 + 7) / 120]                                                                                [Stage 135:==========================>                          (61 + 60) / 121][Stage 135:===============================>                     (73 + 48) / 121][Stage 135:=========================================>           (95 + 26) / 121][Stage 135:==================================================>  (115 + 6) / 121][Stage 135:====================================================>(119 + 2) / 121][Stage 135:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.557752508 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  184  OR  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 18 7  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 227   OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.406649185 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 60) / 120][Stage 136:==============================>                      (68 + 52) / 120][Stage 136:=====================================>               (84 + 36) / 120][Stage 136:===========================================>        (101 + 19) / 120][Stage 136:===================================================> (117 + 3) / 120]                                                                                [Stage 137:============================>                        (65 + 56) / 121][Stage 137:================================>                    (75 + 46) / 121][Stage 137:===========================================>         (99 + 22) / 121][Stage 137:==================================================>  (115 + 6) / 121][Stage 137:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.176046442 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  6  OR  partitionIndex = 7  OR  partitionIndex = 20  OR  partitionIndex = 21  OR   partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  part itionIndex = 49 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.393629197 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 138:>                                                      (0 + 0) / 121][Stage 138:==========================>                          (60 + 61) / 121][Stage 138:=============================>                       (68 + 53) / 121][Stage 138:==================================>                  (79 + 42) / 121][Stage 138:=============================================>      (105 + 16) / 121][Stage 138:===================================================> (118 + 3) / 121]                                                                                [Stage 139:==========================>                          (61 + 61) / 122][Stage 139:==========================>                          (62 + 60) / 122][Stage 139:==================================>                  (80 + 42) / 122][Stage 139:===========================================>        (103 + 19) / 122][Stage 139:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.152831398 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  12  OR  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 15  O R  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  pa rtitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.400987792 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 60) / 120][Stage 140:============================>                        (65 + 55) / 120][Stage 140:==================================>                  (79 + 41) / 120][Stage 140:===========================================>         (99 + 21) / 120][Stage 140:===================================================> (116 + 4) / 120]                                                                                [Stage 141:==========================>                          (61 + 60) / 121][Stage 141:===============================>                     (72 + 49) / 121][Stage 141:=======================================>             (91 + 30) / 121][Stage 141:===============================================>    (110 + 11) / 121][Stage 141:===================================================> (118 + 3) / 121][Stage 141:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.826498366 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 13 5  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138   OR  partitionIndex = 150 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.386470846 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 142:============================>                        (61 + 52) / 113][Stage 142:=================================>                   (72 + 41) / 113][Stage 142:========================================>            (87 + 26) / 113][Stage 142:=================================================>   (106 + 7) / 113][Stage 142:====================================================>(111 + 2) / 113]                                                                                [Stage 143:============================>                        (62 + 52) / 114][Stage 143:==================================>                  (74 + 40) / 114][Stage 143:===========================================>         (94 + 20) / 114][Stage 143:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.547631423 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  O R  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  pa rtitionIndex = 78 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.356692331 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=================================>                   (74 + 44) / 118][Stage 144:======================================>              (85 + 33) / 118][Stage 144:===========================================>         (96 + 22) / 118][Stage 144:===============================================>    (108 + 10) / 118]                                                                                [Stage 145:================================>                    (73 + 46) / 119][Stage 145:===================================>                 (79 + 40) / 119][Stage 145:========================================>            (92 + 27) / 119][Stage 145:==============================================>     (106 + 13) / 119][Stage 145:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.589400942 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  p artitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 47  OR  partit ionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.336890749 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 146:====================================>                (80 + 35) / 115][Stage 146:========================================>            (87 + 28) / 115][Stage 146:============================================>        (96 + 19) / 115][Stage 146:=============================================>      (101 + 14) / 115][Stage 146:===================================================> (111 + 4) / 115]                                                                                [Stage 147:=====================================>               (82 + 34) / 116][Stage 147:=========================================>           (91 + 25) / 116][Stage 147:============================================>        (98 + 18) / 116][Stage 147:==============================================>     (104 + 12) / 116][Stage 147:=================================================>   (108 + 8) / 116][Stage 147:===================================================> (112 + 4) / 116][Stage 147:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.077754719 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 13 8  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165   OR  partitionIndex = 166 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.368984725 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 148:================================>                    (72 + 46) / 118][Stage 148:==================================>                  (77 + 41) / 118][Stage 148:====================================>                (82 + 36) / 118][Stage 148:============================================>        (99 + 19) / 118][Stage 148:=================================================>   (111 + 7) / 118][Stage 148:====================================================>(117 + 1) / 118]                                                                                [Stage 149:================================>                    (73 + 46) / 119][Stage 149:====================================>                (81 + 38) / 119][Stage 149:=========================================>           (94 + 25) / 119][Stage 149:================================================>    (110 + 9) / 119]                                                                                Time elapsed: 4.531676145 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 13 5  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149   OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.362282612 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 150:================================>                    (72 + 46) / 118][Stage 150:================================>                    (73 + 45) / 118][Stage 150:======================================>              (86 + 32) / 118][Stage 150:=============================================>      (104 + 14) / 118][Stage 150:===================================================> (115 + 3) / 118]                                                                                [Stage 151:================================>                    (74 + 45) / 119][Stage 151:======================================>              (86 + 33) / 119][Stage 151:==========================================>          (95 + 24) / 119][Stage 151:===============================================>    (108 + 11) / 119]                                                                                Time elapsed: 3.557256475 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  O R  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  pa rtitionIndex = 84 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.368332449 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 152:================================>                    (72 + 46) / 118][Stage 152:==================================>                  (76 + 42) / 118][Stage 152:==========================================>          (94 + 24) / 118][Stage 152:=================================================>   (110 + 8) / 118]                                                                                [Stage 153:================================>                    (73 + 46) / 119][Stage 153:====================================>                (81 + 38) / 119][Stage 153:===========================================>         (97 + 22) / 119][Stage 153:=================================================>   (111 + 8) / 119][Stage 153:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.520251277 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  128  OR  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 13 1  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 231   OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.411477096 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 60) / 120][Stage 154:===========================>                         (63 + 57) / 120][Stage 154:=====================================>               (85 + 35) / 120][Stage 154:=================================================>   (112 + 8) / 120]                                                                                [Stage 155:===========================>                         (62 + 59) / 121][Stage 155:==============================>                      (69 + 52) / 121][Stage 155:======================================>              (87 + 34) / 121][Stage 155:===============================================>    (110 + 11) / 121][Stage 155:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.230880017 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  9  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR   partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  par titionIndex = 38 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.404276782 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==========================>                          (60 + 61) / 121][Stage 156:============================>                        (64 + 57) / 121][Stage 156:===================================>                 (82 + 39) / 121][Stage 156:===========================================>        (102 + 19) / 121][Stage 156:====================================================>(119 + 2) / 121][Stage 156:====================================================>(120 + 1) / 121]                                                                                [Stage 157:==========================>                          (62 + 60) / 122][Stage 157:===============================>                     (72 + 50) / 122][Stage 157:====================================>                (84 + 38) / 122][Stage 157:============================================>       (104 + 18) / 122][Stage 157:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.739608471 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 16 4  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 178   OR  partitionIndex = 179 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402238246 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==========================>                          (60 + 61) / 121][Stage 158:===============================>                     (71 + 50) / 121][Stage 158:======================================>              (87 + 34) / 121][Stage 158:=============================================>      (106 + 15) / 121][Stage 158:====================================================>(120 + 1) / 121]                                                                                [Stage 159:==========================>                          (61 + 61) / 122][Stage 159:============================>                        (65 + 57) / 122][Stage 159:=================================>                   (78 + 44) / 122][Stage 159:==========================================>         (100 + 22) / 122][Stage 159:=================================================>   (115 + 7) / 122][Stage 159:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.883064713 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  36  OR  partitionIndex = 37  OR  partitionIndex = 50  OR  partitionIndex = 51  O R  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  pa rtitionIndex = 75 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.412915179 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (60 + 61) / 121][Stage 160:=============================>                       (67 + 54) / 121][Stage 160:====================================>                (84 + 37) / 121][Stage 160:============================================>       (104 + 17) / 121]                                                                                [Stage 161:==========================>                          (61 + 61) / 122][Stage 161:=============================>                       (68 + 54) / 122][Stage 161:====================================>                (85 + 37) / 122][Stage 161:============================================>       (104 + 18) / 122][Stage 161:===============================================>    (112 + 10) / 122][Stage 161:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.582763621 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 20 2  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229   OR  partitionIndex = 230 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.344381654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 162:=====================================>               (82 + 33) / 115][Stage 162:=======================================>             (86 + 29) / 115][Stage 162:=============================================>       (99 + 16) / 115][Stage 162:====================================================>(114 + 1) / 115]                                                                                [Stage 163:=====================================>               (82 + 34) / 116][Stage 163:==========================================>          (92 + 24) / 116][Stage 163:==============================================>     (104 + 12) / 116][Stage 163:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.620746895 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR   partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  part itionIndex = 46 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.383034665 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (59 + 54) / 113][Stage 164:===============================>                     (68 + 45) / 113][Stage 164:=======================================>             (84 + 29) / 113][Stage 164:==============================================>     (100 + 13) / 113][Stage 164:====================================================>(112 + 1) / 113]                                                                                [Stage 165:===========================>                         (59 + 55) / 114][Stage 165:===============================>                     (67 + 47) / 114][Stage 165:===================================>                 (76 + 38) / 114][Stage 165:=============================================>       (97 + 17) / 114][Stage 165:===================================================> (111 + 3) / 114][Stage 165:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.791737944 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  64  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  O R  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR   partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.408079147 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 61) / 121][Stage 166:============================>                        (64 + 57) / 121][Stage 166:===================================>                 (80 + 41) / 121][Stage 166:==============================================>     (108 + 13) / 121]                                                                                [Stage 167:==========================>                          (62 + 60) / 122][Stage 167:=============================>                       (69 + 53) / 122][Stage 167:=======================================>             (90 + 32) / 122][Stage 167:=================================================>   (114 + 8) / 122][Stage 167:====================================================>(120 + 2) / 122][Stage 167:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.311199621 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  186  OR  partitionIndex = 187  OR  partitionIndex = 200  OR  partitionIndex = 20 1  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215   OR  partitionIndex = 229 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397491277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (61 + 60) / 121][Stage 168:===============================>                     (72 + 49) / 121][Stage 168:===================================>                 (82 + 39) / 121][Stage 168:=============================================>      (107 + 14) / 121][Stage 168:===================================================> (117 + 4) / 121]                                                                                [Stage 169:==========================>                          (61 + 61) / 122][Stage 169:===========================>                         (64 + 58) / 122][Stage 169:==================================>                  (79 + 43) / 122][Stage 169:===========================================>         (99 + 23) / 122][Stage 169:==================================================>  (117 + 5) / 122][Stage 169:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.806998762 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 16 1  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175   OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.372825197 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==============================>                      (67 + 48) / 115][Stage 170:======================================>              (83 + 32) / 115][Stage 170:=============================================>       (98 + 17) / 115][Stage 170:===================================================> (111 + 4) / 115]                                                                                [Stage 171:====================================>                (79 + 37) / 116][Stage 171:==========================================>          (93 + 23) / 116][Stage 171:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.634892466 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 15 0  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177   OR  partitionIndex = 178 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.393086863 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (61 + 59) / 120][Stage 172:================================>                    (74 + 46) / 120][Stage 172:=======================================>             (90 + 30) / 120][Stage 172:==============================================>     (108 + 12) / 120]                                                                                [Stage 173:===========================>                         (63 + 58) / 121][Stage 173:================================>                    (74 + 47) / 121][Stage 173:===========================================>        (101 + 20) / 121][Stage 173:=================================================>   (113 + 8) / 121][Stage 173:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.716984378 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 19 5  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198   OR  partitionIndex = 210 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.341345783 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 174:====================================>                (80 + 35) / 115][Stage 174:=======================================>             (86 + 29) / 115][Stage 174:=============================================>      (100 + 15) / 115][Stage 174:===================================================> (112 + 3) / 115][Stage 174:====================================================>(114 + 1) / 115]                                                                                [Stage 175:======================================>              (85 + 31) / 116][Stage 175:=========================================>           (90 + 26) / 116][Stage 175:=================================================>   (109 + 7) / 116][Stage 175:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.847414503 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  132  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 16 1  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175   OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.37447342 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 176:============================>                        (60 + 53) / 113][Stage 176:===================================>                 (75 + 38) / 113][Stage 176:==========================================>          (90 + 23) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:=============================>                       (63 + 51) / 114][Stage 177:===================================>                 (77 + 37) / 114][Stage 177:============================================>        (96 + 18) / 114][Stage 177:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.417859046 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  O R  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  pa rtitionIndex = 91 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.367290566 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===============================>                     (68 + 47) / 115][Stage 178:======================================>              (84 + 31) / 115][Stage 178:============================================>        (97 + 18) / 115][Stage 178:====================================================>(114 + 1) / 115]                                                                                [Stage 179:=====================================>               (81 + 35) / 116][Stage 179:===========================================>         (95 + 21) / 116][Stage 179:==============================================>     (104 + 12) / 116][Stage 179:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.025488429 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  8  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  OR   partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111  OR   partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.390634771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==========================>                          (60 + 60) / 120][Stage 180:===============================>                     (72 + 48) / 120][Stage 180:=======================================>             (89 + 31) / 120][Stage 180:=================================================>   (112 + 8) / 120]                                                                                [Stage 181:===========================>                         (63 + 58) / 121][Stage 181:===============================>                     (73 + 48) / 121][Stage 181:========================================>            (93 + 28) / 121][Stage 181:==============================================>     (109 + 12) / 121][Stage 181:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.579451168 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  12  OR  partitionIndex = 13  OR  partitionIndex = 40  OR  partitionIndex = 41  O R  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 55  OR  pa rtitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 55  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.380181039 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==================================>                  (73 + 40) / 113][Stage 182:=====================================>               (81 + 32) / 113][Stage 182:==========================================>          (90 + 23) / 113][Stage 182:==============================================>     (100 + 13) / 113][Stage 182:====================================================>(111 + 2) / 113]                                                                                [Stage 183:======================================>              (83 + 31) / 114][Stage 183:=========================================>           (90 + 24) / 114][Stage 183:=============================================>       (97 + 17) / 114][Stage 183:================================================>    (105 + 9) / 114][Stage 183:===================================================> (111 + 3) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.023626484 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  192  OR  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 20 7  OR  partitionIndex = 208  OR  partitionIndex = 221  OR  partitionIndex = 235   OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.347564785 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 184:======================================>              (83 + 32) / 115][Stage 184:==========================================>          (92 + 23) / 115][Stage 184:===============================================>    (104 + 11) / 115][Stage 184:====================================================>(113 + 2) / 115]                                                                                [Stage 185:=========================================>           (90 + 26) / 116][Stage 185:==============================================>     (103 + 13) / 116][Stage 185:====================================================>(114 + 2) / 116][Stage 185:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.752482144 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 17 0  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180   OR  partitionIndex = 181 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.391527154 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 60) / 120][Stage 186:==============================>                      (69 + 51) / 120][Stage 186:====================================>                (82 + 38) / 120][Stage 186:==========================================>          (96 + 24) / 120][Stage 186:====================================================>(119 + 1) / 120]                                                                                [Stage 187:===========================>                         (63 + 58) / 121][Stage 187:================================>                    (74 + 47) / 121][Stage 187:============================================>       (103 + 18) / 121][Stage 187:==================================================>  (115 + 6) / 121][Stage 187:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.204393155 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  O R  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  pa rtitionIndex = 82 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionIndex = 82 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.37132427 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (58 + 55) / 113][Stage 188:=============================>                       (62 + 51) / 113][Stage 188:==================================>                  (73 + 40) / 113][Stage 188:============================================>        (94 + 19) / 113]                                                                                [Stage 189:===========================>                         (60 + 54) / 114][Stage 189:================================>                    (70 + 44) / 114][Stage 189:======================================>              (83 + 31) / 114][Stage 189:==============================================>      (99 + 15) / 114][Stage 189:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.784255676 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  164  OR  partitionIndex = 165  OR  partitionIndex = 178  OR  partitionIndex = 17 9  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189   OR  partitionIndex = 203 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 178  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.354057664 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 190:================================>                    (72 + 46) / 118][Stage 190:==================================>                  (76 + 42) / 118][Stage 190:=====================================>               (83 + 35) / 118][Stage 190:==========================================>          (95 + 23) / 118][Stage 190:===============================================>    (108 + 10) / 118][Stage 190:====================================================>(117 + 1) / 118]                                                                                [Stage 191:================================>                    (73 + 46) / 119][Stage 191:==================================>                  (77 + 42) / 119][Stage 191:====================================>                (83 + 36) / 119][Stage 191:============================================>        (99 + 20) / 119][Stage 191:=================================================>   (112 + 7) / 119][Stage 191:====================================================>(117 + 2) / 119][Stage 191:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.974271973 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  8  OR  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 23  OR   partitionIndex = 24  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  par titionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.382849324 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 192:============================>                        (61 + 52) / 113][Stage 192:==============================>                      (65 + 48) / 113][Stage 192:=========================================>           (89 + 24) / 113][Stage 192:================================================>    (104 + 9) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:===========================>                         (60 + 54) / 114][Stage 193:===============================>                     (68 + 46) / 114][Stage 193:=======================================>             (86 + 28) / 114][Stage 193:===============================================>    (104 + 10) / 114][Stage 193:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.577277456 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 15 5  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169   OR  partitionIndex = 170 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.405122631 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 60) / 120][Stage 194:=============================>                       (66 + 54) / 120][Stage 194:=================================>                   (75 + 45) / 120][Stage 194:==========================================>          (96 + 24) / 120][Stage 194:===================================================> (117 + 3) / 120]                                                                                [Stage 195:============================>                        (66 + 55) / 121][Stage 195:===================================>                 (81 + 40) / 121][Stage 195:==========================================>         (100 + 21) / 121][Stage 195:===================================================> (117 + 4) / 121][Stage 195:====================================================>(119 + 2) / 121][Stage 195:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.556958309 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 12 7  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 141   OR  partitionIndex = 142 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.368216138 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=============================>                       (64 + 51) / 115][Stage 196:==================================>                  (75 + 40) / 115][Stage 196:============================================>        (96 + 19) / 115][Stage 196:==================================================>  (110 + 5) / 115][Stage 196:===================================================> (112 + 3) / 115]                                                                                [Stage 197:=====================================>               (81 + 35) / 116][Stage 197:============================================>        (98 + 18) / 116][Stage 197:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.835876206 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 14 8  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175   OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.38105893 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==============================>                      (67 + 48) / 115][Stage 198:=======================================>             (85 + 30) / 115][Stage 198:=============================================>      (101 + 14) / 115][Stage 198:==================================================>  (109 + 6) / 115][Stage 198:==================================================>  (110 + 5) / 115]                                                                                [Stage 199:=================================>                   (74 + 42) / 116][Stage 199:==========================================>          (92 + 24) / 116][Stage 199:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.141768359 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 40  O R  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  pa rtitionIndex = 55 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 55 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.410166151 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 60) / 120][Stage 200:===========================>                         (63 + 57) / 120][Stage 200:==================================>                  (79 + 41) / 120][Stage 200:=========================================>           (94 + 26) / 120][Stage 200:=================================================>   (113 + 7) / 120]                                                                                [Stage 201:============================>                        (64 + 57) / 121][Stage 201:===================================>                 (80 + 41) / 121][Stage 201:========================================>            (93 + 28) / 121][Stage 201:=================================================>   (112 + 9) / 121][Stage 201:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.204560623 seconds
res203: Int = 0

scala> 

scala> :quit

real	12m5.061s
user	12m27.432s
sys	1m45.580s
