Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 15:45:27 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 15:45:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 15:45:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 15:45:42 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 15:45:44 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 15:45:55 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524154544-0564).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.356395957 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=========================>                             (54 + 61) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:======================================>                (81 + 34) / 115][Stage 0:==========================================>            (88 + 27) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:=====================================================> (111 + 4) / 115]                                                                                [Stage 1:===========================>                           (59 + 57) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:===================================>                   (75 + 41) / 116][Stage 1:========================================>              (86 + 30) / 116][Stage 1:=============================================>         (95 + 21) / 116][Stage 1:==============================================>        (99 + 17) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:====================================================>  (111 + 5) / 116]                                                                                Time elapsed: 12.908373679 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=124", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=124,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.727765322 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:================================>                      (67 + 48) / 115][Stage 2:=====================================>                 (78 + 37) / 115][Stage 2:=====================================>                 (79 + 36) / 115][Stage 2:=======================================>               (82 + 33) / 115][Stage 2:=========================================>             (86 + 29) / 115][Stage 2:=============================================>         (96 + 19) / 115][Stage 2:=================================================>    (105 + 10) / 115][Stage 2:====================================================>  (109 + 6) / 115][Stage 2:======================================================>(113 + 2) / 115]                                                                                [Stage 3:=====================================>                 (80 + 36) / 116][Stage 3:=======================================>               (84 + 32) / 116][Stage 3:========================================>              (85 + 31) / 116][Stage 3:===========================================>           (92 + 24) / 116][Stage 3:==============================================>       (100 + 16) / 116][Stage 3:====================================================>  (110 + 6) / 116][Stage 3:====================================================>  (111 + 5) / 116][Stage 3:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.760771309 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=231", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=231,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.745664498 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:>                                                        (0 + 0) / 115][Stage 4:=============================>                         (61 + 54) / 115][Stage 4:===============================>                       (65 + 50) / 115][Stage 4:=================================>                     (70 + 45) / 115][Stage 4:====================================>                  (77 + 38) / 115][Stage 4:==========================================>            (89 + 26) / 115][Stage 4:===============================================>       (99 + 16) / 115][Stage 4:===================================================>   (108 + 7) / 115][Stage 4:======================================================>(113 + 2) / 115]                                                                                [Stage 5:===============================>                       (67 + 49) / 116][Stage 5:====================================>                  (77 + 39) / 116][Stage 5:======================================>                (82 + 34) / 116][Stage 5:========================================>              (85 + 31) / 116][Stage 5:=============================================>         (95 + 21) / 116][Stage 5:=====================================================> (113 + 3) / 116][Stage 5:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.945421035 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=220", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=220,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.633206963 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (58 + 57) / 115][Stage 6:=============================>                         (61 + 54) / 115][Stage 6:==================================>                    (73 + 42) / 115][Stage 6:======================================>                (81 + 34) / 115][Stage 6:========================================>              (85 + 30) / 115][Stage 6:============================================>          (92 + 23) / 115][Stage 6:==============================================>       (100 + 15) / 115][Stage 6:================================================>     (104 + 11) / 115][Stage 6:====================================================>  (110 + 5) / 115][Stage 6:=====================================================> (111 + 4) / 115]                                                                                [Stage 7:================================>                      (68 + 48) / 116][Stage 7:====================================>                  (76 + 40) / 116][Stage 7:======================================>                (82 + 34) / 116][Stage 7:=========================================>             (87 + 29) / 116][Stage 7:=============================================>         (96 + 20) / 116][Stage 7:==================================================>    (107 + 9) / 116][Stage 7:====================================================>  (111 + 5) / 116][Stage 7:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.872544739 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=128", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=128,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.703325399 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (60 + 60) / 120][Stage 8:=============================>                         (65 + 55) / 120][Stage 8:===================================>                   (77 + 43) / 120][Stage 8:=========================================>             (90 + 30) / 120][Stage 8:=============================================>        (101 + 19) / 120][Stage 8:=====================================================> (116 + 4) / 120]                                                                                [Stage 9:===========================>                           (61 + 60) / 121][Stage 9:===============================>                       (69 + 52) / 121][Stage 9:=====================================>                 (82 + 39) / 121][Stage 9:===========================================>           (96 + 25) / 121][Stage 9:===============================================>      (107 + 14) / 121][Stage 9:=====================================================> (117 + 4) / 121]                                                                                Time elapsed: 4.000233398 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=126", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=126,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.611234715 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==========================>                           (59 + 61) / 120][Stage 10:============================>                         (63 + 57) / 120][Stage 10:=================================>                    (75 + 45) / 120][Stage 10:==========================================>           (94 + 26) / 120][Stage 10:==================================================>   (113 + 7) / 120][Stage 10:=====================================================>(119 + 1) / 120]                                                                                [Stage 11:===========================>                          (62 + 59) / 121][Stage 11:=============================>                        (67 + 54) / 121][Stage 11:=====================================>                (83 + 38) / 121][Stage 11:============================================>        (101 + 20) / 121][Stage 11:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.805872741 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=239", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=239,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.611923176 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (60 + 60) / 120][Stage 12:===========================>                          (61 + 59) / 120][Stage 12:================================>                     (73 + 47) / 120][Stage 12:========================================>             (91 + 29) / 120][Stage 12:=================================================>    (111 + 9) / 120][Stage 12:=====================================================>(119 + 1) / 120]                                                                                [Stage 13:===========================>                          (61 + 60) / 121][Stage 13:=============================>                        (67 + 54) / 121][Stage 13:===================================>                  (79 + 42) / 121][Stage 13:==========================================>           (95 + 26) / 121][Stage 13:===============================================>     (109 + 12) / 121][Stage 13:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.651615547 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=212", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=212,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.543025262 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (60 + 61) / 121][Stage 14:============================>                         (63 + 58) / 121][Stage 14:================================>                     (73 + 48) / 121][Stage 14:===========================================>          (97 + 24) / 121][Stage 14:================================================>    (110 + 11) / 121][Stage 14:===================================================>  (116 + 5) / 121]                                                                                [Stage 15:===========================>                          (63 + 59) / 122][Stage 15:===============================>                      (71 + 51) / 122][Stage 15:========================================>             (92 + 30) / 122][Stage 15:==================================================>   (115 + 7) / 122][Stage 15:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.72268425 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=53", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=53,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464166592 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:======================================>               (81 + 34) / 115][Stage 16:========================================>             (86 + 29) / 115][Stage 16:==============================================>       (98 + 17) / 115][Stage 16:===================================================>  (109 + 6) / 115][Stage 16:====================================================> (112 + 3) / 115]                                                                                [Stage 17:======================================>               (82 + 34) / 116][Stage 17:===========================================>          (94 + 22) / 116][Stage 17:==============================================>      (102 + 14) / 116][Stage 17:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.38670964 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=155", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=155,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.525249232 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:=============================>                        (62 + 51) / 113][Stage 18:=====================================>                (78 + 35) / 113][Stage 18:=============================================>        (96 + 17) / 113][Stage 18:==================================================>   (106 + 7) / 113][Stage 18:=====================================================>(111 + 2) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:===========================>                          (57 + 57) / 114][Stage 19:=============================>                        (63 + 51) / 114][Stage 19:===================================>                  (74 + 40) / 114][Stage 19:=============================================>        (95 + 19) / 114][Stage 19:================================================>    (104 + 10) / 114][Stage 19:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.946288048 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=230", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=230,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.577055695 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (60 + 60) / 120][Stage 20:============================>                         (63 + 57) / 120][Stage 20:=====================================>                (83 + 37) / 120][Stage 20:==============================================>      (106 + 14) / 120][Stage 20:===================================================>  (114 + 6) / 120][Stage 20:====================================================> (117 + 3) / 120]                                                                                [Stage 21:===========================>                          (62 + 59) / 121][Stage 21:=================================>                    (76 + 45) / 121][Stage 21:==========================================>           (95 + 26) / 121][Stage 21:===============================================>     (109 + 12) / 121]                                                                                Time elapsed: 3.516191931 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=227", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=227,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.520187636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (60 + 60) / 120][Stage 22:===========================>                          (62 + 58) / 120][Stage 22:===============================>                      (71 + 49) / 120][Stage 22:========================================>             (90 + 30) / 120][Stage 22:=============================================>       (104 + 16) / 120][Stage 22:====================================================> (116 + 4) / 120]                                                                                [Stage 23:===========================>                          (61 + 60) / 121][Stage 23:=============================>                        (67 + 54) / 121][Stage 23:======================================>               (87 + 34) / 121][Stage 23:==============================================>      (107 + 14) / 121][Stage 23:====================================================> (118 + 3) / 121][Stage 23:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.68386746 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=240", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=240,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458180279 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:=================================>                    (70 + 43) / 113][Stage 24:======================================>               (80 + 33) / 113][Stage 24:===========================================>          (90 + 23) / 113][Stage 24:================================================>    (103 + 10) / 113][Stage 24:=====================================================>(111 + 2) / 113]                                                                                [Stage 25:===================================>                  (75 + 39) / 114][Stage 25:=======================================>              (83 + 31) / 114][Stage 25:============================================>         (93 + 21) / 114][Stage 25:==============================================>      (100 + 14) / 114][Stage 25:=====================================================>(112 + 2) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.349522886 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=190", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=190,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441208786 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:>                                                       (0 + 0) / 113][Stage 26:===================================>                  (74 + 39) / 113][Stage 26:========================================>             (85 + 28) / 113][Stage 26:=============================================>        (96 + 17) / 113][Stage 26:====================================================> (110 + 3) / 113][Stage 26:=====================================================>(112 + 1) / 113]                                                                                [Stage 27:===================================>                  (74 + 40) / 114][Stage 27:========================================>             (86 + 28) / 114][Stage 27:==============================================>      (101 + 13) / 114][Stage 27:==================================================>   (106 + 8) / 114][Stage 27:===================================================>  (109 + 5) / 114][Stage 27:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.38826942 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=27", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=27,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497567947 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (60 + 60) / 120][Stage 28:=============================>                        (65 + 55) / 120][Stage 28:=================================>                    (74 + 46) / 120][Stage 28:============================================>         (98 + 22) / 120][Stage 28:===============================================>     (108 + 12) / 120][Stage 28:===================================================>  (115 + 5) / 120]                                                                                [Stage 29:===========================>                          (61 + 60) / 121][Stage 29:===============================>                      (71 + 50) / 121][Stage 29:=========================================>            (92 + 29) / 121][Stage 29:==================================================>   (113 + 8) / 121][Stage 29:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.567605505 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=206", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=206,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.513696723 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (60 + 60) / 120][Stage 30:=============================>                        (65 + 55) / 120][Stage 30:=====================================>                (83 + 37) / 120][Stage 30:==============================================>      (106 + 14) / 120][Stage 30:=====================================================>(118 + 2) / 120]                                                                                [Stage 31:===========================>                          (61 + 60) / 121][Stage 31:============================>                         (64 + 57) / 121][Stage 31:===================================>                  (79 + 42) / 121][Stage 31:=========================================>            (93 + 28) / 121][Stage 31:================================================>    (111 + 10) / 121][Stage 31:===================================================>  (115 + 6) / 121][Stage 31:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.650289945 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=7", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=7,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505713906 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:==========================>                           (60 + 61) / 121][Stage 32:=============================>                        (65 + 56) / 121][Stage 32:=======================================>              (88 + 33) / 121][Stage 32:===================================================>  (115 + 6) / 121]                                                                                [Stage 33:===========================>                          (62 + 60) / 122][Stage 33:===============================>                      (71 + 51) / 122][Stage 33:==========================================>           (95 + 27) / 122][Stage 33:==================================================>   (114 + 8) / 122][Stage 33:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.353952575 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=164", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=164,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.548389234 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (60 + 60) / 120][Stage 34:=============================>                        (66 + 54) / 120][Stage 34:=================================>                    (74 + 46) / 120][Stage 34:============================================>        (101 + 19) / 120][Stage 34:===================================================>  (114 + 6) / 120]                                                                                [Stage 35:============================>                         (63 + 58) / 121][Stage 35:================================>                     (73 + 48) / 121][Stage 35:=====================================>                (85 + 36) / 121][Stage 35:============================================>        (102 + 19) / 121][Stage 35:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.351663163 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=65", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=65,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.580170764 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (60 + 60) / 120][Stage 36:===============================>                      (71 + 49) / 120][Stage 36:=======================================>              (87 + 33) / 120][Stage 36:==============================================>      (105 + 15) / 120][Stage 36:=====================================================>(119 + 1) / 120]                                                                                [Stage 37:===========================>                          (61 + 60) / 121][Stage 37:==============================>                       (69 + 52) / 121][Stage 37:=======================================>              (89 + 32) / 121][Stage 37:=================================================>    (112 + 9) / 121][Stage 37:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.11526309 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=70", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=70,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437901133 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:=================================>                    (71 + 42) / 113][Stage 38:======================================>               (81 + 32) / 113][Stage 38:==========================================>           (88 + 25) / 113][Stage 38:===============================================>      (99 + 14) / 113][Stage 38:==================================================>   (106 + 7) / 113][Stage 38:=====================================================>(112 + 1) / 113]                                                                                [Stage 39:===================================>                  (75 + 39) / 114][Stage 39:========================================>             (86 + 28) / 114][Stage 39:=============================================>        (95 + 19) / 114][Stage 39:===================================================>  (108 + 6) / 114][Stage 39:====================================================> (111 + 3) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.626394466 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=4", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=4,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45050649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:================================>                     (72 + 46) / 118][Stage 40:===================================>                  (78 + 40) / 118][Stage 40:=======================================>              (87 + 31) / 118][Stage 40:============================================>        (100 + 18) / 118][Stage 40:===================================================>  (112 + 6) / 118][Stage 40:=====================================================>(116 + 2) / 118]                                                                                [Stage 41:=================================>                    (73 + 46) / 119][Stage 41:==================================>                   (76 + 43) / 119][Stage 41:======================================>               (84 + 35) / 119][Stage 41:============================================>         (97 + 22) / 119][Stage 41:===============================================>     (107 + 12) / 119][Stage 41:==================================================>   (111 + 8) / 119][Stage 41:====================================================> (115 + 4) / 119][Stage 41:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.933600312 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=98", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=98,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.512095411 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==========================>                           (60 + 61) / 121][Stage 42:===========================>                          (62 + 59) / 121][Stage 42:=================================>                    (75 + 46) / 121][Stage 42:=============================================>       (103 + 18) / 121][Stage 42:===================================================>  (116 + 5) / 121]                                                                                [Stage 43:===========================>                          (62 + 60) / 122][Stage 43:==============================>                       (70 + 52) / 122][Stage 43:==========================================>           (96 + 26) / 122][Stage 43:==================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.183183969 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=11", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=11,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467533546 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (58 + 55) / 113][Stage 44:===============================>                      (65 + 48) / 113][Stage 44:========================================>             (85 + 28) / 113][Stage 44:==============================================>      (100 + 13) / 113][Stage 44:====================================================> (110 + 3) / 113]                                                                                [Stage 45:===========================>                          (59 + 55) / 114][Stage 45:============================>                         (61 + 53) / 114][Stage 45:====================================>                 (78 + 36) / 114][Stage 45:==============================================>       (98 + 16) / 114]                                                                                Time elapsed: 3.265113309 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=180", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=180,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.503628235 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (60 + 60) / 120][Stage 46:============================>                         (64 + 56) / 120][Stage 46:===================================>                  (79 + 41) / 120][Stage 46:===========================================>          (96 + 24) / 120][Stage 46:=================================================>    (111 + 9) / 120][Stage 46:=====================================================>(118 + 2) / 120]                                                                                [Stage 47:============================>                         (64 + 57) / 121][Stage 47:================================>                     (73 + 48) / 121][Stage 47:========================================>             (91 + 30) / 121][Stage 47:=================================================>    (112 + 9) / 121][Stage 47:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.489331043 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=200", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=200,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49036854 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==========================>                           (60 + 61) / 121][Stage 48:===========================>                          (61 + 60) / 121][Stage 48:===============================>                      (71 + 50) / 121][Stage 48:===========================================>          (97 + 24) / 121][Stage 48:====================================================> (117 + 4) / 121][Stage 48:=====================================================>(120 + 1) / 121]                                                                                [Stage 49:===========================>                          (62 + 60) / 122][Stage 49:==================================>                   (77 + 45) / 122][Stage 49:=========================================>            (94 + 28) / 122][Stage 49:================================================>    (111 + 11) / 122][Stage 49:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.520030141 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=37", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=37,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408167649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:>                                                       (0 + 0) / 113][Stage 50:===================================>                  (74 + 39) / 113][Stage 50:=========================================>            (86 + 27) / 113][Stage 50:============================================>         (94 + 19) / 113][Stage 50:================================================>    (103 + 10) / 113][Stage 50:=====================================================>(111 + 2) / 113]                                                                                [Stage 51:======================================>               (82 + 32) / 114][Stage 51:==========================================>           (90 + 24) / 114][Stage 51:================================================>    (104 + 10) / 114][Stage 51:===================================================>  (108 + 6) / 114][Stage 51:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.560186615 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=36", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=36,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453888155 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==========================>                           (60 + 61) / 121][Stage 52:==============================>                       (68 + 53) / 121][Stage 52:======================================>               (87 + 34) / 121][Stage 52:==================================================>   (114 + 7) / 121]                                                                                [Stage 53:===========================>                          (62 + 60) / 122][Stage 53:================================>                     (73 + 49) / 122][Stage 53:==========================================>           (95 + 27) / 122][Stage 53:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.052186925 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=48", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=48,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462569773 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (60 + 60) / 120][Stage 54:==============================>                       (67 + 53) / 120][Stage 54:======================================>               (86 + 34) / 120][Stage 54:==============================================>      (106 + 14) / 120][Stage 54:=====================================================>(118 + 2) / 120]                                                                                [Stage 55:============================>                         (64 + 57) / 121][Stage 55:===================================>                  (80 + 41) / 121][Stage 55:=============================================>       (105 + 16) / 121]                                                                                Time elapsed: 3.09107248 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=79", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=79,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400139773 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:====================================>                 (77 + 36) / 113][Stage 56:===========================================>          (92 + 21) / 113][Stage 56:==============================================>       (97 + 16) / 113][Stage 56:====================================================> (109 + 4) / 113][Stage 56:=====================================================>(112 + 1) / 113]                                                                                [Stage 57:======================================>               (81 + 33) / 114][Stage 57:============================================>         (94 + 20) / 114][Stage 57:===============================================>     (103 + 11) / 114][Stage 57:====================================================> (111 + 3) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.230454502 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=75", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=75,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453110058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:===========================>                          (61 + 59) / 120][Stage 58:=================================>                    (74 + 46) / 120][Stage 58:==========================================>           (95 + 25) / 120][Stage 58:==================================================>   (113 + 7) / 120][Stage 58:=====================================================>(119 + 1) / 120]                                                                                [Stage 59:===========================>                          (61 + 60) / 121][Stage 59:==============================>                       (68 + 53) / 121][Stage 59:======================================>               (87 + 34) / 121][Stage 59:=============================================>       (105 + 16) / 121][Stage 59:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.232039388 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=71", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=71,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412922732 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:=================================>                    (71 + 42) / 113][Stage 60:=======================================>              (82 + 31) / 113][Stage 60:===========================================>          (91 + 22) / 113][Stage 60:================================================>    (103 + 10) / 113][Stage 60:====================================================> (109 + 4) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:=====================================>                (80 + 34) / 114][Stage 61:=============================================>        (95 + 19) / 114][Stage 61:===============================================>     (102 + 12) / 114][Stage 61:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.401087422 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=169", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=169,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433374846 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (59 + 54) / 113][Stage 62:==============================>                       (63 + 50) / 113][Stage 62:===================================>                  (74 + 39) / 113][Stage 62:==============================================>       (97 + 16) / 113][Stage 62:=====================================================>(111 + 2) / 113]                                                                                [Stage 63:============================>                         (61 + 53) / 114][Stage 63:===================================>                  (74 + 40) / 114][Stage 63:=============================================>        (97 + 17) / 114][Stage 63:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.090468345 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=173", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=173,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392590019 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:=================================>                    (70 + 43) / 113][Stage 64:=======================================>              (82 + 31) / 113][Stage 64:==========================================>           (88 + 25) / 113][Stage 64:===============================================>      (99 + 14) / 113][Stage 64:===================================================>  (108 + 5) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:====================================>                 (76 + 38) / 114][Stage 65:=========================================>            (88 + 26) / 114][Stage 65:==============================================>      (100 + 14) / 114][Stage 65:================================================>    (104 + 10) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.088816651 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=234", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=234,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373003946 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:======================================>               (82 + 33) / 115][Stage 66:===========================================>          (92 + 23) / 115][Stage 66:=================================================>    (106 + 9) / 115][Stage 66:=====================================================>(114 + 1) / 115]                                                                                [Stage 67:======================================>               (83 + 33) / 116][Stage 67:==========================================>           (91 + 25) / 116][Stage 67:================================================>    (106 + 10) / 116][Stage 67:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.759816838 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=153", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=153,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388528762 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:======================================>               (81 + 32) / 113][Stage 68:===========================================>          (92 + 21) / 113][Stage 68:==============================================>       (97 + 16) / 113][Stage 68:===================================================>  (107 + 6) / 113][Stage 68:=====================================================>(112 + 1) / 113]                                                                                [Stage 69:====================================>                 (76 + 38) / 114][Stage 69:==========================================>           (89 + 25) / 114][Stage 69:==============================================>       (98 + 16) / 114][Stage 69:===================================================>  (108 + 6) / 114][Stage 69:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.064315871 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=145", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=145,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42868259 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (59 + 54) / 113][Stage 70:==================================>                   (72 + 41) / 113][Stage 70:=============================================>        (95 + 18) / 113][Stage 70:===================================================>  (108 + 5) / 113][Stage 70:====================================================> (110 + 3) / 113]                                                                                [Stage 71:=============================>                        (63 + 51) / 114][Stage 71:=====================================>                (80 + 34) / 114][Stage 71:============================================>         (94 + 20) / 114][Stage 71:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.331984317 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=78", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=78,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388733603 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:====================================>                 (76 + 37) / 113][Stage 72:========================================>             (85 + 28) / 113][Stage 72:============================================>         (93 + 20) / 113][Stage 72:==================================================>   (105 + 8) / 113][Stage 72:====================================================> (110 + 3) / 113]                                                                                [Stage 73:=====================================>                (80 + 34) / 114][Stage 73:===========================================>          (91 + 23) / 114][Stage 73:==============================================>       (99 + 15) / 114][Stage 73:===================================================>  (109 + 5) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.162106194 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=109", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=109,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423677354 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (60 + 60) / 120][Stage 74:===============================>                      (70 + 50) / 120][Stage 74:======================================>               (85 + 35) / 120][Stage 74:==============================================>      (106 + 14) / 120][Stage 74:=====================================================>(119 + 1) / 120]                                                                                [Stage 75:===========================>                          (61 + 60) / 121][Stage 75:==============================>                       (69 + 52) / 121][Stage 75:=====================================>                (83 + 38) / 121][Stage 75:==============================================>      (107 + 14) / 121][Stage 75:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.157167742 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=172", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=172,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414300198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:============================>                         (60 + 53) / 113][Stage 76:===============================>                      (66 + 47) / 113][Stage 76:=========================================>            (87 + 26) / 113][Stage 76:===================================================>  (108 + 5) / 113]                                                                                [Stage 77:============================>                         (60 + 54) / 114][Stage 77:==============================>                       (64 + 50) / 114][Stage 77:=====================================>                (80 + 34) / 114][Stage 77:===============================================>     (103 + 11) / 114][Stage 77:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.023221668 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=147", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=147,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388075086 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:==================================>                   (72 + 41) / 113][Stage 78:======================================>               (81 + 32) / 113][Stage 78:==========================================>           (89 + 24) / 113][Stage 78:===============================================>      (99 + 14) / 113][Stage 78:===================================================>  (108 + 5) / 113][Stage 78:=====================================================>(111 + 2) / 113]                                                                                [Stage 79:====================================>                 (76 + 38) / 114][Stage 79:=========================================>            (87 + 27) / 114][Stage 79:=============================================>        (96 + 18) / 114][Stage 79:===================================================>  (108 + 6) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.176305308 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=205", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=205,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381830309 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:====================================>                 (77 + 36) / 113][Stage 80:==========================================>           (88 + 25) / 113][Stage 80:=============================================>        (96 + 17) / 113][Stage 80:===================================================>  (108 + 5) / 113]                                                                                [Stage 81:====================================>                 (77 + 37) / 114][Stage 81:=========================================>            (87 + 27) / 114][Stage 81:=============================================>        (97 + 17) / 114][Stage 81:====================================================> (110 + 4) / 114][Stage 81:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.084174421 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=176", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=176,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438516072 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===========================>                          (60 + 60) / 120][Stage 82:===============================>                      (70 + 50) / 120][Stage 82:====================================>                 (82 + 38) / 120][Stage 82:===============================================>     (107 + 13) / 120]                                                                                [Stage 83:===========================>                          (61 + 60) / 121][Stage 83:=================================>                    (74 + 47) / 121][Stage 83:==========================================>           (96 + 25) / 121][Stage 83:================================================>    (110 + 11) / 121][Stage 83:=====================================================>(119 + 2) / 121][Stage 83:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.220647708 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=24", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=24,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439913353 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (61 + 59) / 120][Stage 84:===================================>                  (78 + 42) / 120][Stage 84:========================================>             (90 + 30) / 120][Stage 84:===============================================>     (108 + 12) / 120]                                                                                [Stage 85:============================>                         (64 + 57) / 121][Stage 85:=================================>                    (74 + 47) / 121][Stage 85:============================================>         (99 + 22) / 121][Stage 85:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 2.995490839 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=92", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=92,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423063238 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (62 + 58) / 120][Stage 86:=================================>                    (75 + 45) / 120][Stage 86:========================================>             (89 + 31) / 120][Stage 86:==============================================>      (105 + 15) / 120][Stage 86:=====================================================>(119 + 1) / 120]                                                                                [Stage 87:===========================>                          (61 + 60) / 121][Stage 87:==============================>                       (68 + 53) / 121][Stage 87:=====================================>                (83 + 38) / 121][Stage 87:=============================================>       (103 + 18) / 121][Stage 87:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.222252 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=194", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=194,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412785123 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (58 + 55) / 113][Stage 88:=================================>                    (70 + 43) / 113][Stage 88:===========================================>          (92 + 21) / 113][Stage 88:=================================================>    (104 + 9) / 113]                                                                                [Stage 89:============================>                         (60 + 54) / 114][Stage 89:==================================>                   (73 + 41) / 114][Stage 89:=============================================>        (97 + 17) / 114][Stage 89:=====================================================>(112 + 2) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.121778295 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=125", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=125,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442801755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (62 + 59) / 121][Stage 90:================================>                     (73 + 48) / 121][Stage 90:=========================================>            (92 + 29) / 121][Stage 90:===================================================>  (116 + 5) / 121]                                                                                [Stage 91:===========================>                          (62 + 60) / 122][Stage 91:=================================>                    (75 + 47) / 122][Stage 91:==========================================>           (95 + 27) / 122][Stage 91:================================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.066285657 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=104", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=104,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364194918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:=======================================>              (82 + 31) / 113][Stage 92:============================================>         (94 + 19) / 113][Stage 92:==================================================>   (105 + 8) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:======================================>               (81 + 33) / 114][Stage 93:=========================================>            (88 + 26) / 114][Stage 93:==============================================>       (99 + 15) / 114][Stage 93:====================================================> (111 + 3) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.107008571 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=55", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=55,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393219131 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:>                                                       (0 + 0) / 113][Stage 94:============================>                         (59 + 54) / 113][Stage 94:==============================>                       (64 + 49) / 113][Stage 94:========================================>             (85 + 28) / 113][Stage 94:===============================================>     (101 + 12) / 113][Stage 94:=====================================================>(112 + 1) / 113]                                                                                [Stage 95:==============================>                       (65 + 49) / 114][Stage 95:====================================>                 (78 + 36) / 114][Stage 95:===============================================>     (102 + 12) / 114][Stage 95:=====================================================>(112 + 2) / 114][Stage 95:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.265201173 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=221", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=221,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376603276 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:================================>                     (72 + 46) / 118][Stage 96:===================================>                  (77 + 41) / 118][Stage 96:=========================================>            (91 + 27) / 118][Stage 96:================================================>    (107 + 11) / 118][Stage 96:====================================================> (114 + 4) / 118]                                                                                [Stage 97:==================================>                   (75 + 44) / 119][Stage 97:=======================================>              (87 + 32) / 119][Stage 97:============================================>         (98 + 21) / 119][Stage 97:================================================>    (109 + 10) / 119][Stage 97:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.350220616 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=228", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=228,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369154798 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===================================>                  (74 + 39) / 113][Stage 98:========================================>             (85 + 28) / 113][Stage 98:============================================>         (93 + 20) / 113][Stage 98:==============================================>      (100 + 13) / 113][Stage 98:====================================================> (109 + 4) / 113]                                                                                [Stage 99:=========================================>            (87 + 27) / 114][Stage 99:=============================================>        (95 + 19) / 114][Stage 99:===================================================>  (108 + 6) / 114][Stage 99:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.928658299 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=222", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=222,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416771347 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (63 + 58) / 121][Stage 100:================================>                    (74 + 47) / 121][Stage 100:==========================================>          (97 + 24) / 121][Stage 100:===============================================>    (111 + 10) / 121]                                                                                [Stage 101:==========================>                          (61 + 61) / 122][Stage 101:==============================>                      (71 + 51) / 122][Stage 101:==========================================>          (97 + 25) / 122][Stage 101:==================================================>  (116 + 6) / 122][Stage 101:====================================================>(120 + 2) / 122][Stage 101:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.480444054 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=139", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=139,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378836018 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:================================>                    (73 + 45) / 118][Stage 102:=====================================>               (83 + 35) / 118][Stage 102:=========================================>           (92 + 26) / 118][Stage 102:=================================================>   (110 + 8) / 118][Stage 102:====================================================>(117 + 1) / 118]                                                                                [Stage 103:================================>                    (73 + 46) / 119][Stage 103:==================================>                  (77 + 42) / 119][Stage 103:======================================>              (87 + 32) / 119][Stage 103:============================================>       (101 + 18) / 119][Stage 103:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.182777581 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=168", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=168,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387350095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:====================================>                (78 + 35) / 113][Stage 104:=======================================>             (84 + 29) / 113][Stage 104:============================================>        (95 + 18) / 113][Stage 104:=================================================>   (105 + 8) / 113][Stage 104:====================================================>(112 + 1) / 113]                                                                                [Stage 105:=====================================>               (81 + 33) / 114][Stage 105:========================================>            (87 + 27) / 114][Stage 105:============================================>        (96 + 18) / 114][Stage 105:=================================================>   (107 + 7) / 114][Stage 105:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.102221969 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=39", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=39,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366932042 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===================================>                 (75 + 38) / 113][Stage 106:=======================================>             (85 + 28) / 113][Stage 106:============================================>        (95 + 18) / 113][Stage 106:=================================================>   (106 + 7) / 113][Stage 106:====================================================>(111 + 2) / 113]                                                                                [Stage 107:====================================>                (78 + 36) / 114][Stage 107:==========================================>          (91 + 23) / 114][Stage 107:=============================================>       (98 + 16) / 114][Stage 107:==================================================>  (108 + 6) / 114][Stage 107:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.5329267 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=161", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=161,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359065845 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=====================================>               (82 + 33) / 115][Stage 108:==========================================>          (92 + 23) / 115][Stage 108:===============================================>    (105 + 10) / 115][Stage 108:====================================================>(114 + 1) / 115]                                                                                [Stage 109:======================================>              (84 + 32) / 116][Stage 109:==========================================>          (93 + 23) / 116][Stage 109:================================================>    (107 + 9) / 116][Stage 109:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.826408733 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=157", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=157,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375326401 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:================================>                    (72 + 46) / 118][Stage 110:=================================>                   (74 + 44) / 118][Stage 110:====================================>                (81 + 37) / 118][Stage 110:=======================================>             (87 + 31) / 118][Stage 110:=============================================>      (104 + 14) / 118][Stage 110:===================================================> (114 + 4) / 118]                                                                                [Stage 111:================================>                    (73 + 46) / 119][Stage 111:=================================>                   (75 + 44) / 119][Stage 111:=====================================>               (84 + 35) / 119][Stage 111:===========================================>         (97 + 22) / 119][Stage 111:==============================================>     (107 + 12) / 119][Stage 111:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.468084931 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=182", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=182,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352951928 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==================================>                  (74 + 39) / 113][Stage 112:==========================================>          (90 + 23) / 113][Stage 112:=============================================>       (98 + 15) / 113][Stage 112:==================================================>  (107 + 6) / 113][Stage 112:===================================================> (110 + 3) / 113]                                                                                [Stage 113:==================================>                  (74 + 40) / 114][Stage 113:=======================================>             (86 + 28) / 114][Stage 113:===========================================>         (93 + 21) / 114][Stage 113:==================================================>  (109 + 5) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.963870129 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=140", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=140,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364554685 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:================================>                    (72 + 46) / 118][Stage 114:=================================>                   (74 + 44) / 118][Stage 114:====================================>                (82 + 36) / 118][Stage 114:========================================>            (91 + 27) / 118][Stage 114:===============================================>    (108 + 10) / 118][Stage 114:====================================================>(116 + 2) / 118]                                                                                [Stage 115:==================================>                  (77 + 42) / 119][Stage 115:====================================>                (81 + 38) / 119][Stage 115:========================================>            (92 + 27) / 119][Stage 115:==============================================>     (106 + 13) / 119][Stage 115:====================================================>(117 + 2) / 119][Stage 115:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.555208002 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=69", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=69,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404851376 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (61 + 60) / 121][Stage 116:===============================>                     (72 + 49) / 121][Stage 116:=======================================>             (90 + 31) / 121][Stage 116:=================================================>   (114 + 7) / 121][Stage 116:====================================================>(120 + 1) / 121]                                                                                [Stage 117:==========================>                          (62 + 60) / 122][Stage 117:=============================>                       (68 + 54) / 122][Stage 117:=====================================>               (86 + 36) / 122][Stage 117:==============================================>     (108 + 14) / 122][Stage 117:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.089978188 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=238", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=238,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386305161 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:============================>                        (60 + 53) / 113][Stage 118:=================================>                   (71 + 42) / 113][Stage 118:============================================>        (94 + 19) / 113][Stage 118:===================================================> (110 + 3) / 113]                                                                                [Stage 119:==============================>                      (65 + 49) / 114][Stage 119:=================================>                   (73 + 41) / 114][Stage 119:============================================>        (95 + 19) / 114][Stage 119:==================================================>  (108 + 6) / 114][Stage 119:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.152987718 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=21", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=21,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358906509 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===================================>                 (75 + 38) / 113][Stage 120:==========================================>          (90 + 23) / 113][Stage 120:==============================================>     (102 + 11) / 113][Stage 120:==================================================>  (108 + 5) / 113]                                                                                [Stage 121:======================================>              (82 + 32) / 114][Stage 121:===========================================>         (94 + 20) / 114][Stage 121:=================================================>   (106 + 8) / 114][Stage 121:====================================================>(112 + 2) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.233009764 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=143", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=143,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370848607 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==============================>                      (66 + 49) / 115][Stage 122:====================================>                (80 + 35) / 115][Stage 122:=======================================>             (86 + 29) / 115][Stage 122:===============================================>    (104 + 11) / 115][Stage 122:===================================================> (112 + 3) / 115]                                                                                [Stage 123:==============================>                      (67 + 49) / 116][Stage 123:=====================================>               (81 + 35) / 116][Stage 123:============================================>       (100 + 16) / 116][Stage 123:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.678443669 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=102", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=102,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381274164 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:================================>                    (72 + 46) / 118][Stage 124:================================>                    (73 + 45) / 118][Stage 124:====================================>                (81 + 37) / 118][Stage 124:==========================================>          (95 + 23) / 118][Stage 124:===============================================>    (108 + 10) / 118]                                                                                [Stage 125:================================>                    (74 + 45) / 119][Stage 125:======================================>              (86 + 33) / 119][Stage 125:===========================================>         (97 + 22) / 119][Stage 125:===============================================>    (109 + 10) / 119][Stage 125:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.419369848 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=193", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=193,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392237823 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===============================>                     (68 + 47) / 115][Stage 126:=====================================>               (82 + 33) / 115][Stage 126:=============================================>      (101 + 14) / 115][Stage 126:==================================================>  (109 + 6) / 115]                                                                                [Stage 127:==================================>                  (76 + 40) / 116][Stage 127:========================================>            (88 + 28) / 116][Stage 127:=============================================>      (102 + 14) / 116][Stage 127:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.725712307 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=122", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=122,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387949745 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=================================>                   (71 + 42) / 113][Stage 128:=====================================>               (81 + 32) / 113][Stage 128:============================================>        (94 + 19) / 113][Stage 128:================================================>    (104 + 9) / 113][Stage 128:===================================================> (109 + 4) / 113]                                                                                [Stage 129:=====================================>               (81 + 33) / 114][Stage 129:==========================================>          (92 + 22) / 114][Stage 129:==============================================>     (103 + 11) / 114][Stage 129:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.060181749 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=91", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=91,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357045193 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:>                                                      (0 + 0) / 113][Stage 130:====================================>                (77 + 36) / 113][Stage 130:=======================================>             (85 + 28) / 113][Stage 130:=============================================>       (96 + 17) / 113][Stage 130:=================================================>   (105 + 8) / 113][Stage 130:====================================================>(111 + 2) / 113]                                                                                [Stage 131:========================================>            (87 + 27) / 114][Stage 131:===========================================>         (94 + 20) / 114][Stage 131:===============================================>    (104 + 10) / 114][Stage 131:==================================================>  (109 + 5) / 114][Stage 131:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.194855962 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403146962 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (63 + 57) / 120][Stage 132:==================================>                  (77 + 43) / 120][Stage 132:============================================>       (102 + 18) / 120]                                                                                [Stage 133:===========================>                         (62 + 59) / 121][Stage 133:=============================>                       (68 + 53) / 121][Stage 133:======================================>              (89 + 32) / 121][Stage 133:=================================================>   (112 + 9) / 121][Stage 133:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.077711436 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=77", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=77,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397729885 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (58 + 55) / 113][Stage 134:==============================>                      (65 + 48) / 113][Stage 134:======================================>              (83 + 30) / 113][Stage 134:==============================================>     (101 + 12) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:============================>                        (62 + 52) / 114][Stage 135:==================================>                  (75 + 39) / 114][Stage 135:============================================>        (95 + 19) / 114][Stage 135:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.187363916 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=229", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=229,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380690669 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (59 + 54) / 113][Stage 136:===============================>                     (67 + 46) / 113][Stage 136:=========================================>           (88 + 25) / 113][Stage 136:==================================================>  (107 + 6) / 113][Stage 136:===================================================> (110 + 3) / 113]                                                                                [Stage 137:============================>                        (62 + 52) / 114][Stage 137:===================================>                 (76 + 38) / 114][Stage 137:============================================>        (95 + 19) / 114][Stage 137:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.141459613 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=15", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=15,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389332588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==========================>                          (60 + 60) / 120][Stage 138:===============================>                     (71 + 49) / 120][Stage 138:=====================================>               (84 + 36) / 120][Stage 138:=============================================>      (104 + 16) / 120][Stage 138:===================================================> (117 + 3) / 120]                                                                                [Stage 139:============================>                        (65 + 56) / 121][Stage 139:===================================>                 (80 + 41) / 121][Stage 139:=========================================>           (95 + 26) / 121][Stage 139:==================================================>  (115 + 6) / 121][Stage 139:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.628924565 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=149", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=149,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388214029 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (58 + 55) / 113][Stage 140:==============================>                      (65 + 48) / 113][Stage 140:=====================================>               (81 + 32) / 113][Stage 140:==================================================>  (107 + 6) / 113][Stage 140:====================================================>(112 + 1) / 113]                                                                                [Stage 141:===========================>                         (60 + 54) / 114][Stage 141:==============================>                      (66 + 48) / 114][Stage 141:===================================>                 (77 + 37) / 114][Stage 141:=============================================>       (98 + 16) / 114][Stage 141:===================================================> (110 + 4) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.281563713 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=5", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=5,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352100278 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:=====================================>               (81 + 32) / 113][Stage 142:==========================================>          (91 + 22) / 113][Stage 142:==============================================>     (100 + 13) / 113][Stage 142:==================================================>  (108 + 5) / 113][Stage 142:====================================================>(112 + 1) / 113]                                                                                [Stage 143:===================================>                 (77 + 37) / 114][Stage 143:=========================================>           (89 + 25) / 114][Stage 143:============================================>        (95 + 19) / 114][Stage 143:==============================================>     (103 + 11) / 114][Stage 143:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.49394677 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=87", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=87,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372371134 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===================================>                 (76 + 39) / 115][Stage 144:=========================================>           (91 + 24) / 115][Stage 144:=================================================>   (108 + 7) / 115][Stage 144:====================================================>(114 + 1) / 115]                                                                                [Stage 145:================================>                    (71 + 45) / 116][Stage 145:========================================>            (88 + 28) / 116][Stage 145:==============================================>     (103 + 13) / 116][Stage 145:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.713168736 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=167", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=167,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359341118 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:=================================>                   (74 + 44) / 118][Stage 146:====================================>                (81 + 37) / 118][Stage 146:========================================>            (90 + 28) / 118][Stage 146:===============================================>    (108 + 10) / 118][Stage 146:====================================================>(116 + 2) / 118]                                                                                [Stage 147:=================================>                   (76 + 43) / 119][Stage 147:====================================>                (81 + 38) / 119][Stage 147:========================================>            (92 + 27) / 119][Stage 147:==============================================>     (107 + 12) / 119][Stage 147:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.46280185 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=247", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=247,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402689509 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (63 + 58) / 121][Stage 148:=================================>                   (76 + 45) / 121][Stage 148:===========================================>         (99 + 22) / 121][Stage 148:===================================================> (117 + 4) / 121]                                                                                [Stage 149:===========================>                         (63 + 59) / 122][Stage 149:=================================>                   (76 + 46) / 122][Stage 149:===========================================>        (101 + 21) / 122][Stage 149:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.042357232 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=67", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=67,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394467471 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 60) / 120][Stage 150:=============================>                       (67 + 53) / 120][Stage 150:=====================================>               (85 + 35) / 120][Stage 150:===============================================>    (109 + 11) / 120][Stage 150:====================================================>(118 + 2) / 120]                                                                                [Stage 151:==========================>                          (61 + 60) / 121][Stage 151:============================>                        (66 + 55) / 121][Stage 151:====================================>                (84 + 37) / 121][Stage 151:===============================================>    (110 + 11) / 121][Stage 151:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.139175795 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=30", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=30,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383242755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==============================>                      (66 + 49) / 115][Stage 152:====================================>                (79 + 36) / 115][Stage 152:========================================>            (88 + 27) / 115][Stage 152:===============================================>    (104 + 11) / 115][Stage 152:====================================================>(114 + 1) / 115]                                                                                [Stage 153:===============================>                     (70 + 46) / 116][Stage 153:======================================>              (84 + 32) / 116][Stage 153:==============================================>     (103 + 13) / 116][Stage 153:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.033801845 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=13", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=13,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384212655 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==================================>                  (73 + 40) / 113][Stage 154:=====================================>               (81 + 32) / 113][Stage 154:==========================================>          (91 + 22) / 113][Stage 154:==============================================>     (102 + 11) / 113][Stage 154:===================================================> (110 + 3) / 113][Stage 154:====================================================>(112 + 1) / 113]                                                                                [Stage 155:==================================>                  (75 + 39) / 114][Stage 155:======================================>              (82 + 32) / 114][Stage 155:============================================>        (96 + 18) / 114][Stage 155:=================================================>   (106 + 8) / 114][Stage 155:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.49081049 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=95", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=95,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399712732 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==========================>                          (60 + 60) / 120][Stage 156:============================>                        (65 + 55) / 120][Stage 156:====================================>                (82 + 38) / 120][Stage 156:=============================================>      (106 + 14) / 120][Stage 156:====================================================>(119 + 1) / 120]                                                                                [Stage 157:==========================>                          (61 + 60) / 121][Stage 157:=============================>                       (67 + 54) / 121][Stage 157:=========================================>           (94 + 27) / 121][Stage 157:==============================================>     (108 + 13) / 121][Stage 157:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.041305535 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=171", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=171,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392111695 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==========================>                          (60 + 60) / 120][Stage 158:============================>                        (64 + 56) / 120][Stage 158:=======================================>             (89 + 31) / 120][Stage 158:=================================================>   (113 + 7) / 120]                                                                                [Stage 159:===========================>                         (63 + 58) / 121][Stage 159:===============================>                     (72 + 49) / 121][Stage 159:=======================================>             (91 + 30) / 121][Stage 159:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 2.961130337 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=133", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=133,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398751974 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (60 + 60) / 120][Stage 160:=============================>                       (67 + 53) / 120][Stage 160:==================================>                  (79 + 41) / 120][Stage 160:===========================================>        (101 + 19) / 120][Stage 160:===================================================> (117 + 3) / 120]                                                                                [Stage 161:===========================>                         (62 + 59) / 121][Stage 161:==============================>                      (69 + 52) / 121][Stage 161:=====================================>               (85 + 36) / 121][Stage 161:=============================================>      (107 + 14) / 121][Stage 161:===================================================> (118 + 3) / 121][Stage 161:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.224891486 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=235", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=235,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46642298 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:================================>                    (72 + 46) / 118][Stage 162:=================================>                   (75 + 43) / 118][Stage 162:=======================================>             (87 + 31) / 118][Stage 162:===========================================>         (97 + 21) / 118][Stage 162:===================================================> (114 + 4) / 118]                                                                                [Stage 163:================================>                    (74 + 45) / 119][Stage 163:====================================>                (82 + 37) / 119][Stage 163:========================================>            (92 + 27) / 119][Stage 163:===============================================>    (109 + 10) / 119][Stage 163:=================================================>   (111 + 8) / 119][Stage 163:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.462069782 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=2", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=2,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350186566 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===================================>                 (76 + 37) / 113][Stage 164:========================================>            (86 + 27) / 113][Stage 164:==============================================>      (99 + 14) / 113][Stage 164:====================================================>(111 + 2) / 113]                                                                                [Stage 165:====================================>                (78 + 36) / 114][Stage 165:=======================================>             (86 + 28) / 114][Stage 165:==========================================>          (92 + 22) / 114][Stage 165:==================================================>  (108 + 6) / 114][Stage 165:===================================================> (110 + 4) / 114][Stage 165:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.312293029 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=132", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=132,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339808588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:=====================================>               (81 + 34) / 115][Stage 166:==========================================>          (92 + 23) / 115][Stage 166:===================================================> (111 + 4) / 115][Stage 166:====================================================>(114 + 1) / 115]                                                                                [Stage 167:=====================================>               (83 + 33) / 116][Stage 167:=========================================>           (90 + 26) / 116][Stage 167:==============================================>     (103 + 13) / 116][Stage 167:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.756129623 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=59", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=59,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.509018873 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 61) / 121][Stage 168:============================>                        (65 + 56) / 121][Stage 168:=======================================>             (90 + 31) / 121][Stage 168:==============================================>     (108 + 13) / 121]                                                                                [Stage 169:==========================>                          (62 + 60) / 122][Stage 169:===============================>                     (73 + 49) / 122][Stage 169:======================================>              (88 + 34) / 122][Stage 169:==============================================>     (110 + 12) / 122]                                                                                Time elapsed: 3.147373487 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=156", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=156,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38532488 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (59 + 54) / 113][Stage 170:==============================>                      (65 + 48) / 113][Stage 170:======================================>              (82 + 31) / 113][Stage 170:==============================================>     (101 + 12) / 113][Stage 170:====================================================>(112 + 1) / 113]                                                                                [Stage 171:===========================>                         (60 + 54) / 114][Stage 171:==============================>                      (66 + 48) / 114][Stage 171:======================================>              (82 + 32) / 114][Stage 171:=============================================>      (100 + 14) / 114][Stage 171:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.16154175 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=100", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=100,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349451788 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===================================>                 (75 + 38) / 113][Stage 172:========================================>            (87 + 26) / 113][Stage 172:=============================================>       (97 + 16) / 113][Stage 172:==============================================>     (102 + 11) / 113][Stage 172:====================================================>(112 + 1) / 113]                                                                                [Stage 173:======================================>              (83 + 31) / 114][Stage 173:============================================>        (96 + 18) / 114][Stage 173:================================================>    (105 + 9) / 114][Stage 173:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.097962129 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=141", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=141,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367511105 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:================================>                    (72 + 46) / 118][Stage 174:===================================>                 (78 + 40) / 118][Stage 174:=======================================>             (87 + 31) / 118][Stage 174:===========================================>         (96 + 22) / 118][Stage 174:================================================>    (109 + 9) / 118][Stage 174:====================================================>(117 + 1) / 118]                                                                                [Stage 175:================================>                    (73 + 46) / 119][Stage 175:=================================>                   (76 + 43) / 119][Stage 175:====================================>                (83 + 36) / 119][Stage 175:===============================================>    (108 + 11) / 119][Stage 175:===================================================> (116 + 3) / 119][Stage 175:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.574651779 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=123", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=123,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350443409 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=================================>                   (72 + 41) / 113][Stage 176:======================================>              (82 + 31) / 113][Stage 176:=========================================>           (89 + 24) / 113][Stage 176:==============================================>     (100 + 13) / 113][Stage 176:==================================================>  (108 + 5) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:=================================>                   (72 + 42) / 114][Stage 177:=======================================>             (85 + 29) / 114][Stage 177:============================================>        (96 + 18) / 114][Stage 177:==================================================>  (108 + 6) / 114][Stage 177:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.202726319 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=186", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=186,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395017281 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (62 + 58) / 120][Stage 178:==============================>                      (70 + 50) / 120][Stage 178:=====================================>               (86 + 34) / 120][Stage 178:==============================================>     (108 + 12) / 120][Stage 178:====================================================>(119 + 1) / 120]                                                                                [Stage 179:===========================>                         (63 + 58) / 121][Stage 179:================================>                    (74 + 47) / 121][Stage 179:=======================================>             (91 + 30) / 121][Stage 179:===============================================>    (110 + 11) / 121][Stage 179:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.256856315 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=163", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=163,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35432279 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=================================>                   (72 + 41) / 113][Stage 180:=====================================>               (79 + 34) / 113][Stage 180:=========================================>           (88 + 25) / 113][Stage 180:=============================================>       (96 + 17) / 113][Stage 180:==================================================>  (107 + 6) / 113][Stage 180:====================================================>(112 + 1) / 113]                                                                                [Stage 181:=====================================>               (80 + 34) / 114][Stage 181:==========================================>          (91 + 23) / 114][Stage 181:=============================================>      (100 + 14) / 114][Stage 181:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.031253664 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=17", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=17,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430774016 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (60 + 60) / 120][Stage 182:============================>                        (65 + 55) / 120][Stage 182:=====================================>               (84 + 36) / 120][Stage 182:===============================================>    (109 + 11) / 120][Stage 182:====================================================>(119 + 1) / 120]                                                                                [Stage 183:===========================>                         (62 + 59) / 121][Stage 183:===============================>                     (71 + 50) / 121][Stage 183:======================================>              (87 + 34) / 121][Stage 183:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 2.859247223 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=42", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=42,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390955604 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:================================>                    (73 + 45) / 118][Stage 184:==================================>                  (77 + 41) / 118][Stage 184:=====================================>               (83 + 35) / 118][Stage 184:============================================>        (98 + 20) / 118][Stage 184:===================================================> (114 + 4) / 118]                                                                                [Stage 185:=================================>                   (75 + 44) / 119][Stage 185:===================================>                 (80 + 39) / 119][Stage 185:==========================================>          (95 + 24) / 119][Stage 185:=============================================>      (103 + 16) / 119]                                                                                Time elapsed: 3.196882124 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=232", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=232,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395225064 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 60) / 120][Stage 186:================================>                    (74 + 46) / 120][Stage 186:=======================================>             (90 + 30) / 120][Stage 186:===============================================>    (110 + 10) / 120][Stage 186:====================================================>(118 + 2) / 120]                                                                                [Stage 187:============================>                        (64 + 57) / 121][Stage 187:==================================>                  (79 + 42) / 121][Stage 187:===========================================>        (101 + 20) / 121][Stage 187:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.260506157 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=33", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=33,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332702337 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:======================================>              (84 + 31) / 115][Stage 188:===========================================>         (94 + 21) / 115][Stage 188:===============================================>    (105 + 10) / 115][Stage 188:====================================================>(113 + 2) / 115]                                                                                [Stage 189:=====================================>               (81 + 35) / 116][Stage 189:========================================>            (89 + 27) / 116][Stage 189:==============================================>     (104 + 12) / 116][Stage 189:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 3.636804613 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=34", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=34,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409242523 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (61 + 59) / 120][Stage 190:================================>                    (74 + 46) / 120][Stage 190:========================================>            (91 + 29) / 120][Stage 190:===============================================>    (110 + 10) / 120]                                                                                [Stage 191:===========================>                         (62 + 59) / 121][Stage 191:===============================>                     (71 + 50) / 121][Stage 191:========================================>            (92 + 29) / 121][Stage 191:=================================================>   (112 + 9) / 121][Stage 191:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.191443762 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374142891 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (59 + 54) / 113][Stage 192:===============================>                     (67 + 46) / 113][Stage 192:=========================================>           (88 + 25) / 113][Stage 192:==================================================>  (107 + 6) / 113]                                                                                [Stage 193:=============================>                       (63 + 51) / 114][Stage 193:=================================>                   (72 + 42) / 114][Stage 193:=========================================>           (89 + 25) / 114][Stage 193:==============================================>     (102 + 12) / 114][Stage 193:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.176564971 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=22", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=22,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38189947 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:====================================>                (80 + 35) / 115][Stage 194:=========================================>           (91 + 24) / 115][Stage 194:================================================>    (106 + 9) / 115][Stage 194:====================================================>(114 + 1) / 115]                                                                                [Stage 195:===============================>                     (70 + 46) / 116][Stage 195:======================================>              (84 + 32) / 116][Stage 195:=============================================>       (99 + 17) / 116][Stage 195:=================================================>   (109 + 7) / 116][Stage 195:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.143462283 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=179", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=179,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369088433 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=======================================>             (84 + 29) / 113][Stage 196:=============================================>       (96 + 17) / 113][Stage 196:=================================================>   (106 + 7) / 113][Stage 196:===================================================> (110 + 3) / 113]                                                                                [Stage 197:======================================>              (82 + 32) / 114][Stage 197:=========================================>           (90 + 24) / 114][Stage 197:=============================================>      (100 + 14) / 114][Stage 197:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 2.926814588 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=103", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=103,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392233509 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=================================>                   (72 + 43) / 115][Stage 198:==========================================>          (92 + 23) / 115][Stage 198:===============================================>    (105 + 10) / 115]                                                                                [Stage 199:================================>                    (72 + 44) / 116][Stage 199:=====================================>               (82 + 34) / 116][Stage 199:=============================================>      (102 + 14) / 116][Stage 199:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.688884736 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=224", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=224,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363928035 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:================================>                    (72 + 46) / 118][Stage 200:=================================>                   (75 + 43) / 118][Stage 200:======================================>              (85 + 33) / 118][Stage 200:============================================>       (100 + 18) / 118][Stage 200:================================================>    (109 + 9) / 118][Stage 200:===================================================> (115 + 3) / 118]                                                                                [Stage 201:================================>                    (73 + 46) / 119][Stage 201:=================================>                   (75 + 44) / 119][Stage 201:======================================>              (86 + 33) / 119][Stage 201:============================================>       (102 + 17) / 119][Stage 201:===============================================>    (109 + 10) / 119][Stage 201:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.378795217 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m5.717s
user	11m41.816s
sys	0m36.736s
