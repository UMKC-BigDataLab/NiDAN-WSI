Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 22:38:23 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 22:38:37 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 22:38:37 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 22:38:38 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 22:38:40 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 22:38:50 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524223839-0603).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 4.342657495 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:==============>                                        (30 + 85) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:=======================================>               (82 + 33) / 115][Stage 0:============================================>          (93 + 22) / 115][Stage 0:==============================================>        (98 + 17) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:===========================>                           (57 + 59) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:=================================>                     (71 + 45) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:========================================>              (86 + 30) / 116][Stage 1:============================================>          (94 + 22) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.38896598 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  132 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.881807392 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=====================>                                 (47 + 74) / 121][Stage 2:=======================>                               (51 + 70) / 121][Stage 2:==========================>                            (59 + 62) / 121][Stage 2:============================>                          (62 + 59) / 121][Stage 2:============================>                          (63 + 58) / 121][Stage 2:=================================>                     (74 + 47) / 121][Stage 2:=========================================>             (92 + 29) / 121][Stage 2:==============================================>       (104 + 17) / 121][Stage 2:=================================================>    (110 + 11) / 121][Stage 2:===================================================>   (114 + 7) / 121][Stage 2:======================================================>(120 + 1) / 121]                                                                                [Stage 3:===========================>                           (60 + 62) / 122][Stage 3:===========================>                           (61 + 61) / 122][Stage 3:============================>                          (63 + 59) / 122][Stage 3:==============================>                        (68 + 54) / 122][Stage 3:===================================>                   (79 + 43) / 122][Stage 3:=========================================>             (92 + 30) / 122][Stage 3:===================================================>   (115 + 7) / 122][Stage 3:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.202366094 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  126 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.770311392 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (60 + 60) / 120][Stage 4:=============================>                         (65 + 55) / 120][Stage 4:==================================>                    (75 + 45) / 120][Stage 4:=======================================>               (86 + 34) / 120][Stage 4:=============================================>        (100 + 20) / 120][Stage 4:====================================================>  (114 + 6) / 120][Stage 4:======================================================>(119 + 1) / 120]                                                                                [Stage 5:===========================>                           (61 + 60) / 121][Stage 5:============================>                          (63 + 58) / 121][Stage 5:=================================>                     (74 + 47) / 121][Stage 5:========================================>              (90 + 31) / 121][Stage 5:=============================================>        (102 + 19) / 121][Stage 5:====================================================>  (115 + 6) / 121][Stage 5:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.277519233 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  14 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.593616612 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 6:================================>                      (69 + 49) / 118][Stage 6:=================================>                     (72 + 46) / 118][Stage 6:==================================>                    (73 + 45) / 118][Stage 6:========================================>              (86 + 32) / 118][Stage 6:=============================================>         (97 + 21) / 118][Stage 6:=================================================>    (108 + 10) / 118][Stage 6:=====================================================> (114 + 4) / 118][Stage 6:======================================================>(117 + 1) / 118]                                                                                [Stage 7:=================================>                     (73 + 46) / 119][Stage 7:==================================>                    (74 + 45) / 119][Stage 7:======================================>                (84 + 35) / 119][Stage 7:=============================================>         (99 + 20) / 119][Stage 7:==================================================>    (110 + 9) / 119]                                                                                Time elapsed: 3.872859098 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  209 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 209 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.494075065 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 8:======================================>                (81 + 34) / 115][Stage 8:========================================>              (84 + 31) / 115][Stage 8:=============================================>         (96 + 19) / 115][Stage 8:================================================>     (103 + 12) / 115][Stage 8:======================================================>(113 + 2) / 115]                                                                                [Stage 9:======================================>                (82 + 34) / 116][Stage 9:=========================================>             (87 + 29) / 116][Stage 9:===============================================>      (102 + 14) / 116][Stage 9:===================================================>   (108 + 8) / 116][Stage 9:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.354092773 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  75 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.545839731 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==============================>                       (64 + 51) / 115][Stage 10:=================================>                    (71 + 44) / 115][Stage 10:=====================================>                (79 + 36) / 115][Stage 10:=========================================>            (88 + 27) / 115][Stage 10:==============================================>      (101 + 14) / 115][Stage 10:====================================================> (111 + 4) / 115][Stage 10:=====================================================>(114 + 1) / 115]                                                                                [Stage 11:===============================>                      (68 + 48) / 116][Stage 11:===================================>                  (77 + 39) / 116][Stage 11:============================================>         (95 + 21) / 116][Stage 11:===============================================>     (104 + 12) / 116][Stage 11:===================================================>  (111 + 5) / 116][Stage 11:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.748249202 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  203 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.611251792 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==============================>                       (65 + 50) / 115][Stage 12:==================================>                   (73 + 42) / 115][Stage 12:=======================================>              (85 + 30) / 115][Stage 12:===========================================>          (92 + 23) / 115][Stage 12:==============================================>       (99 + 16) / 115][Stage 12:===================================================>  (110 + 5) / 115][Stage 12:=====================================================>(114 + 1) / 115]                                                                                [Stage 13:===============================>                      (68 + 48) / 116][Stage 13:====================================>                 (79 + 37) / 116][Stage 13:=========================================>            (90 + 26) / 116][Stage 13:============================================>         (96 + 20) / 116][Stage 13:==============================================>      (102 + 14) / 116][Stage 13:==================================================>   (108 + 8) / 116][Stage 13:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.935390158 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  146 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.621293812 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (60 + 61) / 121][Stage 14:===========================>                          (61 + 60) / 121][Stage 14:=================================>                    (75 + 46) / 121][Stage 14:==========================================>           (95 + 26) / 121][Stage 14:==============================================>      (107 + 14) / 121][Stage 14:=================================================>    (112 + 9) / 121][Stage 14:=====================================================>(119 + 2) / 121]                                                                                [Stage 15:===========================>                          (61 + 61) / 122][Stage 15:==============================>                       (70 + 52) / 122][Stage 15:===================================>                  (81 + 41) / 122][Stage 15:==========================================>           (95 + 27) / 122][Stage 15:================================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.778282139 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  71 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.502829409 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 16:================================>                     (72 + 46) / 118][Stage 16:=================================>                    (73 + 45) / 118][Stage 16:======================================>               (84 + 34) / 118][Stage 16:=============================================>       (101 + 17) / 118][Stage 16:====================================================> (115 + 3) / 118]                                                                                [Stage 17:=================================>                    (73 + 46) / 119][Stage 17:======================================>               (84 + 35) / 119][Stage 17:============================================>         (98 + 21) / 119][Stage 17:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.238930812 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  50 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.457520584 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 18:=================================>                    (70 + 43) / 113][Stage 18:=======================================>              (83 + 30) / 113][Stage 18:=============================================>        (95 + 18) / 113][Stage 18:==================================================>   (105 + 8) / 113][Stage 18:=====================================================>(111 + 2) / 113]                                                                                [Stage 19:=====================================>                (80 + 34) / 114][Stage 19:=========================================>            (88 + 26) / 114][Stage 19:==============================================>      (101 + 13) / 114][Stage 19:====================================================> (111 + 3) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.458818977 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  54 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.533045703 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (58 + 55) / 113][Stage 20:===============================>                      (66 + 47) / 113][Stage 20:=======================================>              (83 + 30) / 113][Stage 20:===============================================>     (101 + 12) / 113][Stage 20:===================================================>  (108 + 5) / 113]                                                                                [Stage 21:===========================>                          (59 + 55) / 114][Stage 21:===============================>                      (66 + 48) / 114][Stage 21:===========================================>          (91 + 23) / 114][Stage 21:================================================>    (104 + 10) / 114][Stage 21:==================================================>   (107 + 7) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.647930812 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  208 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 208 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.472323802 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 22:>                                                       (0 + 0) / 118][Stage 22:================================>                     (72 + 46) / 118][Stage 22:==================================>                   (75 + 43) / 118][Stage 22:======================================>               (84 + 34) / 118][Stage 22:============================================>        (100 + 18) / 118][Stage 22:==================================================>   (110 + 8) / 118][Stage 22:===================================================>  (113 + 5) / 118][Stage 22:=====================================================>(116 + 2) / 118]                                                                                [Stage 23:=================================>                    (73 + 46) / 119][Stage 23:==================================>                   (77 + 42) / 119][Stage 23:=======================================>              (87 + 32) / 119][Stage 23:=============================================>       (103 + 16) / 119][Stage 23:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.839982888 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  157 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.480824841 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==============================>                       (65 + 50) / 115][Stage 24:======================================>               (83 + 32) / 115][Stage 24:==========================================>           (90 + 25) / 115][Stage 24:===============================================>     (104 + 11) / 115][Stage 24:===================================================>  (110 + 5) / 115][Stage 24:====================================================> (111 + 4) / 115]                                                                                [Stage 25:==================================>                   (74 + 42) / 116][Stage 25:==========================================>           (91 + 25) / 116][Stage 25:==============================================>      (101 + 15) / 116][Stage 25:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.512656073 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  88 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.419013041 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 26:======================================>               (81 + 34) / 115][Stage 26:=========================================>            (89 + 26) / 115][Stage 26:==============================================>       (99 + 16) / 115][Stage 26:===================================================>  (109 + 6) / 115]                                                                                [Stage 27:=======================================>              (85 + 31) / 116][Stage 27:============================================>         (95 + 21) / 116][Stage 27:=================================================>    (107 + 9) / 116][Stage 27:====================================================> (113 + 3) / 116][Stage 27:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.264955494 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  105 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.404174626 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 28:======================================>               (82 + 33) / 115][Stage 28:=========================================>            (88 + 27) / 115][Stage 28:==============================================>       (98 + 17) / 115][Stage 28:===============================================>     (104 + 11) / 115][Stage 28:==================================================>   (107 + 8) / 115][Stage 28:=====================================================>(114 + 1) / 115]                                                                                [Stage 29:======================================>               (83 + 33) / 116][Stage 29:=========================================>            (89 + 27) / 116][Stage 29:==============================================>      (101 + 15) / 116][Stage 29:===================================================>  (111 + 5) / 116][Stage 29:====================================================> (113 + 3) / 116][Stage 29:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.516177053 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  217 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.506774238 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 30:=====================================>                (79 + 36) / 115][Stage 30:=======================================>              (85 + 30) / 115][Stage 30:============================================>         (94 + 21) / 115][Stage 30:==============================================>      (101 + 14) / 115][Stage 30:===================================================>  (109 + 6) / 115]                                                                                [Stage 31:========================================>             (86 + 30) / 116][Stage 31:==========================================>           (92 + 24) / 116][Stage 31:===============================================>     (104 + 12) / 116][Stage 31:===================================================>  (110 + 6) / 116][Stage 31:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.157508443 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  70 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.502048641 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (61 + 59) / 120][Stage 32:==============================>                       (67 + 53) / 120][Stage 32:=======================================>              (87 + 33) / 120][Stage 32:================================================>    (110 + 10) / 120][Stage 32:=====================================================>(118 + 2) / 120]                                                                                [Stage 33:===========================>                          (61 + 60) / 121][Stage 33:============================>                         (64 + 57) / 121][Stage 33:===================================>                  (79 + 42) / 121][Stage 33:==============================================>      (107 + 14) / 121][Stage 33:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.12658388 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  46 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.4406023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=====================================>                (79 + 36) / 115][Stage 34:========================================>             (87 + 28) / 115][Stage 34:=============================================>        (97 + 18) / 115][Stage 34:===================================================>  (110 + 5) / 115]                                                                                [Stage 35:=======================================>              (84 + 32) / 116][Stage 35:==============================================>       (99 + 17) / 116][Stage 35:==================================================>   (108 + 8) / 116][Stage 35:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.914193846 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  93 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 93 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.495309206 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (58 + 55) / 113][Stage 36:================================>                     (68 + 45) / 113][Stage 36:=======================================>              (83 + 30) / 113][Stage 36:===============================================>     (102 + 11) / 113][Stage 36:====================================================> (110 + 3) / 113][Stage 36:=====================================================>(112 + 1) / 113]                                                                                [Stage 37:===========================>                          (59 + 55) / 114][Stage 37:===============================>                      (67 + 47) / 114][Stage 37:======================================>               (81 + 33) / 114][Stage 37:================================================>    (104 + 10) / 114][Stage 37:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.452520229 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  123 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.423096286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 38:======================================>               (83 + 32) / 115][Stage 38:===========================================>          (93 + 22) / 115][Stage 38:=============================================>        (97 + 18) / 115][Stage 38:================================================>    (105 + 10) / 115][Stage 38:=====================================================>(114 + 1) / 115]                                                                                [Stage 39:========================================>             (86 + 30) / 116][Stage 39:=============================================>        (97 + 19) / 116][Stage 39:==================================================>   (108 + 8) / 116][Stage 39:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.204029144 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  201 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.474420114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==========================>                           (60 + 61) / 121][Stage 40:============================>                         (63 + 58) / 121][Stage 40:=================================>                    (76 + 45) / 121][Stage 40:=========================================>            (93 + 28) / 121][Stage 40:==================================================>   (114 + 7) / 121]                                                                                [Stage 41:============================>                         (64 + 58) / 122][Stage 41:================================>                     (73 + 49) / 122][Stage 41:======================================>               (87 + 35) / 122][Stage 41:================================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.211204752 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  108 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.542014018 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==========================>                           (60 + 61) / 121][Stage 42:=============================>                        (67 + 54) / 121][Stage 42:=================================>                    (76 + 45) / 121][Stage 42:=============================================>       (104 + 17) / 121][Stage 42:=====================================================>(120 + 1) / 121]                                                                                [Stage 43:===========================>                          (63 + 59) / 122][Stage 43:=================================>                    (76 + 46) / 122][Stage 43:===========================================>          (99 + 23) / 122][Stage 43:===============================================>     (109 + 13) / 122]                                                                                Time elapsed: 3.148342877 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  116 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.442837125 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===================================>                  (74 + 39) / 113][Stage 44:======================================>               (80 + 33) / 113][Stage 44:==============================================>       (98 + 15) / 113][Stage 44:===================================================>  (108 + 5) / 113][Stage 44:=====================================================>(112 + 1) / 113]                                                                                [Stage 45:=======================================>              (83 + 31) / 114][Stage 45:===========================================>          (92 + 22) / 114][Stage 45:==============================================>      (100 + 14) / 114][Stage 45:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.111268195 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  180 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.433381789 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===============================>                      (67 + 48) / 115][Stage 46:======================================>               (82 + 33) / 115][Stage 46:===========================================>          (93 + 22) / 115][Stage 46:===================================================>  (109 + 6) / 115][Stage 46:=====================================================>(114 + 1) / 115]                                                                                [Stage 47:===============================>                      (68 + 48) / 116][Stage 47:===================================>                  (77 + 39) / 116][Stage 47:============================================>         (95 + 21) / 116][Stage 47:==============================================>      (102 + 14) / 116][Stage 47:==================================================>   (109 + 7) / 116][Stage 47:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.276218581 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  95 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.487730656 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (60 + 60) / 120][Stage 48:===============================>                      (69 + 51) / 120][Stage 48:=======================================>              (88 + 32) / 120][Stage 48:=============================================>       (104 + 16) / 120][Stage 48:====================================================> (117 + 3) / 120]                                                                                [Stage 49:=============================>                        (65 + 56) / 121][Stage 49:=================================>                    (74 + 47) / 121][Stage 49:=====================================>                (84 + 37) / 121][Stage 49:==============================================>      (107 + 14) / 121]                                                                                Time elapsed: 3.194917111 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  60 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.489860517 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (60 + 60) / 120][Stage 50:============================>                         (63 + 57) / 120][Stage 50:=================================>                    (74 + 46) / 120][Stage 50:==========================================>           (94 + 26) / 120][Stage 50:=====================================================>(119 + 1) / 120]                                                                                [Stage 51:===========================>                          (61 + 60) / 121][Stage 51:===========================>                          (62 + 59) / 121][Stage 51:================================>                     (73 + 48) / 121][Stage 51:=======================================>              (88 + 33) / 121][Stage 51:================================================>    (110 + 11) / 121]                                                                                Time elapsed: 3.35283688 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  172 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.457654327 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 52:=================================>                    (72 + 43) / 115][Stage 52:========================================>             (87 + 28) / 115][Stage 52:===============================================>     (102 + 13) / 115][Stage 52:==================================================>   (108 + 7) / 115][Stage 52:=====================================================>(114 + 1) / 115]                                                                                [Stage 53:=================================>                    (72 + 44) / 116][Stage 53:==========================================>           (91 + 25) / 116][Stage 53:===============================================>     (103 + 13) / 116][Stage 53:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.778373331 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  47 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.460793946 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (60 + 60) / 120][Stage 54:=============================>                        (65 + 55) / 120][Stage 54:================================>                     (73 + 47) / 120][Stage 54:=======================================>              (88 + 32) / 120][Stage 54:=================================================>    (111 + 9) / 120]                                                                                [Stage 55:============================>                         (63 + 58) / 121][Stage 55:================================>                     (72 + 49) / 121][Stage 55:===========================================>          (98 + 23) / 121][Stage 55:================================================>    (110 + 11) / 121][Stage 55:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.243309044 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  165 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.375260028 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 56:=====================================>                (80 + 35) / 115][Stage 56:=======================================>              (84 + 31) / 115][Stage 56:============================================>         (94 + 21) / 115][Stage 56:==================================================>   (108 + 7) / 115][Stage 56:=====================================================>(113 + 2) / 115]                                                                                [Stage 57:=====================================>                (81 + 35) / 116][Stage 57:==========================================>           (92 + 24) / 116][Stage 57:================================================>    (106 + 10) / 116][Stage 57:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.815977977 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  79 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.396261604 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 58:======================================>               (81 + 32) / 113][Stage 58:==========================================>           (89 + 24) / 113][Stage 58:===============================================>     (101 + 12) / 113][Stage 58:===================================================>  (108 + 5) / 113]                                                                                [Stage 59:=======================================>              (84 + 30) / 114][Stage 59:============================================>         (94 + 20) / 114][Stage 59:===============================================>     (103 + 11) / 114][Stage 59:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.991526581 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  200 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.450131632 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (58 + 55) / 113][Stage 60:==============================>                       (64 + 49) / 113][Stage 60:========================================>             (84 + 29) / 113][Stage 60:==================================================>   (106 + 7) / 113]                                                                                [Stage 61:============================>                         (60 + 54) / 114][Stage 61:=================================>                    (70 + 44) / 114][Stage 61:=========================================>            (87 + 27) / 114][Stage 61:===============================================>     (103 + 11) / 114][Stage 61:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.055908253 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  118 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.384756709 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===================================>                  (74 + 39) / 113][Stage 62:========================================>             (85 + 28) / 113][Stage 62:============================================>         (94 + 19) / 113][Stage 62:=================================================>    (104 + 9) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:======================================>               (82 + 32) / 114][Stage 63:===========================================>          (92 + 22) / 114][Stage 63:==============================================>       (98 + 16) / 114][Stage 63:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.130789764 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  20 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.411332264 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 64:================================>                     (72 + 46) / 118][Stage 64:====================================>                 (79 + 39) / 118][Stage 64:==========================================>           (92 + 26) / 118][Stage 64:=============================================>       (102 + 16) / 118][Stage 64:==================================================>   (111 + 7) / 118]                                                                                [Stage 65:==================================>                   (76 + 43) / 119][Stage 65:===================================>                  (79 + 40) / 119][Stage 65:=======================================>              (87 + 32) / 119][Stage 65:=============================================>       (103 + 16) / 119][Stage 65:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.370832916 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  195 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.428702241 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==============================>                       (66 + 49) / 115][Stage 66:======================================>               (81 + 34) / 115][Stage 66:============================================>         (94 + 21) / 115][Stage 66:==================================================>   (108 + 7) / 115]                                                                                [Stage 67:=================================>                    (71 + 45) / 116][Stage 67:========================================>             (88 + 28) / 116][Stage 67:==============================================>      (102 + 14) / 116][Stage 67:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.853312684 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  196 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.518706182 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==================================>                   (74 + 41) / 115][Stage 68:=========================================>            (88 + 27) / 115][Stage 68:==============================================>      (100 + 15) / 115][Stage 68:=====================================================>(113 + 2) / 115]                                                                                [Stage 69:=================================>                    (73 + 43) / 116][Stage 69:========================================>             (86 + 30) / 116][Stage 69:=================================================>    (107 + 9) / 116][Stage 69:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.700904306 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  134 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.389819072 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 70:======================================>               (81 + 34) / 115][Stage 70:=======================================>              (85 + 30) / 115][Stage 70:=============================================>        (97 + 18) / 115][Stage 70:==================================================>   (108 + 7) / 115][Stage 70:===================================================>  (110 + 5) / 115][Stage 70:=====================================================>(114 + 1) / 115]                                                                                [Stage 71:========================================>             (87 + 29) / 116][Stage 71:============================================>         (96 + 20) / 116][Stage 71:==================================================>   (108 + 8) / 116][Stage 71:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.06966075 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  73 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.406603789 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 72:=================================>                    (71 + 42) / 113][Stage 72:========================================>             (85 + 28) / 113][Stage 72:============================================>         (93 + 20) / 113][Stage 72:===============================================>     (102 + 11) / 113][Stage 72:====================================================> (109 + 4) / 113]                                                                                [Stage 73:====================================>                 (78 + 36) / 114][Stage 73:=========================================>            (88 + 26) / 114][Stage 73:=============================================>        (97 + 17) / 114][Stage 73:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.012370691 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  2 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.384377982 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===================================>                  (75 + 38) / 113][Stage 74:===========================================>          (90 + 23) / 113][Stage 74:==============================================>       (98 + 15) / 113][Stage 74:====================================================> (109 + 4) / 113][Stage 74:====================================================> (110 + 3) / 113]                                                                                [Stage 75:===================================>                  (75 + 39) / 114][Stage 75:========================================>             (86 + 28) / 114][Stage 75:=============================================>        (96 + 18) / 114][Stage 75:==================================================>   (106 + 8) / 114][Stage 75:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.63275612 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  68 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.429943184 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 76:============================>                         (59 + 54) / 113][Stage 76:=============================>                        (62 + 51) / 113][Stage 76:==================================>                   (73 + 40) / 113][Stage 76:=============================================>        (96 + 17) / 113][Stage 76:===================================================>  (107 + 6) / 113]                                                                                [Stage 77:============================>                         (61 + 53) / 114][Stage 77:================================>                     (68 + 46) / 114][Stage 77:======================================>               (82 + 32) / 114][Stage 77:=============================================>        (96 + 18) / 114][Stage 77:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.142461008 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  161 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.424239955 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (58 + 55) / 113][Stage 78:================================>                     (67 + 46) / 113][Stage 78:=======================================>              (83 + 30) / 113][Stage 78:=================================================>    (104 + 9) / 113][Stage 78:=====================================================>(111 + 2) / 113]                                                                                [Stage 79:============================>                         (60 + 54) / 114][Stage 79:===============================>                      (66 + 48) / 114][Stage 79:=====================================>                (80 + 34) / 114][Stage 79:===============================================>     (102 + 12) / 114][Stage 79:===================================================>  (109 + 5) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.243016846 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  58 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.388101999 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 80:======================================>               (80 + 33) / 113][Stage 80:===========================================>          (91 + 22) / 113][Stage 80:===============================================>      (99 + 14) / 113][Stage 80:====================================================> (109 + 4) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:======================================>               (81 + 33) / 114][Stage 81:===========================================>          (92 + 22) / 114][Stage 81:===============================================>     (102 + 12) / 114][Stage 81:==================================================>   (107 + 7) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.435860107 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  113 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 113 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.3762017 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===================================>                  (75 + 38) / 113][Stage 82:=========================================>            (86 + 27) / 113][Stage 82:===========================================>          (91 + 22) / 113][Stage 82:==================================================>   (105 + 8) / 113][Stage 82:=====================================================>(112 + 1) / 113]                                                                                [Stage 83:=========================================>            (87 + 27) / 114][Stage 83:============================================>         (94 + 20) / 114][Stage 83:==============================================>      (101 + 13) / 114][Stage 83:====================================================> (110 + 4) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.24627614 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  75 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.356236095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 84:======================================>               (83 + 32) / 115][Stage 84:============================================>         (94 + 21) / 115][Stage 84:================================================>    (105 + 10) / 115][Stage 84:=====================================================>(113 + 2) / 115]                                                                                [Stage 85:========================================>             (86 + 30) / 116][Stage 85:==============================================>      (101 + 15) / 116][Stage 85:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.685685361 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  211 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.348764549 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 86:======================================>               (81 + 34) / 115][Stage 86:=============================================>        (96 + 19) / 115][Stage 86:===============================================>     (103 + 12) / 115][Stage 86:=====================================================>(114 + 1) / 115]                                                                                [Stage 87:=======================================>              (84 + 32) / 116][Stage 87:=========================================>            (90 + 26) / 116][Stage 87:==============================================>      (101 + 15) / 116][Stage 87:=================================================>    (107 + 9) / 116][Stage 87:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.854186141 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  6 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.432719307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 88:==========================>                           (60 + 61) / 121][Stage 88:===============================>                      (71 + 50) / 121][Stage 88:=========================================>            (93 + 28) / 121][Stage 88:===================================================>  (115 + 6) / 121][Stage 88:=====================================================>(120 + 1) / 121]                                                                                [Stage 89:===========================>                          (61 + 61) / 122][Stage 89:==============================>                       (70 + 52) / 122][Stage 89:=======================================>              (90 + 32) / 122][Stage 89:==================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.110515935 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  19 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.409356348 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (59 + 54) / 113][Stage 90:==============================>                       (64 + 49) / 113][Stage 90:=======================================>              (83 + 30) / 113][Stage 90:==============================================>       (97 + 16) / 113][Stage 90:====================================================> (110 + 3) / 113]                                                                                [Stage 91:===============================>                      (67 + 47) / 114][Stage 91:====================================>                 (78 + 36) / 114][Stage 91:===============================================>     (103 + 11) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.215936866 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  51 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.400913144 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==============================>                       (66 + 49) / 115][Stage 92:======================================>               (81 + 34) / 115][Stage 92:=============================================>        (97 + 18) / 115][Stage 92:================================================>    (105 + 10) / 115]                                                                                [Stage 93:=================================>                    (72 + 44) / 116][Stage 93:=======================================>              (84 + 32) / 116][Stage 93:==============================================>      (102 + 14) / 116][Stage 93:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.876389349 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  30 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.352323287 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 94:======================================>               (81 + 34) / 115][Stage 94:==========================================>           (91 + 24) / 115][Stage 94:===================================================>  (109 + 6) / 115][Stage 94:=====================================================>(114 + 1) / 115]                                                                                [Stage 95:======================================>               (83 + 33) / 116][Stage 95:=========================================>            (90 + 26) / 116][Stage 95:==================================================>   (108 + 8) / 116][Stage 95:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.857291229 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  27 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.424023686 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (62 + 58) / 120][Stage 96:================================>                     (72 + 48) / 120][Stage 96:=========================================>            (92 + 28) / 120][Stage 96:====================================================> (117 + 3) / 120]                                                                                [Stage 97:============================>                         (64 + 57) / 121][Stage 97:====================================>                 (81 + 40) / 121][Stage 97:============================================>        (102 + 19) / 121][Stage 97:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 2.90218138 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  163 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.419952195 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 98:============================>                         (59 + 54) / 113][Stage 98:==============================>                       (63 + 50) / 113][Stage 98:=======================================>              (83 + 30) / 113][Stage 98:================================================>    (103 + 10) / 113][Stage 98:====================================================> (110 + 3) / 113][Stage 98:=====================================================>(112 + 1) / 113]                                                                                [Stage 99:============================>                         (60 + 54) / 114][Stage 99:=================================>                    (70 + 44) / 114][Stage 99:====================================>                 (77 + 37) / 114][Stage 99:==============================================>       (99 + 15) / 114]                                                                                Time elapsed: 3.113913494 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  81 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.35198593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 100:=====================================>               (81 + 34) / 115][Stage 100:==========================================>          (93 + 22) / 115][Stage 100:================================================>    (106 + 9) / 115][Stage 100:===================================================> (112 + 3) / 115][Stage 100:====================================================>(114 + 1) / 115]                                                                                [Stage 101:======================================>              (85 + 31) / 116][Stage 101:==========================================>          (93 + 23) / 116][Stage 101:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.710226079 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  219 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.383002039 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==================================>                  (74 + 41) / 115][Stage 102:=========================================>           (89 + 26) / 115][Stage 102:===============================================>    (104 + 11) / 115][Stage 102:===================================================> (111 + 4) / 115]                                                                                [Stage 103:==================================>                  (75 + 41) / 116][Stage 103:========================================>            (89 + 27) / 116][Stage 103:===============================================>    (106 + 10) / 116][Stage 103:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.855972722 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  30 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.411322752 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (60 + 60) / 120][Stage 104:=============================>                       (66 + 54) / 120][Stage 104:===================================>                 (80 + 40) / 120][Stage 104:=============================================>      (106 + 14) / 120]                                                                                [Stage 105:===========================>                         (63 + 58) / 121][Stage 105:================================>                    (74 + 47) / 121][Stage 105:=========================================>           (94 + 27) / 121][Stage 105:=================================================>   (112 + 9) / 121][Stage 105:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.905211467 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  236 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 236 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.419779999 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (58 + 55) / 113][Stage 106:=============================>                       (63 + 50) / 113][Stage 106:=======================================>             (85 + 28) / 113][Stage 106:==============================================>     (100 + 13) / 113][Stage 106:==================================================>  (108 + 5) / 113]                                                                                [Stage 107:===========================>                         (59 + 55) / 114][Stage 107:================================>                    (70 + 44) / 114][Stage 107:========================================>            (88 + 26) / 114][Stage 107:===============================================>    (104 + 10) / 114][Stage 107:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.307512805 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  21 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.394287023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 108:================================>                    (72 + 46) / 118][Stage 108:==================================>                  (77 + 41) / 118][Stage 108:========================================>            (91 + 27) / 118][Stage 108:============================================>       (100 + 18) / 118][Stage 108:==================================================>  (113 + 5) / 118]                                                                                [Stage 109:================================>                    (74 + 45) / 119][Stage 109:===================================>                 (79 + 40) / 119][Stage 109:==========================================>          (96 + 23) / 119][Stage 109:==============================================>     (107 + 12) / 119][Stage 109:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.328050081 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  190 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.420197282 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 110:>                                                      (0 + 0) / 121][Stage 110:==========================>                          (60 + 61) / 121][Stage 110:===============================>                     (72 + 49) / 121][Stage 110:=====================================>               (86 + 35) / 121][Stage 110:==============================================>     (109 + 12) / 121][Stage 110:====================================================>(120 + 1) / 121]                                                                                [Stage 111:==========================>                          (61 + 61) / 122][Stage 111:=============================>                       (68 + 54) / 122][Stage 111:====================================>                (83 + 39) / 122][Stage 111:==============================================>     (109 + 13) / 122][Stage 111:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.159861409 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  198 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.377400454 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==================================>                  (73 + 40) / 113][Stage 112:========================================>            (87 + 26) / 113][Stage 112:==============================================>     (102 + 11) / 113][Stage 112:====================================================>(111 + 2) / 113]                                                                                [Stage 113:====================================>                (78 + 36) / 114][Stage 113:========================================>            (88 + 26) / 114][Stage 113:===========================================>         (94 + 20) / 114][Stage 113:================================================>    (105 + 9) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.962532745 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  184 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.344958048 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=====================================>               (81 + 34) / 115][Stage 114:===========================================>         (94 + 21) / 115][Stage 114:=============================================>      (100 + 15) / 115][Stage 114:=================================================>   (108 + 7) / 115][Stage 114:====================================================>(114 + 1) / 115]                                                                                [Stage 115:======================================>              (84 + 32) / 116][Stage 115:==========================================>          (92 + 24) / 116][Stage 115:============================================>       (100 + 16) / 116][Stage 115:=================================================>   (109 + 7) / 116][Stage 115:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.994381861 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  191 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397352162 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (61 + 60) / 121][Stage 116:================================>                    (74 + 47) / 121][Stage 116:=======================================>             (90 + 31) / 121][Stage 116:==============================================>     (108 + 13) / 121][Stage 116:===================================================> (118 + 3) / 121]                                                                                [Stage 117:==========================>                          (61 + 61) / 122][Stage 117:=============================>                       (69 + 53) / 122][Stage 117:===================================>                 (81 + 41) / 122][Stage 117:============================================>       (104 + 18) / 122][Stage 117:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.185176434 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  89 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.338153442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 118:========================================>            (87 + 28) / 115][Stage 118:==============================================>     (103 + 12) / 115][Stage 118:===================================================> (111 + 4) / 115]                                                                                [Stage 119:=======================================>             (87 + 29) / 116][Stage 119:==============================================>     (103 + 13) / 116][Stage 119:===================================================> (112 + 4) / 116][Stage 119:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.704821135 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  193 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.395813127 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (58 + 55) / 113][Stage 120:============================>                        (61 + 52) / 113][Stage 120:=====================================>               (79 + 34) / 113][Stage 120:=============================================>       (96 + 17) / 113][Stage 120:===================================================> (110 + 3) / 113]                                                                                [Stage 121:=============================>                       (63 + 51) / 114][Stage 121:===================================>                 (76 + 38) / 114][Stage 121:==========================================>          (91 + 23) / 114][Stage 121:=================================================>   (106 + 8) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.156893517 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  142 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39496075 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 60) / 120][Stage 122:===========================>                         (62 + 58) / 120][Stage 122:===================================>                 (80 + 40) / 120][Stage 122:===========================================>        (100 + 20) / 120][Stage 122:==================================================>  (115 + 5) / 120]                                                                                [Stage 123:==========================>                          (61 + 60) / 121][Stage 123:============================>                        (64 + 57) / 121][Stage 123:======================================>              (88 + 33) / 121][Stage 123:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 2.879245163 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  167 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.502952233 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (59 + 54) / 113][Stage 124:============================>                        (60 + 53) / 113][Stage 124:==================================>                  (74 + 39) / 113][Stage 124:=============================================>       (96 + 17) / 113][Stage 124:===================================================> (110 + 3) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:============================>                        (61 + 53) / 114][Stage 125:================================>                    (69 + 45) / 114][Stage 125:========================================>            (88 + 26) / 114][Stage 125:===================================================> (110 + 4) / 114][Stage 125:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.133679613 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  0 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.400116403 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 60) / 120][Stage 126:=============================>                       (67 + 53) / 120][Stage 126:====================================>                (82 + 38) / 120][Stage 126:============================================>       (103 + 17) / 120][Stage 126:===================================================> (116 + 4) / 120]                                                                                [Stage 127:==========================>                          (61 + 60) / 121][Stage 127:===============================>                     (71 + 50) / 121][Stage 127:=========================================>           (95 + 26) / 121][Stage 127:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 2.993104472 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  155 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.404706457 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (61 + 60) / 121][Stage 128:===============================>                     (71 + 50) / 121][Stage 128:==========================================>          (97 + 24) / 121][Stage 128:==================================================>  (116 + 5) / 121]                                                                                [Stage 129:===========================>                         (63 + 59) / 122][Stage 129:===============================>                     (72 + 50) / 122][Stage 129:=======================================>             (91 + 31) / 122][Stage 129:===============================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.091631599 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  65 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.42208073 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (63 + 58) / 121][Stage 130:===============================>                     (71 + 50) / 121][Stage 130:=========================================>           (94 + 27) / 121][Stage 130:===============================================>    (110 + 11) / 121][Stage 130:====================================================>(120 + 1) / 121]                                                                                [Stage 131:============================>                        (66 + 56) / 122][Stage 131:==================================>                  (80 + 42) / 122][Stage 131:===============================================>    (111 + 11) / 122][Stage 131:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.219315979 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  197 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.391176322 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===============================>                     (69 + 46) / 115][Stage 132:=======================================>             (85 + 30) / 115][Stage 132:===============================================>    (104 + 11) / 115][Stage 132:===================================================> (112 + 3) / 115]                                                                                [Stage 133:==================================>                  (76 + 40) / 116][Stage 133:===========================================>         (95 + 21) / 116][Stage 133:===============================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.674450077 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  153 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.37456767 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==============================>                      (66 + 49) / 115][Stage 134:====================================>                (79 + 36) / 115][Stage 134:===========================================>         (95 + 20) / 115][Stage 134:===============================================>    (105 + 10) / 115][Stage 134:====================================================>(114 + 1) / 115]                                                                                [Stage 135:===============================>                     (68 + 48) / 116][Stage 135:=====================================>               (82 + 34) / 116][Stage 135:============================================>       (100 + 16) / 116][Stage 135:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.831573827 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  111 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.373537232 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 136:=================================>                   (73 + 42) / 115][Stage 136:==========================================>          (92 + 23) / 115][Stage 136:===============================================>    (104 + 11) / 115][Stage 136:====================================================>(114 + 1) / 115]                                                                                [Stage 137:===============================>                     (68 + 48) / 116][Stage 137:====================================>                (79 + 37) / 116][Stage 137:=============================================>       (99 + 17) / 116][Stage 137:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.676340687 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  230 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.384080576 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (58 + 55) / 113][Stage 138:==============================>                      (64 + 49) / 113][Stage 138:======================================>              (82 + 31) / 113][Stage 138:==============================================>     (101 + 12) / 113][Stage 138:====================================================>(112 + 1) / 113]                                                                                [Stage 139:============================>                        (62 + 52) / 114][Stage 139:=================================>                   (71 + 43) / 114][Stage 139:===========================================>         (93 + 21) / 114][Stage 139:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.025903627 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  34 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.408134238 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (61 + 60) / 121][Stage 140:==============================>                      (70 + 51) / 121][Stage 140:========================================>            (92 + 29) / 121][Stage 140:=============================================>      (107 + 14) / 121][Stage 140:====================================================>(120 + 1) / 121]                                                                                [Stage 141:============================>                        (65 + 57) / 122][Stage 141:================================>                    (75 + 47) / 122][Stage 141:=======================================>             (92 + 30) / 122][Stage 141:===============================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.127041831 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  40 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.425001392 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 142:======================================>              (84 + 31) / 115][Stage 142:==========================================>          (93 + 22) / 115][Stage 142:================================================>    (106 + 9) / 115][Stage 142:====================================================>(114 + 1) / 115]                                                                                [Stage 143:======================================>              (84 + 32) / 116][Stage 143:========================================>            (88 + 28) / 116][Stage 143:============================================>        (98 + 18) / 116][Stage 143:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.843680138 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  138 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398159096 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 61) / 121][Stage 144:===========================>                         (62 + 59) / 121][Stage 144:==================================>                  (79 + 42) / 121][Stage 144:=============================================>      (105 + 16) / 121][Stage 144:====================================================>(119 + 2) / 121]                                                                                [Stage 145:==========================>                          (61 + 61) / 122][Stage 145:===========================>                         (63 + 59) / 122][Stage 145:==================================>                  (80 + 42) / 122][Stage 145:===========================================>        (103 + 19) / 122][Stage 145:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.145411878 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  16 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 16 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.362428795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 146:================================>                    (72 + 46) / 118][Stage 146:=================================>                   (74 + 44) / 118][Stage 146:===================================>                 (80 + 38) / 118][Stage 146:=========================================>           (93 + 25) / 118][Stage 146:===============================================>    (107 + 11) / 118][Stage 146:====================================================>(116 + 2) / 118]                                                                                [Stage 147:================================>                    (73 + 46) / 119][Stage 147:=================================>                   (76 + 43) / 119][Stage 147:====================================>                (83 + 36) / 119][Stage 147:========================================>            (90 + 29) / 119][Stage 147:=================================================>   (112 + 7) / 119][Stage 147:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.618104024 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  227 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.407842223 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (60 + 61) / 121][Stage 148:============================>                        (65 + 56) / 121][Stage 148:==================================>                  (78 + 43) / 121][Stage 148:=============================================>      (105 + 16) / 121][Stage 148:====================================================>(120 + 1) / 121]                                                                                [Stage 149:==========================>                          (61 + 61) / 122][Stage 149:=============================>                       (67 + 55) / 122][Stage 149:=====================================>               (87 + 35) / 122][Stage 149:=================================================>   (113 + 9) / 122][Stage 149:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 2.930956201 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  97 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.436657718 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 150:====================================>                (80 + 35) / 115][Stage 150:=======================================>             (85 + 30) / 115][Stage 150:=========================================>           (91 + 24) / 115][Stage 150:=================================================>   (107 + 8) / 115]                                                                                [Stage 151:======================================>              (85 + 31) / 116][Stage 151:==========================================>          (93 + 23) / 116][Stage 151:===============================================>    (106 + 10) / 116][Stage 151:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.726258158 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  35 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.361763599 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 152:====================================>                (78 + 35) / 113][Stage 152:==========================================>          (91 + 22) / 113][Stage 152:==============================================>     (100 + 13) / 113][Stage 152:=================================================>   (105 + 8) / 113][Stage 152:===================================================> (109 + 4) / 113][Stage 152:====================================================>(112 + 1) / 113]                                                                                [Stage 153:=================================>                   (73 + 41) / 114][Stage 153:=======================================>             (86 + 28) / 114][Stage 153:============================================>        (95 + 19) / 114][Stage 153:==============================================>     (103 + 11) / 114][Stage 153:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.444063453 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  12 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397467443 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 60) / 120][Stage 154:============================>                        (65 + 55) / 120][Stage 154:=====================================>               (85 + 35) / 120][Stage 154:=============================================>      (105 + 15) / 120]                                                                                [Stage 155:==========================>                          (61 + 60) / 121][Stage 155:==============================>                      (70 + 51) / 121][Stage 155:===================================>                 (81 + 40) / 121][Stage 155:============================================>       (104 + 17) / 121][Stage 155:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.080460326 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  84 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.361157542 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (73 + 45) / 118][Stage 156:=================================>                   (75 + 43) / 118][Stage 156:=======================================>             (88 + 30) / 118][Stage 156:============================================>       (101 + 17) / 118][Stage 156:====================================================>(117 + 1) / 118]                                                                                [Stage 157:================================>                    (73 + 46) / 119][Stage 157:==================================>                  (78 + 41) / 119][Stage 157:======================================>              (87 + 32) / 119][Stage 157:=============================================>      (103 + 16) / 119][Stage 157:==================================================>  (114 + 5) / 119][Stage 157:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.495319791 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  82 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.364604558 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==================================>                  (74 + 39) / 113][Stage 158:========================================>            (87 + 26) / 113][Stage 158:=============================================>       (96 + 17) / 113][Stage 158:=================================================>   (106 + 7) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:==================================>                  (74 + 40) / 114][Stage 159:========================================>            (87 + 27) / 114][Stage 159:============================================>        (96 + 18) / 114][Stage 159:==================================================>  (108 + 6) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.035270655 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  115 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.379617115 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (58 + 55) / 113][Stage 160:============================>                        (60 + 53) / 113][Stage 160:=================================>                   (72 + 41) / 113][Stage 160:============================================>        (94 + 19) / 113][Stage 160:==================================================>  (107 + 6) / 113]                                                                                [Stage 161:===========================>                         (60 + 54) / 114][Stage 161:================================>                    (69 + 45) / 114][Stage 161:=====================================>               (81 + 33) / 114][Stage 161:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.121709885 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  171 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.375203202 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==============================>                      (67 + 48) / 115][Stage 162:=====================================>               (81 + 34) / 115][Stage 162:=============================================>      (100 + 15) / 115][Stage 162:================================================>    (106 + 9) / 115][Stage 162:====================================================>(114 + 1) / 115]                                                                                [Stage 163:===============================>                     (70 + 46) / 116][Stage 163:=======================================>             (87 + 29) / 116][Stage 163:===============================================>    (106 + 10) / 116][Stage 163:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.845438973 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  109 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.370024592 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 164:=================================>                   (73 + 42) / 115][Stage 164:=======================================>             (85 + 30) / 115][Stage 164:================================================>    (106 + 9) / 115][Stage 164:====================================================>(113 + 2) / 115]                                                                                [Stage 165:==============================>                      (67 + 49) / 116][Stage 165:==================================>                  (76 + 40) / 116][Stage 165:=============================================>       (99 + 17) / 116][Stage 165:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.767703304 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  139 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398951787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 166:============================>                        (61 + 52) / 113][Stage 166:==================================>                  (73 + 40) / 113][Stage 166:==========================================>          (91 + 22) / 113][Stage 166:==================================================>  (107 + 6) / 113]                                                                                [Stage 167:===========================>                         (59 + 55) / 114][Stage 167:===============================>                     (67 + 47) / 114][Stage 167:==========================================>          (92 + 22) / 114][Stage 167:=================================================>   (106 + 8) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.167289457 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  100 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.333746191 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 168:=====================================>               (81 + 34) / 115][Stage 168:=========================================>           (91 + 24) / 115][Stage 168:===============================================>    (104 + 11) / 115][Stage 168:====================================================>(114 + 1) / 115]                                                                                [Stage 169:=====================================>               (82 + 34) / 116][Stage 169:========================================>            (89 + 27) / 116][Stage 169:=============================================>      (102 + 14) / 116][Stage 169:====================================================>(114 + 2) / 116][Stage 169:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.72176063 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  127 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.38543991 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 170:============================>                        (60 + 53) / 113][Stage 170:===============================>                     (67 + 46) / 113][Stage 170:=========================================>           (88 + 25) / 113][Stage 170:================================================>    (104 + 9) / 113][Stage 170:====================================================>(112 + 1) / 113]                                                                                [Stage 171:===========================>                         (59 + 55) / 114][Stage 171:==============================>                      (65 + 49) / 114][Stage 171:====================================>                (78 + 36) / 114][Stage 171:==============================================>      (99 + 15) / 114][Stage 171:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.207881729 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  99 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.350970465 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 172:====================================>                (77 + 36) / 113][Stage 172:==========================================>          (90 + 23) / 113][Stage 172:===============================================>    (103 + 10) / 113][Stage 172:===================================================> (109 + 4) / 113]                                                                                [Stage 173:====================================>                (78 + 36) / 114][Stage 173:========================================>            (87 + 27) / 114][Stage 173:==============================================>     (103 + 11) / 114][Stage 173:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.941589398 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  105 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.355925798 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 174:================================>                    (72 + 46) / 118][Stage 174:=================================>                   (75 + 43) / 118][Stage 174:======================================>              (86 + 32) / 118][Stage 174:==========================================>          (94 + 24) / 118][Stage 174:=============================================>      (103 + 15) / 118][Stage 174:====================================================>(117 + 1) / 118]                                                                                [Stage 175:================================>                    (73 + 46) / 119][Stage 175:==================================>                  (78 + 41) / 119][Stage 175:======================================>              (86 + 33) / 119][Stage 175:============================================>       (102 + 17) / 119][Stage 175:==================================================>  (113 + 6) / 119][Stage 175:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.369910691 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  168 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.355676301 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==================================>                  (74 + 39) / 113][Stage 176:========================================>            (87 + 26) / 113][Stage 176:==============================================>      (99 + 14) / 113][Stage 176:================================================>    (104 + 9) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:=======================================>             (86 + 28) / 114][Stage 177:============================================>        (95 + 19) / 114][Stage 177:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.974675662 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  61 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.376609488 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=============================>                       (64 + 51) / 115][Stage 178:===================================>                 (76 + 39) / 115][Stage 178:=============================================>       (99 + 16) / 115][Stage 178:==================================================>  (110 + 5) / 115][Stage 178:====================================================>(113 + 2) / 115]                                                                                [Stage 179:==================================>                  (75 + 41) / 116][Stage 179:===========================================>         (95 + 21) / 116][Stage 179:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.989594066 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  202 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.356567381 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=====================================>               (81 + 34) / 115][Stage 180:========================================>            (88 + 27) / 115][Stage 180:=============================================>      (101 + 14) / 115][Stage 180:==================================================>  (110 + 5) / 115][Stage 180:====================================================>(114 + 1) / 115]                                                                                [Stage 181:========================================>            (89 + 27) / 116][Stage 181:=================================================>   (108 + 8) / 116][Stage 181:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.642274258 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  218 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.390988548 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 182:====================================>                (78 + 35) / 113][Stage 182:=========================================>           (89 + 24) / 113][Stage 182:============================================>        (95 + 18) / 113][Stage 182:================================================>    (104 + 9) / 113][Stage 182:====================================================>(112 + 1) / 113]                                                                                [Stage 183:=====================================>               (80 + 34) / 114][Stage 183:=========================================>           (89 + 25) / 114][Stage 183:============================================>        (95 + 19) / 114][Stage 183:=================================================>   (107 + 7) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.961941505 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  55 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.416402249 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (60 + 61) / 121][Stage 184:============================>                        (64 + 57) / 121][Stage 184:=================================>                   (76 + 45) / 121][Stage 184:=========================================>           (95 + 26) / 121][Stage 184:==================================================>  (116 + 5) / 121]                                                                                [Stage 185:===========================>                         (63 + 59) / 122][Stage 185:================================>                    (74 + 48) / 122][Stage 185:=========================================>           (96 + 26) / 122][Stage 185:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.087529737 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  24 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.456253208 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==============================>                      (67 + 48) / 115][Stage 186:====================================>                (80 + 35) / 115][Stage 186:==========================================>          (93 + 22) / 115][Stage 186:===================================================> (111 + 4) / 115]                                                                                [Stage 187:================================>                    (71 + 45) / 116][Stage 187:=========================================>           (90 + 26) / 116][Stage 187:===============================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.739343227 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  135 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.379029689 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===============================>                     (68 + 47) / 115][Stage 188:=====================================>               (81 + 34) / 115][Stage 188:==============================================>     (102 + 13) / 115][Stage 188:====================================================>(113 + 2) / 115]                                                                                [Stage 189:=================================>                   (74 + 42) / 116][Stage 189:===========================================>         (96 + 20) / 116][Stage 189:=================================================>   (109 + 7) / 116][Stage 189:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.8510601 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  43 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.383860303 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (58 + 55) / 113][Stage 190:=============================>                       (62 + 51) / 113][Stage 190:===================================>                 (76 + 37) / 113][Stage 190:==============================================>     (100 + 13) / 113][Stage 190:====================================================>(111 + 2) / 113]                                                                                [Stage 191:===========================>                         (60 + 54) / 114][Stage 191:==============================>                      (65 + 49) / 114][Stage 191:=====================================>               (81 + 33) / 114][Stage 191:============================================>        (95 + 19) / 114][Stage 191:====================================================>(112 + 2) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.153917136 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  183 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.395277926 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (60 + 61) / 121][Stage 192:============================>                        (64 + 57) / 121][Stage 192:==================================>                  (78 + 43) / 121][Stage 192:===========================================>        (102 + 19) / 121][Stage 192:===================================================> (118 + 3) / 121]                                                                                [Stage 193:============================>                        (65 + 57) / 122][Stage 193:==================================>                  (80 + 42) / 122][Stage 193:===========================================>        (102 + 20) / 122][Stage 193:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.149224072 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  148 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.366140872 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 194:================================>                    (72 + 46) / 118][Stage 194:==================================>                  (77 + 41) / 118][Stage 194:=======================================>             (89 + 29) / 118][Stage 194:===============================================>    (107 + 11) / 118][Stage 194:====================================================>(117 + 1) / 118]                                                                                [Stage 195:================================>                    (73 + 46) / 119][Stage 195:======================================>              (86 + 33) / 119][Stage 195:===========================================>         (97 + 22) / 119][Stage 195:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.17574026 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  135 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.404360034 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (62 + 58) / 120][Stage 196:===============================>                     (72 + 48) / 120][Stage 196:==========================================>          (96 + 24) / 120][Stage 196:==================================================>  (115 + 5) / 120]                                                                                [Stage 197:==========================>                          (61 + 60) / 121][Stage 197:=============================>                       (67 + 54) / 121][Stage 197:==================================>                  (79 + 42) / 121][Stage 197:=============================================>      (106 + 15) / 121][Stage 197:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.849420292 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  174 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.403473376 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==========================>                          (60 + 61) / 121][Stage 198:==============================>                      (69 + 52) / 121][Stage 198:=====================================>               (86 + 35) / 121][Stage 198:===============================================>    (110 + 11) / 121][Stage 198:====================================================>(119 + 2) / 121]                                                                                [Stage 199:============================>                        (66 + 56) / 122][Stage 199:=================================>                   (76 + 46) / 122][Stage 199:========================================>            (94 + 28) / 122][Stage 199:===============================================>    (111 + 11) / 122][Stage 199:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.15368359 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  18 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397105227 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 61) / 121][Stage 200:==============================>                      (70 + 51) / 121][Stage 200:=====================================>               (86 + 35) / 121][Stage 200:==============================================>     (109 + 12) / 121][Stage 200:===================================================> (118 + 3) / 121]                                                                                [Stage 201:==========================>                          (61 + 61) / 122][Stage 201:===========================>                         (63 + 59) / 122][Stage 201:=============================>                       (69 + 53) / 122][Stage 201:==========================================>          (97 + 25) / 122][Stage 201:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.054482791 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m40.562s
user	11m22.688s
sys	0m28.244s
