Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 18:14:51 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:15:06 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:15:06 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:15:06 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 18:15:09 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:15:19 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524181508-0578).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.411551206 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=================>                                     (36 + 79) / 115][Stage 0:==========================>                            (55 + 60) / 115][Stage 0:==========================>                            (56 + 59) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:======================================>                (80 + 35) / 115][Stage 0:============================================>          (92 + 23) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:===================================================>   (108 + 7) / 115]                                                                                [Stage 1:======================>                                (48 + 68) / 116][Stage 1:============================>                          (60 + 56) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:=================================>                     (71 + 45) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:======================================>                (81 + 35) / 116][Stage 1:========================================>              (85 + 31) / 116][Stage 1:==============================================>       (100 + 16) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:===================================================>   (108 + 8) / 116]                                                                                Time elapsed: 12.643003961 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=6", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=6,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.757516114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:======================>                                (47 + 66) / 113][Stage 2:==========================>                            (54 + 59) / 113][Stage 2:=============================>                         (61 + 52) / 113][Stage 2:==============================>                        (63 + 50) / 113][Stage 2:=================================>                     (68 + 45) / 113][Stage 2:=====================================>                 (77 + 36) / 113][Stage 2:========================================>              (84 + 29) / 113][Stage 2:============================================>          (92 + 21) / 113][Stage 2:================================================>     (102 + 11) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:===========================>                           (57 + 57) / 114][Stage 3:============================>                          (59 + 55) / 114][Stage 3:=============================>                         (61 + 53) / 114][Stage 3:=================================>                     (70 + 44) / 114][Stage 3:=====================================>                 (77 + 37) / 114][Stage 3:==========================================>            (89 + 25) / 114][Stage 3:==============================================>        (97 + 17) / 114][Stage 3:====================================================>  (109 + 5) / 114]                                                                                Time elapsed: 5.038413363 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=155", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=155,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.595434188 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:>                                                        (0 + 0) / 113][Stage 4:=================================>                     (69 + 44) / 113][Stage 4:===================================>                   (73 + 40) / 113][Stage 4:====================================>                  (76 + 37) / 113][Stage 4:=========================================>             (85 + 28) / 113][Stage 4:===============================================>       (97 + 16) / 113][Stage 4:===================================================>   (106 + 7) / 113][Stage 4:=====================================================> (109 + 4) / 113][Stage 4:======================================================>(111 + 2) / 113]                                                                                [Stage 5:======================================>                (79 + 35) / 114][Stage 5:=========================================>             (85 + 29) / 114][Stage 5:============================================>          (92 + 22) / 114][Stage 5:===============================================>       (98 + 16) / 114][Stage 5:================================================>     (102 + 12) / 114][Stage 5:===================================================>   (107 + 7) / 114][Stage 5:======================================================>(112 + 2) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.732214089 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=49", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=49,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.615149012 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:======================================>                (80 + 35) / 115][Stage 6:=========================================>             (86 + 29) / 115][Stage 6:===========================================>           (91 + 24) / 115][Stage 6:=============================================>         (96 + 19) / 115][Stage 6:================================================>     (104 + 11) / 115][Stage 6:=====================================================> (112 + 3) / 115]                                                                                [Stage 7:========================================>              (86 + 30) / 116][Stage 7:===========================================>           (92 + 24) / 116][Stage 7:=============================================>         (97 + 19) / 116][Stage 7:===============================================>      (101 + 15) / 116][Stage 7:===================================================>   (108 + 8) / 116][Stage 7:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.956385455 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=64", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=64,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.670812474 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (60 + 60) / 120][Stage 8:==============================>                        (67 + 53) / 120][Stage 8:==================================>                    (76 + 44) / 120][Stage 8:========================================>              (89 + 31) / 120][Stage 8:===========================================>           (95 + 25) / 120][Stage 8:===================================================>   (113 + 7) / 120][Stage 8:======================================================>(118 + 2) / 120]                                                                                [Stage 9:===========================>                           (61 + 60) / 121][Stage 9:==============================>                        (66 + 55) / 121][Stage 9:================================>                      (72 + 49) / 121][Stage 9:========================================>              (90 + 31) / 121][Stage 9:=============================================>        (103 + 18) / 121][Stage 9:=================================================>    (110 + 11) / 121][Stage 9:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.165517699 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=93", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=93,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.500169055 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=================================>                    (70 + 43) / 113][Stage 10:===================================>                  (74 + 39) / 113][Stage 10:=======================================>              (83 + 30) / 113][Stage 10:===========================================>          (92 + 21) / 113][Stage 10:===============================================>      (99 + 14) / 113][Stage 10:====================================================> (109 + 4) / 113][Stage 10:====================================================> (110 + 3) / 113][Stage 10:=====================================================>(112 + 1) / 113]                                                                                [Stage 11:===================================>                  (74 + 40) / 114][Stage 11:======================================>               (82 + 32) / 114][Stage 11:=============================================>        (95 + 19) / 114][Stage 11:================================================>    (104 + 10) / 114][Stage 11:===================================================>  (108 + 6) / 114][Stage 11:====================================================> (110 + 4) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.019027807 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=228", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=228,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.727087176 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:============================>                         (59 + 54) / 113][Stage 12:==============================>                       (64 + 49) / 113][Stage 12:======================================>               (80 + 33) / 113][Stage 12:===========================================>          (90 + 23) / 113][Stage 12:=================================================>    (104 + 9) / 113][Stage 12:=====================================================>(111 + 2) / 113][Stage 12:=====================================================>(112 + 1) / 113]                                                                                [Stage 13:===========================>                          (57 + 57) / 114][Stage 13:============================>                         (61 + 53) / 114][Stage 13:===================================>                  (75 + 39) / 114][Stage 13:===========================================>          (92 + 22) / 114][Stage 13:================================================>    (104 + 10) / 114][Stage 13:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.756701185 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=2", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=2,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.521434724 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===============================>                      (68 + 47) / 115][Stage 14:=====================================>                (79 + 36) / 115][Stage 14:===========================================>          (92 + 23) / 115][Stage 14:===============================================>     (104 + 11) / 115][Stage 14:==================================================>   (108 + 7) / 115][Stage 14:=====================================================>(114 + 1) / 115]                                                                                [Stage 15:=================================>                    (72 + 44) / 116][Stage 15:========================================>             (87 + 29) / 116][Stage 15:============================================>         (95 + 21) / 116][Stage 15:==============================================>       (99 + 17) / 116][Stage 15:==================================================>   (109 + 7) / 116][Stage 15:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.095759302 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=145", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=145,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.556378115 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:============================>                         (59 + 54) / 113][Stage 16:=============================>                        (61 + 52) / 113][Stage 16:=======================================>              (82 + 31) / 113][Stage 16:============================================>         (93 + 20) / 113][Stage 16:===============================================>     (101 + 12) / 113][Stage 16:================================================>    (103 + 10) / 113][Stage 16:====================================================> (109 + 4) / 113]                                                                                [Stage 17:============================>                         (60 + 54) / 114][Stage 17:==================================>                   (72 + 42) / 114][Stage 17:=========================================>            (88 + 26) / 114][Stage 17:==============================================>       (98 + 16) / 114][Stage 17:=================================================>    (105 + 9) / 114][Stage 17:=====================================================>(112 + 2) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.260416925 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=40", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=40,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.54455914 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==========================>                           (60 + 61) / 121][Stage 18:=============================>                        (66 + 55) / 121][Stage 18:=====================================>                (84 + 37) / 121][Stage 18:==============================================>      (106 + 15) / 121][Stage 18:====================================================> (118 + 3) / 121]                                                                                [Stage 19:===========================>                          (62 + 60) / 122][Stage 19:================================>                     (73 + 49) / 122][Stage 19:========================================>             (91 + 31) / 122][Stage 19:================================================>    (111 + 11) / 122][Stage 19:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.432516638 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=120", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=120,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.489055493 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:=================================>                    (70 + 43) / 113][Stage 20:========================================>             (84 + 29) / 113][Stage 20:=============================================>        (95 + 18) / 113][Stage 20:=================================================>    (104 + 9) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:===================================>                  (74 + 40) / 114][Stage 21:========================================>             (86 + 28) / 114][Stage 21:============================================>         (94 + 20) / 114][Stage 21:===============================================>     (103 + 11) / 114][Stage 21:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.269146363 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=44", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=44,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47527459 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:====================================>                 (77 + 36) / 113][Stage 22:==========================================>           (88 + 25) / 113][Stage 22:=============================================>        (96 + 17) / 113][Stage 22:=================================================>    (104 + 9) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:===================================>                  (74 + 40) / 114][Stage 23:=========================================>            (88 + 26) / 114][Stage 23:=============================================>        (96 + 18) / 114][Stage 23:=================================================>    (105 + 9) / 114][Stage 23:===================================================>  (109 + 5) / 114][Stage 23:====================================================> (110 + 4) / 114][Stage 23:====================================================> (111 + 3) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.197645407 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=102", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=102,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426295652 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:======================================>               (83 + 32) / 115][Stage 24:=========================================>            (89 + 26) / 115][Stage 24:==============================================>       (99 + 16) / 115][Stage 24:===================================================>  (110 + 5) / 115][Stage 24:====================================================> (112 + 3) / 115]                                                                                [Stage 25:========================================>             (86 + 30) / 116][Stage 25:===============================================>     (103 + 13) / 116][Stage 25:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 3.150325628 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=156", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=156,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461201543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (72 + 46) / 118][Stage 26:==================================>                   (76 + 42) / 118][Stage 26:=========================================>            (91 + 27) / 118][Stage 26:===============================================>     (106 + 12) / 118]                                                                                [Stage 27:=================================>                    (73 + 46) / 119][Stage 27:===================================>                  (79 + 40) / 119][Stage 27:===========================================>          (96 + 23) / 119][Stage 27:====================================================> (115 + 4) / 119][Stage 27:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.315070826 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.48725847 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:=============================>                        (62 + 51) / 113][Stage 28:==================================>                   (73 + 40) / 113][Stage 28:=============================================>        (95 + 18) / 113][Stage 28:===================================================>  (108 + 5) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:============================>                         (60 + 54) / 114][Stage 29:==============================>                       (64 + 50) / 114][Stage 29:========================================>             (85 + 29) / 114][Stage 29:=================================================>    (105 + 9) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.300162482 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=168", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=168,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456114487 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:=================================>                    (70 + 43) / 113][Stage 30:=====================================>                (79 + 34) / 113][Stage 30:===========================================>          (91 + 22) / 113][Stage 30:==============================================>       (98 + 15) / 113][Stage 30:===================================================>  (108 + 5) / 113]                                                                                [Stage 31:====================================>                 (78 + 36) / 114][Stage 31:============================================>         (93 + 21) / 114][Stage 31:===============================================>     (103 + 11) / 114][Stage 31:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.084617572 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=195", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=195,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448060698 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:=================================>                    (74 + 44) / 118][Stage 32:===================================>                  (77 + 41) / 118][Stage 32:======================================>               (85 + 33) / 118][Stage 32:==============================================>      (103 + 15) / 118][Stage 32:=====================================================>(116 + 2) / 118]                                                                                [Stage 33:=================================>                    (73 + 46) / 119][Stage 33:==================================>                   (75 + 44) / 119][Stage 33:===================================>                  (78 + 41) / 119][Stage 33:=======================================>              (86 + 33) / 119][Stage 33:============================================>         (97 + 22) / 119][Stage 33:===============================================>     (106 + 13) / 119]                                                                                Time elapsed: 3.515880472 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=179", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=179,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.481779449 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=================================>                    (71 + 42) / 113][Stage 34:========================================>             (84 + 29) / 113][Stage 34:===========================================>          (92 + 21) / 113][Stage 34:==============================================>      (100 + 13) / 113][Stage 34:==================================================>   (106 + 7) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:====================================>                 (77 + 37) / 114][Stage 35:========================================>             (85 + 29) / 114][Stage 35:=============================================>        (95 + 19) / 114][Stage 35:===============================================>     (102 + 12) / 114][Stage 35:===================================================>  (109 + 5) / 114][Stage 35:====================================================> (110 + 4) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.585556891 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=43", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=43,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.50307611 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==========================>                           (60 + 61) / 121][Stage 36:==============================>                       (68 + 53) / 121][Stage 36:==========================================>           (96 + 25) / 121][Stage 36:==================================================>   (114 + 7) / 121]                                                                                [Stage 37:===========================>                          (62 + 60) / 122][Stage 37:==============================>                       (70 + 52) / 122][Stage 37:=======================================>              (89 + 33) / 122][Stage 37:================================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.100174863 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=32", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=32,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.553324317 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (60 + 60) / 120][Stage 38:===========================>                          (61 + 59) / 120][Stage 38:==================================>                   (76 + 44) / 120][Stage 38:============================================>         (99 + 21) / 120][Stage 38:===================================================>  (114 + 6) / 120][Stage 38:=====================================================>(119 + 1) / 120]                                                                                [Stage 39:===========================>                          (61 + 60) / 121][Stage 39:================================>                     (72 + 49) / 121][Stage 39:==========================================>           (95 + 26) / 121][Stage 39:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.319284669 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=206", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=206,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49900674 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==========================>                           (60 + 61) / 121][Stage 40:==============================>                       (69 + 52) / 121][Stage 40:=======================================>              (88 + 33) / 121][Stage 40:===============================================>     (109 + 12) / 121][Stage 40:===================================================>  (116 + 5) / 121][Stage 40:=====================================================>(119 + 2) / 121]                                                                                [Stage 41:===========================>                          (63 + 59) / 122][Stage 41:==================================>                   (79 + 43) / 122][Stage 41:===========================================>         (101 + 21) / 122][Stage 41:==================================================>   (115 + 7) / 122][Stage 41:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.521659615 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.487969114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:============================>                         (60 + 53) / 113][Stage 42:==================================>                   (72 + 41) / 113][Stage 42:===========================================>          (90 + 23) / 113][Stage 42:==============================================>       (98 + 15) / 113][Stage 42:=================================================>    (104 + 9) / 113][Stage 42:===================================================>  (107 + 6) / 113]                                                                                [Stage 43:===========================>                          (59 + 55) / 114][Stage 43:==================================>                   (73 + 41) / 114][Stage 43:=======================================>              (84 + 30) / 114][Stage 43:===============================================>     (103 + 11) / 114][Stage 43:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.657364854 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=41", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=41,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429766175 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=====================================>                (80 + 35) / 115][Stage 44:=======================================>              (85 + 30) / 115][Stage 44:==============================================>      (100 + 15) / 115][Stage 44:====================================================> (112 + 3) / 115]                                                                                [Stage 45:======================================>               (83 + 33) / 116][Stage 45:==========================================>           (92 + 24) / 116][Stage 45:===============================================>     (105 + 11) / 116][Stage 45:===================================================>  (111 + 5) / 116][Stage 45:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.0472761 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=16", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=16,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423625497 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===============================>                      (68 + 47) / 115][Stage 46:======================================>               (82 + 33) / 115][Stage 46:=============================================>        (96 + 19) / 115][Stage 46:==================================================>   (107 + 8) / 115]                                                                                [Stage 47:=================================>                    (71 + 45) / 116][Stage 47:========================================>             (87 + 29) / 116][Stage 47:===============================================>     (104 + 12) / 116][Stage 47:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.061580745 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=76", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=76,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414258381 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:================================>                     (72 + 46) / 118][Stage 48:===================================>                  (78 + 40) / 118][Stage 48:===========================================>          (96 + 22) / 118][Stage 48:=================================================>    (109 + 9) / 118][Stage 48:=====================================================>(116 + 2) / 118]                                                                                [Stage 49:=================================>                    (73 + 46) / 119][Stage 49:===================================>                  (78 + 41) / 119][Stage 49:=========================================>            (91 + 28) / 119][Stage 49:==================================================>   (111 + 8) / 119][Stage 49:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.219034271 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=175", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=175,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459617359 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:==========================>                           (60 + 61) / 121][Stage 50:============================>                         (64 + 57) / 121][Stage 50:=================================>                    (75 + 46) / 121][Stage 50:============================================>        (102 + 19) / 121][Stage 50:=====================================================>(120 + 1) / 121]                                                                                [Stage 51:===========================>                          (61 + 61) / 122][Stage 51:===============================>                      (71 + 51) / 122][Stage 51:=======================================>              (89 + 33) / 122][Stage 51:==================================================>   (114 + 8) / 122][Stage 51:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 2.984026404 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=237", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=237,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.503294827 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:======================================>               (82 + 33) / 115][Stage 52:========================================>             (86 + 29) / 115][Stage 52:=============================================>        (96 + 19) / 115][Stage 52:=================================================>    (106 + 9) / 115]                                                                                [Stage 53:=======================================>              (85 + 31) / 116][Stage 53:=========================================>            (90 + 26) / 116][Stage 53:===============================================>     (105 + 11) / 116][Stage 53:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.785526629 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436769783 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (58 + 55) / 113][Stage 54:=============================>                        (62 + 51) / 113][Stage 54:=====================================>                (79 + 34) / 113][Stage 54:================================================>    (103 + 10) / 113]                                                                                [Stage 55:============================>                         (60 + 54) / 114][Stage 55:==================================>                   (73 + 41) / 114][Stage 55:=========================================>            (88 + 26) / 114][Stage 55:===============================================>     (102 + 12) / 114]                                                                                Time elapsed: 2.911906738 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=90", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=90,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417031447 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===============================>                      (67 + 48) / 115][Stage 56:====================================>                 (77 + 38) / 115][Stage 56:============================================>         (94 + 21) / 115][Stage 56:==================================================>   (108 + 7) / 115][Stage 56:====================================================> (111 + 4) / 115][Stage 56:=====================================================>(114 + 1) / 115]                                                                                [Stage 57:================================>                     (70 + 46) / 116][Stage 57:=======================================>              (85 + 31) / 116][Stage 57:===============================================>     (103 + 13) / 116][Stage 57:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.260557976 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=207", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=207,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39706513 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:================================>                     (72 + 46) / 118][Stage 58:=================================>                    (74 + 44) / 118][Stage 58:======================================>               (85 + 33) / 118][Stage 58:==============================================>      (103 + 15) / 118][Stage 58:===================================================>  (112 + 6) / 118][Stage 58:====================================================> (115 + 3) / 118]                                                                                [Stage 59:=================================>                    (73 + 46) / 119][Stage 59:===================================>                  (78 + 41) / 119][Stage 59:=========================================>            (91 + 28) / 119][Stage 59:===============================================>     (107 + 12) / 119][Stage 59:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.176390636 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=61", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=61,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434127601 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==============================>                       (64 + 51) / 115][Stage 60:===================================>                  (76 + 39) / 115][Stage 60:============================================>         (95 + 20) / 115][Stage 60:================================================>    (105 + 10) / 115]                                                                                [Stage 61:====================================>                 (79 + 37) / 116][Stage 61:=========================================>            (90 + 26) / 116][Stage 61:===============================================>     (104 + 12) / 116][Stage 61:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.986100692 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=213", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=213,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392915882 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:======================================>               (82 + 33) / 115][Stage 62:========================================>             (86 + 29) / 115][Stage 62:=============================================>        (97 + 18) / 115][Stage 62:==================================================>   (108 + 7) / 115]                                                                                [Stage 63:=======================================>              (84 + 32) / 116][Stage 63:========================================>             (88 + 28) / 116][Stage 63:==============================================>      (102 + 14) / 116][Stage 63:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.771656032 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=201", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=201,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458882777 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:>                                                       (0 + 0) / 120][Stage 64:===========================>                          (60 + 60) / 120][Stage 64:==============================>                       (67 + 53) / 120][Stage 64:=====================================>                (84 + 36) / 120][Stage 64:============================================>        (101 + 19) / 120][Stage 64:====================================================> (117 + 3) / 120]                                                                                [Stage 65:===========================>                          (61 + 60) / 121][Stage 65:=============================>                        (65 + 56) / 121][Stage 65:===================================>                  (80 + 41) / 121][Stage 65:===========================================>         (100 + 21) / 121][Stage 65:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.183827225 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=196", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=196,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.463587281 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==========================>                           (60 + 61) / 121][Stage 66:=============================>                        (67 + 54) / 121][Stage 66:=====================================>                (84 + 37) / 121][Stage 66:===============================================>     (108 + 13) / 121][Stage 66:====================================================> (117 + 4) / 121]                                                                                [Stage 67:===========================>                          (62 + 60) / 122][Stage 67:================================>                     (74 + 48) / 122][Stage 67:=========================================>            (94 + 28) / 122][Stage 67:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.17037513 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=130", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=130,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457685184 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==========================>                           (60 + 61) / 121][Stage 68:============================>                         (64 + 57) / 121][Stage 68:==================================>                   (78 + 43) / 121][Stage 68:============================================>        (101 + 20) / 121][Stage 68:==================================================>   (114 + 7) / 121][Stage 68:=====================================================>(119 + 2) / 121]                                                                                [Stage 69:===========================>                          (61 + 61) / 122][Stage 69:=================================>                    (75 + 47) / 122][Stage 69:=======================================>              (90 + 32) / 122][Stage 69:==============================================>      (107 + 15) / 122][Stage 69:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.628076874 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474703739 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (61 + 60) / 121][Stage 70:================================>                     (72 + 49) / 121][Stage 70:========================================>             (91 + 30) / 121][Stage 70:==================================================>   (114 + 7) / 121][Stage 70:=====================================================>(120 + 1) / 121]                                                                                [Stage 71:===========================>                          (61 + 61) / 122][Stage 71:===============================>                      (71 + 51) / 122][Stage 71:=====================================>                (85 + 37) / 122][Stage 71:================================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.061974597 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=235", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=235,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377577824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:======================================>               (82 + 33) / 115][Stage 72:============================================>         (94 + 21) / 115][Stage 72:=================================================>    (106 + 9) / 115][Stage 72:=====================================================>(114 + 1) / 115]                                                                                [Stage 73:======================================>               (83 + 33) / 116][Stage 73:===========================================>          (94 + 22) / 116][Stage 73:================================================>    (106 + 10) / 116][Stage 73:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.819975646 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=216", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=216,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401035795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:================================>                     (72 + 46) / 118][Stage 74:========================================>             (88 + 30) / 118][Stage 74:================================================>    (107 + 11) / 118][Stage 74:=====================================================>(116 + 2) / 118]                                                                                [Stage 75:=================================>                    (73 + 46) / 119][Stage 75:=======================================>              (86 + 33) / 119][Stage 75:===============================================>     (106 + 13) / 119][Stage 75:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.073809271 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=200", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=200,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36694844 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:=======================================>              (85 + 30) / 115][Stage 76:============================================>         (95 + 20) / 115][Stage 76:==================================================>   (108 + 7) / 115][Stage 76:=====================================================>(113 + 2) / 115]                                                                                [Stage 77:======================================>               (83 + 33) / 116][Stage 77:========================================>             (88 + 28) / 116][Stage 77:==============================================>      (101 + 15) / 116][Stage 77:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.74472165 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422720994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (58 + 55) / 113][Stage 78:============================>                         (60 + 53) / 113][Stage 78:================================>                     (68 + 45) / 113][Stage 78:============================================>         (94 + 19) / 113][Stage 78:====================================================> (110 + 3) / 113]                                                                                [Stage 79:===========================>                          (59 + 55) / 114][Stage 79:==================================>                   (73 + 41) / 114][Stage 79:============================================>         (94 + 20) / 114][Stage 79:===================================================>  (108 + 6) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.265154 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=91", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=91,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390017686 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:================================>                     (69 + 46) / 115][Stage 80:======================================>               (82 + 33) / 115][Stage 80:===============================================>     (102 + 13) / 115][Stage 80:==================================================>   (107 + 8) / 115]                                                                                [Stage 81:====================================>                 (79 + 37) / 116][Stage 81:============================================>         (96 + 20) / 116][Stage 81:==================================================>   (108 + 8) / 116][Stage 81:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.895993036 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=181", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=181,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42294727 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==========================>                           (60 + 61) / 121][Stage 82:=============================>                        (67 + 54) / 121][Stage 82:====================================>                 (81 + 40) / 121][Stage 82:=========================================>            (94 + 27) / 121][Stage 82:===================================================>  (116 + 5) / 121]                                                                                [Stage 83:===========================>                          (62 + 60) / 122][Stage 83:=================================>                    (75 + 47) / 122][Stage 83:===========================================>          (98 + 24) / 122][Stage 83:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.149105229 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=123", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=123,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380294247 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:================================>                     (72 + 46) / 118][Stage 84:===================================>                  (78 + 40) / 118][Stage 84:======================================>               (85 + 33) / 118][Stage 84:=============================================>        (99 + 19) / 118][Stage 84:==================================================>   (111 + 7) / 118]                                                                                [Stage 85:==================================>                   (75 + 44) / 119][Stage 85:===================================>                  (78 + 41) / 119][Stage 85:=======================================>              (87 + 32) / 119][Stage 85:=============================================>       (103 + 16) / 119][Stage 85:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.381335481 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=20", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=20,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378110752 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==================================>                   (73 + 40) / 113][Stage 86:=========================================>            (86 + 27) / 113][Stage 86:=============================================>        (95 + 18) / 113][Stage 86:==================================================>   (105 + 8) / 113][Stage 86:=====================================================>(112 + 1) / 113]                                                                                [Stage 87:=====================================>                (80 + 34) / 114][Stage 87:===========================================>          (92 + 22) / 114][Stage 87:===============================================>     (103 + 11) / 114][Stage 87:=====================================================>(112 + 2) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.259000993 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356354908 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:=====================================>                (80 + 35) / 115][Stage 88:=========================================>            (88 + 27) / 115][Stage 88:==============================================>       (98 + 17) / 115][Stage 88:==================================================>   (107 + 8) / 115][Stage 88:=====================================================>(113 + 2) / 115]                                                                                [Stage 89:=========================================>            (89 + 27) / 116][Stage 89:=============================================>       (100 + 16) / 116][Stage 89:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.872699319 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=121", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=121,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352623745 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:======================================>               (81 + 34) / 115][Stage 90:========================================>             (87 + 28) / 115][Stage 90:==============================================>       (98 + 17) / 115][Stage 90:==================================================>   (107 + 8) / 115][Stage 90:=====================================================>(114 + 1) / 115]                                                                                [Stage 91:========================================>             (86 + 30) / 116][Stage 91:=============================================>       (100 + 16) / 116][Stage 91:==================================================>   (108 + 8) / 116][Stage 91:====================================================> (113 + 3) / 116][Stage 91:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.1280775 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=118", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=118,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393082051 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==============================>                       (64 + 51) / 115][Stage 92:====================================>                 (77 + 38) / 115][Stage 92:=========================================>            (88 + 27) / 115][Stage 92:===============================================>     (103 + 12) / 115][Stage 92:=====================================================>(113 + 2) / 115]                                                                                [Stage 93:=================================>                    (72 + 44) / 116][Stage 93:==========================================>           (91 + 25) / 116][Stage 93:===============================================>     (103 + 13) / 116][Stage 93:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 3.045171417 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=35", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=35,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422106011 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (60 + 60) / 120][Stage 94:=============================>                        (65 + 55) / 120][Stage 94:======================================>               (85 + 35) / 120][Stage 94:=============================================>       (103 + 17) / 120][Stage 94:=====================================================>(119 + 1) / 120]                                                                                [Stage 95:===========================>                          (61 + 60) / 121][Stage 95:============================>                         (63 + 58) / 121][Stage 95:====================================>                 (82 + 39) / 121][Stage 95:============================================>        (102 + 19) / 121][Stage 95:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.05232254 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=140", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=140,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368457688 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=======================================>              (82 + 31) / 113][Stage 96:===========================================>          (92 + 21) / 113][Stage 96:=================================================>    (104 + 9) / 113][Stage 96:=====================================================>(111 + 2) / 113][Stage 96:=====================================================>(112 + 1) / 113]                                                                                [Stage 97:====================================>                 (77 + 37) / 114][Stage 97:=======================================>              (83 + 31) / 114][Stage 97:=============================================>        (97 + 17) / 114][Stage 97:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 2.988193444 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=172", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=172,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36202113 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=====================================>                (80 + 35) / 115][Stage 98:=======================================>              (84 + 31) / 115][Stage 98:=============================================>        (96 + 19) / 115][Stage 98:====================================================> (112 + 3) / 115]                                                                                [Stage 99:=========================================>            (89 + 27) / 116][Stage 99:==============================================>      (101 + 15) / 116][Stage 99:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.587630424 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=85", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=85,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409444934 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (61 + 60) / 121][Stage 100:=============================>                       (67 + 54) / 121][Stage 100:=====================================>               (86 + 35) / 121][Stage 100:=================================================>   (113 + 8) / 121]                                                                                [Stage 101:===========================>                         (63 + 59) / 122][Stage 101:=============================>                       (69 + 53) / 122][Stage 101:==========================================>          (98 + 24) / 122][Stage 101:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 2.988345415 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=222", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=222,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408424986 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (61 + 59) / 120][Stage 102:================================>                    (73 + 47) / 120][Stage 102:==========================================>          (96 + 24) / 120][Stage 102:===================================================> (116 + 4) / 120]                                                                                [Stage 103:==========================>                          (61 + 60) / 121][Stage 103:=============================>                       (68 + 53) / 121][Stage 103:====================================>                (84 + 37) / 121][Stage 103:===========================================>        (102 + 19) / 121][Stage 103:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 2.999149699 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=8", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=8,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368986743 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:====================================>                (77 + 36) / 113][Stage 104:==========================================>          (90 + 23) / 113][Stage 104:==============================================>     (100 + 13) / 113][Stage 104:=================================================>   (106 + 7) / 113][Stage 104:====================================================>(112 + 1) / 113]                                                                                [Stage 105:=====================================>               (80 + 34) / 114][Stage 105:=========================================>           (90 + 24) / 114][Stage 105:==============================================>     (101 + 13) / 114][Stage 105:==================================================>  (108 + 6) / 114][Stage 105:====================================================>(112 + 2) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.468838047 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393181256 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:=============================>                       (64 + 51) / 115][Stage 106:=================================>                   (73 + 42) / 115][Stage 106:=========================================>           (91 + 24) / 115][Stage 106:==============================================>     (102 + 13) / 115][Stage 106:===================================================> (111 + 4) / 115]                                                                                [Stage 107:====================================>                (80 + 36) / 116][Stage 107:===========================================>         (95 + 21) / 116][Stage 107:===============================================>    (106 + 10) / 116][Stage 107:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.920180105 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=79", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=79,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402928849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:================================>                    (72 + 46) / 118][Stage 108:=================================>                   (75 + 43) / 118][Stage 108:=====================================>               (83 + 35) / 118][Stage 108:===========================================>         (97 + 21) / 118][Stage 108:==============================================>     (106 + 12) / 118][Stage 108:====================================================>(116 + 2) / 118]                                                                                [Stage 109:================================>                    (74 + 45) / 119][Stage 109:==================================>                  (77 + 42) / 119][Stage 109:=======================================>             (89 + 30) / 119][Stage 109:===========================================>        (100 + 19) / 119][Stage 109:================================================>    (110 + 9) / 119][Stage 109:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.486081865 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=23", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=23,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402495444 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (58 + 55) / 113][Stage 110:=============================>                       (62 + 51) / 113][Stage 110:==================================>                  (74 + 39) / 113][Stage 110:===========================================>         (93 + 20) / 113][Stage 110:==================================================>  (108 + 5) / 113]                                                                                [Stage 111:=============================>                       (63 + 51) / 114][Stage 111:====================================>                (78 + 36) / 114][Stage 111:==========================================>          (92 + 22) / 114][Stage 111:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.008457904 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=132", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=132,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433488674 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (59 + 54) / 113][Stage 112:===============================>                     (67 + 46) / 113][Stage 112:======================================>              (83 + 30) / 113][Stage 112:==============================================>     (102 + 11) / 113][Stage 112:===================================================> (110 + 3) / 113]                                                                                [Stage 113:============================>                        (61 + 53) / 114][Stage 113:===================================>                 (76 + 38) / 114][Stage 113:=========================================>           (90 + 24) / 114][Stage 113:=================================================>   (107 + 7) / 114][Stage 113:=====================================================(114 + 0) / 114]                                                                                Time elapsed: 3.194818105 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=242", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=242,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385562685 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (58 + 55) / 113][Stage 114:==============================>                      (64 + 49) / 113][Stage 114:===================================>                 (75 + 38) / 113][Stage 114:===========================================>         (93 + 20) / 113][Stage 114:===================================================> (109 + 4) / 113]                                                                                [Stage 115:============================>                        (62 + 52) / 114][Stage 115:=================================>                   (73 + 41) / 114][Stage 115:=========================================>           (90 + 24) / 114][Stage 115:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.065021427 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=202", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=202,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.524489796 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:=================================>                   (72 + 43) / 115][Stage 116:========================================>            (87 + 28) / 115][Stage 116:==============================================>     (103 + 12) / 115]                                                                                [Stage 117:================================>                    (71 + 45) / 116][Stage 117:====================================>                (79 + 37) / 116][Stage 117:============================================>       (100 + 16) / 116][Stage 117:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.732498642 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=104", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=104,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385936423 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:============================>                        (60 + 53) / 113][Stage 118:=================================>                   (72 + 41) / 113][Stage 118:=========================================>           (89 + 24) / 113][Stage 118:===================================================> (109 + 4) / 113][Stage 118:====================================================>(112 + 1) / 113]                                                                                [Stage 119:============================>                        (61 + 53) / 114][Stage 119:==================================>                  (75 + 39) / 114][Stage 119:=============================================>      (100 + 14) / 114][Stage 119:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.191676338 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357071881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:>                                                      (0 + 0) / 113][Stage 120:==================================>                  (73 + 40) / 113][Stage 120:==========================================>          (90 + 23) / 113][Stage 120:=============================================>       (98 + 15) / 113][Stage 120:==================================================>  (108 + 5) / 113][Stage 120:====================================================>(112 + 1) / 113]                                                                                [Stage 121:==================================>                  (75 + 39) / 114][Stage 121:========================================>            (87 + 27) / 114][Stage 121:============================================>        (96 + 18) / 114][Stage 121:==================================================>  (109 + 5) / 114][Stage 121:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.984289151 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=148", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=148,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372870707 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===============================>                     (68 + 47) / 115][Stage 122:=====================================>               (81 + 34) / 115][Stage 122:============================================>        (96 + 19) / 115][Stage 122:==================================================>  (110 + 5) / 115][Stage 122:====================================================>(114 + 1) / 115]                                                                                [Stage 123:================================>                    (71 + 45) / 116][Stage 123:=======================================>             (87 + 29) / 116][Stage 123:==============================================>     (104 + 12) / 116][Stage 123:===================================================> (113 + 3) / 116][Stage 123:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.912113375 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=131", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=131,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338938417 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:======================================>              (84 + 31) / 115][Stage 124:========================================>            (88 + 27) / 115][Stage 124:=============================================>       (99 + 16) / 115][Stage 124:===================================================> (111 + 4) / 115]                                                                                [Stage 125:======================================>              (84 + 32) / 116][Stage 125:==========================================>          (94 + 22) / 116][Stage 125:===================================================> (112 + 4) / 116][Stage 125:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.810485798 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=224", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=224,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344116464 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=====================================>               (81 + 34) / 115][Stage 126:=========================================>           (89 + 26) / 115][Stage 126:=============================================>      (100 + 15) / 115][Stage 126:==================================================>  (110 + 5) / 115]                                                                                [Stage 127:=====================================>               (83 + 33) / 116][Stage 127:==========================================>          (93 + 23) / 116][Stage 127:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.704247997 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=13", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=13,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49556632 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:================================>                    (72 + 46) / 118][Stage 128:==================================>                  (77 + 41) / 118][Stage 128:========================================>            (90 + 28) / 118][Stage 128:=============================================>      (104 + 14) / 118][Stage 128:===================================================> (115 + 3) / 118]                                                                                [Stage 129:================================>                    (73 + 46) / 119][Stage 129:===================================>                 (79 + 40) / 119][Stage 129:========================================>            (92 + 27) / 119][Stage 129:==============================================>     (106 + 13) / 119][Stage 129:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.048270864 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=83", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=83,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401732119 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:============================>                        (60 + 53) / 113][Stage 130:==================================>                  (74 + 39) / 113][Stage 130:==========================================>          (91 + 22) / 113][Stage 130:===================================================> (109 + 4) / 113]                                                                                [Stage 131:============================>                        (62 + 52) / 114][Stage 131:===================================>                 (76 + 38) / 114][Stage 131:============================================>        (95 + 19) / 114][Stage 131:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.006309776 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365286276 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:================================>                    (72 + 46) / 118][Stage 132:==================================>                  (77 + 41) / 118][Stage 132:====================================>                (82 + 36) / 118][Stage 132:============================================>        (98 + 20) / 118][Stage 132:==================================================>  (112 + 6) / 118]                                                                                [Stage 133:================================>                    (74 + 45) / 119][Stage 133:===================================>                 (79 + 40) / 119][Stage 133:====================================>                (82 + 37) / 119][Stage 133:==========================================>          (96 + 23) / 119][Stage 133:================================================>    (110 + 9) / 119]                                                                                Time elapsed: 3.315776907 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=105", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=105,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386628011 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=================================>                   (72 + 43) / 115][Stage 134:========================================>            (88 + 27) / 115][Stage 134:==============================================>     (103 + 12) / 115][Stage 134:==================================================>  (110 + 5) / 115][Stage 134:====================================================>(114 + 1) / 115]                                                                                [Stage 135:=================================>                   (74 + 42) / 116][Stage 135:=========================================>           (90 + 26) / 116][Stage 135:==============================================>     (104 + 12) / 116][Stage 135:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.89298714 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=161", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=161,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338849346 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:====================================>                (80 + 35) / 115][Stage 136:=======================================>             (86 + 29) / 115][Stage 136:============================================>        (96 + 19) / 115][Stage 136:===================================================> (111 + 4) / 115]                                                                                [Stage 137:=======================================>             (87 + 29) / 116][Stage 137:=============================================>       (99 + 17) / 116][Stage 137:===================================================> (112 + 4) / 116][Stage 137:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.751893149 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=10", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=10,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335086444 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:====================================>                (80 + 35) / 115][Stage 138:=========================================>           (91 + 24) / 115][Stage 138:=============================================>       (99 + 16) / 115][Stage 138:====================================================>(113 + 2) / 115]                                                                                [Stage 139:=====================================>               (81 + 35) / 116][Stage 139:=====================================>               (83 + 33) / 116][Stage 139:=========================================>           (91 + 25) / 116][Stage 139:===============================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.808669667 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409065869 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 61) / 121][Stage 140:===========================>                         (62 + 59) / 121][Stage 140:================================>                    (75 + 46) / 121][Stage 140:=============================================>      (105 + 16) / 121][Stage 140:====================================================>(119 + 2) / 121]                                                                                [Stage 141:==========================>                          (61 + 61) / 122][Stage 141:============================>                        (66 + 56) / 122][Stage 141:===================================>                 (82 + 40) / 122][Stage 141:==============================================>     (108 + 14) / 122][Stage 141:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.008124469 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=136", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=136,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337982376 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:======================================>              (84 + 31) / 115][Stage 142:============================================>        (96 + 19) / 115][Stage 142:==================================================>  (110 + 5) / 115][Stage 142:====================================================>(113 + 2) / 115]                                                                                [Stage 143:======================================>              (85 + 31) / 116][Stage 143:============================================>        (97 + 19) / 116][Stage 143:=================================================>   (108 + 8) / 116][Stage 143:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.893135723 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372386803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=============================>                       (64 + 51) / 115][Stage 144:=====================================>               (81 + 34) / 115][Stage 144:=============================================>       (98 + 17) / 115][Stage 144:====================================================>(113 + 2) / 115][Stage 144:====================================================>(114 + 1) / 115]                                                                                [Stage 145:================================>                    (71 + 45) / 116][Stage 145:======================================>              (85 + 31) / 116][Stage 145:=============================================>      (101 + 15) / 116][Stage 145:==================================================>  (110 + 6) / 116][Stage 145:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.888882245 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=113", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=113,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361681563 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:================================>                    (72 + 46) / 118][Stage 146:================================>                    (73 + 45) / 118][Stage 146:====================================>                (81 + 37) / 118][Stage 146:============================================>        (98 + 20) / 118][Stage 146:================================================>    (109 + 9) / 118][Stage 146:==================================================>  (113 + 5) / 118]                                                                                [Stage 147:================================>                    (74 + 45) / 119][Stage 147:===================================>                 (79 + 40) / 119][Stage 147:=======================================>             (89 + 30) / 119][Stage 147:============================================>       (101 + 18) / 119][Stage 147:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.518865143 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387713064 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (58 + 55) / 113][Stage 148:==============================>                      (65 + 48) / 113][Stage 148:=====================================>               (80 + 33) / 113][Stage 148:=============================================>       (97 + 16) / 113][Stage 148:====================================================>(111 + 2) / 113]                                                                                [Stage 149:===========================>                         (59 + 55) / 114][Stage 149:==============================>                      (65 + 49) / 114][Stage 149:=======================================>             (86 + 28) / 114][Stage 149:=================================================>   (106 + 8) / 114][Stage 149:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.091312943 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=191", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=191,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338516792 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:=====================================>               (81 + 34) / 115][Stage 150:=======================================>             (85 + 30) / 115][Stage 150:=============================================>      (101 + 14) / 115][Stage 150:=================================================>   (108 + 7) / 115][Stage 150:==================================================>  (109 + 6) / 115]                                                                                [Stage 151:======================================>              (84 + 32) / 116][Stage 151:========================================>            (89 + 27) / 116][Stage 151:==============================================>     (104 + 12) / 116][Stage 151:==================================================>  (111 + 5) / 116][Stage 151:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.134976545 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=92", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=92,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361363195 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==================================>                  (74 + 39) / 113][Stage 152:=======================================>             (84 + 29) / 113][Stage 152:============================================>        (94 + 19) / 113][Stage 152:==============================================>     (101 + 12) / 113][Stage 152:===================================================> (110 + 3) / 113]                                                                                [Stage 153:=====================================>               (80 + 34) / 114][Stage 153:==========================================>          (91 + 23) / 114][Stage 153:==============================================>      (99 + 15) / 114][Stage 153:================================================>    (105 + 9) / 114][Stage 153:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.189758387 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406360679 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:============================>                        (64 + 57) / 121][Stage 154:==================================>                  (78 + 43) / 121][Stage 154:===========================================>        (101 + 20) / 121][Stage 154:==================================================>  (115 + 6) / 121]                                                                                [Stage 155:==========================>                          (61 + 61) / 122][Stage 155:============================>                        (66 + 56) / 122][Stage 155:===================================>                 (81 + 41) / 122][Stage 155:============================================>       (105 + 17) / 122][Stage 155:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 2.94398925 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=33", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=33,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389769246 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===================================>                 (78 + 37) / 115][Stage 156:============================================>        (96 + 19) / 115][Stage 156:===============================================>    (104 + 11) / 115]                                                                                [Stage 157:==================================>                  (75 + 41) / 116][Stage 157:=========================================>           (90 + 26) / 116][Stage 157:==================================================>  (111 + 5) / 116][Stage 157:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.898177085 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=204", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=204,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351525876 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==================================>                  (74 + 39) / 113][Stage 158:========================================>            (87 + 26) / 113][Stage 158:============================================>        (94 + 19) / 113][Stage 158:================================================>    (104 + 9) / 113][Stage 158:====================================================>(111 + 2) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:===================================>                 (77 + 37) / 114][Stage 159:==========================================>          (91 + 23) / 114][Stage 159:=============================================>       (97 + 17) / 114][Stage 159:==================================================>  (109 + 5) / 114][Stage 159:===================================================> (111 + 3) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.312572608 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=78", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=78,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362921137 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:====================================>                (78 + 35) / 113][Stage 160:===========================================>         (93 + 20) / 113][Stage 160:=============================================>       (98 + 15) / 113][Stage 160:===================================================> (110 + 3) / 113]                                                                                [Stage 161:=======================================>             (84 + 30) / 114][Stage 161:==========================================>          (92 + 22) / 114][Stage 161:==============================================>     (103 + 11) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.864405211 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34378439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:=====================================>               (82 + 33) / 115][Stage 162:=========================================>           (91 + 24) / 115][Stage 162:================================================>    (106 + 9) / 115][Stage 162:===================================================> (111 + 4) / 115]                                                                                [Stage 163:======================================>              (84 + 32) / 116][Stage 163:==========================================>          (94 + 22) / 116][Stage 163:===============================================>    (106 + 10) / 116][Stage 163:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.784340722 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=46", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=46,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332384767 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:======================================>              (83 + 32) / 115][Stage 164:=========================================>           (89 + 26) / 115][Stage 164:==============================================>     (102 + 13) / 115][Stage 164:==================================================>  (110 + 5) / 115]                                                                                [Stage 165:=======================================>             (86 + 30) / 116][Stage 165:============================================>        (98 + 18) / 116][Stage 165:===============================================>    (106 + 10) / 116][Stage 165:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.017571035 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=112", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=112,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332974028 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:======================================>              (83 + 32) / 115][Stage 166:=========================================>           (89 + 26) / 115][Stage 166:=================================================>   (108 + 7) / 115][Stage 166:====================================================>(113 + 2) / 115]                                                                                [Stage 167:======================================>              (84 + 32) / 116][Stage 167:==========================================>          (92 + 24) / 116][Stage 167:==================================================>  (110 + 6) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.799265535 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413893865 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (61 + 60) / 121][Stage 168:=================================>                   (76 + 45) / 121][Stage 168:============================================>       (103 + 18) / 121][Stage 168:=================================================>   (112 + 9) / 121]                                                                                [Stage 169:==========================>                          (61 + 61) / 122][Stage 169:=============================>                       (68 + 54) / 122][Stage 169:=======================================>             (90 + 32) / 122][Stage 169:==================================================>  (117 + 5) / 122][Stage 169:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.186160859 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=5", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=5,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334771695 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:======================================>              (84 + 31) / 115][Stage 170:===========================================>         (94 + 21) / 115][Stage 170:=================================================>   (107 + 8) / 115][Stage 170:===================================================> (111 + 4) / 115]                                                                                [Stage 171:======================================>              (85 + 31) / 116][Stage 171:===========================================>         (96 + 20) / 116][Stage 171:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.896262492 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=62", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=62,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357547316 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==================================>                  (74 + 39) / 113][Stage 172:==========================================>          (91 + 22) / 113][Stage 172:=============================================>       (97 + 16) / 113][Stage 172:=================================================>   (105 + 8) / 113]                                                                                [Stage 173:=====================================>               (81 + 33) / 114][Stage 173:==========================================>          (91 + 23) / 114][Stage 173:=============================================>      (100 + 14) / 114][Stage 173:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.982552085 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=239", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=239,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394315433 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (60 + 61) / 121][Stage 174:============================>                        (65 + 56) / 121][Stage 174:====================================>                (84 + 37) / 121][Stage 174:============================================>       (104 + 17) / 121][Stage 174:==================================================>  (116 + 5) / 121]                                                                                [Stage 175:==========================>                          (61 + 61) / 122][Stage 175:==============================>                      (70 + 52) / 122][Stage 175:====================================>                (85 + 37) / 122][Stage 175:=================================================>   (115 + 7) / 122][Stage 175:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.180474219 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355681943 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (72 + 46) / 118][Stage 176:=================================>                   (74 + 44) / 118][Stage 176:====================================>                (81 + 37) / 118][Stage 176:========================================>            (91 + 27) / 118][Stage 176:===============================================>    (108 + 10) / 118][Stage 176:===================================================> (115 + 3) / 118]                                                                                [Stage 177:================================>                    (74 + 45) / 119][Stage 177:==================================>                  (78 + 41) / 119][Stage 177:====================================>                (81 + 38) / 119][Stage 177:========================================>            (92 + 27) / 119][Stage 177:=============================================>      (103 + 16) / 119][Stage 177:==================================================>  (114 + 5) / 119][Stage 177:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.559891271 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397885648 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (60 + 61) / 121][Stage 178:============================>                        (64 + 57) / 121][Stage 178:===================================>                 (81 + 40) / 121][Stage 178:===========================================>        (102 + 19) / 121][Stage 178:===================================================> (118 + 3) / 121]                                                                                [Stage 179:==========================>                          (61 + 61) / 122][Stage 179:=============================>                       (69 + 53) / 122][Stage 179:=====================================>               (86 + 36) / 122][Stage 179:=============================================>      (107 + 15) / 122][Stage 179:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 2.925411068 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=60", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=60,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358179892 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:================================>                    (70 + 43) / 113][Stage 180:====================================>                (77 + 36) / 113][Stage 180:==========================================>          (91 + 22) / 113][Stage 180:==============================================>      (99 + 14) / 113][Stage 180:===================================================> (109 + 4) / 113]                                                                                [Stage 181:======================================>              (82 + 32) / 114][Stage 181:==========================================>          (92 + 22) / 114][Stage 181:===============================================>    (104 + 10) / 114][Stage 181:===================================================> (111 + 3) / 114][Stage 181:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.285304434 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=111", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=111,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439010426 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (60 + 60) / 120][Stage 182:===========================>                         (63 + 57) / 120][Stage 182:=================================>                   (75 + 45) / 120][Stage 182:=========================================>           (94 + 26) / 120][Stage 182:===================================================> (116 + 4) / 120]                                                                                [Stage 183:============================>                        (64 + 57) / 121][Stage 183:=================================>                   (76 + 45) / 121][Stage 183:=========================================>           (94 + 27) / 121][Stage 183:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.058875576 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=65", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=65,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384770851 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:================================>                    (72 + 46) / 118][Stage 184:==================================>                  (77 + 41) / 118][Stage 184:=======================================>             (87 + 31) / 118][Stage 184:============================================>       (101 + 17) / 118][Stage 184:===================================================> (114 + 4) / 118]                                                                                [Stage 185:=================================>                   (75 + 44) / 119][Stage 185:=======================================>             (88 + 31) / 119][Stage 185:=============================================>      (103 + 16) / 119][Stage 185:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.982905192 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=125", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=125,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365872608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==============================>                      (66 + 49) / 115][Stage 186:====================================>                (80 + 35) / 115][Stage 186:=========================================>           (91 + 24) / 115][Stage 186:=============================================>       (99 + 16) / 115][Stage 186:==================================================>  (109 + 6) / 115][Stage 186:====================================================>(113 + 2) / 115]                                                                                [Stage 187:==============================>                      (66 + 50) / 116][Stage 187:===================================>                 (77 + 39) / 116][Stage 187:============================================>        (97 + 19) / 116][Stage 187:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.966287349 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414254066 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 61) / 121][Stage 188:============================>                        (66 + 55) / 121][Stage 188:=======================================>             (90 + 31) / 121][Stage 188:==============================================>     (109 + 12) / 121][Stage 188:====================================================>(119 + 2) / 121]                                                                                [Stage 189:==========================>                          (61 + 61) / 122][Stage 189:==============================>                      (70 + 52) / 122][Stage 189:==================================>                  (80 + 42) / 122][Stage 189:===========================================>        (103 + 19) / 122][Stage 189:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.000485097 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3910903 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:=============================>                       (64 + 51) / 115][Stage 190:===============================>                     (69 + 46) / 115][Stage 190:======================================>              (83 + 32) / 115][Stage 190:============================================>        (97 + 18) / 115][Stage 190:===================================================> (112 + 3) / 115]                                                                                [Stage 191:==================================>                  (75 + 41) / 116][Stage 191:==========================================>          (93 + 23) / 116][Stage 191:===============================================>    (105 + 11) / 116][Stage 191:=================================================>   (109 + 7) / 116][Stage 191:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.34693672 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349824176 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:====================================>                (77 + 36) / 113][Stage 192:==========================================>          (90 + 23) / 113][Stage 192:=============================================>       (96 + 17) / 113][Stage 192:==================================================>  (107 + 6) / 113][Stage 192:====================================================>(111 + 2) / 113]                                                                                [Stage 193:======================================>              (82 + 32) / 114][Stage 193:===========================================>         (93 + 21) / 114][Stage 193:===============================================>    (104 + 10) / 114][Stage 193:===================================================> (110 + 4) / 114][Stage 193:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.200988841 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=141", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=141,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411038242 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 61) / 121][Stage 194:==========================>                          (61 + 60) / 121][Stage 194:=================================>                   (76 + 45) / 121][Stage 194:==========================================>          (98 + 23) / 121][Stage 194:===================================================> (117 + 4) / 121]                                                                                [Stage 195:==========================>                          (62 + 60) / 122][Stage 195:===================================>                 (82 + 40) / 122][Stage 195:==========================================>         (100 + 22) / 122][Stage 195:==============================================>     (110 + 12) / 122]                                                                                Time elapsed: 3.057027833 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=186", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=186,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372134593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:================================>                    (73 + 45) / 118][Stage 196:=====================================>               (84 + 34) / 118][Stage 196:============================================>       (102 + 16) / 118][Stage 196:================================================>    (109 + 9) / 118][Stage 196:====================================================>(116 + 2) / 118]                                                                                [Stage 197:====================================>                (81 + 38) / 119][Stage 197:========================================>            (90 + 29) / 119][Stage 197:============================================>       (102 + 17) / 119][Stage 197:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.138151032 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=137", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=137,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391350833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===================================>                 (77 + 38) / 115][Stage 198:========================================>            (87 + 28) / 115][Stage 198:=============================================>       (98 + 17) / 115][Stage 198:==================================================>  (110 + 5) / 115]                                                                                [Stage 199:===================================>                 (78 + 38) / 116][Stage 199:============================================>        (98 + 18) / 116][Stage 199:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.669831933 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36118767 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:================================>                    (72 + 46) / 118][Stage 200:=================================>                   (74 + 44) / 118][Stage 200:===================================>                 (80 + 38) / 118][Stage 200:======================================>              (86 + 32) / 118][Stage 200:============================================>       (101 + 17) / 118][Stage 200:===================================================> (115 + 3) / 118]                                                                                [Stage 201:================================>                    (74 + 45) / 119][Stage 201:===================================>                 (80 + 39) / 119][Stage 201:=======================================>             (89 + 30) / 119][Stage 201:==============================================>     (107 + 12) / 119][Stage 201:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.534066055 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m49.819s
user	11m27.456s
sys	0m28.832s
