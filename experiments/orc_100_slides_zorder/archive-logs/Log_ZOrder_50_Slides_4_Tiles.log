Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 21:43:25 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 21:43:39 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 21:43:39 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 21:43:40 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 21:43:42 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 21:43:53 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524214342-0598).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 4.289008122 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:===========================>                           (57 + 58) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:=====================================>                 (78 + 37) / 115][Stage 0:=========================================>             (86 + 29) / 115][Stage 0:============================================>          (92 + 23) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:====================================================>  (109 + 6) / 115][Stage 0:====================================================>  (110 + 5) / 115]                                                                                [Stage 1:=========================>                             (53 + 63) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:=================================>                     (71 + 45) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:======================================>                (81 + 35) / 116][Stage 1:===========================================>           (92 + 24) / 116][Stage 1:==============================================>       (100 + 16) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.604595878 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 38 AND partitionZIndex<=141", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.791405161 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===========================>                           (56 + 57) / 113][Stage 2:=================================>                     (68 + 45) / 113][Stage 2:==================================>                    (71 + 42) / 113][Stage 2:====================================>                  (76 + 37) / 113][Stage 2:========================================>              (83 + 30) / 113][Stage 2:===========================================>           (89 + 24) / 113][Stage 2:===============================================>       (97 + 16) / 113][Stage 2:===================================================>   (105 + 8) / 113][Stage 2:=====================================================> (110 + 3) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:==================================>                    (71 + 43) / 114][Stage 3:====================================>                  (76 + 38) / 114][Stage 3:======================================>                (80 + 34) / 114][Stage 3:==========================================>            (88 + 26) / 114][Stage 3:==============================================>        (96 + 18) / 114][Stage 3:================================================>     (103 + 11) / 114][Stage 3:===================================================>   (107 + 7) / 114][Stage 3:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 5.175506921 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 4 AND partitionZIndex<=17", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=17,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.608404412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===================================>                   (74 + 41) / 115][Stage 4:====================================>                  (77 + 38) / 115][Stage 4:=======================================>               (83 + 32) / 115][Stage 4:=========================================>             (87 + 28) / 115][Stage 4:============================================>          (93 + 22) / 115][Stage 4:==============================================>       (100 + 15) / 115][Stage 4:=================================================>    (105 + 10) / 115][Stage 4:====================================================>  (110 + 5) / 115][Stage 4:=====================================================> (112 + 3) / 115]                                                                                [Stage 5:======================================>                (82 + 34) / 116][Stage 5:=======================================>               (84 + 32) / 116][Stage 5:===========================================>           (92 + 24) / 116][Stage 5:==============================================>        (99 + 17) / 116][Stage 5:===================================================>   (108 + 8) / 116][Stage 5:======================================================>(114 + 2) / 116][Stage 5:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.91908596 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 4 AND partitionZIndex<=67", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=67,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.649181131 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==========================>                            (54 + 59) / 113][Stage 6:==============================>                        (62 + 51) / 113][Stage 6:===================================>                   (73 + 40) / 113][Stage 6:======================================>                (79 + 34) / 113][Stage 6:============================================>          (91 + 22) / 113][Stage 6:================================================>     (102 + 11) / 113][Stage 6:======================================================>(112 + 1) / 113]                                                                                [Stage 7:============================>                          (60 + 54) / 114][Stage 7:================================>                      (68 + 46) / 114][Stage 7:====================================>                  (76 + 38) / 114][Stage 7:==========================================>            (89 + 25) / 114][Stage 7:===============================================>       (99 + 15) / 114][Stage 7:=====================================================> (110 + 4) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.651666399 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 8 AND partitionZIndex<=41", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=41,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.531436394 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=====================================>                 (78 + 37) / 115][Stage 8:======================================>                (80 + 35) / 115][Stage 8:=========================================>             (86 + 29) / 115][Stage 8:============================================>          (93 + 22) / 115][Stage 8:================================================>     (104 + 11) / 115][Stage 8:=====================================================> (111 + 4) / 115]                                                                                [Stage 9:======================================>                (82 + 34) / 116][Stage 9:============================================>          (93 + 23) / 116][Stage 9:==============================================>        (98 + 18) / 116][Stage 9:================================================>     (105 + 11) / 116][Stage 9:==================================================>    (107 + 9) / 116][Stage 9:====================================================>  (110 + 6) / 116][Stage 9:=====================================================> (113 + 3) / 116][Stage 9:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.162506399 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 8 AND partitionZIndex<=71", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.498541929 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===================================>                  (74 + 39) / 113][Stage 10:========================================>             (85 + 28) / 113][Stage 10:==========================================>           (89 + 24) / 113][Stage 10:==============================================>       (98 + 15) / 113][Stage 10:==================================================>   (106 + 7) / 113][Stage 10:====================================================> (109 + 4) / 113]                                                                                [Stage 11:==================================>                   (73 + 41) / 114][Stage 11:==========================================>           (89 + 25) / 114][Stage 11:==============================================>      (100 + 14) / 114][Stage 11:===================================================>  (109 + 5) / 114][Stage 11:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.625108344 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 84 AND partitionZIndex<=187", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.630949325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 12:=========================>                            (58 + 63) / 121][Stage 12:==========================>                           (60 + 61) / 121][Stage 12:=============================>                        (66 + 55) / 121][Stage 12:=====================================>                (85 + 36) / 121][Stage 12:=========================================>            (93 + 28) / 121][Stage 12:==============================================>      (106 + 15) / 121][Stage 12:====================================================> (117 + 4) / 121]                                                                                [Stage 13:===========================>                          (62 + 60) / 122][Stage 13:===================================>                  (80 + 42) / 122][Stage 13:==========================================>           (95 + 27) / 122][Stage 13:===========================================>         (101 + 21) / 122][Stage 13:================================================>    (111 + 11) / 122][Stage 13:=====================================================>(120 + 2) / 122][Stage 13:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.597397943 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 78 AND partitionZIndex<=181", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=181,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.549128658 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 14:=============================>                        (63 + 52) / 115][Stage 14:===============================>                      (68 + 47) / 115][Stage 14:========================================>             (86 + 29) / 115][Stage 14:==============================================>      (100 + 15) / 115][Stage 14:=================================================>    (106 + 9) / 115][Stage 14:=====================================================>(113 + 2) / 115]                                                                                [Stage 15:===============================>                      (68 + 48) / 116][Stage 15:====================================>                 (78 + 38) / 116][Stage 15:==========================================>           (92 + 24) / 116][Stage 15:==================================================>   (108 + 8) / 116][Stage 15:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.458619093 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 3 AND partitionZIndex<=26", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.58372483 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=========================>                            (57 + 64) / 121][Stage 16:============================>                         (63 + 58) / 121][Stage 16:=====================================>                (83 + 38) / 121][Stage 16:============================================>        (101 + 20) / 121][Stage 16:==================================================>   (113 + 8) / 121][Stage 16:====================================================> (117 + 4) / 121]                                                                                [Stage 17:=========================>                            (57 + 65) / 122][Stage 17:=============================>                        (66 + 56) / 122][Stage 17:==================================>                   (78 + 44) / 122][Stage 17:==========================================>           (95 + 27) / 122][Stage 17:==============================================>      (106 + 16) / 122][Stage 17:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.919022171 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 0 AND partitionZIndex<=83", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=83,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.469812512 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 18:================================>                     (71 + 47) / 118][Stage 18:================================>                     (72 + 46) / 118][Stage 18:===================================>                  (78 + 40) / 118][Stage 18:=============================================>        (99 + 19) / 118][Stage 18:==================================================>   (111 + 7) / 118][Stage 18:=====================================================>(116 + 2) / 118]                                                                                [Stage 19:=================================>                    (73 + 46) / 119][Stage 19:====================================>                 (80 + 39) / 119][Stage 19:==========================================>           (93 + 26) / 119][Stage 19:=============================================>       (102 + 17) / 119][Stage 19:==================================================>   (111 + 8) / 119][Stage 19:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.772829439 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 23 AND partitionZIndex<=126", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=126,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.479664583 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 20:=================================>                    (70 + 43) / 113][Stage 20:=====================================>                (79 + 34) / 113][Stage 20:===========================================>          (92 + 21) / 113][Stage 20:=================================================>    (104 + 9) / 113][Stage 20:====================================================> (110 + 3) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:====================================>                 (77 + 37) / 114][Stage 21:==========================================>           (90 + 24) / 114][Stage 21:==============================================>       (98 + 16) / 114][Stage 21:====================================================> (110 + 4) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.211361877 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 66 AND partitionZIndex<=169", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=169,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.544018682 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 22:==========================>                           (60 + 61) / 121][Stage 22:=============================>                        (65 + 56) / 121][Stage 22:====================================>                 (81 + 40) / 121][Stage 22:==============================================>      (106 + 15) / 121][Stage 22:==================================================>   (114 + 7) / 121][Stage 22:====================================================> (117 + 4) / 121][Stage 22:=====================================================>(120 + 1) / 121]                                                                                [Stage 23:===========================>                          (61 + 61) / 122][Stage 23:============================>                         (65 + 57) / 122][Stage 23:===================================>                  (80 + 42) / 122][Stage 23:==============================================>      (106 + 16) / 122][Stage 23:==================================================>   (115 + 7) / 122][Stage 23:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.889629692 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 34 AND partitionZIndex<=237", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=237,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.543439144 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (60 + 61) / 121][Stage 24:==============================>                       (68 + 53) / 121][Stage 24:=====================================>                (84 + 37) / 121][Stage 24:===============================================>     (109 + 12) / 121]                                                                                [Stage 25:===========================>                          (61 + 61) / 122][Stage 25:=============================>                        (66 + 56) / 122][Stage 25:========================================>             (91 + 31) / 122][Stage 25:================================================>    (111 + 11) / 122][Stage 25:====================================================> (119 + 3) / 122][Stage 25:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.486271328 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 5 AND partitionZIndex<=68", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=68,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.505038691 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (60 + 60) / 120][Stage 26:===========================>                          (61 + 59) / 120][Stage 26:==============================>                       (68 + 52) / 120][Stage 26:=======================================>              (88 + 32) / 120][Stage 26:================================================>    (109 + 11) / 120][Stage 26:====================================================> (117 + 3) / 120][Stage 26:=====================================================>(119 + 1) / 120]                                                                                [Stage 27:============================>                         (64 + 57) / 121][Stage 27:==================================>                   (77 + 44) / 121][Stage 27:==========================================>           (95 + 26) / 121][Stage 27:==============================================>      (107 + 14) / 121][Stage 27:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.884165078 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 86 AND partitionZIndex<=189", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=189,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.426416363 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 28:==================================>                   (72 + 41) / 113][Stage 28:=========================================>            (86 + 27) / 113][Stage 28:===============================================>     (101 + 12) / 113][Stage 28:==================================================>   (106 + 7) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:====================================>                 (78 + 36) / 114][Stage 29:=========================================>            (87 + 27) / 114][Stage 29:=============================================>        (97 + 17) / 114][Stage 29:==================================================>   (107 + 7) / 114][Stage 29:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.427058962 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 60 AND partitionZIndex<=163", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=163,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.518981928 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (59 + 61) / 120][Stage 30:===========================>                          (62 + 58) / 120][Stage 30:====================================>                 (81 + 39) / 120][Stage 30:=============================================>       (103 + 17) / 120][Stage 30:=====================================================>(119 + 1) / 120]                                                                                [Stage 31:===========================>                          (61 + 60) / 121][Stage 31:================================>                     (72 + 49) / 121][Stage 31:=========================================>            (93 + 28) / 121][Stage 31:==================================================>   (114 + 7) / 121][Stage 31:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.492108274 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 5 AND partitionZIndex<=98", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=98,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.54135497 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (60 + 60) / 120][Stage 32:============================>                         (63 + 57) / 120][Stage 32:==================================>                   (77 + 43) / 120][Stage 32:=========================================>            (93 + 27) / 120][Stage 32:===================================================>  (115 + 5) / 120]                                                                                [Stage 33:===========================>                          (61 + 60) / 121][Stage 33:=============================>                        (65 + 56) / 121][Stage 33:======================================>               (86 + 35) / 121][Stage 33:==================================================>   (113 + 8) / 121][Stage 33:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.408352312 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 2 AND partitionZIndex<=75", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=75,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.503092097 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 34:==========================>                           (60 + 61) / 121][Stage 34:============================>                         (64 + 57) / 121][Stage 34:=================================>                    (76 + 45) / 121][Stage 34:=============================================>       (105 + 16) / 121][Stage 34:====================================================> (118 + 3) / 121]                                                                                [Stage 35:===========================>                          (62 + 60) / 122][Stage 35:=================================>                    (76 + 46) / 122][Stage 35:==========================================>           (96 + 26) / 122][Stage 35:====================================================> (118 + 4) / 122][Stage 35:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.396977874 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 2 AND partitionZIndex<=25", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=25,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.526895441 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (60 + 60) / 120][Stage 36:=============================>                        (66 + 54) / 120][Stage 36:==================================>                   (76 + 44) / 120][Stage 36:==========================================>           (94 + 26) / 120][Stage 36:=================================================>    (111 + 9) / 120][Stage 36:=====================================================>(119 + 1) / 120]                                                                                [Stage 37:===========================>                          (61 + 60) / 121][Stage 37:=============================>                        (67 + 54) / 121][Stage 37:=====================================>                (85 + 36) / 121][Stage 37:==============================================>      (106 + 15) / 121][Stage 37:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.318787815 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 99 AND partitionZIndex<=202", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.471249212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 38:=================================>                    (73 + 45) / 118][Stage 38:====================================>                 (80 + 38) / 118][Stage 38:=============================================>        (99 + 19) / 118][Stage 38:=====================================================>(117 + 1) / 118]                                                                                [Stage 39:==================================>                   (77 + 42) / 119][Stage 39:=========================================>            (91 + 28) / 119][Stage 39:==============================================>      (104 + 15) / 119][Stage 39:====================================================> (115 + 4) / 119][Stage 39:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.577384465 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 27 AND partitionZIndex<=230", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=230,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.450680095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===============================>                      (68 + 47) / 115][Stage 40:====================================>                 (78 + 37) / 115][Stage 40:===============================================>     (103 + 12) / 115][Stage 40:====================================================> (112 + 3) / 115][Stage 40:=====================================================>(114 + 1) / 115]                                                                                [Stage 41:==============================>                       (66 + 50) / 116][Stage 41:==================================>                   (75 + 41) / 116][Stage 41:============================================>         (96 + 20) / 116][Stage 41:===================================================>  (110 + 6) / 116][Stage 41:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.051666953 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 34 AND partitionZIndex<=137", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=137,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.516729077 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==========================>                           (60 + 61) / 121][Stage 42:===========================>                          (62 + 59) / 121][Stage 42:==================================>                   (77 + 44) / 121][Stage 42:============================================>        (102 + 19) / 121][Stage 42:====================================================> (117 + 4) / 121]                                                                                [Stage 43:===========================>                          (61 + 61) / 122][Stage 43:================================>                     (74 + 48) / 122][Stage 43:===========================================>         (101 + 21) / 122][Stage 43:===================================================>  (117 + 5) / 122][Stage 43:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.588384001 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 68 AND partitionZIndex<=171", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.414385804 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 44:================================>                     (72 + 46) / 118][Stage 44:=====================================>                (83 + 35) / 118][Stage 44:===============================================>     (106 + 12) / 118][Stage 44:====================================================> (115 + 3) / 118][Stage 44:=====================================================>(116 + 2) / 118]                                                                                [Stage 45:=================================>                    (73 + 46) / 119][Stage 45:==================================>                   (76 + 43) / 119][Stage 45:========================================>             (90 + 29) / 119][Stage 45:================================================>    (109 + 10) / 119][Stage 45:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.300259347 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 24 AND partitionZIndex<=227", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=227,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.424208795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 46:=================================>                    (71 + 44) / 115][Stage 46:========================================>             (86 + 29) / 115][Stage 46:==============================================>       (98 + 17) / 115][Stage 46:==================================================>   (107 + 8) / 115][Stage 46:=====================================================>(113 + 2) / 115]                                                                                [Stage 47:=================================>                    (71 + 45) / 116][Stage 47:========================================>             (87 + 29) / 116][Stage 47:================================================>    (106 + 10) / 116][Stage 47:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.094517587 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 21 AND partitionZIndex<=124", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=124,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.487088015 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==========================>                           (60 + 61) / 121][Stage 48:============================>                         (63 + 58) / 121][Stage 48:==================================>                   (78 + 43) / 121][Stage 48:================================================>    (110 + 11) / 121][Stage 48:=====================================================>(119 + 2) / 121]                                                                                [Stage 49:============================>                         (64 + 58) / 122][Stage 49:==============================>                       (70 + 52) / 122][Stage 49:=======================================>              (90 + 32) / 122][Stage 49:================================================>    (112 + 10) / 122][Stage 49:====================================================> (118 + 4) / 122][Stage 49:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.715333119 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 2 AND partitionZIndex<=65", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=65,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.464497756 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (61 + 60) / 121][Stage 50:==============================>                       (69 + 52) / 121][Stage 50:========================================>             (90 + 31) / 121][Stage 50:================================================>    (111 + 10) / 121]                                                                                [Stage 51:===========================>                          (62 + 60) / 122][Stage 51:=================================>                    (75 + 47) / 122][Stage 51:========================================>             (91 + 31) / 122][Stage 51:================================================>    (112 + 10) / 122][Stage 51:=====================================================>(120 + 2) / 122][Stage 51:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.486411498 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 75 AND partitionZIndex<=178", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=178,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.444475399 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 52:>                                                       (0 + 0) / 121][Stage 52:==========================>                           (60 + 61) / 121][Stage 52:============================>                         (64 + 57) / 121][Stage 52:=================================>                    (74 + 47) / 121][Stage 52:==============================================>      (107 + 14) / 121][Stage 52:===================================================>  (116 + 5) / 121]                                                                                [Stage 53:===========================>                          (62 + 60) / 122][Stage 53:==================================>                   (77 + 45) / 122][Stage 53:===========================================>          (99 + 23) / 122][Stage 53:===================================================>  (117 + 5) / 122][Stage 53:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.587366246 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 9 AND partitionZIndex<=92", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=92,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.41269729 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=================================>                    (72 + 43) / 115][Stage 54:==========================================>           (90 + 25) / 115][Stage 54:================================================>    (105 + 10) / 115][Stage 54:=====================================================>(113 + 2) / 115]                                                                                [Stage 55:=================================>                    (71 + 45) / 116][Stage 55:========================================>             (86 + 30) / 116][Stage 55:===============================================>     (104 + 12) / 116][Stage 55:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.010688873 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 82 AND partitionZIndex<=185", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=185,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.371916533 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 56:=====================================>                (80 + 35) / 115][Stage 56:=======================================>              (85 + 30) / 115][Stage 56:===========================================>          (92 + 23) / 115][Stage 56:==================================================>   (108 + 7) / 115][Stage 56:=====================================================>(113 + 2) / 115][Stage 56:=====================================================>(114 + 1) / 115]                                                                                [Stage 57:=======================================>              (84 + 32) / 116][Stage 57:==========================================>           (91 + 25) / 116][Stage 57:=============================================>        (97 + 19) / 116][Stage 57:===============================================>     (104 + 12) / 116]                                                                                Time elapsed: 3.024523535 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 47 AND partitionZIndex<=150", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=150,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.404755866 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 58:================================>                     (71 + 47) / 118][Stage 58:==================================>                   (76 + 42) / 118][Stage 58:======================================>               (85 + 33) / 118][Stage 58:============================================>         (98 + 20) / 118][Stage 58:==================================================>   (111 + 7) / 118]                                                                                [Stage 59:=================================>                    (74 + 45) / 119][Stage 59:=======================================>              (86 + 33) / 119][Stage 59:=============================================>       (102 + 17) / 119][Stage 59:==================================================>   (112 + 7) / 119][Stage 59:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.412437316 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 29 AND partitionZIndex<=132", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.464212424 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (58 + 55) / 113][Stage 60:==============================>                       (64 + 49) / 113][Stage 60:========================================>             (84 + 29) / 113][Stage 60:=================================================>    (104 + 9) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:===========================>                          (59 + 55) / 114][Stage 61:================================>                     (68 + 46) / 114][Stage 61:=======================================>              (83 + 31) / 114][Stage 61:=============================================>        (96 + 18) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.259569322 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 5 AND partitionZIndex<=18", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=18,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.38552275 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 62:======================================>               (81 + 34) / 115][Stage 62:=======================================>              (85 + 30) / 115][Stage 62:============================================>         (95 + 20) / 115][Stage 62:====================================================> (112 + 3) / 115][Stage 62:=====================================================>(114 + 1) / 115]                                                                                [Stage 63:======================================>               (82 + 34) / 116][Stage 63:========================================>             (87 + 29) / 116][Stage 63:============================================>         (95 + 21) / 116][Stage 63:================================================>    (106 + 10) / 116][Stage 63:===================================================>  (111 + 5) / 116][Stage 63:=====================================================>(114 + 2) / 116][Stage 63:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.12960749 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 0 AND partitionZIndex<=73", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=73,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.435348339 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==============================>                       (65 + 50) / 115][Stage 64:=======================================>              (84 + 31) / 115][Stage 64:==============================================>      (101 + 14) / 115][Stage 64:==================================================>   (107 + 8) / 115][Stage 64:=====================================================>(114 + 1) / 115]                                                                                [Stage 65:=======================================>              (85 + 31) / 116][Stage 65:==============================================>       (99 + 17) / 116][Stage 65:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.909606968 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 3 AND partitionZIndex<=46", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=46,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.426301412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (58 + 55) / 113][Stage 66:============================>                         (60 + 53) / 113][Stage 66:================================>                     (68 + 45) / 113][Stage 66:=======================================>              (83 + 30) / 113][Stage 66:================================================>    (103 + 10) / 113][Stage 66:====================================================> (109 + 4) / 113][Stage 66:=====================================================>(112 + 1) / 113]                                                                                [Stage 67:============================>                         (60 + 54) / 114][Stage 67:===============================>                      (66 + 48) / 114][Stage 67:====================================>                 (77 + 37) / 114][Stage 67:=============================================>        (95 + 19) / 114][Stage 67:====================================================> (111 + 3) / 114][Stage 67:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.054640847 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 88 AND partitionZIndex<=191", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=191,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.366849176 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 68:======================================>               (82 + 33) / 115][Stage 68:===========================================>          (93 + 22) / 115][Stage 68:===================================================>  (110 + 5) / 115][Stage 68:=====================================================>(114 + 1) / 115]                                                                                [Stage 69:========================================>             (86 + 30) / 116][Stage 69:===========================================>          (94 + 22) / 116][Stage 69:===============================================>     (105 + 11) / 116]                                                                                Time elapsed: 2.616073142 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 1 AND partitionZIndex<=74", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=74,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.424387173 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (58 + 55) / 113][Stage 70:==============================>                       (63 + 50) / 113][Stage 70:==========================================>           (89 + 24) / 113][Stage 70:================================================>    (103 + 10) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:============================>                         (60 + 54) / 114][Stage 71:===============================>                      (66 + 48) / 114][Stage 71:==========================================>           (90 + 24) / 114][Stage 71:==============================================>      (101 + 13) / 114][Stage 71:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.409067844 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 31 AND partitionZIndex<=234", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=234,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.452466482 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (63 + 57) / 120][Stage 72:===============================>                      (69 + 51) / 120][Stage 72:=========================================>            (92 + 28) / 120][Stage 72:===================================================>  (115 + 5) / 120]                                                                                [Stage 73:============================>                         (64 + 57) / 121][Stage 73:===================================>                  (79 + 42) / 121][Stage 73:===========================================>         (100 + 21) / 121][Stage 73:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.190811743 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 54 AND partitionZIndex<=157", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=157,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.392841345 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==================================>                   (72 + 41) / 113][Stage 74:========================================>             (84 + 29) / 113][Stage 74:=============================================>        (96 + 17) / 113][Stage 74:==================================================>   (106 + 7) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:=====================================>                (80 + 34) / 114][Stage 75:=========================================>            (88 + 26) / 114][Stage 75:=============================================>        (96 + 18) / 114][Stage 75:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.966186272 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 41 AND partitionZIndex<=144", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=144,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.364652859 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 76:======================================>               (82 + 33) / 115][Stage 76:==========================================>           (91 + 24) / 115][Stage 76:====================================================> (111 + 4) / 115][Stage 76:=====================================================>(113 + 2) / 115]                                                                                [Stage 77:========================================>             (87 + 29) / 116][Stage 77:=============================================>        (97 + 19) / 116][Stage 77:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.695873135 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 6 AND partitionZIndex<=49", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=49,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.432778807 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (60 + 60) / 120][Stage 78:===============================>                      (71 + 49) / 120][Stage 78:====================================>                 (81 + 39) / 120][Stage 78:===============================================>     (108 + 12) / 120]                                                                                [Stage 79:===========================>                          (61 + 60) / 121][Stage 79:=============================>                        (67 + 54) / 121][Stage 79:=========================================>            (94 + 27) / 121][Stage 79:===================================================>  (115 + 6) / 121][Stage 79:====================================================> (118 + 3) / 121][Stage 79:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.798049214 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 2 AND partitionZIndex<=15", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398833075 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (59 + 54) / 113][Stage 80:================================>                     (68 + 45) / 113][Stage 80:==========================================>           (88 + 25) / 113][Stage 80:==================================================>   (106 + 7) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:===========================>                          (59 + 55) / 114][Stage 81:==================================>                   (72 + 42) / 114][Stage 81:=========================================>            (88 + 26) / 114][Stage 81:==================================================>   (107 + 7) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.534840401 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 64 AND partitionZIndex<=167", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=167,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.424389342 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==========================>                           (60 + 61) / 121][Stage 82:============================>                         (64 + 57) / 121][Stage 82:====================================>                 (81 + 40) / 121][Stage 82:===============================================>     (108 + 13) / 121][Stage 82:===================================================>  (116 + 5) / 121][Stage 82:=====================================================>(120 + 1) / 121]                                                                                [Stage 83:===========================>                          (61 + 61) / 122][Stage 83:===============================>                      (71 + 51) / 122][Stage 83:======================================>               (87 + 35) / 122][Stage 83:==============================================>      (107 + 15) / 122][Stage 83:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.41211718 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 17 AND partitionZIndex<=220", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.423929063 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==========================>                           (60 + 61) / 121][Stage 84:=============================>                        (67 + 54) / 121][Stage 84:====================================>                 (82 + 39) / 121][Stage 84:==============================================>      (107 + 14) / 121][Stage 84:=====================================================>(120 + 1) / 121]                                                                                [Stage 85:===========================>                          (61 + 61) / 122][Stage 85:=============================>                        (67 + 55) / 122][Stage 85:=======================================>              (89 + 33) / 122][Stage 85:=============================================>       (104 + 18) / 122][Stage 85:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.333921753 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 1 AND partitionZIndex<=24", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=24,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.458705539 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (62 + 58) / 120][Stage 86:================================>                     (72 + 48) / 120][Stage 86:=========================================>            (92 + 28) / 120][Stage 86:====================================================> (117 + 3) / 120]                                                                                [Stage 87:===========================>                          (61 + 60) / 121][Stage 87:=================================>                    (76 + 45) / 121][Stage 87:==========================================>           (96 + 25) / 121][Stage 87:====================================================> (117 + 4) / 121][Stage 87:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.351848242 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 26 AND partitionZIndex<=129", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=129,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.41848418 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (60 + 60) / 120][Stage 88:==============================>                       (68 + 52) / 120][Stage 88:====================================>                 (81 + 39) / 120][Stage 88:=============================================>       (102 + 18) / 120][Stage 88:=====================================================>(118 + 2) / 120]                                                                                [Stage 89:=============================>                        (65 + 56) / 121][Stage 89:==================================>                   (77 + 44) / 121][Stage 89:===========================================>          (97 + 24) / 121][Stage 89:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.260183762 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 58 AND partitionZIndex<=161", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=161,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.434787978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (60 + 60) / 120][Stage 90:===========================>                          (61 + 59) / 120][Stage 90:===============================>                      (69 + 51) / 120][Stage 90:============================================>         (98 + 22) / 120][Stage 90:====================================================> (117 + 3) / 120]                                                                                [Stage 91:===========================>                          (62 + 59) / 121][Stage 91:=================================>                    (75 + 46) / 121][Stage 91:===========================================>          (98 + 23) / 121][Stage 91:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.242155174 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 8 AND partitionZIndex<=21", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=21,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.367120312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==================================>                   (72 + 41) / 113][Stage 92:=========================================>            (86 + 27) / 113][Stage 92:===============================================>      (99 + 14) / 113][Stage 92:==================================================>   (106 + 7) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:====================================>                 (77 + 37) / 114][Stage 93:=========================================>            (88 + 26) / 114][Stage 93:==============================================>       (99 + 15) / 114][Stage 93:====================================================> (110 + 4) / 114][Stage 93:====================================================> (111 + 3) / 114][Stage 93:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.864449917 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 8 AND partitionZIndex<=81", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=81,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.371138997 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 94:================================>                     (72 + 46) / 118][Stage 94:=====================================>                (82 + 36) / 118][Stage 94:===========================================>          (96 + 22) / 118][Stage 94:===================================================>  (113 + 5) / 118]                                                                                [Stage 95:=================================>                    (74 + 45) / 119][Stage 95:======================================>               (85 + 34) / 119][Stage 95:============================================>        (101 + 18) / 119][Stage 95:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.22578238 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 93 AND partitionZIndex<=196", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=196,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.379205206 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=================================>                    (71 + 44) / 115][Stage 96:======================================>               (82 + 33) / 115][Stage 96:==============================================>       (98 + 17) / 115][Stage 96:===================================================>  (109 + 6) / 115][Stage 96:=====================================================>(114 + 1) / 115]                                                                                [Stage 97:=================================>                    (72 + 44) / 116][Stage 97:===========================================>          (93 + 23) / 116][Stage 97:==============================================>      (102 + 14) / 116][Stage 97:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.042441864 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 8 AND partitionZIndex<=51", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=51,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.384297192 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 98:================================>                     (70 + 45) / 115][Stage 98:========================================>             (86 + 29) / 115][Stage 98:===============================================>     (102 + 13) / 115][Stage 98:=====================================================>(114 + 1) / 115]                                                                                [Stage 99:===============================>                      (67 + 49) / 116][Stage 99:=====================================>                (80 + 36) / 116][Stage 99:===========================================>          (93 + 23) / 116][Stage 99:================================================>    (106 + 10) / 116][Stage 99:==================================================>   (109 + 7) / 116][Stage 99:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 5.729730708 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 45 AND partitionZIndex<=148", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=148,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.343030332 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 100:=======================================>             (85 + 30) / 115][Stage 100:===========================================>         (94 + 21) / 115][Stage 100:==================================================>  (109 + 6) / 115]                                                                                [Stage 101:======================================>              (85 + 31) / 116][Stage 101:============================================>        (97 + 19) / 116][Stage 101:=================================================>   (108 + 8) / 116][Stage 101:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.593221807 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 62 AND partitionZIndex<=165", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.371779683 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==================================>                  (74 + 39) / 113][Stage 102:=========================================>           (88 + 25) / 113][Stage 102:=============================================>       (96 + 17) / 113][Stage 102:=================================================>   (105 + 8) / 113][Stage 102:====================================================>(112 + 1) / 113]                                                                                [Stage 103:====================================>                (78 + 36) / 114][Stage 103:=========================================>           (89 + 25) / 114][Stage 103:=============================================>       (98 + 16) / 114][Stage 103:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.039130775 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 33 AND partitionZIndex<=136", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.408528982 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (60 + 60) / 120][Stage 104:================================>                    (73 + 47) / 120][Stage 104:===================================>                 (80 + 40) / 120][Stage 104:=============================================>      (104 + 16) / 120][Stage 104:====================================================>(119 + 1) / 120]                                                                                [Stage 105:==========================>                          (61 + 60) / 121][Stage 105:=============================>                       (67 + 54) / 121][Stage 105:==================================>                  (78 + 43) / 121][Stage 105:==========================================>         (100 + 21) / 121][Stage 105:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.475576116 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 72 AND partitionZIndex<=175", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.388980284 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 106:=====================================>               (81 + 34) / 115][Stage 106:=========================================>           (89 + 26) / 115][Stage 106:==============================================>     (102 + 13) / 115][Stage 106:===================================================> (112 + 3) / 115][Stage 106:====================================================>(114 + 1) / 115]                                                                                [Stage 107:=====================================>               (81 + 35) / 116][Stage 107:==========================================>          (93 + 23) / 116][Stage 107:===============================================>    (105 + 11) / 116][Stage 107:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.898582209 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 03 AND partitionZIndex<=106", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=106,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.396043512 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (58 + 55) / 113][Stage 108:==============================>                      (65 + 48) / 113][Stage 108:========================================>            (86 + 27) / 113][Stage 108:=================================================>   (106 + 7) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:===========================>                         (60 + 54) / 114][Stage 109:==============================>                      (66 + 48) / 114][Stage 109:========================================>            (88 + 26) / 114][Stage 109:==============================================>     (103 + 11) / 114][Stage 109:===================================================> (110 + 4) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.436105598 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 3 AND partitionZIndex<=56", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.380166116 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 110:================================>                    (71 + 44) / 115][Stage 110:====================================>                (80 + 35) / 115][Stage 110:===============================================>    (104 + 11) / 115][Stage 110:===================================================> (111 + 4) / 115][Stage 110:====================================================>(114 + 1) / 115]                                                                                [Stage 111:=================================>                   (73 + 43) / 116][Stage 111:==========================================>          (93 + 23) / 116][Stage 111:==============================================>     (104 + 12) / 116][Stage 111:==================================================>  (110 + 6) / 116][Stage 111:===================================================> (113 + 3) / 116][Stage 111:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.82126116 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 7 AND partitionZIndex<=60", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=60,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.41052285 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (60 + 60) / 120][Stage 112:==============================>                      (69 + 51) / 120][Stage 112:=====================================>               (86 + 34) / 120][Stage 112:===============================================>    (110 + 10) / 120][Stage 112:====================================================>(119 + 1) / 120]                                                                                [Stage 113:==========================>                          (61 + 60) / 121][Stage 113:============================>                        (66 + 55) / 121][Stage 113:====================================>                (84 + 37) / 121][Stage 113:=============================================>      (106 + 15) / 121][Stage 113:==================================================>  (115 + 6) / 121][Stage 113:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.661928942 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 70 AND partitionZIndex<=173", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=173,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402273883 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 114:>                                                      (0 + 0) / 121][Stage 114:==========================>                          (60 + 61) / 121][Stage 114:============================>                        (66 + 55) / 121][Stage 114:===================================>                 (81 + 40) / 121][Stage 114:=============================================>      (106 + 15) / 121][Stage 114:====================================================>(119 + 2) / 121]                                                                                [Stage 115:==========================>                          (61 + 61) / 122][Stage 115:============================>                        (65 + 57) / 122][Stage 115:==================================>                  (80 + 42) / 122][Stage 115:=========================================>           (95 + 27) / 122][Stage 115:==================================================>  (116 + 6) / 122][Stage 115:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.501379506 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 1 AND partitionZIndex<=34", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.352036911 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==================================>                  (74 + 39) / 113][Stage 116:=======================================>             (84 + 29) / 113][Stage 116:=============================================>       (98 + 15) / 113][Stage 116:================================================>    (104 + 9) / 113][Stage 116:====================================================>(111 + 2) / 113]                                                                                [Stage 117:==================================>                  (74 + 40) / 114][Stage 117:======================================>              (83 + 31) / 114][Stage 117:===========================================>         (93 + 21) / 114][Stage 117:=============================================>      (100 + 14) / 114][Stage 117:===================================================> (111 + 3) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.992286076 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 27 AND partitionZIndex<=130", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=130,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397811601 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (59 + 54) / 113][Stage 118:=================================>                   (72 + 41) / 113][Stage 118:========================================>            (87 + 26) / 113][Stage 118:================================================>    (104 + 9) / 113][Stage 118:====================================================>(112 + 1) / 113]                                                                                [Stage 119:===========================>                         (59 + 55) / 114][Stage 119:=============================>                       (63 + 51) / 114][Stage 119:===================================>                 (77 + 37) / 114][Stage 119:=============================================>       (97 + 17) / 114][Stage 119:==================================================>  (108 + 6) / 114][Stage 119:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.558512412 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 80 AND partitionZIndex<=183", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.405566671 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 61) / 121][Stage 120:============================>                        (66 + 55) / 121][Stage 120:========================================>            (93 + 28) / 121][Stage 120:=================================================>   (114 + 7) / 121][Stage 120:====================================================>(120 + 1) / 121]                                                                                [Stage 121:==========================>                          (61 + 61) / 122][Stage 121:=============================>                       (69 + 53) / 122][Stage 121:====================================>                (84 + 38) / 122][Stage 121:============================================>       (105 + 17) / 122][Stage 121:====================================================>(120 + 2) / 122][Stage 121:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.687606181 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 28 AND partitionZIndex<=131", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=131,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.338852661 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=======================================>             (86 + 29) / 115][Stage 122:===========================================>         (95 + 20) / 115][Stage 122:===================================================> (112 + 3) / 115][Stage 122:====================================================>(114 + 1) / 115]                                                                                [Stage 123:=======================================>             (87 + 29) / 116][Stage 123:============================================>       (100 + 16) / 116][Stage 123:==================================================>  (111 + 5) / 116][Stage 123:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.821546169 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 96 AND partitionZIndex<=199", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.382434869 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==============================>                      (66 + 49) / 115][Stage 124:====================================>                (80 + 35) / 115][Stage 124:==============================================>     (103 + 12) / 115][Stage 124:====================================================>(113 + 2) / 115]                                                                                [Stage 125:===============================>                     (69 + 47) / 116][Stage 125:======================================>              (84 + 32) / 116][Stage 125:================================================>    (107 + 9) / 116][Stage 125:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.648420573 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 11 AND partitionZIndex<=114", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=114,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.355615941 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 126:======================================>              (83 + 32) / 115][Stage 126:==========================================>          (92 + 23) / 115][Stage 126:================================================>    (106 + 9) / 115]                                                                                [Stage 127:=======================================>             (87 + 29) / 116][Stage 127:============================================>        (98 + 18) / 116][Stage 127:=================================================>   (109 + 7) / 116][Stage 127:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.621880012 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 41 AND partitionZIndex<=244", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=244,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.41871975 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (62 + 58) / 120][Stage 128:=================================>                   (76 + 44) / 120][Stage 128:===========================================>        (100 + 20) / 120][Stage 128:=================================================>   (113 + 7) / 120]                                                                                [Stage 129:===========================>                         (63 + 58) / 121][Stage 129:===================================>                 (80 + 41) / 121][Stage 129:============================================>       (104 + 17) / 121][Stage 129:==================================================>  (116 + 5) / 121][Stage 129:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.352511565 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 67 AND partitionZIndex<=170", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=170,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.384733934 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 130:================================>                    (73 + 45) / 118][Stage 130:===================================>                 (80 + 38) / 118][Stage 130:===========================================>         (96 + 22) / 118][Stage 130:=================================================>   (110 + 8) / 118]                                                                                [Stage 131:================================>                    (74 + 45) / 119][Stage 131:=====================================>               (85 + 34) / 119][Stage 131:============================================>       (101 + 18) / 119][Stage 131:=================================================>   (112 + 7) / 119][Stage 131:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.188841719 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 94 AND partitionZIndex<=197", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=197,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.3700381 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 132:================================>                    (72 + 46) / 118][Stage 132:======================================>              (85 + 33) / 118][Stage 132:===========================================>         (97 + 21) / 118][Stage 132:===================================================> (114 + 4) / 118][Stage 132:====================================================>(117 + 1) / 118]                                                                                [Stage 133:================================>                    (73 + 46) / 119][Stage 133:==================================>                  (78 + 41) / 119][Stage 133:=========================================>           (94 + 25) / 119][Stage 133:==================================================>  (113 + 6) / 119][Stage 133:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.673125553 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 13 AND partitionZIndex<=116", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.335993824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 134:====================================>                (80 + 35) / 115][Stage 134:========================================>            (87 + 28) / 115][Stage 134:===========================================>         (95 + 20) / 115][Stage 134:===============================================>    (105 + 10) / 115]                                                                                [Stage 135:=====================================>               (83 + 33) / 116][Stage 135:==========================================>          (93 + 23) / 116][Stage 135:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.585157805 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 3 AND partitionZIndex<=86", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=86,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.35031816 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 136:=================================>                   (71 + 42) / 113][Stage 136:========================================>            (86 + 27) / 113][Stage 136:============================================>        (94 + 19) / 113][Stage 136:==================================================>  (107 + 6) / 113][Stage 136:====================================================>(112 + 1) / 113]                                                                                [Stage 137:=====================================>               (80 + 34) / 114][Stage 137:==========================================>          (91 + 23) / 114][Stage 137:=============================================>      (100 + 14) / 114][Stage 137:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.961125901 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 22 AND partitionZIndex<=225", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=225,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.336399166 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 138:====================================>                (80 + 35) / 115][Stage 138:=======================================>             (86 + 29) / 115][Stage 138:===========================================>         (95 + 20) / 115][Stage 138:=================================================>   (107 + 8) / 115][Stage 138:====================================================>(114 + 1) / 115]                                                                                [Stage 139:======================================>              (84 + 32) / 116][Stage 139:========================================>            (89 + 27) / 116][Stage 139:=============================================>      (102 + 14) / 116][Stage 139:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.763590454 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 9 AND partitionZIndex<=62", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=62,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.334344545 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 140:====================================>                (80 + 35) / 115][Stage 140:========================================>            (88 + 27) / 115][Stage 140:==============================================>     (103 + 12) / 115][Stage 140:===================================================> (111 + 4) / 115]                                                                                [Stage 141:======================================>              (85 + 31) / 116][Stage 141:=========================================>           (90 + 26) / 116][Stage 141:===============================================>    (106 + 10) / 116][Stage 141:===================================================> (113 + 3) / 116][Stage 141:====================================================>(114 + 2) / 116][Stage 141:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.497958905 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 49 AND partitionZIndex<=152", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=152,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.388568066 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (59 + 54) / 113][Stage 142:==================================>                  (74 + 39) / 113][Stage 142:=============================================>       (97 + 16) / 113][Stage 142:===================================================> (109 + 4) / 113]                                                                                [Stage 143:=============================>                       (64 + 50) / 114][Stage 143:==================================>                  (75 + 39) / 114][Stage 143:=========================================>           (89 + 25) / 114][Stage 143:==================================================>  (108 + 6) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.293159032 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 8 AND partitionZIndex<=101", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=101,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.385374023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (59 + 54) / 113][Stage 144:==================================>                  (74 + 39) / 113][Stage 144:==========================================>          (91 + 22) / 113][Stage 144:==================================================>  (108 + 5) / 113][Stage 144:====================================================>(112 + 1) / 113]                                                                                [Stage 145:===========================>                         (60 + 54) / 114][Stage 145:================================>                    (70 + 44) / 114][Stage 145:======================================>              (83 + 31) / 114][Stage 145:==============================================>     (103 + 11) / 114][Stage 145:=================================================>   (107 + 7) / 114][Stage 145:====================================================>(112 + 2) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.834005979 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 14 AND partitionZIndex<=217", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=217,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.349611866 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 146:====================================>                (77 + 36) / 113][Stage 146:=========================================>           (89 + 24) / 113][Stage 146:=============================================>       (97 + 16) / 113][Stage 146:===================================================> (109 + 4) / 113][Stage 146:====================================================>(112 + 1) / 113]                                                                                [Stage 147:==================================>                  (74 + 40) / 114][Stage 147:=========================================>           (89 + 25) / 114][Stage 147:=============================================>       (97 + 17) / 114][Stage 147:==================================================>  (109 + 5) / 114][Stage 147:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.998232589 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 9 AND partitionZIndex<=102", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=102,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.404140587 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (60 + 61) / 121][Stage 148:===========================>                         (63 + 58) / 121][Stage 148:=====================================>               (85 + 36) / 121][Stage 148:=============================================>      (105 + 16) / 121][Stage 148:====================================================>(120 + 1) / 121]                                                                                [Stage 149:============================>                        (65 + 57) / 122][Stage 149:=================================>                   (76 + 46) / 122][Stage 149:============================================>       (105 + 17) / 122][Stage 149:===================================================> (119 + 3) / 122][Stage 149:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.778646423 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 0 AND partitionZIndex<=23", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=23,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.380170481 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 150:=============================>                       (64 + 51) / 115][Stage 150:=================================>                   (73 + 42) / 115][Stage 150:===========================================>         (94 + 21) / 115][Stage 150:===============================================>    (104 + 11) / 115][Stage 150:=================================================>   (108 + 7) / 115][Stage 150:====================================================>(113 + 2) / 115]                                                                                [Stage 151:==============================>                      (66 + 50) / 116][Stage 151:====================================>                (80 + 36) / 116][Stage 151:=============================================>      (101 + 15) / 116][Stage 151:===============================================>    (105 + 11) / 116][Stage 151:=================================================>   (109 + 7) / 116][Stage 151:===================================================> (113 + 3) / 116][Stage 151:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.827711222 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1  AND partitionZIndex<=4", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=4,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.492337128 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==========================>                          (60 + 60) / 120][Stage 152:==============================>                      (68 + 52) / 120][Stage 152:======================================>              (88 + 32) / 120][Stage 152:============================================>       (103 + 17) / 120][Stage 152:===================================================> (117 + 3) / 120][Stage 152:====================================================>(119 + 1) / 120]                                                                                [Stage 153:==========================>                          (61 + 60) / 121][Stage 153:=============================>                       (67 + 54) / 121][Stage 153:===================================>                 (81 + 40) / 121][Stage 153:===============================================>    (111 + 10) / 121][Stage 153:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.595908068 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 8 AND partitionZIndex<=61", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=61,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397246943 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===========================>                         (62 + 58) / 120][Stage 154:=================================>                   (75 + 45) / 120][Stage 154:=====================================>               (85 + 35) / 120][Stage 154:===============================================>    (109 + 11) / 120]                                                                                [Stage 155:===========================>                         (63 + 58) / 121][Stage 155:===============================>                     (71 + 50) / 121][Stage 155:========================================>            (92 + 29) / 121][Stage 155:=============================================>      (107 + 14) / 121][Stage 155:====================================================>(119 + 2) / 121][Stage 155:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.574993037 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 37 AND partitionZIndex<=140", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=140,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.382463148 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (58 + 55) / 113][Stage 156:==================================>                  (73 + 40) / 113][Stage 156:========================================>            (86 + 27) / 113][Stage 156:=================================================>   (105 + 8) / 113]                                                                                [Stage 157:============================>                        (61 + 53) / 114][Stage 157:================================>                    (69 + 45) / 114][Stage 157:======================================>              (83 + 31) / 114][Stage 157:===========================================>         (93 + 21) / 114][Stage 157:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.250644225 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 32 AND partitionZIndex<=135", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397831787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==========================>                          (60 + 61) / 121][Stage 158:===============================>                     (71 + 50) / 121][Stage 158:=========================================>           (95 + 26) / 121][Stage 158:=============================================>      (107 + 14) / 121][Stage 158:====================================================>(120 + 1) / 121]                                                                                [Stage 159:===========================>                         (63 + 59) / 122][Stage 159:=============================>                       (69 + 53) / 122][Stage 159:======================================>              (89 + 33) / 122][Stage 159:==============================================>     (110 + 12) / 122][Stage 159:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.115884009 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 9 AND partitionZIndex<=72", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=72,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397841048 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 160:=============================>                       (66 + 54) / 120][Stage 160:================================>                    (73 + 47) / 120][Stage 160:=======================================>             (90 + 30) / 120][Stage 160:==============================================>     (108 + 12) / 120][Stage 160:====================================================>(119 + 1) / 120]                                                                                [Stage 161:===========================>                         (62 + 59) / 121][Stage 161:================================>                    (75 + 46) / 121][Stage 161:=====================================>               (85 + 36) / 121][Stage 161:============================================>       (103 + 18) / 121][Stage 161:===================================================> (117 + 4) / 121][Stage 161:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.506830536 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 6 AND partitionZIndex<=19", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=19,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.378038367 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==============================>                      (66 + 49) / 115][Stage 162:===================================>                 (77 + 38) / 115][Stage 162:===========================================>         (94 + 21) / 115][Stage 162:==============================================>     (102 + 13) / 115][Stage 162:==================================================>  (110 + 5) / 115][Stage 162:===================================================> (112 + 3) / 115]                                                                                [Stage 163:=================================>                   (74 + 42) / 116][Stage 163:==========================================>          (93 + 23) / 116][Stage 163:=============================================>       (99 + 17) / 116][Stage 163:===================================================> (112 + 4) / 116][Stage 163:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.572337174 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 2 AND partitionZIndex<=55", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.413775109 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 60) / 120][Stage 164:==============================>                      (70 + 50) / 120][Stage 164:===========================================>        (100 + 20) / 120][Stage 164:=================================================>   (111 + 9) / 120][Stage 164:==================================================>  (114 + 6) / 120][Stage 164:===================================================> (116 + 4) / 120][Stage 164:====================================================>(119 + 1) / 120]                                                                                [Stage 165:===========================>                         (63 + 58) / 121][Stage 165:=================================>                   (76 + 45) / 121][Stage 165:=======================================>             (91 + 30) / 121][Stage 165:===============================================>    (111 + 10) / 121][Stage 165:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.209073759 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 11 AND partitionZIndex<=214", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.361917212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 166:================================>                    (73 + 45) / 118][Stage 166:===================================>                 (78 + 40) / 118][Stage 166:=============================================>      (103 + 15) / 118][Stage 166:==================================================>  (113 + 5) / 118]                                                                                [Stage 167:================================>                    (74 + 45) / 119][Stage 167:=====================================>               (85 + 34) / 119][Stage 167:============================================>       (102 + 17) / 119][Stage 167:=================================================>   (111 + 8) / 119][Stage 167:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.305771305 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 30 AND partitionZIndex<=233", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=233,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.347804796 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 168:====================================>                (78 + 35) / 113][Stage 168:===========================================>         (92 + 21) / 113][Stage 168:=============================================>       (98 + 15) / 113][Stage 168:===================================================> (110 + 3) / 113]                                                                                [Stage 169:====================================>                (78 + 36) / 114][Stage 169:=========================================>           (89 + 25) / 114][Stage 169:===========================================>         (94 + 20) / 114][Stage 169:================================================>    (105 + 9) / 114][Stage 169:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.136982642 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 13 AND partitionZIndex<=216", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=216,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398172215 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 61) / 121][Stage 170:===============================>                     (72 + 49) / 121][Stage 170:=====================================>               (86 + 35) / 121][Stage 170:=================================================>   (112 + 9) / 121][Stage 170:====================================================>(119 + 2) / 121]                                                                                [Stage 171:============================>                        (65 + 57) / 122][Stage 171:================================>                    (74 + 48) / 122][Stage 171:==========================================>          (98 + 24) / 122][Stage 171:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.352147899 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 02 AND partitionZIndex<=205", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=205,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.34005085 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=======================================>             (85 + 30) / 115][Stage 172:=============================================>       (98 + 17) / 115][Stage 172:===================================================> (111 + 4) / 115]                                                                                [Stage 173:=======================================>             (87 + 29) / 116][Stage 173:=============================================>      (101 + 15) / 116][Stage 173:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.497103647 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 12 AND partitionZIndex<=115", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=115,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.358716073 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 174:================================>                    (72 + 46) / 118][Stage 174:=================================>                   (74 + 44) / 118][Stage 174:=====================================>               (84 + 34) / 118][Stage 174:============================================>       (101 + 17) / 118][Stage 174:===================================================> (114 + 4) / 118]                                                                                [Stage 175:================================>                    (73 + 46) / 119][Stage 175:====================================>                (81 + 38) / 119][Stage 175:============================================>        (99 + 20) / 119][Stage 175:=================================================>   (111 + 8) / 119][Stage 175:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.442908842 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 0 AND partitionZIndex<=53", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=53,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.329511919 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 176:====================================>                (80 + 35) / 115][Stage 176:=======================================>             (86 + 29) / 115][Stage 176:==============================================>     (102 + 13) / 115][Stage 176:==================================================>  (110 + 5) / 115]                                                                                [Stage 177:======================================>              (85 + 31) / 116][Stage 177:===========================================>         (96 + 20) / 116][Stage 177:=================================================>   (109 + 7) / 116][Stage 177:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.009930628 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 9 AND partitionZIndex<=82", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=82,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.460624792 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=============================>                       (65 + 50) / 115][Stage 178:==================================>                  (74 + 41) / 115][Stage 178:==========================================>          (93 + 22) / 115][Stage 178:=================================================>   (108 + 7) / 115][Stage 178:====================================================>(113 + 2) / 115][Stage 178:====================================================>(114 + 1) / 115]                                                                                [Stage 179:================================>                    (71 + 45) / 116][Stage 179:======================================>              (84 + 32) / 116][Stage 179:============================================>        (98 + 18) / 116][Stage 179:==================================================>  (110 + 6) / 116][Stage 179:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.091222439 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 2 AND partitionZIndex<=35", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=35,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.346951462 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=====================================>               (81 + 34) / 115][Stage 180:=======================================>             (85 + 30) / 115][Stage 180:=============================================>       (98 + 17) / 115][Stage 180:===============================================>    (105 + 10) / 115][Stage 180:===================================================> (112 + 3) / 115]                                                                                [Stage 181:=====================================>               (81 + 35) / 116][Stage 181:======================================>              (84 + 32) / 116][Stage 181:===========================================>         (95 + 21) / 116][Stage 181:=============================================>      (102 + 14) / 116][Stage 181:===================================================> (112 + 4) / 116][Stage 181:===================================================> (113 + 3) / 116][Stage 181:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.344863804 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 98 AND partitionZIndex<=201", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=201,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.383109925 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 182:=====================================>               (82 + 33) / 115][Stage 182:==========================================>          (92 + 23) / 115][Stage 182:===============================================>    (105 + 10) / 115][Stage 182:====================================================>(114 + 1) / 115]                                                                                [Stage 183:======================================>              (84 + 32) / 116][Stage 183:===========================================>         (95 + 21) / 116][Stage 183:===============================================>    (106 + 10) / 116][Stage 183:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.494305724 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 79 AND partitionZIndex<=182", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=182,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.413504022 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (60 + 60) / 120][Stage 184:==============================>                      (70 + 50) / 120][Stage 184:======================================>              (88 + 32) / 120][Stage 184:==================================================>  (114 + 6) / 120]                                                                                [Stage 185:==========================>                          (61 + 60) / 121][Stage 185:===============================>                     (73 + 48) / 121][Stage 185:======================================>              (87 + 34) / 121][Stage 185:=============================================>      (105 + 16) / 121][Stage 185:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.22226836 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4  AND partitionZIndex<=7", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=7,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.375472959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (58 + 55) / 113][Stage 186:===============================>                     (68 + 45) / 113][Stage 186:==========================================>          (90 + 23) / 113][Stage 186:===============================================>    (103 + 10) / 113][Stage 186:====================================================>(112 + 1) / 113]                                                                                [Stage 187:===========================>                         (59 + 55) / 114][Stage 187:==============================>                      (66 + 48) / 114][Stage 187:====================================>                (79 + 35) / 114][Stage 187:==============================================>      (99 + 15) / 114][Stage 187:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.8452881 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 37 AND partitionZIndex<=240", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=240,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.379682845 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 188:=================================>                   (74 + 44) / 118][Stage 188:=====================================>               (83 + 35) / 118][Stage 188:===========================================>         (97 + 21) / 118][Stage 188:==================================================>  (113 + 5) / 118][Stage 188:====================================================>(117 + 1) / 118]                                                                                [Stage 189:================================>                    (73 + 46) / 119][Stage 189:===================================>                 (80 + 39) / 119][Stage 189:===========================================>         (97 + 22) / 119][Stage 189:=================================================>   (112 + 7) / 119][Stage 189:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.311925947 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 89 AND partitionZIndex<=192", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=192,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.359844343 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 190:=======================================>             (84 + 29) / 113][Stage 190:============================================>        (94 + 19) / 113][Stage 190:==============================================>     (101 + 12) / 113][Stage 190:==================================================>  (108 + 5) / 113]                                                                                [Stage 191:=======================================>             (84 + 30) / 114][Stage 191:==========================================>          (92 + 22) / 114][Stage 191:==============================================>     (103 + 11) / 114][Stage 191:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.961857465 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 0 AND partitionZIndex<=93", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=93,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.376284164 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==============================>                      (66 + 49) / 115][Stage 192:===================================>                 (78 + 37) / 115][Stage 192:=======================================>             (85 + 30) / 115][Stage 192:==============================================>     (102 + 13) / 115][Stage 192:==================================================>  (110 + 5) / 115][Stage 192:====================================================>(114 + 1) / 115]                                                                                [Stage 193:================================>                    (72 + 44) / 116][Stage 193:======================================>              (85 + 31) / 116][Stage 193:==============================================>     (103 + 13) / 116][Stage 193:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.96791244 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 29 AND partitionZIndex<=232", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=232,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.441247762 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=====================================>               (81 + 34) / 115][Stage 194:=========================================>           (89 + 26) / 115][Stage 194:===============================================>    (105 + 10) / 115]                                                                                [Stage 195:=====================================>               (82 + 34) / 116][Stage 195:===========================================>         (95 + 21) / 116][Stage 195:===============================================>    (105 + 11) / 116][Stage 195:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.686341756 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 38 AND partitionZIndex<=241", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=241,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.362020088 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 196:================================>                    (70 + 43) / 113][Stage 196:======================================>              (83 + 30) / 113][Stage 196:=============================================>       (96 + 17) / 113][Stage 196:=================================================>   (106 + 7) / 113][Stage 196:====================================================>(111 + 2) / 113]                                                                                [Stage 197:====================================>                (78 + 36) / 114][Stage 197:===========================================>         (93 + 21) / 114][Stage 197:=================================================>   (106 + 8) / 114][Stage 197:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.074187023 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 69 AND partitionZIndex<=172", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=172,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.359601626 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===================================>                 (76 + 37) / 113][Stage 198:=======================================>             (84 + 29) / 113][Stage 198:=============================================>       (97 + 16) / 113][Stage 198:==================================================>  (108 + 5) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:=======================================>             (84 + 30) / 114][Stage 199:=============================================>       (97 + 17) / 114][Stage 199:===============================================>    (104 + 10) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.064718 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 1 AND partitionZIndex<=64", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=64,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.349374936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=================================>                   (71 + 42) / 113][Stage 200:========================================>            (86 + 27) / 113][Stage 200:=============================================>       (97 + 16) / 113][Stage 200:==================================================>  (107 + 6) / 113][Stage 200:====================================================>(111 + 2) / 113]                                                                                [Stage 201:=======================================>             (84 + 30) / 114][Stage 201:===========================================>         (94 + 20) / 114][Stage 201:===============================================>    (104 + 10) / 114][Stage 201:===================================================> (111 + 3) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.92922078 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m25.659s
user	11m49.764s
sys	0m54.932s
