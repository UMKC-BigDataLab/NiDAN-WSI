Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 16:50:09 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:50:23 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:50:23 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:50:23 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 16:50:26 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:50:36 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524165025-0570).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.356637157 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:==========================>                            (55 + 60) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:======================================>                (80 + 35) / 115][Stage 0:==========================================>            (88 + 27) / 115][Stage 0:==============================================>        (98 + 17) / 115][Stage 0:==============================================>       (100 + 15) / 115]                                                                                [Stage 1:========================>                              (52 + 64) / 116][Stage 1:=============================>                         (63 + 53) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:===========================================>           (91 + 25) / 116][Stage 1:=============================================>         (95 + 21) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:====================================================>  (110 + 6) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.355767524 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.865687482 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:>                                                        (0 + 0) / 121][Stage 2:===================>                                   (43 + 78) / 121][Stage 2:========================>                              (53 + 68) / 121][Stage 2:===========================>                           (60 + 61) / 121][Stage 2:===========================>                           (61 + 60) / 121][Stage 2:============================>                          (63 + 58) / 121][Stage 2:=================================>                     (73 + 48) / 121][Stage 2:=======================================>               (86 + 35) / 121][Stage 2:=============================================>        (102 + 19) / 121][Stage 2:===================================================>   (113 + 8) / 121][Stage 2:======================================================>(120 + 1) / 121]                                                                                [Stage 3:===========================>                           (60 + 62) / 122][Stage 3:===========================>                           (61 + 61) / 122][Stage 3:============================>                          (64 + 58) / 122][Stage 3:===============================>                       (69 + 53) / 122][Stage 3:======================================>                (86 + 36) / 122][Stage 3:===============================================>      (107 + 15) / 122][Stage 3:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.621691559 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.606449628 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=================================>                     (69 + 44) / 113][Stage 4:==================================>                    (70 + 43) / 113][Stage 4:===================================>                   (73 + 40) / 113][Stage 4:======================================>                (80 + 33) / 113][Stage 4:===========================================>           (89 + 24) / 113][Stage 4:===============================================>       (98 + 15) / 113][Stage 4:====================================================>  (107 + 6) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:======================================>                (79 + 35) / 114][Stage 5:=======================================>               (82 + 32) / 114][Stage 5:=========================================>             (87 + 27) / 114][Stage 5:============================================>          (92 + 22) / 114][Stage 5:=================================================>    (104 + 10) / 114][Stage 5:=====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.143307501 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=151", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=151,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.696554106 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:======================>                                (49 + 72) / 121][Stage 6:=========================>                             (55 + 66) / 121][Stage 6:============================>                          (62 + 59) / 121][Stage 6:===============================>                       (69 + 52) / 121][Stage 6:===================================>                   (78 + 43) / 121][Stage 6:=======================================>               (86 + 35) / 121][Stage 6:=============================================>         (99 + 22) / 121][Stage 6:======================================================>(119 + 2) / 121]                                                                                [Stage 7:==========================>                            (58 + 64) / 122][Stage 7:===========================>                           (61 + 61) / 122][Stage 7:==============================>                        (67 + 55) / 122][Stage 7:==================================>                    (76 + 46) / 122][Stage 7:==========================================>            (94 + 28) / 122][Stage 7:================================================>     (109 + 13) / 122][Stage 7:=====================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.204170368 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=40", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=40,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.605008329 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=========================>                             (56 + 64) / 120][Stage 8:===========================>                           (61 + 59) / 120][Stage 8:===============================>                       (68 + 52) / 120][Stage 8:====================================>                  (79 + 41) / 120][Stage 8:==========================================>            (93 + 27) / 120][Stage 8:===================================================>   (113 + 7) / 120]                                                                                [Stage 9:===========================>                           (61 + 60) / 121][Stage 9:==============================>                        (68 + 53) / 121][Stage 9:===================================>                   (79 + 42) / 121][Stage 9:=============================================>        (103 + 18) / 121][Stage 9:=================================================>    (110 + 11) / 121][Stage 9:====================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.76117546 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=150", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=150,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.593793272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (60 + 60) / 120][Stage 10:============================>                         (63 + 57) / 120][Stage 10:=================================>                    (74 + 46) / 120][Stage 10:=========================================>            (92 + 28) / 120][Stage 10:===============================================>     (108 + 12) / 120][Stage 10:====================================================> (116 + 4) / 120][Stage 10:=====================================================>(119 + 1) / 120]                                                                                [Stage 11:===========================>                          (61 + 60) / 121][Stage 11:===========================>                          (62 + 59) / 121][Stage 11:=================================>                    (74 + 47) / 121][Stage 11:===========================================>          (98 + 23) / 121][Stage 11:=================================================>    (112 + 9) / 121][Stage 11:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.836876544 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=206", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=206,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.533944627 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:=====================================>                (80 + 35) / 115][Stage 12:==========================================>           (91 + 24) / 115][Stage 12:==============================================>       (99 + 16) / 115][Stage 12:==================================================>   (107 + 8) / 115][Stage 12:=====================================================>(113 + 2) / 115]                                                                                [Stage 13:=====================================>                (81 + 35) / 116][Stage 13:=======================================>              (85 + 31) / 116][Stage 13:============================================>         (96 + 20) / 116][Stage 13:==================================================>   (108 + 8) / 116][Stage 13:====================================================> (112 + 4) / 116][Stage 13:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.541759899 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=113", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=113,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497910416 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:================================>                     (72 + 46) / 118][Stage 14:===================================>                  (78 + 40) / 118][Stage 14:=========================================>            (90 + 28) / 118][Stage 14:===========================================>          (95 + 23) / 118][Stage 14:==============================================>      (103 + 15) / 118][Stage 14:==============================================>      (104 + 14) / 118][Stage 14:====================================================> (114 + 4) / 118][Stage 14:=====================================================>(117 + 1) / 118]                                                                                [Stage 15:=================================>                    (73 + 46) / 119][Stage 15:==================================>                   (76 + 43) / 119][Stage 15:======================================>               (84 + 35) / 119][Stage 15:===========================================>          (96 + 23) / 119][Stage 15:==============================================>      (105 + 14) / 119][Stage 15:====================================================> (116 + 3) / 119][Stage 15:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.139426072 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=244", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=244,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.547479104 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:================================>                     (67 + 46) / 113][Stage 16:=========================================>            (86 + 27) / 113][Stage 16:==============================================>      (100 + 13) / 113][Stage 16:===================================================>  (108 + 5) / 113][Stage 16:====================================================> (110 + 3) / 113]                                                                                [Stage 17:============================>                         (60 + 54) / 114][Stage 17:=================================>                    (70 + 44) / 114][Stage 17:===========================================>          (92 + 22) / 114][Stage 17:===============================================>     (102 + 12) / 114][Stage 17:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.603041767 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=159", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=159,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.553481183 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:>                                                       (0 + 0) / 120][Stage 18:===========================>                          (60 + 60) / 120][Stage 18:===========================>                          (62 + 58) / 120][Stage 18:=================================>                    (74 + 46) / 120][Stage 18:==========================================>           (94 + 26) / 120][Stage 18:==============================================>      (106 + 14) / 120][Stage 18:===================================================>  (115 + 5) / 120]                                                                                [Stage 19:===========================>                          (62 + 59) / 121][Stage 19:==============================>                       (69 + 52) / 121][Stage 19:===========================================>          (97 + 24) / 121][Stage 19:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.398066039 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.542592726 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (57 + 56) / 113][Stage 20:============================>                         (59 + 54) / 113][Stage 20:================================>                     (69 + 44) / 113][Stage 20:===========================================>          (90 + 23) / 113][Stage 20:===============================================>     (101 + 12) / 113][Stage 20:===================================================>  (108 + 5) / 113][Stage 20:=====================================================>(111 + 2) / 113]                                                                                [Stage 21:=============================>                        (63 + 51) / 114][Stage 21:===================================>                  (74 + 40) / 114][Stage 21:===========================================>          (92 + 22) / 114][Stage 21:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.654525417 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505276796 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:============================>                         (59 + 54) / 113][Stage 22:================================>                     (68 + 45) / 113][Stage 22:===========================================>          (90 + 23) / 113][Stage 22:================================================>    (103 + 10) / 113][Stage 22:===================================================>  (108 + 5) / 113][Stage 22:====================================================> (110 + 3) / 113]                                                                                [Stage 23:============================>                         (61 + 53) / 114][Stage 23:===============================>                      (67 + 47) / 114][Stage 23:======================================>               (81 + 33) / 114][Stage 23:==================================================>   (107 + 7) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.535320208 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=93", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=93,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.512064894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (60 + 61) / 121][Stage 24:===========================>                          (61 + 60) / 121][Stage 24:=================================>                    (76 + 45) / 121][Stage 24:=========================================>            (93 + 28) / 121][Stage 24:===================================================>  (115 + 6) / 121]                                                                                [Stage 25:===========================>                          (61 + 61) / 122][Stage 25:==============================>                       (68 + 54) / 122][Stage 25:======================================>               (88 + 34) / 122][Stage 25:==============================================>      (107 + 15) / 122][Stage 25:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.44876545 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=185", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=185,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.471860364 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (72 + 46) / 118][Stage 26:=======================================>              (86 + 32) / 118][Stage 26:=============================================>       (101 + 17) / 118][Stage 26:================================================>    (108 + 10) / 118][Stage 26:=====================================================>(116 + 2) / 118]                                                                                [Stage 27:=================================>                    (73 + 46) / 119][Stage 27:==================================>                   (76 + 43) / 119][Stage 27:==========================================>           (94 + 25) / 119][Stage 27:==============================================>      (104 + 15) / 119][Stage 27:================================================>    (108 + 11) / 119][Stage 27:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.482585503 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493170659 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:==========================>                           (60 + 61) / 121][Stage 28:=============================>                        (67 + 54) / 121][Stage 28:=====================================>                (84 + 37) / 121][Stage 28:===========================================>         (100 + 21) / 121][Stage 28:===============================================>     (109 + 12) / 121][Stage 28:====================================================> (117 + 4) / 121][Stage 28:=====================================================>(119 + 2) / 121]                                                                                [Stage 29:===========================>                          (63 + 59) / 122][Stage 29:=================================>                    (75 + 47) / 122][Stage 29:===========================================>         (100 + 22) / 122][Stage 29:===================================================>  (116 + 6) / 122][Stage 29:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.66503564 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.539549907 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:============================>                         (63 + 58) / 121][Stage 30:================================>                     (72 + 49) / 121][Stage 30:============================================>         (99 + 22) / 121][Stage 30:====================================================> (117 + 4) / 121]                                                                                [Stage 31:===========================>                          (62 + 60) / 122][Stage 31:==============================>                       (68 + 54) / 122][Stage 31:====================================>                 (83 + 39) / 122][Stage 31:==============================================>      (106 + 16) / 122][Stage 31:==================================================>   (115 + 7) / 122][Stage 31:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.488477925 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=112", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=112,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439488173 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:================================>                     (72 + 46) / 118][Stage 32:===================================>                  (77 + 41) / 118][Stage 32:========================================>             (89 + 29) / 118][Stage 32:===============================================>     (105 + 13) / 118][Stage 32:===================================================>  (113 + 5) / 118][Stage 32:=====================================================>(117 + 1) / 118]                                                                                [Stage 33:=================================>                    (73 + 46) / 119][Stage 33:====================================>                 (80 + 39) / 119][Stage 33:==========================================>           (94 + 25) / 119][Stage 33:================================================>    (108 + 11) / 119][Stage 33:====================================================> (115 + 4) / 119][Stage 33:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.484260207 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=100", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=100,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.554893424 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:============================>                         (59 + 54) / 113][Stage 34:====================================>                 (76 + 37) / 113][Stage 34:==============================================>       (97 + 16) / 113][Stage 34:====================================================> (109 + 4) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:===========================>                          (59 + 55) / 114][Stage 35:==============================>                       (64 + 50) / 114][Stage 35:=======================================>              (83 + 31) / 114][Stage 35:================================================>    (104 + 10) / 114][Stage 35:===================================================>  (108 + 6) / 114][Stage 35:===================================================>  (109 + 5) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.562370469 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435132374 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==================================>                   (73 + 40) / 113][Stage 36:=======================================>              (83 + 30) / 113][Stage 36:============================================>         (93 + 20) / 113][Stage 36:===============================================>     (102 + 11) / 113][Stage 36:=====================================================>(111 + 2) / 113][Stage 36:=====================================================>(112 + 1) / 113]                                                                                [Stage 37:===================================>                  (75 + 39) / 114][Stage 37:========================================>             (86 + 28) / 114][Stage 37:=============================================>        (97 + 17) / 114][Stage 37:=================================================>    (105 + 9) / 114][Stage 37:===================================================>  (109 + 5) / 114][Stage 37:=====================================================>(112 + 2) / 114][Stage 37:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.681275762 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=238", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=238,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.526184272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:=====================================>                (78 + 35) / 113][Stage 38:==========================================>           (89 + 24) / 113][Stage 38:===============================================>     (102 + 11) / 113][Stage 38:====================================================> (109 + 4) / 113][Stage 38:=====================================================>(111 + 2) / 113]                                                                                [Stage 39:==================================>                   (73 + 41) / 114][Stage 39:======================================>               (82 + 32) / 114][Stage 39:==============================================>       (98 + 16) / 114][Stage 39:====================================================> (110 + 4) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.172741247 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461307208 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:================================>                     (70 + 45) / 115][Stage 40:========================================>             (87 + 28) / 115][Stage 40:==============================================>      (100 + 15) / 115][Stage 40:====================================================> (111 + 4) / 115]                                                                                [Stage 41:==================================>                   (75 + 41) / 116][Stage 41:========================================>             (86 + 30) / 116][Stage 41:==============================================>      (101 + 15) / 116][Stage 41:====================================================> (112 + 4) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.016948466 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=20", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=20,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436201114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:=====================================>                (79 + 34) / 113][Stage 42:==========================================>           (89 + 24) / 113][Stage 42:=============================================>        (96 + 17) / 113][Stage 42:=================================================>    (104 + 9) / 113][Stage 42:===================================================>  (108 + 5) / 113][Stage 42:====================================================> (110 + 3) / 113][Stage 42:=====================================================>(112 + 1) / 113]                                                                                [Stage 43:===================================>                  (75 + 39) / 114][Stage 43:==========================================>           (90 + 24) / 114][Stage 43:==============================================>       (98 + 16) / 114][Stage 43:===============================================>     (103 + 11) / 114][Stage 43:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.658531072 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=216", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=216,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419372978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:==================================>                   (73 + 40) / 113][Stage 44:========================================>             (84 + 29) / 113][Stage 44:===========================================>          (92 + 21) / 113][Stage 44:================================================>    (103 + 10) / 113][Stage 44:====================================================> (110 + 3) / 113]                                                                                [Stage 45:=========================================>            (88 + 26) / 114][Stage 45:===========================================>          (91 + 23) / 114][Stage 45:===============================================>     (103 + 11) / 114][Stage 45:===================================================>  (109 + 5) / 114][Stage 45:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.278879445 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.57925198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (60 + 60) / 120][Stage 46:=============================>                        (66 + 54) / 120][Stage 46:====================================>                 (80 + 40) / 120][Stage 46:==============================================>      (105 + 15) / 120]                                                                                [Stage 47:===========================>                          (61 + 60) / 121][Stage 47:=============================>                        (67 + 54) / 121][Stage 47:======================================>               (87 + 34) / 121][Stage 47:================================================>    (111 + 10) / 121][Stage 47:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.139150221 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439022074 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:================================>                     (72 + 46) / 118][Stage 48:=================================>                    (74 + 44) / 118][Stage 48:======================================>               (85 + 33) / 118][Stage 48:===========================================>          (96 + 22) / 118][Stage 48:=================================================>    (109 + 9) / 118][Stage 48:====================================================> (115 + 3) / 118]                                                                                [Stage 49:=================================>                    (73 + 46) / 119][Stage 49:====================================>                 (81 + 38) / 119][Stage 49:==========================================>           (94 + 25) / 119][Stage 49:================================================>    (109 + 10) / 119][Stage 49:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.381323362 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=22", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=22,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421526319 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:================================>                     (72 + 46) / 118][Stage 50:=================================>                    (74 + 44) / 118][Stage 50:======================================>               (85 + 33) / 118][Stage 50:============================================>         (98 + 20) / 118][Stage 50:===================================================>  (112 + 6) / 118][Stage 50:=====================================================>(116 + 2) / 118]                                                                                [Stage 51:==================================>                   (76 + 43) / 119][Stage 51:======================================>               (85 + 34) / 119][Stage 51:============================================>        (100 + 19) / 119][Stage 51:=================================================>    (110 + 9) / 119]                                                                                Time elapsed: 3.262154873 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=12", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=12,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45529691 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (60 + 60) / 120][Stage 52:============================>                         (63 + 57) / 120][Stage 52:===================================>                  (79 + 41) / 120][Stage 52:=============================================>       (102 + 18) / 120][Stage 52:===================================================>  (114 + 6) / 120]                                                                                [Stage 53:===========================>                          (61 + 60) / 121][Stage 53:============================>                         (63 + 58) / 121][Stage 53:==================================>                   (77 + 44) / 121][Stage 53:===========================================>          (98 + 23) / 121][Stage 53:==================================================>   (114 + 7) / 121][Stage 53:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.32283236 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=179", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=179,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441617734 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (58 + 55) / 113][Stage 54:==============================>                       (63 + 50) / 113][Stage 54:========================================>             (85 + 28) / 113][Stage 54:===============================================>      (99 + 14) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:=============================>                        (63 + 51) / 114][Stage 55:==================================>                   (73 + 41) / 114][Stage 55:===========================================>          (92 + 22) / 114][Stage 55:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.039872748 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=36", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=36,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464957028 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (60 + 60) / 120][Stage 56:==============================>                       (68 + 52) / 120][Stage 56:=====================================>                (84 + 36) / 120][Stage 56:============================================>        (100 + 20) / 120][Stage 56:=====================================================>(119 + 1) / 120]                                                                                [Stage 57:===========================>                          (61 + 60) / 121][Stage 57:==============================>                       (68 + 53) / 121][Stage 57:========================================>             (91 + 30) / 121][Stage 57:====================================================> (117 + 4) / 121][Stage 57:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.291916549 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=218", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=218,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399411444 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==================================>                   (73 + 40) / 113][Stage 58:=======================================>              (82 + 31) / 113][Stage 58:============================================>         (93 + 20) / 113][Stage 58:================================================>    (103 + 10) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:=====================================>                (80 + 34) / 114][Stage 59:==========================================>           (89 + 25) / 114][Stage 59:===============================================>     (103 + 11) / 114][Stage 59:====================================================> (111 + 3) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.227438306 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=209", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=209,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385693047 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:=====================================>                (80 + 35) / 115][Stage 60:======================================>               (83 + 32) / 115][Stage 60:==============================================>       (98 + 17) / 115][Stage 60:==================================================>   (108 + 7) / 115][Stage 60:=====================================================>(114 + 1) / 115]                                                                                [Stage 61:=======================================>              (84 + 32) / 116][Stage 61:==========================================>           (91 + 25) / 116][Stage 61:===============================================>     (105 + 11) / 116][Stage 61:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.761649819 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=177", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=177,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41539224 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:=====================================>                (78 + 35) / 113][Stage 62:===========================================>          (91 + 22) / 113][Stage 62:==============================================>       (98 + 15) / 113][Stage 62:===================================================>  (108 + 5) / 113][Stage 62:=====================================================>(111 + 2) / 113]                                                                                [Stage 63:=====================================>                (80 + 34) / 114][Stage 63:==========================================>           (90 + 24) / 114][Stage 63:================================================>    (104 + 10) / 114][Stage 63:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.090388061 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=16", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=16,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414640001 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==============================>                       (65 + 50) / 115][Stage 64:===================================>                  (76 + 39) / 115][Stage 64:===========================================>          (93 + 22) / 115][Stage 64:=================================================>    (106 + 9) / 115][Stage 64:====================================================> (111 + 4) / 115][Stage 64:=====================================================>(114 + 1) / 115]                                                                                [Stage 65:===============================>                      (67 + 49) / 116][Stage 65:===================================>                  (76 + 40) / 116][Stage 65:=============================================>        (98 + 18) / 116][Stage 65:==================================================>   (108 + 8) / 116][Stage 65:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.538077495 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=57", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=57,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444247994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:============================>                         (59 + 54) / 113][Stage 66:=============================>                        (62 + 51) / 113][Stage 66:=====================================>                (79 + 34) / 113][Stage 66:==============================================>       (97 + 16) / 113][Stage 66:===================================================>  (108 + 5) / 113][Stage 66:=====================================================>(112 + 1) / 113]                                                                                [Stage 67:============================>                         (61 + 53) / 114][Stage 67:===============================>                      (66 + 48) / 114][Stage 67:=====================================>                (80 + 34) / 114][Stage 67:==============================================>      (101 + 13) / 114][Stage 67:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.321534568 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=87", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=87,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375694391 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:=======================================>              (85 + 30) / 115][Stage 68:==============================================>       (99 + 16) / 115][Stage 68:==================================================>   (108 + 7) / 115]                                                                                [Stage 69:=======================================>              (85 + 31) / 116][Stage 69:=============================================>        (98 + 18) / 116][Stage 69:===============================================>     (104 + 12) / 116][Stage 69:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.655089668 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=202", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=202,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.556941588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (58 + 55) / 113][Stage 70:==============================>                       (64 + 49) / 113][Stage 70:======================================>               (81 + 32) / 113][Stage 70:==================================================>   (105 + 8) / 113]                                                                                [Stage 71:===========================>                          (59 + 55) / 114][Stage 71:=================================>                    (71 + 43) / 114][Stage 71:=========================================>            (88 + 26) / 114][Stage 71:==================================================>   (107 + 7) / 114][Stage 71:====================================================> (110 + 4) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.259346305 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=152", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=152,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399759705 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==================================>                   (73 + 40) / 113][Stage 72:========================================>             (85 + 28) / 113][Stage 72:=============================================>        (95 + 18) / 113][Stage 72:===============================================>     (102 + 11) / 113][Stage 72:=====================================================>(112 + 1) / 113]                                                                                [Stage 73:====================================>                 (77 + 37) / 114][Stage 73:=========================================>            (88 + 26) / 114][Stage 73:==============================================>       (99 + 15) / 114][Stage 73:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.105226702 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=186", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=186,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383279189 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:================================>                     (72 + 46) / 118][Stage 74:=====================================>                (82 + 36) / 118][Stage 74:==========================================>           (92 + 26) / 118][Stage 74:=================================================>    (109 + 9) / 118]                                                                                [Stage 75:=================================>                    (73 + 46) / 119][Stage 75:===================================>                  (78 + 41) / 119][Stage 75:========================================>             (89 + 30) / 119][Stage 75:==============================================>      (104 + 15) / 119][Stage 75:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.293182019 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365517634 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:=======================================>              (85 + 30) / 115][Stage 76:=============================================>        (96 + 19) / 115][Stage 76:==================================================>   (108 + 7) / 115][Stage 76:=====================================================>(114 + 1) / 115]                                                                                [Stage 77:========================================>             (86 + 30) / 116][Stage 77:==============================================>      (101 + 15) / 116][Stage 77:=====================================================>(114 + 2) / 116][Stage 77:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.875883359 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443256755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:==========================>                           (60 + 61) / 121][Stage 78:=============================>                        (67 + 54) / 121][Stage 78:=====================================>                (84 + 37) / 121][Stage 78:=============================================>       (105 + 16) / 121][Stage 78:=====================================================>(120 + 1) / 121]                                                                                [Stage 79:============================>                         (65 + 57) / 122][Stage 79:=====================================>                (84 + 38) / 122][Stage 79:==============================================>      (106 + 16) / 122][Stage 79:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.023473126 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=50", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=50,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403247164 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (59 + 54) / 113][Stage 80:================================>                     (67 + 46) / 113][Stage 80:=========================================>            (87 + 26) / 113][Stage 80:===================================================>  (107 + 6) / 113]                                                                                [Stage 81:=============================>                        (62 + 52) / 114][Stage 81:====================================>                 (77 + 37) / 114][Stage 81:==============================================>      (101 + 13) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.926218769 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397551826 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:>                                                       (0 + 0) / 115][Stage 82:=================================>                    (71 + 44) / 115][Stage 82:======================================>               (81 + 34) / 115][Stage 82:==============================================>       (99 + 16) / 115][Stage 82:===================================================>  (110 + 5) / 115]                                                                                [Stage 83:==================================>                   (75 + 41) / 116][Stage 83:==========================================>           (92 + 24) / 116][Stage 83:===============================================>     (105 + 11) / 116][Stage 83:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.978171638 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=208", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=208,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388649309 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:================================>                     (72 + 46) / 118][Stage 84:=================================>                    (74 + 44) / 118][Stage 84:=======================================>              (87 + 31) / 118][Stage 84:================================================>    (107 + 11) / 118][Stage 84:=====================================================>(117 + 1) / 118]                                                                                [Stage 85:=================================>                    (73 + 46) / 119][Stage 85:==================================>                   (77 + 42) / 119][Stage 85:========================================>             (89 + 30) / 119][Stage 85:=============================================>       (102 + 17) / 119][Stage 85:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.072855337 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=147", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=147,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407300524 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (58 + 55) / 113][Stage 86:============================>                         (60 + 53) / 113][Stage 86:==================================>                   (73 + 40) / 113][Stage 86:===========================================>          (92 + 21) / 113][Stage 86:=====================================================>(111 + 2) / 113]                                                                                [Stage 87:============================>                         (61 + 53) / 114][Stage 87:====================================>                 (77 + 37) / 114][Stage 87:=============================================>        (96 + 18) / 114][Stage 87:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.095434452 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371270753 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:=====================================>                (79 + 34) / 113][Stage 88:==========================================>           (88 + 25) / 113][Stage 88:=============================================>        (95 + 18) / 113][Stage 88:===================================================>  (107 + 6) / 113][Stage 88:=====================================================>(112 + 1) / 113]                                                                                [Stage 89:===================================>                  (74 + 40) / 114][Stage 89:=========================================>            (87 + 27) / 114][Stage 89:==============================================>       (98 + 16) / 114][Stage 89:==================================================>   (106 + 8) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.184700492 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=143", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=143,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419275901 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:==========================>                           (60 + 61) / 121][Stage 90:===============================>                      (70 + 51) / 121][Stage 90:==========================================>           (95 + 26) / 121][Stage 90:==================================================>   (114 + 7) / 121]                                                                                [Stage 91:===========================>                          (62 + 60) / 122][Stage 91:==================================>                   (78 + 44) / 122][Stage 91:===========================================>          (98 + 24) / 122][Stage 91:================================================>    (111 + 11) / 122]                                                                                Time elapsed: 3.02554407 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=236", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=236,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385787309 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:================================>                     (72 + 46) / 118][Stage 92:==================================>                   (76 + 42) / 118][Stage 92:=======================================>              (86 + 32) / 118][Stage 92:===============================================>     (105 + 13) / 118][Stage 92:=====================================================>(117 + 1) / 118]                                                                                [Stage 93:=================================>                    (73 + 46) / 119][Stage 93:===================================>                  (78 + 41) / 119][Stage 93:=========================================>            (92 + 27) / 119][Stage 93:==================================================>   (111 + 8) / 119][Stage 93:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.122397889 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=42", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=42,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360640916 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:======================================>               (82 + 33) / 115][Stage 94:========================================>             (86 + 29) / 115][Stage 94:==============================================>       (99 + 16) / 115][Stage 94:====================================================> (111 + 4) / 115]                                                                                [Stage 95:=======================================>              (84 + 32) / 116][Stage 95:==========================================>           (92 + 24) / 116][Stage 95:===============================================>     (103 + 13) / 116][Stage 95:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.881751946 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=154", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=154,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364279054 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:====================================>                 (76 + 37) / 113][Stage 96:=========================================>            (86 + 27) / 113][Stage 96:===============================================>      (99 + 14) / 113][Stage 96:==================================================>   (105 + 8) / 113][Stage 96:=====================================================>(112 + 1) / 113]                                                                                [Stage 97:====================================>                 (78 + 36) / 114][Stage 97:==========================================>           (90 + 24) / 114][Stage 97:==============================================>       (99 + 15) / 114][Stage 97:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 2.908865961 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=145", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=145,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349423519 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=====================================>                (80 + 35) / 115][Stage 98:=======================================>              (85 + 30) / 115][Stage 98:=============================================>        (96 + 19) / 115][Stage 98:=====================================================>(113 + 2) / 115]                                                                                [Stage 99:======================================>               (83 + 33) / 116][Stage 99:=========================================>            (90 + 26) / 116][Stage 99:==============================================>      (101 + 15) / 116][Stage 99:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.705350329 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38656417 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (72 + 46) / 118][Stage 100:===================================>                 (78 + 40) / 118][Stage 100:========================================>            (91 + 27) / 118][Stage 100:============================================>       (102 + 16) / 118][Stage 100:==================================================>  (113 + 5) / 118][Stage 100:====================================================>(117 + 1) / 118]                                                                                [Stage 101:================================>                    (74 + 45) / 119][Stage 101:==================================>                  (78 + 41) / 119][Stage 101:===========================================>         (98 + 21) / 119][Stage 101:=================================================>   (112 + 7) / 119][Stage 101:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.238922446 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=242", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=242,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402403127 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:============================>                        (60 + 53) / 113][Stage 102:==============================>                      (66 + 47) / 113][Stage 102:===========================================>         (92 + 21) / 113][Stage 102:=================================================>   (106 + 7) / 113][Stage 102:====================================================>(112 + 1) / 113]                                                                                [Stage 103:=============================>                       (63 + 51) / 114][Stage 103:=================================>                   (72 + 42) / 114][Stage 103:===========================================>         (94 + 20) / 114][Stage 103:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.126766393 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=23", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=23,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411469044 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (60 + 60) / 120][Stage 104:====================================>                (83 + 37) / 120][Stage 104:===========================================>         (98 + 22) / 120][Stage 104:===================================================> (116 + 4) / 120]                                                                                [Stage 105:===========================>                         (62 + 59) / 121][Stage 105:================================>                    (75 + 46) / 121][Stage 105:========================================>            (93 + 28) / 121][Stage 105:==============================================>     (108 + 13) / 121]                                                                                Time elapsed: 3.134878853 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=225", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=225,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412421424 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:=============================>                       (65 + 50) / 115][Stage 106:==================================>                  (74 + 41) / 115][Stage 106:===========================================>         (94 + 21) / 115][Stage 106:================================================>    (106 + 9) / 115][Stage 106:==================================================>  (110 + 5) / 115][Stage 106:====================================================>(114 + 1) / 115]                                                                                [Stage 107:===============================>                     (69 + 47) / 116][Stage 107:=====================================>               (82 + 34) / 116][Stage 107:============================================>        (98 + 18) / 116][Stage 107:================================================>    (107 + 9) / 116][Stage 107:===================================================> (113 + 3) / 116][Stage 107:====================================================>(114 + 2) / 116][Stage 107:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.534228941 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=204", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=204,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374510193 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:======================================>              (82 + 31) / 113][Stage 108:===========================================>         (93 + 20) / 113][Stage 108:==============================================>     (102 + 11) / 113][Stage 108:====================================================>(111 + 2) / 113]                                                                                [Stage 109:==================================>                  (75 + 39) / 114][Stage 109:=======================================>             (84 + 30) / 114][Stage 109:=============================================>       (98 + 16) / 114][Stage 109:=================================================>   (107 + 7) / 114][Stage 109:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.905615127 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=37", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=37,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405738887 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (59 + 54) / 113][Stage 110:================================>                    (69 + 44) / 113][Stage 110:=========================================>           (88 + 25) / 113][Stage 110:==============================================>     (102 + 11) / 113][Stage 110:====================================================>(112 + 1) / 113]                                                                                [Stage 111:===========================>                         (60 + 54) / 114][Stage 111:================================>                    (70 + 44) / 114][Stage 111:=======================================>             (85 + 29) / 114][Stage 111:=============================================>      (100 + 14) / 114][Stage 111:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.077270129 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=230", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=230,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380038273 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:=================================>                   (73 + 42) / 115][Stage 112:=========================================>           (91 + 24) / 115][Stage 112:================================================>    (106 + 9) / 115]                                                                                [Stage 113:==================================>                  (75 + 41) / 116][Stage 113:==========================================>          (94 + 22) / 116][Stage 113:==============================================>     (104 + 12) / 116][Stage 113:===================================================> (113 + 3) / 116][Stage 113:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.832555166 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=33", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=33,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38834977 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (59 + 54) / 113][Stage 114:================================>                    (70 + 43) / 113][Stage 114:=========================================>           (89 + 24) / 113][Stage 114:==================================================>  (107 + 6) / 113][Stage 114:===================================================> (109 + 4) / 113]                                                                                [Stage 115:===========================>                         (60 + 54) / 114][Stage 115:=================================>                   (73 + 41) / 114][Stage 115:========================================>            (88 + 26) / 114][Stage 115:=================================================>   (106 + 8) / 114][Stage 115:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.227883796 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=6", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=6,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406645266 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:============================>                        (64 + 56) / 120][Stage 116:===============================>                     (72 + 48) / 120][Stage 116:========================================>            (92 + 28) / 120][Stage 116:=================================================>   (113 + 7) / 120]                                                                                [Stage 117:===========================>                         (62 + 59) / 121][Stage 117:===============================>                     (71 + 50) / 121][Stage 117:==========================================>          (98 + 23) / 121][Stage 117:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 2.971907916 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=124", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=124,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35189838 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:====================================>                (77 + 36) / 113][Stage 118:=========================================>           (88 + 25) / 113][Stage 118:==============================================>     (101 + 12) / 113][Stage 118:==================================================>  (107 + 6) / 113][Stage 118:====================================================>(111 + 2) / 113]                                                                                [Stage 119:=====================================>               (81 + 33) / 114][Stage 119:=========================================>           (90 + 24) / 114][Stage 119:==============================================>     (101 + 13) / 114][Stage 119:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.108087426 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=7", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=7,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385934991 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:============================>                        (60 + 53) / 113][Stage 120:================================>                    (69 + 44) / 113][Stage 120:==========================================>          (90 + 23) / 113][Stage 120:================================================>    (104 + 9) / 113]                                                                                [Stage 121:============================>                        (61 + 53) / 114][Stage 121:=================================>                   (72 + 42) / 114][Stage 121:========================================>            (88 + 26) / 114][Stage 121:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.014386468 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=63", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=63,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380534172 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:============================>                        (60 + 53) / 113][Stage 122:================================>                    (69 + 44) / 113][Stage 122:=============================================>       (97 + 16) / 113][Stage 122:===================================================> (110 + 3) / 113]                                                                                [Stage 123:===========================>                         (59 + 55) / 114][Stage 123:==============================>                      (66 + 48) / 114][Stage 123:========================================>            (88 + 26) / 114][Stage 123:================================================>    (105 + 9) / 114][Stage 123:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.952324763 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=207", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=207,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407642527 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 60) / 120][Stage 124:=============================>                       (67 + 53) / 120][Stage 124:===================================>                 (80 + 40) / 120][Stage 124:=================================================>   (111 + 9) / 120]                                                                                [Stage 125:===========================>                         (63 + 58) / 121][Stage 125:=================================>                   (77 + 44) / 121][Stage 125:======================================>              (89 + 32) / 121][Stage 125:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 2.88455944 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=199", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=199,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366794056 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==================================>                  (73 + 40) / 113][Stage 126:==========================================>          (90 + 23) / 113][Stage 126:=============================================>       (96 + 17) / 113][Stage 126:==================================================>  (108 + 5) / 113]                                                                                [Stage 127:=====================================>               (80 + 34) / 114][Stage 127:===========================================>         (93 + 21) / 114][Stage 127:===============================================>    (104 + 10) / 114][Stage 127:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.909787395 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=15", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=15,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39433543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (58 + 55) / 113][Stage 128:=================================>                   (71 + 42) / 113][Stage 128:=======================================>             (84 + 29) / 113][Stage 128:===============================================>    (103 + 10) / 113][Stage 128:====================================================>(112 + 1) / 113]                                                                                [Stage 129:===========================>                         (60 + 54) / 114][Stage 129:==================================>                  (75 + 39) / 114][Stage 129:=========================================>           (90 + 24) / 114][Stage 129:================================================>    (105 + 9) / 114][Stage 129:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.311928644 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=164", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=164,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344425302 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:=======================================>             (86 + 29) / 115][Stage 130:=========================================>           (91 + 24) / 115][Stage 130:==============================================>     (103 + 12) / 115][Stage 130:====================================================>(114 + 1) / 115]                                                                                [Stage 131:=====================================>               (82 + 34) / 116][Stage 131:=======================================>             (86 + 30) / 116][Stage 131:============================================>        (98 + 18) / 116][Stage 131:==================================================>  (110 + 6) / 116][Stage 131:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.76201153 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=175", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=175,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339127743 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:======================================>              (83 + 32) / 115][Stage 132:============================================>        (96 + 19) / 115][Stage 132:===============================================>    (104 + 11) / 115][Stage 132:===================================================> (111 + 4) / 115]                                                                                [Stage 133:======================================>              (84 + 32) / 116][Stage 133:==========================================>          (92 + 24) / 116][Stage 133:================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.726995999 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383784833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==================================>                  (74 + 41) / 115][Stage 134:=========================================>           (91 + 24) / 115][Stage 134:=================================================>   (107 + 8) / 115][Stage 134:====================================================>(114 + 1) / 115]                                                                                [Stage 135:================================>                    (71 + 45) / 116][Stage 135:======================================>              (84 + 32) / 116][Stage 135:============================================>        (98 + 18) / 116][Stage 135:===================================================> (112 + 4) / 116][Stage 135:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.793031125 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=62", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=62,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354336379 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===================================>                 (75 + 38) / 113][Stage 136:=========================================>           (89 + 24) / 113][Stage 136:=============================================>       (97 + 16) / 113][Stage 136:===================================================> (109 + 4) / 113][Stage 136:====================================================>(112 + 1) / 113]                                                                                [Stage 137:=====================================>               (80 + 34) / 114][Stage 137:=========================================>           (90 + 24) / 114][Stage 137:==============================================>     (101 + 13) / 114][Stage 137:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.194762875 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=11", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=11,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373605855 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:=============================>                       (64 + 51) / 115][Stage 138:==================================>                  (75 + 40) / 115][Stage 138:===========================================>         (95 + 20) / 115][Stage 138:===============================================>    (104 + 11) / 115][Stage 138:==================================================>  (109 + 6) / 115][Stage 138:====================================================>(114 + 1) / 115]                                                                                [Stage 139:===============================>                     (70 + 46) / 116][Stage 139:=====================================>               (81 + 35) / 116][Stage 139:============================================>        (97 + 19) / 116][Stage 139:=================================================>   (108 + 8) / 116][Stage 139:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.536480319 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=75", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=75,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.512167884 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 61) / 121][Stage 140:=============================>                       (67 + 54) / 121][Stage 140:===================================>                 (80 + 41) / 121][Stage 140:==============================================>     (109 + 12) / 121][Stage 140:===================================================> (118 + 3) / 121]                                                                                [Stage 141:============================>                        (65 + 57) / 122][Stage 141:===================================>                 (81 + 41) / 122][Stage 141:=============================================>      (106 + 16) / 122][Stage 141:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.030718674 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=122", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=122,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35540484 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:=====================================>               (80 + 33) / 113][Stage 142:===========================================>         (92 + 21) / 113][Stage 142:===============================================>    (103 + 10) / 113][Stage 142:==================================================>  (108 + 5) / 113][Stage 142:====================================================>(112 + 1) / 113]                                                                                [Stage 143:=======================================>             (86 + 28) / 114][Stage 143:============================================>        (95 + 19) / 114][Stage 143:=================================================>   (106 + 8) / 114][Stage 143:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.132890272 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=2", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=2,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35395606 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:======================================>              (83 + 30) / 113][Stage 144:===========================================>         (93 + 20) / 113][Stage 144:==============================================>     (101 + 12) / 113][Stage 144:==================================================>  (107 + 6) / 113]                                                                                [Stage 145:=======================================>             (84 + 30) / 114][Stage 145:=========================================>           (90 + 24) / 114][Stage 145:==============================================>      (99 + 15) / 114][Stage 145:=================================================>   (107 + 7) / 114][Stage 145:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.336249587 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=228", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=228,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387844412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (59 + 54) / 113][Stage 146:==================================>                  (74 + 39) / 113][Stage 146:==========================================>          (91 + 22) / 113][Stage 146:===================================================> (110 + 3) / 113]                                                                                [Stage 147:==============================>                      (66 + 48) / 114][Stage 147:=====================================>               (80 + 34) / 114][Stage 147:==============================================>     (103 + 11) / 114][Stage 147:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.859574895 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=181", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=181,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456665797 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:====================================>                (77 + 36) / 113][Stage 148:========================================>            (86 + 27) / 113][Stage 148:=============================================>       (97 + 16) / 113][Stage 148:==================================================>  (107 + 6) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:====================================>                (79 + 35) / 114][Stage 149:==========================================>          (91 + 23) / 114][Stage 149:==============================================>      (99 + 15) / 114][Stage 149:===================================================> (111 + 3) / 114][Stage 149:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.113526919 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=52", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=52,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336371805 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:=====================================>               (81 + 34) / 115][Stage 150:======================================>              (83 + 32) / 115][Stage 150:==========================================>          (93 + 22) / 115][Stage 150:===============================================>    (105 + 10) / 115]                                                                                [Stage 151:=====================================>               (83 + 33) / 116][Stage 151:=========================================>           (91 + 25) / 116][Stage 151:=============================================>      (102 + 14) / 116][Stage 151:===================================================> (113 + 3) / 116][Stage 151:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.968497713 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=187", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=187,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383962153 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==============================>                      (66 + 49) / 115][Stage 152:====================================>                (80 + 35) / 115][Stage 152:============================================>        (97 + 18) / 115][Stage 152:================================================>    (106 + 9) / 115][Stage 152:===================================================> (111 + 4) / 115]                                                                                [Stage 153:====================================>                (79 + 37) / 116][Stage 153:===========================================>         (96 + 20) / 116][Stage 153:=================================================>   (108 + 8) / 116][Stage 153:===================================================> (113 + 3) / 116][Stage 153:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.205305901 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=55", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=55,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372956716 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==============================>                      (66 + 49) / 115][Stage 154:===================================>                 (76 + 39) / 115][Stage 154:==========================================>          (93 + 22) / 115][Stage 154:===============================================>    (105 + 10) / 115]                                                                                [Stage 155:==================================>                  (76 + 40) / 116][Stage 155:========================================>            (89 + 27) / 116][Stage 155:=============================================>      (101 + 15) / 116][Stage 155:===================================================> (113 + 3) / 116][Stage 155:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.07897323 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335115005 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:>                                                      (0 + 0) / 115][Stage 156:=====================================>               (81 + 34) / 115][Stage 156:========================================>            (87 + 28) / 115][Stage 156:=================================================>   (108 + 7) / 115]                                                                                [Stage 157:=======================================>             (86 + 30) / 116][Stage 157:==========================================>          (92 + 24) / 116][Stage 157:===============================================>    (105 + 11) / 116][Stage 157:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.979960013 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350953222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===================================>                 (75 + 38) / 113][Stage 158:==========================================>          (90 + 23) / 113][Stage 158:==============================================>     (101 + 12) / 113][Stage 158:===================================================> (109 + 4) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:=====================================>               (80 + 34) / 114][Stage 159:========================================>            (88 + 26) / 114][Stage 159:=============================================>       (97 + 17) / 114][Stage 159:==================================================>  (108 + 6) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.048723059 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=56", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=56,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40302603 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (62 + 59) / 121][Stage 160:================================>                    (75 + 46) / 121][Stage 160:===========================================>         (99 + 22) / 121][Stage 160:==================================================>  (116 + 5) / 121]                                                                                [Stage 161:==========================>                          (61 + 61) / 122][Stage 161:===============================>                     (72 + 50) / 122][Stage 161:=======================================>             (92 + 30) / 122][Stage 161:==============================================>     (108 + 14) / 122][Stage 161:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.164432014 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=197", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=197,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368483858 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:================================>                    (73 + 45) / 118][Stage 162:====================================>                (82 + 36) / 118][Stage 162:==========================================>          (94 + 24) / 118][Stage 162:=================================================>   (110 + 8) / 118]                                                                                [Stage 163:================================>                    (73 + 46) / 119][Stage 163:===================================>                 (80 + 39) / 119][Stage 163:========================================>            (92 + 27) / 119][Stage 163:==============================================>     (106 + 13) / 119][Stage 163:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.131987322 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=94", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=94,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366305439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===============================>                     (69 + 46) / 115][Stage 164:====================================>                (80 + 35) / 115][Stage 164:============================================>        (96 + 19) / 115][Stage 164:=================================================>   (108 + 7) / 115][Stage 164:====================================================>(114 + 1) / 115]                                                                                [Stage 165:=================================>                   (74 + 42) / 116][Stage 165:=========================================>           (90 + 26) / 116][Stage 165:================================================>    (107 + 9) / 116][Stage 165:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.854498705 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398235012 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (61 + 59) / 120][Stage 166:=================================>                   (75 + 45) / 120][Stage 166:============================================>       (102 + 18) / 120][Stage 166:==================================================>  (114 + 6) / 120]                                                                                [Stage 167:============================>                        (64 + 57) / 121][Stage 167:===================================>                 (81 + 40) / 121][Stage 167:==========================================>         (100 + 21) / 121][Stage 167:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 2.937625647 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=231", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=231,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395426152 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (59 + 54) / 113][Stage 168:=============================>                       (62 + 51) / 113][Stage 168:====================================>                (77 + 36) / 113][Stage 168:============================================>        (95 + 18) / 113][Stage 168:==================================================>  (107 + 6) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:===========================>                         (60 + 54) / 114][Stage 169:==============================>                      (66 + 48) / 114][Stage 169:======================================>              (82 + 32) / 114][Stage 169:=============================================>      (100 + 14) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.433015858 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=247 AND partitionZIndex<=247", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=247 AND partitionZIndex<=247,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40470445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 60) / 120][Stage 170:==============================>                      (68 + 52) / 120][Stage 170:====================================>                (82 + 38) / 120][Stage 170:===========================================>        (101 + 19) / 120][Stage 170:===================================================> (116 + 4) / 120]                                                                                [Stage 171:============================>                        (65 + 56) / 121][Stage 171:==================================>                  (79 + 42) / 121][Stage 171:=========================================>           (95 + 26) / 121][Stage 171:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.134035505 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=156", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=156,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332745107 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=====================================>               (81 + 34) / 115][Stage 172:=======================================>             (86 + 29) / 115][Stage 172:=============================================>      (101 + 14) / 115][Stage 172:==================================================>  (109 + 6) / 115]                                                                                [Stage 173:======================================>              (84 + 32) / 116][Stage 173:============================================>        (98 + 18) / 116][Stage 173:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.617068501 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=53", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=53,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370950378 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===================================>                 (76 + 39) / 115][Stage 174:=========================================>           (90 + 25) / 115][Stage 174:=================================================>   (107 + 8) / 115][Stage 174:====================================================>(114 + 1) / 115]                                                                                [Stage 175:===============================>                     (70 + 46) / 116][Stage 175:========================================>            (88 + 28) / 116][Stage 175:=============================================>      (102 + 14) / 116][Stage 175:=================================================>   (109 + 7) / 116][Stage 175:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.971110304 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=213", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=213,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335583366 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=======================================>             (86 + 29) / 115][Stage 176:=============================================>      (100 + 15) / 115][Stage 176:=================================================>   (108 + 7) / 115][Stage 176:====================================================>(113 + 2) / 115]                                                                                [Stage 177:=====================================>               (82 + 34) / 116][Stage 177:=======================================>             (87 + 29) / 116][Stage 177:==============================================>     (103 + 13) / 116][Stage 177:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.665780491 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49920917 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (58 + 55) / 113][Stage 178:=============================>                       (63 + 50) / 113][Stage 178:=======================================>             (84 + 29) / 113][Stage 178:=================================================>   (106 + 7) / 113][Stage 178:====================================================>(111 + 2) / 113]                                                                                [Stage 179:===========================>                         (59 + 55) / 114][Stage 179:==============================>                      (65 + 49) / 114][Stage 179:======================================>              (82 + 32) / 114][Stage 179:==============================================>     (103 + 11) / 114][Stage 179:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.164285662 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=146", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=146,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396350513 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (59 + 54) / 113][Stage 180:===============================>                     (68 + 45) / 113][Stage 180:=====================================>               (80 + 33) / 113][Stage 180:=============================================>       (97 + 16) / 113][Stage 180:====================================================>(111 + 2) / 113]                                                                                [Stage 181:===========================>                         (59 + 55) / 114][Stage 181:============================>                        (62 + 52) / 114][Stage 181:====================================>                (79 + 35) / 114][Stage 181:=============================================>      (100 + 14) / 114][Stage 181:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.097935218 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448509341 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (60 + 61) / 121][Stage 182:===========================>                         (63 + 58) / 121][Stage 182:===================================>                 (80 + 41) / 121][Stage 182:==========================================>          (97 + 24) / 121][Stage 182:==================================================>  (115 + 6) / 121][Stage 182:===================================================> (118 + 3) / 121]                                                                                [Stage 183:==========================>                          (61 + 61) / 122][Stage 183:============================>                        (65 + 57) / 122][Stage 183:======================================>              (89 + 33) / 122][Stage 183:===========================================>        (101 + 21) / 122][Stage 183:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.219661352 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=68", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=68,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339501225 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=====================================>               (82 + 33) / 115][Stage 184:============================================>        (97 + 18) / 115][Stage 184:=================================================>   (107 + 8) / 115][Stage 184:====================================================>(114 + 1) / 115]                                                                                [Stage 185:=====================================>               (82 + 34) / 116][Stage 185:==========================================>          (93 + 23) / 116][Stage 185:=============================================>      (102 + 14) / 116][Stage 185:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.754572775 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386955115 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (59 + 54) / 113][Stage 186:==============================>                      (66 + 47) / 113][Stage 186:===========================================>         (92 + 21) / 113][Stage 186:===============================================>    (103 + 10) / 113][Stage 186:====================================================>(111 + 2) / 113]                                                                                [Stage 187:===========================>                         (60 + 54) / 114][Stage 187:=============================>                       (64 + 50) / 114][Stage 187:======================================>              (82 + 32) / 114][Stage 187:=============================================>      (100 + 14) / 114][Stage 187:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.124962175 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=45", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=45,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488719413 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:=====================================>               (81 + 32) / 113][Stage 188:============================================>        (94 + 19) / 113][Stage 188:=================================================>   (105 + 8) / 113][Stage 188:===================================================> (110 + 3) / 113]                                                                                [Stage 189:======================================>              (82 + 32) / 114][Stage 189:=========================================>           (89 + 25) / 114][Stage 189:==============================================>     (102 + 12) / 114][Stage 189:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.038284275 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=35", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=35,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380602137 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (58 + 55) / 113][Stage 190:================================>                    (70 + 43) / 113][Stage 190:========================================>            (87 + 26) / 113][Stage 190:================================================>    (104 + 9) / 113][Stage 190:===================================================> (110 + 3) / 113]                                                                                [Stage 191:=============================>                       (63 + 51) / 114][Stage 191:==================================>                  (74 + 40) / 114][Stage 191:=========================================>           (90 + 24) / 114][Stage 191:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.212808378 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=81", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=81,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377497338 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (58 + 55) / 113][Stage 192:============================>                        (61 + 52) / 113][Stage 192:====================================>                (77 + 36) / 113][Stage 192:==============================================>      (99 + 14) / 113][Stage 192:====================================================>(111 + 2) / 113]                                                                                [Stage 193:===========================>                         (60 + 54) / 114][Stage 193:==============================>                      (65 + 49) / 114][Stage 193:========================================>            (87 + 27) / 114][Stage 193:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 2.848658038 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401078592 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (61 + 59) / 120][Stage 194:===============================>                     (72 + 48) / 120][Stage 194:=====================================>               (84 + 36) / 120][Stage 194:=============================================>      (106 + 14) / 120]                                                                                [Stage 195:============================>                        (64 + 57) / 121][Stage 195:=================================>                   (76 + 45) / 121][Stage 195:======================================>              (88 + 33) / 121][Stage 195:=============================================>      (107 + 14) / 121][Stage 195:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.12028564 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403198692 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==========================>                          (61 + 59) / 120][Stage 196:===============================>                     (71 + 49) / 120][Stage 196:=========================================>           (94 + 26) / 120][Stage 196:==================================================>  (114 + 6) / 120]                                                                                [Stage 197:===========================>                         (62 + 59) / 121][Stage 197:===================================>                 (80 + 41) / 121][Stage 197:==========================================>          (97 + 24) / 121][Stage 197:===================================================> (118 + 3) / 121][Stage 197:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.039449119 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425307907 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==========================>                          (60 + 61) / 121][Stage 198:===========================>                         (62 + 59) / 121][Stage 198:================================>                    (74 + 47) / 121][Stage 198:==========================================>          (96 + 25) / 121][Stage 198:===================================================> (117 + 4) / 121]                                                                                [Stage 199:============================>                        (65 + 57) / 122][Stage 199:=================================>                   (78 + 44) / 122][Stage 199:=========================================>           (96 + 26) / 122][Stage 199:=================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.057610316 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=168", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=168,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397225494 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:>                                                      (0 + 0) / 121][Stage 200:==========================>                          (60 + 61) / 121][Stage 200:==============================>                      (69 + 52) / 121][Stage 200:====================================>                (84 + 37) / 121][Stage 200:==============================================>     (108 + 13) / 121][Stage 200:====================================================>(119 + 2) / 121]                                                                                [Stage 201:==========================>                          (61 + 61) / 122][Stage 201:=============================>                       (68 + 54) / 122][Stage 201:=====================================>               (87 + 35) / 122][Stage 201:==============================================>     (110 + 12) / 122][Stage 201:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.115958303 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/24 16:59:57 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.31:54498) dropped. RpcEnv already stopped.
17/05/24 16:59:57 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.25:48976) dropped. RpcEnv already stopped.
17/05/24 16:59:57 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.31:54498) dropped. RpcEnv already stopped.
17/05/24 16:59:57 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.25:48976) dropped. RpcEnv already stopped.

real	9m50.743s
user	11m16.244s
sys	0m28.704s
