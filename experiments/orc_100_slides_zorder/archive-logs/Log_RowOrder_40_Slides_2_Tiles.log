Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 20:09:11 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 20:09:25 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 20:09:25 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 20:09:26 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 20:09:28 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 20:09:39 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524200928-0589).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.422754113 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:============>                                          (27 + 88) / 115][Stage 0:=========================>                             (53 + 62) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:========================================>              (85 + 30) / 115][Stage 0:==============================================>        (97 + 18) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:=====================================================> (111 + 4) / 115]                                                                                [Stage 1:============================>                          (60 + 56) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:==================================>                    (72 + 44) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:==========================================>            (89 + 27) / 116][Stage 1:============================================>          (94 + 22) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 12.675168319 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.686884598 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:====================================>                  (76 + 39) / 115][Stage 2:======================================>                (80 + 35) / 115][Stage 2:======================================>                (81 + 34) / 115][Stage 2:=========================================>             (86 + 29) / 115][Stage 2:===========================================>           (90 + 25) / 115][Stage 2:===============================================>      (101 + 14) / 115][Stage 2:==================================================>    (106 + 9) / 115][Stage 2:===================================================>   (108 + 7) / 115]                                                                                [Stage 3:======================================>                (81 + 35) / 116][Stage 3:=======================================>               (83 + 33) / 116][Stage 3:==========================================>            (89 + 27) / 116][Stage 3:============================================>          (94 + 22) / 116][Stage 3:===============================================>      (102 + 14) / 116][Stage 3:==================================================>    (107 + 9) / 116][Stage 3:====================================================>  (111 + 5) / 116]                                                                                Time elapsed: 4.577248337 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.66815974 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:>                                                        (0 + 0) / 113][Stage 4:===========================>                           (57 + 56) / 113][Stage 4:==================================>                    (70 + 43) / 113][Stage 4:=====================================>                 (77 + 36) / 113][Stage 4:========================================>              (83 + 30) / 113][Stage 4:============================================>          (91 + 22) / 113][Stage 4:=============================================>         (93 + 20) / 113][Stage 4:================================================>     (102 + 11) / 113][Stage 4:====================================================>  (108 + 5) / 113][Stage 4:======================================================>(111 + 2) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:==================================>                    (72 + 42) / 114][Stage 5:====================================>                  (76 + 38) / 114][Stage 5:=======================================>               (81 + 33) / 114][Stage 5:===========================================>           (91 + 23) / 114][Stage 5:=============================================>         (95 + 19) / 114][Stage 5:==================================================>    (105 + 9) / 114][Stage 5:====================================================>  (108 + 6) / 114]                                                                                Time elapsed: 4.780415514 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.641408675 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=============================>                         (61 + 54) / 115][Stage 6:===============================>                       (66 + 49) / 115][Stage 6:===================================>                   (74 + 41) / 115][Stage 6:===================================>                   (75 + 40) / 115][Stage 6:========================================>              (84 + 31) / 115][Stage 6:============================================>          (92 + 23) / 115][Stage 6:==================================================>    (106 + 9) / 115][Stage 6:=====================================================> (112 + 3) / 115]                                                                                [Stage 7:=============================>                         (62 + 54) / 116][Stage 7:====================================>                  (78 + 38) / 116][Stage 7:=======================================>               (83 + 33) / 116][Stage 7:===========================================>           (92 + 24) / 116][Stage 7:===============================================>      (101 + 15) / 116][Stage 7:=====================================================> (113 + 3) / 116][Stage 7:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.469923837 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.577900286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=============================>                         (61 + 52) / 113][Stage 8:======================================>                (79 + 34) / 113][Stage 8:=======================================>               (82 + 31) / 113][Stage 8:=============================================>         (93 + 20) / 113][Stage 8:===============================================>       (98 + 15) / 113][Stage 8:==================================================>    (104 + 9) / 113][Stage 8:======================================================>(111 + 2) / 113]                                                                                [Stage 9:===================================>                   (74 + 40) / 114][Stage 9:=========================================>             (85 + 29) / 114][Stage 9:==========================================>            (89 + 25) / 114][Stage 9:=============================================>         (95 + 19) / 114][Stage 9:================================================>     (103 + 11) / 114][Stage 9:====================================================>  (109 + 5) / 114][Stage 9:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.101036739 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 166 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.599946127 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (60 + 60) / 120][Stage 10:=============================>                        (65 + 55) / 120][Stage 10:======================================>               (86 + 34) / 120][Stage 10:============================================>        (100 + 20) / 120][Stage 10:===============================================>     (108 + 12) / 120][Stage 10:===================================================>  (115 + 5) / 120]                                                                                [Stage 11:===========================>                          (61 + 60) / 121][Stage 11:=============================>                        (66 + 55) / 121][Stage 11:====================================>                 (82 + 39) / 121][Stage 11:=======================================>              (88 + 33) / 121][Stage 11:=============================================>       (104 + 17) / 121][Stage 11:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.921050652 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.609556786 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==========================>                           (60 + 61) / 121][Stage 12:=============================>                        (65 + 56) / 121][Stage 12:===================================>                  (79 + 42) / 121][Stage 12:=============================================>       (103 + 18) / 121][Stage 12:================================================>    (111 + 10) / 121][Stage 12:=====================================================>(119 + 2) / 121]                                                                                [Stage 13:===========================>                          (61 + 61) / 122][Stage 13:==============================>                       (69 + 53) / 122][Stage 13:====================================>                 (82 + 40) / 122][Stage 13:===========================================>         (100 + 22) / 122][Stage 13:====================================================> (119 + 3) / 122][Stage 13:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.957332624 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57  OR  partitionIndex = 58 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57  OR  partitionIndex = 58 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460171484 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:=======================================>              (84 + 31) / 115][Stage 14:==========================================>           (91 + 24) / 115][Stage 14:===============================================>     (102 + 13) / 115][Stage 14:===================================================>  (110 + 5) / 115][Stage 14:=====================================================>(113 + 2) / 115][Stage 14:=====================================================>(114 + 1) / 115]                                                                                [Stage 15:=====================================>                (80 + 36) / 116][Stage 15:=======================================>              (84 + 32) / 116][Stage 15:============================================>         (96 + 20) / 116][Stage 15:==============================================>      (101 + 15) / 116][Stage 15:=================================================>    (107 + 9) / 116][Stage 15:====================================================> (112 + 4) / 116][Stage 15:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.93768499 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27  OR  partitionIndex = 28 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.515157679 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:================================>                     (72 + 46) / 118][Stage 16:==================================>                   (76 + 42) / 118][Stage 16:======================================>               (85 + 33) / 118][Stage 16:=============================================>       (101 + 17) / 118][Stage 16:===================================================>  (113 + 5) / 118][Stage 16:=====================================================>(117 + 1) / 118]                                                                                [Stage 17:=================================>                    (74 + 45) / 119][Stage 17:========================================>             (90 + 29) / 119][Stage 17:============================================>         (97 + 22) / 119][Stage 17:=================================================>    (110 + 9) / 119][Stage 17:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.54501774 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494771708 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===============================>                      (68 + 47) / 115][Stage 18:=====================================>                (80 + 35) / 115][Stage 18:============================================>         (95 + 20) / 115][Stage 18:==============================================>      (100 + 15) / 115][Stage 18:==================================================>   (107 + 8) / 115][Stage 18:===================================================>  (110 + 5) / 115][Stage 18:====================================================> (111 + 4) / 115]                                                                                [Stage 19:=================================>                    (71 + 45) / 116][Stage 19:=======================================>              (85 + 31) / 116][Stage 19:===============================================>     (104 + 12) / 116][Stage 19:===================================================>  (110 + 6) / 116][Stage 19:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.870032132 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.544800522 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (60 + 60) / 120][Stage 20:===========================>                          (62 + 58) / 120][Stage 20:==================================>                   (77 + 43) / 120][Stage 20:============================================>         (99 + 21) / 120][Stage 20:=================================================>    (111 + 9) / 120][Stage 20:=====================================================>(118 + 2) / 120]                                                                                [Stage 21:===========================>                          (61 + 60) / 121][Stage 21:==============================>                       (68 + 53) / 121][Stage 21:========================================>             (90 + 31) / 121][Stage 21:================================================>    (111 + 10) / 121]                                                                                Time elapsed: 3.669012034 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.544562839 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:===============================>                      (66 + 47) / 113][Stage 22:======================================>               (81 + 32) / 113][Stage 22:===========================================>          (92 + 21) / 113][Stage 22:==============================================>      (100 + 13) / 113][Stage 22:===================================================>  (108 + 5) / 113][Stage 22:====================================================> (110 + 3) / 113]                                                                                [Stage 23:============================>                         (60 + 54) / 114][Stage 23:=================================>                    (70 + 44) / 114][Stage 23:============================================>         (93 + 21) / 114][Stage 23:================================================>    (104 + 10) / 114][Stage 23:==================================================>   (107 + 7) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.245460589 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 16 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 16 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458360603 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:=================================>                    (70 + 43) / 113][Stage 24:=======================================>              (82 + 31) / 113][Stage 24:===========================================>          (91 + 22) / 113][Stage 24:==============================================>      (100 + 13) / 113][Stage 24:==================================================>   (106 + 7) / 113][Stage 24:====================================================> (109 + 4) / 113][Stage 24:=====================================================>(111 + 2) / 113]                                                                                [Stage 25:====================================>                 (78 + 36) / 114][Stage 25:============================================>         (93 + 21) / 114][Stage 25:===============================================>     (103 + 11) / 114][Stage 25:=================================================>    (105 + 9) / 114][Stage 25:===================================================>  (109 + 5) / 114][Stage 25:=====================================================>(112 + 2) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.482155582 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485804289 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:==============================>                       (64 + 51) / 115][Stage 26:==================================>                   (73 + 42) / 115][Stage 26:===========================================>          (92 + 23) / 115][Stage 26:===============================================>     (103 + 12) / 115][Stage 26:====================================================> (112 + 3) / 115]                                                                                [Stage 27:=================================>                    (72 + 44) / 116][Stage 27:===========================================>          (94 + 22) / 116][Stage 27:=============================================>        (97 + 19) / 116][Stage 27:===============================================>     (104 + 12) / 116][Stage 27:=================================================>    (107 + 9) / 116][Stage 27:=====================================================>(114 + 2) / 116][Stage 27:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.506909644 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485023442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:==============================>                       (64 + 49) / 113][Stage 28:======================================>               (81 + 32) / 113][Stage 28:============================================>         (94 + 19) / 113][Stage 28:================================================>    (103 + 10) / 113][Stage 28:==================================================>   (106 + 7) / 113][Stage 28:===================================================>  (108 + 5) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:============================>                         (60 + 54) / 114][Stage 29:================================>                     (68 + 46) / 114][Stage 29:======================================>               (82 + 32) / 114][Stage 29:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.828095159 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109  OR  partitionIndex = 110 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109  OR  partitionIndex = 110 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.549325414 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (60 + 60) / 120][Stage 30:===========================>                          (61 + 59) / 120][Stage 30:==================================>                   (77 + 43) / 120][Stage 30:=============================================>       (102 + 18) / 120][Stage 30:=================================================>    (111 + 9) / 120]                                                                                [Stage 31:===========================>                          (61 + 60) / 121][Stage 31:================================>                     (73 + 48) / 121][Stage 31:=========================================>            (92 + 29) / 121][Stage 31:================================================>    (111 + 10) / 121][Stage 31:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.278597717 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125  OR  partitionIndex = 139 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125  OR  partitionIndex = 139 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424260396 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:=================================>                    (70 + 43) / 113][Stage 32:=====================================>                (79 + 34) / 113][Stage 32:=========================================>            (86 + 27) / 113][Stage 32:===============================================>     (102 + 11) / 113][Stage 32:===================================================>  (108 + 5) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:======================================>               (81 + 33) / 114][Stage 33:=========================================>            (88 + 26) / 114][Stage 33:================================================>    (104 + 10) / 114][Stage 33:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.066137269 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161  OR  partitionIndex = 175 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.539096407 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===================================>                  (75 + 38) / 113][Stage 34:=========================================>            (87 + 26) / 113][Stage 34:==========================================>           (89 + 24) / 113][Stage 34:==============================================>      (100 + 13) / 113][Stage 34:===================================================>  (108 + 5) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:====================================>                 (76 + 38) / 114][Stage 35:========================================>             (85 + 29) / 114][Stage 35:=============================================>        (96 + 18) / 114][Stage 35:==================================================>   (107 + 7) / 114][Stage 35:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.292965322 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153  OR  partitionIndex = 167 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153  OR  partitionIndex = 167 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461345041 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==============================>                       (65 + 50) / 115][Stage 36:==================================>                   (74 + 41) / 115][Stage 36:===========================================>          (93 + 22) / 115][Stage 36:===============================================>     (103 + 12) / 115][Stage 36:====================================================> (111 + 4) / 115][Stage 36:=====================================================>(113 + 2) / 115]                                                                                [Stage 37:=================================>                    (71 + 45) / 116][Stage 37:=======================================>              (84 + 32) / 116][Stage 37:==============================================>      (101 + 15) / 116][Stage 37:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.963607227 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207  OR  partitionIndex = 208 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 207  OR  partitionIndex = 208 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.521934362 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:=========================>                            (57 + 64) / 121][Stage 38:================================>                     (72 + 49) / 121][Stage 38:=========================================>            (93 + 28) / 121][Stage 38:===============================================>     (109 + 12) / 121][Stage 38:====================================================> (117 + 4) / 121][Stage 38:=====================================================>(120 + 1) / 121]                                                                                [Stage 39:===========================>                          (61 + 61) / 122][Stage 39:=============================>                        (66 + 56) / 122][Stage 39:===================================>                  (80 + 42) / 122][Stage 39:============================================>        (103 + 19) / 122][Stage 39:================================================>    (111 + 11) / 122]                                                                                Time elapsed: 3.552446978 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169  OR  partitionIndex = 170 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399112465 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:======================================>               (83 + 32) / 115][Stage 40:========================================>             (87 + 28) / 115][Stage 40:==============================================>       (99 + 16) / 115][Stage 40:====================================================> (112 + 3) / 115]                                                                                [Stage 41:=====================================>                (80 + 36) / 116][Stage 41:======================================>               (83 + 33) / 116][Stage 41:===========================================>          (93 + 23) / 116][Stage 41:==============================================>      (101 + 15) / 116][Stage 41:===================================================>  (111 + 5) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.014148414 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.514353618 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (60 + 60) / 120][Stage 42:============================>                         (63 + 57) / 120][Stage 42:================================>                     (73 + 47) / 120][Stage 42:============================================>         (98 + 22) / 120][Stage 42:================================================>    (109 + 11) / 120][Stage 42:===================================================>  (114 + 6) / 120]                                                                                [Stage 43:===========================>                          (62 + 59) / 121][Stage 43:================================>                     (73 + 48) / 121][Stage 43:========================================>             (91 + 30) / 121][Stage 43:===============================================>     (108 + 13) / 121][Stage 43:=====================================================>(119 + 2) / 121][Stage 43:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.679572476 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 225  OR  partitionIndex = 226 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478971924 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (60 + 60) / 120][Stage 44:===========================>                          (62 + 58) / 120][Stage 44:=================================>                    (74 + 46) / 120][Stage 44:==========================================>           (95 + 25) / 120][Stage 44:====================================================> (117 + 3) / 120][Stage 44:=====================================================>(119 + 1) / 120]                                                                                [Stage 45:===========================>                          (61 + 60) / 121][Stage 45:============================>                         (63 + 58) / 121][Stage 45:===================================>                  (80 + 41) / 121][Stage 45:==============================================>      (106 + 15) / 121]                                                                                Time elapsed: 3.107063131 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 81 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 81 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40237991 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===================================>                  (74 + 39) / 113][Stage 46:=========================================>            (87 + 26) / 113][Stage 46:==============================================>       (97 + 16) / 113][Stage 46:====================================================> (109 + 4) / 113][Stage 46:=====================================================>(112 + 1) / 113]                                                                                [Stage 47:====================================>                 (77 + 37) / 114][Stage 47:========================================>             (86 + 28) / 114][Stage 47:==============================================>       (99 + 15) / 114][Stage 47:===============================================>     (102 + 12) / 114][Stage 47:====================================================> (110 + 4) / 114][Stage 47:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.5681306 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446981317 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:============================>                         (59 + 54) / 113][Stage 48:==============================>                       (63 + 50) / 113][Stage 48:=========================================>            (87 + 26) / 113][Stage 48:===============================================>     (102 + 11) / 113][Stage 48:====================================================> (110 + 3) / 113][Stage 48:=====================================================>(111 + 2) / 113]                                                                                [Stage 49:=============================>                        (62 + 52) / 114][Stage 49:==================================>                   (73 + 41) / 114][Stage 49:========================================>             (86 + 28) / 114][Stage 49:==============================================>      (100 + 14) / 114][Stage 49:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.647242467 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45103179 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:==============================>                       (64 + 51) / 115][Stage 50:===================================>                  (76 + 39) / 115][Stage 50:==============================================>      (100 + 15) / 115][Stage 50:===================================================>  (110 + 5) / 115]                                                                                [Stage 51:===================================>                  (76 + 40) / 116][Stage 51:===========================================>          (93 + 23) / 116][Stage 51:==============================================>      (102 + 14) / 116][Stage 51:===================================================>  (111 + 5) / 116][Stage 51:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.897368318 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 140 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 140 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432743498 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==============================>                       (66 + 49) / 115][Stage 52:===================================>                  (76 + 39) / 115][Stage 52:==============================================>      (100 + 15) / 115][Stage 52:===============================================>     (104 + 11) / 115][Stage 52:===================================================>  (110 + 5) / 115]                                                                                [Stage 53:===================================>                  (77 + 39) / 116][Stage 53:============================================>         (95 + 21) / 116][Stage 53:==============================================>      (101 + 15) / 116][Stage 53:=================================================>    (107 + 9) / 116][Stage 53:==================================================>   (109 + 7) / 116][Stage 53:===================================================>  (110 + 6) / 116][Stage 53:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.774052721 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83  OR  partitionIndex = 84 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83  OR  partitionIndex = 84 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384188716 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:======================================>               (82 + 33) / 115][Stage 54:=========================================>            (89 + 26) / 115][Stage 54:===============================================>     (103 + 12) / 115][Stage 54:====================================================> (111 + 4) / 115][Stage 54:=====================================================>(114 + 1) / 115]                                                                                [Stage 55:======================================>               (82 + 34) / 116][Stage 55:========================================>             (87 + 29) / 116][Stage 55:================================================>    (106 + 10) / 116][Stage 55:===================================================>  (111 + 5) / 116][Stage 55:====================================================> (113 + 3) / 116][Stage 55:======================================================(116 + 0) / 116]                                                                                Time elapsed: 3.210838458 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420103471 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:================================>                     (72 + 46) / 118][Stage 56:======================================>               (84 + 34) / 118][Stage 56:===============================================>     (106 + 12) / 118][Stage 56:=====================================================>(117 + 1) / 118]                                                                                [Stage 57:=================================>                    (73 + 46) / 119][Stage 57:====================================>                 (80 + 39) / 119][Stage 57:===========================================>          (96 + 23) / 119][Stage 57:====================================================> (115 + 4) / 119][Stage 57:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.309015463 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426512584 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (58 + 55) / 113][Stage 58:==============================>                       (63 + 50) / 113][Stage 58:===================================>                  (75 + 38) / 113][Stage 58:==========================================>           (89 + 24) / 113][Stage 58:====================================================> (109 + 4) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:===========================>                          (59 + 55) / 114][Stage 59:============================>                         (61 + 53) / 114][Stage 59:=====================================>                (79 + 35) / 114][Stage 59:==============================================>       (98 + 16) / 114][Stage 59:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.337878975 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102 ", 2)) 
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435519878 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==============================>                       (66 + 49) / 115][Stage 60:===================================>                  (76 + 39) / 115][Stage 60:===========================================>          (92 + 23) / 115][Stage 60:===============================================>     (104 + 11) / 115][Stage 60:=====================================================>(114 + 1) / 115]                                                                                [Stage 61:================================>                     (69 + 47) / 116][Stage 61:========================================>             (87 + 29) / 116][Stage 61:===============================================>     (103 + 13) / 116][Stage 61:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.85854327 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 118 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 118 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44804654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (58 + 55) / 113][Stage 62:============================>                         (60 + 53) / 113][Stage 62:=================================>                    (70 + 43) / 113][Stage 62:===========================================>          (90 + 23) / 113][Stage 62:===================================================>  (107 + 6) / 113]                                                                                [Stage 63:============================>                         (61 + 53) / 114][Stage 63:================================>                     (69 + 45) / 114][Stage 63:==========================================>           (89 + 25) / 114][Stage 63:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.219082842 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIndex = 85 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIndex = 85 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.463092284 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (61 + 59) / 120][Stage 64:================================>                     (72 + 48) / 120][Stage 64:===========================================>          (96 + 24) / 120][Stage 64:===================================================>  (115 + 5) / 120]                                                                                [Stage 65:===========================>                          (61 + 60) / 121][Stage 65:=================================>                    (75 + 46) / 121][Stage 65:========================================>             (91 + 30) / 121][Stage 65:================================================>    (110 + 11) / 121]                                                                                Time elapsed: 3.12267662 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 45 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400291844 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=====================================>                (78 + 35) / 113][Stage 66:===========================================>          (90 + 23) / 113][Stage 66:=================================================>    (104 + 9) / 113][Stage 66:====================================================> (109 + 4) / 113][Stage 66:=====================================================>(111 + 2) / 113]                                                                                [Stage 67:===================================>                  (74 + 40) / 114][Stage 67:=====================================>                (79 + 35) / 114][Stage 67:=============================================>        (95 + 19) / 114][Stage 67:================================================>    (104 + 10) / 114][Stage 67:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.465800526 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49  OR  partitionIndex = 50 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49  OR  partitionIndex = 50 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438509919 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (60 + 60) / 120][Stage 68:=============================>                        (66 + 54) / 120][Stage 68:======================================>               (85 + 35) / 120][Stage 68:===============================================>     (107 + 13) / 120][Stage 68:=====================================================>(119 + 1) / 120]                                                                                [Stage 69:===========================>                          (61 + 60) / 121][Stage 69:===============================>                      (70 + 51) / 121][Stage 69:==========================================>           (95 + 26) / 121][Stage 69:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.244786536 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41  OR  partitionIndex = 55 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41  OR  partitionIndex = 55 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.546951093 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (58 + 55) / 113][Stage 70:==============================>                       (63 + 50) / 113][Stage 70:===================================>                  (75 + 38) / 113][Stage 70:===========================================>          (91 + 22) / 113][Stage 70:=================================================>    (104 + 9) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:===========================>                          (59 + 55) / 114][Stage 71:==============================>                       (65 + 49) / 114][Stage 71:=======================================>              (83 + 31) / 114][Stage 71:===============================================>     (102 + 12) / 114][Stage 71:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.412287732 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419874663 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===============================>                      (68 + 47) / 115][Stage 72:=====================================>                (80 + 35) / 115][Stage 72:=============================================>        (96 + 19) / 115][Stage 72:================================================>    (105 + 10) / 115][Stage 72:====================================================> (112 + 3) / 115]                                                                                [Stage 73:=================================>                    (72 + 44) / 116][Stage 73:======================================>               (83 + 33) / 116][Stage 73:=================================================>    (107 + 9) / 116][Stage 73:===================================================>  (111 + 5) / 116][Stage 73:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.466491292 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430726233 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (58 + 55) / 113][Stage 74:=============================>                        (61 + 52) / 113][Stage 74:===================================>                  (75 + 38) / 113][Stage 74:=============================================>        (96 + 17) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:===========================>                          (59 + 55) / 114][Stage 75:============================>                         (61 + 53) / 114][Stage 75:===============================>                      (66 + 48) / 114][Stage 75:=======================================>              (83 + 31) / 114][Stage 75:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.199552565 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429456281 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (60 + 60) / 120][Stage 76:==============================>                       (67 + 53) / 120][Stage 76:=====================================>                (83 + 37) / 120][Stage 76:============================================>        (101 + 19) / 120][Stage 76:====================================================> (116 + 4) / 120]                                                                                [Stage 77:===========================>                          (62 + 59) / 121][Stage 77:================================>                     (73 + 48) / 121][Stage 77:====================================>                 (82 + 39) / 121][Stage 77:===============================================>     (108 + 13) / 121][Stage 77:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.358129866 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455341414 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (61 + 60) / 121][Stage 78:===============================>                      (71 + 50) / 121][Stage 78:========================================>             (91 + 30) / 121][Stage 78:==================================================>   (114 + 7) / 121]                                                                                [Stage 79:===========================>                          (62 + 60) / 122][Stage 79:=================================>                    (76 + 46) / 122][Stage 79:========================================>             (91 + 31) / 122][Stage 79:==============================================>      (108 + 14) / 122][Stage 79:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.162228765 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.489408274 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:=================================>                    (74 + 44) / 118][Stage 80:===================================>                  (78 + 40) / 118][Stage 80:===========================================>          (94 + 24) / 118][Stage 80:================================================>    (107 + 11) / 118][Stage 80:=====================================================>(117 + 1) / 118]                                                                                [Stage 81:==================================>                   (76 + 43) / 119][Stage 81:=====================================>                (83 + 36) / 119][Stage 81:=======================================>              (87 + 32) / 119][Stage 81:==============================================>      (105 + 14) / 119][Stage 81:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.296554766 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 196 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195  OR  partitionIndex = 196 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42234698 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===========================>                          (60 + 60) / 120][Stage 82:================================>                     (72 + 48) / 120][Stage 82:=======================================>              (87 + 33) / 120][Stage 82:==================================================>   (113 + 7) / 120][Stage 82:=====================================================>(119 + 1) / 120]                                                                                [Stage 83:===========================>                          (61 + 60) / 121][Stage 83:=============================>                        (66 + 55) / 121][Stage 83:===================================>                  (79 + 42) / 121][Stage 83:===============================================>     (108 + 13) / 121][Stage 83:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.068930845 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 228 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227  OR  partitionIndex = 228 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370811295 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===================================>                  (74 + 39) / 113][Stage 84:=========================================>            (86 + 27) / 113][Stage 84:==============================================>       (97 + 16) / 113][Stage 84:====================================================> (109 + 4) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:===================================>                  (74 + 40) / 114][Stage 85:=========================================>            (87 + 27) / 114][Stage 85:==============================================>       (99 + 15) / 114][Stage 85:===================================================>  (109 + 5) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.016874971 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 53 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 53 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354885823 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:======================================>               (81 + 34) / 115][Stage 86:========================================>             (86 + 29) / 115][Stage 86:============================================>         (95 + 20) / 115][Stage 86:===================================================>  (110 + 5) / 115][Stage 86:=====================================================>(114 + 1) / 115]                                                                                [Stage 87:======================================>               (83 + 33) / 116][Stage 87:==========================================>           (91 + 25) / 116][Stage 87:===============================================>     (103 + 13) / 116][Stage 87:=================================================>    (107 + 9) / 116][Stage 87:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.262944332 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406575668 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (58 + 55) / 113][Stage 88:===============================>                      (66 + 47) / 113][Stage 88:=======================================>              (83 + 30) / 113][Stage 88:=================================================>    (104 + 9) / 113]                                                                                [Stage 89:===========================>                          (59 + 55) / 114][Stage 89:=================================>                    (70 + 44) / 114][Stage 89:=======================================>              (84 + 30) / 114][Stage 89:==============================================>       (99 + 15) / 114][Stage 89:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.130584156 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415221778 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (60 + 60) / 120][Stage 90:=============================>                        (65 + 55) / 120][Stage 90:==================================>                   (77 + 43) / 120][Stage 90:========================================>             (91 + 29) / 120][Stage 90:===================================================>  (114 + 6) / 120]                                                                                [Stage 91:===========================>                          (61 + 60) / 121][Stage 91:==============================>                       (68 + 53) / 121][Stage 91:======================================>               (86 + 35) / 121][Stage 91:==============================================>      (106 + 15) / 121][Stage 91:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.963692376 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 23 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 23 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430049499 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==========================>                           (60 + 61) / 121][Stage 92:===============================>                      (70 + 51) / 121][Stage 92:=======================================>              (88 + 33) / 121][Stage 92:===============================================>     (109 + 12) / 121][Stage 92:=====================================================>(119 + 2) / 121]                                                                                [Stage 93:===========================>                          (61 + 61) / 122][Stage 93:============================>                         (65 + 57) / 122][Stage 93:==================================>                   (77 + 45) / 122][Stage 93:=============================================>       (104 + 18) / 122][Stage 93:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.171000657 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415925803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==========================>                           (60 + 61) / 121][Stage 94:=============================>                        (65 + 56) / 121][Stage 94:===================================>                  (79 + 42) / 121][Stage 94:=============================================>       (103 + 18) / 121][Stage 94:=====================================================>(119 + 2) / 121]                                                                                [Stage 95:===========================>                          (61 + 61) / 122][Stage 95:============================>                         (65 + 57) / 122][Stage 95:==================================>                   (79 + 43) / 122][Stage 95:=============================================>       (105 + 17) / 122][Stage 95:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.1646949 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 76 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 76 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359718339 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=======================================>              (82 + 31) / 113][Stage 96:===========================================>          (91 + 22) / 113][Stage 96:===============================================>     (102 + 11) / 113][Stage 96:===================================================>  (107 + 6) / 113][Stage 96:=====================================================>(112 + 1) / 113]                                                                                [Stage 97:=======================================>              (83 + 31) / 114][Stage 97:============================================>         (93 + 21) / 114][Stage 97:==============================================>      (101 + 13) / 114][Stage 97:=====================================================>(112 + 2) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.233861484 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414946373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:==========================>                           (60 + 61) / 121][Stage 98:===========================>                          (61 + 60) / 121][Stage 98:=================================>                    (76 + 45) / 121][Stage 98:============================================>         (99 + 22) / 121][Stage 98:====================================================> (117 + 4) / 121]                                                                                [Stage 99:===========================>                          (61 + 61) / 122][Stage 99:===============================>                      (72 + 50) / 122][Stage 99:======================================>               (86 + 36) / 122][Stage 99:================================================>    (111 + 11) / 122][Stage 99:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.212149559 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 228 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 228 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364550698 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:=================================>                   (71 + 42) / 113][Stage 100:=====================================>               (81 + 32) / 113][Stage 100:===========================================>         (92 + 21) / 113][Stage 100:=================================================>   (106 + 7) / 113][Stage 100:===================================================> (109 + 4) / 113][Stage 100:====================================================>(112 + 1) / 113]                                                                                [Stage 101:==================================>                  (75 + 39) / 114][Stage 101:========================================>            (88 + 26) / 114][Stage 101:===========================================>         (93 + 21) / 114][Stage 101:==============================================>     (102 + 12) / 114][Stage 101:===================================================> (111 + 3) / 114][Stage 101:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.308406804 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397409748 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:============================>                        (60 + 53) / 113][Stage 102:=================================>                   (71 + 42) / 113][Stage 102:==============================================>     (102 + 11) / 113][Stage 102:====================================================>(111 + 2) / 113]                                                                                [Stage 103:============================>                        (61 + 53) / 114][Stage 103:================================>                    (70 + 44) / 114][Stage 103:==========================================>          (92 + 22) / 114][Stage 103:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.045237435 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383006588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==================================>                  (73 + 40) / 113][Stage 104:=======================================>             (84 + 29) / 113][Stage 104:===========================================>         (92 + 21) / 113][Stage 104:==============================================>     (102 + 11) / 113][Stage 104:===================================================> (110 + 3) / 113]                                                                                [Stage 105:=======================================>             (84 + 30) / 114][Stage 105:============================================>        (95 + 19) / 114][Stage 105:=================================================>   (107 + 7) / 114][Stage 105:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.978761764 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373861332 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:================================>                    (72 + 46) / 118][Stage 106:===================================>                 (78 + 40) / 118][Stage 106:=======================================>             (88 + 30) / 118][Stage 106:===============================================>    (107 + 11) / 118][Stage 106:===================================================> (114 + 4) / 118][Stage 106:====================================================>(116 + 2) / 118]                                                                                [Stage 107:================================>                    (74 + 45) / 119][Stage 107:=================================>                   (75 + 44) / 119][Stage 107:====================================>                (81 + 38) / 119][Stage 107:========================================>            (92 + 27) / 119][Stage 107:================================================>    (110 + 9) / 119][Stage 107:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.853486086 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111  OR  partitionIndex = 112 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111  OR  partitionIndex = 112 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388072548 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=============================>                       (65 + 50) / 115][Stage 108:====================================>                (80 + 35) / 115][Stage 108:==========================================>          (93 + 22) / 115][Stage 108:=============================================>      (101 + 14) / 115][Stage 108:==================================================>  (109 + 6) / 115][Stage 108:===================================================> (112 + 3) / 115]                                                                                [Stage 109:==============================>                      (67 + 49) / 116][Stage 109:====================================>                (79 + 37) / 116][Stage 109:============================================>       (100 + 16) / 116][Stage 109:==================================================>  (111 + 5) / 116][Stage 109:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.335678585 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19  OR  partitionIndex = 20 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19  OR  partitionIndex = 20 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365738345 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=================================>                   (71 + 42) / 113][Stage 110:=====================================>               (81 + 32) / 113][Stage 110:========================================>            (87 + 26) / 113][Stage 110:==============================================>     (101 + 12) / 113][Stage 110:===================================================> (109 + 4) / 113][Stage 110:====================================================>(111 + 2) / 113]                                                                                [Stage 111:=====================================>               (80 + 34) / 114][Stage 111:==========================================>          (92 + 22) / 114][Stage 111:===============================================>    (104 + 10) / 114][Stage 111:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.609066083 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185  OR  partitionIndex = 199 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185  OR  partitionIndex = 199 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359573553 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===================================>                 (76 + 37) / 113][Stage 112:=========================================>           (88 + 25) / 113][Stage 112:==============================================>      (99 + 14) / 113][Stage 112:===================================================> (109 + 4) / 113]                                                                                [Stage 113:=====================================>               (81 + 33) / 114][Stage 113:==========================================>          (91 + 23) / 114][Stage 113:=================================================>   (106 + 8) / 114][Stage 113:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.886670786 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339762929 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:======================================>              (83 + 32) / 115][Stage 114:=========================================>           (91 + 24) / 115][Stage 114:=============================================>      (101 + 14) / 115][Stage 114:==================================================>  (110 + 5) / 115]                                                                                [Stage 115:======================================>              (84 + 32) / 116][Stage 115:=========================================>           (91 + 25) / 116][Stage 115:==============================================>     (104 + 12) / 116][Stage 115:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.925192396 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193  OR  partitionIndex = 207 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193  OR  partitionIndex = 207 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411860101 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 61) / 121][Stage 116:===============================>                     (73 + 48) / 121][Stage 116:=======================================>             (90 + 31) / 121][Stage 116:============================================>       (104 + 17) / 121][Stage 116:==================================================>  (116 + 5) / 121]                                                                                [Stage 117:==========================>                          (61 + 61) / 122][Stage 117:===========================>                         (64 + 58) / 122][Stage 117:==================================>                  (79 + 43) / 122][Stage 117:===============================================>    (112 + 10) / 122][Stage 117:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.166406572 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377837001 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:================================>                    (70 + 45) / 115][Stage 118:======================================>              (83 + 32) / 115][Stage 118:=============================================>       (99 + 16) / 115][Stage 118:====================================================>(113 + 2) / 115]                                                                                [Stage 119:====================================>                (79 + 37) / 116][Stage 119:==========================================>          (94 + 22) / 116][Stage 119:=================================================>   (108 + 8) / 116][Stage 119:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.852984674 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79  OR  partitionIndex = 80 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79  OR  partitionIndex = 80 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392514281 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (59 + 54) / 113][Stage 120:==============================>                      (66 + 47) / 113][Stage 120:=====================================>               (80 + 33) / 113][Stage 120:=============================================>       (97 + 16) / 113][Stage 120:===================================================> (109 + 4) / 113]                                                                                [Stage 121:============================>                        (61 + 53) / 114][Stage 121:================================>                    (70 + 44) / 114][Stage 121:========================================>            (87 + 27) / 114][Stage 121:===============================================>    (104 + 10) / 114][Stage 121:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.425433127 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366822249 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:================================>                    (72 + 46) / 118][Stage 122:=================================>                   (74 + 44) / 118][Stage 122:==================================>                  (76 + 42) / 118][Stage 122:======================================>              (85 + 33) / 118][Stage 122:========================================>            (90 + 28) / 118][Stage 122:===============================================>    (108 + 10) / 118]                                                                                [Stage 123:================================>                    (74 + 45) / 119][Stage 123:==================================>                  (78 + 41) / 119][Stage 123:====================================>                (83 + 36) / 119][Stage 123:=========================================>           (94 + 25) / 119][Stage 123:==============================================>     (107 + 12) / 119][Stage 123:===================================================> (116 + 3) / 119][Stage 123:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.830551203 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350082672 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===================================>                 (76 + 37) / 113][Stage 124:=========================================>           (88 + 25) / 113][Stage 124:=============================================>       (98 + 15) / 113][Stage 124:===================================================> (110 + 3) / 113]                                                                                [Stage 125:==================================>                  (74 + 40) / 114][Stage 125:========================================>            (88 + 26) / 114][Stage 125:=============================================>      (100 + 14) / 114][Stage 125:====================================================>(112 + 2) / 114][Stage 125:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.004836424 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 177 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382008452 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:================================>                    (72 + 46) / 118][Stage 126:==================================>                  (76 + 42) / 118][Stage 126:=====================================>               (84 + 34) / 118][Stage 126:============================================>        (98 + 20) / 118][Stage 126:===============================================>    (108 + 10) / 118]                                                                                [Stage 127:================================>                    (74 + 45) / 119][Stage 127:=====================================>               (84 + 35) / 119][Stage 127:============================================>       (102 + 17) / 119][Stage 127:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.196959054 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 176 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 176 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355540075 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=====================================>               (80 + 33) / 113][Stage 128:=========================================>           (89 + 24) / 113][Stage 128:==============================================>      (99 + 14) / 113][Stage 128:===================================================> (110 + 3) / 113][Stage 128:====================================================>(111 + 2) / 113]                                                                                [Stage 129:=========================================>           (89 + 25) / 114][Stage 129:==============================================>      (99 + 15) / 114][Stage 129:=================================================>   (106 + 8) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.127860242 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107  OR  partitionIndex = 108 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107  OR  partitionIndex = 108 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368487821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:================================>                    (72 + 46) / 118][Stage 130:====================================>                (82 + 36) / 118][Stage 130:==========================================>          (95 + 23) / 118][Stage 130:=================================================>   (110 + 8) / 118][Stage 130:====================================================>(117 + 1) / 118]                                                                                [Stage 131:================================>                    (73 + 46) / 119][Stage 131:==================================>                  (77 + 42) / 119][Stage 131:=======================================>             (89 + 30) / 119][Stage 131:============================================>       (102 + 17) / 119]                                                                                Time elapsed: 3.216300722 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 204 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 204 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386116185 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:============================>                        (61 + 52) / 113][Stage 132:=================================>                   (72 + 41) / 113][Stage 132:=========================================>           (88 + 25) / 113][Stage 132:===================================================> (109 + 4) / 113]                                                                                [Stage 133:===========================>                         (59 + 55) / 114][Stage 133:================================>                    (69 + 45) / 114][Stage 133:=========================================>           (89 + 25) / 114][Stage 133:=================================================>   (107 + 7) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.1557786 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233  OR  partitionIndex = 234 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348569437 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=====================================>               (79 + 34) / 113][Stage 134:============================================>        (95 + 18) / 113][Stage 134:==============================================>     (101 + 12) / 113][Stage 134:==================================================>  (108 + 5) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:==================================>                  (75 + 39) / 114][Stage 135:======================================>              (83 + 31) / 114][Stage 135:===========================================>         (93 + 21) / 114][Stage 135:==============================================>     (103 + 11) / 114][Stage 135:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.126954279 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 232 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 232 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387782677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:============================>                        (60 + 53) / 113][Stage 136:================================>                    (69 + 44) / 113][Stage 136:==========================================>          (90 + 23) / 113][Stage 136:===================================================> (110 + 3) / 113]                                                                                [Stage 137:============================>                        (61 + 53) / 114][Stage 137:==================================>                  (74 + 40) / 114][Stage 137:=============================================>       (97 + 17) / 114][Stage 137:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.960674352 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 84 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 84 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362155407 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (73 + 45) / 118][Stage 138:=====================================>               (84 + 34) / 118][Stage 138:=============================================>      (103 + 15) / 118][Stage 138:=================================================>   (111 + 7) / 118][Stage 138:====================================================>(116 + 2) / 118]                                                                                [Stage 139:================================>                    (74 + 45) / 119][Stage 139:====================================>                (82 + 37) / 119][Stage 139:============================================>       (102 + 17) / 119][Stage 139:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.311421498 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 178 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 178 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363263614 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:================================>                    (73 + 45) / 118][Stage 140:======================================>              (85 + 33) / 118][Stage 140:============================================>       (100 + 18) / 118][Stage 140:================================================>    (109 + 9) / 118]                                                                                [Stage 141:================================>                    (73 + 46) / 119][Stage 141:===================================>                 (79 + 40) / 119][Stage 141:==========================================>          (95 + 24) / 119][Stage 141:=================================================>   (112 + 7) / 119][Stage 141:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.187976403 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235  OR  partitionIndex = 236 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235  OR  partitionIndex = 236 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337561604 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:=====================================>               (81 + 34) / 115][Stage 142:==========================================>          (93 + 22) / 115][Stage 142:===================================================> (111 + 4) / 115]                                                                                [Stage 143:=====================================>               (83 + 33) / 116][Stage 143:=========================================>           (91 + 25) / 116][Stage 143:============================================>       (100 + 16) / 116][Stage 143:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.795258522 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396591066 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 60) / 120][Stage 144:============================>                        (64 + 56) / 120][Stage 144:====================================>                (82 + 38) / 120][Stage 144:==============================================>     (108 + 12) / 120][Stage 144:====================================================>(118 + 2) / 120]                                                                                [Stage 145:==========================>                          (61 + 60) / 121][Stage 145:==============================>                      (70 + 51) / 121][Stage 145:====================================>                (84 + 37) / 121][Stage 145:==============================================>     (109 + 12) / 121]                                                                                Time elapsed: 2.895901262 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379397585 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (58 + 55) / 113][Stage 146:============================>                        (61 + 52) / 113][Stage 146:=================================>                   (72 + 41) / 113][Stage 146:======================================>              (83 + 30) / 113][Stage 146:==================================================>  (108 + 5) / 113][Stage 146:====================================================>(112 + 1) / 113]                                                                                [Stage 147:===========================>                         (59 + 55) / 114][Stage 147:==============================>                      (65 + 49) / 114][Stage 147:======================================>              (82 + 32) / 114][Stage 147:==============================================>     (103 + 11) / 114][Stage 147:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.258178242 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 196 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 196 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351751498 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:======================================>              (82 + 31) / 113][Stage 148:========================================>            (87 + 26) / 113][Stage 148:==============================================>      (99 + 14) / 113][Stage 148:===================================================> (109 + 4) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:====================================>                (79 + 35) / 114][Stage 149:=========================================>           (89 + 25) / 114][Stage 149:==============================================>     (102 + 12) / 114][Stage 149:===================================================> (110 + 4) / 114][Stage 149:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.251712723 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 76 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 76 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337231899 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:====================================>                (80 + 35) / 115][Stage 150:======================================>              (83 + 32) / 115][Stage 150:============================================>        (97 + 18) / 115][Stage 150:==================================================>  (110 + 5) / 115][Stage 150:====================================================>(114 + 1) / 115]                                                                                [Stage 151:=====================================>               (81 + 35) / 116][Stage 151:========================================>            (89 + 27) / 116][Stage 151:=============================================>      (102 + 14) / 116][Stage 151:==================================================>  (111 + 5) / 116][Stage 151:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.002452379 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406562745 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:================================>                    (71 + 44) / 115][Stage 152:========================================>            (87 + 28) / 115][Stage 152:=============================================>      (100 + 15) / 115][Stage 152:=================================================>   (107 + 8) / 115]                                                                                [Stage 153:=================================>                   (73 + 43) / 116][Stage 153:=======================================>             (87 + 29) / 116][Stage 153:=============================================>      (101 + 15) / 116]                                                                                Time elapsed: 2.688699528 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365105526 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:====================================>                (81 + 37) / 118][Stage 154:=============================================>      (103 + 15) / 118][Stage 154:==================================================>  (113 + 5) / 118]                                                                                [Stage 155:================================>                    (74 + 45) / 119][Stage 155:==================================>                  (77 + 42) / 119][Stage 155:=========================================>           (93 + 26) / 119][Stage 155:==============================================>     (106 + 13) / 119][Stage 155:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.157563937 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364693622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (73 + 45) / 118][Stage 156:===================================>                 (79 + 39) / 118][Stage 156:======================================>              (85 + 33) / 118][Stage 156:============================================>       (102 + 16) / 118][Stage 156:====================================================>(116 + 2) / 118]                                                                                [Stage 157:================================>                    (73 + 46) / 119][Stage 157:=================================>                   (76 + 43) / 119][Stage 157:==================================>                  (78 + 41) / 119][Stage 157:=========================================>           (93 + 26) / 119][Stage 157:=============================================>      (104 + 15) / 119][Stage 157:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.447085618 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367586365 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==============================>                      (67 + 48) / 115][Stage 158:=====================================>               (81 + 34) / 115][Stage 158:==========================================>          (92 + 23) / 115][Stage 158:================================================>    (106 + 9) / 115][Stage 158:===================================================> (112 + 3) / 115]                                                                                [Stage 159:================================>                    (71 + 45) / 116][Stage 159:=======================================>             (87 + 29) / 116][Stage 159:============================================>        (98 + 18) / 116][Stage 159:==============================================>     (104 + 12) / 116][Stage 159:===================================================> (113 + 3) / 116][Stage 159:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.018497022 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36096063 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (73 + 45) / 118][Stage 160:==================================>                  (77 + 41) / 118][Stage 160:=======================================>             (89 + 29) / 118][Stage 160:==============================================>     (105 + 13) / 118][Stage 160:==================================================>  (113 + 5) / 118][Stage 160:===================================================> (114 + 4) / 118]                                                                                [Stage 161:================================>                    (73 + 46) / 119][Stage 161:=================================>                   (75 + 44) / 119][Stage 161:===================================>                 (79 + 40) / 119][Stage 161:======================================>              (86 + 33) / 119][Stage 161:=============================================>      (103 + 16) / 119][Stage 161:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.657854186 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368621791 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:================================>                    (72 + 46) / 118][Stage 162:=================================>                   (74 + 44) / 118][Stage 162:===================================>                 (78 + 40) / 118][Stage 162:=====================================>               (84 + 34) / 118][Stage 162:===========================================>         (97 + 21) / 118][Stage 162:===================================================> (114 + 4) / 118][Stage 162:====================================================>(117 + 1) / 118]                                                                                [Stage 163:================================>                    (73 + 46) / 119][Stage 163:=================================>                   (76 + 43) / 119][Stage 163:===================================>                 (80 + 39) / 119][Stage 163:==========================================>          (95 + 24) / 119][Stage 163:===============================================>    (109 + 10) / 119][Stage 163:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.612873492 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366944277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==================================>                  (75 + 40) / 115][Stage 164:=========================================>           (91 + 24) / 115][Stage 164:================================================>    (106 + 9) / 115][Stage 164:===================================================> (111 + 4) / 115]                                                                                [Stage 165:=================================>                   (74 + 42) / 116][Stage 165:========================================>            (89 + 27) / 116][Stage 165:===============================================>    (105 + 11) / 116][Stage 165:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.893520652 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 58 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 58 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348677827 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==================================>                  (73 + 40) / 113][Stage 166:======================================>              (83 + 30) / 113][Stage 166:=========================================>           (89 + 24) / 113][Stage 166:==============================================>     (102 + 11) / 113][Stage 166:===================================================> (110 + 3) / 113]                                                                                [Stage 167:======================================>              (82 + 32) / 114][Stage 167:=========================================>           (90 + 24) / 114][Stage 167:============================================>        (96 + 18) / 114][Stage 167:===============================================>    (104 + 10) / 114][Stage 167:====================================================>(112 + 2) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.511131809 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 54 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 54 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41648566 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 61) / 121][Stage 168:=============================>                       (67 + 54) / 121][Stage 168:====================================>                (84 + 37) / 121][Stage 168:==============================================>     (109 + 12) / 121]                                                                                [Stage 169:==========================>                          (62 + 60) / 122][Stage 169:===============================>                     (73 + 49) / 122][Stage 169:======================================>              (89 + 33) / 122][Stage 169:=================================================>   (113 + 9) / 122]                                                                                Time elapsed: 3.066665014 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 168 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 168 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409674704 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 60) / 120][Stage 170:==============================>                      (68 + 52) / 120][Stage 170:=====================================>               (85 + 35) / 120][Stage 170:=============================================>      (105 + 15) / 120][Stage 170:==================================================>  (115 + 5) / 120]                                                                                [Stage 171:=============================>                       (67 + 54) / 121][Stage 171:=================================>                   (77 + 44) / 121][Stage 171:=========================================>           (94 + 27) / 121][Stage 171:=================================================>   (114 + 7) / 121][Stage 171:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.347513381 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371424111 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:================================>                    (72 + 46) / 118][Stage 172:================================>                    (73 + 45) / 118][Stage 172:======================================>              (85 + 33) / 118][Stage 172:==========================================>          (95 + 23) / 118][Stage 172:==============================================>     (106 + 12) / 118][Stage 172:====================================================>(117 + 1) / 118]                                                                                [Stage 173:================================>                    (74 + 45) / 119][Stage 173:=================================>                   (75 + 44) / 119][Stage 173:====================================>                (81 + 38) / 119][Stage 173:========================================>            (92 + 27) / 119][Stage 173:==============================================>     (107 + 12) / 119][Stage 173:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.466047503 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 46 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 46 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378812531 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===================================>                 (76 + 39) / 115][Stage 174:==========================================>          (93 + 22) / 115][Stage 174:==================================================>  (109 + 6) / 115][Stage 174:====================================================>(114 + 1) / 115]                                                                                [Stage 175:================================>                    (72 + 44) / 116][Stage 175:======================================>              (84 + 32) / 116][Stage 175:=============================================>       (99 + 17) / 116][Stage 175:===================================================> (113 + 3) / 116][Stage 175:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.300768708 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363698867 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (72 + 46) / 118][Stage 176:==================================>                  (77 + 41) / 118][Stage 176:=========================================>           (93 + 25) / 118][Stage 176:=============================================>      (104 + 14) / 118][Stage 176:===================================================> (115 + 3) / 118][Stage 176:====================================================>(117 + 1) / 118]                                                                                [Stage 177:=================================>                   (75 + 44) / 119][Stage 177:==================================>                  (77 + 42) / 119][Stage 177:=====================================>               (85 + 34) / 119][Stage 177:===========================================>        (100 + 19) / 119][Stage 177:=================================================>   (111 + 8) / 119][Stage 177:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.957130936 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334395907 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=====================================>               (81 + 34) / 115][Stage 178:=========================================>           (89 + 26) / 115][Stage 178:===============================================>    (104 + 11) / 115][Stage 178:===================================================> (111 + 4) / 115][Stage 178:====================================================>(114 + 1) / 115]                                                                                [Stage 179:======================================>              (84 + 32) / 116][Stage 179:=========================================>           (90 + 26) / 116][Stage 179:==============================================>     (103 + 13) / 116][Stage 179:=================================================>   (109 + 7) / 116][Stage 179:====================================================>(114 + 2) / 116][Stage 179:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.391744959 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464379587 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:============================>                        (61 + 52) / 113][Stage 180:================================>                    (70 + 43) / 113][Stage 180:===========================================>         (92 + 21) / 113][Stage 180:===================================================> (110 + 3) / 113][Stage 180:====================================================>(112 + 1) / 113]                                                                                [Stage 181:=============================>                       (63 + 51) / 114][Stage 181:=================================>                   (71 + 43) / 114][Stage 181:============================================>        (96 + 18) / 114][Stage 181:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.216993148 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86  OR  partitionIndex = 98 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86  OR  partitionIndex = 98 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387237837 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:================================>                    (72 + 46) / 118][Stage 182:===================================>                 (78 + 40) / 118][Stage 182:=========================================>           (93 + 25) / 118][Stage 182:=============================================>      (103 + 15) / 118][Stage 182:===================================================> (114 + 4) / 118]                                                                                [Stage 183:==================================>                  (78 + 41) / 119][Stage 183:=======================================>             (88 + 31) / 119][Stage 183:===========================================>         (97 + 22) / 119][Stage 183:===============================================>    (108 + 11) / 119]                                                                                Time elapsed: 3.094096481 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430492409 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:============================>                        (64 + 56) / 120][Stage 184:===================================>                 (81 + 39) / 120][Stage 184:============================================>       (103 + 17) / 120]                                                                                [Stage 185:===========================>                         (62 + 59) / 121][Stage 185:==============================>                      (70 + 51) / 121][Stage 185:=========================================>           (94 + 27) / 121][Stage 185:=================================================>   (112 + 9) / 121]                                                                                Time elapsed: 2.950043342 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 27 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378617625 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:============================>                        (60 + 53) / 113][Stage 186:===================================>                 (76 + 37) / 113][Stage 186:===========================================>         (93 + 20) / 113][Stage 186:=================================================>   (106 + 7) / 113]                                                                                [Stage 187:===========================>                         (59 + 55) / 114][Stage 187:================================>                    (69 + 45) / 114][Stage 187:=========================================>           (89 + 25) / 114][Stage 187:==============================================>      (99 + 15) / 114][Stage 187:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.181997327 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 108 ", 2)) 
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 108 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38170389 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (59 + 54) / 113][Stage 188:==============================>                      (65 + 48) / 113][Stage 188:======================================>              (83 + 30) / 113][Stage 188:=================================================>   (106 + 7) / 113][Stage 188:====================================================>(112 + 1) / 113]                                                                                [Stage 189:=============================>                       (63 + 51) / 114][Stage 189:=====================================>               (80 + 34) / 114][Stage 189:=============================================>       (97 + 17) / 114][Stage 189:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.219100384 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219  OR  partitionIndex = 233 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219  OR  partitionIndex = 233 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399103631 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 60) / 120][Stage 190:==========================>                          (61 + 59) / 120][Stage 190:=================================>                   (75 + 45) / 120][Stage 190:==========================================>          (96 + 24) / 120][Stage 190:===================================================> (117 + 3) / 120][Stage 190:====================================================>(119 + 1) / 120]                                                                                [Stage 191:============================>                        (65 + 56) / 121][Stage 191:=====================================>               (86 + 35) / 121][Stage 191:==============================================>     (109 + 12) / 121][Stage 191:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.181347351 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.330030207 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:====================================>                (79 + 36) / 115][Stage 192:=======================================>             (85 + 30) / 115][Stage 192:=============================================>       (99 + 16) / 115][Stage 192:==================================================>  (110 + 5) / 115]                                                                                [Stage 193:=====================================>               (83 + 33) / 116][Stage 193:=========================================>           (91 + 25) / 116][Stage 193:================================================>    (107 + 9) / 116][Stage 193:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.70657822 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 203 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391980991 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (58 + 55) / 113][Stage 194:==============================>                      (66 + 47) / 113][Stage 194:=======================================>             (85 + 28) / 113][Stage 194:==================================================>  (108 + 5) / 113]                                                                                [Stage 195:===========================>                         (59 + 55) / 114][Stage 195:==============================>                      (66 + 48) / 114][Stage 195:===================================>                 (77 + 37) / 114][Stage 195:==========================================>          (92 + 22) / 114][Stage 195:=================================================>   (106 + 8) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.001346115 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202 ", 2) )
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415992767 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==========================>                          (60 + 61) / 121][Stage 196:=================================>                   (76 + 45) / 121][Stage 196:===========================================>         (99 + 22) / 121][Stage 196:==============================================>     (109 + 12) / 121]                                                                                [Stage 197:==========================>                          (62 + 60) / 122][Stage 197:================================>                    (75 + 47) / 122][Stage 197:=====================================>               (87 + 35) / 122][Stage 197:===============================================>    (112 + 10) / 122][Stage 197:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.346618661 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399393151 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:============================>                        (60 + 53) / 113][Stage 198:===================================>                 (76 + 37) / 113][Stage 198:==============================================>      (99 + 14) / 113][Stage 198:==================================================>  (108 + 5) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:===========================>                         (60 + 54) / 114][Stage 199:================================>                    (70 + 44) / 114][Stage 199:========================================>            (87 + 27) / 114][Stage 199:=============================================>      (100 + 14) / 114]                                                                                Time elapsed: 3.307030113 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 20 ", 2))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 20 ",2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39081786 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 60) / 120][Stage 200:============================>                        (64 + 56) / 120][Stage 200:==================================>                  (78 + 42) / 120][Stage 200:==============================================>     (107 + 13) / 120][Stage 200:====================================================>(118 + 2) / 120]                                                                                [Stage 201:==========================>                          (61 + 60) / 121][Stage 201:============================>                        (66 + 55) / 121][Stage 201:======================================>              (87 + 34) / 121][Stage 201:=============================================>      (107 + 14) / 121]                                                                                Time elapsed: 2.990066569 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m8.014s
user	11m29.468s
sys	0m37.776s
