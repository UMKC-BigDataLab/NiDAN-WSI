Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 17:00:00 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:00:14 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:00:14 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:00:14 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 17:00:17 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:00:27 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524170016-0571).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.458974645 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:======================>                                (48 + 67) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:=====================================>                 (78 + 37) / 115][Stage 0:===========================================>           (90 + 25) / 115][Stage 0:============================================>          (93 + 22) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:=============================>                         (63 + 53) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:======================================>                (81 + 35) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:==============================================>        (98 + 18) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:=====================================================> (113 + 3) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.670328495 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.79791059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===============>                                       (35 + 86) / 121][Stage 2:=====================>                                 (48 + 73) / 121][Stage 2:==========================>                            (58 + 63) / 121][Stage 2:===========================>                           (61 + 60) / 121][Stage 2:============================>                          (62 + 59) / 121][Stage 2:===============================>                       (69 + 52) / 121][Stage 2:======================================>                (84 + 37) / 121][Stage 2:=============================================>        (103 + 18) / 121][Stage 2:=================================================>    (110 + 11) / 121][Stage 2:======================================================>(119 + 2) / 121]                                                                                [Stage 3:==========================>                            (59 + 63) / 122][Stage 3:============================>                          (64 + 58) / 122][Stage 3:===============================>                       (70 + 52) / 122][Stage 3:=================================>                     (74 + 48) / 122][Stage 3:=====================================>                 (83 + 39) / 122][Stage 3:=============================================>        (103 + 19) / 122][Stage 3:====================================================>  (117 + 5) / 122][Stage 3:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.006453596 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.688452353 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=================================>                     (68 + 45) / 113][Stage 4:===================================>                   (73 + 40) / 113][Stage 4:=======================================>               (82 + 31) / 113][Stage 4:=========================================>             (86 + 27) / 113][Stage 4:=============================================>         (94 + 19) / 113][Stage 4:================================================>     (101 + 12) / 113][Stage 4:====================================================>  (107 + 6) / 113][Stage 4:======================================================>(111 + 2) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:=================================>                     (70 + 44) / 114][Stage 5:======================================>                (80 + 34) / 114][Stage 5:==========================================>            (88 + 26) / 114][Stage 5:============================================>          (93 + 21) / 114][Stage 5:==================================================>    (105 + 9) / 114][Stage 5:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.383577089 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.70557329 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (60 + 61) / 121][Stage 6:==============================>                        (67 + 54) / 121][Stage 6:====================================>                  (80 + 41) / 121][Stage 6:==========================================>            (93 + 28) / 121][Stage 6:=============================================>        (103 + 18) / 121][Stage 6:====================================================>  (115 + 6) / 121]                                                                                [Stage 7:===========================>                           (61 + 61) / 122][Stage 7:============================>                          (63 + 59) / 122][Stage 7:================================>                      (73 + 49) / 122][Stage 7:=======================================>               (87 + 35) / 122][Stage 7:============================================>          (99 + 23) / 122][Stage 7:=====================================================> (118 + 4) / 122]                                                                                Time elapsed: 4.177097695 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.61621279 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (59 + 61) / 120][Stage 8:===========================>                           (60 + 60) / 120][Stage 8:==============================>                        (66 + 54) / 120][Stage 8:======================================>                (84 + 36) / 120][Stage 8:=============================================>        (102 + 18) / 120][Stage 8:=====================================================> (116 + 4) / 120]                                                                                [Stage 9:============================>                          (62 + 59) / 121][Stage 9:===============================>                       (70 + 51) / 121][Stage 9:========================================>              (89 + 32) / 121][Stage 9:=================================================>    (110 + 11) / 121][Stage 9:=====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.483286984 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.633784947 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:>                                                       (0 + 0) / 120][Stage 10:===========================>                          (60 + 60) / 120][Stage 10:=============================>                        (65 + 55) / 120][Stage 10:=================================>                    (75 + 45) / 120][Stage 10:=========================================>            (92 + 28) / 120][Stage 10:=============================================>       (104 + 16) / 120][Stage 10:====================================================> (116 + 4) / 120]                                                                                [Stage 11:===========================>                          (61 + 60) / 121][Stage 11:=============================>                        (67 + 54) / 121][Stage 11:======================================>               (86 + 35) / 121][Stage 11:===========================================>         (100 + 21) / 121][Stage 11:===============================================>     (109 + 12) / 121][Stage 11:===================================================>  (116 + 5) / 121][Stage 11:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.986878039 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468139581 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:=====================================>                (80 + 35) / 115][Stage 12:======================================>               (83 + 32) / 115][Stage 12:==========================================>           (91 + 24) / 115][Stage 12:================================================>    (105 + 10) / 115][Stage 12:====================================================> (111 + 4) / 115]                                                                                [Stage 13:======================================>               (83 + 33) / 116][Stage 13:========================================>             (88 + 28) / 116][Stage 13:===============================================>     (103 + 13) / 116][Stage 13:===================================================>  (110 + 6) / 116][Stage 13:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.394580545 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.52231373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:================================>                     (71 + 47) / 118][Stage 14:================================>                     (72 + 46) / 118][Stage 14:====================================>                 (79 + 39) / 118][Stage 14:========================================>             (88 + 30) / 118][Stage 14:============================================>        (100 + 18) / 118][Stage 14:==============================================>      (104 + 14) / 118][Stage 14:===============================================>     (105 + 13) / 118][Stage 14:===================================================>  (112 + 6) / 118]                                                                                [Stage 15:=================================>                    (73 + 46) / 119][Stage 15:==================================>                   (77 + 42) / 119][Stage 15:=====================================>                (83 + 36) / 119][Stage 15:============================================>         (97 + 22) / 119][Stage 15:==================================================>   (111 + 8) / 119][Stage 15:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.321507272 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 208 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 208 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.545327245 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (57 + 56) / 113][Stage 16:=============================>                        (62 + 51) / 113][Stage 16:======================================>               (81 + 32) / 113][Stage 16:=============================================>        (95 + 18) / 113][Stage 16:=====================================================>(111 + 2) / 113]                                                                                [Stage 17:===========================>                          (59 + 55) / 114][Stage 17:=============================>                        (62 + 52) / 114][Stage 17:=====================================>                (80 + 34) / 114][Stage 17:==============================================>       (99 + 15) / 114][Stage 17:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.259911016 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.548149185 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (60 + 60) / 120][Stage 18:===========================>                          (61 + 59) / 120][Stage 18:=================================>                    (74 + 46) / 120][Stage 18:============================================>        (100 + 20) / 120][Stage 18:==================================================>   (113 + 7) / 120][Stage 18:====================================================> (117 + 3) / 120]                                                                                [Stage 19:===========================>                          (61 + 60) / 121][Stage 19:================================>                     (72 + 49) / 121][Stage 19:========================================>             (91 + 30) / 121][Stage 19:==============================================>      (107 + 14) / 121][Stage 19:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.491030949 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.545002126 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (58 + 55) / 113][Stage 20:============================>                         (59 + 54) / 113][Stage 20:==================================>                   (72 + 41) / 113][Stage 20:===========================================>          (92 + 21) / 113][Stage 20:====================================================> (109 + 4) / 113]                                                                                [Stage 21:============================>                         (61 + 53) / 114][Stage 21:=================================>                    (70 + 44) / 114][Stage 21:============================================>         (94 + 20) / 114][Stage 21:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.152252181 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.52904911 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:=============================>                        (62 + 51) / 113][Stage 22:======================================>               (81 + 32) / 113][Stage 22:==================================================>   (106 + 7) / 113]                                                                                [Stage 23:============================>                         (61 + 53) / 114][Stage 23:===============================>                      (67 + 47) / 114][Stage 23:============================================>         (94 + 20) / 114][Stage 23:==================================================>   (106 + 8) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.221130147 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.522339831 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (60 + 61) / 121][Stage 24:===========================>                          (61 + 60) / 121][Stage 24:==============================>                       (69 + 52) / 121][Stage 24:=========================================>            (92 + 29) / 121][Stage 24:===============================================>     (108 + 13) / 121][Stage 24:===================================================>  (116 + 5) / 121][Stage 24:=====================================================>(119 + 2) / 121]                                                                                [Stage 25:===========================>                          (63 + 59) / 122][Stage 25:=================================>                    (76 + 46) / 122][Stage 25:===========================================>          (99 + 23) / 122][Stage 25:===================================================>  (117 + 5) / 122][Stage 25:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.747174859 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472486062 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (72 + 46) / 118][Stage 26:====================================>                 (80 + 38) / 118][Stage 26:===========================================>          (95 + 23) / 118][Stage 26:=================================================>    (109 + 9) / 118][Stage 26:===================================================>  (112 + 6) / 118][Stage 26:=====================================================>(117 + 1) / 118]                                                                                [Stage 27:=================================>                    (74 + 45) / 119][Stage 27:===================================>                  (78 + 41) / 119][Stage 27:=========================================>            (92 + 27) / 119][Stage 27:===============================================>     (106 + 13) / 119][Stage 27:===================================================>  (114 + 5) / 119][Stage 27:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.742584081 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501779895 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:==========================>                           (60 + 61) / 121][Stage 28:================================>                     (72 + 49) / 121][Stage 28:========================================>             (90 + 31) / 121][Stage 28:================================================>    (110 + 11) / 121][Stage 28:=====================================================>(120 + 1) / 121]                                                                                [Stage 29:===========================>                          (61 + 61) / 122][Stage 29:=============================>                        (66 + 56) / 122][Stage 29:========================================>             (91 + 31) / 122][Stage 29:===============================================>     (110 + 12) / 122][Stage 29:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.397494075 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.506822395 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:=============================>                        (66 + 55) / 121][Stage 30:======================================>               (86 + 35) / 121][Stage 30:============================================>        (101 + 20) / 121][Stage 30:===================================================>  (115 + 6) / 121]                                                                                [Stage 31:===========================>                          (62 + 60) / 122][Stage 31:==============================>                       (69 + 53) / 122][Stage 31:=============================================>       (105 + 17) / 122][Stage 31:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.092523139 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459052145 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:================================>                     (72 + 46) / 118][Stage 32:=================================>                    (73 + 45) / 118][Stage 32:========================================>             (88 + 30) / 118][Stage 32:=============================================>       (101 + 17) / 118][Stage 32:====================================================> (115 + 3) / 118]                                                                                [Stage 33:=================================>                    (73 + 46) / 119][Stage 33:======================================>               (85 + 34) / 119][Stage 33:============================================>         (99 + 20) / 119][Stage 33:===================================================>  (113 + 6) / 119][Stage 33:=====================================================>(117 + 2) / 119][Stage 33:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.400146377 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.506631795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (57 + 56) / 113][Stage 34:=============================>                        (61 + 52) / 113][Stage 34:====================================>                 (77 + 36) / 113][Stage 34:=============================================>        (96 + 17) / 113][Stage 34:====================================================> (110 + 3) / 113]                                                                                [Stage 35:=============================>                        (62 + 52) / 114][Stage 35:===================================>                  (74 + 40) / 114][Stage 35:==============================================>       (99 + 15) / 114][Stage 35:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.122133335 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442525669 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:====================================>                 (77 + 36) / 113][Stage 36:=======================================>              (83 + 30) / 113][Stage 36:============================================>         (93 + 20) / 113][Stage 36:===================================================>  (107 + 6) / 113][Stage 36:=====================================================>(112 + 1) / 113]                                                                                [Stage 37:====================================>                 (77 + 37) / 114][Stage 37:===========================================>          (91 + 23) / 114][Stage 37:===============================================>     (103 + 11) / 114][Stage 37:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.446029369 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 221 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 221 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460975185 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:=================================>                    (71 + 42) / 113][Stage 38:==========================================>           (88 + 25) / 113][Stage 38:===============================================>      (99 + 14) / 113][Stage 38:====================================================> (109 + 4) / 113]                                                                                [Stage 39:=====================================>                (80 + 34) / 114][Stage 39:==========================================>           (89 + 25) / 114][Stage 39:==============================================>       (99 + 15) / 114][Stage 39:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.853815332 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460479545 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===================================>                  (76 + 39) / 115][Stage 40:============================================>         (95 + 20) / 115][Stage 40:===================================================>  (109 + 6) / 115]                                                                                [Stage 41:===============================>                      (68 + 48) / 116][Stage 41:=======================================>              (84 + 32) / 116][Stage 41:===============================================>     (104 + 12) / 116][Stage 41:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.845314735 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461041085 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:=====================================>                (79 + 34) / 113][Stage 42:=========================================>            (87 + 26) / 113][Stage 42:==============================================>       (98 + 15) / 113][Stage 42:====================================================> (109 + 4) / 113]                                                                                [Stage 43:====================================>                 (77 + 37) / 114][Stage 43:==========================================>           (89 + 25) / 114][Stage 43:=============================================>        (96 + 18) / 114][Stage 43:=================================================>    (105 + 9) / 114][Stage 43:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.295038443 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405302477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:======================================>               (80 + 33) / 113][Stage 44:===========================================>          (91 + 22) / 113][Stage 44:==============================================>       (98 + 15) / 113][Stage 44:===================================================>  (108 + 5) / 113]                                                                                [Stage 45:=======================================>              (83 + 31) / 114][Stage 45:=============================================>        (95 + 19) / 114][Stage 45:=================================================>    (105 + 9) / 114][Stage 45:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.037045557 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455588726 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (60 + 60) / 120][Stage 46:===========================>                          (62 + 58) / 120][Stage 46:=================================>                    (75 + 45) / 120][Stage 46:============================================>         (99 + 21) / 120][Stage 46:====================================================> (117 + 3) / 120]                                                                                [Stage 47:===========================>                          (61 + 60) / 121][Stage 47:===============================>                      (70 + 51) / 121][Stage 47:======================================>               (86 + 35) / 121][Stage 47:================================================>    (110 + 11) / 121][Stage 47:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.044553436 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447576549 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:================================>                     (72 + 46) / 118][Stage 48:===================================>                  (78 + 40) / 118][Stage 48:========================================>             (89 + 29) / 118][Stage 48:============================================>        (100 + 18) / 118][Stage 48:==================================================>   (110 + 8) / 118]                                                                                [Stage 49:===================================>                  (79 + 40) / 119][Stage 49:=======================================>              (88 + 31) / 119][Stage 49:==============================================>      (104 + 15) / 119][Stage 49:=====================================================>(117 + 2) / 119][Stage 49:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.22866016 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422880733 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:================================>                     (72 + 46) / 118][Stage 50:======================================>               (84 + 34) / 118][Stage 50:============================================>         (97 + 21) / 118][Stage 50:================================================>    (107 + 11) / 118][Stage 50:===================================================>  (113 + 5) / 118]                                                                                [Stage 51:===================================>                  (78 + 41) / 119][Stage 51:========================================>             (89 + 30) / 119][Stage 51:============================================>        (101 + 18) / 119][Stage 51:=================================================>    (110 + 9) / 119]                                                                                Time elapsed: 3.202368986 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458020906 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (60 + 60) / 120][Stage 52:============================>                         (64 + 56) / 120][Stage 52:=======================================>              (88 + 32) / 120][Stage 52:===============================================>     (107 + 13) / 120][Stage 52:====================================================> (116 + 4) / 120]                                                                                [Stage 53:============================>                         (64 + 57) / 121][Stage 53:====================================>                 (81 + 40) / 121][Stage 53:===========================================>         (100 + 21) / 121][Stage 53:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.045939159 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433762192 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:============================>                         (59 + 54) / 113][Stage 54:================================>                     (67 + 46) / 113][Stage 54:=========================================>            (86 + 27) / 113][Stage 54:================================================>    (103 + 10) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:===========================>                          (59 + 55) / 114][Stage 55:==============================>                       (64 + 50) / 114][Stage 55:====================================>                 (77 + 37) / 114][Stage 55:==========================================>           (90 + 24) / 114][Stage 55:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.150436819 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 76 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456624987 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (60 + 60) / 120][Stage 56:===============================>                      (69 + 51) / 120][Stage 56:=====================================>                (84 + 36) / 120][Stage 56:=================================================>    (111 + 9) / 120][Stage 56:====================================================> (117 + 3) / 120]                                                                                [Stage 57:============================>                         (63 + 58) / 121][Stage 57:==================================>                   (77 + 44) / 121][Stage 57:============================================>         (99 + 22) / 121][Stage 57:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.074134436 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39430568 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==================================>                   (73 + 40) / 113][Stage 58:=====================================>                (79 + 34) / 113][Stage 58:===========================================>          (92 + 21) / 113][Stage 58:===============================================>     (102 + 11) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:==================================>                   (73 + 41) / 114][Stage 59:========================================>             (86 + 28) / 114][Stage 59:=============================================>        (96 + 18) / 114][Stage 59:==================================================>   (107 + 7) / 114][Stage 59:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.036457924 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3922735 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:=======================================>              (84 + 31) / 115][Stage 60:==========================================>           (90 + 25) / 115][Stage 60:==================================================>   (108 + 7) / 115][Stage 60:=====================================================>(114 + 1) / 115]                                                                                [Stage 61:=====================================>                (80 + 36) / 116][Stage 61:=======================================>              (85 + 31) / 116][Stage 61:==============================================>      (101 + 15) / 116][Stage 61:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.790483614 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433270512 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:==================================>                   (73 + 40) / 113][Stage 62:========================================>             (85 + 28) / 113][Stage 62:============================================>         (93 + 20) / 113][Stage 62:===================================================>  (108 + 5) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:====================================>                 (78 + 36) / 114][Stage 63:=========================================>            (87 + 27) / 114][Stage 63:==============================================>      (100 + 14) / 114][Stage 63:================================================>    (104 + 10) / 114][Stage 63:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.3609913 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 48 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 48 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421573315 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==============================>                       (65 + 50) / 115][Stage 64:====================================>                 (78 + 37) / 115][Stage 64:==============================================>       (99 + 16) / 115][Stage 64:===================================================>  (109 + 6) / 115][Stage 64:=====================================================>(113 + 2) / 115]                                                                                [Stage 65:=================================>                    (72 + 44) / 116][Stage 65:====================================>                 (79 + 37) / 116][Stage 65:=============================================>        (97 + 19) / 116][Stage 65:==================================================>   (109 + 7) / 116][Stage 65:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.673241678 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441460511 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (58 + 55) / 113][Stage 66:============================>                         (59 + 54) / 113][Stage 66:================================>                     (69 + 44) / 113][Stage 66:============================================>         (94 + 19) / 113][Stage 66:====================================================> (109 + 4) / 113]                                                                                [Stage 67:============================>                         (60 + 54) / 114][Stage 67:==================================>                   (72 + 42) / 114][Stage 67:=========================================>            (88 + 26) / 114][Stage 67:==================================================>   (106 + 8) / 114][Stage 67:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.210031012 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49859566 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:=======================================>              (84 + 31) / 115][Stage 68:==========================================>           (91 + 24) / 115][Stage 68:================================================>    (105 + 10) / 115][Stage 68:=====================================================>(113 + 2) / 115]                                                                                [Stage 69:=====================================>                (81 + 35) / 116][Stage 69:========================================>             (87 + 29) / 116][Stage 69:=============================================>        (98 + 18) / 116][Stage 69:===================================================>  (111 + 5) / 116][Stage 69:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.120803971 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467267466 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (58 + 55) / 113][Stage 70:===============================>                      (65 + 48) / 113][Stage 70:======================================>               (81 + 32) / 113][Stage 70:================================================>    (103 + 10) / 113]                                                                                [Stage 71:=============================>                        (63 + 51) / 114][Stage 71:===================================>                  (75 + 39) / 114][Stage 71:============================================>         (94 + 20) / 114][Stage 71:===================================================>  (108 + 6) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.08722434 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394017981 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:>                                                       (0 + 0) / 113][Stage 72:===================================>                  (75 + 38) / 113][Stage 72:======================================>               (81 + 32) / 113][Stage 72:===========================================>          (91 + 22) / 113][Stage 72:==================================================>   (105 + 8) / 113][Stage 72:=====================================================>(112 + 1) / 113]                                                                                [Stage 73:====================================>                 (77 + 37) / 114][Stage 73:==========================================>           (89 + 25) / 114][Stage 73:=============================================>        (97 + 17) / 114][Stage 73:====================================================> (110 + 4) / 114][Stage 73:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.23412421 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395986781 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:================================>                     (72 + 46) / 118][Stage 74:=================================>                    (74 + 44) / 118][Stage 74:======================================>               (85 + 33) / 118][Stage 74:==========================================>           (92 + 26) / 118][Stage 74:================================================>    (107 + 11) / 118][Stage 74:=====================================================>(117 + 1) / 118]                                                                                [Stage 75:=================================>                    (73 + 46) / 119][Stage 75:==================================>                   (75 + 44) / 119][Stage 75:========================================>             (90 + 29) / 119][Stage 75:============================================>         (97 + 22) / 119][Stage 75:================================================>    (109 + 10) / 119][Stage 75:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.583991981 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.515324257 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:======================================>               (82 + 33) / 115][Stage 76:===========================================>          (92 + 23) / 115][Stage 76:===============================================>     (104 + 11) / 115][Stage 76:====================================================> (111 + 4) / 115]                                                                                [Stage 77:========================================>             (86 + 30) / 116][Stage 77:============================================>         (96 + 20) / 116][Stage 77:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.709633497 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451699029 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (61 + 60) / 121][Stage 78:==============================>                       (68 + 53) / 121][Stage 78:========================================>             (91 + 30) / 121][Stage 78:=================================================>    (112 + 9) / 121][Stage 78:=====================================================>(120 + 1) / 121]                                                                                [Stage 79:===========================>                          (61 + 61) / 122][Stage 79:=============================>                        (67 + 55) / 122][Stage 79:=====================================>                (85 + 37) / 122][Stage 79:===============================================>     (110 + 12) / 122][Stage 79:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.134982953 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412425258 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (59 + 54) / 113][Stage 80:==============================>                       (64 + 49) / 113][Stage 80:====================================>                 (77 + 36) / 113][Stage 80:================================================>    (103 + 10) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:============================>                         (61 + 53) / 114][Stage 81:=================================>                    (70 + 44) / 114][Stage 81:==========================================>           (89 + 25) / 114][Stage 81:================================================>    (104 + 10) / 114][Stage 81:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.117880978 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403732699 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==============================>                       (65 + 50) / 115][Stage 82:===================================>                  (76 + 39) / 115][Stage 82:===========================================>          (92 + 23) / 115][Stage 82:===================================================>  (110 + 5) / 115][Stage 82:=====================================================>(114 + 1) / 115]                                                                                [Stage 83:================================>                     (69 + 47) / 116][Stage 83:=====================================>                (81 + 35) / 116][Stage 83:==============================================>       (99 + 17) / 116][Stage 83:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.013808499 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387239263 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:================================>                     (72 + 46) / 118][Stage 84:==================================>                   (76 + 42) / 118][Stage 84:========================================>             (89 + 29) / 118][Stage 84:===============================================>     (105 + 13) / 118][Stage 84:====================================================> (115 + 3) / 118][Stage 84:=====================================================>(117 + 1) / 118]                                                                                [Stage 85:=================================>                    (73 + 46) / 119][Stage 85:====================================>                 (81 + 38) / 119][Stage 85:===========================================>          (95 + 24) / 119][Stage 85:================================================>    (108 + 11) / 119][Stage 85:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.136577635 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418984737 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (59 + 54) / 113][Stage 86:=============================>                        (62 + 51) / 113][Stage 86:===================================>                  (75 + 38) / 113][Stage 86:===============================================>     (102 + 11) / 113][Stage 86:=====================================================>(111 + 2) / 113]                                                                                [Stage 87:============================>                         (61 + 53) / 114][Stage 87:==================================>                   (73 + 41) / 114][Stage 87:==========================================>           (89 + 25) / 114][Stage 87:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.074379509 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372473286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===================================>                  (75 + 38) / 113][Stage 88:==========================================>           (89 + 24) / 113][Stage 88:==============================================>       (98 + 15) / 113][Stage 88:==================================================>   (105 + 8) / 113][Stage 88:=====================================================>(111 + 2) / 113]                                                                                [Stage 89:======================================>               (81 + 33) / 114][Stage 89:===========================================>          (91 + 23) / 114][Stage 89:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 2.959470492 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 167 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429170634 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:==========================>                           (60 + 61) / 121][Stage 90:==============================>                       (68 + 53) / 121][Stage 90:=====================================>                (84 + 37) / 121][Stage 90:===============================================>     (109 + 12) / 121]                                                                                [Stage 91:===========================>                          (61 + 61) / 122][Stage 91:================================>                     (73 + 49) / 122][Stage 91:=========================================>            (93 + 29) / 122][Stage 91:==================================================>   (115 + 7) / 122][Stage 91:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.116021702 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 234 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40221328 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:================================>                     (72 + 46) / 118][Stage 92:====================================>                 (79 + 39) / 118][Stage 92:===========================================>          (96 + 22) / 118][Stage 92:==================================================>   (110 + 8) / 118]                                                                                [Stage 93:=================================>                    (73 + 46) / 119][Stage 93:===================================>                  (78 + 41) / 119][Stage 93:==========================================>           (94 + 25) / 119][Stage 93:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 2.916187763 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35495707 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:======================================>               (83 + 32) / 115][Stage 94:==========================================>           (91 + 24) / 115][Stage 94:===============================================>     (102 + 13) / 115]                                                                                [Stage 95:======================================>               (83 + 33) / 116][Stage 95:===========================================>          (93 + 23) / 116][Stage 95:===============================================>     (103 + 13) / 116][Stage 95:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.765363234 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366086768 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=====================================>                (78 + 35) / 113][Stage 96:===========================================>          (92 + 21) / 113][Stage 96:==============================================>      (100 + 13) / 113][Stage 96:====================================================> (109 + 4) / 113][Stage 96:=====================================================>(111 + 2) / 113]                                                                                [Stage 97:===================================>                  (75 + 39) / 114][Stage 97:=========================================>            (88 + 26) / 114][Stage 97:=============================================>        (97 + 17) / 114][Stage 97:===============================================>     (103 + 11) / 114][Stage 97:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.018467345 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35354749 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=====================================>                (80 + 35) / 115][Stage 98:=======================================>              (85 + 30) / 115][Stage 98:==============================================>      (100 + 15) / 115][Stage 98:===================================================>  (110 + 5) / 115][Stage 98:=====================================================>(113 + 2) / 115]                                                                                [Stage 99:=======================================>              (85 + 31) / 116][Stage 99:===========================================>          (93 + 23) / 116][Stage 99:===============================================>     (105 + 11) / 116]                                                                                Time elapsed: 2.869382814 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384310184 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:>                                                      (0 + 0) / 118][Stage 100:================================>                    (72 + 46) / 118][Stage 100:==================================>                  (76 + 42) / 118][Stage 100:===========================================>         (96 + 22) / 118][Stage 100:==================================================>  (113 + 5) / 118]                                                                                [Stage 101:================================>                    (73 + 46) / 119][Stage 101:==================================>                  (77 + 42) / 119][Stage 101:========================================>            (91 + 28) / 119][Stage 101:================================================>    (110 + 9) / 119][Stage 101:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.820484425 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40467016 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:============================>                        (60 + 53) / 113][Stage 102:================================>                    (70 + 43) / 113][Stage 102:==========================================>          (90 + 23) / 113][Stage 102:==================================================>  (107 + 6) / 113]                                                                                [Stage 103:============================>                        (62 + 52) / 114][Stage 103:=================================>                   (72 + 42) / 114][Stage 103:============================================>        (95 + 19) / 114][Stage 103:==================================================>  (109 + 5) / 114][Stage 103:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.178157455 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438076594 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (60 + 60) / 120][Stage 104:===============================>                     (71 + 49) / 120][Stage 104:=======================================>             (90 + 30) / 120][Stage 104:===============================================>    (110 + 10) / 120]                                                                                [Stage 105:===========================>                         (62 + 59) / 121][Stage 105:=================================>                   (77 + 44) / 121][Stage 105:==========================================>          (97 + 24) / 121][Stage 105:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 2.916013987 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411888279 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:=================================>                   (72 + 43) / 115][Stage 106:========================================>            (87 + 28) / 115][Stage 106:=============================================>      (101 + 14) / 115][Stage 106:=================================================>   (108 + 7) / 115][Stage 106:===================================================> (112 + 3) / 115]                                                                                [Stage 107:================================>                    (71 + 45) / 116][Stage 107:==========================================>          (94 + 22) / 116][Stage 107:===============================================>    (106 + 10) / 116][Stage 107:===================================================> (113 + 3) / 116][Stage 107:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.187427975 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387596584 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=================================>                   (72 + 41) / 113][Stage 108:======================================>              (82 + 31) / 113][Stage 108:===========================================>         (93 + 20) / 113][Stage 108:================================================>    (104 + 9) / 113][Stage 108:====================================================>(111 + 2) / 113]                                                                                [Stage 109:=====================================>               (80 + 34) / 114][Stage 109:==========================================>          (92 + 22) / 114][Stage 109:==============================================>     (103 + 11) / 114][Stage 109:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.038298145 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404181001 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (58 + 55) / 113][Stage 110:=============================>                       (62 + 51) / 113][Stage 110:=====================================>               (79 + 34) / 113][Stage 110:=============================================>       (97 + 16) / 113][Stage 110:==================================================>  (108 + 5) / 113][Stage 110:====================================================>(112 + 1) / 113]                                                                                [Stage 111:===========================>                         (59 + 55) / 114][Stage 111:==============================>                      (66 + 48) / 114][Stage 111:=======================================>             (86 + 28) / 114][Stage 111:=================================================>   (106 + 8) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.178475319 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384496765 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:====================================>                (79 + 36) / 115][Stage 112:=========================================>           (90 + 25) / 115][Stage 112:=================================================>   (107 + 8) / 115][Stage 112:===================================================> (112 + 3) / 115]                                                                                [Stage 113:===================================>                 (78 + 38) / 116][Stage 113:==========================================>          (93 + 23) / 116][Stage 113:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.822357249 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399550962 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (59 + 54) / 113][Stage 114:=================================>                   (72 + 41) / 113][Stage 114:===========================================>         (92 + 21) / 113][Stage 114:===================================================> (109 + 4) / 113]                                                                                [Stage 115:===========================>                         (60 + 54) / 114][Stage 115:=================================>                   (71 + 43) / 114][Stage 115:===========================================>         (93 + 21) / 114][Stage 115:==================================================>  (108 + 6) / 114][Stage 115:===================================================> (111 + 3) / 114][Stage 115:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.250844906 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408442061 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (62 + 58) / 120][Stage 116:================================>                    (74 + 46) / 120][Stage 116:==========================================>          (96 + 24) / 120][Stage 116:=================================================>   (113 + 7) / 120]                                                                                [Stage 117:==========================>                          (61 + 60) / 121][Stage 117:=============================>                       (68 + 53) / 121][Stage 117:=======================================>             (91 + 30) / 121][Stage 117:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.031942711 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36257713 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===================================>                 (76 + 37) / 113][Stage 118:========================================>            (87 + 26) / 113][Stage 118:==============================================>      (99 + 14) / 113][Stage 118:=================================================>   (106 + 7) / 113]                                                                                [Stage 119:======================================>              (82 + 32) / 114][Stage 119:========================================>            (88 + 26) / 114][Stage 119:==============================================>     (101 + 13) / 114][Stage 119:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.939017029 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395778183 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (58 + 55) / 113][Stage 120:===============================>                     (68 + 45) / 113][Stage 120:=========================================>           (88 + 25) / 113][Stage 120:=================================================>   (106 + 7) / 113][Stage 120:====================================================>(112 + 1) / 113]                                                                                [Stage 121:===========================>                         (59 + 55) / 114][Stage 121:============================>                        (62 + 52) / 114][Stage 121:==================================>                  (75 + 39) / 114][Stage 121:==========================================>          (92 + 22) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.077326883 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 111 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390393824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (59 + 54) / 113][Stage 122:==============================>                      (66 + 47) / 113][Stage 122:========================================>            (86 + 27) / 113][Stage 122:==================================================>  (107 + 6) / 113][Stage 122:====================================================>(111 + 2) / 113]                                                                                [Stage 123:===========================>                         (60 + 54) / 114][Stage 123:================================>                    (70 + 44) / 114][Stage 123:============================================>        (95 + 19) / 114][Stage 123:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.044792111 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.519191059 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 60) / 120][Stage 124:=============================>                       (66 + 54) / 120][Stage 124:====================================>                (82 + 38) / 120][Stage 124:==============================================>     (108 + 12) / 120][Stage 124:====================================================>(119 + 1) / 120]                                                                                [Stage 125:==========================>                          (61 + 60) / 121][Stage 125:===============================>                     (72 + 49) / 121][Stage 125:======================================>              (87 + 34) / 121][Stage 125:===========================================>        (102 + 19) / 121]                                                                                Time elapsed: 2.948470469 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378748567 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==================================>                  (74 + 39) / 113][Stage 126:=======================================>             (85 + 28) / 113][Stage 126:==========================================>          (90 + 23) / 113][Stage 126:==================================================>  (107 + 6) / 113][Stage 126:====================================================>(111 + 2) / 113]                                                                                [Stage 127:===================================>                 (77 + 37) / 114][Stage 127:========================================>            (87 + 27) / 114][Stage 127:============================================>        (96 + 18) / 114][Stage 127:===================================================> (110 + 4) / 114][Stage 127:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.174388387 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407221282 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:============================>                        (61 + 52) / 113][Stage 128:=================================>                   (72 + 41) / 113][Stage 128:=========================================>           (88 + 25) / 113][Stage 128:================================================>    (104 + 9) / 113][Stage 128:====================================================>(112 + 1) / 113]                                                                                [Stage 129:===========================>                         (59 + 55) / 114][Stage 129:===============================>                     (67 + 47) / 114][Stage 129:=====================================>               (81 + 33) / 114][Stage 129:==============================================>     (102 + 12) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.109498881 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348343313 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:====================================>                (80 + 35) / 115][Stage 130:=======================================>             (86 + 29) / 115][Stage 130:============================================>        (96 + 19) / 115][Stage 130:==================================================>  (110 + 5) / 115][Stage 130:====================================================>(114 + 1) / 115]                                                                                [Stage 131:=====================================>               (83 + 33) / 116][Stage 131:=========================================>           (90 + 26) / 116][Stage 131:============================================>       (100 + 16) / 116][Stage 131:==================================================>  (110 + 6) / 116][Stage 131:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.899834882 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340929734 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:======================================>              (84 + 31) / 115][Stage 132:===========================================>         (94 + 21) / 115][Stage 132:================================================>    (106 + 9) / 115][Stage 132:====================================================>(114 + 1) / 115]                                                                                [Stage 133:=====================================>               (83 + 33) / 116][Stage 133:==========================================>          (94 + 22) / 116][Stage 133:==============================================>     (103 + 13) / 116][Stage 133:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.809496579 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380328167 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===============================>                     (68 + 47) / 115][Stage 134:======================================>              (84 + 31) / 115][Stage 134:=============================================>       (99 + 16) / 115][Stage 134:==================================================>  (110 + 5) / 115]                                                                                [Stage 135:==================================>                  (75 + 41) / 116][Stage 135:==========================================>          (93 + 23) / 116][Stage 135:==============================================>     (104 + 12) / 116][Stage 135:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.908367461 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360063271 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:=====================================>               (79 + 34) / 113][Stage 136:===========================================>         (92 + 21) / 113][Stage 136:================================================>    (104 + 9) / 113][Stage 136:==================================================>  (108 + 5) / 113]                                                                                [Stage 137:=====================================>               (81 + 33) / 114][Stage 137:==========================================>          (91 + 23) / 114][Stage 137:=============================================>      (100 + 14) / 114][Stage 137:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.992369886 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390057306 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===============================>                     (69 + 46) / 115][Stage 138:==================================>                  (74 + 41) / 115][Stage 138:==========================================>          (93 + 22) / 115][Stage 138:===============================================>    (105 + 10) / 115][Stage 138:===================================================> (111 + 4) / 115][Stage 138:====================================================>(113 + 2) / 115]                                                                                [Stage 139:===============================>                     (70 + 46) / 116][Stage 139:=====================================>               (83 + 33) / 116][Stage 139:=============================================>       (99 + 17) / 116][Stage 139:================================================>    (107 + 9) / 116][Stage 139:==================================================>  (111 + 5) / 116][Stage 139:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.704069991 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404432182 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 61) / 121][Stage 140:===========================>                         (63 + 58) / 121][Stage 140:===================================>                 (82 + 39) / 121][Stage 140:==========================================>         (100 + 21) / 121][Stage 140:====================================================>(120 + 1) / 121]                                                                                [Stage 141:===========================>                         (63 + 59) / 122][Stage 141:===================================>                 (82 + 40) / 122][Stage 141:============================================>       (104 + 18) / 122][Stage 141:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.020809682 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359885952 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:=====================================>               (79 + 34) / 113][Stage 142:==========================================>          (90 + 23) / 113][Stage 142:=============================================>       (98 + 15) / 113][Stage 142:=================================================>   (106 + 7) / 113][Stage 142:===================================================> (110 + 3) / 113][Stage 142:====================================================>(112 + 1) / 113]                                                                                [Stage 143:====================================>                (78 + 36) / 114][Stage 143:=========================================>           (89 + 25) / 114][Stage 143:===============================================>    (104 + 10) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.078535512 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376399488 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=================================>                   (72 + 41) / 113][Stage 144:======================================>              (83 + 30) / 113][Stage 144:==========================================>          (91 + 22) / 113][Stage 144:==============================================>     (101 + 12) / 113][Stage 144:==================================================>  (108 + 5) / 113]                                                                                [Stage 145:======================================>              (82 + 32) / 114][Stage 145:===========================================>         (94 + 20) / 114][Stage 145:===============================================>    (104 + 10) / 114][Stage 145:====================================================>(112 + 2) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.636751167 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388918386 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (58 + 55) / 113][Stage 146:=============================>                       (62 + 51) / 113][Stage 146:====================================>                (77 + 36) / 113][Stage 146:===========================================>         (92 + 21) / 113][Stage 146:==================================================>  (108 + 5) / 113]                                                                                [Stage 147:===========================>                         (59 + 55) / 114][Stage 147:==============================>                      (65 + 49) / 114][Stage 147:====================================>                (79 + 35) / 114][Stage 147:==============================================>      (99 + 15) / 114][Stage 147:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.04595832 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359192091 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==================================>                  (73 + 40) / 113][Stage 148:======================================>              (83 + 30) / 113][Stage 148:==========================================>          (91 + 22) / 113][Stage 148:=================================================>   (106 + 7) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:====================================>                (78 + 36) / 114][Stage 149:========================================>            (87 + 27) / 114][Stage 149:=============================================>      (100 + 14) / 114][Stage 149:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.204144011 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348048574 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:=====================================>               (82 + 33) / 115][Stage 150:=========================================>           (90 + 25) / 115][Stage 150:=================================================>   (107 + 8) / 115]                                                                                [Stage 151:=======================================>             (86 + 30) / 116][Stage 151:=============================================>       (99 + 17) / 116][Stage 151:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.574815551 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 229 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392351346 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:================================>                    (70 + 45) / 115][Stage 152:====================================>                (79 + 36) / 115][Stage 152:============================================>        (97 + 18) / 115][Stage 152:===============================================>    (105 + 10) / 115][Stage 152:====================================================>(114 + 1) / 115]                                                                                [Stage 153:===============================>                     (69 + 47) / 116][Stage 153:====================================>                (80 + 36) / 116][Stage 153:=============================================>       (99 + 17) / 116][Stage 153:=================================================>   (109 + 7) / 116][Stage 153:===================================================> (112 + 4) / 116][Stage 153:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.213284251 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380493228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===============================>                     (69 + 46) / 115][Stage 154:======================================>              (83 + 32) / 115][Stage 154:==============================================>     (102 + 13) / 115][Stage 154:===================================================> (112 + 3) / 115]                                                                                [Stage 155:===================================>                 (77 + 39) / 116][Stage 155:==========================================>          (94 + 22) / 116][Stage 155:==================================================>  (110 + 6) / 116][Stage 155:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.79683995 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344328275 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:=====================================>               (81 + 34) / 115][Stage 156:=========================================>           (91 + 24) / 115][Stage 156:==============================================>     (103 + 12) / 115][Stage 156:===================================================> (111 + 4) / 115]                                                                                [Stage 157:=======================================>             (86 + 30) / 116][Stage 157:=============================================>      (101 + 15) / 116][Stage 157:=================================================>   (109 + 7) / 116][Stage 157:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.828907026 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356224193 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:=================================>                   (72 + 41) / 113][Stage 158:=======================================>             (84 + 29) / 113][Stage 158:===========================================>         (92 + 21) / 113][Stage 158:==============================================>     (102 + 11) / 113][Stage 158:===================================================> (109 + 4) / 113]                                                                                [Stage 159:===================================>                 (77 + 37) / 114][Stage 159:=========================================>           (90 + 24) / 114][Stage 159:==============================================>     (101 + 13) / 114][Stage 159:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.91378539 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405686707 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (63 + 58) / 121][Stage 160:=================================>                   (77 + 44) / 121][Stage 160:==========================================>         (100 + 21) / 121][Stage 160:====================================================>(119 + 2) / 121][Stage 160:====================================================>(120 + 1) / 121]                                                                                [Stage 161:==========================>                          (61 + 61) / 122][Stage 161:=============================>                       (68 + 54) / 122][Stage 161:=========================================>           (95 + 27) / 122][Stage 161:=================================================>   (113 + 9) / 122][Stage 161:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.132898037 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376625556 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:================================>                    (72 + 46) / 118][Stage 162:=================================>                   (74 + 44) / 118][Stage 162:===================================>                 (78 + 40) / 118][Stage 162:========================================>            (91 + 27) / 118][Stage 162:==============================================>     (106 + 12) / 118][Stage 162:====================================================>(116 + 2) / 118]                                                                                [Stage 163:================================>                    (73 + 46) / 119][Stage 163:===================================>                 (80 + 39) / 119][Stage 163:========================================>            (91 + 28) / 119][Stage 163:============================================>       (101 + 18) / 119][Stage 163:==================================================>  (114 + 5) / 119][Stage 163:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.350583121 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.491064543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:================================>                    (71 + 44) / 115][Stage 164:=======================================>             (86 + 29) / 115][Stage 164:=============================================>       (99 + 16) / 115][Stage 164:==================================================>  (109 + 6) / 115]                                                                                [Stage 165:==================================>                  (76 + 40) / 116][Stage 165:==========================================>          (92 + 24) / 116][Stage 165:==============================================>     (104 + 12) / 116][Stage 165:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.962188932 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408171725 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 60) / 120][Stage 166:===========================>                         (63 + 57) / 120][Stage 166:=====================================>               (84 + 36) / 120][Stage 166:==============================================>     (107 + 13) / 120][Stage 166:====================================================>(118 + 2) / 120]                                                                                [Stage 167:============================>                        (66 + 55) / 121][Stage 167:===================================>                 (80 + 41) / 121][Stage 167:===========================================>        (101 + 20) / 121][Stage 167:==================================================>  (116 + 5) / 121][Stage 167:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.138631534 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405209221 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:============================>                        (60 + 53) / 113][Stage 168:=================================>                   (72 + 41) / 113][Stage 168:=========================================>           (89 + 24) / 113][Stage 168:================================================>    (104 + 9) / 113][Stage 168:====================================================>(111 + 2) / 113]                                                                                [Stage 169:=============================>                       (63 + 51) / 114][Stage 169:==================================>                  (74 + 40) / 114][Stage 169:==========================================>          (92 + 22) / 114][Stage 169:==============================================>     (103 + 11) / 114][Stage 169:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.268969174 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 209 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 209 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416839852 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (63 + 57) / 120][Stage 170:==============================>                      (70 + 50) / 120][Stage 170:========================================>            (91 + 29) / 120][Stage 170:===============================================>    (110 + 10) / 120]                                                                                [Stage 171:===========================>                         (63 + 58) / 121][Stage 171:================================>                    (75 + 46) / 121][Stage 171:========================================>            (92 + 29) / 121][Stage 171:=================================================>   (112 + 9) / 121]                                                                                Time elapsed: 2.985383644 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340780839 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:======================================>              (83 + 32) / 115][Stage 172:===========================================>         (95 + 20) / 115][Stage 172:==================================================>  (110 + 5) / 115][Stage 172:====================================================>(113 + 2) / 115]                                                                                [Stage 173:=====================================>               (81 + 35) / 116][Stage 173:==========================================>          (93 + 23) / 116][Stage 173:===============================================>    (105 + 11) / 116][Stage 173:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.695229548 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388928945 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==================================>                  (75 + 40) / 115][Stage 174:========================================>            (88 + 27) / 115][Stage 174:================================================>    (106 + 9) / 115][Stage 174:====================================================>(113 + 2) / 115]                                                                                [Stage 175:====================================>                (79 + 37) / 116][Stage 175:=========================================>           (90 + 26) / 116][Stage 175:=============================================>      (101 + 15) / 116][Stage 175:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.882085581 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348557906 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=====================================>               (82 + 33) / 115][Stage 176:========================================>            (88 + 27) / 115][Stage 176:==============================================>     (103 + 12) / 115][Stage 176:====================================================>(113 + 2) / 115]                                                                                [Stage 177:======================================>              (85 + 31) / 116][Stage 177:========================================>            (88 + 28) / 116][Stage 177:=============================================>      (102 + 14) / 116][Stage 177:===================================================> (112 + 4) / 116][Stage 177:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.716314903 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38429564 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:>                                                      (0 + 0) / 113][Stage 178:===========================>                         (59 + 54) / 113][Stage 178:===============================>                     (67 + 46) / 113][Stage 178:========================================>            (86 + 27) / 113][Stage 178:====================================================>(111 + 2) / 113][Stage 178:====================================================>(112 + 1) / 113]                                                                                [Stage 179:===========================>                         (60 + 54) / 114][Stage 179:==============================>                      (66 + 48) / 114][Stage 179:=====================================>               (80 + 34) / 114][Stage 179:=============================================>       (98 + 16) / 114][Stage 179:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.000911946 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401265235 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (59 + 54) / 113][Stage 180:=================================>                   (71 + 42) / 113][Stage 180:===========================================>         (92 + 21) / 113][Stage 180:==================================================>  (107 + 6) / 113]                                                                                [Stage 181:===========================>                         (60 + 54) / 114][Stage 181:===============================>                     (68 + 46) / 114][Stage 181:==========================================>          (92 + 22) / 114][Stage 181:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.932709859 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447666598 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:>                                                      (0 + 0) / 121][Stage 182:==========================>                          (60 + 61) / 121][Stage 182:==========================>                          (61 + 60) / 121][Stage 182:=====================================>               (86 + 35) / 121][Stage 182:==============================================>     (108 + 13) / 121]                                                                                [Stage 183:==========================>                          (61 + 61) / 122][Stage 183:==============================>                      (70 + 52) / 122][Stage 183:=======================================>             (91 + 31) / 122][Stage 183:==============================================>     (110 + 12) / 122][Stage 183:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.056458992 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49298246 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=====================================>               (81 + 34) / 115][Stage 184:=========================================>           (91 + 24) / 115][Stage 184:===============================================>    (105 + 10) / 115][Stage 184:===================================================> (111 + 4) / 115]                                                                                [Stage 185:======================================>              (84 + 32) / 116][Stage 185:==========================================>          (93 + 23) / 116][Stage 185:===================================================> (112 + 4) / 116][Stage 185:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.971568909 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386029239 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (59 + 54) / 113][Stage 186:==============================>                      (64 + 49) / 113][Stage 186:=====================================>               (81 + 32) / 113][Stage 186:=============================================>       (98 + 15) / 113]                                                                                [Stage 187:===========================>                         (59 + 55) / 114][Stage 187:===============================>                     (67 + 47) / 114][Stage 187:========================================>            (87 + 27) / 114][Stage 187:=================================================>   (106 + 8) / 114][Stage 187:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.182833343 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392979526 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:======================================>              (82 + 31) / 113][Stage 188:===========================================>         (92 + 21) / 113][Stage 188:===============================================>    (103 + 10) / 113][Stage 188:==================================================>  (107 + 6) / 113]                                                                                [Stage 189:=====================================>               (80 + 34) / 114][Stage 189:=========================================>           (89 + 25) / 114][Stage 189:=============================================>      (100 + 14) / 114][Stage 189:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.983019954 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392652245 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:============================>                        (60 + 53) / 113][Stage 190:==============================>                      (66 + 47) / 113][Stage 190:===========================================>         (92 + 21) / 113][Stage 190:===============================================>    (103 + 10) / 113][Stage 190:==================================================>  (107 + 6) / 113][Stage 190:====================================================>(112 + 1) / 113]                                                                                [Stage 191:===========================>                         (60 + 54) / 114][Stage 191:==============================>                      (66 + 48) / 114][Stage 191:======================================>              (83 + 31) / 114][Stage 191:==============================================>     (101 + 13) / 114][Stage 191:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.351320133 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384587397 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:============================>                        (60 + 53) / 113][Stage 192:=================================>                   (71 + 42) / 113][Stage 192:=========================================>           (88 + 25) / 113][Stage 192:================================================>    (104 + 9) / 113][Stage 192:====================================================>(111 + 2) / 113]                                                                                [Stage 193:============================>                        (61 + 53) / 114][Stage 193:=====================================>               (80 + 34) / 114][Stage 193:============================================>        (95 + 19) / 114][Stage 193:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.282961305 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397050988 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 60) / 120][Stage 194:================================>                    (73 + 47) / 120][Stage 194:=====================================>               (86 + 34) / 120][Stage 194:=============================================>      (106 + 14) / 120][Stage 194:====================================================>(118 + 2) / 120]                                                                                [Stage 195:=============================>                       (67 + 54) / 121][Stage 195:===================================>                 (80 + 41) / 121][Stage 195:===========================================>         (99 + 22) / 121][Stage 195:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.042310179 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412350762 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=============================>                       (67 + 53) / 120][Stage 196:==================================>                  (78 + 42) / 120][Stage 196:==========================================>          (97 + 23) / 120][Stage 196:==================================================>  (114 + 6) / 120]                                                                                [Stage 197:============================>                        (64 + 57) / 121][Stage 197:===================================>                 (81 + 40) / 121][Stage 197:=============================================>      (106 + 15) / 121][Stage 197:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.963611942 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409457538 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==========================>                          (60 + 61) / 121][Stage 198:===============================>                     (71 + 50) / 121][Stage 198:=========================================>           (94 + 27) / 121][Stage 198:=================================================>   (114 + 7) / 121]                                                                                [Stage 199:==========================>                          (61 + 61) / 122][Stage 199:=============================>                       (68 + 54) / 122][Stage 199:=========================================>           (96 + 26) / 122][Stage 199:====================================================>(120 + 2) / 122][Stage 199:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.068402096 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40062739 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (61 + 60) / 121][Stage 200:===============================>                     (72 + 49) / 121][Stage 200:=======================================>             (90 + 31) / 121][Stage 200:==================================================>  (115 + 6) / 121]                                                                                [Stage 201:==========================>                          (61 + 61) / 122][Stage 201:=================================>                   (76 + 46) / 122][Stage 201:========================================>            (94 + 28) / 122][Stage 201:===============================================>    (111 + 11) / 122][Stage 201:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.079446803 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m49.372s
user	11m30.756s
sys	0m29.084s
