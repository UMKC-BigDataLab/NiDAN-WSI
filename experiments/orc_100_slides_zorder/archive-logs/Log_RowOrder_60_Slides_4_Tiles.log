Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 23:18:37 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 23:18:52 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 23:18:52 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 23:18:53 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 23:18:55 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 23:19:06 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524231855-0607).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 4.3541098 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:===========================>                           (57 + 58) / 115][Stage 0:============================>                          (60 + 55) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:=======================================>               (82 + 33) / 115][Stage 0:==========================================>            (89 + 26) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:=============================>                         (62 + 54) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:==========================================>            (89 + 27) / 116][Stage 1:==============================================>        (99 + 17) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:===================================================>   (109 + 7) / 116]                                                                                Time elapsed: 12.613143932 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  8  OR  partitionIndex = 9  OR  partitionIndex = 111  OR  partitionIndex = 112 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 111  OR  partitionIndex = 112 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.805993849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==============>                                        (32 + 88) / 120][Stage 2:=================>                                     (38 + 82) / 120][Stage 2:===========================>                           (59 + 61) / 120][Stage 2:===========================>                           (60 + 60) / 120][Stage 2:============================>                          (63 + 57) / 120][Stage 2:===============================>                       (69 + 51) / 120][Stage 2:======================================>                (83 + 37) / 120][Stage 2:==============================================>       (103 + 17) / 120][Stage 2:======================================================>(119 + 1) / 120]                                                                                [Stage 3:===========================>                           (60 + 61) / 121][Stage 3:============================>                          (62 + 59) / 121][Stage 3:===============================>                       (69 + 52) / 121][Stage 3:================================>                      (72 + 49) / 121][Stage 3:====================================>                  (81 + 40) / 121][Stage 3:=============================================>        (101 + 20) / 121][Stage 3:=================================================>    (110 + 11) / 121][Stage 3:=====================================================> (117 + 4) / 121]                                                                                Time elapsed: 5.071979707 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.713448373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (60 + 60) / 120][Stage 4:================================>                      (70 + 50) / 120][Stage 4:==================================>                    (75 + 45) / 120][Stage 4:=======================================>               (86 + 34) / 120][Stage 4:==============================================>       (103 + 17) / 120][Stage 4:====================================================>  (115 + 5) / 120][Stage 4:======================================================>(119 + 1) / 120]                                                                                [Stage 5:===========================>                           (61 + 60) / 121][Stage 5:=================================>                     (73 + 48) / 121][Stage 5:=====================================>                 (82 + 39) / 121][Stage 5:========================================>              (88 + 33) / 121][Stage 5:=============================================>         (99 + 22) / 121][Stage 5:=====================================================> (117 + 4) / 121]                                                                                Time elapsed: 4.47259115 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.585353878 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 6:>                                                        (0 + 0) / 115][Stage 6:==============================>                        (63 + 52) / 115][Stage 6:=================================>                     (69 + 46) / 115][Stage 6:======================================>                (80 + 35) / 115][Stage 6:=========================================>             (87 + 28) / 115][Stage 6:============================================>          (93 + 22) / 115][Stage 6:================================================>     (103 + 12) / 115][Stage 6:====================================================>  (110 + 5) / 115][Stage 6:=====================================================> (111 + 4) / 115]                                                                                [Stage 7:================================>                      (68 + 48) / 116][Stage 7:====================================>                  (78 + 38) / 116][Stage 7:=========================================>             (87 + 29) / 116][Stage 7:===========================================>           (92 + 24) / 116][Stage 7:==============================================>        (99 + 17) / 116][Stage 7:==================================================>    (107 + 9) / 116][Stage 7:=====================================================> (113 + 3) / 116][Stage 7:======================================================>(114 + 2) / 116][Stage 7:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.667199858 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  104  OR  partitionIndex = 105  OR  partitionIndex = 118  OR  partitionIndex = 11 9 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 118  OR  partitionIndex = 119 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.635611474 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (60 + 61) / 121][Stage 8:===========================>                           (61 + 60) / 121][Stage 8:================================>                      (71 + 50) / 121][Stage 8:===========================================>           (96 + 25) / 121][Stage 8:===============================================>      (106 + 15) / 121][Stage 8:================================================>     (109 + 12) / 121][Stage 8:====================================================>  (116 + 5) / 121][Stage 8:======================================================>(120 + 1) / 121]                                                                                [Stage 9:===========================>                           (60 + 62) / 122][Stage 9:===========================>                           (62 + 60) / 122][Stage 9:==============================>                        (68 + 54) / 122][Stage 9:==================================>                    (77 + 45) / 122][Stage 9:=========================================>             (93 + 29) / 122][Stage 9:==============================================>       (104 + 18) / 122][Stage 9:===================================================>   (114 + 8) / 122][Stage 9:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.153477398 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.561756704 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 10:================================>                     (72 + 46) / 118][Stage 10:==================================>                   (75 + 43) / 118][Stage 10:=====================================>                (82 + 36) / 118][Stage 10:========================================>             (88 + 30) / 118][Stage 10:============================================>        (100 + 18) / 118][Stage 10:===============================================>     (105 + 13) / 118][Stage 10:====================================================> (114 + 4) / 118]                                                                                [Stage 11:=================================>                    (74 + 45) / 119][Stage 11:==================================>                   (76 + 43) / 119][Stage 11:======================================>               (84 + 35) / 119][Stage 11:=======================================>              (87 + 32) / 119][Stage 11:=========================================>            (92 + 27) / 119][Stage 11:=============================================>       (103 + 16) / 119][Stage 11:=====================================================>(117 + 2) / 119][Stage 11:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.47054742 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  40  OR  partitionIndex = 41  OR  partitionIndex = 54  OR  partitionIndex = 55 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 54  OR  partitionIndex = 55 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.451095598 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 12:=====================================>                (80 + 35) / 115][Stage 12:======================================>               (83 + 32) / 115][Stage 12:==============================================>       (98 + 17) / 115][Stage 12:=================================================>    (106 + 9) / 115]                                                                                [Stage 13:======================================>               (83 + 33) / 116][Stage 13:==========================================>           (91 + 25) / 116][Stage 13:===============================================>     (104 + 12) / 116][Stage 13:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 3.533717595 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  211  OR  partitionIndex = 212  OR  partitionIndex = 225  OR  partitionIndex = 22 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 225  OR  partitionIndex = 226 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.547240772 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (58 + 55) / 113][Stage 14:============================>                         (59 + 54) / 113][Stage 14:================================>                     (69 + 44) / 113][Stage 14:=======================================>              (82 + 31) / 113][Stage 14:==============================================>      (100 + 13) / 113][Stage 14:====================================================> (110 + 3) / 113][Stage 14:=====================================================>(111 + 2) / 113]                                                                                [Stage 15:===========================>                          (59 + 55) / 114][Stage 15:=============================>                        (63 + 51) / 114][Stage 15:=====================================>                (79 + 35) / 114][Stage 15:=============================================>        (97 + 17) / 114][Stage 15:==================================================>   (107 + 7) / 114][Stage 15:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.97463102 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  4  OR  partitionIndex = 5  OR  partitionIndex = 47  OR  partitionIndex = 48 ", 4 ))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 47  OR  partitionIndex = 48 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.564731443 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:==============================>                       (63 + 50) / 113][Stage 16:=======================================>              (82 + 31) / 113][Stage 16:===========================================>          (92 + 21) / 113][Stage 16:==================================================>   (106 + 7) / 113]                                                                                [Stage 17:===========================>                          (59 + 55) / 114][Stage 17:============================>                         (61 + 53) / 114][Stage 17:==================================>                   (72 + 42) / 114][Stage 17:========================================>             (85 + 29) / 114][Stage 17:===============================================>     (103 + 11) / 114][Stage 17:=====================================================>(112 + 2) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.810872253 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105 " , 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.56715576 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (60 + 60) / 120][Stage 18:===============================>                      (71 + 49) / 120][Stage 18:========================================>             (90 + 30) / 120][Stage 18:==================================================>   (113 + 7) / 120]                                                                                [Stage 19:===========================>                          (62 + 59) / 121][Stage 19:===============================>                      (71 + 50) / 121][Stage 19:===================================>                  (80 + 41) / 121][Stage 19:==========================================>           (95 + 26) / 121][Stage 19:=================================================>    (112 + 9) / 121][Stage 19:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.747175172 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 11 4 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.536386155 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (60 + 60) / 120][Stage 20:===============================>                      (70 + 50) / 120][Stage 20:====================================>                 (82 + 38) / 120][Stage 20:=============================================>       (102 + 18) / 120][Stage 20:=====================================================>(118 + 2) / 120]                                                                                [Stage 21:===========================>                          (61 + 60) / 121][Stage 21:============================>                         (63 + 58) / 121][Stage 21:=====================================>                (84 + 37) / 121][Stage 21:===========================================>          (97 + 24) / 121][Stage 21:==================================================>   (114 + 7) / 121][Stage 21:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.636180272 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 14 4 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.439774923 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 22:====================================>                 (76 + 37) / 113][Stage 22:========================================>             (84 + 29) / 113][Stage 22:============================================>         (94 + 19) / 113][Stage 22:=================================================>    (104 + 9) / 113]                                                                                [Stage 23:====================================>                 (77 + 37) / 114][Stage 23:============================================>         (93 + 21) / 114][Stage 23:==============================================>       (99 + 15) / 114][Stage 23:=================================================>    (105 + 9) / 114][Stage 23:====================================================> (110 + 4) / 114][Stage 23:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.265797818 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.446068292 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==================================>                   (72 + 41) / 113][Stage 24:=======================================>              (82 + 31) / 113][Stage 24:=============================================>        (96 + 17) / 113][Stage 24:==================================================>   (105 + 8) / 113][Stage 24:=====================================================>(112 + 1) / 113]                                                                                [Stage 25:====================================>                 (78 + 36) / 114][Stage 25:========================================>             (85 + 29) / 114][Stage 25:===========================================>          (92 + 22) / 114][Stage 25:===============================================>     (102 + 12) / 114][Stage 25:=================================================>    (105 + 9) / 114][Stage 25:===================================================>  (109 + 5) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.383902101 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  95  OR  partitionIndex = 96  OR  partitionIndex = 109  OR  partitionIndex = 110  ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 109  OR  partitionIndex = 110 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.456575836 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (72 + 46) / 118][Stage 26:===================================>                  (78 + 40) / 118][Stage 26:=======================================>              (86 + 32) / 118][Stage 26:==================================================>   (110 + 8) / 118][Stage 26:=====================================================>(116 + 2) / 118]                                                                                [Stage 27:==================================>                   (75 + 44) / 119][Stage 27:=======================================>              (87 + 32) / 119][Stage 27:============================================>         (99 + 20) / 119][Stage 27:==================================================>   (111 + 8) / 119][Stage 27:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.498418172 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 17 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 176 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.503746136 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (60 + 60) / 120][Stage 28:==============================>                       (67 + 53) / 120][Stage 28:=======================================>              (88 + 32) / 120][Stage 28:=============================================>       (102 + 18) / 120][Stage 28:==================================================>   (113 + 7) / 120][Stage 28:=====================================================>(119 + 1) / 120]                                                                                [Stage 29:===========================>                          (61 + 60) / 121][Stage 29:===============================>                      (70 + 51) / 121][Stage 29:======================================>               (86 + 35) / 121][Stage 29:=============================================>       (103 + 18) / 121][Stage 29:====================================================> (117 + 4) / 121][Stage 29:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.706493303 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 17 7 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.436879931 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 30:=====================================>                (79 + 36) / 115][Stage 30:======================================>               (83 + 32) / 115][Stage 30:===========================================>          (93 + 22) / 115][Stage 30:=================================================>    (106 + 9) / 115][Stage 30:====================================================> (111 + 4) / 115][Stage 30:=====================================================>(114 + 1) / 115]                                                                                [Stage 31:======================================>               (83 + 33) / 116][Stage 31:=========================================>            (90 + 26) / 116][Stage 31:==============================================>      (102 + 14) / 116][Stage 31:===================================================>  (110 + 6) / 116][Stage 31:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.437626371 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 17 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.444211139 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 32:================================>                     (71 + 47) / 118][Stage 32:=================================>                    (74 + 44) / 118][Stage 32:=======================================>              (87 + 31) / 118][Stage 32:================================================>    (108 + 10) / 118][Stage 32:====================================================> (115 + 3) / 118]                                                                                [Stage 33:=================================>                    (73 + 46) / 119][Stage 33:===================================>                  (79 + 40) / 119][Stage 33:============================================>         (97 + 22) / 119][Stage 33:==================================================>   (112 + 7) / 119][Stage 33:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.146735216 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 23 0 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.500381304 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 34:==========================>                           (60 + 61) / 121][Stage 34:===========================>                          (62 + 59) / 121][Stage 34:================================>                     (73 + 48) / 121][Stage 34:========================================>             (91 + 30) / 121][Stage 34:===============================================>     (108 + 13) / 121][Stage 34:===================================================>  (116 + 5) / 121][Stage 34:=====================================================>(119 + 2) / 121]                                                                                [Stage 35:===========================>                          (61 + 61) / 122][Stage 35:============================>                         (65 + 57) / 122][Stage 35:===================================>                  (81 + 41) / 122][Stage 35:==============================================>      (106 + 16) / 122][Stage 35:====================================================> (119 + 3) / 122][Stage 35:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.10828164 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 13 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.457836878 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 36:================================>                     (72 + 46) / 118][Stage 36:=================================>                    (74 + 44) / 118][Stage 36:===================================>                  (78 + 40) / 118][Stage 36:==========================================>           (92 + 26) / 118][Stage 36:=============================================>       (101 + 17) / 118][Stage 36:====================================================> (115 + 3) / 118]                                                                                [Stage 37:=================================>                    (74 + 45) / 119][Stage 37:===================================>                  (78 + 41) / 119][Stage 37:========================================>             (89 + 30) / 119][Stage 37:==========================================>           (93 + 26) / 119][Stage 37:==============================================>      (104 + 15) / 119][Stage 37:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.862699108 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.416551029 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 38:======================================>               (81 + 34) / 115][Stage 38:=======================================>              (85 + 30) / 115][Stage 38:================================================>    (105 + 10) / 115][Stage 38:=====================================================>(114 + 1) / 115]                                                                                [Stage 39:======================================>               (82 + 34) / 116][Stage 39:========================================>             (87 + 29) / 116][Stage 39:==============================================>      (102 + 14) / 116][Stage 39:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.711186319 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.619542864 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==========================>                           (60 + 61) / 121][Stage 40:==============================>                       (69 + 52) / 121][Stage 40:=======================================>              (88 + 33) / 121][Stage 40:===============================================>     (109 + 12) / 121][Stage 40:====================================================> (117 + 4) / 121]                                                                                [Stage 41:===========================>                          (61 + 61) / 122][Stage 41:=================================>                    (76 + 46) / 122][Stage 41:==========================================>           (95 + 27) / 122][Stage 41:================================================>    (112 + 10) / 122][Stage 41:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.467617856 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.516526101 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==============================>                       (64 + 51) / 115][Stage 42:=================================>                    (72 + 43) / 115][Stage 42:=========================================>            (89 + 26) / 115][Stage 42:=================================================>    (106 + 9) / 115][Stage 42:====================================================> (112 + 3) / 115]                                                                                [Stage 43:====================================>                 (78 + 38) / 116][Stage 43:==========================================>           (92 + 24) / 116][Stage 43:===================================================>  (111 + 5) / 116][Stage 43:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.995710106 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  92  OR  partitionIndex = 93  OR  partitionIndex = 106  OR  partitionIndex = 107  ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 106  OR  partitionIndex = 107 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.386314083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=======================================>              (84 + 31) / 115][Stage 44:=============================================>        (97 + 18) / 115][Stage 44:==================================================>   (107 + 8) / 115][Stage 44:===================================================>  (110 + 5) / 115][Stage 44:=====================================================>(114 + 1) / 115]                                                                                [Stage 45:=======================================>              (84 + 32) / 116][Stage 45:===========================================>          (93 + 23) / 116][Stage 45:===============================================>     (103 + 13) / 116][Stage 45:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.893783604 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.414140457 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 46:=====================================>                (78 + 35) / 113][Stage 46:==========================================>           (88 + 25) / 113][Stage 46:==============================================>      (100 + 13) / 113][Stage 46:=================================================>    (104 + 9) / 113][Stage 46:====================================================> (109 + 4) / 113][Stage 46:=====================================================>(112 + 1) / 113]                                                                                [Stage 47:=====================================>                (80 + 34) / 114][Stage 47:=========================================>            (88 + 26) / 114][Stage 47:===============================================>     (102 + 12) / 114][Stage 47:====================================================> (110 + 4) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.361188511 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  5  OR  partitionIndex = 6  OR  partitionIndex = 19  OR  partitionIndex = 20 ", 4 ))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 19  OR  partitionIndex = 20 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.50212935 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==================================>                   (73 + 40) / 113][Stage 48:======================================>               (81 + 32) / 113][Stage 48:===========================================>          (91 + 22) / 113][Stage 48:=================================================>    (104 + 9) / 113][Stage 48:=====================================================>(112 + 1) / 113]                                                                                [Stage 49:=======================================>              (83 + 31) / 114][Stage 49:=============================================>        (95 + 19) / 114][Stage 49:==============================================>      (101 + 13) / 114][Stage 49:===================================================>  (108 + 6) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.055186193 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  2  OR  partitionIndex = 3  OR  partitionIndex = 15  OR  partitionIndex = 16 ", 4 ))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 15  OR  partitionIndex = 16 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.417296214 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 50:=====================================>                (80 + 35) / 115][Stage 50:========================================>             (87 + 28) / 115][Stage 50:===============================================>     (104 + 11) / 115][Stage 50:====================================================> (112 + 3) / 115][Stage 50:=====================================================>(114 + 1) / 115]                                                                                [Stage 51:=========================================>            (90 + 26) / 116][Stage 51:==============================================>       (99 + 17) / 116][Stage 51:================================================>    (106 + 10) / 116][Stage 51:==================================================>   (109 + 7) / 116][Stage 51:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.052941336 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 19 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.427241758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===================================>                  (74 + 39) / 113][Stage 52:========================================>             (84 + 29) / 113][Stage 52:==============================================>       (98 + 15) / 113][Stage 52:================================================>    (103 + 10) / 113][Stage 52:=====================================================>(111 + 2) / 113][Stage 52:=====================================================>(112 + 1) / 113]                                                                                [Stage 53:====================================>                 (77 + 37) / 114][Stage 53:==========================================>           (89 + 25) / 114][Stage 53:=============================================>        (96 + 18) / 114][Stage 53:=================================================>    (105 + 9) / 114][Stage 53:====================================================> (110 + 4) / 114][Stage 53:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.437421556 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.492372089 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 54:============================>                         (59 + 54) / 113][Stage 54:=============================>                        (62 + 51) / 113][Stage 54:========================================>             (84 + 29) / 113][Stage 54:===============================================>     (101 + 12) / 113][Stage 54:====================================================> (109 + 4) / 113]                                                                                [Stage 55:============================>                         (61 + 53) / 114][Stage 55:====================================>                 (76 + 38) / 114][Stage 55:==============================================>       (98 + 16) / 114][Stage 55:===================================================>  (108 + 6) / 114][Stage 55:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.586003453 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  189  OR  partitionIndex = 190  OR  partitionIndex = 203  OR  partitionIndex = 20 4 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 203  OR  partitionIndex = 204 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.410397808 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 56:================================>                     (72 + 46) / 118][Stage 56:==================================>                   (76 + 42) / 118][Stage 56:========================================>             (88 + 30) / 118][Stage 56:================================================>    (108 + 10) / 118][Stage 56:=====================================================>(117 + 1) / 118]                                                                                [Stage 57:=================================>                    (73 + 46) / 119][Stage 57:===================================>                  (78 + 41) / 119][Stage 57:===========================================>          (95 + 24) / 119][Stage 57:==================================================>   (112 + 7) / 119][Stage 57:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.223269291 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.417410517 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==================================>                   (73 + 42) / 115][Stage 58:=========================================>            (88 + 27) / 115][Stage 58:==============================================>      (101 + 14) / 115][Stage 58:====================================================> (112 + 3) / 115]                                                                                [Stage 59:==================================>                   (74 + 42) / 116][Stage 59:==========================================>           (91 + 25) / 116][Stage 59:==================================================>   (109 + 7) / 116][Stage 59:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.951189215 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 22 9 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.458485169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==================================>                   (73 + 42) / 115][Stage 60:==========================================>           (91 + 24) / 115][Stage 60:=================================================>    (106 + 9) / 115][Stage 60:=====================================================>(114 + 1) / 115]                                                                                [Stage 61:================================>                     (70 + 46) / 116][Stage 61:=====================================>                (81 + 35) / 116][Stage 61:============================================>         (96 + 20) / 116][Stage 61:===================================================>  (111 + 5) / 116][Stage 61:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.877423984 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 16 5 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.482814529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (61 + 60) / 121][Stage 62:==============================>                       (69 + 52) / 121][Stage 62:=========================================>            (94 + 27) / 121][Stage 62:===================================================>  (116 + 5) / 121]                                                                                [Stage 63:===========================>                          (62 + 60) / 122][Stage 63:=============================>                        (66 + 56) / 122][Stage 63:===================================>                  (81 + 41) / 122][Stage 63:============================================>        (103 + 19) / 122][Stage 63:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.423665633 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.407444256 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 64:=================================>                    (73 + 45) / 118][Stage 64:=====================================>                (82 + 36) / 118][Stage 64:============================================>        (100 + 18) / 118][Stage 64:====================================================> (114 + 4) / 118]                                                                                [Stage 65:==================================>                   (76 + 43) / 119][Stage 65:====================================>                 (81 + 38) / 119][Stage 65:============================================>        (101 + 18) / 119][Stage 65:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.247853534 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.426884945 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===============================>                      (67 + 48) / 115][Stage 66:========================================>             (87 + 28) / 115][Stage 66:===============================================>     (103 + 12) / 115][Stage 66:=====================================================>(113 + 2) / 115][Stage 66:=====================================================>(114 + 1) / 115]                                                                                [Stage 67:===============================>                      (67 + 49) / 116][Stage 67:======================================>               (83 + 33) / 116][Stage 67:=============================================>       (100 + 16) / 116][Stage 67:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.95557523 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 17 4 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.459143891 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (61 + 60) / 121][Stage 68:===============================>                      (71 + 50) / 121][Stage 68:=========================================>            (92 + 29) / 121][Stage 68:===================================================>  (115 + 6) / 121]                                                                                [Stage 69:===========================>                          (61 + 61) / 122][Stage 69:============================>                         (64 + 58) / 122][Stage 69:==================================>                   (79 + 43) / 122][Stage 69:==========================================>           (95 + 27) / 122][Stage 69:==================================================>   (114 + 8) / 122][Stage 69:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.278754575 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112  ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.390923726 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 70:=======================================>              (85 + 30) / 115][Stage 70:===========================================>          (93 + 22) / 115][Stage 70:===============================================>     (104 + 11) / 115][Stage 70:====================================================> (112 + 3) / 115]                                                                                [Stage 71:========================================>             (86 + 30) / 116][Stage 71:=============================================>        (98 + 18) / 116][Stage 71:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.797012646 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 23 4 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.436046472 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (60 + 53) / 113][Stage 72:================================>                     (67 + 46) / 113][Stage 72:=========================================>            (87 + 26) / 113][Stage 72:================================================>    (103 + 10) / 113][Stage 72:====================================================> (110 + 3) / 113]                                                                                [Stage 73:============================>                         (60 + 54) / 114][Stage 73:=============================>                        (62 + 52) / 114][Stage 73:====================================>                 (78 + 36) / 114][Stage 73:==============================================>       (99 + 15) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.22302472 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 13 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.409836957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==============================>                       (65 + 50) / 115][Stage 74:===================================>                  (76 + 39) / 115][Stage 74:============================================>         (94 + 21) / 115][Stage 74:==============================================>      (101 + 14) / 115][Stage 74:=====================================================>(114 + 1) / 115]                                                                                [Stage 75:================================>                     (70 + 46) / 116][Stage 75:=====================================>                (81 + 35) / 116][Stage 75:============================================>         (96 + 20) / 116][Stage 75:=================================================>    (107 + 9) / 116][Stage 75:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.905296495 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 16 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.427494328 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (61 + 59) / 120][Stage 76:=================================>                    (75 + 45) / 120][Stage 76:========================================>             (89 + 31) / 120][Stage 76:================================================>    (109 + 11) / 120][Stage 76:=====================================================>(118 + 2) / 120]                                                                                [Stage 77:===========================>                          (61 + 60) / 121][Stage 77:=============================>                        (66 + 55) / 121][Stage 77:===================================>                  (79 + 42) / 121][Stage 77:========================================>             (90 + 31) / 121][Stage 77:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.441428388 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106  ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.422673656 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (58 + 55) / 113][Stage 78:===============================>                      (66 + 47) / 113][Stage 78:========================================>             (84 + 29) / 113][Stage 78:===================================================>  (107 + 6) / 113][Stage 78:=====================================================>(112 + 1) / 113]                                                                                [Stage 79:============================>                         (60 + 54) / 114][Stage 79:===============================>                      (66 + 48) / 114][Stage 79:=======================================>              (83 + 31) / 114][Stage 79:===================================================>  (109 + 5) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.256574322 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.377799511 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 80:==================================>                   (73 + 40) / 113][Stage 80:=========================================>            (87 + 26) / 113][Stage 80:===============================================>      (99 + 14) / 113][Stage 80:==================================================>   (105 + 8) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:========================================>             (86 + 28) / 114][Stage 81:============================================>         (93 + 21) / 114][Stage 81:==============================================>      (101 + 13) / 114][Stage 81:===================================================>  (108 + 6) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.82727888 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 21 5 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.432986961 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==========================>                           (60 + 61) / 121][Stage 82:================================>                     (73 + 48) / 121][Stage 82:========================================>             (90 + 31) / 121][Stage 82:===================================================>  (116 + 5) / 121]                                                                                [Stage 83:===========================>                          (61 + 61) / 122][Stage 83:============================>                         (64 + 58) / 122][Stage 83:====================================>                 (83 + 39) / 122][Stage 83:===========================================>         (100 + 22) / 122][Stage 83:==================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.325007502 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18 ", 4 ))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.433432422 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (60 + 60) / 120][Stage 84:===========================>                          (61 + 59) / 120][Stage 84:===============================>                      (71 + 49) / 120][Stage 84:=========================================>            (93 + 27) / 120][Stage 84:==================================================>   (112 + 8) / 120]                                                                                [Stage 85:===========================>                          (62 + 59) / 121][Stage 85:=================================>                    (75 + 46) / 121][Stage 85:==========================================>           (95 + 26) / 121][Stage 85:=================================================>    (112 + 9) / 121][Stage 85:=====================================================>(119 + 2) / 121][Stage 85:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.615539647 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.351373058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 86:======================================>               (82 + 33) / 115][Stage 86:==========================================>           (91 + 24) / 115][Stage 86:==============================================>       (98 + 17) / 115][Stage 86:===================================================>  (109 + 6) / 115][Stage 86:====================================================> (112 + 3) / 115]                                                                                [Stage 87:======================================>               (83 + 33) / 116][Stage 87:============================================>         (95 + 21) / 116][Stage 87:================================================>    (106 + 10) / 116][Stage 87:====================================================> (113 + 3) / 116][Stage 87:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.945309228 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 18 1 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.389755775 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 88:================================>                     (72 + 46) / 118][Stage 88:===================================>                  (77 + 41) / 118][Stage 88:=======================================>              (87 + 31) / 118][Stage 88:===============================================>     (105 + 13) / 118][Stage 88:=====================================================>(116 + 2) / 118]                                                                                [Stage 89:=================================>                    (74 + 45) / 119][Stage 89:======================================>               (84 + 35) / 119][Stage 89:===============================================>     (106 + 13) / 119][Stage 89:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.175211949 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  73  OR  partitionIndex = 74  OR  partitionIndex = 87  OR  partitionIndex = 88 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 87  OR  partitionIndex = 88 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.392891151 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 90:================================>                     (69 + 46) / 115][Stage 90:=======================================>              (85 + 30) / 115][Stage 90:=============================================>        (97 + 18) / 115][Stage 90:===================================================>  (110 + 5) / 115][Stage 90:=====================================================>(114 + 1) / 115]                                                                                [Stage 91:=================================>                    (73 + 43) / 116][Stage 91:=========================================>            (89 + 27) / 116][Stage 91:===============================================>     (104 + 12) / 116][Stage 91:==================================================>   (109 + 7) / 116][Stage 91:===================================================>  (110 + 6) / 116][Stage 91:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.512634178 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 12 1 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.367098614 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 92:=====================================>                (79 + 34) / 113][Stage 92:==========================================>           (89 + 24) / 113][Stage 92:==============================================>      (100 + 13) / 113][Stage 92:===================================================>  (107 + 6) / 113][Stage 92:====================================================> (110 + 3) / 113]                                                                                [Stage 93:======================================>               (82 + 32) / 114][Stage 93:==============================================>       (98 + 16) / 114][Stage 93:===============================================>     (102 + 12) / 114][Stage 93:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.13307571 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.435234122 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==========================>                           (60 + 61) / 121][Stage 94:============================>                         (63 + 58) / 121][Stage 94:================================>                     (72 + 49) / 121][Stage 94:============================================>         (99 + 22) / 121][Stage 94:==================================================>   (114 + 7) / 121]                                                                                [Stage 95:===========================>                          (63 + 59) / 122][Stage 95:===================================>                  (80 + 42) / 122][Stage 95:===========================================>          (99 + 23) / 122][Stage 95:================================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.333789266 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  1  OR  partitionIndex = 2  OR  partitionIndex = 15  OR  partitionIndex = 16 ", 4 ))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1  OR  partitionIndex = 2  OR  partitionIndex = 15  OR  partitionIndex = 16 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.388971759 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 96:==============================>                       (65 + 50) / 115][Stage 96:=====================================>                (80 + 35) / 115][Stage 96:===========================================>          (93 + 22) / 115][Stage 96:================================================>    (105 + 10) / 115][Stage 96:====================================================> (112 + 3) / 115]                                                                                [Stage 97:==================================>                   (75 + 41) / 116][Stage 97:=========================================>            (90 + 26) / 116][Stage 97:==============================================>       (99 + 17) / 116][Stage 97:===================================================>  (110 + 6) / 116][Stage 97:====================================================> (112 + 4) / 116][Stage 97:=====================================================>(114 + 2) / 116][Stage 97:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.31091418 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.369252913 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=====================================>                (79 + 34) / 113][Stage 98:==========================================>           (88 + 25) / 113][Stage 98:===============================================>      (99 + 14) / 113][Stage 98:===================================================>  (107 + 6) / 113][Stage 98:====================================================> (110 + 3) / 113]                                                                                [Stage 99:====================================>                 (78 + 36) / 114][Stage 99:==========================================>           (90 + 24) / 114][Stage 99:=============================================>        (97 + 17) / 114][Stage 99:==================================================>   (107 + 7) / 114][Stage 99:===================================================>  (109 + 5) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.824961212 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 20 0 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.369035634 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 100:=================================>                   (72 + 41) / 113][Stage 100:=======================================>             (85 + 28) / 113][Stage 100:============================================>        (94 + 19) / 113][Stage 100:==================================================>  (107 + 6) / 113][Stage 100:====================================================>(112 + 1) / 113]                                                                                [Stage 101:======================================>              (83 + 31) / 114][Stage 101:============================================>        (96 + 18) / 114][Stage 101:================================================>    (105 + 9) / 114][Stage 101:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.969298489 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  125  OR  partitionIndex = 126  OR  partitionIndex = 139  OR  partitionIndex = 14 0 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 139  OR  partitionIndex = 140 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.373333828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===================================>                 (76 + 37) / 113][Stage 102:==========================================>          (91 + 22) / 113][Stage 102:==============================================>     (100 + 13) / 113][Stage 102:==================================================>  (108 + 5) / 113]                                                                                [Stage 103:====================================>                (79 + 35) / 114][Stage 103:===========================================>         (93 + 21) / 114][Stage 103:=================================================>   (106 + 8) / 114][Stage 103:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.019023233 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 11 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.412876504 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (58 + 55) / 113][Stage 104:==============================>                      (64 + 49) / 113][Stage 104:===================================>                 (76 + 37) / 113][Stage 104:============================================>        (94 + 19) / 113][Stage 104:===================================================> (110 + 3) / 113]                                                                                [Stage 105:=============================>                       (64 + 50) / 114][Stage 105:===================================>                 (76 + 38) / 114][Stage 105:============================================>        (95 + 19) / 114][Stage 105:====================================================>(112 + 2) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.576846125 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  8  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112 " , 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.428297319 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:===============================>                     (73 + 48) / 121][Stage 106:=======================================>             (90 + 31) / 121][Stage 106:=============================================>      (107 + 14) / 121][Stage 106:====================================================>(120 + 1) / 121]                                                                                [Stage 107:==========================>                          (61 + 61) / 122][Stage 107:===========================>                         (64 + 58) / 122][Stage 107:=====================================>               (87 + 35) / 122][Stage 107:==============================================>     (109 + 13) / 122][Stage 107:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.252068863 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.431952395 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (61 + 60) / 121][Stage 108:=============================>                       (68 + 53) / 121][Stage 108:====================================>                (84 + 37) / 121][Stage 108:=============================================>      (107 + 14) / 121][Stage 108:====================================================>(120 + 1) / 121]                                                                                [Stage 109:==========================>                          (61 + 61) / 122][Stage 109:=============================>                       (67 + 55) / 122][Stage 109:====================================>                (84 + 38) / 122][Stage 109:==========================================>          (98 + 24) / 122][Stage 109:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.343949979 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  96  OR  partitionIndex = 97  OR  partitionIndex = 110  OR  partitionIndex = 111  ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 110  OR  partitionIndex = 111 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402317784 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (59 + 54) / 113][Stage 110:============================>                        (60 + 53) / 113][Stage 110:=====================================>               (80 + 33) / 113][Stage 110:============================================>        (94 + 19) / 113][Stage 110:=================================================>   (105 + 8) / 113]                                                                                [Stage 111:===========================>                         (60 + 54) / 114][Stage 111:================================>                    (70 + 44) / 114][Stage 111:=======================================>             (84 + 30) / 114][Stage 111:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.120184211 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  70  OR  partitionIndex = 71  OR  partitionIndex = 84  OR  partitionIndex = 85 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 84  OR  partitionIndex = 85 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.389866804 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (58 + 55) / 113][Stage 112:=============================>                       (62 + 51) / 113][Stage 112:====================================>                (77 + 36) / 113][Stage 112:=============================================>       (96 + 17) / 113][Stage 112:====================================================>(111 + 2) / 113]                                                                                [Stage 113:===========================>                         (59 + 55) / 114][Stage 113:=============================>                       (64 + 50) / 114][Stage 113:===================================>                 (77 + 37) / 114][Stage 113:==============================================>     (101 + 13) / 114][Stage 113:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.346526787 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  122  OR  partitionIndex = 123  OR  partitionIndex = 136  OR  partitionIndex = 13 7 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 136  OR  partitionIndex = 137 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.396305754 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (62 + 59) / 121][Stage 114:==============================>                      (69 + 52) / 121][Stage 114:=========================================>           (95 + 26) / 121][Stage 114:==================================================>  (115 + 6) / 121]                                                                                [Stage 115:==========================>                          (61 + 61) / 122][Stage 115:=============================>                       (67 + 55) / 122][Stage 115:==================================>                  (80 + 42) / 122][Stage 115:==============================================>     (108 + 14) / 122][Stage 115:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.427901781 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 48 ", 4 ))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 48 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.385994172 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (58 + 55) / 113][Stage 116:===============================>                     (67 + 46) / 113][Stage 116:========================================>            (86 + 27) / 113][Stage 116:==============================================>     (100 + 13) / 113][Stage 116:====================================================>(111 + 2) / 113][Stage 116:====================================================>(112 + 1) / 113]                                                                                [Stage 117:===========================>                         (60 + 54) / 114][Stage 117:==============================>                      (66 + 48) / 114][Stage 117:======================================>              (82 + 32) / 114][Stage 117:============================================>        (96 + 18) / 114][Stage 117:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.536738071 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  103  OR  partitionIndex = 104  OR  partitionIndex = 117  OR  partitionIndex = 11 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 117  OR  partitionIndex = 118 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.340418407 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 118:======================================>              (83 + 32) / 115][Stage 118:=============================================>      (100 + 15) / 115][Stage 118:==================================================>  (109 + 6) / 115][Stage 118:====================================================>(114 + 1) / 115]                                                                                [Stage 119:=====================================>               (83 + 33) / 116][Stage 119:========================================>            (89 + 27) / 116][Stage 119:===============================================>    (105 + 11) / 116][Stage 119:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.774321255 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  66  OR  partitionIndex = 67  OR  partitionIndex = 80  OR  partitionIndex = 81 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 80  OR  partitionIndex = 81 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.358788458 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==================================>                  (73 + 40) / 113][Stage 120:=======================================>             (85 + 28) / 113][Stage 120:============================================>        (95 + 18) / 113][Stage 120:===============================================>    (103 + 10) / 113][Stage 120:====================================================>(112 + 1) / 113]                                                                                [Stage 121:=====================================>               (81 + 33) / 114][Stage 121:============================================>        (96 + 18) / 114][Stage 121:===============================================>    (104 + 10) / 114][Stage 121:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.077707947 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397432896 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 60) / 120][Stage 122:==============================>                      (68 + 52) / 120][Stage 122:========================================>            (91 + 29) / 120][Stage 122:=============================================>      (106 + 14) / 120]                                                                                [Stage 123:============================>                        (64 + 57) / 121][Stage 123:===============================>                     (73 + 48) / 121][Stage 123:=========================================>           (95 + 26) / 121][Stage 123:=================================================>   (114 + 7) / 121][Stage 123:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.218801745 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  43  OR  partitionIndex = 44  OR  partitionIndex = 57  OR  partitionIndex = 58 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 57  OR  partitionIndex = 58 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.381421103 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 124:=============================>                       (65 + 50) / 115][Stage 124:====================================>                (80 + 35) / 115][Stage 124:==========================================>          (93 + 22) / 115][Stage 124:===============================================>    (105 + 10) / 115]                                                                                [Stage 125:==================================>                  (76 + 40) / 116][Stage 125:======================================>              (85 + 31) / 116][Stage 125:=============================================>      (102 + 14) / 116][Stage 125:==================================================>  (111 + 5) / 116][Stage 125:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.667577687 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 20 4 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.400222873 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (59 + 54) / 113][Stage 126:================================>                    (70 + 43) / 113][Stage 126:========================================>            (86 + 27) / 113][Stage 126:===============================================>    (103 + 10) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:===========================>                         (59 + 55) / 114][Stage 127:==============================>                      (65 + 49) / 114][Stage 127:======================================>              (82 + 32) / 114][Stage 127:===========================================>         (94 + 20) / 114][Stage 127:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.387066265 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  124  OR  partitionIndex = 125  OR  partitionIndex = 167  OR  partitionIndex = 16 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 167  OR  partitionIndex = 168 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.385996756 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=================================>                   (73 + 42) / 115][Stage 128:=========================================>           (89 + 26) / 115][Stage 128:===============================================>    (105 + 10) / 115][Stage 128:====================================================>(113 + 2) / 115]                                                                                [Stage 129:===================================>                 (77 + 39) / 116][Stage 129:===========================================>         (95 + 21) / 116][Stage 129:==================================================>  (110 + 6) / 116][Stage 129:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.810323223 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  126  OR  partitionIndex = 127  OR  partitionIndex = 140  OR  partitionIndex = 14 1 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 140  OR  partitionIndex = 141 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.416864508 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 130:====================================>                (79 + 36) / 115][Stage 130:========================================>            (88 + 27) / 115][Stage 130:=============================================>       (98 + 17) / 115][Stage 130:=================================================>   (108 + 7) / 115]                                                                                [Stage 131:=====================================>               (83 + 33) / 116][Stage 131:============================================>       (100 + 16) / 116][Stage 131:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.595377694 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  10  OR  partitionIndex = 11  OR  partitionIndex = 24  OR  partitionIndex = 25 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 24  OR  partitionIndex = 25 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.401932212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (61 + 59) / 120][Stage 132:==============================>                      (68 + 52) / 120][Stage 132:=====================================>               (85 + 35) / 120][Stage 132:===========================================>        (101 + 19) / 120]                                                                                [Stage 133:==========================>                          (61 + 60) / 121][Stage 133:================================>                    (74 + 47) / 121][Stage 133:========================================>            (92 + 29) / 121][Stage 133:==============================================>     (109 + 12) / 121][Stage 133:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.332443971 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  182  OR  partitionIndex = 183  OR  partitionIndex = 196  OR  partitionIndex = 19 7 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 196  OR  partitionIndex = 197 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.3350524 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 134:======================================>              (84 + 31) / 115][Stage 134:=============================================>      (100 + 15) / 115][Stage 134:=================================================>   (108 + 7) / 115][Stage 134:====================================================>(113 + 2) / 115][Stage 134:====================================================>(114 + 1) / 115]                                                                                [Stage 135:=====================================>               (82 + 34) / 116][Stage 135:===========================================>         (96 + 20) / 116][Stage 135:=================================================>   (109 + 7) / 116][Stage 135:===================================================> (112 + 4) / 116][Stage 135:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.135241594 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.383546563 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 136:============================>                        (61 + 52) / 113][Stage 136:==============================>                      (65 + 48) / 113][Stage 136:=========================================>           (88 + 25) / 113][Stage 136:=================================================>   (106 + 7) / 113][Stage 136:====================================================>(111 + 2) / 113]                                                                                [Stage 137:============================>                        (61 + 53) / 114][Stage 137:=================================>                   (73 + 41) / 114][Stage 137:==========================================>          (91 + 23) / 114][Stage 137:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.253656889 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  69  OR  partitionIndex = 70  OR  partitionIndex = 83  OR  partitionIndex = 84 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 83  OR  partitionIndex = 84 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.389808793 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (59 + 54) / 113][Stage 138:============================>                        (61 + 52) / 113][Stage 138:==================================>                  (73 + 40) / 113][Stage 138:=============================================>       (98 + 15) / 113][Stage 138:==================================================>  (108 + 5) / 113]                                                                                [Stage 139:===========================>                         (60 + 54) / 114][Stage 139:==================================>                  (74 + 40) / 114][Stage 139:=========================================>           (90 + 24) / 114][Stage 139:=================================================>   (107 + 7) / 114][Stage 139:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.441185234 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 112 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 112 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.360299682 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 140:================================>                    (72 + 46) / 118][Stage 140:===================================>                 (79 + 39) / 118][Stage 140:==========================================>          (95 + 23) / 118][Stage 140:===================================================> (114 + 4) / 118]                                                                                [Stage 141:=================================>                   (76 + 43) / 119][Stage 141:====================================>                (83 + 36) / 119][Stage 141:=============================================>      (105 + 14) / 119][Stage 141:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.13608397 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 16 3 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.369543108 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===============================>                     (69 + 46) / 115][Stage 142:====================================>                (80 + 35) / 115][Stage 142:===========================================>         (95 + 20) / 115][Stage 142:=================================================>   (107 + 8) / 115][Stage 142:===================================================> (112 + 3) / 115][Stage 142:====================================================>(114 + 1) / 115]                                                                                [Stage 143:===============================>                     (70 + 46) / 116][Stage 143:========================================>            (88 + 28) / 116][Stage 143:============================================>        (98 + 18) / 116][Stage 143:==================================================>  (110 + 6) / 116][Stage 143:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.199699553 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  192  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 23 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.371061425 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===============================>                     (68 + 47) / 115][Stage 144:===================================>                 (77 + 38) / 115][Stage 144:=========================================>           (90 + 25) / 115][Stage 144:=================================================>   (107 + 8) / 115]                                                                                [Stage 145:=================================>                   (73 + 43) / 116][Stage 145:=======================================>             (87 + 29) / 116][Stage 145:=============================================>      (102 + 14) / 116][Stage 145:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.743517169 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  100  OR  partitionIndex = 101  OR  partitionIndex = 114  OR  partitionIndex = 11 5 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 114  OR  partitionIndex = 115 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.381837089 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 146:============================>                        (61 + 52) / 113][Stage 146:==================================>                  (73 + 40) / 113][Stage 146:=============================================>       (97 + 16) / 113][Stage 146:====================================================>(111 + 2) / 113]                                                                                [Stage 147:===========================>                         (60 + 54) / 114][Stage 147:==============================>                      (66 + 48) / 114][Stage 147:======================================>              (83 + 31) / 114][Stage 147:=================================================>   (106 + 8) / 114][Stage 147:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.275461943 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 17 2 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.348014824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 148:=================================>                   (71 + 42) / 113][Stage 148:======================================>              (83 + 30) / 113][Stage 148:===========================================>         (92 + 21) / 113][Stage 148:=================================================>   (106 + 7) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:===================================>                 (76 + 38) / 114][Stage 149:==========================================>          (92 + 22) / 114][Stage 149:==============================================>     (101 + 13) / 114][Stage 149:===================================================> (110 + 4) / 114][Stage 149:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.034729593 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.349851101 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 150:================================>                    (70 + 43) / 113][Stage 150:======================================>              (82 + 31) / 113][Stage 150:==========================================>          (90 + 23) / 113][Stage 150:==============================================>      (99 + 14) / 113][Stage 150:==================================================>  (107 + 6) / 113]                                                                                [Stage 151:====================================>                (79 + 35) / 114][Stage 151:===========================================>         (93 + 21) / 114][Stage 151:============================================>        (96 + 18) / 114][Stage 151:==============================================>     (102 + 12) / 114][Stage 151:===================================================> (110 + 4) / 114][Stage 151:====================================================>(112 + 2) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.928949572 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 19 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.400509622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 152:=============================>                       (63 + 50) / 113][Stage 152:==================================>                  (73 + 40) / 113][Stage 152:============================================>        (94 + 19) / 113][Stage 152:=================================================>   (106 + 7) / 113][Stage 152:====================================================>(112 + 1) / 113]                                                                                [Stage 153:===========================>                         (59 + 55) / 114][Stage 153:=============================>                       (64 + 50) / 114][Stage 153:==================================>                  (74 + 40) / 114][Stage 153:==========================================>          (92 + 22) / 114][Stage 153:=================================================>   (106 + 8) / 114][Stage 153:===================================================> (110 + 4) / 114][Stage 153:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.712095686 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  194  OR  partitionIndex = 195  OR  partitionIndex = 207  OR  partitionIndex = 20 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 207  OR  partitionIndex = 208 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.350190862 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 154:=====================================>               (80 + 33) / 113][Stage 154:==========================================>          (91 + 22) / 113][Stage 154:==============================================>     (102 + 11) / 113][Stage 154:===================================================> (110 + 3) / 113]                                                                                [Stage 155:=================================>                   (72 + 42) / 114][Stage 155:=======================================>             (84 + 30) / 114][Stage 155:===========================================>         (93 + 21) / 114][Stage 155:==============================================>     (103 + 11) / 114][Stage 155:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.002716421 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  91  OR  partitionIndex = 92  OR  partitionIndex = 105  OR  partitionIndex = 106  ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 105  OR  partitionIndex = 106 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.371590509 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==================================>                  (74 + 41) / 115][Stage 156:========================================>            (88 + 27) / 115][Stage 156:===============================================>    (104 + 11) / 115][Stage 156:===================================================> (112 + 3) / 115][Stage 156:====================================================>(114 + 1) / 115]                                                                                [Stage 157:===============================>                     (70 + 46) / 116][Stage 157:=====================================>               (81 + 35) / 116][Stage 157:============================================>        (97 + 19) / 116][Stage 157:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.861077151 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  220  OR  partitionIndex = 221  OR  partitionIndex = 234  OR  partitionIndex = 23 5 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 234  OR  partitionIndex = 235 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.386836846 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (58 + 55) / 113][Stage 158:==============================>                      (64 + 49) / 113][Stage 158:===================================>                 (75 + 38) / 113][Stage 158:============================================>        (95 + 18) / 113][Stage 158:===================================================> (109 + 4) / 113]                                                                                [Stage 159:===========================>                         (59 + 55) / 114][Stage 159:=================================>                   (73 + 41) / 114][Stage 159:==========================================>          (91 + 23) / 114][Stage 159:==================================================>  (108 + 6) / 114][Stage 159:==================================================>  (109 + 5) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.956486397 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.389685062 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (60 + 60) / 120][Stage 160:===========================>                         (63 + 57) / 120][Stage 160:==================================>                  (77 + 43) / 120][Stage 160:=============================================>      (105 + 15) / 120][Stage 160:===================================================> (117 + 3) / 120]                                                                                [Stage 161:==========================>                          (61 + 60) / 121][Stage 161:===============================>                     (71 + 50) / 121][Stage 161:=====================================>               (85 + 36) / 121][Stage 161:===============================================>    (111 + 10) / 121]                                                                                Time elapsed: 3.200709903 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398609208 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (61 + 59) / 120][Stage 162:==============================>                      (69 + 51) / 120][Stage 162:=======================================>             (89 + 31) / 120][Stage 162:=================================================>   (113 + 7) / 120][Stage 162:====================================================>(119 + 1) / 120]                                                                                [Stage 163:==========================>                          (61 + 60) / 121][Stage 163:============================>                        (65 + 56) / 121][Stage 163:====================================>                (84 + 37) / 121][Stage 163:=============================================>      (107 + 14) / 121][Stage 163:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.183056436 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 16 9 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.362653506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 164:>                                                      (0 + 0) / 118][Stage 164:================================>                    (72 + 46) / 118][Stage 164:====================================>                (82 + 36) / 118][Stage 164:===========================================>         (97 + 21) / 118][Stage 164:=================================================>   (110 + 8) / 118]                                                                                [Stage 165:=================================>                   (76 + 43) / 119][Stage 165:===================================>                 (80 + 39) / 119][Stage 165:============================================>       (101 + 18) / 119][Stage 165:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.030156444 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 16 2 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.374602368 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==============================>                      (67 + 48) / 115][Stage 166:=======================================>             (85 + 30) / 115][Stage 166:===========================================>         (95 + 20) / 115][Stage 166:===================================================> (111 + 4) / 115][Stage 166:====================================================>(113 + 2) / 115]                                                                                [Stage 167:===============================>                     (69 + 47) / 116][Stage 167:=====================================>               (82 + 34) / 116][Stage 167:===========================================>         (95 + 21) / 116][Stage 167:=================================================>   (109 + 7) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.948415458 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.483578196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==============================>                      (66 + 49) / 115][Stage 168:=====================================>               (82 + 33) / 115][Stage 168:============================================>        (96 + 19) / 115][Stage 168:=================================================>   (108 + 7) / 115][Stage 168:====================================================>(114 + 1) / 115]                                                                                [Stage 169:==================================>                  (75 + 41) / 116][Stage 169:=======================================>             (87 + 29) / 116][Stage 169:=================================================>   (108 + 8) / 116][Stage 169:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 4.199707448 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  193  OR  partitionIndex = 194  OR  partitionIndex = 207  OR  partitionIndex = 20 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 207  OR  partitionIndex = 208 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.359805272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==================================>                  (73 + 40) / 113][Stage 170:=========================================>           (88 + 25) / 113][Stage 170:==============================================>     (101 + 12) / 113][Stage 170:==================================================>  (108 + 5) / 113]                                                                                [Stage 171:====================================>                (79 + 35) / 114][Stage 171:==========================================>          (92 + 22) / 114][Stage 171:==============================================>     (102 + 12) / 114][Stage 171:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.951364165 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.335685551 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=======================================>             (86 + 29) / 115][Stage 172:=============================================>       (98 + 17) / 115][Stage 172:==================================================>  (109 + 6) / 115][Stage 172:====================================================>(113 + 2) / 115]                                                                                [Stage 173:=======================================>             (86 + 30) / 116][Stage 173:==========================================>          (92 + 24) / 116][Stage 173:=================================================>   (109 + 7) / 116][Stage 173:===================================================> (113 + 3) / 116][Stage 173:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.038603717 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 17 4 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.394978318 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 174:============================>                        (60 + 53) / 113][Stage 174:================================>                    (70 + 43) / 113][Stage 174:========================================>            (87 + 26) / 113][Stage 174:================================================>    (104 + 9) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:===========================>                         (60 + 54) / 114][Stage 175:===============================>                     (67 + 47) / 114][Stage 175:=======================================>             (85 + 29) / 114][Stage 175:==============================================>     (102 + 12) / 114][Stage 175:===================================================> (111 + 3) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.758827285 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 16 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.385861613 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==========================>                          (60 + 60) / 120][Stage 176:=============================>                       (67 + 53) / 120][Stage 176:=====================================>               (84 + 36) / 120][Stage 176:=============================================>      (106 + 14) / 120]                                                                                [Stage 177:==========================>                          (61 + 60) / 121][Stage 177:============================>                        (66 + 55) / 121][Stage 177:======================================>              (88 + 33) / 121][Stage 177:==================================================>  (116 + 5) / 121][Stage 177:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.440036914 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 16 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 168 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402059429 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (62 + 59) / 121][Stage 178:===============================>                     (73 + 48) / 121][Stage 178:==========================================>          (96 + 25) / 121][Stage 178:===================================================> (117 + 4) / 121]                                                                                [Stage 179:==========================>                          (61 + 61) / 122][Stage 179:=============================>                       (69 + 53) / 122][Stage 179:===================================>                 (81 + 41) / 122][Stage 179:==========================================>         (100 + 22) / 122][Stage 179:=================================================>   (113 + 9) / 122]                                                                                Time elapsed: 3.338193239 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 20 4 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.385821655 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===================================>                 (76 + 37) / 113][Stage 180:==========================================>          (90 + 23) / 113][Stage 180:==============================================>     (100 + 13) / 113][Stage 180:==================================================>  (107 + 6) / 113][Stage 180:====================================================>(112 + 1) / 113]                                                                                [Stage 181:===================================>                 (77 + 37) / 114][Stage 181:==========================================>          (92 + 22) / 114][Stage 181:=============================================>      (100 + 14) / 114][Stage 181:=================================================>   (107 + 7) / 114][Stage 181:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.167110613 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  159  OR  partitionIndex = 160  OR  partitionIndex = 173  OR  partitionIndex = 17 4 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.426843411 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 182:>                                                      (0 + 0) / 113][Stage 182:===========================>                         (58 + 55) / 113][Stage 182:=============================>                       (63 + 50) / 113][Stage 182:=====================================>               (79 + 34) / 113][Stage 182:================================================>    (104 + 9) / 113][Stage 182:===================================================> (110 + 3) / 113]                                                                                [Stage 183:============================>                        (61 + 53) / 114][Stage 183:================================>                    (70 + 44) / 114][Stage 183:============================================>        (95 + 19) / 114][Stage 183:=================================================>   (107 + 7) / 114][Stage 183:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.522761082 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39016849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (59 + 54) / 113][Stage 184:==============================>                      (65 + 48) / 113][Stage 184:=====================================>               (80 + 33) / 113][Stage 184:==============================================>     (101 + 12) / 113][Stage 184:===================================================> (110 + 3) / 113]                                                                                [Stage 185:============================>                        (62 + 52) / 114][Stage 185:===================================>                 (76 + 38) / 114][Stage 185:========================================>            (87 + 27) / 114][Stage 185:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.257319823 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 15 9 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.396025461 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 61) / 121][Stage 186:=================================>                   (76 + 45) / 121][Stage 186:===========================================>         (99 + 22) / 121][Stage 186:==================================================>  (116 + 5) / 121]                                                                                [Stage 187:===========================>                         (63 + 59) / 122][Stage 187:=================================>                   (78 + 44) / 122][Stage 187:==========================================>          (97 + 25) / 122][Stage 187:=================================================>   (114 + 8) / 122][Stage 187:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.300846221 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  184  OR  partitionIndex = 185  OR  partitionIndex = 227  OR  partitionIndex = 22 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 227  OR  partitionIndex = 228 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.406043205 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 61) / 121][Stage 188:============================>                        (66 + 55) / 121][Stage 188:======================================>              (88 + 33) / 121][Stage 188:==============================================>     (109 + 12) / 121]                                                                                [Stage 189:==========================>                          (61 + 61) / 122][Stage 189:==============================>                      (70 + 52) / 122][Stage 189:======================================>              (88 + 34) / 122][Stage 189:===============================================>    (112 + 10) / 122][Stage 189:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.26714038 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.351060572 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 190:=================================>                   (72 + 41) / 113][Stage 190:======================================>              (82 + 31) / 113][Stage 190:=============================================>       (97 + 16) / 113][Stage 190:=================================================>   (105 + 8) / 113][Stage 190:====================================================>(112 + 1) / 113]                                                                                [Stage 191:===================================>                 (76 + 38) / 114][Stage 191:=======================================>             (84 + 30) / 114][Stage 191:==============================================>      (99 + 15) / 114][Stage 191:=================================================>   (106 + 8) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.916401972 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 19 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.342764146 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 192:====================================>                (77 + 36) / 113][Stage 192:========================================>            (87 + 26) / 113][Stage 192:==============================================>      (99 + 14) / 113][Stage 192:===================================================> (109 + 4) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:======================================>              (82 + 32) / 114][Stage 193:===========================================>         (94 + 20) / 114][Stage 193:==============================================>     (101 + 13) / 114][Stage 193:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.200519694 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 18 9 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.367145228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=================================>                   (72 + 41) / 113][Stage 194:======================================>              (82 + 31) / 113][Stage 194:===========================================>         (92 + 21) / 113][Stage 194:=================================================>   (106 + 7) / 113][Stage 194:====================================================>(111 + 2) / 113]                                                                                [Stage 195:=======================================>             (86 + 28) / 114][Stage 195:=============================================>       (97 + 17) / 114][Stage 195:===================================================> (111 + 3) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.069652323 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 22 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.389918994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (59 + 54) / 113][Stage 196:================================>                    (69 + 44) / 113][Stage 196:========================================>            (86 + 27) / 113][Stage 196:=================================================>   (106 + 7) / 113]                                                                                [Stage 197:============================>                        (61 + 53) / 114][Stage 197:=================================>                   (72 + 42) / 114][Stage 197:========================================>            (88 + 26) / 114][Stage 197:=================================================>   (107 + 7) / 114][Stage 197:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.144435512 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.365222233 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 198:====================================>                (80 + 35) / 115][Stage 198:=========================================>           (89 + 26) / 115][Stage 198:=============================================>      (101 + 14) / 115][Stage 198:==================================================>  (110 + 5) / 115]                                                                                [Stage 199:=======================================>             (86 + 30) / 116][Stage 199:=============================================>       (99 + 17) / 116][Stage 199:===============================================>    (105 + 11) / 116][Stage 199:===================================================> (113 + 3) / 116][Stage 199:====================================================>(114 + 2) / 116][Stage 199:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.312301045 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.33519904 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=====================================>               (81 + 34) / 115][Stage 200:========================================>            (88 + 27) / 115][Stage 200:=============================================>      (101 + 14) / 115][Stage 200:==================================================>  (110 + 5) / 115]                                                                                [Stage 201:=======================================>             (86 + 30) / 116][Stage 201:==========================================>          (92 + 24) / 116][Stage 201:=============================================>      (102 + 14) / 116][Stage 201:=================================================>   (109 + 7) / 116][Stage 201:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.866226805 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m27.954s
user	11m51.436s
sys	0m57.868s
