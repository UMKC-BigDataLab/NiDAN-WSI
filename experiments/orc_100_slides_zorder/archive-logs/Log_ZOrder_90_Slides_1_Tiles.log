Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/25 02:41:27 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 02:41:40 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 02:41:40 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 02:41:41 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/25 02:41:43 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 02:41:54 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170525024143-0626).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.36481498 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIn dex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:===============>                                       (33 + 82) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:=======================================>               (83 + 32) / 115][Stage 0:==============================================>        (97 + 18) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:============================>                          (60 + 56) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.175549362 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIn dex<=174", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=174,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.602540356 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 2:==============================>                        (64 + 51) / 115][Stage 2:=================================>                     (71 + 44) / 115][Stage 2:===================================>                   (74 + 41) / 115][Stage 2:=======================================>               (83 + 32) / 115][Stage 2:=========================================>             (87 + 28) / 115][Stage 2:============================================>          (94 + 21) / 115][Stage 2:==============================================>        (98 + 17) / 115][Stage 2:=================================================>    (105 + 10) / 115][Stage 2:======================================================>(114 + 1) / 115]                                                                                [Stage 3:====================================>                  (78 + 38) / 116][Stage 3:=======================================>               (84 + 32) / 116][Stage 3:========================================>              (85 + 31) / 116][Stage 3:========================================>              (86 + 30) / 116][Stage 3:============================================>          (94 + 22) / 116][Stage 3:=================================================>    (106 + 10) / 116][Stage 3:====================================================>  (110 + 6) / 116][Stage 3:=====================================================> (112 + 4) / 116][Stage 3:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.964833931 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIn dex<=161", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=161,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.580787584 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 4:=====================================>                 (79 + 36) / 115][Stage 4:======================================>                (80 + 35) / 115][Stage 4:======================================>                (81 + 34) / 115][Stage 4:========================================>              (84 + 31) / 115][Stage 4:=============================================>         (95 + 20) / 115][Stage 4:====================================================>  (109 + 6) / 115]                                                                                [Stage 5:======================================>                (82 + 34) / 116][Stage 5:=======================================>               (83 + 33) / 116][Stage 5:===========================================>           (92 + 24) / 116][Stage 5:=============================================>         (96 + 20) / 116][Stage 5:===============================================>      (103 + 13) / 116][Stage 5:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.78741498 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZInd ex<=96", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=96,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.670469234 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 6:===========================>                           (56 + 57) / 113][Stage 6:============================>                          (59 + 54) / 113][Stage 6:==============================>                        (62 + 51) / 113][Stage 6:====================================>                  (74 + 39) / 113][Stage 6:======================================>                (79 + 34) / 113][Stage 6:================================================>     (101 + 12) / 113][Stage 6:=====================================================> (109 + 4) / 113]                                                                                [Stage 7:============================>                          (59 + 55) / 114][Stage 7:===============================>                       (66 + 48) / 114][Stage 7:===================================>                   (74 + 40) / 114][Stage 7:=========================================>             (87 + 27) / 114][Stage 7:==================================================>    (105 + 9) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.038626145 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZInd ex<=64", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=64,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.645973552 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 8:===========================>                           (60 + 61) / 121][Stage 8:================================>                      (71 + 50) / 121][Stage 8:==========================================>            (94 + 27) / 121][Stage 8:==============================================>       (105 + 16) / 121][Stage 8:===================================================>   (113 + 8) / 121]                                                                                [Stage 9:===========================>                           (61 + 61) / 122][Stage 9:===============================>                       (70 + 52) / 122][Stage 9:====================================>                  (80 + 42) / 122][Stage 9:=======================================>               (87 + 35) / 122][Stage 9:=============================================>        (102 + 20) / 122][Stage 9:=====================================================> (118 + 4) / 122]                                                                                Time elapsed: 4.134804827 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZInd ex<=33", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=33,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.570507107 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 10:===============================>                      (67 + 48) / 115][Stage 10:====================================>                 (78 + 37) / 115][Stage 10:=========================================>            (89 + 26) / 115][Stage 10:===========================================>          (92 + 23) / 115][Stage 10:==============================================>       (99 + 16) / 115][Stage 10:===================================================>  (109 + 6) / 115][Stage 10:=====================================================>(113 + 2) / 115]                                                                                [Stage 11:=================================>                    (72 + 44) / 116][Stage 11:========================================>             (86 + 30) / 116][Stage 11:============================================>         (95 + 21) / 116][Stage 11:==============================================>      (102 + 14) / 116][Stage 11:====================================================> (112 + 4) / 116][Stage 11:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.286926269 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZInd ex<=70", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=70,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.564439146 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 12:=============================>                        (62 + 51) / 113][Stage 12:===================================>                  (75 + 38) / 113][Stage 12:=========================================>            (87 + 26) / 113][Stage 12:===========================================>          (92 + 21) / 113][Stage 12:=============================================>        (96 + 17) / 113][Stage 12:===============================================>     (101 + 12) / 113][Stage 12:=================================================>    (104 + 9) / 113][Stage 12:====================================================> (110 + 3) / 113][Stage 12:=====================================================>(112 + 1) / 113]                                                                                [Stage 13:=======================================>              (84 + 30) / 114][Stage 13:===========================================>          (91 + 23) / 114][Stage 13:==============================================>       (98 + 16) / 114][Stage 13:================================================>    (104 + 10) / 114][Stage 13:===================================================>  (109 + 5) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.266798594 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIn dex<=120", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=120,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494930919 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 14:================================>                     (71 + 47) / 118][Stage 14:=================================>                    (74 + 44) / 118][Stage 14:==========================================>           (92 + 26) / 118][Stage 14:================================================>    (108 + 10) / 118][Stage 14:===================================================>  (113 + 5) / 118][Stage 14:====================================================> (115 + 3) / 118]                                                                                [Stage 15:=================================>                    (73 + 46) / 119][Stage 15:====================================>                 (80 + 39) / 119][Stage 15:=========================================>            (91 + 28) / 119][Stage 15:==============================================>      (105 + 14) / 119][Stage 15:===================================================>  (113 + 6) / 119][Stage 15:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.957860546 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZInd ex<=59", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=59,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.569586919 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 16:==========================>                           (60 + 61) / 121][Stage 16:===============================>                      (71 + 50) / 121][Stage 16:======================================>               (87 + 34) / 121][Stage 16:============================================>        (101 + 20) / 121][Stage 16:=================================================>    (112 + 9) / 121][Stage 16:=====================================================>(119 + 2) / 121]                                                                                [Stage 17:===========================>                          (61 + 61) / 122][Stage 17:===========================>                          (63 + 59) / 122][Stage 17:===============================>                      (72 + 50) / 122][Stage 17:========================================>             (92 + 30) / 122][Stage 17:==================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.598364837 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZInd ex<=23", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=23,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501133618 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 18:============================>                         (59 + 54) / 113][Stage 18:==============================>                       (63 + 50) / 113][Stage 18:=====================================>                (79 + 34) / 113][Stage 18:===========================================>          (92 + 21) / 113][Stage 18:===============================================>     (102 + 11) / 113][Stage 18:====================================================> (110 + 3) / 113]                                                                                [Stage 19:===========================>                          (59 + 55) / 114][Stage 19:===============================>                      (67 + 47) / 114][Stage 19:=======================================>              (83 + 31) / 114][Stage 19:==============================================>       (99 + 15) / 114][Stage 19:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.605109252 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIn dex<=209", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=209,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.50210026 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 20:================================>                     (72 + 46) / 118][Stage 20:=================================>                    (74 + 44) / 118][Stage 20:=======================================>              (87 + 31) / 118][Stage 20:=============================================>        (99 + 19) / 118][Stage 20:===================================================>  (113 + 5) / 118][Stage 20:=====================================================>(116 + 2) / 118]                                                                                [Stage 21:=================================>                    (73 + 46) / 119][Stage 21:=================================>                    (74 + 45) / 119][Stage 21:========================================>             (90 + 29) / 119][Stage 21:============================================>        (100 + 19) / 119][Stage 21:===================================================>  (113 + 6) / 119][Stage 21:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.514946874 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIn dex<=179", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=179,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425746632 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 22:======================================>               (82 + 33) / 115][Stage 22:==========================================>           (91 + 24) / 115][Stage 22:================================================>    (105 + 10) / 115][Stage 22:===================================================>  (109 + 6) / 115]                                                                                [Stage 23:=======================================>              (85 + 31) / 116][Stage 23:============================================>         (96 + 20) / 116][Stage 23:===============================================>     (105 + 11) / 116][Stage 23:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.904168879 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIn dex<=183", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=183,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454869245 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 24:=================================>                    (71 + 42) / 113][Stage 24:=======================================>              (83 + 30) / 113][Stage 24:============================================>         (93 + 20) / 113][Stage 24:===============================================>      (99 + 14) / 113][Stage 24:==================================================>   (106 + 7) / 113][Stage 24:=====================================================>(111 + 2) / 113]                                                                                [Stage 25:======================================>               (82 + 32) / 114][Stage 25:===========================================>          (91 + 23) / 114][Stage 25:===============================================>     (103 + 11) / 114][Stage 25:===================================================>  (109 + 5) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.408105677 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIn dex<=194", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.554071744 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 26:==================================>                   (72 + 41) / 113][Stage 26:=======================================>              (83 + 30) / 113][Stage 26:============================================>         (94 + 19) / 113][Stage 26:================================================>    (103 + 10) / 113][Stage 26:===================================================>  (108 + 5) / 113][Stage 26:=====================================================>(111 + 2) / 113]                                                                                [Stage 27:=====================================>                (79 + 35) / 114][Stage 27:==========================================>           (89 + 25) / 114][Stage 27:==============================================>      (100 + 14) / 114][Stage 27:=================================================>    (105 + 9) / 114][Stage 27:===================================================>  (109 + 5) / 114][Stage 27:=====================================================>(112 + 2) / 114][Stage 27:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.882741177 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZInde x<=8", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=8,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405221784 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 28:======================================>               (82 + 33) / 115][Stage 28:=======================================>              (85 + 30) / 115][Stage 28:===============================================>     (103 + 12) / 115][Stage 28:===================================================>  (110 + 5) / 115][Stage 28:====================================================> (111 + 4) / 115][Stage 28:=====================================================>(113 + 2) / 115]                                                                                [Stage 29:=======================================>              (85 + 31) / 116][Stage 29:============================================>         (96 + 20) / 116][Stage 29:=================================================>    (107 + 9) / 116][Stage 29:===================================================>  (110 + 6) / 116][Stage 29:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.830352862 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIn dex<=188", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=188,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488615331 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 30:================================>                     (72 + 46) / 118][Stage 30:=====================================>                (82 + 36) / 118][Stage 30:============================================>         (98 + 20) / 118][Stage 30:================================================>    (108 + 10) / 118][Stage 30:===================================================>  (113 + 5) / 118][Stage 30:====================================================> (115 + 3) / 118][Stage 30:=====================================================>(116 + 2) / 118]                                                                                [Stage 31:=================================>                    (73 + 46) / 119][Stage 31:=====================================>                (82 + 37) / 119][Stage 31:==========================================>           (94 + 25) / 119][Stage 31:==============================================>      (105 + 14) / 119][Stage 31:===================================================>  (113 + 6) / 119][Stage 31:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.962583239 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIn dex<=128", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=128,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405749064 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 32:=====================================>                (80 + 35) / 115][Stage 32:========================================>             (86 + 29) / 115][Stage 32:=============================================>        (97 + 18) / 115][Stage 32:==============================================>      (101 + 14) / 115][Stage 32:===================================================>  (109 + 6) / 115][Stage 32:=====================================================>(114 + 1) / 115]                                                                                [Stage 33:======================================>               (82 + 34) / 116][Stage 33:=========================================>            (90 + 26) / 116][Stage 33:==============================================>      (101 + 15) / 116][Stage 33:==================================================>   (108 + 8) / 116][Stage 33:===================================================>  (111 + 5) / 116][Stage 33:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.387594264 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZInd ex<=72", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=72,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.503366397 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 34:==========================>                           (60 + 61) / 121][Stage 34:==============================>                       (69 + 52) / 121][Stage 34:=====================================>                (85 + 36) / 121][Stage 34:===============================================>     (109 + 12) / 121][Stage 34:===================================================>  (115 + 6) / 121]                                                                                [Stage 35:============================>                         (65 + 57) / 122][Stage 35:==================================>                   (78 + 44) / 122][Stage 35:==============================================>      (106 + 16) / 122][Stage 35:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.207360719 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZInde x<=6", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=6,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497946438 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 36:==========================>                           (59 + 62) / 121][Stage 36:===========================>                          (61 + 60) / 121][Stage 36:================================>                     (73 + 48) / 121][Stage 36:========================================>             (90 + 31) / 121][Stage 36:==================================================>   (113 + 8) / 121][Stage 36:===================================================>  (115 + 6) / 121][Stage 36:=====================================================>(120 + 1) / 121]                                                                                [Stage 37:===========================>                          (61 + 61) / 122][Stage 37:============================>                         (64 + 58) / 122][Stage 37:=================================>                    (76 + 46) / 122][Stage 37:==============================================>      (108 + 14) / 122][Stage 37:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.369710714 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIn dex<=215", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479048437 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 38:=================================>                    (72 + 43) / 115][Stage 38:======================================>               (83 + 32) / 115][Stage 38:==============================================>      (101 + 14) / 115][Stage 38:=================================================>    (106 + 9) / 115][Stage 38:==================================================>   (108 + 7) / 115][Stage 38:====================================================> (112 + 3) / 115]                                                                                [Stage 39:=================================>                    (72 + 44) / 116][Stage 39:============================================>         (96 + 20) / 116][Stage 39:==================================================>   (109 + 7) / 116][Stage 39:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.357217668 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIn dex<=121", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=121,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.481819785 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 40:============================>                         (59 + 54) / 113][Stage 40:=============================>                        (61 + 52) / 113][Stage 40:===================================>                  (74 + 39) / 113][Stage 40:=============================================>        (96 + 17) / 113][Stage 40:===================================================>  (107 + 6) / 113][Stage 40:====================================================> (110 + 3) / 113][Stage 40:=====================================================>(112 + 1) / 113]                                                                                [Stage 41:===========================>                          (59 + 55) / 114][Stage 41:=============================>                        (62 + 52) / 114][Stage 41:===================================>                  (75 + 39) / 114][Stage 41:=============================================>        (96 + 18) / 114][Stage 41:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.546076087 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIn dex<=135", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=135,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.546924313 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 42:==========================>                           (60 + 61) / 121][Stage 42:============================>                         (63 + 58) / 121][Stage 42:==================================>                   (78 + 43) / 121][Stage 42:============================================>        (101 + 20) / 121][Stage 42:=====================================================>(119 + 2) / 121]                                                                                [Stage 43:=============================>                        (67 + 55) / 122][Stage 43:===================================>                  (81 + 41) / 122][Stage 43:==========================================>           (97 + 25) / 122][Stage 43:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.031889553 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZInd ex<=78", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=78,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.554460216 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 44:===========================>                          (60 + 60) / 120][Stage 44:==============================>                       (67 + 53) / 120][Stage 44:=======================================>              (87 + 33) / 120][Stage 44:==============================================>      (105 + 15) / 120][Stage 44:====================================================> (116 + 4) / 120][Stage 44:=====================================================>(119 + 1) / 120]                                                                                [Stage 45:===========================>                          (62 + 59) / 121][Stage 45:===============================>                      (70 + 51) / 121][Stage 45:========================================>             (90 + 31) / 121][Stage 45:=============================================>       (104 + 17) / 121][Stage 45:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.527625896 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIn dex<=187", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=187,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.477620408 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 46:==========================>                           (60 + 61) / 121][Stage 46:=============================>                        (67 + 54) / 121][Stage 46:=====================================>                (84 + 37) / 121][Stage 46:============================================>        (102 + 19) / 121][Stage 46:==================================================>   (114 + 7) / 121]                                                                                [Stage 47:===========================>                          (63 + 59) / 122][Stage 47:=================================>                    (76 + 46) / 122][Stage 47:============================================>        (103 + 19) / 122][Stage 47:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.176597765 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIn dex<=154", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=154,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.547256291 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 48:======================================>               (82 + 33) / 115][Stage 48:===========================================>          (93 + 22) / 115][Stage 48:=================================================>    (106 + 9) / 115][Stage 48:===================================================>  (110 + 5) / 115][Stage 48:=====================================================>(113 + 2) / 115]                                                                                [Stage 49:=======================================>              (85 + 31) / 116][Stage 49:=============================================>        (97 + 19) / 116][Stage 49:==================================================>   (109 + 7) / 116][Stage 49:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.135371309 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIn dex<=175", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=175,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435981874 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 50:=================================>                    (72 + 43) / 115][Stage 50:==========================================>           (90 + 25) / 115][Stage 50:=================================================>    (106 + 9) / 115][Stage 50:====================================================> (112 + 3) / 115]                                                                                [Stage 51:=====================================>                (81 + 35) / 116][Stage 51:===========================================>          (94 + 22) / 116][Stage 51:==================================================>   (109 + 7) / 116][Stage 51:=====================================================>(114 + 2) / 116][Stage 51:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.021473879 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZInde x<=4", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=4,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395666584 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 52:======================================>               (83 + 32) / 115][Stage 52:==========================================>           (91 + 24) / 115][Stage 52:=================================================>    (106 + 9) / 115][Stage 52:===================================================>  (110 + 5) / 115]                                                                                [Stage 53:=======================================>              (85 + 31) / 116][Stage 53:=============================================>       (100 + 16) / 116][Stage 53:================================================>    (106 + 10) / 116][Stage 53:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.878998499 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIn dex<=110", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474563936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 54:==========================>                           (60 + 61) / 121][Stage 54:==============================>                       (68 + 53) / 121][Stage 54:=======================================>              (89 + 32) / 121][Stage 54:===================================================>  (115 + 6) / 121][Stage 54:=====================================================>(120 + 1) / 121]                                                                                [Stage 55:===========================>                          (62 + 60) / 122][Stage 55:==============================>                       (68 + 54) / 122][Stage 55:===================================>                  (81 + 41) / 122][Stage 55:===========================================>         (101 + 21) / 122][Stage 55:===============================================>     (110 + 12) / 122][Stage 55:===================================================>  (116 + 6) / 122][Stage 55:===================================================>  (117 + 5) / 122][Stage 55:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.390397539 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIn dex<=147", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=147,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395573803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 56:======================================>               (83 + 32) / 115][Stage 56:============================================>         (95 + 20) / 115][Stage 56:==================================================>   (107 + 8) / 115][Stage 56:===================================================>  (109 + 6) / 115]                                                                                [Stage 57:=======================================>              (85 + 31) / 116][Stage 57:=============================================>        (97 + 19) / 116][Stage 57:==================================================>   (108 + 8) / 116][Stage 57:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.949673734 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZInd ex<=40", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=40,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409934588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 58:===================================>                  (75 + 38) / 113][Stage 58:=========================================>            (86 + 27) / 113][Stage 58:===============================================>      (99 + 14) / 113][Stage 58:===================================================>  (108 + 5) / 113][Stage 58:=====================================================>(111 + 2) / 113]                                                                                [Stage 59:==================================>                   (73 + 41) / 114][Stage 59:=========================================>            (87 + 27) / 114][Stage 59:=============================================>        (96 + 18) / 114][Stage 59:==================================================>   (107 + 7) / 114][Stage 59:====================================================> (111 + 3) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.402572514 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIn dex<=202", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=202,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438544878 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 60:================================>                     (72 + 46) / 118][Stage 60:=================================>                    (74 + 44) / 118][Stage 60:==================================>                   (76 + 42) / 118][Stage 60:=======================================>              (87 + 31) / 118][Stage 60:=========================================>            (91 + 27) / 118][Stage 60:=============================================>       (101 + 17) / 118][Stage 60:====================================================> (114 + 4) / 118]                                                                                [Stage 61:=================================>                    (74 + 45) / 119][Stage 61:====================================>                 (80 + 39) / 119][Stage 61:========================================>             (90 + 29) / 119][Stage 61:============================================>        (100 + 19) / 119][Stage 61:================================================>    (109 + 10) / 119][Stage 61:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.808458821 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIn dex<=240", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=240,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428187724 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 62:================================>                     (70 + 45) / 115][Stage 62:======================================>               (82 + 33) / 115][Stage 62:==============================================>       (98 + 17) / 115][Stage 62:===================================================>  (109 + 6) / 115][Stage 62:=====================================================>(114 + 1) / 115]                                                                                [Stage 63:===============================>                      (67 + 49) / 116][Stage 63:====================================>                 (78 + 38) / 116][Stage 63:=========================================>            (90 + 26) / 116][Stage 63:===============================================>     (105 + 11) / 116][Stage 63:====================================================> (112 + 4) / 116][Stage 63:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.190876047 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide88"
dataSource: String = /nidan/orc/individualORC/slide88

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIn dex<=244", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=244,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408371661 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 64:=================================>                    (71 + 44) / 115][Stage 64:========================================>             (87 + 28) / 115][Stage 64:==============================================>       (98 + 17) / 115][Stage 64:===================================================>  (109 + 6) / 115][Stage 64:=====================================================>(113 + 2) / 115]                                                                                [Stage 65:===================================>                  (77 + 39) / 116][Stage 65:==========================================>           (91 + 25) / 116][Stage 65:===============================================>     (105 + 11) / 116][Stage 65:==================================================>   (109 + 7) / 116][Stage 65:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.192676147 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIn dex<=176", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=176,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.445183857 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 66:============================>                         (59 + 54) / 113][Stage 66:==============================>                       (64 + 49) / 113][Stage 66:====================================>                 (76 + 37) / 113][Stage 66:=============================================>        (96 + 17) / 113][Stage 66:===================================================>  (107 + 6) / 113][Stage 66:====================================================> (110 + 3) / 113][Stage 66:=====================================================>(112 + 1) / 113]                                                                                [Stage 67:============================>                         (60 + 54) / 114][Stage 67:==============================>                       (64 + 50) / 114][Stage 67:======================================>               (82 + 32) / 114][Stage 67:==================================================>   (107 + 7) / 114][Stage 67:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.397471373 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIn dex<=136", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=136,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400092973 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 68:================================>                     (72 + 46) / 118][Stage 68:====================================>                 (80 + 38) / 118][Stage 68:=============================================>        (99 + 19) / 118][Stage 68:====================================================> (114 + 4) / 118][Stage 68:=====================================================>(116 + 2) / 118]                                                                                [Stage 69:=================================>                    (73 + 46) / 119][Stage 69:===================================>                  (78 + 41) / 119][Stage 69:==========================================>           (93 + 26) / 119][Stage 69:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 2.995868231 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIn dex<=165", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=165,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407976917 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 70:================================>                     (72 + 46) / 118][Stage 70:===================================>                  (77 + 41) / 118][Stage 70:======================================>               (84 + 34) / 118][Stage 70:=============================================>        (99 + 19) / 118][Stage 70:==================================================>   (110 + 8) / 118]                                                                                [Stage 71:=================================>                    (74 + 45) / 119][Stage 71:=====================================>                (83 + 36) / 119][Stage 71:============================================>        (101 + 18) / 119][Stage 71:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.192989333 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIn dex<=143", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=143,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406864553 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 72:====================================>                 (76 + 37) / 113][Stage 72:===========================================>          (91 + 22) / 113][Stage 72:==============================================>       (98 + 15) / 113][Stage 72:==================================================>   (106 + 7) / 113][Stage 72:=====================================================>(111 + 2) / 113]                                                                                [Stage 73:====================================>                 (78 + 36) / 114][Stage 73:=========================================>            (87 + 27) / 114][Stage 73:==============================================>      (100 + 14) / 114][Stage 73:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.178819182 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIn dex<=233", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=233,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399091748 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 74:================================>                     (72 + 46) / 118][Stage 74:==================================>                   (76 + 42) / 118][Stage 74:=====================================>                (83 + 35) / 118][Stage 74:============================================>         (98 + 20) / 118][Stage 74:====================================================> (114 + 4) / 118]                                                                                [Stage 75:=================================>                    (74 + 45) / 119][Stage 75:=====================================>                (82 + 37) / 119][Stage 75:============================================>        (100 + 19) / 119][Stage 75:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 2.967700226 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZInd ex<=66", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420429395 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 76:================================>                     (72 + 46) / 118][Stage 76:=================================>                    (74 + 44) / 118][Stage 76:======================================>               (85 + 33) / 118][Stage 76:===========================================>          (96 + 22) / 118][Stage 76:===================================================>  (113 + 5) / 118]                                                                                [Stage 77:=================================>                    (73 + 46) / 119][Stage 77:====================================>                 (80 + 39) / 119][Stage 77:===============================================>     (106 + 13) / 119][Stage 77:====================================================> (115 + 4) / 119][Stage 77:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.182031222 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZInd ex<=15", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=15,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374485329 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 78:=======================================>              (84 + 31) / 115][Stage 78:==========================================>           (91 + 24) / 115][Stage 78:=================================================>    (106 + 9) / 115]                                                                                [Stage 79:=======================================>              (85 + 31) / 116][Stage 79:===========================================>          (94 + 22) / 116][Stage 79:===============================================>     (105 + 11) / 116][Stage 79:===================================================>  (111 + 5) / 116][Stage 79:=====================================================>(114 + 2) / 116][Stage 79:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.195148119 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZInd ex<=61", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=61,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39086244 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 80:==============================>                       (65 + 50) / 115][Stage 80:====================================>                 (77 + 38) / 115][Stage 80:==========================================>           (90 + 25) / 115][Stage 80:===============================================>     (102 + 13) / 115][Stage 80:===================================================>  (110 + 5) / 115]                                                                                [Stage 81:=================================>                    (71 + 45) / 116][Stage 81:========================================>             (86 + 30) / 116][Stage 81:=============================================>       (100 + 16) / 116][Stage 81:==================================================>   (108 + 8) / 116][Stage 81:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.29197318 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIn dex<=111", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=111,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.526691549 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 82:===========================>                          (58 + 55) / 113][Stage 82:=============================>                        (62 + 51) / 113][Stage 82:==================================>                   (73 + 40) / 113][Stage 82:==========================================>           (88 + 25) / 113][Stage 82:====================================================> (109 + 4) / 113]                                                                                [Stage 83:===========================>                          (59 + 55) / 114][Stage 83:===============================>                      (66 + 48) / 114][Stage 83:=====================================>                (79 + 35) / 114][Stage 83:==============================================>      (100 + 14) / 114][Stage 83:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.058897815 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIn dex<=180", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420352212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 84:=============================>                        (61 + 52) / 113][Stage 84:=================================>                    (71 + 42) / 113][Stage 84:===========================================>          (90 + 23) / 113][Stage 84:====================================================> (109 + 4) / 113]                                                                                [Stage 85:===========================>                          (59 + 55) / 114][Stage 85:=============================>                        (62 + 52) / 114][Stage 85:==================================>                   (73 + 41) / 114][Stage 85:=============================================>        (96 + 18) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.905888766 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIn dex<=195", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=195,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365906639 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 86:======================================>               (80 + 33) / 113][Stage 86:==========================================>           (88 + 25) / 113][Stage 86:================================================>    (103 + 10) / 113][Stage 86:===================================================>  (108 + 5) / 113]                                                                                [Stage 87:====================================>                 (76 + 38) / 114][Stage 87:===========================================>          (91 + 23) / 114][Stage 87:=================================================>    (105 + 9) / 114][Stage 87:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.909729894 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIn dex<=228", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=228,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37583481 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 88:====================================>                 (77 + 36) / 113][Stage 88:=========================================>            (87 + 26) / 113][Stage 88:============================================>         (94 + 19) / 113][Stage 88:==================================================>   (106 + 7) / 113][Stage 88:=====================================================>(112 + 1) / 113]                                                                                [Stage 89:====================================>                 (76 + 38) / 114][Stage 89:=========================================>            (87 + 27) / 114][Stage 89:============================================>         (94 + 20) / 114][Stage 89:==================================================>   (106 + 8) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.12473747 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZInd ex<=29", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=29,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376723432 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 90:==================================>                   (72 + 41) / 113][Stage 90:======================================>               (81 + 32) / 113][Stage 90:=============================================>        (95 + 18) / 113][Stage 90:===================================================>  (107 + 6) / 113][Stage 90:=====================================================>(112 + 1) / 113]                                                                                [Stage 91:=======================================>              (83 + 31) / 114][Stage 91:==========================================>           (89 + 25) / 114][Stage 91:==============================================>      (100 + 14) / 114][Stage 91:====================================================> (111 + 3) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.260754076 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZInd ex<=94", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=94,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367768324 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 92:====================================>                 (76 + 37) / 113][Stage 92:===========================================>          (92 + 21) / 113][Stage 92:=============================================>        (96 + 17) / 113][Stage 92:====================================================> (110 + 3) / 113]                                                                                [Stage 93:=======================================>              (83 + 31) / 114][Stage 93:==========================================>           (89 + 25) / 114][Stage 93:================================================>    (104 + 10) / 114][Stage 93:===================================================>  (108 + 6) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.1119917 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIn dex<=216", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=216,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389691991 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 94:==============================>                       (66 + 49) / 115][Stage 94:=====================================>                (79 + 36) / 115][Stage 94:==============================================>       (99 + 16) / 115][Stage 94:===================================================>  (110 + 5) / 115]                                                                                [Stage 95:===============================>                      (67 + 49) / 116][Stage 95:==================================>                   (75 + 41) / 116][Stage 95:=============================================>       (100 + 16) / 116][Stage 95:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.5376832 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIn dex<=186", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=186,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389038569 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 96:==============================>                       (65 + 50) / 115][Stage 96:===================================>                  (75 + 40) / 115][Stage 96:==========================================>           (90 + 25) / 115][Stage 96:==================================================>   (108 + 7) / 115]                                                                                [Stage 97:=================================>                    (72 + 44) / 116][Stage 97:===========================================>          (93 + 23) / 116][Stage 97:===============================================>     (104 + 12) / 116][Stage 97:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.789736933 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIn dex<=246", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=246,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410461696 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 98:================================>                     (69 + 46) / 115][Stage 98:=======================================>              (84 + 31) / 115][Stage 98:==============================================>       (98 + 17) / 115][Stage 98:====================================================> (111 + 4) / 115]                                                                                [Stage 99:=================================>                    (72 + 44) / 116][Stage 99:=========================================>            (89 + 27) / 116][Stage 99:===============================================>     (105 + 11) / 116][Stage 99:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.841482172 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZInd ex<=53", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=53,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4053884 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 100:============================>                        (60 + 53) / 113][Stage 100:==============================>                      (64 + 49) / 113][Stage 100:=======================================>             (85 + 28) / 113][Stage 100:===================================================> (109 + 4) / 113]                                                                                [Stage 101:=============================>                       (63 + 51) / 114][Stage 101:===================================>                 (76 + 38) / 114][Stage 101:============================================>        (96 + 18) / 114][Stage 101:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 2.978856021 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZInd ex<=42", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=42,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385229936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 102:================================>                    (70 + 45) / 115][Stage 102:=====================================>               (81 + 34) / 115][Stage 102:=========================================>           (90 + 25) / 115][Stage 102:===============================================>    (105 + 10) / 115][Stage 102:===================================================> (112 + 3) / 115][Stage 102:====================================================>(114 + 1) / 115]                                                                                [Stage 103:===================================>                 (77 + 39) / 116][Stage 103:======================================>              (84 + 32) / 116][Stage 103:=============================================>       (99 + 17) / 116][Stage 103:=================================================>   (108 + 8) / 116][Stage 103:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.560907212 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZInd ex<=14", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=14,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348320418 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 104:=====================================>               (82 + 33) / 115][Stage 104:=========================================>           (90 + 25) / 115][Stage 104:==============================================>     (103 + 12) / 115][Stage 104:===================================================> (111 + 4) / 115]                                                                                [Stage 105:======================================>              (84 + 32) / 116][Stage 105:==========================================>          (94 + 22) / 116][Stage 105:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.851122849 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIn dex<=207", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=207,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433570127 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 106:==========================>                          (60 + 60) / 120][Stage 106:=============================>                       (66 + 54) / 120][Stage 106:===================================>                 (80 + 40) / 120][Stage 106:=============================================>      (104 + 16) / 120][Stage 106:==================================================>  (115 + 5) / 120]                                                                                [Stage 107:============================>                        (64 + 57) / 121][Stage 107:==================================>                  (79 + 42) / 121][Stage 107:============================================>       (103 + 18) / 121][Stage 107:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.961022091 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIn dex<=192", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368938923 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 108:=====================================>               (82 + 33) / 115][Stage 108:=======================================>             (85 + 30) / 115][Stage 108:=============================================>      (101 + 14) / 115][Stage 108:=================================================>   (107 + 8) / 115][Stage 108:====================================================>(114 + 1) / 115]                                                                                [Stage 109:======================================>              (85 + 31) / 116][Stage 109:============================================>       (100 + 16) / 116][Stage 109:=================================================>   (108 + 8) / 116][Stage 109:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.971452579 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZInde x<=1", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.529449288 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 110:===============================>                     (71 + 47) / 118][Stage 110:=================================>                   (75 + 43) / 118][Stage 110:=========================================>           (93 + 25) / 118][Stage 110:================================================>    (109 + 9) / 118]                                                                                [Stage 111:================================>                    (74 + 45) / 119][Stage 111:======================================>              (87 + 32) / 119][Stage 111:==============================================>     (107 + 12) / 119][Stage 111:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.788063477 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIn dex<=234", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=234,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387175378 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 112:=================================>                   (72 + 43) / 115][Stage 112:=========================================>           (89 + 26) / 115][Stage 112:=============================================>      (100 + 15) / 115][Stage 112:====================================================>(113 + 2) / 115]                                                                                [Stage 113:===============================>                     (68 + 48) / 116][Stage 113:====================================>                (80 + 36) / 116][Stage 113:===========================================>         (95 + 21) / 116][Stage 113:==================================================>  (110 + 6) / 116][Stage 113:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.800088411 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZInd ex<=56", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=56,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40371243 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 114:==========================>                          (60 + 60) / 120][Stage 114:===========================>                         (63 + 57) / 120][Stage 114:===================================>                 (80 + 40) / 120][Stage 114:=================================================>   (111 + 9) / 120]                                                                                [Stage 115:===========================>                         (63 + 58) / 121][Stage 115:===============================>                     (72 + 49) / 121][Stage 115:===========================================>        (102 + 19) / 121][Stage 115:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 2.831198225 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZInd ex<=76", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=76,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407726642 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 116:==========================>                          (60 + 61) / 121][Stage 116:============================>                        (66 + 55) / 121][Stage 116:===================================>                 (81 + 40) / 121][Stage 116:=============================================>      (106 + 15) / 121]                                                                                [Stage 117:===========================>                         (64 + 58) / 122][Stage 117:=================================>                   (78 + 44) / 122][Stage 117:=========================================>           (95 + 27) / 122][Stage 117:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 2.902038223 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIn dex<=242", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=242,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379518733 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 118:===========================>                         (58 + 55) / 113][Stage 118:=============================>                       (62 + 51) / 113][Stage 118:======================================>              (83 + 30) / 113][Stage 118:==============================================>     (101 + 12) / 113][Stage 118:===================================================> (109 + 4) / 113]                                                                                [Stage 119:===========================>                         (59 + 55) / 114][Stage 119:==============================>                      (65 + 49) / 114][Stage 119:======================================>              (82 + 32) / 114][Stage 119:==============================================>     (103 + 11) / 114][Stage 119:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.25571137 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIn dex<=229", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=229,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38823542 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 120:===========================>                         (58 + 55) / 113][Stage 120:===========================>                         (59 + 54) / 113][Stage 120:==================================>                  (74 + 39) / 113][Stage 120:===========================================>         (92 + 21) / 113][Stage 120:=================================================>   (105 + 8) / 113][Stage 120:===================================================> (110 + 3) / 113]                                                                                [Stage 121:===========================>                         (59 + 55) / 114][Stage 121:==============================>                      (65 + 49) / 114][Stage 121:====================================>                (79 + 35) / 114][Stage 121:==============================================>      (99 + 15) / 114][Stage 121:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.191414443 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZInd ex<=47", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349389757 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 122:=====================================>               (79 + 34) / 113][Stage 122:===========================================>         (92 + 21) / 113][Stage 122:==============================================>     (100 + 13) / 113][Stage 122:=================================================>   (106 + 7) / 113][Stage 122:====================================================>(111 + 2) / 113]                                                                                [Stage 123:====================================>                (78 + 36) / 114][Stage 123:=========================================>           (89 + 25) / 114][Stage 123:=============================================>      (100 + 14) / 114][Stage 123:=================================================>   (107 + 7) / 114][Stage 123:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.336143312 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIn dex<=208", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=208,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34739117 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 124:=====================================>               (79 + 34) / 113][Stage 124:=======================================>             (85 + 28) / 113][Stage 124:=============================================>       (96 + 17) / 113][Stage 124:==================================================>  (107 + 6) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:==================================>                  (75 + 39) / 114][Stage 125:========================================>            (87 + 27) / 114][Stage 125:=============================================>       (97 + 17) / 114][Stage 125:=================================================>   (106 + 8) / 114][Stage 125:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.060826263 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIn dex<=213", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=213,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402255502 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 126:============================>                        (64 + 57) / 121][Stage 126:===============================>                     (73 + 48) / 121][Stage 126:========================================>            (92 + 29) / 121][Stage 126:=================================================>   (113 + 8) / 121]                                                                                [Stage 127:==========================>                          (62 + 60) / 122][Stage 127:===============================>                     (72 + 50) / 122][Stage 127:====================================>                (85 + 37) / 122][Stage 127:==============================================>     (109 + 13) / 122][Stage 127:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.108159687 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIn dex<=245", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350389198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 128:==================================>                  (73 + 40) / 113][Stage 128:=======================================>             (85 + 28) / 113][Stage 128:============================================>        (94 + 19) / 113][Stage 128:==============================================>     (100 + 13) / 113][Stage 128:===================================================> (110 + 3) / 113]                                                                                [Stage 129:===================================>                 (77 + 37) / 114][Stage 129:========================================>            (87 + 27) / 114][Stage 129:==============================================>      (99 + 15) / 114][Stage 129:==================================================>  (109 + 5) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.070690104 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIn dex<=119", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369671479 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 130:====================================>                (77 + 36) / 113][Stage 130:==========================================>          (91 + 22) / 113][Stage 130:==============================================>     (100 + 13) / 113][Stage 130:=================================================>   (105 + 8) / 113][Stage 130:===================================================> (109 + 4) / 113][Stage 130:====================================================>(111 + 2) / 113][Stage 130:====================================================>(112 + 1) / 113]                                                                                [Stage 131:===================================>                 (77 + 37) / 114][Stage 131:========================================>            (87 + 27) / 114][Stage 131:============================================>        (96 + 18) / 114][Stage 131:================================================>    (105 + 9) / 114][Stage 131:===================================================> (111 + 3) / 114][Stage 131:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.607889142 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide88"
dataSource: String = /nidan/orc/individualORC/slide88

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIn dex<=105", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=105,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380410911 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 132:==============================>                      (67 + 48) / 115][Stage 132:===================================>                 (76 + 39) / 115][Stage 132:=========================================>           (89 + 26) / 115][Stage 132:=============================================>      (100 + 15) / 115][Stage 132:==================================================>  (110 + 5) / 115][Stage 132:====================================================>(114 + 1) / 115]                                                                                [Stage 133:================================>                    (72 + 44) / 116][Stage 133:======================================>              (85 + 31) / 116][Stage 133:===========================================>         (96 + 20) / 116][Stage 133:===============================================>    (106 + 10) / 116][Stage 133:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.418740764 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIn dex<=227", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=227,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385762908 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 134:===========================>                         (58 + 55) / 113][Stage 134:==============================>                      (64 + 49) / 113][Stage 134:=====================================>               (81 + 32) / 113][Stage 134:=============================================>       (98 + 15) / 113][Stage 134:===================================================> (109 + 4) / 113]                                                                                [Stage 135:===========================>                         (59 + 55) / 114][Stage 135:=============================>                       (64 + 50) / 114][Stage 135:=======================================>             (85 + 29) / 114][Stage 135:==================================================>  (109 + 5) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.089661729 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide82"
dataSource: String = /nidan/orc/individualORC/slide82

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZInd ex<=60", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=60,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372437005 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 136:================================>                    (73 + 45) / 118][Stage 136:=================================>                   (75 + 43) / 118][Stage 136:============================================>        (99 + 19) / 118][Stage 136:===================================================> (115 + 3) / 118]                                                                                [Stage 137:================================>                    (73 + 46) / 119][Stage 137:==================================>                  (78 + 41) / 119][Stage 137:==========================================>          (96 + 23) / 119][Stage 137:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.683971156 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZInd ex<=49", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=49,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352058421 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 138:=====================================>               (79 + 34) / 113][Stage 138:========================================>            (86 + 27) / 113][Stage 138:=============================================>       (97 + 16) / 113][Stage 138:==================================================>  (108 + 5) / 113][Stage 138:====================================================>(112 + 1) / 113]                                                                                [Stage 139:=====================================>               (80 + 34) / 114][Stage 139:===========================================>         (94 + 20) / 114][Stage 139:===============================================>    (104 + 10) / 114][Stage 139:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.570590983 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZInd ex<=24", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=24,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395574176 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 140:==========================>                          (60 + 60) / 120][Stage 140:=================================>                   (76 + 44) / 120][Stage 140:=======================================>             (90 + 30) / 120][Stage 140:===============================================>    (109 + 11) / 120][Stage 140:====================================================>(119 + 1) / 120]                                                                                [Stage 141:===========================>                         (62 + 59) / 121][Stage 141:==============================>                      (70 + 51) / 121][Stage 141:=====================================>               (85 + 36) / 121][Stage 141:============================================>       (104 + 17) / 121][Stage 141:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.203271549 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZInd ex<=82", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=82,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371978323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 142:=================================>                   (72 + 43) / 115][Stage 142:========================================>            (87 + 28) / 115][Stage 142:=============================================>       (98 + 17) / 115][Stage 142:=================================================>   (107 + 8) / 115][Stage 142:===================================================> (111 + 4) / 115][Stage 142:====================================================>(114 + 1) / 115]                                                                                [Stage 143:===============================>                     (68 + 48) / 116][Stage 143:======================================>              (84 + 32) / 116][Stage 143:=============================================>      (102 + 14) / 116][Stage 143:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.90660466 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIn dex<=170", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=170,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370169736 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 144:=================================>                   (73 + 42) / 115][Stage 144:=========================================>           (91 + 24) / 115][Stage 144:================================================>    (106 + 9) / 115]                                                                                [Stage 145:===================================>                 (78 + 38) / 116][Stage 145:=========================================>           (91 + 25) / 116][Stage 145:=================================================>   (108 + 8) / 116][Stage 145:====================================================>(114 + 2) / 116][Stage 145:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.813532102 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIn dex<=150", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=150,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354832188 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 146:================================>                    (72 + 46) / 118][Stage 146:==================================>                  (76 + 42) / 118][Stage 146:===================================>                 (79 + 39) / 118][Stage 146:=========================================>           (93 + 25) / 118][Stage 146:================================================>    (109 + 9) / 118]                                                                                [Stage 147:================================>                    (74 + 45) / 119][Stage 147:===================================>                 (80 + 39) / 119][Stage 147:========================================>            (90 + 29) / 119][Stage 147:============================================>       (102 + 17) / 119][Stage 147:=================================================>   (112 + 7) / 119][Stage 147:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.399784927 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZInd ex<=88", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375395771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 148:===================================>                 (78 + 37) / 115][Stage 148:=========================================>           (91 + 24) / 115][Stage 148:===============================================>    (105 + 10) / 115][Stage 148:====================================================>(114 + 1) / 115]                                                                                [Stage 149:====================================>                (80 + 36) / 116][Stage 149:==========================================>          (93 + 23) / 116][Stage 149:==================================================>  (111 + 5) / 116][Stage 149:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.942093635 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIn dex<=107", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=107,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459736593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 150:=====================================>               (81 + 34) / 115][Stage 150:=========================================>           (89 + 26) / 115][Stage 150:==============================================>     (102 + 13) / 115][Stage 150:===================================================> (112 + 3) / 115][Stage 150:====================================================>(113 + 2) / 115]                                                                                [Stage 151:=======================================>             (87 + 29) / 116][Stage 151:==========================================>          (94 + 22) / 116][Stage 151:=================================================>   (108 + 8) / 116][Stage 151:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.927183004 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZInd ex<=68", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=68,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376330133 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 152:=============================>                       (65 + 50) / 115][Stage 152:=====================================>               (82 + 33) / 115][Stage 152:==========================================>          (92 + 23) / 115][Stage 152:================================================>    (106 + 9) / 115][Stage 152:==================================================>  (110 + 5) / 115][Stage 152:====================================================>(114 + 1) / 115]                                                                                [Stage 153:==================================>                  (75 + 41) / 116][Stage 153:===========================================>         (95 + 21) / 116][Stage 153:==============================================>     (103 + 13) / 116][Stage 153:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.201238154 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZInd ex<=91", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=91,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365355038 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 154:=================================>                   (73 + 42) / 115][Stage 154:=======================================>             (86 + 29) / 115][Stage 154:=============================================>      (100 + 15) / 115][Stage 154:====================================================>(113 + 2) / 115]                                                                                [Stage 155:====================================>                (80 + 36) / 116][Stage 155:===========================================>         (95 + 21) / 116][Stage 155:===============================================>    (106 + 10) / 116][Stage 155:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.868365112 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIn dex<=190", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=190,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431592984 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 156:===========================>                         (62 + 59) / 121][Stage 156:==============================>                      (69 + 52) / 121][Stage 156:=====================================>               (85 + 36) / 121][Stage 156:=================================================>   (113 + 8) / 121]                                                                                [Stage 157:==========================>                          (61 + 61) / 122][Stage 157:==============================>                      (71 + 51) / 122][Stage 157:=====================================>               (87 + 35) / 122][Stage 157:============================================>       (105 + 17) / 122][Stage 157:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.094947833 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide82"
dataSource: String = /nidan/orc/individualORC/slide82

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIn dex<=222", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=222,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358683557 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 158:================================>                    (72 + 46) / 118][Stage 158:=================================>                   (74 + 44) / 118][Stage 158:=======================================>             (89 + 29) / 118][Stage 158:==================================================>  (112 + 6) / 118]                                                                                [Stage 159:================================>                    (74 + 45) / 119][Stage 159:=======================================>             (88 + 31) / 119][Stage 159:==============================================>     (107 + 12) / 119][Stage 159:===================================================> (116 + 3) / 119][Stage 159:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.954884353 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIn dex<=112", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=112,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351438473 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 160:=====================================>               (79 + 34) / 113][Stage 160:==========================================>          (90 + 23) / 113][Stage 160:=============================================>       (98 + 15) / 113][Stage 160:================================================>    (104 + 9) / 113][Stage 160:===================================================> (110 + 3) / 113]                                                                                [Stage 161:=======================================>             (85 + 29) / 114][Stage 161:===========================================>         (93 + 21) / 114][Stage 161:===============================================>    (104 + 10) / 114][Stage 161:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.136101032 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZInd ex<=57", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=57,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406170103 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 162:==========================>                          (60 + 60) / 120][Stage 162:==============================>                      (69 + 51) / 120][Stage 162:===================================>                 (81 + 39) / 120][Stage 162:=================================================>   (112 + 8) / 120]                                                                                [Stage 163:==========================>                          (61 + 60) / 121][Stage 163:===============================>                     (71 + 50) / 121][Stage 163:========================================>            (92 + 29) / 121][Stage 163:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 2.844765502 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZInd ex<=31", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=31,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392837121 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 164:==========================>                          (61 + 60) / 121][Stage 164:=============================>                       (68 + 53) / 121][Stage 164:======================================>              (87 + 34) / 121][Stage 164:==============================================>     (108 + 13) / 121]                                                                                [Stage 165:==========================>                          (62 + 60) / 122][Stage 165:================================>                    (74 + 48) / 122][Stage 165:==========================================>          (97 + 25) / 122][Stage 165:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 2.893812709 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIn dex<=177", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=177,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335484542 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 166:=======================================>             (86 + 29) / 115][Stage 166:===========================================>         (95 + 20) / 115][Stage 166:================================================>    (106 + 9) / 115][Stage 166:===================================================> (112 + 3) / 115]                                                                                [Stage 167:======================================>              (84 + 32) / 116][Stage 167:============================================>        (98 + 18) / 116][Stage 167:================================================>    (107 + 9) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.934444972 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIn dex<=113", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=113,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405544998 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 168:==========================>                          (60 + 60) / 120][Stage 168:==============================>                      (68 + 52) / 120][Stage 168:====================================>                (82 + 38) / 120][Stage 168:==============================================>     (108 + 12) / 120]                                                                                [Stage 169:============================>                        (65 + 56) / 121][Stage 169:===============================>                     (73 + 48) / 121][Stage 169:========================================>            (92 + 29) / 121][Stage 169:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.836788964 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIn dex<=196", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=196,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406587222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 170:===========================>                         (59 + 54) / 113][Stage 170:==============================>                      (66 + 47) / 113][Stage 170:=======================================>             (85 + 28) / 113][Stage 170:=================================================>   (105 + 8) / 113]                                                                                [Stage 171:============================>                        (61 + 53) / 114][Stage 171:=================================>                   (73 + 41) / 114][Stage 171:=========================================>           (90 + 24) / 114]                                                                                Time elapsed: 2.8108625 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIn dex<=109", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=109,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485967467 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 172:=============================>                       (65 + 50) / 115][Stage 172:===================================>                 (78 + 37) / 115][Stage 172:==========================================>          (93 + 22) / 115][Stage 172:=================================================>   (107 + 8) / 115][Stage 172:====================================================>(113 + 2) / 115]                                                                                [Stage 173:===============================>                     (68 + 48) / 116][Stage 173:=========================================>           (90 + 26) / 116][Stage 173:=============================================>      (101 + 15) / 116][Stage 173:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.683713742 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIn dex<=198", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=198,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347961014 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 174:=================================>                   (71 + 42) / 113][Stage 174:=======================================>             (84 + 29) / 113][Stage 174:=============================================>       (96 + 17) / 113][Stage 174:===============================================>    (103 + 10) / 113][Stage 174:===================================================> (110 + 3) / 113]                                                                                [Stage 175:==================================>                  (75 + 39) / 114][Stage 175:========================================>            (88 + 26) / 114][Stage 175:=============================================>       (97 + 17) / 114][Stage 175:===================================================> (111 + 3) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.97156033 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZInd ex<=28", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394229676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 176:==========================>                          (60 + 60) / 120][Stage 176:=============================>                       (66 + 54) / 120][Stage 176:====================================>                (82 + 38) / 120][Stage 176:===========================================>         (99 + 21) / 120][Stage 176:====================================================>(119 + 1) / 120]                                                                                [Stage 177:============================>                        (66 + 55) / 121][Stage 177:===================================>                 (80 + 41) / 121][Stage 177:==========================================>         (100 + 21) / 121][Stage 177:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.001236017 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIn dex<=191", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=191,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 178:=============================>                       (62 + 51) / 113][Stage 178:===================================>                 (75 + 38) / 113][Stage 178:=========================================>           (89 + 24) / 113][Stage 178:====================================================>(111 + 2) / 113]                                                                                [Stage 179:============================>                        (61 + 53) / 114][Stage 179:====================================>                (78 + 36) / 114][Stage 179:===========================================>         (94 + 20) / 114][Stage 179:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.978639373 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIn dex<=118", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=118,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391695583 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 180:==========================>                          (60 + 60) / 120][Stage 180:============================>                        (65 + 55) / 120][Stage 180:=====================================>               (85 + 35) / 120][Stage 180:===========================================>        (101 + 19) / 120][Stage 180:==================================================>  (114 + 6) / 120]                                                                                [Stage 181:============================>                        (65 + 56) / 121][Stage 181:===================================>                 (81 + 40) / 121][Stage 181:==========================================>         (100 + 21) / 121][Stage 181:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.092803984 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIn dex<=214", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365284247 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 182:=======================================>             (85 + 30) / 115][Stage 182:==========================================>          (93 + 22) / 115][Stage 182:================================================>    (106 + 9) / 115][Stage 182:===================================================> (112 + 3) / 115]                                                                                [Stage 183:=======================================>             (86 + 30) / 116][Stage 183:============================================>        (98 + 18) / 116][Stage 183:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.652374724 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIn dex<=160", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434625408 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 184:==========================>                          (60 + 61) / 121][Stage 184:===========================>                         (63 + 58) / 121][Stage 184:====================================>                (83 + 38) / 121][Stage 184:========================================>            (93 + 28) / 121][Stage 184:=================================================>   (114 + 7) / 121]                                                                                [Stage 185:==========================>                          (62 + 60) / 122][Stage 185:==============================>                      (71 + 51) / 122][Stage 185:==========================================>          (98 + 24) / 122][Stage 185:===============================================>    (111 + 11) / 122]                                                                                Time elapsed: 3.081584403 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZInd ex<=43", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=43,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390987918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 186:==========================>                          (60 + 60) / 120][Stage 186:=============================>                       (66 + 54) / 120][Stage 186:===================================>                 (81 + 39) / 120][Stage 186:===============================================>    (110 + 10) / 120]                                                                                [Stage 187:===========================>                         (63 + 58) / 121][Stage 187:==================================>                  (79 + 42) / 121][Stage 187:==========================================>          (97 + 24) / 121]                                                                                Time elapsed: 2.789393649 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIn dex<=131", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=131,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369467764 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 188:================================>                    (72 + 46) / 118][Stage 188:==================================>                  (76 + 42) / 118][Stage 188:========================================>            (90 + 28) / 118][Stage 188:==============================================>     (106 + 12) / 118][Stage 188:===================================================> (114 + 4) / 118]                                                                                [Stage 189:================================>                    (73 + 46) / 119][Stage 189:==================================>                  (77 + 42) / 119][Stage 189:=========================================>           (93 + 26) / 119][Stage 189:===============================================>    (108 + 11) / 119]                                                                                Time elapsed: 2.897969634 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZInd ex<=98", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=98,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340763499 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 190:=====================================>               (82 + 33) / 115][Stage 190:===========================================>         (94 + 21) / 115][Stage 190:=================================================>   (108 + 7) / 115][Stage 190:====================================================>(113 + 2) / 115]                                                                                [Stage 191:========================================>            (88 + 28) / 116][Stage 191:===========================================>         (95 + 21) / 116][Stage 191:===================================================> (112 + 4) / 116][Stage 191:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.993652484 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZInd ex<=58", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33215912 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 192:======================================>              (83 + 32) / 115][Stage 192:=========================================>           (89 + 26) / 115][Stage 192:=============================================>       (99 + 16) / 115][Stage 192:==================================================>  (110 + 5) / 115]                                                                                [Stage 193:=======================================>             (86 + 30) / 116][Stage 193:==========================================>          (93 + 23) / 116][Stage 193:==============================================>     (103 + 13) / 116][Stage 193:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.997328434 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIn dex<=239", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=239,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355161819 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 194:======================================>              (82 + 31) / 113][Stage 194:=============================================>       (96 + 17) / 113][Stage 194:=================================================>   (106 + 7) / 113][Stage 194:====================================================>(112 + 1) / 113]                                                                                [Stage 195:=================================>                   (73 + 41) / 114][Stage 195:======================================>              (82 + 32) / 114][Stage 195:============================================>        (95 + 19) / 114][Stage 195:==================================================>  (109 + 5) / 114][Stage 195:====================================================>(112 + 2) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.073587539 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIn dex<=103", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=103,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383156959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 196:==================================>                  (75 + 40) / 115][Stage 196:===========================================>         (95 + 20) / 115][Stage 196:=================================================>   (107 + 8) / 115][Stage 196:====================================================>(114 + 1) / 115]                                                                                [Stage 197:=====================================>               (81 + 35) / 116][Stage 197:=========================================>           (91 + 25) / 116][Stage 197:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.808793526 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIn dex<=182", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=182,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392176398 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 198:===========================>                         (58 + 55) / 113][Stage 198:=============================>                       (63 + 50) / 113][Stage 198:======================================>              (83 + 30) / 113][Stage 198:===================================================> (109 + 4) / 113]                                                                                [Stage 199:===============================>                     (67 + 47) / 114][Stage 199:======================================>              (83 + 31) / 114][Stage 199:=============================================>       (97 + 17) / 114][Stage 199:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.886745719 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIn dex<=201", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=201,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354917016 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 200:================================>                    (72 + 46) / 118][Stage 200:===================================>                 (79 + 39) / 118][Stage 200:========================================>            (91 + 27) / 118][Stage 200:==============================================>     (106 + 12) / 118][Stage 200:====================================================>(116 + 2) / 118]                                                                                [Stage 201:================================>                    (73 + 46) / 119][Stage 201:==================================>                  (78 + 41) / 119][Stage 201:========================================>            (90 + 29) / 119][Stage 201:===========================================>        (100 + 19) / 119][Stage 201:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.230485041 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/25 02:51:17 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.16:50628) dropped. Could not find BlockManagerMaster.

real	9m52.958s
user	11m16.192s
sys	0m26.852s
