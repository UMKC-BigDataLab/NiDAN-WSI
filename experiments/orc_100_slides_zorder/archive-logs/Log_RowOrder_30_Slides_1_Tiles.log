Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 18:24:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:24:56 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:24:56 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:24:56 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 18:24:59 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:25:09 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524182458-0579).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.36668222 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=========================>                             (53 + 62) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:======================================>                (81 + 34) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:===================================================>   (108 + 7) / 115]                                                                                [Stage 1:==========================>                            (55 + 61) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:=========================================>             (87 + 29) / 116][Stage 1:============================================>          (94 + 22) / 116][Stage 1:===============================================>      (102 + 14) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:=====================================================> (112 + 4) / 116][Stage 1:=====================================================> (113 + 3) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.647234285 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.765730058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:======================>                                (47 + 66) / 113][Stage 2:========================>                              (51 + 62) / 113][Stage 2:===========================>                           (56 + 57) / 113][Stage 2:=============================>                         (61 + 52) / 113][Stage 2:===============================>                       (65 + 48) / 113][Stage 2:====================================>                  (75 + 38) / 113][Stage 2:========================================>              (83 + 30) / 113][Stage 2:============================================>          (92 + 21) / 113][Stage 2:================================================>     (102 + 11) / 113][Stage 2:=====================================================> (109 + 4) / 113]                                                                                [Stage 3:===========================>                           (57 + 57) / 114][Stage 3:============================>                          (60 + 54) / 114][Stage 3:=============================>                         (61 + 53) / 114][Stage 3:==================================>                    (71 + 43) / 114][Stage 3:==================================>                    (72 + 42) / 114][Stage 3:=========================================>             (85 + 29) / 114][Stage 3:===============================================>      (101 + 13) / 114][Stage 3:====================================================>  (108 + 6) / 114]                                                                                Time elapsed: 5.28951835 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 169 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.587144451 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=================================>                     (68 + 45) / 113][Stage 4:==================================>                    (71 + 42) / 113][Stage 4:=====================================>                 (77 + 36) / 113][Stage 4:======================================>                (80 + 33) / 113][Stage 4:============================================>          (92 + 21) / 113][Stage 4:===============================================>      (100 + 13) / 113][Stage 4:=====================================================> (110 + 3) / 113][Stage 4:======================================================>(111 + 2) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:==================================>                    (72 + 42) / 114][Stage 5:=====================================>                 (78 + 36) / 114][Stage 5:========================================>              (83 + 31) / 114][Stage 5:=============================================>         (95 + 19) / 114][Stage 5:===================================================>   (106 + 8) / 114][Stage 5:=====================================================> (110 + 4) / 114][Stage 5:======================================================>(112 + 2) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.969031719 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.572951831 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:======================================>                (81 + 34) / 115][Stage 6:========================================>              (85 + 30) / 115][Stage 6:============================================>          (93 + 22) / 115][Stage 6:==============================================>       (100 + 15) / 115][Stage 6:===============================================>      (102 + 13) / 115][Stage 6:====================================================>  (109 + 6) / 115][Stage 6:=====================================================> (112 + 3) / 115]                                                                                [Stage 7:======================================>                (82 + 34) / 116][Stage 7:=========================================>             (87 + 29) / 116][Stage 7:============================================>          (93 + 23) / 116][Stage 7:==============================================>        (99 + 17) / 116][Stage 7:=====================================================> (112 + 4) / 116][Stage 7:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.250534846 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 112 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.621732984 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (59 + 61) / 120][Stage 8:=============================>                         (64 + 56) / 120][Stage 8:======================================>                (84 + 36) / 120][Stage 8:==============================================>       (103 + 17) / 120][Stage 8:===================================================>   (113 + 7) / 120][Stage 8:======================================================>(119 + 1) / 120]                                                                                [Stage 9:============================>                          (63 + 58) / 121][Stage 9:==============================>                        (68 + 53) / 121][Stage 9:=====================================>                 (83 + 38) / 121][Stage 9:=============================================>        (102 + 19) / 121][Stage 9:=================================================>    (111 + 10) / 121][Stage 9:=====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.855868605 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.523541124 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=================================>                    (71 + 42) / 113][Stage 10:======================================>               (80 + 33) / 113][Stage 10:==========================================>           (88 + 25) / 113][Stage 10:==============================================>       (98 + 15) / 113][Stage 10:=================================================>    (104 + 9) / 113][Stage 10:====================================================> (109 + 4) / 113]                                                                                [Stage 11:=====================================>                (80 + 34) / 114][Stage 11:===========================================>          (91 + 23) / 114][Stage 11:==============================================>       (98 + 16) / 114][Stage 11:==============================================>      (101 + 13) / 114][Stage 11:===================================================>  (108 + 6) / 114][Stage 11:====================================================> (110 + 4) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.061240515 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 204 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.592486961 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (57 + 56) / 113][Stage 12:=============================>                        (62 + 51) / 113][Stage 12:===================================>                  (74 + 39) / 113][Stage 12:==========================================>           (89 + 24) / 113][Stage 12:===============================================>      (99 + 14) / 113][Stage 12:===================================================>  (108 + 5) / 113][Stage 12:=====================================================>(112 + 1) / 113]                                                                                [Stage 13:============================>                         (60 + 54) / 114][Stage 13:============================>                         (61 + 53) / 114][Stage 13:==================================>                   (73 + 41) / 114][Stage 13:=============================================>        (97 + 17) / 114][Stage 13:===================================================>  (108 + 6) / 114][Stage 13:====================================================> (111 + 3) / 114][Stage 13:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.02933396 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.517671546 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==============================>                       (66 + 49) / 115][Stage 14:==================================>                   (74 + 41) / 115][Stage 14:=========================================>            (89 + 26) / 115][Stage 14:=============================================>        (96 + 19) / 115][Stage 14:===============================================>     (102 + 13) / 115][Stage 14:===============================================>     (104 + 11) / 115][Stage 14:=================================================>    (106 + 9) / 115][Stage 14:=====================================================>(114 + 1) / 115]                                                                                [Stage 15:================================>                     (69 + 47) / 116][Stage 15:===================================>                  (77 + 39) / 116][Stage 15:==============================================>       (99 + 17) / 116][Stage 15:================================================>    (106 + 10) / 116][Stage 15:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 4.02095145 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.652598248 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:============================>                         (59 + 54) / 113][Stage 16:==============================>                       (63 + 50) / 113][Stage 16:======================================>               (81 + 32) / 113][Stage 16:=============================================>        (96 + 17) / 113][Stage 16:================================================>    (103 + 10) / 113][Stage 16:=====================================================>(111 + 2) / 113]                                                                                [Stage 17:===========================>                          (59 + 55) / 114][Stage 17:===============================>                      (66 + 48) / 114][Stage 17:=====================================>                (80 + 34) / 114][Stage 17:=============================================>        (97 + 17) / 114][Stage 17:================================================>    (104 + 10) / 114][Stage 17:====================================================> (111 + 3) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.940265603 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.531590632 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==========================>                           (60 + 61) / 121][Stage 18:============================>                         (64 + 57) / 121][Stage 18:======================================>               (86 + 35) / 121][Stage 18:================================================>    (111 + 10) / 121][Stage 18:=====================================================>(120 + 1) / 121]                                                                                [Stage 19:===========================>                          (61 + 61) / 122][Stage 19:===========================>                          (63 + 59) / 122][Stage 19:==================================>                   (77 + 45) / 122][Stage 19:=========================================>            (93 + 29) / 122][Stage 19:================================================>    (111 + 11) / 122][Stage 19:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.607316204 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480859185 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===================================>                  (75 + 38) / 113][Stage 20:==========================================>           (89 + 24) / 113][Stage 20:==============================================>       (98 + 15) / 113][Stage 20:==================================================>   (105 + 8) / 113][Stage 20:===================================================>  (107 + 6) / 113][Stage 20:====================================================> (110 + 3) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:====================================>                 (76 + 38) / 114][Stage 21:========================================>             (85 + 29) / 114][Stage 21:===========================================>          (91 + 23) / 114][Stage 21:==============================================>      (100 + 14) / 114][Stage 21:=================================================>    (105 + 9) / 114][Stage 21:====================================================> (111 + 3) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.001084672 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449841841 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:=================================>                    (71 + 42) / 113][Stage 22:=========================================>            (86 + 27) / 113][Stage 22:=============================================>        (96 + 17) / 113][Stage 22:==================================================>   (106 + 7) / 113]                                                                                [Stage 23:=====================================>                (80 + 34) / 114][Stage 23:==========================================>           (90 + 24) / 114][Stage 23:==============================================>       (98 + 16) / 114][Stage 23:==================================================>   (106 + 8) / 114][Stage 23:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.061679242 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427504342 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:======================================>               (81 + 34) / 115][Stage 24:==========================================>           (90 + 25) / 115][Stage 24:==============================================>      (101 + 14) / 115][Stage 24:=================================================>    (106 + 9) / 115][Stage 24:====================================================> (111 + 4) / 115]                                                                                [Stage 25:======================================>               (83 + 33) / 116][Stage 25:==========================================>           (92 + 24) / 116][Stage 25:==============================================>      (102 + 14) / 116][Stage 25:====================================================> (113 + 3) / 116][Stage 25:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.276565563 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461202475 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (72 + 46) / 118][Stage 26:=======================================>              (86 + 32) / 118][Stage 26:============================================>         (98 + 20) / 118][Stage 26:====================================================> (114 + 4) / 118]                                                                                [Stage 27:=================================>                    (73 + 46) / 119][Stage 27:==================================>                   (77 + 42) / 119][Stage 27:==========================================>           (94 + 25) / 119][Stage 27:=================================================>    (110 + 9) / 119][Stage 27:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.265539027 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485076776 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:=============================>                        (62 + 51) / 113][Stage 28:=====================================>                (78 + 35) / 113][Stage 28:===============================================>      (99 + 14) / 113][Stage 28:====================================================> (109 + 4) / 113]                                                                                [Stage 29:============================>                         (61 + 53) / 114][Stage 29:====================================>                 (76 + 38) / 114][Stage 29:=============================================>        (97 + 17) / 114][Stage 29:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.091170886 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441635989 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:=================================>                    (70 + 43) / 113][Stage 30:=======================================>              (83 + 30) / 113][Stage 30:===========================================>          (91 + 22) / 113][Stage 30:==============================================>      (100 + 13) / 113][Stage 30:====================================================> (109 + 4) / 113][Stage 30:=====================================================>(111 + 2) / 113]                                                                                [Stage 31:=====================================>                (80 + 34) / 114][Stage 31:==========================================>           (89 + 25) / 114][Stage 31:==============================================>      (101 + 13) / 114][Stage 31:==================================================>   (106 + 8) / 114][Stage 31:====================================================> (111 + 3) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.637199257 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446491511 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:================================>                     (72 + 46) / 118][Stage 32:=================================>                    (73 + 45) / 118][Stage 32:====================================>                 (79 + 39) / 118][Stage 32:========================================>             (89 + 29) / 118][Stage 32:============================================>         (97 + 21) / 118][Stage 32:===============================================>     (105 + 13) / 118][Stage 32:====================================================> (114 + 4) / 118][Stage 32:=====================================================>(116 + 2) / 118]                                                                                [Stage 33:=================================>                    (73 + 46) / 119][Stage 33:==================================>                   (75 + 44) / 119][Stage 33:====================================>                 (81 + 38) / 119][Stage 33:===========================================>          (95 + 24) / 119][Stage 33:===============================================>     (107 + 12) / 119][Stage 33:===================================================>  (114 + 5) / 119][Stage 33:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.928177021 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47975648 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===================================>                  (74 + 39) / 113][Stage 34:========================================>             (85 + 28) / 113][Stage 34:===========================================>          (92 + 21) / 113][Stage 34:=================================================>    (104 + 9) / 113][Stage 34:==================================================>   (105 + 8) / 113][Stage 34:====================================================> (110 + 3) / 113]                                                                                [Stage 35:=====================================>                (79 + 35) / 114][Stage 35:=========================================>            (88 + 26) / 114][Stage 35:==============================================>      (101 + 13) / 114][Stage 35:====================================================> (110 + 4) / 114][Stage 35:====================================================> (111 + 3) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.583565538 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505591671 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==========================>                           (60 + 61) / 121][Stage 36:===========================>                          (61 + 60) / 121][Stage 36:================================>                     (73 + 48) / 121][Stage 36:=====================================>                (85 + 36) / 121][Stage 36:================================================>    (111 + 10) / 121]                                                                                [Stage 37:===========================>                          (61 + 61) / 122][Stage 37:================================>                     (73 + 49) / 122][Stage 37:===========================================>         (100 + 22) / 122][Stage 37:===================================================>  (117 + 5) / 122][Stage 37:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.184617038 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.516166023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (60 + 60) / 120][Stage 38:=============================>                        (65 + 55) / 120][Stage 38:===================================>                  (79 + 41) / 120][Stage 38:============================================>        (100 + 20) / 120][Stage 38:==================================================>   (112 + 8) / 120][Stage 38:======================================================(120 + 0) / 120]                                                                                [Stage 39:===========================>                          (61 + 60) / 121][Stage 39:================================>                     (72 + 49) / 121][Stage 39:========================================>             (91 + 30) / 121][Stage 39:===============================================>     (109 + 12) / 121][Stage 39:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.489564433 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 161 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499264672 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==========================>                           (60 + 61) / 121][Stage 40:=============================>                        (66 + 55) / 121][Stage 40:=================================>                    (75 + 46) / 121][Stage 40:============================================>        (101 + 20) / 121][Stage 40:====================================================> (117 + 4) / 121]                                                                                [Stage 41:===========================>                          (61 + 61) / 122][Stage 41:==============================>                       (69 + 53) / 122][Stage 41:====================================>                 (82 + 40) / 122][Stage 41:================================================>    (111 + 11) / 122]                                                                                Time elapsed: 3.172822123 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484282814 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:============================>                         (59 + 54) / 113][Stage 42:==============================>                       (64 + 49) / 113][Stage 42:===================================>                  (75 + 38) / 113][Stage 42:=============================================>        (95 + 18) / 113][Stage 42:====================================================> (110 + 3) / 113]                                                                                [Stage 43:============================>                         (61 + 53) / 114][Stage 43:==================================>                   (73 + 41) / 114][Stage 43:=========================================>            (87 + 27) / 114][Stage 43:===============================================>     (102 + 12) / 114][Stage 43:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.305583369 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419912219 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:======================================>               (81 + 34) / 115][Stage 44:==========================================>           (91 + 24) / 115][Stage 44:==============================================>      (101 + 14) / 115][Stage 44:===================================================>  (110 + 5) / 115]                                                                                [Stage 45:======================================>               (83 + 33) / 116][Stage 45:=========================================>            (90 + 26) / 116][Stage 45:==============================================>      (102 + 14) / 116][Stage 45:====================================================> (112 + 4) / 116][Stage 45:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.829670846 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 48 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 48 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.541283461 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:================================>                     (70 + 45) / 115][Stage 46:======================================>               (82 + 33) / 115][Stage 46:=============================================>        (97 + 18) / 115][Stage 46:====================================================> (112 + 3) / 115]                                                                                [Stage 47:=================================>                    (73 + 43) / 116][Stage 47:=========================================>            (90 + 26) / 116][Stage 47:===============================================>     (105 + 11) / 116][Stage 47:=====================================================>(114 + 2) / 116][Stage 47:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.099765959 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4247049 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:================================>                     (72 + 46) / 118][Stage 48:==================================>                   (76 + 42) / 118][Stage 48:=============================================>        (99 + 19) / 118][Stage 48:==================================================>   (110 + 8) / 118][Stage 48:=====================================================>(117 + 1) / 118]                                                                                [Stage 49:=================================>                    (73 + 46) / 119][Stage 49:==================================>                   (77 + 42) / 119][Stage 49:=========================================>            (92 + 27) / 119][Stage 49:================================================>    (109 + 10) / 119][Stage 49:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.177423162 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486586595 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:==========================>                           (60 + 61) / 121][Stage 50:=============================>                        (65 + 56) / 121][Stage 50:=================================>                    (74 + 47) / 121][Stage 50:=========================================>            (93 + 28) / 121][Stage 50:==================================================>   (113 + 8) / 121][Stage 50:=====================================================>(120 + 1) / 121]                                                                                [Stage 51:===========================>                          (61 + 61) / 122][Stage 51:=============================>                        (66 + 56) / 122][Stage 51:=====================================>                (85 + 37) / 122][Stage 51:===============================================>     (109 + 13) / 122]                                                                                Time elapsed: 3.129134738 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390812582 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:======================================>               (81 + 34) / 115][Stage 52:=========================================>            (89 + 26) / 115][Stage 52:==============================================>       (98 + 17) / 115][Stage 52:================================================>    (105 + 10) / 115][Stage 52:====================================================> (112 + 3) / 115]                                                                                [Stage 53:=======================================>              (84 + 32) / 116][Stage 53:==========================================>           (91 + 25) / 116][Stage 53:===============================================>     (105 + 11) / 116][Stage 53:====================================================> (112 + 4) / 116][Stage 53:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.083206187 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.563288843 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (58 + 55) / 113][Stage 54:==============================>                       (63 + 50) / 113][Stage 54:====================================>                 (77 + 36) / 113][Stage 54:==============================================>       (98 + 15) / 113][Stage 54:=====================================================>(111 + 2) / 113]                                                                                [Stage 55:===========================>                          (59 + 55) / 114][Stage 55:===============================>                      (66 + 48) / 114][Stage 55:======================================>               (81 + 33) / 114][Stage 55:=================================================>    (105 + 9) / 114][Stage 55:=====================================================>(112 + 2) / 114][Stage 55:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.168577548 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423125043 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==============================>                       (66 + 49) / 115][Stage 56:======================================>               (82 + 33) / 115][Stage 56:==============================================>      (100 + 15) / 115][Stage 56:====================================================> (112 + 3) / 115]                                                                                [Stage 57:==================================>                   (75 + 41) / 116][Stage 57:===========================================>          (93 + 23) / 116][Stage 57:==================================================>   (109 + 7) / 116][Stage 57:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.125553712 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39740573 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:================================>                     (72 + 46) / 118][Stage 58:===================================>                  (77 + 41) / 118][Stage 58:==========================================>           (92 + 26) / 118][Stage 58:==================================================>   (110 + 8) / 118][Stage 58:====================================================> (114 + 4) / 118]                                                                                [Stage 59:=================================>                    (73 + 46) / 119][Stage 59:========================================>             (90 + 29) / 119][Stage 59:===============================================>     (106 + 13) / 119][Stage 59:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.065066328 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420105623 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:================================>                     (70 + 45) / 115][Stage 60:=======================================>              (84 + 31) / 115][Stage 60:=============================================>        (97 + 18) / 115][Stage 60:===================================================>  (109 + 6) / 115]                                                                                [Stage 61:===================================>                  (76 + 40) / 116][Stage 61:=========================================>            (90 + 26) / 116][Stage 61:===============================================>     (104 + 12) / 116][Stage 61:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.047885985 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367013091 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:=====================================>                (80 + 35) / 115][Stage 62:========================================>             (87 + 28) / 115][Stage 62:===========================================>          (93 + 22) / 115][Stage 62:==================================================>   (107 + 8) / 115]                                                                                [Stage 63:========================================>             (86 + 30) / 116][Stage 63:==========================================>           (91 + 25) / 116][Stage 63:===============================================>     (105 + 11) / 116][Stage 63:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.730431474 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.463858543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (60 + 60) / 120][Stage 64:===========================>                          (62 + 58) / 120][Stage 64:==================================>                   (77 + 43) / 120][Stage 64:===========================================>          (97 + 23) / 120][Stage 64:=================================================>    (111 + 9) / 120][Stage 64:=====================================================>(119 + 1) / 120]                                                                                [Stage 65:===========================>                          (61 + 60) / 121][Stage 65:===========================>                          (62 + 59) / 121][Stage 65:=====================================>                (83 + 38) / 121][Stage 65:=============================================>       (105 + 16) / 121][Stage 65:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.213902622 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 144 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461887351 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==========================>                           (60 + 61) / 121][Stage 66:===============================>                      (70 + 51) / 121][Stage 66:==========================================>           (95 + 26) / 121][Stage 66:==================================================>   (113 + 8) / 121][Stage 66:=====================================================>(120 + 1) / 121]                                                                                [Stage 67:===========================>                          (61 + 61) / 122][Stage 67:=============================>                        (67 + 55) / 122][Stage 67:====================================>                 (83 + 39) / 122][Stage 67:==============================================>      (106 + 16) / 122][Stage 67:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.044866166 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441165783 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==========================>                           (60 + 61) / 121][Stage 68:=============================>                        (65 + 56) / 121][Stage 68:=========================================>            (92 + 29) / 121][Stage 68:================================================>    (111 + 10) / 121][Stage 68:=====================================================>(120 + 1) / 121]                                                                                [Stage 69:===========================>                          (61 + 61) / 122][Stage 69:===============================>                      (72 + 50) / 122][Stage 69:=====================================>                (85 + 37) / 122][Stage 69:=============================================>       (105 + 17) / 122]                                                                                Time elapsed: 2.951515397 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.491093514 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:==========================>                           (60 + 61) / 121][Stage 70:===========================>                          (62 + 59) / 121][Stage 70:================================>                     (72 + 49) / 121][Stage 70:============================================>         (99 + 22) / 121][Stage 70:==================================================>   (113 + 8) / 121]                                                                                [Stage 71:===========================>                          (63 + 59) / 122][Stage 71:==================================>                   (77 + 45) / 122][Stage 71:==========================================>           (96 + 26) / 122][Stage 71:================================================>    (111 + 11) / 122][Stage 71:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.306318944 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370079598 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:======================================>               (83 + 32) / 115][Stage 72:=============================================>        (96 + 19) / 115][Stage 72:===================================================>  (109 + 6) / 115][Stage 72:====================================================> (111 + 4) / 115]                                                                                [Stage 73:======================================>               (83 + 33) / 116][Stage 73:============================================>         (96 + 20) / 116][Stage 73:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.699031388 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40042143 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:================================>                     (72 + 46) / 118][Stage 74:===================================>                  (78 + 40) / 118][Stage 74:============================================>         (98 + 20) / 118][Stage 74:==================================================>   (110 + 8) / 118]                                                                                [Stage 75:=================================>                    (74 + 45) / 119][Stage 75:========================================>             (89 + 30) / 119][Stage 75:============================================>        (101 + 18) / 119][Stage 75:==================================================>   (112 + 7) / 119][Stage 75:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.196402075 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361046009 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:======================================>               (81 + 34) / 115][Stage 76:========================================>             (87 + 28) / 115][Stage 76:=============================================>        (96 + 19) / 115][Stage 76:==================================================>   (108 + 7) / 115]                                                                                [Stage 77:=======================================>              (85 + 31) / 116][Stage 77:==============================================>      (102 + 14) / 116][Stage 77:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.651560582 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429828555 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (58 + 55) / 113][Stage 78:==============================>                       (63 + 50) / 113][Stage 78:======================================>               (80 + 33) / 113][Stage 78:==============================================>      (100 + 13) / 113][Stage 78:===================================================>  (108 + 5) / 113]                                                                                [Stage 79:============================>                         (61 + 53) / 114][Stage 79:=================================>                    (71 + 43) / 114][Stage 79:============================================>         (93 + 21) / 114][Stage 79:===============================================>     (103 + 11) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.223934845 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 57 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38778738 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:================================>                     (70 + 45) / 115][Stage 80:=====================================>                (80 + 35) / 115][Stage 80:===========================================>          (93 + 22) / 115][Stage 80:===================================================>  (110 + 5) / 115]                                                                                [Stage 81:==================================>                   (74 + 42) / 116][Stage 81:=========================================>            (89 + 27) / 116][Stage 81:===============================================>     (104 + 12) / 116][Stage 81:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.025736208 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424997366 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==========================>                           (60 + 61) / 121][Stage 82:===============================>                      (70 + 51) / 121][Stage 82:====================================>                 (81 + 40) / 121][Stage 82:================================================>    (111 + 10) / 121]                                                                                [Stage 83:===========================>                          (62 + 60) / 122][Stage 83:=================================>                    (75 + 47) / 122][Stage 83:============================================>        (102 + 20) / 122][Stage 83:==================================================>   (115 + 7) / 122][Stage 83:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.158495723 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 117 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 117 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38652275 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:================================>                     (72 + 46) / 118][Stage 84:==================================>                   (75 + 43) / 118][Stage 84:=====================================>                (83 + 35) / 118][Stage 84:==========================================>           (92 + 26) / 118][Stage 84:================================================>    (107 + 11) / 118][Stage 84:=====================================================>(116 + 2) / 118]                                                                                [Stage 85:=================================>                    (73 + 46) / 119][Stage 85:====================================>                 (81 + 38) / 119][Stage 85:=========================================>            (92 + 27) / 119][Stage 85:===============================================>     (106 + 13) / 119][Stage 85:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.454630001 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367589633 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:=================================>                    (71 + 42) / 113][Stage 86:=========================================>            (87 + 26) / 113][Stage 86:============================================>         (93 + 20) / 113][Stage 86:==================================================>   (105 + 8) / 113][Stage 86:=====================================================>(112 + 1) / 113]                                                                                [Stage 87:===================================>                  (74 + 40) / 114][Stage 87:========================================>             (85 + 29) / 114][Stage 87:==============================================>       (98 + 16) / 114][Stage 87:================================================>    (104 + 10) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.247966863 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358270144 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:=====================================>                (80 + 35) / 115][Stage 88:========================================>             (86 + 29) / 115][Stage 88:============================================>         (95 + 20) / 115][Stage 88:==================================================>   (108 + 7) / 115]                                                                                [Stage 89:========================================>             (86 + 30) / 116][Stage 89:==============================================>       (99 + 17) / 116][Stage 89:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.749941181 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354987665 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:=======================================>              (85 + 30) / 115][Stage 90:=============================================>        (96 + 19) / 115][Stage 90:=================================================>    (106 + 9) / 115][Stage 90:====================================================> (112 + 3) / 115][Stage 90:=====================================================>(114 + 1) / 115]                                                                                [Stage 91:=======================================>              (84 + 32) / 116][Stage 91:==========================================>           (92 + 24) / 116][Stage 91:==============================================>       (99 + 17) / 116][Stage 91:===================================================>  (111 + 5) / 116][Stage 91:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.095364305 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397438197 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:=================================>                    (71 + 44) / 115][Stage 92:======================================>               (83 + 32) / 115][Stage 92:===============================================>     (103 + 12) / 115][Stage 92:==================================================>   (108 + 7) / 115][Stage 92:=====================================================>(113 + 2) / 115]                                                                                [Stage 93:====================================>                 (79 + 37) / 116][Stage 93:========================================>             (88 + 28) / 116][Stage 93:===============================================>     (105 + 11) / 116][Stage 93:====================================================> (112 + 4) / 116][Stage 93:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.251301874 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428834693 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (62 + 58) / 120][Stage 94:==================================>                   (76 + 44) / 120][Stage 94:============================================>         (98 + 22) / 120][Stage 94:==================================================>   (113 + 7) / 120]                                                                                [Stage 95:==============================>                       (68 + 53) / 121][Stage 95:=====================================>                (84 + 37) / 121][Stage 95:============================================>        (102 + 19) / 121][Stage 95:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.973359902 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361948096 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:======================================>               (80 + 33) / 113][Stage 96:===========================================>          (90 + 23) / 113][Stage 96:================================================>    (103 + 10) / 113][Stage 96:====================================================> (110 + 3) / 113][Stage 96:=====================================================>(112 + 1) / 113]                                                                                [Stage 97:======================================>               (81 + 33) / 114][Stage 97:===========================================>          (92 + 22) / 114][Stage 97:==============================================>       (98 + 16) / 114][Stage 97:===================================================>  (108 + 6) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.287152542 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355484901 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:======================================>               (81 + 34) / 115][Stage 98:========================================>             (87 + 28) / 115][Stage 98:================================================>    (105 + 10) / 115]                                                                                [Stage 99:======================================>               (83 + 33) / 116][Stage 99:=========================================>            (90 + 26) / 116][Stage 99:===============================================>     (105 + 11) / 116][Stage 99:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.588244686 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410331795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (60 + 61) / 121][Stage 100:============================>                        (66 + 55) / 121][Stage 100:======================================>              (87 + 34) / 121][Stage 100:===============================================>    (111 + 10) / 121][Stage 100:====================================================>(120 + 1) / 121]                                                                                [Stage 101:============================>                        (65 + 57) / 122][Stage 101:==================================>                  (79 + 43) / 122][Stage 101:===========================================>        (103 + 19) / 122][Stage 101:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.185552605 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4078895 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 60) / 120][Stage 102:================================>                    (73 + 47) / 120][Stage 102:=======================================>             (90 + 30) / 120][Stage 102:==================================================>  (115 + 5) / 120]                                                                                [Stage 103:============================>                        (64 + 57) / 121][Stage 103:=================================>                   (77 + 44) / 121][Stage 103:==========================================>          (98 + 23) / 121][Stage 103:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.073992771 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363793258 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:=====================================>               (81 + 32) / 113][Stage 104:===========================================>         (92 + 21) / 113][Stage 104:==============================================>      (99 + 14) / 113][Stage 104:===================================================> (109 + 4) / 113]                                                                                [Stage 105:======================================>              (83 + 31) / 114][Stage 105:============================================>        (96 + 18) / 114][Stage 105:==============================================>     (102 + 12) / 114][Stage 105:===================================================> (110 + 4) / 114][Stage 105:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.364066666 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417262983 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===================================>                 (76 + 39) / 115][Stage 106:============================================>        (96 + 19) / 115][Stage 106:================================================>    (106 + 9) / 115][Stage 106:====================================================>(114 + 1) / 115]                                                                                [Stage 107:==================================>                  (75 + 41) / 116][Stage 107:======================================>              (85 + 31) / 116][Stage 107:===============================================>    (105 + 11) / 116][Stage 107:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.82102676 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 55 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389065581 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:================================>                    (73 + 45) / 118][Stage 108:===================================>                 (78 + 40) / 118][Stage 108:======================================>              (85 + 33) / 118][Stage 108:============================================>        (99 + 19) / 118][Stage 108:=================================================>   (110 + 8) / 118][Stage 108:====================================================>(117 + 1) / 118]                                                                                [Stage 109:=================================>                   (75 + 44) / 119][Stage 109:===================================>                 (79 + 40) / 119][Stage 109:======================================>              (86 + 33) / 119][Stage 109:===========================================>        (100 + 19) / 119][Stage 109:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.403094707 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393869503 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (58 + 55) / 113][Stage 110:==================================>                  (73 + 40) / 113][Stage 110:=========================================>           (89 + 24) / 113][Stage 110:=================================================>   (106 + 7) / 113]                                                                                [Stage 111:============================>                        (61 + 53) / 114][Stage 111:=================================>                   (72 + 42) / 114][Stage 111:=========================================>           (89 + 25) / 114][Stage 111:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.016720227 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 136 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422442043 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (59 + 54) / 113][Stage 112:==============================>                      (64 + 49) / 113][Stage 112:======================================>              (83 + 30) / 113][Stage 112:==================================================>  (107 + 6) / 113]                                                                                [Stage 113:===========================>                         (60 + 54) / 114][Stage 113:==================================>                  (75 + 39) / 114][Stage 113:===========================================>         (93 + 21) / 114][Stage 113:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.920242452 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38196336 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (58 + 55) / 113][Stage 114:==============================>                      (65 + 48) / 113][Stage 114:======================================>              (82 + 31) / 113][Stage 114:=================================================>   (105 + 8) / 113][Stage 114:===================================================> (110 + 3) / 113]                                                                                [Stage 115:============================>                        (62 + 52) / 114][Stage 115:==================================>                  (75 + 39) / 114][Stage 115:=============================================>       (98 + 16) / 114][Stage 115:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.963425074 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391900548 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:=============================>                       (65 + 50) / 115][Stage 116:===================================>                 (76 + 39) / 115][Stage 116:==========================================>          (93 + 22) / 115][Stage 116:=================================================>   (107 + 8) / 115]                                                                                [Stage 117:===================================>                 (78 + 38) / 116][Stage 117:========================================>            (89 + 27) / 116][Stage 117:==============================================>     (104 + 12) / 116][Stage 117:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.656660917 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385028612 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (58 + 55) / 113][Stage 118:=============================>                       (63 + 50) / 113][Stage 118:======================================>              (83 + 30) / 113][Stage 118:==============================================>     (100 + 13) / 113]                                                                                [Stage 119:============================>                        (61 + 53) / 114][Stage 119:===============================>                     (68 + 46) / 114][Stage 119:=========================================>           (89 + 25) / 114][Stage 119:================================================>    (105 + 9) / 114][Stage 119:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.021104414 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36288464 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:======================================>              (82 + 31) / 113][Stage 120:============================================>        (94 + 19) / 113][Stage 120:==============================================>     (102 + 11) / 113][Stage 120:====================================================>(111 + 2) / 113]                                                                                [Stage 121:==================================>                  (74 + 40) / 114][Stage 121:=======================================>             (86 + 28) / 114][Stage 121:============================================>        (95 + 19) / 114][Stage 121:=================================================>   (106 + 8) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.052056053 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369832533 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=================================>                   (72 + 43) / 115][Stage 122:==========================================>          (92 + 23) / 115][Stage 122:==================================================>  (109 + 6) / 115][Stage 122:===================================================> (112 + 3) / 115]                                                                                [Stage 123:==============================>                      (67 + 49) / 116][Stage 123:====================================>                (79 + 37) / 116][Stage 123:===========================================>         (96 + 20) / 116][Stage 123:==================================================>  (110 + 6) / 116][Stage 123:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.794259383 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333929474 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:======================================>              (83 + 32) / 115][Stage 124:===========================================>         (95 + 20) / 115][Stage 124:===============================================>    (105 + 10) / 115][Stage 124:===================================================> (112 + 3) / 115]                                                                                [Stage 125:=====================================>               (83 + 33) / 116][Stage 125:=========================================>           (90 + 26) / 116][Stage 125:===============================================>    (105 + 11) / 116][Stage 125:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.858345827 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342684395 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=====================================>               (81 + 34) / 115][Stage 126:======================================>              (84 + 31) / 115][Stage 126:============================================>        (97 + 18) / 115][Stage 126:===================================================> (112 + 3) / 115]                                                                                [Stage 127:======================================>              (85 + 31) / 116][Stage 127:=============================================>       (99 + 17) / 116][Stage 127:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.603312354 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361199146 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:================================>                    (73 + 45) / 118][Stage 128:===================================>                 (78 + 40) / 118][Stage 128:==========================================>          (94 + 24) / 118][Stage 128:==============================================>     (106 + 12) / 118][Stage 128:===================================================> (114 + 4) / 118]                                                                                [Stage 129:================================>                    (73 + 46) / 119][Stage 129:=================================>                   (75 + 44) / 119][Stage 129:=========================================>           (94 + 25) / 119][Stage 129:================================================>    (110 + 9) / 119][Stage 129:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.102262328 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 27 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391036511 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:============================>                        (60 + 53) / 113][Stage 130:===============================>                     (67 + 46) / 113][Stage 130:========================================>            (86 + 27) / 113][Stage 130:=================================================>   (106 + 7) / 113][Stage 130:====================================================>(112 + 1) / 113]                                                                                [Stage 131:===========================>                         (60 + 54) / 114][Stage 131:================================>                    (69 + 45) / 114][Stage 131:===========================================>         (93 + 21) / 114][Stage 131:==============================================>     (103 + 11) / 114]                                                                                Time elapsed: 3.10742456 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364361737 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:================================>                    (73 + 45) / 118][Stage 132:=================================>                   (75 + 43) / 118][Stage 132:=====================================>               (83 + 35) / 118][Stage 132:============================================>        (98 + 20) / 118][Stage 132:=================================================>   (111 + 7) / 118][Stage 132:====================================================>(117 + 1) / 118]                                                                                [Stage 133:=================================>                   (75 + 44) / 119][Stage 133:====================================>                (82 + 37) / 119][Stage 133:========================================>            (91 + 28) / 119][Stage 133:==============================================>     (106 + 13) / 119][Stage 133:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.642986246 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390769626 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===============================>                     (69 + 46) / 115][Stage 134:=====================================>               (81 + 34) / 115][Stage 134:========================================>            (87 + 28) / 115][Stage 134:================================================>    (106 + 9) / 115][Stage 134:====================================================>(113 + 2) / 115]                                                                                [Stage 135:=================================>                   (74 + 42) / 116][Stage 135:==========================================>          (94 + 22) / 116][Stage 135:================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.840069153 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338274365 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:====================================>                (79 + 36) / 115][Stage 136:======================================>              (84 + 31) / 115][Stage 136:============================================>        (97 + 18) / 115][Stage 136:==================================================>  (110 + 5) / 115]                                                                                [Stage 137:=====================================>               (83 + 33) / 116][Stage 137:==========================================>          (94 + 22) / 116][Stage 137:==================================================>  (111 + 5) / 116][Stage 137:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.702550024 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339865292 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:====================================>                (80 + 35) / 115][Stage 138:=======================================>             (86 + 29) / 115][Stage 138:=============================================>       (99 + 16) / 115][Stage 138:=================================================>   (107 + 8) / 115]                                                                                [Stage 139:======================================>              (85 + 31) / 116][Stage 139:==========================================>          (94 + 22) / 116][Stage 139:===============================================>    (106 + 10) / 116][Stage 139:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.878565978 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400554129 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 61) / 121][Stage 140:===========================>                         (63 + 58) / 121][Stage 140:=====================================>               (86 + 35) / 121][Stage 140:=============================================>      (106 + 15) / 121][Stage 140:====================================================>(119 + 2) / 121][Stage 140:====================================================>(120 + 1) / 121]                                                                                [Stage 141:==========================>                          (61 + 61) / 122][Stage 141:============================>                        (65 + 57) / 122][Stage 141:=======================================>             (91 + 31) / 122][Stage 141:=================================================>   (114 + 8) / 122][Stage 141:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.152634972 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336808634 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:====================================>                (80 + 35) / 115][Stage 142:========================================>            (87 + 28) / 115][Stage 142:=============================================>       (99 + 16) / 115][Stage 142:=================================================>   (107 + 8) / 115][Stage 142:====================================================>(114 + 1) / 115]                                                                                [Stage 143:=====================================>               (82 + 34) / 116][Stage 143:==========================================>          (93 + 23) / 116][Stage 143:================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.652171861 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372289787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==============================>                      (67 + 48) / 115][Stage 144:===================================>                 (77 + 38) / 115][Stage 144:==========================================>          (93 + 22) / 115][Stage 144:==================================================>  (110 + 5) / 115][Stage 144:====================================================>(114 + 1) / 115]                                                                                [Stage 145:=====================================>               (82 + 34) / 116][Stage 145:=============================================>       (99 + 17) / 116][Stage 145:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.661037513 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361658394 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:================================>                    (72 + 46) / 118][Stage 146:==================================>                  (77 + 41) / 118][Stage 146:======================================>              (85 + 33) / 118][Stage 146:==========================================>          (94 + 24) / 118][Stage 146:================================================>    (109 + 9) / 118][Stage 146:====================================================>(117 + 1) / 118]                                                                                [Stage 147:================================>                    (73 + 46) / 119][Stage 147:==================================>                  (77 + 42) / 119][Stage 147:====================================>                (83 + 36) / 119][Stage 147:==========================================>          (95 + 24) / 119][Stage 147:=============================================>      (104 + 15) / 119]                                                                                Time elapsed: 3.414222073 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379200377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (58 + 55) / 113][Stage 148:============================>                        (60 + 53) / 113][Stage 148:===================================>                 (76 + 37) / 113][Stage 148:==============================================>     (100 + 13) / 113][Stage 148:===================================================> (109 + 4) / 113]                                                                                [Stage 149:===========================>                         (59 + 55) / 114][Stage 149:==============================>                      (65 + 49) / 114][Stage 149:====================================>                (78 + 36) / 114][Stage 149:============================================>        (96 + 18) / 114][Stage 149:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.030123096 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 231 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 231 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334407936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:======================================>              (84 + 31) / 115][Stage 150:=========================================>           (89 + 26) / 115][Stage 150:=============================================>      (100 + 15) / 115][Stage 150:=================================================>   (108 + 7) / 115][Stage 150:====================================================>(114 + 1) / 115]                                                                                [Stage 151:========================================>            (89 + 27) / 116][Stage 151:===========================================>         (95 + 21) / 116][Stage 151:===============================================>    (106 + 10) / 116][Stage 151:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.092682548 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36004188 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===================================>                 (75 + 38) / 113][Stage 152:=====================================>               (80 + 33) / 113][Stage 152:============================================>        (95 + 18) / 113][Stage 152:=================================================>   (105 + 8) / 113][Stage 152:====================================================>(112 + 1) / 113]                                                                                [Stage 153:==================================>                  (75 + 39) / 114][Stage 153:========================================>            (88 + 26) / 114][Stage 153:=============================================>       (98 + 16) / 114][Stage 153:=================================================>   (107 + 7) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.087223247 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398415566 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (61 + 60) / 121][Stage 154:================================>                    (75 + 46) / 121][Stage 154:==========================================>          (97 + 24) / 121][Stage 154:====================================================>(119 + 2) / 121]                                                                                [Stage 155:==========================>                          (61 + 61) / 122][Stage 155:============================>                        (66 + 56) / 122][Stage 155:=======================================>             (90 + 32) / 122][Stage 155:==============================================>     (110 + 12) / 122][Stage 155:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.093961366 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393835382 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (71 + 44) / 115][Stage 156:========================================>            (87 + 28) / 115][Stage 156:=============================================>       (98 + 17) / 115][Stage 156:=================================================>   (108 + 7) / 115][Stage 156:====================================================>(113 + 2) / 115]                                                                                [Stage 157:================================>                    (71 + 45) / 116][Stage 157:========================================>            (89 + 27) / 116][Stage 157:============================================>       (100 + 16) / 116][Stage 157:====================================================>(114 + 2) / 116][Stage 157:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.25355059 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34890952 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==================================>                  (73 + 40) / 113][Stage 158:=======================================>             (85 + 28) / 113][Stage 158:===========================================>         (93 + 20) / 113][Stage 158:===============================================>    (103 + 10) / 113][Stage 158:====================================================>(111 + 2) / 113]                                                                                [Stage 159:======================================>              (82 + 32) / 114][Stage 159:==========================================>          (92 + 22) / 114][Stage 159:=============================================>      (100 + 14) / 114][Stage 159:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.039199591 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 41 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349239601 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:======================================>              (82 + 31) / 113][Stage 160:==========================================>          (91 + 22) / 113][Stage 160:==============================================>     (102 + 11) / 113][Stage 160:==================================================>  (108 + 5) / 113][Stage 160:====================================================>(111 + 2) / 113]                                                                                [Stage 161:====================================>                (79 + 35) / 114][Stage 161:=======================================>             (86 + 28) / 114][Stage 161:============================================>        (96 + 18) / 114][Stage 161:==================================================>  (109 + 5) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.117203837 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344638197 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:=====================================>               (82 + 33) / 115][Stage 162:============================================>        (96 + 19) / 115][Stage 162:=================================================>   (107 + 8) / 115][Stage 162:====================================================>(113 + 2) / 115]                                                                                [Stage 163:=====================================>               (83 + 33) / 116][Stage 163:==========================================>          (92 + 24) / 116][Stage 163:================================================>    (107 + 9) / 116][Stage 163:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.685664244 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 93 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 93 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333485741 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:=====================================>               (82 + 33) / 115][Stage 164:=========================================>           (90 + 25) / 115][Stage 164:==============================================>     (103 + 12) / 115][Stage 164:===================================================> (112 + 3) / 115][Stage 164:====================================================>(114 + 1) / 115]                                                                                [Stage 165:======================================>              (84 + 32) / 116][Stage 165:========================================>            (89 + 27) / 116][Stage 165:=============================================>       (99 + 17) / 116][Stage 165:================================================>    (107 + 9) / 116][Stage 165:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.987806881 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345387558 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:=====================================>               (82 + 33) / 115][Stage 166:=========================================>           (89 + 26) / 115][Stage 166:===============================================>    (104 + 11) / 115][Stage 166:==================================================>  (110 + 5) / 115]                                                                                [Stage 167:======================================>              (85 + 31) / 116][Stage 167:==========================================>          (93 + 23) / 116][Stage 167:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.626516854 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395023838 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 61) / 121][Stage 168:===============================>                     (71 + 50) / 121][Stage 168:======================================>              (87 + 34) / 121][Stage 168:============================================>       (103 + 18) / 121]                                                                                [Stage 169:==========================>                          (61 + 61) / 122][Stage 169:=============================>                       (68 + 54) / 122][Stage 169:=======================================>             (91 + 31) / 122][Stage 169:=================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.036576572 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346144499 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:=====================================>               (81 + 34) / 115][Stage 170:=======================================>             (85 + 30) / 115][Stage 170:=============================================>       (98 + 17) / 115][Stage 170:==================================================>  (109 + 6) / 115][Stage 170:===================================================> (112 + 3) / 115]                                                                                [Stage 171:=====================================>               (83 + 33) / 116][Stage 171:==========================================>          (92 + 24) / 116][Stage 171:==============================================>     (103 + 13) / 116][Stage 171:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 3.075697568 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349189092 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=====================================>               (80 + 33) / 113][Stage 172:=========================================>           (89 + 24) / 113][Stage 172:=============================================>       (98 + 15) / 113][Stage 172:=================================================>   (106 + 7) / 113][Stage 172:====================================================>(111 + 2) / 113]                                                                                [Stage 173:======================================>              (82 + 32) / 114][Stage 173:===========================================>         (93 + 21) / 114][Stage 173:==============================================>     (103 + 11) / 114][Stage 173:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.076510739 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39464907 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (60 + 61) / 121][Stage 174:============================>                        (66 + 55) / 121][Stage 174:======================================>              (87 + 34) / 121][Stage 174:=================================================>   (112 + 9) / 121][Stage 174:====================================================>(120 + 1) / 121]                                                                                [Stage 175:==========================>                          (61 + 61) / 122][Stage 175:=============================>                       (68 + 54) / 122][Stage 175:==================================>                  (80 + 42) / 122][Stage 175:===============================================>    (111 + 11) / 122]                                                                                Time elapsed: 2.946041593 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 200 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361887691 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (72 + 46) / 118][Stage 176:================================>                    (73 + 45) / 118][Stage 176:====================================>                (81 + 37) / 118][Stage 176:=========================================>           (93 + 25) / 118][Stage 176:==============================================>     (106 + 12) / 118][Stage 176:===================================================> (115 + 3) / 118]                                                                                [Stage 177:================================>                    (73 + 46) / 119][Stage 177:==================================>                  (78 + 41) / 119][Stage 177:========================================>            (90 + 29) / 119][Stage 177:===========================================>        (100 + 19) / 119][Stage 177:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.618163289 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398978827 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (60 + 61) / 121][Stage 178:============================>                        (65 + 56) / 121][Stage 178:==================================>                  (79 + 42) / 121][Stage 178:============================================>       (103 + 18) / 121][Stage 178:=================================================>   (113 + 8) / 121]                                                                                [Stage 179:===========================>                         (63 + 59) / 122][Stage 179:===============================>                     (73 + 49) / 122][Stage 179:========================================>            (93 + 29) / 122][Stage 179:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.052072478 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 110 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358982032 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=====================================>               (79 + 34) / 113][Stage 180:========================================>            (87 + 26) / 113][Stage 180:===========================================>         (93 + 20) / 113][Stage 180:==================================================>  (107 + 6) / 113][Stage 180:===================================================> (110 + 3) / 113]                                                                                [Stage 181:=======================================>             (85 + 29) / 114][Stage 181:============================================>        (95 + 19) / 114][Stage 181:==============================================>     (103 + 11) / 114][Stage 181:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.116700997 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435896262 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (60 + 60) / 120][Stage 182:============================>                        (64 + 56) / 120][Stage 182:=================================>                   (75 + 45) / 120][Stage 182:========================================>            (92 + 28) / 120][Stage 182:===============================================>    (109 + 11) / 120]                                                                                [Stage 183:============================>                        (66 + 55) / 121][Stage 183:=================================>                   (77 + 44) / 121][Stage 183:==========================================>          (96 + 25) / 121][Stage 183:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.981707332 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356486837 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:================================>                    (72 + 46) / 118][Stage 184:===================================>                 (78 + 40) / 118][Stage 184:=========================================>           (92 + 26) / 118][Stage 184:=============================================>      (103 + 15) / 118][Stage 184:===================================================> (114 + 4) / 118]                                                                                [Stage 185:================================>                    (73 + 46) / 119][Stage 185:================================>                    (74 + 45) / 119][Stage 185:=========================================>           (93 + 26) / 119][Stage 185:=============================================>      (104 + 15) / 119][Stage 185:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.045580986 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369102296 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:====================================>                (79 + 36) / 115][Stage 186:============================================>        (96 + 19) / 115][Stage 186:=================================================>   (108 + 7) / 115][Stage 186:==================================================>  (110 + 5) / 115]                                                                                [Stage 187:================================>                    (72 + 44) / 116][Stage 187:=======================================>             (86 + 30) / 116][Stage 187:===============================================>    (105 + 11) / 116][Stage 187:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.000613477 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404333964 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 61) / 121][Stage 188:============================>                        (65 + 56) / 121][Stage 188:================================>                    (75 + 46) / 121][Stage 188:=============================================>      (107 + 14) / 121][Stage 188:===================================================> (117 + 4) / 121]                                                                                [Stage 189:============================>                        (65 + 57) / 122][Stage 189:===================================>                 (82 + 40) / 122][Stage 189:=============================================>      (107 + 15) / 122][Stage 189:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 2.995377978 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369387215 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==============================>                      (66 + 49) / 115][Stage 190:====================================>                (79 + 36) / 115][Stage 190:=========================================>           (89 + 26) / 115][Stage 190:===============================================>    (105 + 10) / 115][Stage 190:===================================================> (111 + 4) / 115]                                                                                [Stage 191:=================================>                   (73 + 43) / 116][Stage 191:=========================================>           (91 + 25) / 116][Stage 191:=============================================>      (102 + 14) / 116][Stage 191:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.058963431 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351991769 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:====================================>                (78 + 35) / 113][Stage 192:=========================================>           (89 + 24) / 113][Stage 192:=============================================>       (98 + 15) / 113][Stage 192:=================================================>   (106 + 7) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:==================================>                  (74 + 40) / 114][Stage 193:==========================================>          (91 + 23) / 114][Stage 193:=============================================>       (98 + 16) / 114][Stage 193:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.942342579 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403280114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 61) / 121][Stage 194:==============================>                      (69 + 52) / 121][Stage 194:=====================================>               (85 + 36) / 121][Stage 194:=================================================>   (114 + 7) / 121]                                                                                [Stage 195:==========================>                          (61 + 61) / 122][Stage 195:================================>                    (74 + 48) / 122][Stage 195:=========================================>           (95 + 27) / 122][Stage 195:=================================================>   (114 + 8) / 122][Stage 195:====================================================>(120 + 2) / 122][Stage 195:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.274278297 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369536931 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:================================>                    (72 + 46) / 118][Stage 196:==================================>                  (77 + 41) / 118][Stage 196:=====================================>               (83 + 35) / 118][Stage 196:============================================>       (100 + 18) / 118][Stage 196:==================================================>  (113 + 5) / 118]                                                                                [Stage 197:================================>                    (74 + 45) / 119][Stage 197:======================================>              (86 + 33) / 119][Stage 197:=============================================>      (103 + 16) / 119][Stage 197:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.119980283 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406911908 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==============================>                      (67 + 48) / 115][Stage 198:=====================================>               (81 + 34) / 115][Stage 198:===========================================>         (95 + 20) / 115][Stage 198:==================================================>  (110 + 5) / 115]                                                                                [Stage 199:==================================>                  (75 + 41) / 116][Stage 199:=========================================>           (91 + 25) / 116][Stage 199:===============================================>    (105 + 11) / 116][Stage 199:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.729502561 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360319004 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:================================>                    (72 + 46) / 118][Stage 200:=================================>                   (74 + 44) / 118][Stage 200:=====================================>               (83 + 35) / 118][Stage 200:========================================>            (91 + 27) / 118][Stage 200:===============================================>    (107 + 11) / 118][Stage 200:====================================================>(116 + 2) / 118]                                                                                [Stage 201:================================>                    (73 + 46) / 119][Stage 201:=================================>                   (75 + 44) / 119][Stage 201:=====================================>               (84 + 35) / 119][Stage 201:==========================================>          (95 + 24) / 119][Stage 201:=================================================>   (112 + 7) / 119][Stage 201:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.47425957 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m49.936s
user	11m33.244s
sys	0m29.440s
