Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 22:28:35 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 22:28:49 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 22:28:49 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 22:28:49 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 22:28:52 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 22:29:02 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524222851-0602).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 4.429500974 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:==========>                                            (21 + 94) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:=====================================>                 (79 + 36) / 115][Stage 0:==========================================>            (88 + 27) / 115][Stage 0:==============================================>        (98 + 17) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:====================================================>  (109 + 6) / 115][Stage 0:=====================================================> (112 + 3) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:=============================>                         (62 + 54) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:=======================================>               (84 + 32) / 116][Stage 1:============================================>          (94 + 22) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.822988177 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 09 AND partitionZIndex<=209", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=209,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.77146281 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==================>                                    (41 + 80) / 121][Stage 2:====================>                                  (45 + 76) / 121][Stage 2:=========================>                             (57 + 64) / 121][Stage 2:============================>                          (63 + 58) / 121][Stage 2:=============================>                         (64 + 57) / 121][Stage 2:==================================>                    (76 + 45) / 121][Stage 2:=========================================>             (91 + 30) / 121][Stage 2:=============================================>        (101 + 20) / 121][Stage 2:====================================================>  (116 + 5) / 121]                                                                                [Stage 3:===========================>                           (61 + 61) / 122][Stage 3:============================>                          (64 + 58) / 122][Stage 3:================================>                      (72 + 50) / 122][Stage 3:======================================>                (86 + 36) / 122][Stage 3:============================================>          (98 + 24) / 122][Stage 3:=====================================================> (118 + 4) / 122]                                                                                Time elapsed: 4.567193893 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 49 AND partitionZIndex<=149", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=149,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.770557415 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==========================>                            (57 + 63) / 120][Stage 4:==========================>                            (58 + 62) / 120][Stage 4:===========================>                           (60 + 60) / 120][Stage 4:=============================>                         (65 + 55) / 120][Stage 4:=================================>                     (73 + 47) / 120][Stage 4:==========================================>            (92 + 28) / 120][Stage 4:================================================>     (108 + 12) / 120]                                                                                [Stage 5:===========================>                           (61 + 60) / 121][Stage 5:==============================>                        (67 + 54) / 121][Stage 5:==================================>                    (75 + 46) / 121][Stage 5:===========================================>           (95 + 26) / 121][Stage 5:=============================================>        (102 + 19) / 121][Stage 5:===================================================>   (113 + 8) / 121]                                                                                Time elapsed: 4.140123795 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 5 AND partitionZIndex<=85", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=85,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.641510622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 6:================================>                      (70 + 48) / 118][Stage 6:==================================>                    (73 + 45) / 118][Stage 6:====================================>                  (78 + 40) / 118][Stage 6:===========================================>           (94 + 24) / 118][Stage 6:==============================================>       (102 + 16) / 118][Stage 6:===================================================>   (111 + 7) / 118][Stage 6:======================================================>(116 + 2) / 118]                                                                                [Stage 7:=================================>                     (73 + 46) / 119][Stage 7:==================================>                    (74 + 45) / 119][Stage 7:======================================>                (83 + 36) / 119][Stage 7:=========================================>             (89 + 30) / 119][Stage 7:=============================================>         (98 + 21) / 119][Stage 7:================================================>     (107 + 12) / 119]                                                                                Time elapsed: 4.070663958 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 47 AND partitionZIndex<=247", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=247 AND partitionZIndex<=247,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.491398682 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 8:====================================>                  (77 + 38) / 115][Stage 8:========================================>              (84 + 31) / 115][Stage 8:============================================>          (92 + 23) / 115][Stage 8:==============================================>        (98 + 17) / 115][Stage 8:====================================================>  (109 + 6) / 115][Stage 8:=====================================================> (112 + 3) / 115]                                                                                [Stage 9:======================================>                (82 + 34) / 116][Stage 9:===========================================>           (91 + 25) / 116][Stage 9:=============================================>         (97 + 19) / 116][Stage 9:================================================>     (105 + 11) / 116][Stage 9:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.388915775 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 5 AND partitionZIndex<=35", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=35,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.536538055 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==============================>                       (64 + 51) / 115][Stage 10:===================================>                  (75 + 40) / 115][Stage 10:=======================================>              (84 + 31) / 115][Stage 10:==============================================>       (98 + 17) / 115][Stage 10:===============================================>     (104 + 11) / 115][Stage 10:===================================================>  (109 + 6) / 115][Stage 10:====================================================> (111 + 4) / 115]                                                                                [Stage 11:==================================>                   (74 + 42) / 116][Stage 11:=====================================>                (81 + 35) / 116][Stage 11:==========================================>           (92 + 24) / 116][Stage 11:=============================================>        (98 + 18) / 116][Stage 11:===================================================>  (111 + 5) / 116][Stage 11:=====================================================>(114 + 2) / 116][Stage 11:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.570340232 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 27 AND partitionZIndex<=227", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=227,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.563080481 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===============================>                      (68 + 47) / 115][Stage 12:======================================>               (82 + 33) / 115][Stage 12:============================================>         (95 + 20) / 115][Stage 12:==============================================>       (98 + 17) / 115][Stage 12:=================================================>    (106 + 9) / 115][Stage 12:=====================================================>(113 + 2) / 115]                                                                                [Stage 13:==============================>                       (66 + 50) / 116][Stage 13:===================================>                  (76 + 40) / 116][Stage 13:=========================================>            (89 + 27) / 116][Stage 13:=============================================>        (97 + 19) / 116][Stage 13:===============================================>     (103 + 13) / 116][Stage 13:==================================================>   (108 + 8) / 116][Stage 13:=====================================================>(114 + 2) / 116][Stage 13:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.878211932 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 00 AND partitionZIndex<=200", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=200,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.64639683 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (59 + 62) / 121][Stage 14:===========================>                          (61 + 60) / 121][Stage 14:===============================>                      (70 + 51) / 121][Stage 14:====================================>                 (82 + 39) / 121][Stage 14:=============================================>       (105 + 16) / 121][Stage 14:==================================================>   (114 + 7) / 121][Stage 14:====================================================> (117 + 4) / 121][Stage 14:=====================================================>(120 + 1) / 121]                                                                                [Stage 15:=========================>                            (58 + 64) / 122][Stage 15:============================>                         (64 + 58) / 122][Stage 15:================================>                     (74 + 48) / 122][Stage 15:=======================================>              (89 + 33) / 122][Stage 15:===============================================>     (109 + 13) / 122][Stage 15:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 4.162881607 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 02 AND partitionZIndex<=102", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=102,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.516643774 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 16:================================>                     (72 + 46) / 118][Stage 16:=================================>                    (74 + 44) / 118][Stage 16:========================================>             (89 + 29) / 118][Stage 16:==============================================>      (103 + 15) / 118][Stage 16:===================================================>  (113 + 5) / 118][Stage 16:=====================================================>(117 + 1) / 118]                                                                                [Stage 17:=================================>                    (73 + 46) / 119][Stage 17:=====================================>                (82 + 37) / 119][Stage 17:=============================================>       (102 + 17) / 119][Stage 17:==================================================>   (111 + 8) / 119][Stage 17:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.49972218 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 8 AND partitionZIndex<=28", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.465754049 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 18:======================================>               (80 + 33) / 113][Stage 18:===========================================>          (90 + 23) / 113][Stage 18:===============================================>     (101 + 12) / 113][Stage 18:===================================================>  (107 + 6) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:=======================================>              (83 + 31) / 114][Stage 19:============================================>         (94 + 20) / 114][Stage 19:================================================>    (104 + 10) / 114][Stage 19:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.417788684 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 6 AND partitionZIndex<=76", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=76,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.548774718 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 20:============================>                         (59 + 54) / 113][Stage 20:==============================>                       (64 + 49) / 113][Stage 20:======================================>               (80 + 33) / 113][Stage 20:==============================================>       (97 + 16) / 113][Stage 20:====================================================> (110 + 3) / 113]                                                                                [Stage 21:============================>                         (60 + 54) / 114][Stage 21:=====================================>                (80 + 34) / 114][Stage 21:=============================================>        (97 + 17) / 114][Stage 21:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.305781365 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 44 AND partitionZIndex<=244", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=244,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.483278141 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 22:================================>                     (72 + 46) / 118][Stage 22:====================================>                 (79 + 39) / 118][Stage 22:========================================>             (89 + 29) / 118][Stage 22:==========================================>           (93 + 25) / 118][Stage 22:=====================================================>(116 + 2) / 118]                                                                                [Stage 23:=================================>                    (73 + 46) / 119][Stage 23:=================================>                    (74 + 45) / 119][Stage 23:===================================>                  (79 + 40) / 119][Stage 23:======================================>               (84 + 35) / 119][Stage 23:===========================================>          (96 + 23) / 119][Stage 23:=============================================>       (103 + 16) / 119][Stage 23:=================================================>    (110 + 9) / 119][Stage 23:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.790739377 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 58 AND partitionZIndex<=158", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.505707968 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==============================>                       (65 + 50) / 115][Stage 24:=================================>                    (72 + 43) / 115][Stage 24:===========================================>          (92 + 23) / 115][Stage 24:===============================================>     (104 + 11) / 115][Stage 24:====================================================> (111 + 4) / 115][Stage 24:====================================================> (112 + 3) / 115]                                                                                [Stage 25:===============================>                      (68 + 48) / 116][Stage 25:==================================>                   (75 + 41) / 116][Stage 25:===========================================>          (94 + 22) / 116][Stage 25:==============================================>      (101 + 15) / 116][Stage 25:==================================================>   (109 + 7) / 116][Stage 25:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.425711455 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 16 AND partitionZIndex<=116", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.412196468 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 26:======================================>               (83 + 32) / 115][Stage 26:==========================================>           (90 + 25) / 115][Stage 26:=================================================>    (106 + 9) / 115][Stage 26:=====================================================>(114 + 1) / 115]                                                                                [Stage 27:======================================>               (83 + 33) / 116][Stage 27:==========================================>           (91 + 25) / 116][Stage 27:===============================================>     (105 + 11) / 116][Stage 27:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.741527424 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 26 AND partitionZIndex<=126", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=126,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.41014779 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 28:======================================>               (81 + 34) / 115][Stage 28:======================================>               (83 + 32) / 115][Stage 28:============================================>         (95 + 20) / 115][Stage 28:=============================================>        (97 + 18) / 115][Stage 28:===============================================>     (102 + 13) / 115][Stage 28:==================================================>   (107 + 8) / 115][Stage 28:=====================================================>(113 + 2) / 115]                                                                                [Stage 29:=====================================>                (81 + 35) / 116][Stage 29:========================================>             (87 + 29) / 116][Stage 29:=============================================>        (98 + 18) / 116][Stage 29:===============================================>     (105 + 11) / 116][Stage 29:===================================================>  (110 + 6) / 116][Stage 29:===================================================>  (111 + 5) / 116][Stage 29:====================================================> (112 + 4) / 116][Stage 29:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.991414833 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 90 AND partitionZIndex<=190", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=190,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.530694978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 30:=================================>                    (72 + 43) / 115][Stage 30:======================================>               (81 + 34) / 115][Stage 30:=============================================>        (96 + 19) / 115][Stage 30:===============================================>     (104 + 11) / 115][Stage 30:=====================================================>(114 + 1) / 115]                                                                                [Stage 31:=====================================>                (81 + 35) / 116][Stage 31:========================================>             (87 + 29) / 116][Stage 31:==============================================>      (101 + 15) / 116][Stage 31:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.900835186 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 01 AND partitionZIndex<=101", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=101,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.512663511 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (60 + 60) / 120][Stage 32:============================>                         (63 + 57) / 120][Stage 32:===================================>                  (79 + 41) / 120][Stage 32:============================================>        (101 + 19) / 120][Stage 32:=====================================================>(118 + 2) / 120]                                                                                [Stage 33:===========================>                          (61 + 60) / 121][Stage 33:==============================>                       (69 + 52) / 121][Stage 33:=====================================>                (85 + 36) / 121][Stage 33:==============================================>      (107 + 14) / 121][Stage 33:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.09281748 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 2 AND partitionZIndex<=12", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=12,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.445165753 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 34:======================================>               (83 + 32) / 115][Stage 34:=============================================>        (97 + 18) / 115][Stage 34:===================================================>  (109 + 6) / 115]                                                                                [Stage 35:======================================>               (83 + 33) / 116][Stage 35:==============================================>       (99 + 17) / 116][Stage 35:===================================================>  (110 + 6) / 116][Stage 35:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.818049894 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 6 AND partitionZIndex<=46", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=46,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.487926449 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (58 + 55) / 113][Stage 36:=============================>                        (62 + 51) / 113][Stage 36:==================================>                   (72 + 41) / 113][Stage 36:===========================================>          (91 + 22) / 113][Stage 36:====================================================> (109 + 4) / 113]                                                                                [Stage 37:=============================>                        (63 + 51) / 114][Stage 37:======================================>               (81 + 33) / 114][Stage 37:=============================================>        (96 + 18) / 114][Stage 37:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.083988165 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 34 AND partitionZIndex<=134", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=134,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.441267938 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 38:======================================>               (83 + 32) / 115][Stage 38:==========================================>           (91 + 24) / 115][Stage 38:==================================================>   (107 + 8) / 115][Stage 38:====================================================> (112 + 3) / 115]                                                                                [Stage 39:=====================================>                (81 + 35) / 116][Stage 39:========================================>             (88 + 28) / 116][Stage 39:=============================================>        (97 + 19) / 116][Stage 39:===================================================>  (111 + 5) / 116][Stage 39:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.894891426 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 83 AND partitionZIndex<=183", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=183,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.485603194 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==========================>                           (60 + 61) / 121][Stage 40:===========================>                          (62 + 59) / 121][Stage 40:====================================>                 (81 + 40) / 121][Stage 40:==============================================>      (106 + 15) / 121][Stage 40:=====================================================>(120 + 1) / 121]                                                                                [Stage 41:===========================>                          (61 + 61) / 122][Stage 41:==============================>                       (69 + 53) / 122][Stage 41:======================================>               (86 + 36) / 122][Stage 41:==============================================>      (107 + 15) / 122][Stage 41:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.155812581 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 8 AND partitionZIndex<=48", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.566767848 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==========================>                           (60 + 61) / 121][Stage 42:============================>                         (64 + 57) / 121][Stage 42:=====================================>                (84 + 37) / 121][Stage 42:==============================================>      (106 + 15) / 121][Stage 42:====================================================> (117 + 4) / 121]                                                                                [Stage 43:===========================>                          (61 + 61) / 122][Stage 43:============================>                         (64 + 58) / 122][Stage 43:=================================>                    (76 + 46) / 122][Stage 43:===========================================>          (98 + 24) / 122][Stage 43:===================================================>  (117 + 5) / 122][Stage 43:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.252375196 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 12 AND partitionZIndex<=112", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=112,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.44487802 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 44:====================================>                 (76 + 37) / 113][Stage 44:===========================================>          (90 + 23) / 113][Stage 44:=============================================>        (95 + 18) / 113][Stage 44:==================================================>   (106 + 7) / 113][Stage 44:=====================================================>(112 + 1) / 113]                                                                                [Stage 45:==================================>                   (73 + 41) / 114][Stage 45:========================================>             (85 + 29) / 114][Stage 45:==============================================>      (101 + 13) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.915349302 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 24 AND partitionZIndex<=224", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=224,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.433879168 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==============================>                       (64 + 51) / 115][Stage 46:=================================>                    (72 + 43) / 115][Stage 46:=======================================>              (84 + 31) / 115][Stage 46:===========================================>          (93 + 22) / 115][Stage 46:=================================================>    (106 + 9) / 115][Stage 46:=====================================================>(113 + 2) / 115][Stage 46:=====================================================>(114 + 1) / 115]                                                                                [Stage 47:====================================>                 (79 + 37) / 116][Stage 47:=============================================>        (98 + 18) / 116][Stage 47:================================================>    (106 + 10) / 116][Stage 47:=====================================================>(114 + 2) / 116][Stage 47:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.784792569 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 8 AND partitionZIndex<=58", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.464600672 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (60 + 60) / 120][Stage 48:===============================>                      (70 + 50) / 120][Stage 48:===================================>                  (79 + 41) / 120][Stage 48:===========================================>          (97 + 23) / 120][Stage 48:=====================================================>(119 + 1) / 120]                                                                                [Stage 49:===========================>                          (61 + 60) / 121][Stage 49:==============================>                       (68 + 53) / 121][Stage 49:=======================================>              (88 + 33) / 121][Stage 49:============================================>        (102 + 19) / 121][Stage 49:=================================================>    (112 + 9) / 121]                                                                                Time elapsed: 3.209221094 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 6 AND partitionZIndex<=96", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=96,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.480570045 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 50:============================>                         (63 + 57) / 120][Stage 50:===============================>                      (70 + 50) / 120][Stage 50:========================================>             (89 + 31) / 120][Stage 50:================================================>    (110 + 10) / 120][Stage 50:=====================================================>(119 + 1) / 120]                                                                                [Stage 51:============================>                         (64 + 57) / 121][Stage 51:=====================================>                (84 + 37) / 121][Stage 51:=============================================>       (104 + 17) / 121][Stage 51:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.113377378 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 60 AND partitionZIndex<=160", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.436440131 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==============================>                       (65 + 50) / 115][Stage 52:====================================>                 (78 + 37) / 115][Stage 52:===========================================>          (93 + 22) / 115][Stage 52:===================================================>  (109 + 6) / 115][Stage 52:=====================================================>(113 + 2) / 115]                                                                                [Stage 53:===================================>                  (76 + 40) / 116][Stage 53:=========================================>            (89 + 27) / 116][Stage 53:===============================================>     (105 + 11) / 116][Stage 53:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.00328285 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 5 AND partitionZIndex<=15", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=15,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.451652463 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (60 + 60) / 120][Stage 54:============================>                         (64 + 56) / 120][Stage 54:==================================>                   (77 + 43) / 120][Stage 54:=========================================>            (92 + 28) / 120][Stage 54:=================================================>    (111 + 9) / 120][Stage 54:=====================================================>(119 + 1) / 120]                                                                                [Stage 55:==========================>                           (60 + 61) / 121][Stage 55:============================>                         (64 + 57) / 121][Stage 55:===================================>                  (80 + 41) / 121][Stage 55:==========================================>           (95 + 26) / 121][Stage 55:==================================================>   (113 + 8) / 121][Stage 55:=====================================================>(119 + 2) / 121][Stage 55:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.800590649 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 39 AND partitionZIndex<=139", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=139,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.379333526 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 56:=====================================>                (80 + 35) / 115][Stage 56:===========================================>          (92 + 23) / 115][Stage 56:===============================================>     (103 + 12) / 115][Stage 56:===================================================>  (109 + 6) / 115][Stage 56:=====================================================>(114 + 1) / 115]                                                                                [Stage 57:======================================>               (83 + 33) / 116][Stage 57:===========================================>          (93 + 23) / 116][Stage 57:=================================================>    (107 + 9) / 116][Stage 57:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.885570996 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 1 AND partitionZIndex<=51", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=51,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.382798285 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==================================>                   (72 + 41) / 113][Stage 58:======================================>               (81 + 32) / 113][Stage 58:=============================================>        (95 + 18) / 113][Stage 58:===================================================>  (108 + 5) / 113][Stage 58:=====================================================>(111 + 2) / 113]                                                                                [Stage 59:====================================>                 (78 + 36) / 114][Stage 59:========================================>             (86 + 28) / 114][Stage 59:==============================================>      (101 + 13) / 114][Stage 59:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.278868524 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 80 AND partitionZIndex<=180", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.437931436 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 60:============================>                         (59 + 54) / 113][Stage 60:=================================>                    (71 + 42) / 113][Stage 60:===========================================>          (92 + 21) / 113][Stage 60:====================================================> (110 + 3) / 113]                                                                                [Stage 61:==============================>                       (64 + 50) / 114][Stage 61:===================================>                  (74 + 40) / 114][Stage 61:==============================================>       (99 + 15) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.985802357 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 24 AND partitionZIndex<=124", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=124,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.421017326 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 62:====================================>                 (77 + 36) / 113][Stage 62:===========================================>          (90 + 23) / 113][Stage 62:===============================================>     (102 + 11) / 113][Stage 62:====================================================> (109 + 4) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:====================================>                 (77 + 37) / 114][Stage 63:=========================================>            (87 + 27) / 114][Stage 63:=============================================>        (96 + 18) / 114][Stage 63:===============================================>     (103 + 11) / 114][Stage 63:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.209986502 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 0 AND partitionZIndex<=20", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=20,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.400058759 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 64:=================================>                    (74 + 44) / 118][Stage 64:====================================>                 (79 + 39) / 118][Stage 64:===========================================>          (96 + 22) / 118][Stage 64:=============================================>       (102 + 16) / 118][Stage 64:====================================================> (114 + 4) / 118]                                                                                [Stage 65:=================================>                    (73 + 46) / 119][Stage 65:=================================>                    (74 + 45) / 119][Stage 65:====================================>                 (80 + 39) / 119][Stage 65:========================================>             (89 + 30) / 119][Stage 65:==============================================>      (104 + 15) / 119][Stage 65:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.406449163 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 46 AND partitionZIndex<=246", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=246,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.444282256 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=================================>                    (72 + 43) / 115][Stage 66:==========================================>           (91 + 24) / 115][Stage 66:==============================================>      (101 + 14) / 115][Stage 66:=====================================================>(113 + 2) / 115]                                                                                [Stage 67:===============================>                      (68 + 48) / 116][Stage 67:=======================================>              (85 + 31) / 116][Stage 67:==============================================>       (99 + 17) / 116][Stage 67:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.786908714 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 64 AND partitionZIndex<=164", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=164,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.408600156 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==============================>                       (64 + 51) / 115][Stage 68:===================================>                  (75 + 40) / 115][Stage 68:==========================================>           (90 + 25) / 115][Stage 68:==================================================>   (107 + 8) / 115][Stage 68:=====================================================>(114 + 1) / 115]                                                                                [Stage 69:==================================>                   (74 + 42) / 116][Stage 69:========================================>             (86 + 30) / 116][Stage 69:=============================================>        (98 + 18) / 116][Stage 69:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.840192572 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 13 AND partitionZIndex<=213", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=213,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.368529019 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 70:======================================>               (81 + 34) / 115][Stage 70:========================================>             (86 + 29) / 115][Stage 70:=============================================>        (97 + 18) / 115][Stage 70:===================================================>  (110 + 5) / 115]                                                                                [Stage 71:=======================================>              (85 + 31) / 116][Stage 71:=============================================>        (97 + 19) / 116][Stage 71:===================================================>  (111 + 5) / 116][Stage 71:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.865443346 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 14 AND partitionZIndex<=114", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=114,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.416419495 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 72:=================================>                    (70 + 43) / 113][Stage 72:====================================>                 (77 + 36) / 113][Stage 72:=========================================>            (87 + 26) / 113][Stage 72:============================================>         (93 + 20) / 113][Stage 72:=================================================>    (104 + 9) / 113][Stage 72:====================================================> (110 + 3) / 113]                                                                                [Stage 73:===================================>                  (74 + 40) / 114][Stage 73:========================================>             (86 + 28) / 114][Stage 73:=============================================>        (96 + 18) / 114][Stage 73:================================================>    (104 + 10) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.24588443 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5  AND partitionZIndex<=5", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=5,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.382549474 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==================================>                   (73 + 40) / 113][Stage 74:==========================================>           (88 + 25) / 113][Stage 74:============================================>         (94 + 19) / 113][Stage 74:===============================================>     (102 + 11) / 113][Stage 74:====================================================> (109 + 4) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:====================================>                 (76 + 38) / 114][Stage 75:=========================================>            (88 + 26) / 114][Stage 75:===========================================>          (92 + 22) / 114][Stage 75:==================================================>   (106 + 8) / 114][Stage 75:====================================================> (111 + 3) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.430633441 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 7 AND partitionZIndex<=97", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.426109472 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (58 + 55) / 113][Stage 76:============================>                         (60 + 53) / 113][Stage 76:==================================>                   (73 + 40) / 113][Stage 76:=========================================>            (87 + 26) / 113][Stage 76:===============================================>     (102 + 11) / 113][Stage 76:=====================================================>(112 + 1) / 113]                                                                                [Stage 77:============================>                         (60 + 54) / 114][Stage 77:===============================>                      (67 + 47) / 114][Stage 77:=====================================>                (80 + 34) / 114][Stage 77:=============================================>        (95 + 19) / 114][Stage 77:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.24494601 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 06 AND partitionZIndex<=206", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=206,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.428570172 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (58 + 55) / 113][Stage 78:=============================>                        (61 + 52) / 113][Stage 78:====================================>                 (76 + 37) / 113][Stage 78:==============================================>      (100 + 13) / 113][Stage 78:====================================================> (110 + 3) / 113]                                                                                [Stage 79:=============================>                        (62 + 52) / 114][Stage 79:====================================>                 (76 + 38) / 114][Stage 79:============================================>         (94 + 20) / 114][Stage 79:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.109692751 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 2 AND partitionZIndex<=92", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=92,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.370857404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 80:=================================>                    (70 + 43) / 113][Stage 80:======================================>               (80 + 33) / 113][Stage 80:===========================================>          (91 + 22) / 113][Stage 80:===============================================>     (102 + 11) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:===================================>                  (74 + 40) / 114][Stage 81:======================================>               (82 + 32) / 114][Stage 81:===============================================>     (102 + 12) / 114][Stage 81:===================================================>  (109 + 5) / 114][Stage 81:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.027404504 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 07 AND partitionZIndex<=107", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=107,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.386020417 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===================================>                  (75 + 38) / 113][Stage 82:=======================================>              (83 + 30) / 113][Stage 82:=============================================>        (95 + 18) / 113][Stage 82:==================================================>   (105 + 8) / 113][Stage 82:====================================================> (110 + 3) / 113]                                                                                [Stage 83:====================================>                 (77 + 37) / 114][Stage 83:=========================================>            (88 + 26) / 114][Stage 83:==============================================>       (98 + 16) / 114][Stage 83:==================================================>   (107 + 7) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.910457154 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 18 AND partitionZIndex<=118", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=118,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.351021156 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 84:======================================>               (82 + 33) / 115][Stage 84:==========================================>           (90 + 25) / 115][Stage 84:==============================================>      (100 + 15) / 115][Stage 84:====================================================> (112 + 3) / 115][Stage 84:=====================================================>(114 + 1) / 115]                                                                                [Stage 85:=======================================>              (85 + 31) / 116][Stage 85:==========================================>           (92 + 24) / 116][Stage 85:================================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.676762624 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 70 AND partitionZIndex<=170", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=170,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.349222839 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 86:>                                                       (0 + 0) / 115][Stage 86:======================================>               (81 + 34) / 115][Stage 86:=========================================>            (88 + 27) / 115][Stage 86:==============================================>       (99 + 16) / 115][Stage 86:====================================================> (111 + 4) / 115][Stage 86:=====================================================>(114 + 1) / 115]                                                                                [Stage 87:=====================================>                (80 + 36) / 116][Stage 87:========================================>             (86 + 30) / 116][Stage 87:============================================>         (96 + 20) / 116][Stage 87:===============================================>     (104 + 12) / 116][Stage 87:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.025946569 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 1 AND partitionZIndex<=21", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.432726636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 88:==========================>                           (60 + 61) / 121][Stage 88:===============================>                      (71 + 50) / 121][Stage 88:==========================================>           (95 + 26) / 121][Stage 88:=================================================>    (112 + 9) / 121][Stage 88:=====================================================>(120 + 1) / 121]                                                                                [Stage 89:===========================>                          (62 + 60) / 122][Stage 89:==============================>                       (69 + 53) / 122][Stage 89:=====================================>                (84 + 38) / 122][Stage 89:==============================================>      (108 + 14) / 122][Stage 89:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.254213441 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 9 AND partitionZIndex<=19", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=19,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.418873364 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (59 + 54) / 113][Stage 90:==============================>                       (64 + 49) / 113][Stage 90:========================================>             (84 + 29) / 113][Stage 90:==================================================>   (105 + 8) / 113][Stage 90:=====================================================>(111 + 2) / 113]                                                                                [Stage 91:===========================>                          (59 + 55) / 114][Stage 91:===============================>                      (67 + 47) / 114][Stage 91:======================================>               (81 + 33) / 114][Stage 91:==============================================>      (101 + 13) / 114][Stage 91:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.147404105 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 1 AND partitionZIndex<=31", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=31,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.384977243 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==============================>                       (65 + 50) / 115][Stage 92:==================================>                   (73 + 42) / 115][Stage 92:===========================================>          (92 + 23) / 115][Stage 92:==================================================>   (108 + 7) / 115][Stage 92:====================================================> (111 + 4) / 115]                                                                                [Stage 93:===============================>                      (67 + 49) / 116][Stage 93:========================================>             (88 + 28) / 116][Stage 93:===============================================>     (104 + 12) / 116][Stage 93:====================================================> (112 + 4) / 116][Stage 93:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.31377089 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 8 AND partitionZIndex<=88", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.357542798 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 94:======================================>               (83 + 32) / 115][Stage 94:=============================================>        (96 + 19) / 115][Stage 94:===================================================>  (110 + 5) / 115]                                                                                [Stage 95:=========================================>            (90 + 26) / 116][Stage 95:==============================================>      (101 + 15) / 116][Stage 95:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.565689259 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 3 AND partitionZIndex<=83", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=83,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.424316525 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (60 + 60) / 120][Stage 96:===============================>                      (69 + 51) / 120][Stage 96:=======================================>              (88 + 32) / 120][Stage 96:================================================>    (109 + 11) / 120][Stage 96:=====================================================>(118 + 2) / 120]                                                                                [Stage 97:===========================>                          (61 + 60) / 121][Stage 97:==============================>                       (68 + 53) / 121][Stage 97:=====================================>                (84 + 37) / 121][Stage 97:================================================>    (111 + 10) / 121]                                                                                Time elapsed: 2.920983607 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 18 AND partitionZIndex<=218", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=218,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.41703439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (58 + 55) / 113][Stage 98:=============================>                        (62 + 51) / 113][Stage 98:====================================>                 (77 + 36) / 113][Stage 98:==============================================>      (100 + 13) / 113][Stage 98:===================================================>  (107 + 6) / 113][Stage 98:=====================================================>(111 + 2) / 113]                                                                                [Stage 99:=============================>                        (63 + 51) / 114][Stage 99:===================================>                  (74 + 40) / 114][Stage 99:==============================================>      (100 + 14) / 114][Stage 99:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.310889339 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 5 AND partitionZIndex<=55", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=55,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.355200482 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 100:======================================>              (83 + 32) / 115][Stage 100:=======================================>             (86 + 29) / 115][Stage 100:=================================================>   (107 + 8) / 115]                                                                                [Stage 101:======================================>              (84 + 32) / 116][Stage 101:===========================================>         (96 + 20) / 116][Stage 101:==================================================>  (111 + 5) / 116][Stage 101:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.728401499 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 34 AND partitionZIndex<=234", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=234,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.389759226 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===============================>                     (69 + 46) / 115][Stage 102:====================================>                (80 + 35) / 115][Stage 102:=============================================>      (100 + 15) / 115][Stage 102:===================================================> (112 + 3) / 115]                                                                                [Stage 103:==================================>                  (76 + 40) / 116][Stage 103:======================================>              (85 + 31) / 116][Stage 103:=============================================>      (102 + 14) / 116][Stage 103:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.750289495 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9  AND partitionZIndex<=9", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=9,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.409601877 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==========================>                          (60 + 60) / 120][Stage 104:===========================>                         (63 + 57) / 120][Stage 104:=================================>                   (76 + 44) / 120][Stage 104:===========================================>         (99 + 21) / 120][Stage 104:==================================================>  (115 + 5) / 120]                                                                                [Stage 105:==========================>                          (61 + 60) / 121][Stage 105:=============================>                       (68 + 53) / 121][Stage 105:===================================>                 (81 + 40) / 121][Stage 105:==========================================>          (97 + 24) / 121][Stage 105:==================================================>  (116 + 5) / 121][Stage 105:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.226087948 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 40 AND partitionZIndex<=240", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=240,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.443237402 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (58 + 55) / 113][Stage 106:================================>                    (69 + 44) / 113][Stage 106:=========================================>           (89 + 24) / 113][Stage 106:===================================================> (109 + 4) / 113][Stage 106:====================================================>(111 + 2) / 113]                                                                                [Stage 107:============================>                        (62 + 52) / 114][Stage 107:==================================>                  (74 + 40) / 114][Stage 107:=============================================>      (100 + 14) / 114][Stage 107:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.117743291 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 3 AND partitionZIndex<=23", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=23,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397310886 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 108:================================>                    (72 + 46) / 118][Stage 108:===================================>                 (78 + 40) / 118][Stage 108:=======================================>             (89 + 29) / 118][Stage 108:===============================================>    (107 + 11) / 118][Stage 108:===================================================> (115 + 3) / 118]                                                                                [Stage 109:=================================>                   (75 + 44) / 119][Stage 109:======================================>              (87 + 32) / 119][Stage 109:===========================================>        (100 + 19) / 119][Stage 109:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.130232394 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 29 AND partitionZIndex<=229", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=229,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.416911318 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (63 + 58) / 121][Stage 110:==================================>                  (78 + 43) / 121][Stage 110:==========================================>         (100 + 21) / 121][Stage 110:==================================================>  (116 + 5) / 121]                                                                                [Stage 111:==========================>                          (61 + 61) / 122][Stage 111:===============================>                     (72 + 50) / 122][Stage 111:=======================================>             (91 + 31) / 122][Stage 111:===============================================>    (111 + 11) / 122][Stage 111:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.232640693 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 68 AND partitionZIndex<=168", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=168,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.365575544 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 112:====================================>                (77 + 36) / 113][Stage 112:==========================================>          (90 + 23) / 113][Stage 112:==============================================>      (99 + 14) / 113][Stage 112:===================================================> (109 + 4) / 113][Stage 112:====================================================>(112 + 1) / 113]                                                                                [Stage 113:===================================>                 (77 + 37) / 114][Stage 113:==========================================>          (91 + 23) / 114][Stage 113:==============================================>      (99 + 15) / 114][Stage 113:==================================================>  (108 + 6) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.952875458 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 77 AND partitionZIndex<=177", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=177,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.459569979 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 114:======================================>              (84 + 31) / 115][Stage 114:===========================================>         (94 + 21) / 115][Stage 114:===============================================>    (104 + 11) / 115][Stage 114:====================================================>(114 + 1) / 115]                                                                                [Stage 115:=======================================>             (86 + 30) / 116][Stage 115:============================================>        (97 + 19) / 116][Stage 115:=================================================>   (108 + 8) / 116][Stage 115:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.945788589 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 30 AND partitionZIndex<=230", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=230,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.406794326 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 116:============================>                        (65 + 56) / 121][Stage 116:==============================>                      (70 + 51) / 121][Stage 116:========================================>            (92 + 29) / 121][Stage 116:=================================================>   (113 + 8) / 121]                                                                                [Stage 117:==========================>                          (61 + 61) / 122][Stage 117:============================>                        (66 + 56) / 122][Stage 117:================================>                    (75 + 47) / 122][Stage 117:==========================================>         (100 + 22) / 122][Stage 117:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 2.935295902 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 19 AND partitionZIndex<=119", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.345151556 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 118:=======================================>             (85 + 30) / 115][Stage 118:==============================================>     (103 + 12) / 115][Stage 118:===================================================> (112 + 3) / 115]                                                                                [Stage 119:=====================================>               (83 + 33) / 116][Stage 119:========================================>            (89 + 27) / 116][Stage 119:=============================================>      (101 + 15) / 116][Stage 119:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.503654014 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 42 AND partitionZIndex<=242", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=242,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.387461837 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (58 + 55) / 113][Stage 120:============================>                        (60 + 53) / 113][Stage 120:==================================>                  (74 + 39) / 113][Stage 120:===========================================>         (93 + 20) / 113][Stage 120:==================================================>  (107 + 6) / 113]                                                                                [Stage 121:===========================>                         (59 + 55) / 114][Stage 121:==============================>                      (65 + 49) / 114][Stage 121:====================================>                (79 + 35) / 114][Stage 121:==============================================>     (101 + 13) / 114][Stage 121:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.012759481 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 52 AND partitionZIndex<=152", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=152,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.491920689 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 60) / 120][Stage 122:=================================>                   (76 + 44) / 120][Stage 122:==========================================>          (96 + 24) / 120][Stage 122:==================================================>  (115 + 5) / 120]                                                                                [Stage 123:===========================>                         (63 + 58) / 121][Stage 123:===================================>                 (81 + 40) / 121][Stage 123:==========================================>          (98 + 23) / 121]                                                                                Time elapsed: 2.915276255 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 43 AND partitionZIndex<=143", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=143,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.388005939 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (58 + 55) / 113][Stage 124:============================>                        (61 + 52) / 113][Stage 124:=================================>                   (72 + 41) / 113][Stage 124:===========================================>         (92 + 21) / 113][Stage 124:==================================================>  (107 + 6) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:=============================>                       (63 + 51) / 114][Stage 125:===================================>                 (77 + 37) / 114][Stage 125:=============================================>       (98 + 16) / 114][Stage 125:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.24378057 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1  AND partitionZIndex<=1", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.401113474 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 60) / 120][Stage 126:=============================>                       (67 + 53) / 120][Stage 126:======================================>              (88 + 32) / 120][Stage 126:=================================================>   (111 + 9) / 120]                                                                                [Stage 127:===========================>                         (62 + 59) / 121][Stage 127:==============================>                      (69 + 52) / 121][Stage 127:======================================>              (87 + 34) / 121][Stage 127:=================================================>   (112 + 9) / 121]                                                                                Time elapsed: 2.970600846 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 54 AND partitionZIndex<=154", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=154,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.498026291 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (61 + 60) / 121][Stage 128:===============================>                     (72 + 49) / 121][Stage 128:=======================================>             (91 + 30) / 121][Stage 128:=================================================>   (112 + 9) / 121][Stage 128:====================================================>(120 + 1) / 121]                                                                                [Stage 129:===========================>                         (64 + 58) / 122][Stage 129:===================================>                 (81 + 41) / 122][Stage 129:========================================>            (93 + 29) / 122][Stage 129:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.202715447 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 0 AND partitionZIndex<=50", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=50,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.408934332 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 61) / 121][Stage 130:============================>                        (66 + 55) / 121][Stage 130:====================================>                (84 + 37) / 121][Stage 130:==========================================>         (100 + 21) / 121][Stage 130:===================================================> (118 + 3) / 121]                                                                                [Stage 131:==========================>                          (61 + 61) / 122][Stage 131:============================>                        (66 + 56) / 122][Stage 131:===================================>                 (81 + 41) / 122][Stage 131:=============================================>      (106 + 16) / 122][Stage 131:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.029588856 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 67 AND partitionZIndex<=167", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=167,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.386311304 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 132:================================>                    (70 + 45) / 115][Stage 132:=========================================>           (90 + 25) / 115][Stage 132:==============================================>     (102 + 13) / 115][Stage 132:===================================================> (111 + 4) / 115]                                                                                [Stage 133:=====================================>               (83 + 33) / 116][Stage 133:=============================================>       (99 + 17) / 116][Stage 133:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.746962772 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 42 AND partitionZIndex<=142", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=142,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.373260471 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 134:================================>                    (71 + 44) / 115][Stage 134:=====================================>               (82 + 33) / 115][Stage 134:==============================================>     (103 + 12) / 115][Stage 134:====================================================>(113 + 2) / 115]                                                                                [Stage 135:==============================>                      (67 + 49) / 116][Stage 135:====================================>                (80 + 36) / 116][Stage 135:============================================>       (100 + 16) / 116][Stage 135:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.659561139 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 3 AND partitionZIndex<=63", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=63,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.375129251 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===============================>                     (68 + 47) / 115][Stage 136:=======================================>             (86 + 29) / 115][Stage 136:=============================================>       (98 + 17) / 115][Stage 136:==================================================>  (109 + 6) / 115]                                                                                [Stage 137:=================================>                   (73 + 43) / 116][Stage 137:=====================================>               (82 + 34) / 116][Stage 137:==============================================>     (103 + 13) / 116][Stage 137:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.991792817 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 88 AND partitionZIndex<=188", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=188,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.382997729 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (58 + 55) / 113][Stage 138:=============================>                       (63 + 50) / 113][Stage 138:===================================>                 (75 + 38) / 113][Stage 138:=============================================>       (96 + 17) / 113][Stage 138:==================================================>  (108 + 5) / 113]                                                                                [Stage 139:============================>                        (62 + 52) / 114][Stage 139:===============================>                     (67 + 47) / 114][Stage 139:============================================>        (96 + 18) / 114][Stage 139:================================================>    (105 + 9) / 114][Stage 139:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.189655977 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 5 AND partitionZIndex<=25", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398243263 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 61) / 121][Stage 140:===============================>                     (71 + 50) / 121][Stage 140:======================================>              (89 + 32) / 121][Stage 140:==============================================>     (108 + 13) / 121]                                                                                [Stage 141:==========================>                          (61 + 61) / 122][Stage 141:==============================>                      (71 + 51) / 122][Stage 141:=========================================>           (95 + 27) / 122][Stage 141:=================================================>   (114 + 8) / 122][Stage 141:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.050936247 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 7 AND partitionZIndex<=77", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=77,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.33984913 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 142:=====================================>               (82 + 33) / 115][Stage 142:=========================================>           (91 + 24) / 115][Stage 142:=============================================>      (100 + 15) / 115][Stage 142:==================================================>  (109 + 6) / 115]                                                                                [Stage 143:======================================>              (84 + 32) / 116][Stage 143:===========================================>         (95 + 21) / 116][Stage 143:==================================================>  (111 + 5) / 116][Stage 143:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.850282784 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 36 AND partitionZIndex<=136", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=136,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.403909803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 61) / 121][Stage 144:============================>                        (65 + 56) / 121][Stage 144:=================================>                   (76 + 45) / 121][Stage 144:============================================>       (104 + 17) / 121][Stage 144:====================================================>(120 + 1) / 121]                                                                                [Stage 145:==========================>                          (61 + 61) / 122][Stage 145:==============================>                      (70 + 52) / 122][Stage 145:======================================>              (89 + 33) / 122][Stage 145:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 2.903739849 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4  AND partitionZIndex<=4", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=4,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.36677994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 146:================================>                    (72 + 46) / 118][Stage 146:=================================>                   (74 + 44) / 118][Stage 146:==================================>                  (77 + 41) / 118][Stage 146:=======================================>             (89 + 29) / 118][Stage 146:==============================================>     (105 + 13) / 118][Stage 146:====================================================>(117 + 1) / 118]                                                                                [Stage 147:================================>                    (73 + 46) / 119][Stage 147:==================================>                  (78 + 41) / 119][Stage 147:=====================================>               (85 + 34) / 119][Stage 147:===========================================>        (100 + 19) / 119][Stage 147:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.374393932 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 75 AND partitionZIndex<=175", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=175,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39390747 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (60 + 61) / 121][Stage 148:===========================>                         (63 + 58) / 121][Stage 148:=================================>                   (76 + 45) / 121][Stage 148:=============================================>      (106 + 15) / 121][Stage 148:====================================================>(120 + 1) / 121]                                                                                [Stage 149:==========================>                          (62 + 60) / 122][Stage 149:==============================>                      (71 + 51) / 122][Stage 149:======================================>              (88 + 34) / 122][Stage 149:=============================================>      (107 + 15) / 122][Stage 149:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 2.948699144 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 2 AND partitionZIndex<=62", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=62,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.339238114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 150:====================================>                (80 + 35) / 115][Stage 150:=======================================>             (85 + 30) / 115][Stage 150:==============================================>     (102 + 13) / 115][Stage 150:==================================================>  (110 + 5) / 115]                                                                                [Stage 151:======================================>              (84 + 32) / 116][Stage 151:===========================================>         (95 + 21) / 116][Stage 151:=================================================>   (108 + 8) / 116][Stage 151:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.825890565 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 6 AND partitionZIndex<=26", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=26,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.359778506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 152:====================================>                (78 + 35) / 113][Stage 152:========================================>            (87 + 26) / 113][Stage 152:==============================================>      (99 + 14) / 113][Stage 152:===================================================> (109 + 4) / 113]                                                                                [Stage 153:======================================>              (83 + 31) / 114][Stage 153:===========================================>         (94 + 20) / 114][Stage 153:===============================================>    (104 + 10) / 114][Stage 153:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.148322215 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 1 AND partitionZIndex<=81", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=81,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.411170265 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 60) / 120][Stage 154:=============================>                       (67 + 53) / 120][Stage 154:==================================>                  (77 + 43) / 120][Stage 154:=============================================>      (106 + 14) / 120][Stage 154:====================================================>(118 + 2) / 120]                                                                                [Stage 155:=============================>                       (67 + 54) / 121][Stage 155:===================================>                 (82 + 39) / 121][Stage 155:===========================================>        (102 + 19) / 121][Stage 155:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.236581668 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=100", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=100,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.360706407 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (72 + 46) / 118][Stage 156:==================================>                  (76 + 42) / 118][Stage 156:====================================>                (81 + 37) / 118][Stage 156:========================================>            (91 + 27) / 118][Stage 156:==================================================>  (113 + 5) / 118][Stage 156:====================================================>(116 + 2) / 118]                                                                                [Stage 157:================================>                    (73 + 46) / 119][Stage 157:==================================>                  (78 + 41) / 119][Stage 157:=====================================>               (85 + 34) / 119][Stage 157:============================================>       (102 + 17) / 119][Stage 157:=================================================>   (112 + 7) / 119][Stage 157:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.840352523 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 6 AND partitionZIndex<=56", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=56,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.353913791 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 158:=================================>                   (72 + 41) / 113][Stage 158:=====================================>               (81 + 32) / 113][Stage 158:============================================>        (94 + 19) / 113][Stage 158:==============================================>     (100 + 13) / 113][Stage 158:====================================================>(111 + 2) / 113]                                                                                [Stage 159:=====================================>               (81 + 33) / 114][Stage 159:============================================>        (96 + 18) / 114][Stage 159:=================================================>   (106 + 8) / 114][Stage 159:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.167974216 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 11 AND partitionZIndex<=111", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=111,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.385485439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (58 + 55) / 113][Stage 160:=============================>                       (62 + 51) / 113][Stage 160:==================================>                  (73 + 40) / 113][Stage 160:========================================>            (86 + 27) / 113][Stage 160:=================================================>   (106 + 7) / 113]                                                                                [Stage 161:===========================>                         (60 + 54) / 114][Stage 161:===============================>                     (67 + 47) / 114][Stage 161:==========================================>          (92 + 22) / 114][Stage 161:==============================================>     (102 + 12) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.163989146 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 59 AND partitionZIndex<=159", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=159,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.379877743 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 162:=============================>                       (64 + 51) / 115][Stage 162:===================================>                 (77 + 38) / 115][Stage 162:===========================================>         (95 + 20) / 115][Stage 162:================================================>    (106 + 9) / 115][Stage 162:====================================================>(113 + 2) / 115]                                                                                [Stage 163:===============================>                     (68 + 48) / 116][Stage 163:======================================>              (84 + 32) / 116][Stage 163:=============================================>       (99 + 17) / 116][Stage 163:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.781282313 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 9 AND partitionZIndex<=59", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=59,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.372896227 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==================================>                  (74 + 41) / 115][Stage 164:=========================================>           (89 + 26) / 115][Stage 164:==============================================>     (103 + 12) / 115][Stage 164:===================================================> (112 + 3) / 115]                                                                                [Stage 165:===============================>                     (69 + 47) / 116][Stage 165:=====================================>               (82 + 34) / 116][Stage 165:============================================>        (98 + 18) / 116][Stage 165:=================================================>   (108 + 8) / 116][Stage 165:====================================================>(114 + 2) / 116][Stage 165:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.17229398 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 47 AND partitionZIndex<=147", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=147,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.384183043 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 166:============================>                        (60 + 53) / 113][Stage 166:=================================>                   (71 + 42) / 113][Stage 166:=========================================>           (88 + 25) / 113][Stage 166:================================================>    (104 + 9) / 113][Stage 166:====================================================>(112 + 1) / 113]                                                                                [Stage 167:===========================>                         (59 + 55) / 114][Stage 167:===============================>                     (68 + 46) / 114][Stage 167:=====================================>               (81 + 33) / 114][Stage 167:==============================================>     (103 + 11) / 114][Stage 167:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.142985961 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 09 AND partitionZIndex<=109", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=109,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.336959644 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 168:======================================>              (83 + 32) / 115][Stage 168:===========================================>         (94 + 21) / 115][Stage 168:===============================================>    (104 + 11) / 115][Stage 168:===================================================> (112 + 3) / 115][Stage 168:====================================================>(114 + 1) / 115]                                                                                [Stage 169:=====================================>               (82 + 34) / 116][Stage 169:========================================>            (89 + 27) / 116][Stage 169:==============================================>     (103 + 13) / 116][Stage 169:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.883680014 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 50 AND partitionZIndex<=150", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=150,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.392234481 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (59 + 54) / 113][Stage 170:===============================>                     (68 + 45) / 113][Stage 170:=========================================>           (88 + 25) / 113][Stage 170:================================================>    (104 + 9) / 113][Stage 170:====================================================>(112 + 1) / 113]                                                                                [Stage 171:===========================>                         (59 + 55) / 114][Stage 171:==============================>                      (66 + 48) / 114][Stage 171:======================================>              (83 + 31) / 114][Stage 171:============================================>        (96 + 18) / 114][Stage 171:===================================================> (111 + 3) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.334714 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 06 AND partitionZIndex<=106", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.353729038 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=================================>                   (72 + 41) / 113][Stage 172:========================================>            (86 + 27) / 113][Stage 172:=============================================>       (98 + 15) / 113][Stage 172:===================================================> (109 + 4) / 113]                                                                                [Stage 173:=====================================>               (80 + 34) / 114][Stage 173:=======================================>             (85 + 29) / 114][Stage 173:=============================================>      (100 + 14) / 114][Stage 173:===================================================> (110 + 4) / 114][Stage 173:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.123585394 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 3 AND partitionZIndex<=43", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=43,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.366268574 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 174:================================>                    (72 + 46) / 118][Stage 174:================================>                    (73 + 45) / 118][Stage 174:======================================>              (86 + 32) / 118][Stage 174:============================================>       (102 + 16) / 118][Stage 174:==================================================>  (112 + 6) / 118][Stage 174:=====================================================(118 + 0) / 118]                                                                                [Stage 175:================================>                    (73 + 46) / 119][Stage 175:==================================>                  (77 + 42) / 119][Stage 175:========================================>            (90 + 29) / 119][Stage 175:============================================>       (102 + 17) / 119][Stage 175:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.302039172 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 44 AND partitionZIndex<=144", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=144,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.359372278 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=====================================>               (79 + 34) / 113][Stage 176:=========================================>           (88 + 25) / 113][Stage 176:==============================================>      (99 + 14) / 113][Stage 176:==================================================>  (107 + 6) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:====================================>                (78 + 36) / 114][Stage 177:==========================================>          (91 + 23) / 114][Stage 177:================================================>    (105 + 9) / 114][Stage 177:===================================================> (110 + 4) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.242009665 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 4 AND partitionZIndex<=34", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.379661792 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===============================>                     (68 + 47) / 115][Stage 178:===================================>                 (76 + 39) / 115][Stage 178:===========================================>         (95 + 20) / 115][Stage 178:==================================================>  (109 + 6) / 115]                                                                                [Stage 179:====================================>                (79 + 37) / 116][Stage 179:==========================================>          (94 + 22) / 116][Stage 179:==============================================>     (104 + 12) / 116][Stage 179:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.997570889 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 84 AND partitionZIndex<=184", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=184,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.331466451 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 180:====================================>                (80 + 35) / 115][Stage 180:========================================>            (88 + 27) / 115][Stage 180:==============================================>     (102 + 13) / 115][Stage 180:===================================================> (111 + 4) / 115]                                                                                [Stage 181:======================================>              (85 + 31) / 116][Stage 181:=============================================>      (102 + 14) / 116][Stage 181:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.495321832 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 33 AND partitionZIndex<=233", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=233,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.399403786 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==================================>                  (73 + 40) / 113][Stage 182:======================================>              (83 + 30) / 113][Stage 182:==========================================>          (91 + 22) / 113][Stage 182:================================================>    (104 + 9) / 113][Stage 182:====================================================>(112 + 1) / 113]                                                                                [Stage 183:====================================>                (79 + 35) / 114][Stage 183:========================================>            (87 + 27) / 114][Stage 183:=============================================>       (98 + 16) / 114][Stage 183:=================================================>   (107 + 7) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.128990334 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 9 AND partitionZIndex<=79", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=79,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.431363635 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (60 + 61) / 121][Stage 184:=============================>                       (68 + 53) / 121][Stage 184:======================================>              (89 + 32) / 121][Stage 184:=============================================>      (106 + 15) / 121][Stage 184:===================================================> (117 + 4) / 121]                                                                                [Stage 185:============================>                        (65 + 57) / 122][Stage 185:=================================>                   (76 + 46) / 122][Stage 185:==========================================>          (97 + 25) / 122][Stage 185:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.257748833 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 8 AND partitionZIndex<=68", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=68,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.451890788 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==================================>                  (75 + 40) / 115][Stage 186:=========================================>           (91 + 24) / 115][Stage 186:==============================================>     (103 + 12) / 115][Stage 186:===================================================> (112 + 3) / 115][Stage 186:====================================================>(113 + 2) / 115]                                                                                [Stage 187:=================================>                   (73 + 43) / 116][Stage 187:=========================================>           (91 + 25) / 116][Stage 187:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.908413794 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 31 AND partitionZIndex<=131", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=131,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.382265855 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==================================>                  (74 + 41) / 115][Stage 188:=====================================>               (82 + 33) / 115][Stage 188:=============================================>       (99 + 16) / 115][Stage 188:=================================================>   (108 + 7) / 115]                                                                                [Stage 189:===============================>                     (70 + 46) / 116][Stage 189:=====================================>               (82 + 34) / 116][Stage 189:==============================================>     (103 + 13) / 116][Stage 189:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.790277647 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 0 AND partitionZIndex<=90", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=90,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.385204715 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (58 + 55) / 113][Stage 190:===============================>                     (67 + 46) / 113][Stage 190:=====================================>               (80 + 33) / 113][Stage 190:=================================================>   (106 + 7) / 113][Stage 190:====================================================>(111 + 2) / 113]                                                                                [Stage 191:===========================>                         (59 + 55) / 114][Stage 191:================================>                    (69 + 45) / 114][Stage 191:=======================================>             (84 + 30) / 114][Stage 191:================================================>    (105 + 9) / 114][Stage 191:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.198212701 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 66 AND partitionZIndex<=166", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=166,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.392099834 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (60 + 61) / 121][Stage 192:=============================>                       (67 + 54) / 121][Stage 192:===================================>                 (82 + 39) / 121][Stage 192:=============================================>      (105 + 16) / 121][Stage 192:===================================================> (118 + 3) / 121]                                                                                [Stage 193:============================>                        (65 + 57) / 122][Stage 193:==================================>                  (80 + 42) / 122][Stage 193:=============================================>      (107 + 15) / 122][Stage 193:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 2.987615408 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 12 AND partitionZIndex<=212", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=212,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.374093221 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 194:================================>                    (72 + 46) / 118][Stage 194:=================================>                   (75 + 43) / 118][Stage 194:=======================================>             (88 + 30) / 118][Stage 194:============================================>        (98 + 20) / 118][Stage 194:===================================================> (114 + 4) / 118][Stage 194:====================================================>(117 + 1) / 118]                                                                                [Stage 195:================================>                    (73 + 46) / 119][Stage 195:=================================>                   (76 + 43) / 119][Stage 195:=======================================>             (88 + 31) / 119][Stage 195:==============================================>     (106 + 13) / 119][Stage 195:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.193011501 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 14 AND partitionZIndex<=214", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.403767892 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (63 + 57) / 120][Stage 196:=================================>                   (76 + 44) / 120][Stage 196:==========================================>          (97 + 23) / 120][Stage 196:===================================================> (117 + 3) / 120]                                                                                [Stage 197:===========================>                         (62 + 59) / 121][Stage 197:===============================>                     (71 + 50) / 121][Stage 197:========================================>            (92 + 29) / 121][Stage 197:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.009331936 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 04 AND partitionZIndex<=204", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=204,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.407843711 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==========================>                          (61 + 60) / 121][Stage 198:===============================>                     (71 + 50) / 121][Stage 198:========================================>            (92 + 29) / 121][Stage 198:===============================================>    (110 + 11) / 121]                                                                                [Stage 199:===========================>                         (63 + 59) / 122][Stage 199:=================================>                   (76 + 46) / 122][Stage 199:===========================================>        (102 + 20) / 122][Stage 199:===================================================> (118 + 4) / 122][Stage 199:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.023720319 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8  AND partitionZIndex<=8", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=8,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.390569118 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 61) / 121][Stage 200:==========================>                          (61 + 60) / 121][Stage 200:=================================>                   (76 + 45) / 121][Stage 200:=============================================>      (105 + 16) / 121][Stage 200:====================================================>(119 + 2) / 121]                                                                                [Stage 201:==========================>                          (61 + 61) / 122][Stage 201:=============================>                       (67 + 55) / 122][Stage 201:=====================================>               (86 + 36) / 122][Stage 201:=================================================>   (113 + 9) / 122][Stage 201:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.058854234 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/24 22:38:20 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.43:55828) dropped. RpcEnv already stopped.
17/05/24 22:38:20 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.43:55828) dropped. RpcEnv already stopped.

real	9m48.346s
user	11m18.456s
sys	0m29.072s
