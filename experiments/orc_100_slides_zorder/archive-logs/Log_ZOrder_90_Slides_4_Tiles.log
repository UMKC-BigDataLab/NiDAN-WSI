Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/25 03:21:24 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 03:21:39 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 03:21:39 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 03:21:40 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/25 03:21:42 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 03:21:52 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170525032142-0630).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.362262519 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIn dex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:====>                                                  (9 + 106) / 115][Stage 0:==========================>                            (56 + 59) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:===================================>                   (75 + 40) / 115][Stage 0:=======================================>               (82 + 33) / 115][Stage 0:==========================================>            (88 + 27) / 115][Stage 0:=============================================>         (95 + 20) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:============================>                          (60 + 56) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:========================================>              (86 + 30) / 116][Stage 1:=========================================>             (88 + 28) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:====================================================>  (111 + 5) / 116]                                                                                Time elapsed: 12.675556557 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIn dex<=236", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=236,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.618806572 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 2:=============================>                         (61 + 54) / 115][Stage 2:=====================================>                 (79 + 36) / 115][Stage 2:======================================>                (80 + 35) / 115][Stage 2:=======================================>               (83 + 32) / 115][Stage 2:==========================================>            (89 + 26) / 115][Stage 2:===============================================>       (99 + 16) / 115][Stage 2:================================================>     (104 + 11) / 115][Stage 2:===================================================>   (107 + 8) / 115][Stage 2:====================================================>  (109 + 6) / 115]                                                                                [Stage 3:=====================================>                 (79 + 37) / 116][Stage 3:======================================>                (82 + 34) / 116][Stage 3:=========================================>             (88 + 28) / 116][Stage 3:=============================================>         (96 + 20) / 116][Stage 3:===============================================>      (102 + 14) / 116][Stage 3:==================================================>    (107 + 9) / 116][Stage 3:====================================================>  (111 + 5) / 116][Stage 3:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.808344325 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIn dex<=146", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=146,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.709150873 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 4:=============================>                         (62 + 53) / 115][Stage 4:================================>                      (68 + 47) / 115][Stage 4:===================================>                   (74 + 41) / 115][Stage 4:=======================================>               (82 + 33) / 115][Stage 4:============================================>          (92 + 23) / 115][Stage 4:===============================================>       (99 + 16) / 115][Stage 4:===============================================>      (102 + 13) / 115][Stage 4:===================================================>   (108 + 7) / 115][Stage 4:======================================================>(114 + 1) / 115]                                                                                [Stage 5:============================>                          (61 + 55) / 116][Stage 5:==================================>                    (72 + 44) / 116][Stage 5:===================================>                   (74 + 42) / 116][Stage 5:======================================>                (82 + 34) / 116][Stage 5:============================================>          (93 + 23) / 116][Stage 5:==============================================>       (100 + 16) / 116][Stage 5:===============================================>      (101 + 15) / 116][Stage 5:==================================================>    (107 + 9) / 116]                                                                                Time elapsed: 4.904578983 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIn dex<=213", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=213,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.777257011 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 6:==========================>                            (59 + 62) / 121][Stage 6:============================>                          (63 + 58) / 121][Stage 6:================================>                      (72 + 49) / 121][Stage 6:==================================>                    (75 + 46) / 121][Stage 6:====================================>                  (81 + 40) / 121][Stage 6:=============================================>         (99 + 22) / 121][Stage 6:=====================================================> (117 + 4) / 121][Stage 6:======================================================>(120 + 1) / 121]                                                                                [Stage 7:==========================>                            (58 + 64) / 122][Stage 7:============================>                          (63 + 59) / 122][Stage 7:===============================>                       (70 + 52) / 122][Stage 7:=====================================>                 (84 + 38) / 122][Stage 7:=============================================>        (102 + 20) / 122][Stage 7:====================================================>  (117 + 5) / 122]                                                                                Time elapsed: 4.374419546 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIn dex<=188", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=188,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.68048447 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 8:===========================>                           (60 + 61) / 121][Stage 8:============================>                          (62 + 59) / 121][Stage 8:===============================>                       (69 + 52) / 121][Stage 8:=====================================>                 (83 + 38) / 121][Stage 8:==========================================>            (93 + 28) / 121][Stage 8:==============================================>       (105 + 16) / 121][Stage 8:=====================================================> (118 + 3) / 121]                                                                                [Stage 9:===========================>                           (60 + 62) / 122][Stage 9:============================>                          (63 + 59) / 122][Stage 9:==============================>                        (68 + 54) / 122][Stage 9:======================================>                (86 + 36) / 122][Stage 9:=============================================>        (102 + 20) / 122][Stage 9:=================================================>    (111 + 11) / 122]                                                                                Time elapsed: 4.119598387 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZInd ex<=15", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.571994376 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 10:===========================>                          (57 + 56) / 113][Stage 10:============================>                         (59 + 54) / 113][Stage 10:==============================>                       (64 + 49) / 113][Stage 10:=======================================>              (83 + 30) / 113][Stage 10:=============================================>        (96 + 17) / 113][Stage 10:===================================================>  (108 + 5) / 113]                                                                                [Stage 11:===========================>                          (59 + 55) / 114][Stage 11:===============================>                      (67 + 47) / 114][Stage 11:=====================================>                (80 + 34) / 114][Stage 11:=============================================>        (96 + 18) / 114][Stage 11:================================================>    (104 + 10) / 114][Stage 11:=====================================================>(112 + 2) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.264315159 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZInd ex<=24", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=24,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.54240213 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 12:=================================>                    (71 + 42) / 113][Stage 12:========================================>             (84 + 29) / 113][Stage 12:============================================>         (93 + 20) / 113][Stage 12:==============================================>      (100 + 13) / 113][Stage 12:====================================================> (110 + 3) / 113][Stage 12:=====================================================>(112 + 1) / 113]                                                                                [Stage 13:===================================>                  (75 + 39) / 114][Stage 13:=====================================>                (80 + 34) / 114][Stage 13:==========================================>           (89 + 25) / 114][Stage 13:==============================================>       (98 + 16) / 114][Stage 13:===============================================>     (103 + 11) / 114][Stage 13:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.697149356 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIn dex<=243", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=243,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.561595665 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 14:=====================================>                (79 + 36) / 115][Stage 14:======================================>               (83 + 32) / 115][Stage 14:=========================================>            (89 + 26) / 115][Stage 14:=================================================>    (106 + 9) / 115][Stage 14:===================================================>  (110 + 5) / 115][Stage 14:====================================================> (112 + 3) / 115][Stage 14:=====================================================>(114 + 1) / 115]                                                                                [Stage 15:=======================================>              (84 + 32) / 116][Stage 15:=========================================>            (89 + 27) / 116][Stage 15:==============================================>      (101 + 15) / 116][Stage 15:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.314204192 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZInd ex<=95", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=95,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499114464 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 16:==================================>                   (73 + 40) / 113][Stage 16:=======================================>              (82 + 31) / 113][Stage 16:===========================================>          (90 + 23) / 113][Stage 16:===============================================>      (99 + 14) / 113][Stage 16:==================================================>   (106 + 7) / 113][Stage 16:=====================================================>(111 + 2) / 113][Stage 16:=====================================================>(112 + 1) / 113]                                                                                [Stage 17:==================================>                   (72 + 42) / 114][Stage 17:======================================>               (81 + 33) / 114][Stage 17:==========================================>           (90 + 24) / 114][Stage 17:==============================================>       (98 + 16) / 114][Stage 17:===================================================>  (108 + 6) / 114][Stage 17:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.047143373 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIn dex<=208", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=208,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461367935 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 18:=====================================>                (80 + 35) / 115][Stage 18:=======================================>              (85 + 30) / 115][Stage 18:==============================================>      (100 + 15) / 115][Stage 18:====================================================> (112 + 3) / 115]                                                                                [Stage 19:=====================================>                (81 + 35) / 116][Stage 19:========================================>             (88 + 28) / 116][Stage 19:==============================================>       (99 + 17) / 116][Stage 19:==============================================>      (102 + 14) / 116][Stage 19:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.910143921 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIn dex<=175", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469563239 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 20:=================================>                    (70 + 43) / 113][Stage 20:======================================>               (81 + 32) / 113][Stage 20:============================================>         (93 + 20) / 113][Stage 20:==============================================>      (100 + 13) / 113][Stage 20:=====================================================>(111 + 2) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:=================================>                    (71 + 43) / 114][Stage 21:======================================>               (82 + 32) / 114][Stage 21:===========================================>          (91 + 23) / 114][Stage 21:================================================>    (104 + 10) / 114][Stage 21:====================================================> (111 + 3) / 114][Stage 21:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.676554418 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIn dex<=207", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=207,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453404371 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 22:======================================>               (82 + 33) / 115][Stage 22:==========================================>           (90 + 25) / 115][Stage 22:==============================================>      (101 + 14) / 115][Stage 22:====================================================> (112 + 3) / 115]                                                                                [Stage 23:======================================>               (83 + 33) / 116][Stage 23:========================================>             (86 + 30) / 116][Stage 23:=============================================>        (98 + 18) / 116][Stage 23:=================================================>    (107 + 9) / 116][Stage 23:=====================================================>(114 + 2) / 116][Stage 23:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.024576371 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIn dex<=170", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=170,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42848994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 24:=====================================>                (79 + 36) / 115][Stage 24:========================================>             (86 + 29) / 115][Stage 24:==============================================>       (99 + 16) / 115][Stage 24:==================================================>   (108 + 7) / 115][Stage 24:====================================================> (112 + 3) / 115]                                                                                [Stage 25:======================================>               (82 + 34) / 116][Stage 25:=========================================>            (90 + 26) / 116][Stage 25:===============================================>     (103 + 13) / 116][Stage 25:===================================================>  (111 + 5) / 116][Stage 25:====================================================> (113 + 3) / 116][Stage 25:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.404176808 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIn dex<=145", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=145,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.542134888 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 26:==========================>                           (60 + 61) / 121][Stage 26:============================>                         (64 + 57) / 121][Stage 26:====================================>                 (81 + 40) / 121][Stage 26:==============================================>      (106 + 15) / 121][Stage 26:=====================================================>(120 + 1) / 121]                                                                                [Stage 27:===========================>                          (61 + 61) / 122][Stage 27:=============================>                        (67 + 55) / 122][Stage 27:==================================>                   (79 + 43) / 122][Stage 27:=============================================>       (104 + 18) / 122][Stage 27:===================================================>  (116 + 6) / 122][Stage 27:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.719884321 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIn dex<=126", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=126,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.471354203 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 28:==============================>                       (65 + 50) / 115][Stage 28:=====================================>                (79 + 36) / 115][Stage 28:============================================>         (94 + 21) / 115][Stage 28:===============================================>     (102 + 13) / 115][Stage 28:==================================================>   (108 + 7) / 115]                                                                                [Stage 29:=================================>                    (71 + 45) / 116][Stage 29:========================================>             (86 + 30) / 116][Stage 29:===============================================>     (103 + 13) / 116][Stage 29:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.267620072 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIn dex<=193", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.498344761 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 30:===========================>                          (61 + 59) / 120][Stage 30:===============================>                      (70 + 50) / 120][Stage 30:=======================================>              (88 + 32) / 120][Stage 30:===============================================>     (108 + 12) / 120][Stage 30:====================================================> (116 + 4) / 120]                                                                                [Stage 31:============================>                         (64 + 57) / 121][Stage 31:=================================>                    (76 + 45) / 121][Stage 31:==========================================>           (96 + 25) / 121][Stage 31:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.474324769 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZInd ex<=90", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=90,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480370409 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 32:============================>                         (60 + 53) / 113][Stage 32:===============================>                      (65 + 48) / 113][Stage 32:=======================================>              (83 + 30) / 113][Stage 32:==============================================>       (97 + 16) / 113][Stage 32:===================================================>  (107 + 6) / 113][Stage 32:=====================================================>(111 + 2) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:===========================>                          (59 + 55) / 114][Stage 33:============================>                         (61 + 53) / 114][Stage 33:======================================>               (82 + 32) / 114][Stage 33:==============================================>      (101 + 13) / 114][Stage 33:==================================================>   (106 + 8) / 114][Stage 33:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.9003547 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIn dex<=184", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.517337676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 34:==========================>                           (60 + 61) / 121][Stage 34:=============================>                        (66 + 55) / 121][Stage 34:=====================================>                (84 + 37) / 121][Stage 34:==============================================>      (107 + 14) / 121][Stage 34:====================================================> (118 + 3) / 121]                                                                                [Stage 35:===========================>                          (63 + 59) / 122][Stage 35:==================================>                   (78 + 44) / 122][Stage 35:===========================================>         (101 + 21) / 122][Stage 35:==============================================>      (107 + 15) / 122]                                                                                Time elapsed: 3.423893221 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZInd ex<=18", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=18,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478725424 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 36:===========================>                          (58 + 55) / 113][Stage 36:==============================>                       (64 + 49) / 113][Stage 36:===================================>                  (75 + 38) / 113][Stage 36:============================================>         (94 + 19) / 113][Stage 36:=====================================================>(111 + 2) / 113]                                                                                [Stage 37:===========================>                          (59 + 55) / 114][Stage 37:=============================>                        (62 + 52) / 114][Stage 37:======================================>               (82 + 32) / 114][Stage 37:=============================================>        (96 + 18) / 114]                                                                                Time elapsed: 3.220617412 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIn dex<=164", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=164,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.50171745 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 38:>                                                       (0 + 0) / 113][Stage 38:============================>                         (59 + 54) / 113][Stage 38:================================>                     (69 + 44) / 113][Stage 38:=========================================>            (86 + 27) / 113][Stage 38:==================================================>   (106 + 7) / 113][Stage 38:=====================================================>(112 + 1) / 113]                                                                                [Stage 39:==============================>                       (65 + 49) / 114][Stage 39:====================================>                 (77 + 37) / 114][Stage 39:==============================================>       (98 + 16) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.526984157 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZInd ex<=28", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45997189 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 40:===============================>                      (67 + 48) / 115][Stage 40:===================================>                  (75 + 40) / 115][Stage 40:==========================================>           (90 + 25) / 115][Stage 40:===============================================>     (102 + 13) / 115][Stage 40:===================================================>  (109 + 6) / 115][Stage 40:====================================================> (112 + 3) / 115][Stage 40:=====================================================>(114 + 1) / 115]                                                                                [Stage 41:================================>                     (69 + 47) / 116][Stage 41:=======================================>              (85 + 31) / 116][Stage 41:=============================================>       (100 + 16) / 116][Stage 41:===================================================>  (110 + 6) / 116][Stage 41:====================================================> (112 + 4) / 116][Stage 41:====================================================> (113 + 3) / 116][Stage 41:=====================================================>(114 + 2) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.338200624 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZInd ex<=50", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=50,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.515075349 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 42:===========================>                          (60 + 60) / 120][Stage 42:=============================>                        (65 + 55) / 120][Stage 42:==================================>                   (76 + 44) / 120][Stage 42:==========================================>           (94 + 26) / 120][Stage 42:================================================>    (109 + 11) / 120]                                                                                [Stage 43:===========================>                          (62 + 59) / 121][Stage 43:================================>                     (72 + 49) / 121][Stage 43:=====================================>                (84 + 37) / 121][Stage 43:=============================================>       (105 + 16) / 121][Stage 43:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.68451113 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIn dex<=244", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=244,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462633077 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 44:============================>                         (59 + 54) / 113][Stage 44:=============================>                        (62 + 51) / 113][Stage 44:========================================>             (85 + 28) / 113][Stage 44:==================================================>   (106 + 7) / 113]                                                                                [Stage 45:============================>                         (61 + 53) / 114][Stage 45:==================================>                   (73 + 41) / 114][Stage 45:=============================================>        (95 + 19) / 114][Stage 45:===================================================>  (109 + 5) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.305331834 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIn dex<=111", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428547019 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 46:===============================>                      (68 + 47) / 115][Stage 46:======================================>               (81 + 34) / 115][Stage 46:==============================================>      (100 + 15) / 115][Stage 46:==================================================>   (108 + 7) / 115][Stage 46:====================================================> (112 + 3) / 115]                                                                                [Stage 47:=================================>                    (72 + 44) / 116][Stage 47:=======================================>              (85 + 31) / 116][Stage 47:=============================================>        (98 + 18) / 116][Stage 47:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.166718253 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZInd ex<=72", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=72,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.482505095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 48:==========================>                           (60 + 61) / 121][Stage 48:===========================>                          (61 + 60) / 121][Stage 48:=================================>                    (75 + 46) / 121][Stage 48:=========================================>            (93 + 28) / 121][Stage 48:===================================================>  (115 + 6) / 121]                                                                                [Stage 49:===========================>                          (61 + 61) / 122][Stage 49:================================>                     (74 + 48) / 122][Stage 49:=======================================>              (90 + 32) / 122][Stage 49:===============================================>     (109 + 13) / 122][Stage 49:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.247479445 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZInd ex<=19", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=19,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457776283 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 50:================================>                     (69 + 46) / 115][Stage 50:=====================================>                (80 + 35) / 115][Stage 50:==============================================>      (101 + 14) / 115][Stage 50:===================================================>  (110 + 5) / 115][Stage 50:=====================================================>(114 + 1) / 115]                                                                                [Stage 51:================================>                     (69 + 47) / 116][Stage 51:======================================>               (83 + 33) / 116][Stage 51:==============================================>      (101 + 15) / 116][Stage 51:==================================================>   (108 + 8) / 116][Stage 51:=====================================================>(114 + 2) / 116][Stage 51:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.902630338 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZInd ex<=37", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=37,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449609599 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 52:============================>                         (59 + 54) / 113][Stage 52:=============================>                        (61 + 52) / 113][Stage 52:========================================>             (84 + 29) / 113][Stage 52:==============================================>      (100 + 13) / 113][Stage 52:===================================================>  (107 + 6) / 113]                                                                                [Stage 53:============================>                         (60 + 54) / 114][Stage 53:===============================>                      (67 + 47) / 114][Stage 53:============================================>         (94 + 20) / 114][Stage 53:=================================================>    (105 + 9) / 114][Stage 53:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.532318147 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIn dex<=212", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=212,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44650489 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 54:===========================>                          (58 + 55) / 113][Stage 54:================================>                     (69 + 44) / 113][Stage 54:============================================>         (93 + 20) / 113][Stage 54:====================================================> (109 + 4) / 113]                                                                                [Stage 55:============================>                         (61 + 53) / 114][Stage 55:================================>                     (68 + 46) / 114][Stage 55:=====================================>                (80 + 34) / 114][Stage 55:==============================================>      (100 + 14) / 114][Stage 55:====================================================> (111 + 3) / 114][Stage 55:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.630849311 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIn dex<=182", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=182,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438737288 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 56:===========================>                          (58 + 55) / 113][Stage 56:=============================>                        (61 + 52) / 113][Stage 56:===================================>                  (74 + 39) / 113][Stage 56:==========================================>           (88 + 25) / 113][Stage 56:====================================================> (109 + 4) / 113]                                                                                [Stage 57:============================>                         (60 + 54) / 114][Stage 57:=================================>                    (71 + 43) / 114][Stage 57:============================================>         (93 + 21) / 114][Stage 57:==================================================>   (107 + 7) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.307363676 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIn dex<=148", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=148,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410931147 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 58:=====================================>                (78 + 35) / 113][Stage 58:==========================================>           (88 + 25) / 113][Stage 58:==============================================>      (100 + 13) / 113][Stage 58:====================================================> (109 + 4) / 113]                                                                                [Stage 59:======================================>               (82 + 32) / 114][Stage 59:===========================================>          (91 + 23) / 114][Stage 59:==============================================>      (100 + 14) / 114][Stage 59:===================================================>  (108 + 6) / 114][Stage 59:===================================================>  (109 + 5) / 114][Stage 59:====================================================> (111 + 3) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.516618979 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIn dex<=165", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505742901 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 60:================================>                     (72 + 46) / 118][Stage 60:==================================>                   (75 + 43) / 118][Stage 60:=========================================>            (90 + 28) / 118][Stage 60:================================================>    (108 + 10) / 118][Stage 60:====================================================> (115 + 3) / 118]                                                                                [Stage 61:=================================>                    (74 + 45) / 119][Stage 61:=======================================>              (86 + 33) / 119][Stage 61:==============================================>      (104 + 15) / 119][Stage 61:===================================================>  (114 + 5) / 119][Stage 61:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.513549349 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIn dex<=224", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=224,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476674637 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 62:===========================>                          (60 + 60) / 120][Stage 62:============================>                         (64 + 56) / 120][Stage 62:==================================>                   (77 + 43) / 120][Stage 62:===========================================>          (97 + 23) / 120][Stage 62:==================================================>   (112 + 8) / 120][Stage 62:=====================================================>(119 + 1) / 120]                                                                                [Stage 63:===========================>                          (61 + 60) / 121][Stage 63:================================>                     (72 + 49) / 121][Stage 63:=========================================>            (92 + 29) / 121][Stage 63:=============================================>       (105 + 16) / 121][Stage 63:====================================================> (118 + 3) / 121][Stage 63:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.730882436 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZInd ex<=39", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=39,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440006411 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 64:===========================>                          (60 + 60) / 120][Stage 64:==============================>                       (67 + 53) / 120][Stage 64:=====================================>                (83 + 37) / 120][Stage 64:==============================================>      (106 + 14) / 120][Stage 64:=====================================================>(118 + 2) / 120]                                                                                [Stage 65:===========================>                          (61 + 60) / 121][Stage 65:=============================>                        (65 + 56) / 121][Stage 65:===================================>                  (79 + 42) / 121][Stage 65:===========================================>         (100 + 21) / 121][Stage 65:====================================================> (117 + 4) / 121][Stage 65:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.687146129 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZInd ex<=93", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=93,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388771542 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 66:====================================>                 (78 + 37) / 115][Stage 66:======================================>               (82 + 33) / 115][Stage 66:=============================================>        (97 + 18) / 115][Stage 66:===================================================>  (109 + 6) / 115]                                                                                [Stage 67:========================================>             (87 + 29) / 116][Stage 67:==============================================>      (102 + 14) / 116][Stage 67:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.508733345 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIn dex<=203", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=203,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440328871 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 68:==========================>                           (60 + 61) / 121][Stage 68:==============================>                       (69 + 52) / 121][Stage 68:====================================>                 (81 + 40) / 121][Stage 68:============================================>        (101 + 20) / 121][Stage 68:===================================================>  (116 + 5) / 121]                                                                                [Stage 69:===========================>                          (63 + 59) / 122][Stage 69:==================================>                   (78 + 44) / 122][Stage 69:===========================================>         (100 + 22) / 122][Stage 69:===================================================>  (117 + 5) / 122][Stage 69:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.886915865 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZInde x<=9", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=9,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456631759 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 70:===========================>                          (60 + 60) / 120][Stage 70:=============================>                        (65 + 55) / 120][Stage 70:================================>                     (72 + 48) / 120][Stage 70:=========================================>            (92 + 28) / 120][Stage 70:==================================================>   (112 + 8) / 120][Stage 70:=====================================================>(118 + 2) / 120]                                                                                [Stage 71:===========================>                          (61 + 60) / 121][Stage 71:=============================>                        (66 + 55) / 121][Stage 71:====================================>                 (81 + 40) / 121][Stage 71:=============================================>       (104 + 17) / 121][Stage 71:=================================================>    (112 + 9) / 121][Stage 71:=====================================================>(119 + 2) / 121][Stage 71:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.086145198 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIn dex<=129", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=129,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409376342 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 72:================================>                     (72 + 46) / 118][Stage 72:===================================>                  (77 + 41) / 118][Stage 72:===========================================>          (94 + 24) / 118][Stage 72:===============================================>     (106 + 12) / 118][Stage 72:=====================================================>(116 + 2) / 118]                                                                                [Stage 73:================================>                     (72 + 47) / 119][Stage 73:==================================>                   (75 + 44) / 119][Stage 73:========================================>             (90 + 29) / 119][Stage 73:================================================>    (109 + 10) / 119][Stage 73:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.205049394 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIn dex<=122", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=122,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379391176 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 74:=====================================>                (78 + 35) / 113][Stage 74:=========================================>            (87 + 26) / 113][Stage 74:==============================================>       (98 + 15) / 113][Stage 74:====================================================> (110 + 3) / 113]                                                                                [Stage 75:=======================================>              (83 + 31) / 114][Stage 75:=============================================>        (96 + 18) / 114][Stage 75:==============================================>      (101 + 13) / 114][Stage 75:====================================================> (111 + 3) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.045077111 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIn dex<=135", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409914363 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 76:=================================>                    (72 + 43) / 115][Stage 76:==========================================>           (91 + 24) / 115][Stage 76:===============================================>     (104 + 11) / 115]                                                                                [Stage 77:====================================>                 (78 + 38) / 116][Stage 77:==============================================>       (99 + 17) / 116][Stage 77:===================================================>  (111 + 5) / 116][Stage 77:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.745535772 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZInd ex<=85", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388691013 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 78:===================================>                  (75 + 38) / 113][Stage 78:========================================>             (85 + 28) / 113][Stage 78:==============================================>       (98 + 15) / 113][Stage 78:==================================================>   (106 + 7) / 113][Stage 78:=====================================================>(111 + 2) / 113]                                                                                [Stage 79:====================================>                 (76 + 38) / 114][Stage 79:=========================================>            (88 + 26) / 114][Stage 79:=============================================>        (95 + 19) / 114][Stage 79:==============================================>      (101 + 13) / 114][Stage 79:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.03885233 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIn dex<=237", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=237,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423526763 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 80:===========================>                          (60 + 60) / 120][Stage 80:=============================>                        (66 + 54) / 120][Stage 80:==================================>                   (76 + 44) / 120][Stage 80:==============================================>      (106 + 14) / 120][Stage 80:===================================================>  (115 + 5) / 120]                                                                                [Stage 81:============================>                         (64 + 57) / 121][Stage 81:==================================>                   (77 + 44) / 121][Stage 81:===========================================>         (100 + 21) / 121][Stage 81:===================================================>  (116 + 5) / 121][Stage 81:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.413738776 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIn dex<=211", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=211,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370520015 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 82:===================================>                  (75 + 38) / 113][Stage 82:==========================================>           (89 + 24) / 113][Stage 82:==============================================>       (98 + 15) / 113][Stage 82:===================================================>  (108 + 5) / 113]                                                                                [Stage 83:====================================>                 (78 + 36) / 114][Stage 83:==========================================>           (89 + 25) / 114][Stage 83:===============================================>     (103 + 11) / 114][Stage 83:===================================================>  (108 + 6) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.216608717 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIn dex<=144", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=144,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385635826 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 84:=================================>                    (73 + 45) / 118][Stage 84:=====================================>                (82 + 36) / 118][Stage 84:============================================>        (100 + 18) / 118][Stage 84:====================================================> (115 + 3) / 118][Stage 84:=====================================================>(117 + 1) / 118]                                                                                [Stage 85:=================================>                    (74 + 45) / 119][Stage 85:=======================================>              (88 + 31) / 119][Stage 85:================================================>    (108 + 11) / 119][Stage 85:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.659329503 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIn dex<=196", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=196,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427557532 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 86:===========================>                          (61 + 59) / 120][Stage 86:==============================>                       (68 + 52) / 120][Stage 86:=========================================>            (93 + 27) / 120][Stage 86:================================================>    (109 + 11) / 120][Stage 86:=====================================================>(118 + 2) / 120]                                                                                [Stage 87:=============================>                        (66 + 55) / 121][Stage 87:================================>                     (73 + 48) / 121][Stage 87:=========================================>            (92 + 29) / 121][Stage 87:=============================================>       (105 + 16) / 121][Stage 87:===================================================>  (116 + 5) / 121][Stage 87:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.877086451 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIn dex<=223", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=223,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383104082 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 88:===================================>                  (75 + 38) / 113][Stage 88:===========================================>          (90 + 23) / 113][Stage 88:==============================================>      (100 + 13) / 113][Stage 88:==================================================>   (106 + 7) / 113][Stage 88:=====================================================>(111 + 2) / 113]                                                                                [Stage 89:===================================>                  (74 + 40) / 114][Stage 89:======================================>               (82 + 32) / 114][Stage 89:============================================>         (94 + 20) / 114][Stage 89:=================================================>    (105 + 9) / 114][Stage 89:====================================================> (110 + 4) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.374113467 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIn dex<=199", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375439107 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 90:====================================>                 (77 + 36) / 113][Stage 90:==========================================>           (88 + 25) / 113][Stage 90:==============================================>       (98 + 15) / 113][Stage 90:================================================>    (103 + 10) / 113][Stage 90:====================================================> (110 + 3) / 113][Stage 90:=====================================================>(112 + 1) / 113]                                                                                [Stage 91:====================================>                 (77 + 37) / 114][Stage 91:=========================================>            (88 + 26) / 114][Stage 91:===============================================>     (103 + 11) / 114][Stage 91:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.135523043 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIn dex<=162", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=162,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36731329 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 92:===================================>                  (75 + 38) / 113][Stage 92:========================================>             (84 + 29) / 113][Stage 92:==============================================>       (98 + 15) / 113][Stage 92:===================================================>  (107 + 6) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:====================================>                 (77 + 37) / 114][Stage 93:=========================================>            (88 + 26) / 114][Stage 93:==============================================>       (98 + 16) / 114][Stage 93:==================================================>   (106 + 8) / 114][Stage 93:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.302293526 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZInd ex<=31", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479959481 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 94:===============================>                      (68 + 47) / 115][Stage 94:======================================>               (81 + 34) / 115][Stage 94:=============================================>        (97 + 18) / 115][Stage 94:===================================================>  (110 + 5) / 115]                                                                                [Stage 95:==================================>                   (75 + 41) / 116][Stage 95:=========================================>            (90 + 26) / 116][Stage 95:=============================================>       (100 + 16) / 116][Stage 95:===================================================>  (110 + 6) / 116][Stage 95:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.479998296 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZInd ex<=91", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=91,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359709755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 96:==================================>                   (72 + 41) / 113][Stage 96:=========================================>            (86 + 27) / 113][Stage 96:==============================================>       (97 + 16) / 113][Stage 96:================================================>    (103 + 10) / 113][Stage 96:=====================================================>(111 + 2) / 113]                                                                                [Stage 97:====================================>                 (78 + 36) / 114][Stage 97:========================================>             (85 + 29) / 114][Stage 97:===========================================>          (92 + 22) / 114][Stage 97:==============================================>       (99 + 15) / 114][Stage 97:====================================================> (110 + 4) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.299895209 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide82"
dataSource: String = /nidan/orc/individualORC/slide82

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIn dex<=151", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=151,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432759225 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 98:=================================>                    (74 + 44) / 118][Stage 98:======================================>               (84 + 34) / 118][Stage 98:================================================>    (108 + 10) / 118][Stage 98:=====================================================>(117 + 1) / 118]                                                                                [Stage 99:=================================>                    (74 + 45) / 119][Stage 99:========================================>             (89 + 30) / 119][Stage 99:================================================>    (108 + 11) / 119][Stage 99:=====================================================>(117 + 2) / 119][Stage 99:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.533729269 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIn dex<=198", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=198,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383150084 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 100:================================>                    (72 + 46) / 118][Stage 100:===================================>                 (80 + 38) / 118][Stage 100:=========================================>           (92 + 26) / 118][Stage 100:===============================================>    (107 + 11) / 118][Stage 100:====================================================>(117 + 1) / 118]                                                                                [Stage 101:=================================>                   (75 + 44) / 119][Stage 101:=======================================>             (89 + 30) / 119][Stage 101:=============================================>      (103 + 16) / 119][Stage 101:=================================================>   (112 + 7) / 119][Stage 101:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.596934102 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZInd ex<=20", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=20,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344677446 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 102:====================================>                (80 + 35) / 115][Stage 102:=====================================>               (82 + 33) / 115][Stage 102:==========================================>          (92 + 23) / 115][Stage 102:===============================================>    (105 + 10) / 115][Stage 102:===================================================> (111 + 4) / 115][Stage 102:====================================================>(113 + 2) / 115]                                                                                [Stage 103:======================================>              (84 + 32) / 116][Stage 103:========================================>            (89 + 27) / 116][Stage 103:============================================>       (100 + 16) / 116][Stage 103:================================================>    (107 + 9) / 116][Stage 103:===================================================> (112 + 4) / 116][Stage 103:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.063323461 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIn dex<=121", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=121,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355228627 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 104:=====================================>               (81 + 34) / 115][Stage 104:=========================================>           (89 + 26) / 115][Stage 104:==============================================>     (102 + 13) / 115][Stage 104:====================================================>(114 + 1) / 115]                                                                                [Stage 105:=====================================>               (83 + 33) / 116][Stage 105:===========================================>         (96 + 20) / 116][Stage 105:=================================================>   (109 + 7) / 116][Stage 105:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.643285495 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIn dex<=230", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=230,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426456273 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 106:==========================>                          (60 + 60) / 120][Stage 106:============================>                        (64 + 56) / 120][Stage 106:================================>                    (73 + 47) / 120][Stage 106:===========================================>         (98 + 22) / 120][Stage 106:==================================================>  (115 + 5) / 120]                                                                                [Stage 107:==========================>                          (61 + 60) / 121][Stage 107:===============================>                     (71 + 50) / 121][Stage 107:=========================================>           (95 + 26) / 121][Stage 107:==================================================>  (116 + 5) / 121][Stage 107:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.392044892 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIn dex<=167", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=167,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37567057 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 108:====================================>                (78 + 35) / 113][Stage 108:=========================================>           (88 + 25) / 113][Stage 108:==============================================>     (100 + 13) / 113][Stage 108:=================================================>   (105 + 8) / 113]                                                                                [Stage 109:====================================>                (79 + 35) / 114][Stage 109:=========================================>           (89 + 25) / 114][Stage 109:==============================================>      (99 + 15) / 114][Stage 109:===================================================> (110 + 4) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.000824132 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZInd ex<=81", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=81,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368789076 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 110:=====================================>               (81 + 34) / 115][Stage 110:======================================>              (84 + 31) / 115][Stage 110:============================================>        (96 + 19) / 115][Stage 110:=================================================>   (108 + 7) / 115][Stage 110:====================================================>(113 + 2) / 115]                                                                                [Stage 111:=======================================>             (87 + 29) / 116][Stage 111:==========================================>          (93 + 23) / 116][Stage 111:================================================>    (107 + 9) / 116][Stage 111:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.972566456 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide82"
dataSource: String = /nidan/orc/individualORC/slide82

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZInde x<=10", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=10,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376879053 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 112:================================>                    (72 + 46) / 118][Stage 112:====================================>                (82 + 36) / 118][Stage 112:============================================>       (100 + 18) / 118][Stage 112:====================================================>(117 + 1) / 118]                                                                                [Stage 113:================================>                    (73 + 46) / 119][Stage 113:===================================>                 (79 + 40) / 119][Stage 113:==========================================>          (96 + 23) / 119][Stage 113:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 2.970806235 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIn dex<=123", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=123,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465935877 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 114:===========================>                         (59 + 54) / 113][Stage 114:==================================>                  (73 + 40) / 113][Stage 114:=========================================>           (88 + 25) / 113][Stage 114:==============================================>      (99 + 14) / 113][Stage 114:==================================================>  (108 + 5) / 113]                                                                                [Stage 115:============================>                        (61 + 53) / 114][Stage 115:===================================>                 (77 + 37) / 114][Stage 115:========================================>            (87 + 27) / 114][Stage 115:============================================>        (95 + 19) / 114][Stage 115:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.641139274 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZInd ex<=77", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=77,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407084116 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 116:==========================>                          (60 + 60) / 120][Stage 116:============================>                        (65 + 55) / 120][Stage 116:=====================================>               (85 + 35) / 120][Stage 116:==============================================>     (107 + 13) / 120][Stage 116:==================================================>  (115 + 5) / 120]                                                                                [Stage 117:==========================>                          (61 + 60) / 121][Stage 117:================================>                    (74 + 47) / 121][Stage 117:======================================>              (89 + 32) / 121][Stage 117:==================================================>  (115 + 6) / 121][Stage 117:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.635419085 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIn dex<=210", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=210,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398581819 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 118:==========================>                          (60 + 60) / 120][Stage 118:============================>                        (65 + 55) / 120][Stage 118:=====================================>               (84 + 36) / 120][Stage 118:============================================>       (103 + 17) / 120][Stage 118:====================================================>(118 + 2) / 120]                                                                                [Stage 119:===========================>                         (63 + 58) / 121][Stage 119:=================================>                   (77 + 44) / 121][Stage 119:==========================================>          (97 + 24) / 121][Stage 119:=================================================>   (113 + 8) / 121][Stage 119:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.590524337 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZInd ex<=78", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382901407 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 120:=============================>                       (64 + 51) / 115][Stage 120:=================================>                   (73 + 42) / 115][Stage 120:======================================>              (84 + 31) / 115][Stage 120:===============================================>    (104 + 11) / 115][Stage 120:===================================================> (111 + 4) / 115]                                                                                [Stage 121:================================>                    (72 + 44) / 116][Stage 121:=========================================>           (90 + 26) / 116][Stage 121:==============================================>     (104 + 12) / 116][Stage 121:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.956728217 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZInde x<=8", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=8,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355747132 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 122:=====================================>               (81 + 32) / 113][Stage 122:==========================================>          (91 + 22) / 113][Stage 122:==============================================>     (100 + 13) / 113][Stage 122:===================================================> (109 + 4) / 113]                                                                                [Stage 123:=====================================>               (80 + 34) / 114][Stage 123:==========================================>          (92 + 22) / 114][Stage 123:=============================================>       (98 + 16) / 114][Stage 123:=================================================>   (106 + 8) / 114][Stage 123:===================================================> (111 + 3) / 114][Stage 123:====================================================>(112 + 2) / 114][Stage 123:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.164986384 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZInd ex<=98", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=98,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34031994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 124:=====================================>               (81 + 34) / 115][Stage 124:=========================================>           (91 + 24) / 115][Stage 124:===============================================>    (105 + 10) / 115][Stage 124:====================================================>(114 + 1) / 115]                                                                                [Stage 125:======================================>              (84 + 32) / 116][Stage 125:==========================================>          (92 + 24) / 116][Stage 125:==============================================>     (103 + 13) / 116][Stage 125:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.692316558 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZInde x<=4", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=4,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353332667 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 126:====================================>                (77 + 36) / 113][Stage 126:==========================================>          (90 + 23) / 113][Stage 126:=============================================>       (96 + 17) / 113][Stage 126:===============================================>    (103 + 10) / 113][Stage 126:===================================================> (110 + 3) / 113]                                                                                [Stage 127:=====================================>               (80 + 34) / 114][Stage 127:==========================================>          (91 + 23) / 114][Stage 127:============================================>        (96 + 18) / 114][Stage 127:================================================>    (105 + 9) / 114][Stage 127:=================================================>   (107 + 7) / 114][Stage 127:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 6.393900099 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZInd ex<=97", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=97,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34943608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 128:====================================>                (80 + 35) / 115][Stage 128:========================================>            (88 + 27) / 115][Stage 128:=============================================>       (99 + 16) / 115][Stage 128:===============================================>    (105 + 10) / 115][Stage 128:===================================================> (112 + 3) / 115]                                                                                [Stage 129:======================================>              (84 + 32) / 116][Stage 129:=============================================>       (99 + 17) / 116][Stage 129:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.869406708 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZInd ex<=86", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=86,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413310652 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 130:==========================>                          (60 + 60) / 120][Stage 130:============================>                        (64 + 56) / 120][Stage 130:===================================>                 (81 + 39) / 120][Stage 130:=============================================>      (105 + 15) / 120][Stage 130:===================================================> (116 + 4) / 120]                                                                                [Stage 131:==========================>                          (61 + 60) / 121][Stage 131:============================>                        (66 + 55) / 121][Stage 131:===================================>                 (82 + 39) / 121][Stage 131:===============================================>    (110 + 11) / 121][Stage 131:====================================================>(119 + 2) / 121][Stage 131:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.310931 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZInd ex<=43", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=43,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362165326 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 132:================================>                    (72 + 46) / 118][Stage 132:==================================>                  (77 + 41) / 118][Stage 132:======================================>              (86 + 32) / 118][Stage 132:===========================================>         (97 + 21) / 118][Stage 132:===================================================> (114 + 4) / 118][Stage 132:====================================================>(117 + 1) / 118]                                                                                [Stage 133:=================================>                   (75 + 44) / 119][Stage 133:=====================================>               (84 + 35) / 119][Stage 133:==========================================>          (96 + 23) / 119][Stage 133:=================================================>   (112 + 7) / 119][Stage 133:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.588883416 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIn dex<=191", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=191,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387850419 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 134:===============================>                     (69 + 46) / 115][Stage 134:=====================================>               (81 + 34) / 115][Stage 134:===========================================>         (94 + 21) / 115][Stage 134:===============================================>    (104 + 11) / 115][Stage 134:====================================================>(113 + 2) / 115]                                                                                [Stage 135:================================>                    (71 + 45) / 116][Stage 135:==========================================>          (93 + 23) / 116][Stage 135:==============================================>     (103 + 13) / 116][Stage 135:================================================>    (107 + 9) / 116][Stage 135:====================================================>(114 + 2) / 116][Stage 135:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.387669404 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIn dex<=241", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=241,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400453325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 136:==========================>                          (60 + 61) / 121][Stage 136:===========================>                         (63 + 58) / 121][Stage 136:================================>                    (74 + 47) / 121][Stage 136:=========================================>           (95 + 26) / 121][Stage 136:=================================================>   (113 + 8) / 121]                                                                                [Stage 137:============================>                        (66 + 56) / 122][Stage 137:=================================>                   (78 + 44) / 122][Stage 137:==========================================>          (98 + 24) / 122][Stage 137:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.238249259 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIn dex<=235", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369723783 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 138:================================>                    (70 + 45) / 115][Stage 138:=======================================>             (85 + 30) / 115][Stage 138:============================================>        (96 + 19) / 115][Stage 138:===================================================> (111 + 4) / 115][Stage 138:====================================================>(114 + 1) / 115]                                                                                [Stage 139:===============================>                     (70 + 46) / 116][Stage 139:===================================>                 (77 + 39) / 116][Stage 139:===========================================>         (95 + 21) / 116][Stage 139:================================================>    (107 + 9) / 116][Stage 139:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.993007135 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIn dex<=158", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=158,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447968104 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 140:===============================>                     (69 + 46) / 115][Stage 140:========================================>            (87 + 28) / 115][Stage 140:==============================================>     (102 + 13) / 115][Stage 140:===================================================> (112 + 3) / 115]                                                                                [Stage 141:=====================================>               (81 + 35) / 116][Stage 141:==========================================>          (92 + 24) / 116][Stage 141:===============================================>    (106 + 10) / 116][Stage 141:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.904287334 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide82"
dataSource: String = /nidan/orc/individualORC/slide82

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZInd ex<=25", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=25,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360052323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 142:================================>                    (73 + 45) / 118][Stage 142:=======================================>             (87 + 31) / 118][Stage 142:=================================================>   (110 + 8) / 118]                                                                                [Stage 143:================================>                    (74 + 45) / 119][Stage 143:=====================================>               (84 + 35) / 119][Stage 143:==============================================>     (106 + 13) / 119][Stage 143:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.812325927 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide88"
dataSource: String = /nidan/orc/individualORC/slide88

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZInd ex<=23", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=23,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370607545 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 144:==============================>                      (67 + 48) / 115][Stage 144:=================================>                   (73 + 42) / 115][Stage 144:==========================================>          (93 + 22) / 115][Stage 144:================================================>    (106 + 9) / 115][Stage 144:====================================================>(114 + 1) / 115]                                                                                [Stage 145:==============================>                      (67 + 49) / 116][Stage 145:=================================>                   (74 + 42) / 116][Stage 145:=======================================>             (87 + 29) / 116][Stage 145:=============================================>       (99 + 17) / 116][Stage 145:================================================>    (107 + 9) / 116][Stage 145:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.510505957 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIn dex<=173", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=173,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403138673 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 146:==========================>                          (60 + 61) / 121][Stage 146:============================>                        (66 + 55) / 121][Stage 146:==================================>                  (79 + 42) / 121][Stage 146:==========================================>         (100 + 21) / 121][Stage 146:=================================================>   (112 + 9) / 121][Stage 146:====================================================>(120 + 1) / 121]                                                                                [Stage 147:==========================>                          (62 + 60) / 122][Stage 147:=============================>                       (69 + 53) / 122][Stage 147:=======================================>             (92 + 30) / 122][Stage 147:==============================================>     (110 + 12) / 122]                                                                                Time elapsed: 3.483184698 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIn dex<=206", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353425191 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 148:=================================>                   (72 + 41) / 113][Stage 148:========================================>            (86 + 27) / 113][Stage 148:=============================================>       (98 + 15) / 113][Stage 148:=================================================>   (105 + 8) / 113]                                                                                [Stage 149:====================================>                (78 + 36) / 114][Stage 149:=======================================>             (84 + 30) / 114][Stage 149:=============================================>      (100 + 14) / 114][Stage 149:==================================================>  (108 + 6) / 114][Stage 149:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.025455855 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZInd ex<=89", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=89,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405628799 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 150:==========================>                          (60 + 61) / 121][Stage 150:============================>                        (65 + 56) / 121][Stage 150:===================================>                 (81 + 40) / 121][Stage 150:=========================================>           (94 + 27) / 121][Stage 150:=================================================>   (113 + 8) / 121]                                                                                [Stage 151:===========================>                         (64 + 58) / 122][Stage 151:================================>                    (75 + 47) / 122][Stage 151:==========================================>          (97 + 25) / 122][Stage 151:===============================================>    (112 + 10) / 122][Stage 151:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.357095023 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIn dex<=220", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363334771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 152:================================>                    (72 + 46) / 118][Stage 152:=================================>                   (75 + 43) / 118][Stage 152:========================================>            (90 + 28) / 118][Stage 152:==============================================>     (105 + 13) / 118][Stage 152:====================================================>(116 + 2) / 118]                                                                                [Stage 153:================================>                    (73 + 46) / 119][Stage 153:==================================>                  (78 + 41) / 119][Stage 153:======================================>              (86 + 33) / 119][Stage 153:===============================================>    (108 + 11) / 119][Stage 153:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.192441026 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIn dex<=177", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=177,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397631323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 154:===========================>                         (59 + 54) / 113][Stage 154:===============================>                     (67 + 46) / 113][Stage 154:==========================================>          (90 + 23) / 113][Stage 154:=================================================>   (105 + 8) / 113]                                                                                [Stage 155:===========================>                         (60 + 54) / 114][Stage 155:=================================>                   (71 + 43) / 114][Stage 155:=========================================>           (89 + 25) / 114][Stage 155:=================================================>   (106 + 8) / 114][Stage 155:====================================================>(112 + 2) / 114][Stage 155:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.345000203 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIn dex<=195", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368038162 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 156:================================>                    (73 + 45) / 118][Stage 156:===================================>                 (78 + 40) / 118][Stage 156:============================================>        (98 + 20) / 118][Stage 156:==============================================>     (105 + 13) / 118][Stage 156:====================================================>(116 + 2) / 118]                                                                                [Stage 157:================================>                    (73 + 46) / 119][Stage 157:==================================>                  (77 + 42) / 119][Stage 157:=====================================>               (85 + 34) / 119][Stage 157:=============================================>      (103 + 16) / 119][Stage 157:====================================================>(117 + 2) / 119][Stage 157:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.633645984 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZInd ex<=46", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=46,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359420724 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 158:================================>                    (72 + 46) / 118][Stage 158:================================>                    (73 + 45) / 118][Stage 158:=======================================>             (88 + 30) / 118][Stage 158:=============================================>      (104 + 14) / 118][Stage 158:====================================================>(116 + 2) / 118]                                                                                [Stage 159:==================================>                  (77 + 42) / 119][Stage 159:=======================================>             (88 + 31) / 119][Stage 159:===============================================>    (108 + 11) / 119][Stage 159:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.201057431 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIn dex<=216", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=216,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397674084 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 160:==========================>                          (61 + 59) / 120][Stage 160:================================>                    (73 + 47) / 120][Stage 160:========================================>            (91 + 29) / 120][Stage 160:=================================================>   (112 + 8) / 120][Stage 160:====================================================>(119 + 1) / 120]                                                                                [Stage 161:===========================>                         (62 + 59) / 121][Stage 161:==============================>                      (69 + 52) / 121][Stage 161:======================================>              (89 + 32) / 121][Stage 161:=============================================>      (107 + 14) / 121][Stage 161:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.235141504 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZInd ex<=70", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=70,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415245261 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 162:======================================>              (83 + 32) / 115][Stage 162:=========================================>           (90 + 25) / 115][Stage 162:===============================================>    (105 + 10) / 115]                                                                                [Stage 163:======================================>              (84 + 32) / 116][Stage 163:============================================>        (98 + 18) / 116][Stage 163:================================================>    (107 + 9) / 116][Stage 163:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.784871353 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIn dex<=171", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335032935 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 164:>                                                      (0 + 0) / 115][Stage 164:======================================>              (83 + 32) / 115][Stage 164:=========================================>           (90 + 25) / 115][Stage 164:==============================================>     (102 + 13) / 115][Stage 164:===================================================> (112 + 3) / 115][Stage 164:====================================================>(114 + 1) / 115]                                                                                [Stage 165:=====================================>               (81 + 35) / 116][Stage 165:========================================>            (89 + 27) / 116][Stage 165:===============================================>    (106 + 10) / 116][Stage 165:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.898415091 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZInd ex<=82", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=82,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379392287 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 166:===========================>                         (59 + 54) / 113][Stage 166:===============================>                     (67 + 46) / 113][Stage 166:=========================================>           (89 + 24) / 113][Stage 166:===================================================> (109 + 4) / 113]                                                                                [Stage 167:=============================>                       (63 + 51) / 114][Stage 167:=================================>                   (71 + 43) / 114][Stage 167:============================================>        (96 + 18) / 114][Stage 167:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.0948031 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZInde x<=11", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=11,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347948062 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 168:======================================>              (83 + 32) / 115][Stage 168:=========================================>           (90 + 25) / 115][Stage 168:================================================>    (106 + 9) / 115][Stage 168:===================================================> (111 + 4) / 115]                                                                                [Stage 169:=====================================>               (83 + 33) / 116][Stage 169:========================================>            (89 + 27) / 116][Stage 169:============================================>       (100 + 16) / 116][Stage 169:===================================================> (112 + 4) / 116][Stage 169:===================================================> (113 + 3) / 116][Stage 169:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.83574974 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZInd ex<=65", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=65,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354541436 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 170:===================================>                 (75 + 38) / 113][Stage 170:=========================================>           (88 + 25) / 113][Stage 170:=============================================>       (98 + 15) / 113][Stage 170:=================================================>   (105 + 8) / 113][Stage 170:===================================================> (109 + 4) / 113]                                                                                [Stage 171:=======================================>             (85 + 29) / 114][Stage 171:==========================================>          (91 + 23) / 114][Stage 171:=============================================>       (97 + 17) / 114][Stage 171:=================================================>   (106 + 8) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.566783546 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIn dex<=221", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=221,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397457166 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 172:==========================>                          (60 + 60) / 120][Stage 172:=============================>                       (66 + 54) / 120][Stage 172:===================================>                 (80 + 40) / 120][Stage 172:===========================================>         (99 + 21) / 120][Stage 172:===================================================> (116 + 4) / 120]                                                                                [Stage 173:===========================>                         (63 + 58) / 121][Stage 173:===============================>                     (72 + 49) / 121][Stage 173:==========================================>          (97 + 24) / 121][Stage 173:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.367036514 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZInd ex<=22", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451934979 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 174:============================>                        (61 + 52) / 113][Stage 174:===============================>                     (68 + 45) / 113][Stage 174:===========================================>         (92 + 21) / 113][Stage 174:====================================================>(111 + 2) / 113]                                                                                [Stage 175:===========================>                         (60 + 54) / 114][Stage 175:==============================>                      (66 + 48) / 114][Stage 175:======================================>              (83 + 31) / 114][Stage 175:==============================================>     (101 + 13) / 114][Stage 175:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.173995035 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZInd ex<=53", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=53,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389248989 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 176:==========================>                          (61 + 60) / 121][Stage 176:=============================>                       (67 + 54) / 121][Stage 176:=======================================>             (91 + 30) / 121][Stage 176:===============================================>    (110 + 11) / 121][Stage 176:====================================================>(120 + 1) / 121]                                                                                [Stage 177:==========================>                          (61 + 61) / 122][Stage 177:===============================>                     (72 + 50) / 122][Stage 177:====================================>                (84 + 38) / 122][Stage 177:============================================>       (105 + 17) / 122][Stage 177:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.331524005 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIn dex<=160", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=160,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338153783 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 178:======================================>              (83 + 32) / 115][Stage 178:===========================================>         (94 + 21) / 115][Stage 178:===============================================>    (105 + 10) / 115][Stage 178:====================================================>(113 + 2) / 115]                                                                                [Stage 179:=======================================>             (87 + 29) / 116][Stage 179:============================================>        (97 + 19) / 116][Stage 179:=================================================>   (108 + 8) / 116][Stage 179:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.975230147 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIn dex<=227", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=227,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388211307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 180:==========================>                          (60 + 61) / 121][Stage 180:================================>                    (75 + 46) / 121][Stage 180:=========================================>           (94 + 27) / 121][Stage 180:=================================================>   (112 + 9) / 121]                                                                                [Stage 181:==========================>                          (61 + 61) / 122][Stage 181:================================>                    (75 + 47) / 122][Stage 181:=========================================>           (96 + 26) / 122][Stage 181:=================================================>   (114 + 8) / 122][Stage 181:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.626769145 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIn dex<=110", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=110,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383856079 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 182:===================================>                 (78 + 37) / 115][Stage 182:=========================================>           (91 + 24) / 115][Stage 182:==============================================>     (103 + 12) / 115][Stage 182:====================================================>(113 + 2) / 115]                                                                                [Stage 183:===============================>                     (68 + 48) / 116][Stage 183:======================================>              (85 + 31) / 116][Stage 183:============================================>       (100 + 16) / 116][Stage 183:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.768292241 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIn dex<=107", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=107,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344904198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 184:=======================================>             (86 + 29) / 115][Stage 184:=============================================>       (99 + 16) / 115][Stage 184:=================================================>   (107 + 8) / 115][Stage 184:===================================================> (112 + 3) / 115]                                                                                [Stage 185:=======================================>             (87 + 29) / 116][Stage 185:=============================================>      (101 + 15) / 116][Stage 185:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.763118972 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZInd ex<=96", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=96,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356638543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 186:================================>                    (73 + 45) / 118][Stage 186:====================================>                (82 + 36) / 118][Stage 186:=========================================>           (93 + 25) / 118][Stage 186:===============================================>    (107 + 11) / 118][Stage 186:====================================================>(117 + 1) / 118]                                                                                [Stage 187:================================>                    (73 + 46) / 119][Stage 187:=================================>                   (75 + 44) / 119][Stage 187:========================================>            (91 + 28) / 119][Stage 187:=============================================>      (104 + 15) / 119][Stage 187:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.364043466 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZInd ex<=29", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=29,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353389936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 188:===================================>                 (75 + 38) / 113][Stage 188:=======================================>             (84 + 29) / 113][Stage 188:==============================================>      (99 + 14) / 113][Stage 188:==================================================>  (107 + 6) / 113][Stage 188:====================================================>(112 + 1) / 113]                                                                                [Stage 189:===================================>                 (77 + 37) / 114][Stage 189:======================================>              (83 + 31) / 114][Stage 189:===========================================>         (93 + 21) / 114][Stage 189:================================================>    (105 + 9) / 114][Stage 189:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.979249675 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIn dex<=176", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=176,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382056216 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 190:===========================>                         (58 + 55) / 113][Stage 190:==============================>                      (64 + 49) / 113][Stage 190:=====================================>               (80 + 33) / 113][Stage 190:==============================================>      (99 + 14) / 113][Stage 190:====================================================>(111 + 2) / 113]                                                                                [Stage 191:===========================>                         (59 + 55) / 114][Stage 191:==============================>                      (66 + 48) / 114][Stage 191:======================================>              (82 + 32) / 114][Stage 191:===============================================>    (104 + 10) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.403512335 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIn dex<=209", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391834117 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 192:==========================>                          (61 + 60) / 121][Stage 192:================================>                    (74 + 47) / 121][Stage 192:=======================================>             (91 + 30) / 121][Stage 192:=================================================>   (112 + 9) / 121][Stage 192:====================================================>(120 + 1) / 121]                                                                                [Stage 193:==========================>                          (61 + 61) / 122][Stage 193:=============================>                       (68 + 54) / 122][Stage 193:======================================>              (88 + 34) / 122][Stage 193:==================================================>  (117 + 5) / 122][Stage 193:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.456535349 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZInd ex<=63", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414122044 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 194:==========================>                          (60 + 60) / 120][Stage 194:================================>                    (73 + 47) / 120][Stage 194:====================================>                (83 + 37) / 120][Stage 194:=============================================>      (105 + 15) / 120][Stage 194:====================================================>(118 + 2) / 120]                                                                                [Stage 195:==========================>                          (61 + 60) / 121][Stage 195:==============================>                      (69 + 52) / 121][Stage 195:=====================================>               (86 + 35) / 121][Stage 195:===============================================>    (110 + 11) / 121][Stage 195:====================================================>(119 + 2) / 121][Stage 195:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.817419464 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZInd ex<=100", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374337021 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 196:===========================>                         (58 + 55) / 113][Stage 196:==============================>                      (64 + 49) / 113][Stage 196:========================================>            (86 + 27) / 113][Stage 196:==============================================>     (100 + 13) / 113][Stage 196:====================================================>(111 + 2) / 113]                                                                                [Stage 197:===========================>                         (60 + 54) / 114][Stage 197:=================================>                   (72 + 42) / 114][Stage 197:=========================================>           (89 + 25) / 114][Stage 197:==============================================>     (103 + 11) / 114][Stage 197:===================================================> (111 + 3) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.555776601 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIn dex<=228", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=228,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392540699 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 198:=============================>                       (65 + 50) / 115][Stage 198:====================================>                (79 + 36) / 115][Stage 198:=======================================>             (86 + 29) / 115][Stage 198:===============================================>    (105 + 10) / 115][Stage 198:====================================================>(113 + 2) / 115]                                                                                [Stage 199:================================>                    (71 + 45) / 116][Stage 199:=========================================>           (91 + 25) / 116][Stage 199:==============================================>     (103 + 13) / 116][Stage 199:====================================================>(114 + 2) / 116][Stage 199:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.139356995 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZInd ex<=35", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=35,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332455434 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 200:=====================================>               (82 + 33) / 115][Stage 200:=========================================>           (89 + 26) / 115][Stage 200:=============================================>      (101 + 14) / 115][Stage 200:===================================================> (112 + 3) / 115]                                                                                [Stage 201:======================================>              (84 + 32) / 116][Stage 201:=============================================>       (99 + 17) / 116][Stage 201:=================================================>   (109 + 7) / 116][Stage 201:===================================================> (113 + 3) / 116][Stage 201:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.866729716 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/25 03:31:53 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.31:54802) dropped. RpcEnv already stopped.
17/05/25 03:31:53 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.15:40396) dropped. RpcEnv already stopped.
17/05/25 03:31:53 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.25:34394) dropped. RpcEnv already stopped.
17/05/25 03:31:53 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.39:35974) dropped. RpcEnv already stopped.
17/05/25 03:31:53 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.25:34400) dropped. RpcEnv already stopped.
17/05/25 03:31:53 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.25:34394) dropped. RpcEnv already stopped.
17/05/25 03:31:53 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.15:40396) dropped. RpcEnv already stopped.
17/05/25 03:31:53 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.31:54802) dropped. RpcEnv already stopped.
17/05/25 03:31:53 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.25:34400) dropped. RpcEnv already stopped.

real	10m32.037s
user	12m11.040s
sys	0m54.964s
