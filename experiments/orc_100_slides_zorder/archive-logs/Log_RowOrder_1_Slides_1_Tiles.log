Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 14:12:03 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 14:12:17 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 14:12:17 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 14:12:18 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 14:12:20 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 14:12:30 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524141219-0555).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.398558671 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:========================>                              (52 + 63) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:=====================================>                 (79 + 36) / 115][Stage 0:=========================================>             (86 + 29) / 115][Stage 0:============================================>          (94 + 21) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:============================>                          (60 + 56) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:=======================================>               (84 + 32) / 116][Stage 1:==============================================>        (98 + 18) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:====================================================>  (110 + 6) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.676544074 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.866710221 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==================>                                    (39 + 74) / 113][Stage 2:========================>                              (50 + 63) / 113][Stage 2:=========================>                             (53 + 60) / 113][Stage 2:==========================>                            (55 + 58) / 113][Stage 2:===============================>                       (65 + 48) / 113][Stage 2:====================================>                  (74 + 39) / 113][Stage 2:============================================>          (91 + 22) / 113][Stage 2:================================================>     (102 + 11) / 113][Stage 2:===================================================>   (106 + 7) / 113][Stage 2:=====================================================> (109 + 4) / 113]                                                                                [Stage 3:===========================>                           (57 + 57) / 114][Stage 3:============================>                          (60 + 54) / 114][Stage 3:================================>                      (67 + 47) / 114][Stage 3:======================================>                (79 + 35) / 114][Stage 3:===========================================>           (90 + 24) / 114][Stage 3:===============================================>       (99 + 15) / 114][Stage 3:=====================================================> (110 + 4) / 114][Stage 3:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 5.00623299 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.690091544 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==========================>                            (55 + 58) / 113][Stage 4:============================>                          (58 + 55) / 113][Stage 4:============================>                          (59 + 54) / 113][Stage 4:==================================>                    (70 + 43) / 113][Stage 4:=====================================>                 (77 + 36) / 113][Stage 4:===============================================>       (97 + 16) / 113][Stage 4:=====================================================> (110 + 3) / 113]                                                                                [Stage 5:===========================>                           (57 + 57) / 114][Stage 5:=============================>                         (62 + 52) / 114][Stage 5:====================================>                  (75 + 39) / 114][Stage 5:=========================================>             (86 + 28) / 114][Stage 5:================================================>     (103 + 11) / 114][Stage 5:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.996601177 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.690070588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (56 + 57) / 113][Stage 6:============================>                          (58 + 55) / 113][Stage 6:===============================>                       (64 + 49) / 113][Stage 6:======================================>                (80 + 33) / 113][Stage 6:===========================================>           (90 + 23) / 113][Stage 6:=================================================>    (103 + 10) / 113][Stage 6:======================================================>(112 + 1) / 113]                                                                                [Stage 7:============================>                          (60 + 54) / 114][Stage 7:=============================>                         (62 + 52) / 114][Stage 7:=================================>                     (70 + 44) / 114][Stage 7:==========================================>            (89 + 25) / 114][Stage 7:================================================>     (102 + 12) / 114][Stage 7:====================================================>  (109 + 5) / 114][Stage 7:=====================================================> (110 + 4) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.212027193 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.641780553 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:============================>                          (58 + 55) / 113][Stage 8:=============================>                         (60 + 53) / 113][Stage 8:=================================>                     (69 + 44) / 113][Stage 8:=========================================>             (86 + 27) / 113][Stage 8:================================================>     (101 + 12) / 113][Stage 8:====================================================>  (108 + 5) / 113]                                                                                [Stage 9:============================>                          (59 + 55) / 114][Stage 9:==============================>                        (63 + 51) / 114][Stage 9:=====================================>                 (77 + 37) / 114][Stage 9:============================================>          (93 + 21) / 114][Stage 9:================================================>     (102 + 12) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.736921376 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.600717454 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (58 + 55) / 113][Stage 10:==================================>                   (72 + 41) / 113][Stage 10:=========================================>            (87 + 26) / 113][Stage 10:============================================>         (93 + 20) / 113][Stage 10:==================================================>   (106 + 7) / 113][Stage 10:====================================================> (110 + 3) / 113]                                                                                [Stage 11:============================>                         (60 + 54) / 114][Stage 11:=================================>                    (71 + 43) / 114][Stage 11:========================================>             (86 + 28) / 114][Stage 11:==============================================>      (100 + 14) / 114][Stage 11:=================================================>    (105 + 9) / 114][Stage 11:==================================================>   (107 + 7) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.155140729 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 196 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.566092372 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (58 + 55) / 113][Stage 12:============================>                         (59 + 54) / 113][Stage 12:================================>                     (67 + 46) / 113][Stage 12:===========================================>          (92 + 21) / 113][Stage 12:==================================================>   (105 + 8) / 113][Stage 12:====================================================> (110 + 3) / 113]                                                                                [Stage 13:============================>                         (61 + 53) / 114][Stage 13:=================================>                    (70 + 44) / 114][Stage 13:=====================================>                (79 + 35) / 114][Stage 13:===========================================>          (91 + 23) / 114][Stage 13:=================================================>    (105 + 9) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.711794812 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 203 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.540916325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (58 + 55) / 113][Stage 14:==============================>                       (63 + 50) / 113][Stage 14:====================================>                 (76 + 37) / 113][Stage 14:==============================================>       (97 + 16) / 113][Stage 14:===================================================>  (107 + 6) / 113]                                                                                [Stage 15:===========================>                          (59 + 55) / 114][Stage 15:==============================>                       (65 + 49) / 114][Stage 15:====================================>                 (78 + 36) / 114][Stage 15:=============================================>        (95 + 19) / 114][Stage 15:===================================================>  (109 + 5) / 114][Stage 15:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.537258062 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.511033339 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:============================>                         (60 + 53) / 113][Stage 16:================================>                     (69 + 44) / 113][Stage 16:===========================================>          (90 + 23) / 113][Stage 16:=================================================>    (104 + 9) / 113][Stage 16:=====================================================>(111 + 2) / 113]                                                                                [Stage 17:===========================>                          (59 + 55) / 114][Stage 17:=============================>                        (62 + 52) / 114][Stage 17:===================================>                  (75 + 39) / 114][Stage 17:============================================>         (93 + 21) / 114][Stage 17:===============================================>     (103 + 11) / 114][Stage 17:==================================================>   (106 + 8) / 114][Stage 17:====================================================> (111 + 3) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.842068243 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.532396094 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:============================>                         (60 + 53) / 113][Stage 18:=================================>                    (70 + 43) / 113][Stage 18:============================================>         (94 + 19) / 113][Stage 18:===================================================>  (107 + 6) / 113][Stage 18:=====================================================>(111 + 2) / 113]                                                                                [Stage 19:===========================>                          (59 + 55) / 114][Stage 19:==============================>                       (65 + 49) / 114][Stage 19:======================================>               (82 + 32) / 114][Stage 19:==============================================>      (101 + 13) / 114][Stage 19:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.630037165 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.503419748 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (58 + 55) / 113][Stage 20:==============================>                       (63 + 50) / 113][Stage 20:===========================================>          (91 + 22) / 113][Stage 20:================================================>    (103 + 10) / 113][Stage 20:====================================================> (109 + 4) / 113]                                                                                [Stage 21:===========================>                          (59 + 55) / 114][Stage 21:===============================>                      (67 + 47) / 114][Stage 21:========================================>             (86 + 28) / 114][Stage 21:================================================>    (104 + 10) / 114][Stage 21:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.422315563 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.519369044 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (57 + 56) / 113][Stage 22:============================>                         (60 + 53) / 113][Stage 22:================================>                     (67 + 46) / 113][Stage 22:=========================================>            (87 + 26) / 113][Stage 22:=================================================>    (104 + 9) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:============================>                         (60 + 54) / 114][Stage 23:===================================>                  (75 + 39) / 114][Stage 23:==============================================>       (98 + 16) / 114][Stage 23:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.174230054 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 53 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.507154951 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:============================>                         (59 + 54) / 113][Stage 24:=============================>                        (61 + 52) / 113][Stage 24:==================================>                   (73 + 40) / 113][Stage 24:=============================================>        (95 + 18) / 113][Stage 24:===================================================>  (107 + 6) / 113][Stage 24:=====================================================>(112 + 1) / 113]                                                                                [Stage 25:===========================>                          (59 + 55) / 114][Stage 25:==============================>                       (64 + 50) / 114][Stage 25:========================================>             (86 + 28) / 114][Stage 25:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.268437454 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476987305 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:============================>                         (60 + 53) / 113][Stage 26:================================>                     (69 + 44) / 113][Stage 26:========================================>             (85 + 28) / 113][Stage 26:==============================================>       (97 + 16) / 113][Stage 26:=====================================================>(112 + 1) / 113]                                                                                [Stage 27:===========================>                          (59 + 55) / 114][Stage 27:==============================>                       (65 + 49) / 114][Stage 27:=======================================>              (83 + 31) / 114][Stage 27:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.030099056 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474002129 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:=============================>                        (61 + 52) / 113][Stage 28:==============================>                       (64 + 49) / 113][Stage 28:========================================>             (85 + 28) / 113][Stage 28:================================================>    (103 + 10) / 113][Stage 28:====================================================> (110 + 3) / 113]                                                                                [Stage 29:============================>                         (60 + 54) / 114][Stage 29:===================================>                  (74 + 40) / 114][Stage 29:==========================================>           (90 + 24) / 114][Stage 29:==============================================>      (101 + 13) / 114][Stage 29:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.681391858 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483118928 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:============================>                         (59 + 54) / 113][Stage 30:===============================>                      (66 + 47) / 113][Stage 30:==========================================>           (88 + 25) / 113][Stage 30:================================================>    (103 + 10) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:=============================>                        (62 + 52) / 114][Stage 31:===================================>                  (74 + 40) / 114][Stage 31:=============================================>        (96 + 18) / 114][Stage 31:===================================================>  (109 + 5) / 114][Stage 31:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.438235022 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472513754 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (58 + 55) / 113][Stage 32:=============================>                        (61 + 52) / 113][Stage 32:====================================>                 (76 + 37) / 113][Stage 32:============================================>         (94 + 19) / 113][Stage 32:====================================================> (110 + 3) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:===========================>                          (59 + 55) / 114][Stage 33:===============================>                      (66 + 48) / 114][Stage 33:========================================>             (85 + 29) / 114][Stage 33:===============================================>     (102 + 12) / 114][Stage 33:====================================================> (110 + 4) / 114][Stage 33:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.662119242 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.471465397 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:============================>                         (59 + 54) / 113][Stage 34:===============================>                      (65 + 48) / 113][Stage 34:=====================================>                (79 + 34) / 113][Stage 34:===============================================>     (101 + 12) / 113][Stage 34:=====================================================>(111 + 2) / 113]                                                                                [Stage 35:============================>                         (61 + 53) / 114][Stage 35:====================================>                 (76 + 38) / 114][Stage 35:============================================>         (93 + 21) / 114][Stage 35:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.158648213 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.641317461 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (58 + 55) / 113][Stage 36:============================>                         (59 + 54) / 113][Stage 36:================================>                     (69 + 44) / 113][Stage 36:=========================================>            (87 + 26) / 113][Stage 36:==================================================>   (106 + 7) / 113][Stage 36:=====================================================>(111 + 2) / 113]                                                                                [Stage 37:===========================>                          (59 + 55) / 114][Stage 37:=============================>                        (63 + 51) / 114][Stage 37:==================================>                   (73 + 41) / 114][Stage 37:==============================================>      (100 + 14) / 114][Stage 37:====================================================> (111 + 3) / 114][Stage 37:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.414657502 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 20 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479982038 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:============================>                         (59 + 54) / 113][Stage 38:===============================>                      (66 + 47) / 113][Stage 38:==========================================>           (88 + 25) / 113][Stage 38:===================================================>  (108 + 5) / 113]                                                                                [Stage 39:===========================>                          (59 + 55) / 114][Stage 39:===============================>                      (66 + 48) / 114][Stage 39:======================================>               (81 + 33) / 114][Stage 39:==============================================>       (98 + 16) / 114][Stage 39:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.026115528 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494782436 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:>                                                       (0 + 0) / 113][Stage 40:===========================>                          (58 + 55) / 113][Stage 40:=============================>                        (62 + 51) / 113][Stage 40:=====================================>                (78 + 35) / 113][Stage 40:================================================>    (103 + 10) / 113]                                                                                [Stage 41:=============================>                        (62 + 52) / 114][Stage 41:====================================>                 (78 + 36) / 114][Stage 41:============================================>         (94 + 20) / 114][Stage 41:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.009956968 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 118 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447533613 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:============================>                         (59 + 54) / 113][Stage 42:==============================>                       (64 + 49) / 113][Stage 42:========================================>             (84 + 29) / 113][Stage 42:==================================================>   (105 + 8) / 113][Stage 42:=====================================================>(111 + 2) / 113]                                                                                [Stage 43:===========================>                          (59 + 55) / 114][Stage 43:==============================>                       (65 + 49) / 114][Stage 43:========================================>             (85 + 29) / 114][Stage 43:===============================================>     (103 + 11) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.151772235 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437983018 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:>                                                       (0 + 0) / 113][Stage 44:============================>                         (59 + 54) / 113][Stage 44:==============================>                       (64 + 49) / 113][Stage 44:=========================================>            (87 + 26) / 113][Stage 44:================================================>    (103 + 10) / 113][Stage 44:=====================================================>(111 + 2) / 113][Stage 44:=====================================================>(112 + 1) / 113]                                                                                [Stage 45:===========================>                          (59 + 55) / 114][Stage 45:===============================>                      (67 + 47) / 114][Stage 45:=====================================>                (80 + 34) / 114][Stage 45:==============================================>      (100 + 14) / 114][Stage 45:====================================================> (111 + 3) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.491346862 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451468917 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:=============================>                        (61 + 52) / 113][Stage 46:=================================>                    (71 + 42) / 113][Stage 46:===========================================>          (91 + 22) / 113][Stage 46:==================================================>   (106 + 7) / 113]                                                                                [Stage 47:============================>                         (61 + 53) / 114][Stage 47:=================================>                    (71 + 43) / 114][Stage 47:===========================================>          (92 + 22) / 114][Stage 47:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.987430277 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 230 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449564659 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:============================>                         (59 + 54) / 113][Stage 48:=============================>                        (61 + 52) / 113][Stage 48:=====================================>                (79 + 34) / 113][Stage 48:================================================>    (103 + 10) / 113][Stage 48:=====================================================>(112 + 1) / 113]                                                                                [Stage 49:============================>                         (61 + 53) / 114][Stage 49:==================================>                   (72 + 42) / 114][Stage 49:==========================================>           (89 + 25) / 114][Stage 49:==================================================>   (106 + 8) / 114][Stage 49:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.229599696 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426058049 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (58 + 55) / 113][Stage 50:=================================>                    (70 + 43) / 113][Stage 50:=========================================>            (87 + 26) / 113][Stage 50:====================================================> (109 + 4) / 113]                                                                                [Stage 51:===========================>                          (59 + 55) / 114][Stage 51:==============================>                       (64 + 50) / 114][Stage 51:=======================================>              (83 + 31) / 114][Stage 51:==============================================>      (100 + 14) / 114][Stage 51:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.878277798 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 87 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422799832 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (58 + 55) / 113][Stage 52:============================>                         (60 + 53) / 113][Stage 52:================================>                     (67 + 46) / 113][Stage 52:=======================================>              (83 + 30) / 113][Stage 52:=================================================>    (104 + 9) / 113][Stage 52:=====================================================>(111 + 2) / 113]                                                                                [Stage 53:===========================>                          (59 + 55) / 114][Stage 53:==============================>                       (65 + 49) / 114][Stage 53:=======================================>              (84 + 30) / 114][Stage 53:==============================================>      (100 + 14) / 114][Stage 53:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.218626568 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446005946 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:============================>                         (59 + 54) / 113][Stage 54:===============================>                      (65 + 48) / 113][Stage 54:=========================================>            (87 + 26) / 113][Stage 54:=================================================>    (104 + 9) / 113][Stage 54:====================================================> (110 + 3) / 113]                                                                                [Stage 55:============================>                         (60 + 54) / 114][Stage 55:================================>                     (69 + 45) / 114][Stage 55:=========================================>            (87 + 27) / 114][Stage 55:=================================================>    (105 + 9) / 114][Stage 55:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.254756152 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423093915 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:============================>                         (60 + 53) / 113][Stage 56:==================================>                   (73 + 40) / 113][Stage 56:============================================>         (93 + 20) / 113][Stage 56:=====================================================>(111 + 2) / 113]                                                                                [Stage 57:============================>                         (60 + 54) / 114][Stage 57:=================================>                    (70 + 44) / 114][Stage 57:============================================>         (93 + 21) / 114][Stage 57:====================================================> (110 + 4) / 114][Stage 57:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.162095614 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443094652 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (58 + 55) / 113][Stage 58:==============================>                       (63 + 50) / 113][Stage 58:========================================>             (84 + 29) / 113][Stage 58:===================================================>  (107 + 6) / 113]                                                                                [Stage 59:============================>                         (61 + 53) / 114][Stage 59:==================================>                   (73 + 41) / 114][Stage 59:=============================================>        (95 + 19) / 114][Stage 59:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.034789704 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427932538 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (58 + 55) / 113][Stage 60:============================>                         (59 + 54) / 113][Stage 60:=====================================>                (79 + 34) / 113][Stage 60:===========================================>          (90 + 23) / 113][Stage 60:==================================================>   (106 + 7) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:===========================>                          (59 + 55) / 114][Stage 61:============================>                         (61 + 53) / 114][Stage 61:======================================>               (82 + 32) / 114][Stage 61:=============================================>        (97 + 17) / 114][Stage 61:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.259405795 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439648476 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (58 + 55) / 113][Stage 62:============================>                         (59 + 54) / 113][Stage 62:====================================>                 (76 + 37) / 113][Stage 62:==============================================>       (97 + 16) / 113][Stage 62:===================================================>  (107 + 6) / 113]                                                                                [Stage 63:============================>                         (60 + 54) / 114][Stage 63:===============================>                      (67 + 47) / 114][Stage 63:=====================================>                (80 + 34) / 114][Stage 63:==============================================>       (99 + 15) / 114][Stage 63:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.319507153 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43552892 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (58 + 55) / 113][Stage 64:=============================>                        (61 + 52) / 113][Stage 64:====================================>                 (77 + 36) / 113][Stage 64:===============================================>      (99 + 14) / 113][Stage 64:====================================================> (110 + 3) / 113]                                                                                [Stage 65:============================>                         (60 + 54) / 114][Stage 65:============================>                         (61 + 53) / 114][Stage 65:=====================================>                (79 + 35) / 114][Stage 65:==============================================>      (100 + 14) / 114][Stage 65:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.158857812 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 58 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452640377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:============================>                         (59 + 54) / 113][Stage 66:=============================>                        (61 + 52) / 113][Stage 66:===================================>                  (75 + 38) / 113][Stage 66:==============================================>       (98 + 15) / 113][Stage 66:====================================================> (110 + 3) / 113][Stage 66:=====================================================>(112 + 1) / 113]                                                                                [Stage 67:===========================>                          (59 + 55) / 114][Stage 67:=============================>                        (63 + 51) / 114][Stage 67:===================================>                  (75 + 39) / 114][Stage 67:================================================>    (104 + 10) / 114][Stage 67:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.234775526 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428553065 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (58 + 55) / 113][Stage 68:==============================>                       (63 + 50) / 113][Stage 68:====================================>                 (77 + 36) / 113][Stage 68:===============================================>     (101 + 12) / 113][Stage 68:====================================================> (109 + 4) / 113][Stage 68:=====================================================>(112 + 1) / 113]                                                                                [Stage 69:===========================>                          (59 + 55) / 114][Stage 69:==============================>                       (65 + 49) / 114][Stage 69:========================================>             (85 + 29) / 114][Stage 69:==================================================>   (107 + 7) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.401972137 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 109 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441286104 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (59 + 54) / 113][Stage 70:===============================>                      (65 + 48) / 113][Stage 70:===================================>                  (74 + 39) / 113][Stage 70:============================================>         (93 + 20) / 113][Stage 70:====================================================> (109 + 4) / 113]                                                                                [Stage 71:=============================>                        (63 + 51) / 114][Stage 71:=================================>                    (70 + 44) / 114][Stage 71:=========================================>            (88 + 26) / 114][Stage 71:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.159815456 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 236 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 236 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.509023568 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (59 + 54) / 113][Stage 72:=============================>                        (62 + 51) / 113][Stage 72:=====================================>                (78 + 35) / 113][Stage 72:=============================================>        (96 + 17) / 113][Stage 72:====================================================> (109 + 4) / 113]                                                                                [Stage 73:===========================>                          (59 + 55) / 114][Stage 73:=============================>                        (63 + 51) / 114][Stage 73:====================================>                 (77 + 37) / 114][Stage 73:===============================================>     (102 + 12) / 114]                                                                                Time elapsed: 2.948526123 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 24 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411055696 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:============================>                         (59 + 54) / 113][Stage 74:==============================>                       (63 + 50) / 113][Stage 74:========================================>             (85 + 28) / 113][Stage 74:==================================================>   (106 + 7) / 113][Stage 74:====================================================> (110 + 3) / 113]                                                                                [Stage 75:=============================>                        (63 + 51) / 114][Stage 75:=====================================>                (79 + 35) / 114][Stage 75:==============================================>       (98 + 16) / 114][Stage 75:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.115819973 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414756496 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (58 + 55) / 113][Stage 76:=============================>                        (61 + 52) / 113][Stage 76:===================================>                  (74 + 39) / 113][Stage 76:============================================>         (94 + 19) / 113][Stage 76:===================================================>  (108 + 5) / 113]                                                                                [Stage 77:============================>                         (60 + 54) / 114][Stage 77:=============================>                        (63 + 51) / 114][Stage 77:========================================>             (86 + 28) / 114][Stage 77:================================================>    (104 + 10) / 114][Stage 77:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.004671514 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44589227 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (60 + 53) / 113][Stage 78:===============================>                      (65 + 48) / 113][Stage 78:========================================>             (84 + 29) / 113][Stage 78:===================================================>  (108 + 5) / 113][Stage 78:=====================================================>(112 + 1) / 113]                                                                                [Stage 79:===========================>                          (59 + 55) / 114][Stage 79:===============================>                      (67 + 47) / 114][Stage 79:==========================================>           (90 + 24) / 114][Stage 79:===================================================>  (108 + 6) / 114][Stage 79:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.071556492 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408454621 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (58 + 55) / 113][Stage 80:============================>                         (60 + 53) / 113][Stage 80:=================================>                    (71 + 42) / 113][Stage 80:============================================>         (93 + 20) / 113][Stage 80:=====================================================>(111 + 2) / 113]                                                                                [Stage 81:===========================>                          (59 + 55) / 114][Stage 81:============================>                         (61 + 53) / 114][Stage 81:======================================>               (81 + 33) / 114][Stage 81:==============================================>       (98 + 16) / 114][Stage 81:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.165250623 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411344683 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:============================>                         (60 + 53) / 113][Stage 82:==================================>                   (73 + 40) / 113][Stage 82:===========================================>          (90 + 23) / 113][Stage 82:====================================================> (110 + 3) / 113][Stage 82:=====================================================>(112 + 1) / 113]                                                                                [Stage 83:=============================>                        (62 + 52) / 114][Stage 83:===================================>                  (75 + 39) / 114][Stage 83:============================================>         (93 + 21) / 114][Stage 83:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.158629478 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406476906 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (58 + 55) / 113][Stage 84:==============================>                       (63 + 50) / 113][Stage 84:====================================>                 (77 + 36) / 113][Stage 84:==============================================>       (97 + 16) / 113][Stage 84:====================================================> (110 + 3) / 113]                                                                                [Stage 85:============================>                         (60 + 54) / 114][Stage 85:===============================>                      (66 + 48) / 114][Stage 85:=======================================>              (84 + 30) / 114][Stage 85:===============================================>     (103 + 11) / 114]                                                                                Time elapsed: 3.105900664 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403970687 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (58 + 55) / 113][Stage 86:================================>                     (67 + 46) / 113][Stage 86:==============================================>       (98 + 15) / 113][Stage 86:=====================================================>(111 + 2) / 113]                                                                                [Stage 87:=============================>                        (62 + 52) / 114][Stage 87:====================================>                 (77 + 37) / 114][Stage 87:==========================================>           (90 + 24) / 114][Stage 87:==================================================>   (107 + 7) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.123392893 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410541308 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:=============================>                        (61 + 52) / 113][Stage 88:======================================>               (80 + 33) / 113][Stage 88:==================================================>   (106 + 7) / 113]                                                                                [Stage 89:=============================>                        (62 + 52) / 114][Stage 89:=================================>                    (71 + 43) / 114][Stage 89:===========================================>          (91 + 23) / 114][Stage 89:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 2.92479979 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406578671 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (60 + 53) / 113][Stage 90:=================================>                    (71 + 42) / 113][Stage 90:===========================================>          (90 + 23) / 113][Stage 90:===================================================>  (108 + 5) / 113][Stage 90:=====================================================>(112 + 1) / 113]                                                                                [Stage 91:===========================>                          (58 + 56) / 114][Stage 91:===============================>                      (66 + 48) / 114][Stage 91:=========================================>            (87 + 27) / 114][Stage 91:=================================================>    (105 + 9) / 114][Stage 91:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.052925815 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 170 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394844875 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:============================>                         (60 + 53) / 113][Stage 92:==================================>                   (72 + 41) / 113][Stage 92:===========================================>          (90 + 23) / 113][Stage 92:=====================================================>(111 + 2) / 113]                                                                                [Stage 93:============================>                         (60 + 54) / 114][Stage 93:==================================>                   (72 + 42) / 114][Stage 93:==============================================>      (100 + 14) / 114][Stage 93:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.909747038 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404288935 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:============================>                         (59 + 54) / 113][Stage 94:===============================>                      (66 + 47) / 113][Stage 94:=====================================>                (78 + 35) / 113][Stage 94:==================================================>   (105 + 8) / 113][Stage 94:====================================================> (109 + 4) / 113]                                                                                [Stage 95:=============================>                        (62 + 52) / 114][Stage 95:================================>                     (69 + 45) / 114][Stage 95:=============================================>        (97 + 17) / 114][Stage 95:===================================================>  (109 + 5) / 114][Stage 95:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.229472963 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400450897 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:============================>                         (59 + 54) / 113][Stage 96:================================>                     (67 + 46) / 113][Stage 96:======================================>               (80 + 33) / 113][Stage 96:================================================>    (103 + 10) / 113]                                                                                [Stage 97:============================>                         (60 + 54) / 114][Stage 97:===============================>                      (67 + 47) / 114][Stage 97:===========================================>          (91 + 23) / 114][Stage 97:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.954441374 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3928158 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:============================>                         (60 + 53) / 113][Stage 98:=================================>                    (71 + 42) / 113][Stage 98:===========================================>          (91 + 22) / 113][Stage 98:================================================>    (103 + 10) / 113][Stage 98:=====================================================>(112 + 1) / 113]                                                                                [Stage 99:============================>                         (60 + 54) / 114][Stage 99:==============================>                       (65 + 49) / 114][Stage 99:========================================>             (86 + 28) / 114][Stage 99:==================================================>   (106 + 8) / 114][Stage 99:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.211702855 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 88 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389353922 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (58 + 55) / 113][Stage 100:============================>                        (61 + 52) / 113][Stage 100:===================================>                 (75 + 38) / 113][Stage 100:===========================================>         (92 + 21) / 113][Stage 100:==================================================>  (108 + 5) / 113][Stage 100:====================================================>(111 + 2) / 113]                                                                                [Stage 101:=============================>                       (63 + 51) / 114][Stage 101:====================================>                (79 + 35) / 114][Stage 101:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.033000063 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399016923 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (58 + 55) / 113][Stage 102:============================>                        (61 + 52) / 113][Stage 102:=================================>                   (72 + 41) / 113][Stage 102:==========================================>          (91 + 22) / 113][Stage 102:=================================================>   (106 + 7) / 113][Stage 102:====================================================>(112 + 1) / 113]                                                                                [Stage 103:============================>                        (62 + 52) / 114][Stage 103:====================================>                (78 + 36) / 114][Stage 103:==============================================>     (101 + 13) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.159555212 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384971767 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:============================>                        (60 + 53) / 113][Stage 104:===============================>                     (67 + 46) / 113][Stage 104:=======================================>             (84 + 29) / 113][Stage 104:===================================================> (109 + 4) / 113]                                                                                [Stage 105:============================>                        (62 + 52) / 114][Stage 105:==================================>                  (74 + 40) / 114][Stage 105:===========================================>         (93 + 21) / 114][Stage 105:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.97485426 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.516693084 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (59 + 54) / 113][Stage 106:================================>                    (69 + 44) / 113][Stage 106:===========================================>         (93 + 20) / 113][Stage 106:===================================================> (109 + 4) / 113]                                                                                [Stage 107:===========================>                         (59 + 55) / 114][Stage 107:==============================>                      (66 + 48) / 114][Stage 107:====================================>                (79 + 35) / 114][Stage 107:==============================================>     (101 + 13) / 114]                                                                                Time elapsed: 2.818825781 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38528287 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:============================>                        (60 + 53) / 113][Stage 108:================================>                    (69 + 44) / 113][Stage 108:=======================================>             (85 + 28) / 113][Stage 108:=================================================>   (106 + 7) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:===========================>                         (60 + 54) / 114][Stage 109:===============================>                     (68 + 46) / 114][Stage 109:======================================>              (83 + 31) / 114][Stage 109:=================================================>   (106 + 8) / 114][Stage 109:===================================================> (111 + 3) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.308549825 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385550312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (59 + 54) / 113][Stage 110:==============================>                      (66 + 47) / 113][Stage 110:=======================================>             (85 + 28) / 113][Stage 110:==================================================>  (108 + 5) / 113][Stage 110:====================================================>(112 + 1) / 113]                                                                                [Stage 111:===========================>                         (59 + 55) / 114][Stage 111:===============================>                     (67 + 47) / 114][Stage 111:========================================>            (87 + 27) / 114][Stage 111:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.014640831 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 19 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391061092 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (58 + 55) / 113][Stage 112:============================>                        (60 + 53) / 113][Stage 112:===================================>                 (75 + 38) / 113][Stage 112:==============================================>      (99 + 14) / 113]                                                                                [Stage 113:============================>                        (61 + 53) / 114][Stage 113:================================>                    (70 + 44) / 114][Stage 113:======================================>              (83 + 31) / 114][Stage 113:================================================>    (105 + 9) / 114][Stage 113:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.106068548 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379460956 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (58 + 55) / 113][Stage 114:================================>                    (70 + 43) / 113][Stage 114:=======================================>             (84 + 29) / 113][Stage 114:=================================================>   (106 + 7) / 113]                                                                                [Stage 115:===========================>                         (60 + 54) / 114][Stage 115:==============================>                      (65 + 49) / 114][Stage 115:=======================================>             (86 + 28) / 114][Stage 115:===============================================>    (104 + 10) / 114][Stage 115:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.877407559 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396049055 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (58 + 55) / 113][Stage 116:============================>                        (60 + 53) / 113][Stage 116:======================================>              (83 + 30) / 113][Stage 116:=============================================>       (96 + 17) / 113]                                                                                [Stage 117:===========================>                         (60 + 54) / 114][Stage 117:================================>                    (69 + 45) / 114][Stage 117:=========================================>           (90 + 24) / 114][Stage 117:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.839505277 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400550515 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (59 + 54) / 113][Stage 118:=============================>                       (63 + 50) / 113][Stage 118:===================================>                 (76 + 37) / 113][Stage 118:==============================================>     (100 + 13) / 113][Stage 118:===================================================> (110 + 3) / 113]                                                                                [Stage 119:============================>                        (61 + 53) / 114][Stage 119:==================================>                  (74 + 40) / 114][Stage 119:=============================================>      (100 + 14) / 114][Stage 119:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.102299066 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397983418 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (59 + 54) / 113][Stage 120:==============================>                      (65 + 48) / 113][Stage 120:======================================>              (82 + 31) / 113][Stage 120:================================================>    (104 + 9) / 113][Stage 120:====================================================>(111 + 2) / 113]                                                                                [Stage 121:=============================>                       (64 + 50) / 114][Stage 121:=====================================>               (80 + 34) / 114][Stage 121:===============================================>    (104 + 10) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.980134038 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382714122 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (58 + 55) / 113][Stage 122:===============================>                     (67 + 46) / 113][Stage 122:========================================>            (86 + 27) / 113][Stage 122:===============================================>    (103 + 10) / 113]                                                                                [Stage 123:==============================>                      (66 + 48) / 114][Stage 123:=======================================>             (85 + 29) / 114][Stage 123:================================================>    (105 + 9) / 114][Stage 123:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.937734857 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497595046 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (59 + 54) / 113][Stage 124:==============================>                      (65 + 48) / 113][Stage 124:====================================>                (77 + 36) / 113][Stage 124:=============================================>       (98 + 15) / 113][Stage 124:===================================================> (110 + 3) / 113]                                                                                [Stage 125:============================>                        (61 + 53) / 114][Stage 125:=================================>                   (71 + 43) / 114][Stage 125:==========================================>          (91 + 23) / 114][Stage 125:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.133816881 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395555503 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (59 + 54) / 113][Stage 126:=================================>                   (72 + 41) / 113][Stage 126:===========================================>         (92 + 21) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:===========================>                         (60 + 54) / 114][Stage 127:=============================>                       (64 + 50) / 114][Stage 127:===========================================>         (93 + 21) / 114][Stage 127:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.982410575 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393957065 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (59 + 54) / 113][Stage 128:============================>                        (60 + 53) / 113][Stage 128:===================================>                 (75 + 38) / 113][Stage 128:==============================================>     (100 + 13) / 113][Stage 128:===================================================> (109 + 4) / 113]                                                                                [Stage 129:============================>                        (62 + 52) / 114][Stage 129:================================>                    (70 + 44) / 114][Stage 129:==============================================>      (99 + 15) / 114][Stage 129:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.03194178 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 101 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382880327 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (59 + 54) / 113][Stage 130:==============================>                      (66 + 47) / 113][Stage 130:====================================>                (78 + 35) / 113][Stage 130:=============================================>       (97 + 16) / 113][Stage 130:====================================================>(111 + 2) / 113]                                                                                [Stage 131:============================>                        (61 + 53) / 114][Stage 131:=================================>                   (73 + 41) / 114][Stage 131:==========================================>          (91 + 23) / 114][Stage 131:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.156224357 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388259969 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (59 + 54) / 113][Stage 132:===============================>                     (67 + 46) / 113][Stage 132:=====================================>               (81 + 32) / 113][Stage 132:===================================================> (110 + 3) / 113]                                                                                [Stage 133:============================>                        (62 + 52) / 114][Stage 133:===================================>                 (77 + 37) / 114][Stage 133:===============================================>    (104 + 10) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.941330097 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38616521 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (58 + 55) / 113][Stage 134:============================>                        (60 + 53) / 113][Stage 134:====================================>                (77 + 36) / 113][Stage 134:================================================>    (104 + 9) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:============================>                        (61 + 53) / 114][Stage 135:===================================>                 (77 + 37) / 114][Stage 135:=============================================>       (97 + 17) / 114][Stage 135:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.047646495 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385672713 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (58 + 55) / 113][Stage 136:==============================>                      (66 + 47) / 113][Stage 136:=======================================>             (84 + 29) / 113][Stage 136:================================================>    (104 + 9) / 113][Stage 136:====================================================>(111 + 2) / 113]                                                                                [Stage 137:============================>                        (61 + 53) / 114][Stage 137:====================================>                (78 + 36) / 114][Stage 137:==============================================>     (103 + 11) / 114][Stage 137:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.084988903 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384146654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (58 + 55) / 113][Stage 138:=============================>                       (63 + 50) / 113][Stage 138:=====================================>               (81 + 32) / 113][Stage 138:==============================================>     (102 + 11) / 113]                                                                                [Stage 139:===========================>                         (60 + 54) / 114][Stage 139:=================================>                   (72 + 42) / 114][Stage 139:===========================================>         (94 + 20) / 114][Stage 139:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.906929377 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382807315 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (58 + 55) / 113][Stage 140:===============================>                     (67 + 46) / 113][Stage 140:======================================>              (83 + 30) / 113][Stage 140:=================================================>   (106 + 7) / 113][Stage 140:====================================================>(111 + 2) / 113]                                                                                [Stage 141:===========================>                         (60 + 54) / 114][Stage 141:=================================>                   (71 + 43) / 114][Stage 141:==========================================>          (92 + 22) / 114][Stage 141:=================================================>   (107 + 7) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.173934898 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486250045 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:============================>                        (61 + 52) / 113][Stage 142:===============================>                     (67 + 46) / 113][Stage 142:=======================================>             (85 + 28) / 113][Stage 142:===============================================>    (103 + 10) / 113][Stage 142:====================================================>(111 + 2) / 113]                                                                                [Stage 143:===========================>                         (59 + 55) / 114][Stage 143:==============================>                      (65 + 49) / 114][Stage 143:=========================================>           (89 + 25) / 114][Stage 143:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.952736556 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384310279 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (58 + 55) / 113][Stage 144:=============================>                       (63 + 50) / 113][Stage 144:======================================>              (82 + 31) / 113][Stage 144:==============================================>     (100 + 13) / 113][Stage 144:===================================================> (109 + 4) / 113]                                                                                [Stage 145:===========================>                         (59 + 55) / 114][Stage 145:==============================>                      (66 + 48) / 114][Stage 145:==========================================>          (91 + 23) / 114][Stage 145:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.096264552 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38701876 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (59 + 54) / 113][Stage 146:=============================>                       (63 + 50) / 113][Stage 146:===================================>                 (75 + 38) / 113][Stage 146:===============================================>    (103 + 10) / 113][Stage 146:====================================================>(111 + 2) / 113]                                                                                [Stage 147:===========================>                         (59 + 55) / 114][Stage 147:===============================>                     (68 + 46) / 114][Stage 147:=======================================>             (86 + 28) / 114][Stage 147:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.029512752 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380668782 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:============================>                        (60 + 53) / 113][Stage 148:===============================>                     (68 + 45) / 113][Stage 148:=======================================>             (85 + 28) / 113][Stage 148:=================================================>   (106 + 7) / 113]                                                                                [Stage 149:===========================>                         (60 + 54) / 114][Stage 149:=================================>                   (71 + 43) / 114][Stage 149:========================================>            (87 + 27) / 114][Stage 149:==================================================>  (109 + 5) / 114][Stage 149:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.088062858 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 228 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385237543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:============================>                        (60 + 53) / 113][Stage 150:================================>                    (69 + 44) / 113][Stage 150:==========================================>          (91 + 22) / 113][Stage 150:===================================================> (110 + 3) / 113]                                                                                [Stage 151:=============================>                       (64 + 50) / 114][Stage 151:==================================>                  (74 + 40) / 114][Stage 151:=============================================>       (98 + 16) / 114][Stage 151:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.870926831 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387246544 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:============================>                        (60 + 53) / 113][Stage 152:===============================>                     (68 + 45) / 113][Stage 152:==========================================>          (90 + 23) / 113][Stage 152:===================================================> (110 + 3) / 113]                                                                                [Stage 153:============================>                        (62 + 52) / 114][Stage 153:=================================>                   (71 + 43) / 114][Stage 153:==========================================>          (91 + 23) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.051794686 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 23 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 23 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393374145 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===========================>                         (58 + 55) / 113][Stage 154:=============================>                       (62 + 51) / 113][Stage 154:===================================>                 (75 + 38) / 113][Stage 154:==============================================>      (99 + 14) / 113][Stage 154:===================================================> (110 + 3) / 113]                                                                                [Stage 155:===========================>                         (60 + 54) / 114][Stage 155:==============================>                      (66 + 48) / 114][Stage 155:=========================================>           (90 + 24) / 114][Stage 155:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.099616554 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383422787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (59 + 54) / 113][Stage 156:=============================>                       (62 + 51) / 113][Stage 156:==================================>                  (74 + 39) / 113][Stage 156:=============================================>       (97 + 16) / 113][Stage 156:===================================================> (110 + 3) / 113]                                                                                [Stage 157:===========================>                         (59 + 55) / 114][Stage 157:===============================>                     (68 + 46) / 114][Stage 157:=========================================>           (89 + 25) / 114][Stage 157:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.81220347 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384501309 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (58 + 55) / 113][Stage 158:==============================>                      (66 + 47) / 113][Stage 158:========================================>            (86 + 27) / 113][Stage 158:===============================================>    (103 + 10) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:============================>                        (61 + 53) / 114][Stage 159:==============================>                      (65 + 49) / 114][Stage 159:=====================================>               (81 + 33) / 114][Stage 159:==============================================>     (103 + 11) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.094099199 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393523871 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (59 + 54) / 113][Stage 160:=============================>                       (62 + 51) / 113][Stage 160:==================================>                  (73 + 40) / 113][Stage 160:================================================>    (104 + 9) / 113][Stage 160:====================================================>(112 + 1) / 113]                                                                                [Stage 161:===========================>                         (59 + 55) / 114][Stage 161:==============================>                      (66 + 48) / 114][Stage 161:======================================>              (83 + 31) / 114][Stage 161:==============================================>     (102 + 12) / 114][Stage 161:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.022009977 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391709192 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (58 + 55) / 113][Stage 162:===============================>                     (67 + 46) / 113][Stage 162:==========================================>          (90 + 23) / 113][Stage 162:====================================================>(111 + 2) / 113]                                                                                [Stage 163:===========================>                         (60 + 54) / 114][Stage 163:==============================>                      (66 + 48) / 114][Stage 163:=====================================>               (81 + 33) / 114][Stage 163:==============================================>     (103 + 11) / 114][Stage 163:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.00059357 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377212894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (59 + 54) / 113][Stage 164:=============================>                       (63 + 50) / 113][Stage 164:======================================>              (83 + 30) / 113][Stage 164:==============================================>     (102 + 11) / 113][Stage 164:====================================================>(111 + 2) / 113]                                                                                [Stage 165:============================>                        (61 + 53) / 114][Stage 165:=================================>                   (71 + 43) / 114][Stage 165:=========================================>           (90 + 24) / 114][Stage 165:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.078687257 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 108 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385784415 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:>                                                      (0 + 0) / 113][Stage 166:===========================>                         (58 + 55) / 113][Stage 166:==============================>                      (64 + 49) / 113][Stage 166:=====================================>               (81 + 32) / 113][Stage 166:=================================================>   (106 + 7) / 113][Stage 166:====================================================>(112 + 1) / 113]                                                                                [Stage 167:===========================>                         (60 + 54) / 114][Stage 167:===============================>                     (68 + 46) / 114][Stage 167:========================================>            (87 + 27) / 114][Stage 167:=================================================>   (107 + 7) / 114][Stage 167:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.106527147 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 54 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378624818 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (58 + 55) / 113][Stage 168:================================>                    (69 + 44) / 113][Stage 168:=====================================>               (81 + 32) / 113][Stage 168:==============================================>     (102 + 11) / 113][Stage 168:===================================================> (110 + 3) / 113]                                                                                [Stage 169:===========================>                         (60 + 54) / 114][Stage 169:==============================>                      (66 + 48) / 114][Stage 169:=======================================>             (84 + 30) / 114][Stage 169:================================================>    (105 + 9) / 114][Stage 169:===================================================> (111 + 3) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.263619532 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.525068671 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (59 + 54) / 113][Stage 170:===================================>                 (76 + 37) / 113][Stage 170:===========================================>         (93 + 20) / 113][Stage 170:===================================================> (109 + 4) / 113]                                                                                [Stage 171:===========================>                         (60 + 54) / 114][Stage 171:================================>                    (69 + 45) / 114][Stage 171:=======================================>             (86 + 28) / 114][Stage 171:==============================================>     (102 + 12) / 114][Stage 171:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.194675589 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379444761 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (58 + 55) / 113][Stage 172:=============================>                       (63 + 50) / 113][Stage 172:========================================>            (86 + 27) / 113][Stage 172:==================================================>  (107 + 6) / 113][Stage 172:====================================================>(112 + 1) / 113]                                                                                [Stage 173:==============================>                      (66 + 48) / 114][Stage 173:=================================>                   (73 + 41) / 114][Stage 173:=========================================>           (90 + 24) / 114][Stage 173:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.064027309 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378932322 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (58 + 55) / 113][Stage 174:===============================>                     (67 + 46) / 113][Stage 174:===========================================>         (93 + 20) / 113][Stage 174:==================================================>  (108 + 5) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:===========================>                         (60 + 54) / 114][Stage 175:================================>                    (69 + 45) / 114][Stage 175:=======================================>             (84 + 30) / 114][Stage 175:===============================================>    (104 + 10) / 114][Stage 175:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.994509803 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 91 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388862983 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:============================>                        (61 + 52) / 113][Stage 176:================================>                    (70 + 43) / 113][Stage 176:============================================>        (95 + 18) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:===========================>                         (59 + 55) / 114][Stage 177:==============================>                      (66 + 48) / 114][Stage 177:=======================================>             (84 + 30) / 114][Stage 177:===============================================>    (104 + 10) / 114][Stage 177:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.967120456 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375955786 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (59 + 54) / 113][Stage 178:============================>                        (61 + 52) / 113][Stage 178:====================================>                (77 + 36) / 113][Stage 178:=========================================>           (88 + 25) / 113][Stage 178:====================================================>(112 + 1) / 113]                                                                                [Stage 179:===========================>                         (59 + 55) / 114][Stage 179:==============================>                      (66 + 48) / 114][Stage 179:===========================================>         (93 + 21) / 114][Stage 179:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.91623343 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381386007 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (58 + 55) / 113][Stage 180:==============================>                      (66 + 47) / 113][Stage 180:=======================================>             (85 + 28) / 113][Stage 180:====================================================>(111 + 2) / 113]                                                                                [Stage 181:===========================>                         (60 + 54) / 114][Stage 181:==============================>                      (65 + 49) / 114][Stage 181:===========================================>         (93 + 21) / 114][Stage 181:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.922570242 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 117 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 117 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417589567 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (59 + 54) / 113][Stage 182:=================================>                   (72 + 41) / 113][Stage 182:===========================================>         (92 + 21) / 113]                                                                                [Stage 183:============================>                        (61 + 53) / 114][Stage 183:===============================>                     (67 + 47) / 114][Stage 183:=======================================>             (84 + 30) / 114][Stage 183:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 2.780299197 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421142888 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (58 + 55) / 113][Stage 184:===========================>                         (59 + 54) / 113][Stage 184:==================================>                  (74 + 39) / 113][Stage 184:============================================>        (94 + 19) / 113][Stage 184:===================================================> (109 + 4) / 113][Stage 184:====================================================>(112 + 1) / 113]                                                                                [Stage 185:============================>                        (62 + 52) / 114][Stage 185:==================================>                  (74 + 40) / 114][Stage 185:==============================================>     (102 + 12) / 114]                                                                                Time elapsed: 3.127881219 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378205691 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (59 + 54) / 113][Stage 186:=============================>                       (62 + 51) / 113][Stage 186:====================================>                (77 + 36) / 113][Stage 186:============================================>        (95 + 18) / 113][Stage 186:===================================================> (110 + 3) / 113]                                                                                [Stage 187:===========================>                         (59 + 55) / 114][Stage 187:==============================>                      (65 + 49) / 114][Stage 187:==========================================>          (91 + 23) / 114][Stage 187:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.902259856 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 115 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380045892 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (58 + 55) / 113][Stage 188:==============================>                      (66 + 47) / 113][Stage 188:=====================================>               (81 + 32) / 113][Stage 188:==============================================>     (100 + 13) / 113]                                                                                [Stage 189:=============================>                       (64 + 50) / 114][Stage 189:====================================>                (79 + 35) / 114][Stage 189:==============================================>      (99 + 15) / 114][Stage 189:=================================================>   (107 + 7) / 114][Stage 189:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.229351562 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380312894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (58 + 55) / 113][Stage 190:==============================>                      (64 + 49) / 113][Stage 190:=======================================>             (85 + 28) / 113][Stage 190:=================================================>   (106 + 7) / 113][Stage 190:====================================================>(112 + 1) / 113]                                                                                [Stage 191:===========================>                         (60 + 54) / 114][Stage 191:=============================>                       (64 + 50) / 114][Stage 191:======================================>              (83 + 31) / 114][Stage 191:==============================================>     (102 + 12) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.009333198 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377505875 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (59 + 54) / 113][Stage 192:============================>                        (61 + 52) / 113][Stage 192:====================================>                (78 + 35) / 113][Stage 192:================================================>    (104 + 9) / 113][Stage 192:===================================================> (109 + 4) / 113]                                                                                [Stage 193:===========================>                         (60 + 54) / 114][Stage 193:=================================>                   (71 + 43) / 114][Stage 193:========================================>            (87 + 27) / 114][Stage 193:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.033570289 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 233 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401533957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (59 + 54) / 113][Stage 194:==============================>                      (65 + 48) / 113][Stage 194:======================================>              (82 + 31) / 113][Stage 194:=============================================>       (96 + 17) / 113]                                                                                [Stage 195:===========================>                         (59 + 55) / 114][Stage 195:================================>                    (69 + 45) / 114][Stage 195:========================================>            (87 + 27) / 114][Stage 195:=================================================>   (107 + 7) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.980621182 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394725158 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (59 + 54) / 113][Stage 196:=============================>                       (63 + 50) / 113][Stage 196:=====================================>               (79 + 34) / 113][Stage 196:===============================================>    (103 + 10) / 113]                                                                                [Stage 197:============================>                        (61 + 53) / 114][Stage 197:================================>                    (70 + 44) / 114][Stage 197:========================================>            (88 + 26) / 114][Stage 197:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.984235033 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.52513246 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (58 + 55) / 113][Stage 198:=============================>                       (62 + 51) / 113][Stage 198:====================================>                (77 + 36) / 113][Stage 198:==============================================>      (99 + 14) / 113][Stage 198:===================================================> (110 + 3) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:===========================>                         (60 + 54) / 114][Stage 199:============================>                        (62 + 52) / 114][Stage 199:=======================================>             (84 + 30) / 114][Stage 199:================================================>    (105 + 9) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.230669125 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388512182 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (58 + 55) / 113][Stage 200:=================================>                   (71 + 42) / 113][Stage 200:=======================================>             (85 + 28) / 113][Stage 200:===================================================> (109 + 4) / 113]                                                                                [Stage 201:============================>                        (61 + 53) / 114][Stage 201:====================================>                (79 + 35) / 114][Stage 201:==============================================>     (102 + 12) / 114][Stage 201:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.055575317 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/24 14:21:52 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.15:51406) dropped. RpcEnv already stopped.
17/05/24 14:21:52 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.15:51406) dropped. RpcEnv already stopped.

real	9m52.515s
user	11m23.468s
sys	0m30.944s
