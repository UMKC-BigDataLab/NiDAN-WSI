Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/25 04:45:34 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 04:45:48 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 04:45:48 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 04:45:49 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/25 04:45:51 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 04:46:02 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170525044551-0638).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.327251565 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIn dex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:==============>                                        (30 + 85) / 115][Stage 0:==========================>                            (56 + 59) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:===========================================>           (90 + 25) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:====================================================>  (109 + 6) / 115][Stage 0:=====================================================> (112 + 3) / 115]                                                                                [Stage 1:==============================>                        (64 + 52) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:=========================================>             (88 + 28) / 116][Stage 1:==============================================>       (100 + 16) / 116][Stage 1:====================================================>  (111 + 5) / 116][Stage 1:=====================================================> (112 + 4) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.717038803 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIn dex<=120", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=120,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.712998754 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 2:=====================>                                 (45 + 70) / 115][Stage 2:=============================>                         (62 + 53) / 115][Stage 2:===============================>                       (65 + 50) / 115][Stage 2:================================>                      (67 + 48) / 115][Stage 2:===================================>                   (75 + 40) / 115][Stage 2:========================================>              (84 + 31) / 115][Stage 2:============================================>          (94 + 21) / 115][Stage 2:===============================================>      (101 + 14) / 115][Stage 2:====================================================>  (109 + 6) / 115][Stage 2:=====================================================> (112 + 3) / 115][Stage 2:======================================================>(113 + 2) / 115]                                                                                [Stage 3:============================>                          (60 + 56) / 116][Stage 3:===============================>                       (66 + 50) / 116][Stage 3:=================================>                     (71 + 45) / 116][Stage 3:=====================================>                 (79 + 37) / 116][Stage 3:===========================================>           (92 + 24) / 116][Stage 3:=============================================>         (97 + 19) / 116][Stage 3:===============================================>      (102 + 14) / 116][Stage 3:=================================================>    (106 + 10) / 116]                                                                                Time elapsed: 5.325286833 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIn dex<=122", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=122,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.628863217 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 4:=============================>                         (64 + 54) / 118][Stage 4:=================================>                     (71 + 47) / 118][Stage 4:=================================>                     (72 + 46) / 118][Stage 4:======================================>                (83 + 35) / 118][Stage 4:==========================================>            (91 + 27) / 118][Stage 4:==============================================>       (102 + 16) / 118][Stage 4:=================================================>    (108 + 10) / 118][Stage 4:======================================================>(117 + 1) / 118]                                                                                [Stage 5:==================================>                    (74 + 45) / 119][Stage 5:===================================>                   (77 + 42) / 119][Stage 5:=====================================>                 (82 + 37) / 119][Stage 5:=============================================>         (99 + 20) / 119][Stage 5:===================================================>   (112 + 7) / 119][Stage 5:=====================================================> (116 + 3) / 119][Stage 5:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.474745735 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide91"
dataSource: String = /nidan/orc/individualORC/slide91

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZInd ex<=81", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=81,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.669816148 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 6:===========================>                           (60 + 61) / 121][Stage 6:=============================>                         (64 + 57) / 121][Stage 6:===================================>                   (78 + 43) / 121][Stage 6:=======================================>               (87 + 34) / 121][Stage 6:=============================================>         (99 + 22) / 121][Stage 6:=====================================================> (117 + 4) / 121]                                                                                [Stage 7:===========================>                           (61 + 61) / 122][Stage 7:==============================>                        (67 + 55) / 122][Stage 7:===================================>                   (78 + 44) / 122][Stage 7:==========================================>            (95 + 27) / 122][Stage 7:===================================================>   (114 + 8) / 122][Stage 7:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.282255973 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIn dex<=207", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=207,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.615911851 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 8:===========================>                           (60 + 61) / 121][Stage 8:================================>                      (72 + 49) / 121][Stage 8:=====================================>                 (83 + 38) / 121][Stage 8:===========================================>           (95 + 26) / 121][Stage 8:================================================>     (108 + 13) / 121][Stage 8:=====================================================> (118 + 3) / 121][Stage 8:======================================================>(120 + 1) / 121]                                                                                [Stage 9:===========================>                           (61 + 61) / 122][Stage 9:==================================>                    (77 + 45) / 122][Stage 9:==========================================>            (95 + 27) / 122][Stage 9:=================================================>    (111 + 11) / 122][Stage 9:======================================================>(120 + 2) / 122][Stage 9:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.438256052 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZInd ex<=61", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=61,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.601875942 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 10:===========================>                          (58 + 55) / 113][Stage 10:=============================>                        (62 + 51) / 113][Stage 10:=======================================>              (82 + 31) / 113][Stage 10:=============================================>        (96 + 17) / 113][Stage 10:===============================================>     (102 + 11) / 113][Stage 10:===================================================>  (108 + 5) / 113]                                                                                [Stage 11:=============================>                        (62 + 52) / 114][Stage 11:================================>                     (69 + 45) / 114][Stage 11:======================================>               (81 + 33) / 114][Stage 11:==============================================>       (99 + 15) / 114][Stage 11:====================================================> (110 + 4) / 114][Stage 11:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.153631042 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZInd ex<=13", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.558627633 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 12:=====================================>                (80 + 35) / 115][Stage 12:========================================>             (87 + 28) / 115][Stage 12:============================================>         (95 + 20) / 115][Stage 12:===============================================>     (104 + 11) / 115][Stage 12:===================================================>  (110 + 5) / 115][Stage 12:====================================================> (112 + 3) / 115]                                                                                [Stage 13:=====================================>                (80 + 36) / 116][Stage 13:========================================>             (87 + 29) / 116][Stage 13:===========================================>          (93 + 23) / 116][Stage 13:==============================================>       (99 + 17) / 116][Stage 13:=================================================>    (107 + 9) / 116][Stage 13:===================================================>  (110 + 6) / 116][Stage 13:====================================================> (113 + 3) / 116][Stage 13:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.080141925 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIn dex<=124", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=124,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.564575879 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 14:====================================>                 (78 + 37) / 115][Stage 14:======================================>               (83 + 32) / 115][Stage 14:==============================================>       (98 + 17) / 115][Stage 14:==================================================>   (107 + 8) / 115][Stage 14:====================================================> (111 + 4) / 115][Stage 14:=====================================================>(113 + 2) / 115]                                                                                [Stage 15:=======================================>              (85 + 31) / 116][Stage 15:==========================================>           (92 + 24) / 116][Stage 15:==============================================>       (99 + 17) / 116][Stage 15:=================================================>    (107 + 9) / 116][Stage 15:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.500642858 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZInd ex<=59", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.580559932 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 16:===========================>                          (60 + 60) / 120][Stage 16:================================>                     (73 + 47) / 120][Stage 16:=========================================>            (93 + 27) / 120][Stage 16:====================================================> (117 + 3) / 120]                                                                                [Stage 17:===========================>                          (61 + 60) / 121][Stage 17:=================================>                    (74 + 47) / 121][Stage 17:=========================================>            (92 + 29) / 121][Stage 17:================================================>    (111 + 10) / 121][Stage 17:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.630450998 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide94"
dataSource: String = /nidan/orc/individualORC/slide94

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIn dex<=142", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.552338473 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 18:===========================>                          (61 + 59) / 120][Stage 18:=============================>                        (66 + 54) / 120][Stage 18:=====================================>                (83 + 37) / 120][Stage 18:=============================================>       (104 + 16) / 120][Stage 18:=====================================================>(118 + 2) / 120]                                                                                [Stage 19:==========================>                           (60 + 61) / 121][Stage 19:===========================>                          (61 + 60) / 121][Stage 19:===============================>                      (70 + 51) / 121][Stage 19:=========================================>            (94 + 27) / 121][Stage 19:==================================================>   (113 + 8) / 121][Stage 19:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.671858755 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIn dex<=118", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=118,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466719813 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 20:=================================>                    (70 + 43) / 113][Stage 20:=======================================>              (83 + 30) / 113][Stage 20:=========================================>            (87 + 26) / 113][Stage 20:===============================================>     (101 + 12) / 113][Stage 20:====================================================> (109 + 4) / 113]                                                                                [Stage 21:=======================================>              (84 + 30) / 114][Stage 21:==========================================>           (90 + 24) / 114][Stage 21:==============================================>      (101 + 13) / 114][Stage 21:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.205770289 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZInd ex<=79", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53171386 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 22:==========================>                           (60 + 61) / 121][Stage 22:============================>                         (64 + 57) / 121][Stage 22:================================>                     (72 + 49) / 121][Stage 22:========================================>             (91 + 30) / 121][Stage 22:================================================>    (110 + 11) / 121]                                                                                [Stage 23:===========================>                          (61 + 61) / 122][Stage 23:=============================>                        (66 + 56) / 122][Stage 23:==================================>                   (79 + 43) / 122][Stage 23:========================================>             (92 + 30) / 122][Stage 23:===================================================>  (116 + 6) / 122][Stage 23:====================================================> (119 + 3) / 122][Stage 23:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.133592139 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZInd ex<=85", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.58558344 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 24:================================>                     (69 + 46) / 115][Stage 24:======================================>               (83 + 32) / 115][Stage 24:==============================================>       (98 + 17) / 115][Stage 24:===================================================>  (109 + 6) / 115][Stage 24:=====================================================>(114 + 1) / 115]                                                                                [Stage 25:=================================>                    (71 + 45) / 116][Stage 25:=======================================>              (84 + 32) / 116][Stage 25:============================================>         (95 + 21) / 116][Stage 25:=================================================>    (107 + 9) / 116][Stage 25:==================================================>   (109 + 7) / 116][Stage 25:====================================================> (112 + 4) / 116][Stage 25:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.785081538 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIn dex<=132", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456128048 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 26:================================>                     (72 + 46) / 118][Stage 26:==================================>                   (76 + 42) / 118][Stage 26:======================================>               (84 + 34) / 118][Stage 26:=========================================>            (90 + 28) / 118][Stage 26:===============================================>     (106 + 12) / 118][Stage 26:====================================================> (114 + 4) / 118][Stage 26:=====================================================>(116 + 2) / 118]                                                                                [Stage 27:=================================>                    (73 + 46) / 119][Stage 27:=======================================>              (87 + 32) / 119][Stage 27:=========================================>            (92 + 27) / 119][Stage 27:=============================================>       (103 + 16) / 119][Stage 27:===================================================>  (113 + 6) / 119][Stage 27:===================================================>  (114 + 5) / 119][Stage 27:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.161048175 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZInd ex<=54", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=54,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497319359 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 28:==========================>                           (60 + 61) / 121][Stage 28:==============================>                       (69 + 52) / 121][Stage 28:=======================================>              (88 + 33) / 121][Stage 28:===============================================>     (108 + 13) / 121][Stage 28:=====================================================>(119 + 2) / 121]                                                                                [Stage 29:============================>                         (64 + 58) / 122][Stage 29:===============================>                      (72 + 50) / 122][Stage 29:==========================================>           (97 + 25) / 122][Stage 29:==============================================>      (107 + 15) / 122][Stage 29:==================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.697834829 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide91"
dataSource: String = /nidan/orc/individualORC/slide91

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIn dex<=199", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53975005 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:===============================>                      (70 + 51) / 121][Stage 30:=====================================>                (83 + 38) / 121][Stage 30:===================================================>  (115 + 6) / 121]                                                                                [Stage 31:===========================>                          (61 + 61) / 122][Stage 31:==============================>                       (68 + 54) / 122][Stage 31:=====================================>                (85 + 37) / 122][Stage 31:===============================================>     (109 + 13) / 122][Stage 31:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.701894719 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIn dex<=244", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=244,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430133372 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 32:=================================>                    (71 + 42) / 113][Stage 32:======================================>               (81 + 32) / 113][Stage 32:===========================================>          (91 + 22) / 113][Stage 32:===============================================>     (102 + 11) / 113][Stage 32:====================================================> (110 + 3) / 113]                                                                                [Stage 33:======================================>               (81 + 33) / 114][Stage 33:============================================>         (94 + 20) / 114][Stage 33:===============================================>     (102 + 12) / 114][Stage 33:====================================================> (110 + 4) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.164195736 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZInd ex<=68", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=68,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.504113987 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 34:===========================>                          (60 + 60) / 120][Stage 34:============================>                         (63 + 57) / 120][Stage 34:===================================>                  (78 + 42) / 120][Stage 34:=============================================>       (102 + 18) / 120][Stage 34:=====================================================>(119 + 1) / 120]                                                                                [Stage 35:===========================>                          (61 + 60) / 121][Stage 35:=============================>                        (65 + 56) / 121][Stage 35:===================================>                  (79 + 42) / 121][Stage 35:============================================>        (102 + 19) / 121][Stage 35:==================================================>   (114 + 7) / 121][Stage 35:====================================================> (118 + 3) / 121][Stage 35:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.560321569 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIn dex<=221", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=221,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505834728 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 36:==========================>                           (59 + 61) / 120][Stage 36:===========================>                          (62 + 58) / 120][Stage 36:==================================>                   (76 + 44) / 120][Stage 36:============================================>         (98 + 22) / 120][Stage 36:===================================================>  (115 + 5) / 120]                                                                                [Stage 37:===========================>                          (62 + 59) / 121][Stage 37:=================================>                    (74 + 47) / 121][Stage 37:============================================>        (101 + 20) / 121][Stage 37:===================================================>  (115 + 6) / 121][Stage 37:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.462509765 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIn dex<=230", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=230,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467041341 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 38:===================================>                  (75 + 38) / 113][Stage 38:===========================================>          (90 + 23) / 113][Stage 38:===============================================>     (102 + 11) / 113][Stage 38:===================================================>  (107 + 6) / 113][Stage 38:====================================================> (109 + 4) / 113][Stage 38:=====================================================>(112 + 1) / 113]                                                                                [Stage 39:===================================>                  (75 + 39) / 114][Stage 39:=======================================>              (84 + 30) / 114][Stage 39:=============================================>        (95 + 19) / 114][Stage 39:==================================================>   (107 + 7) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.249537894 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZInd ex<=83", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=83,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.513602855 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 40:==========================>                           (60 + 61) / 121][Stage 40:============================>                         (63 + 58) / 121][Stage 40:=================================>                    (74 + 47) / 121][Stage 40:===========================================>          (97 + 24) / 121][Stage 40:===================================================>  (116 + 5) / 121]                                                                                [Stage 41:===========================>                          (61 + 61) / 122][Stage 41:============================>                         (64 + 58) / 122][Stage 41:==================================>                   (79 + 43) / 122][Stage 41:===========================================>         (100 + 22) / 122][Stage 41:===================================================>  (116 + 6) / 122][Stage 41:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.410096538 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide94"
dataSource: String = /nidan/orc/individualORC/slide94

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIn dex<=106", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=106,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.487493337 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 42:===========================>                          (60 + 60) / 120][Stage 42:============================>                         (64 + 56) / 120][Stage 42:===================================>                  (78 + 42) / 120][Stage 42:===========================================>          (97 + 23) / 120][Stage 42:=====================================================>(118 + 2) / 120]                                                                                [Stage 43:===========================>                          (61 + 60) / 121][Stage 43:===============================>                      (71 + 50) / 121][Stage 43:=========================================>            (92 + 29) / 121][Stage 43:===============================================>     (109 + 12) / 121][Stage 43:===================================================>  (116 + 5) / 121][Stage 43:=====================================================>(119 + 2) / 121][Stage 43:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.863432737 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZInd ex<=97", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=97,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459557778 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 44:=============================>                        (62 + 51) / 113][Stage 44:==================================>                   (72 + 41) / 113][Stage 44:===========================================>          (91 + 22) / 113]                                                                                [Stage 45:===========================>                          (59 + 55) / 114][Stage 45:================================>                     (69 + 45) / 114][Stage 45:========================================>             (86 + 28) / 114][Stage 45:==============================================>      (100 + 14) / 114][Stage 45:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.161486207 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIn dex<=109", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=109,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400584675 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 46:=====================================>                (80 + 35) / 115][Stage 46:=========================================>            (88 + 27) / 115][Stage 46:===============================================>     (103 + 12) / 115][Stage 46:===================================================>  (109 + 6) / 115][Stage 46:=====================================================>(114 + 1) / 115]                                                                                [Stage 47:=======================================>              (85 + 31) / 116][Stage 47:==========================================>           (92 + 24) / 116][Stage 47:==================================================>   (108 + 8) / 116][Stage 47:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.121951744 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIn dex<=233", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=233,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.517861962 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 48:===========================>                          (61 + 60) / 121][Stage 48:===============================>                      (70 + 51) / 121][Stage 48:======================================>               (86 + 35) / 121][Stage 48:=============================================>       (104 + 17) / 121][Stage 48:====================================================> (117 + 4) / 121]                                                                                [Stage 49:============================>                         (64 + 58) / 122][Stage 49:===================================>                  (81 + 41) / 122][Stage 49:==============================================>      (108 + 14) / 122][Stage 49:====================================================> (119 + 3) / 122][Stage 49:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.515619861 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZInd ex<=67", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=67,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454074577 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 50:===========================>                          (60 + 60) / 120][Stage 50:==============================>                       (68 + 52) / 120][Stage 50:====================================>                 (80 + 40) / 120][Stage 50:============================================>         (98 + 22) / 120][Stage 50:===============================================>     (108 + 12) / 120][Stage 50:=====================================================>(119 + 1) / 120]                                                                                [Stage 51:===========================>                          (61 + 60) / 121][Stage 51:==============================>                       (68 + 53) / 121][Stage 51:==================================>                   (78 + 43) / 121][Stage 51:=============================================>       (103 + 18) / 121][Stage 51:===================================================>  (116 + 5) / 121][Stage 51:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.620142944 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIn dex<=232", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=232,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412776566 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 52:=================================>                    (71 + 44) / 115][Stage 52:========================================>             (86 + 29) / 115][Stage 52:==============================================>       (99 + 16) / 115][Stage 52:==================================================>   (107 + 8) / 115][Stage 52:=====================================================>(113 + 2) / 115]                                                                                [Stage 53:=================================>                    (72 + 44) / 116][Stage 53:========================================>             (86 + 30) / 116][Stage 53:==================================================>   (108 + 8) / 116][Stage 53:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.12246882 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIn dex<=113", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=113,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45702622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 54:==========================>                           (60 + 61) / 121][Stage 54:=============================>                        (66 + 55) / 121][Stage 54:======================================>               (87 + 34) / 121][Stage 54:===============================================>     (109 + 12) / 121][Stage 54:=====================================================>(120 + 1) / 121]                                                                                [Stage 55:===========================>                          (61 + 61) / 122][Stage 55:==============================>                       (68 + 54) / 122][Stage 55:=======================================>              (89 + 33) / 122][Stage 55:==============================================>      (108 + 14) / 122][Stage 55:====================================================> (119 + 3) / 122][Stage 55:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.543316199 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIn dex<=189", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=189,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420169054 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 56:================================>                     (72 + 46) / 118][Stage 56:=================================>                    (73 + 45) / 118][Stage 56:=========================================>            (90 + 28) / 118][Stage 56:================================================>    (107 + 11) / 118][Stage 56:=====================================================>(116 + 2) / 118]                                                                                [Stage 57:==================================>                   (77 + 42) / 119][Stage 57:=======================================>              (86 + 33) / 119][Stage 57:=============================================>       (102 + 17) / 119][Stage 57:====================================================> (115 + 4) / 119][Stage 57:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.558651477 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide81"
dataSource: String = /nidan/orc/individualORC/slide81

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZInd ex<=47", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=47,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411967268 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 58:===============================>                      (67 + 48) / 115][Stage 58:====================================>                 (78 + 37) / 115][Stage 58:=============================================>        (97 + 18) / 115][Stage 58:===================================================>  (109 + 6) / 115][Stage 58:=====================================================>(114 + 1) / 115]                                                                                [Stage 59:===============================>                      (68 + 48) / 116][Stage 59:=====================================>                (81 + 35) / 116][Stage 59:============================================>         (96 + 20) / 116][Stage 59:===============================================>     (104 + 12) / 116][Stage 59:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.691905932 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZInd ex<=57", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=57,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383382828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 60:=====================================>                (80 + 35) / 115][Stage 60:==========================================>           (90 + 25) / 115][Stage 60:================================================>    (105 + 10) / 115][Stage 60:====================================================> (111 + 4) / 115]                                                                                [Stage 61:=======================================>              (85 + 31) / 116][Stage 61:==========================================>           (91 + 25) / 116][Stage 61:==============================================>      (102 + 14) / 116][Stage 61:===================================================>  (111 + 5) / 116][Stage 61:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.556118661 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZInd ex<=26", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444620114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 62:===========================>                          (58 + 55) / 113][Stage 62:============================>                         (59 + 54) / 113][Stage 62:=================================>                    (70 + 43) / 113][Stage 62:=============================================>        (96 + 17) / 113][Stage 62:===================================================>  (108 + 5) / 113]                                                                                [Stage 63:============================>                         (60 + 54) / 114][Stage 63:===============================>                      (66 + 48) / 114][Stage 63:=======================================>              (84 + 30) / 114][Stage 63:===============================================>     (102 + 12) / 114][Stage 63:====================================================> (111 + 3) / 114][Stage 63:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.668135881 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZInd ex<=98", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=98,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370638499 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 64:=======================================>              (84 + 31) / 115][Stage 64:============================================>         (94 + 21) / 115][Stage 64:=================================================>    (106 + 9) / 115][Stage 64:=====================================================>(113 + 2) / 115]                                                                                [Stage 65:======================================>               (82 + 34) / 116][Stage 65:=========================================>            (89 + 27) / 116][Stage 65:=============================================>       (100 + 16) / 116][Stage 65:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.786267802 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZInd ex<=77", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=77,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41038269 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 66:=================================>                    (73 + 45) / 118][Stage 66:==================================>                   (76 + 42) / 118][Stage 66:======================================>               (84 + 34) / 118][Stage 66:===========================================>          (95 + 23) / 118][Stage 66:==================================================>   (111 + 7) / 118][Stage 66:=====================================================>(117 + 1) / 118]                                                                                [Stage 67:=================================>                    (73 + 46) / 119][Stage 67:===================================>                  (78 + 41) / 119][Stage 67:=======================================>              (87 + 32) / 119][Stage 67:============================================>         (97 + 22) / 119][Stage 67:================================================>    (108 + 11) / 119][Stage 67:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.014108194 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIn dex<=176", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=176,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449824461 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 68:===========================>                          (61 + 60) / 121][Stage 68:================================>                     (72 + 49) / 121][Stage 68:========================================>             (91 + 30) / 121][Stage 68:====================================================> (118 + 3) / 121]                                                                                [Stage 69:===========================>                          (61 + 61) / 122][Stage 69:============================>                         (64 + 58) / 122][Stage 69:===================================>                  (81 + 41) / 122][Stage 69:============================================>        (102 + 20) / 122][Stage 69:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.113213219 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIn dex<=119", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=119,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437394352 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 70:===============================>                      (67 + 48) / 115][Stage 70:===================================>                  (75 + 40) / 115][Stage 70:=========================================>            (88 + 27) / 115][Stage 70:================================================>    (105 + 10) / 115][Stage 70:=====================================================>(114 + 1) / 115]                                                                                [Stage 71:================================>                     (69 + 47) / 116][Stage 71:======================================>               (82 + 34) / 116][Stage 71:================================================>    (106 + 10) / 116][Stage 71:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.835714874 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZInd ex<=36", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=36,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422992402 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 72:===========================>                          (58 + 55) / 113][Stage 72:===================================>                  (75 + 38) / 113][Stage 72:=============================================>        (96 + 17) / 113][Stage 72:===================================================>  (108 + 5) / 113][Stage 72:=====================================================>(112 + 1) / 113]                                                                                [Stage 73:===========================>                          (59 + 55) / 114][Stage 73:==============================>                       (64 + 50) / 114][Stage 73:========================================>             (86 + 28) / 114][Stage 73:==================================================>   (107 + 7) / 114][Stage 73:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.486122833 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZInd ex<=100", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370069962 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 74:=================================>                    (70 + 43) / 113][Stage 74:======================================>               (81 + 32) / 113][Stage 74:=========================================>            (87 + 26) / 113][Stage 74:==================================================>   (105 + 8) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:====================================>                 (77 + 37) / 114][Stage 75:==========================================>           (89 + 25) / 114][Stage 75:==============================================>       (98 + 16) / 114][Stage 75:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.906755056 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIn dex<=223", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=223,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36729408 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 76:======================================>               (82 + 33) / 115][Stage 76:========================================>             (87 + 28) / 115][Stage 76:===============================================>     (104 + 11) / 115][Stage 76:=================================================>    (106 + 9) / 115][Stage 76:=====================================================>(113 + 2) / 115]                                                                                [Stage 77:========================================>             (88 + 28) / 116][Stage 77:==============================================>      (101 + 15) / 116][Stage 77:================================================>    (106 + 10) / 116][Stage 77:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.165553618 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIn dex<=183", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407723252 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 78:===========================>                          (58 + 55) / 113][Stage 78:===============================>                      (65 + 48) / 113][Stage 78:=====================================>                (78 + 35) / 113][Stage 78:==================================================>   (105 + 8) / 113]                                                                                [Stage 79:===========================>                          (59 + 55) / 114][Stage 79:==================================>                   (73 + 41) / 114][Stage 79:=============================================>        (95 + 19) / 114][Stage 79:=====================================================>(112 + 2) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.317059779 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIn dex<=218", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=218,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449273405 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 80:===========================>                          (61 + 59) / 120][Stage 80:===============================>                      (69 + 51) / 120][Stage 80:=====================================>                (83 + 37) / 120][Stage 80:===========================================>          (97 + 23) / 120][Stage 80:=================================================>    (111 + 9) / 120][Stage 80:=====================================================>(119 + 1) / 120]                                                                                [Stage 81:===========================>                          (61 + 60) / 121][Stage 81:=============================>                        (66 + 55) / 121][Stage 81:===================================>                  (80 + 41) / 121][Stage 81:=========================================>            (94 + 27) / 121][Stage 81:================================================>    (111 + 10) / 121]                                                                                Time elapsed: 3.603925226 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZInd ex<=40", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356312054 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 82:=======================================>              (84 + 31) / 115][Stage 82:=============================================>        (97 + 18) / 115][Stage 82:===================================================>  (109 + 6) / 115][Stage 82:=====================================================>(114 + 1) / 115]                                                                                [Stage 83:======================================>               (83 + 33) / 116][Stage 83:==========================================>           (91 + 25) / 116][Stage 83:==============================================>      (101 + 15) / 116][Stage 83:=================================================>    (107 + 9) / 116][Stage 83:====================================================> (113 + 3) / 116][Stage 83:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.983276473 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIn dex<=121", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=121,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359197117 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 84:=====================================>                (80 + 35) / 115][Stage 84:=======================================>              (85 + 30) / 115][Stage 84:=================================================>    (106 + 9) / 115][Stage 84:====================================================> (112 + 3) / 115]                                                                                [Stage 85:=========================================>            (89 + 27) / 116][Stage 85:=============================================>        (98 + 18) / 116][Stage 85:===================================================>  (111 + 5) / 116][Stage 85:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.832624145 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIn dex<=123", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=123,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368747705 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 86:=================================>                    (71 + 42) / 113][Stage 86:=======================================>              (82 + 31) / 113][Stage 86:===========================================>          (91 + 22) / 113][Stage 86:==============================================>      (100 + 13) / 113][Stage 86:=====================================================>(111 + 2) / 113]                                                                                [Stage 87:======================================>               (81 + 33) / 114][Stage 87:============================================>         (94 + 20) / 114][Stage 87:=================================================>    (105 + 9) / 114][Stage 87:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.207751098 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZInd ex<=50", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=50,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424350389 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 88:===========================>                          (61 + 59) / 120][Stage 88:================================>                     (73 + 47) / 120][Stage 88:=======================================>              (88 + 32) / 120][Stage 88:==================================================>   (113 + 7) / 120]                                                                                [Stage 89:=============================>                        (65 + 56) / 121][Stage 89:===================================>                  (80 + 41) / 121][Stage 89:=============================================>       (103 + 18) / 121][Stage 89:===================================================>  (115 + 6) / 121][Stage 89:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.110706583 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZInde x<=12", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376479392 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 90:=================================>                    (73 + 45) / 118][Stage 90:===================================>                  (77 + 41) / 118][Stage 90:========================================>             (89 + 29) / 118][Stage 90:=============================================>       (102 + 16) / 118][Stage 90:==================================================>   (110 + 8) / 118][Stage 90:=====================================================>(116 + 2) / 118]                                                                                [Stage 91:=================================>                    (74 + 45) / 119][Stage 91:===================================>                  (78 + 41) / 119][Stage 91:=======================================>              (87 + 32) / 119][Stage 91:==========================================>           (94 + 25) / 119][Stage 91:==================================================>   (111 + 8) / 119][Stage 91:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.831461394 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIn dex<=130", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=130,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387066121 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 92:================================>                     (72 + 46) / 118][Stage 92:===================================>                  (78 + 40) / 118][Stage 92:=========================================>            (90 + 28) / 118][Stage 92:===============================================>     (105 + 13) / 118][Stage 92:=====================================================>(116 + 2) / 118]                                                                                [Stage 93:==================================>                   (75 + 44) / 119][Stage 93:=========================================>            (91 + 28) / 119][Stage 93:=============================================>       (102 + 17) / 119][Stage 93:====================================================> (115 + 4) / 119][Stage 93:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.49645512 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIn dex<=134", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=134,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362590982 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 94:===================================>                  (74 + 39) / 113][Stage 94:==========================================>           (89 + 24) / 113][Stage 94:=============================================>        (96 + 17) / 113][Stage 94:==================================================>   (106 + 7) / 113]                                                                                [Stage 95:=======================================>              (83 + 31) / 114][Stage 95:==========================================>           (90 + 24) / 114][Stage 95:==============================================>      (101 + 13) / 114][Stage 95:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.920714576 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZInd ex<=31", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39663151 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 96:============================>                         (60 + 53) / 113][Stage 96:==================================>                   (72 + 41) / 113][Stage 96:===========================================>          (91 + 22) / 113][Stage 96:==================================================>   (106 + 7) / 113][Stage 96:=====================================================>(112 + 1) / 113]                                                                                [Stage 97:============================>                         (61 + 53) / 114][Stage 97:===============================>                      (67 + 47) / 114][Stage 97:==========================================>           (89 + 25) / 114][Stage 97:===============================================>     (102 + 12) / 114][Stage 97:====================================================> (111 + 3) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.755832213 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIn dex<=151", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=151,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411446021 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 98:===========================>                          (60 + 60) / 120][Stage 98:============================>                         (64 + 56) / 120][Stage 98:====================================>                 (82 + 38) / 120][Stage 98:===============================================>     (108 + 12) / 120][Stage 98:=====================================================>(119 + 1) / 120]                                                                                [Stage 99:==============================>                       (68 + 53) / 121][Stage 99:===================================>                  (79 + 42) / 121][Stage 99:============================================>         (99 + 22) / 121][Stage 99:==================================================>   (113 + 8) / 121][Stage 99:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.570219175 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIn dex<=228", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=228,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375160174 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 100:================================>                    (73 + 45) / 118][Stage 100:======================================>              (85 + 33) / 118][Stage 100:================================================>    (109 + 9) / 118]                                                                                [Stage 101:================================>                    (73 + 46) / 119][Stage 101:===================================>                 (80 + 39) / 119][Stage 101:=============================================>      (104 + 15) / 119][Stage 101:==================================================>  (113 + 6) / 119][Stage 101:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.197628089 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIn dex<=195", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402225316 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 102:=============================>                       (62 + 51) / 113][Stage 102:==================================>                  (73 + 40) / 113][Stage 102:==========================================>          (90 + 23) / 113][Stage 102:=================================================>   (106 + 7) / 113]                                                                                [Stage 103:===========================>                         (60 + 54) / 114][Stage 103:=================================>                   (72 + 42) / 114][Stage 103:========================================>            (87 + 27) / 114][Stage 103:==============================================>     (102 + 12) / 114][Stage 103:===================================================> (111 + 3) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.49971973 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIn dex<=172", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=172,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39371405 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 104:==================================>                  (75 + 40) / 115][Stage 104:========================================>            (88 + 27) / 115][Stage 104:==============================================>     (102 + 13) / 115][Stage 104:=================================================>   (108 + 7) / 115]                                                                                [Stage 105:==================================>                  (76 + 40) / 116][Stage 105:==========================================>          (93 + 23) / 116][Stage 105:===============================================>    (105 + 11) / 116][Stage 105:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.814449896 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIn dex<=149", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=149,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39338987 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 106:=================================>                   (72 + 43) / 115][Stage 106:=======================================>             (85 + 30) / 115][Stage 106:================================================>    (106 + 9) / 115]                                                                                [Stage 107:==================================>                  (75 + 41) / 116][Stage 107:=========================================>           (90 + 26) / 116][Stage 107:==============================================>     (104 + 12) / 116][Stage 107:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.683202657 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZInde x<=7", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=7,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403393779 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 108:===========================>                         (59 + 54) / 113][Stage 108:=============================>                       (62 + 51) / 113][Stage 108:=====================================>               (81 + 32) / 113][Stage 108:==============================================>      (99 + 14) / 113][Stage 108:====================================================>(111 + 2) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:===========================>                         (60 + 54) / 114][Stage 109:==============================>                      (66 + 48) / 114][Stage 109:=======================================>             (86 + 28) / 114][Stage 109:==============================================>     (101 + 13) / 114][Stage 109:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.094952877 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide96"
dataSource: String = /nidan/orc/individualORC/slide96

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZInd ex<=16", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=16,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371600954 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 110:================================>                    (73 + 45) / 118][Stage 110:=================================>                   (74 + 44) / 118][Stage 110:====================================>                (81 + 37) / 118][Stage 110:=========================================>           (92 + 26) / 118][Stage 110:=============================================>      (103 + 15) / 118][Stage 110:====================================================>(116 + 2) / 118]                                                                                [Stage 111:================================>                    (74 + 45) / 119][Stage 111:=====================================>               (85 + 34) / 119][Stage 111:========================================>            (92 + 27) / 119][Stage 111:=============================================>      (104 + 15) / 119][Stage 111:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.974237889 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIn dex<=173", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=173,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387953728 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 112:===========================>                         (58 + 55) / 113][Stage 112:=============================>                       (63 + 50) / 113][Stage 112:====================================>                (78 + 35) / 113][Stage 112:=============================================>       (97 + 16) / 113][Stage 112:===================================================> (109 + 4) / 113]                                                                                [Stage 113:============================>                        (62 + 52) / 114][Stage 113:===============================>                     (68 + 46) / 114][Stage 113:========================================>            (88 + 26) / 114][Stage 113:=================================================>   (106 + 8) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.339672792 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIn dex<=181", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=181,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334708066 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 114:====================================>                (80 + 35) / 115][Stage 114:=========================================>           (89 + 26) / 115][Stage 114:=============================================>       (99 + 16) / 115][Stage 114:===================================================> (111 + 4) / 115][Stage 114:====================================================>(114 + 1) / 115]                                                                                [Stage 115:=====================================>               (81 + 35) / 116][Stage 115:=========================================>           (90 + 26) / 116][Stage 115:==============================================>     (103 + 13) / 116][Stage 115:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.820167404 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZInd ex<=69", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=69,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398637077 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 116:==========================>                          (60 + 60) / 120][Stage 116:=============================>                       (67 + 53) / 120][Stage 116:====================================>                (83 + 37) / 120][Stage 116:==============================================>     (108 + 12) / 120][Stage 116:====================================================>(119 + 1) / 120]                                                                                [Stage 117:===========================>                         (62 + 59) / 121][Stage 117:=================================>                   (76 + 45) / 121][Stage 117:=======================================>             (91 + 30) / 121][Stage 117:=================================================>   (112 + 9) / 121]                                                                                Time elapsed: 3.262179321 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIn dex<=245", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=245,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365545711 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 118:================================>                    (72 + 46) / 118][Stage 118:=================================>                   (74 + 44) / 118][Stage 118:=======================================>             (88 + 30) / 118][Stage 118:============================================>        (98 + 20) / 118][Stage 118:===============================================>    (108 + 10) / 118]                                                                                [Stage 119:==================================>                  (77 + 42) / 119][Stage 119:===================================>                 (80 + 39) / 119][Stage 119:========================================>            (91 + 28) / 119][Stage 119:============================================>       (102 + 17) / 119][Stage 119:===================================================> (116 + 3) / 119][Stage 119:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.531403741 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIn dex<=190", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367724294 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 120:================================>                    (72 + 46) / 118][Stage 120:===================================>                 (78 + 40) / 118][Stage 120:=======================================>             (88 + 30) / 118][Stage 120:============================================>       (101 + 17) / 118][Stage 120:===================================================> (114 + 4) / 118]                                                                                [Stage 121:================================>                    (73 + 46) / 119][Stage 121:======================================>              (87 + 32) / 119][Stage 121:==========================================>          (96 + 23) / 119][Stage 121:================================================>    (110 + 9) / 119][Stage 121:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.277865183 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZInd ex<=34", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353071442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 122:===================================>                 (75 + 38) / 113][Stage 122:=======================================>             (85 + 28) / 113][Stage 122:============================================>        (95 + 18) / 113][Stage 122:================================================>    (104 + 9) / 113][Stage 122:====================================================>(112 + 1) / 113]                                                                                [Stage 123:======================================>              (82 + 32) / 114][Stage 123:=========================================>           (90 + 24) / 114][Stage 123:==============================================>     (102 + 12) / 114][Stage 123:===================================================> (110 + 4) / 114][Stage 123:===================================================> (111 + 3) / 114][Stage 123:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.122696306 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIn dex<=216", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=216,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362097911 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 124:=====================================>               (79 + 34) / 113][Stage 124:==========================================>          (90 + 23) / 113][Stage 124:==============================================>      (99 + 14) / 113][Stage 124:=================================================>   (106 + 7) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:=================================>                   (72 + 42) / 114][Stage 125:=======================================>             (84 + 30) / 114][Stage 125:===========================================>         (93 + 21) / 114][Stage 125:===============================================>    (104 + 10) / 114][Stage 125:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.111111699 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIn dex<=217", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=217,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380873726 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 126:===============================>                     (69 + 46) / 115][Stage 126:=====================================>               (82 + 33) / 115][Stage 126:=============================================>      (100 + 15) / 115][Stage 126:=================================================>   (107 + 8) / 115][Stage 126:==================================================>  (109 + 6) / 115]                                                                                [Stage 127:================================>                    (72 + 44) / 116][Stage 127:=====================================>               (83 + 33) / 116][Stage 127:============================================>       (100 + 16) / 116][Stage 127:================================================>    (107 + 9) / 116][Stage 127:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.346685555 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIn dex<=197", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=197,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400130942 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 128:==========================>                          (60 + 60) / 120][Stage 128:=============================>                       (67 + 53) / 120][Stage 128:===================================>                 (81 + 39) / 120][Stage 128:=============================================>      (104 + 16) / 120][Stage 128:==================================================>  (115 + 5) / 120]                                                                                [Stage 129:==========================>                          (61 + 60) / 121][Stage 129:=============================>                       (68 + 53) / 121][Stage 129:======================================>              (87 + 34) / 121][Stage 129:===========================================>         (99 + 22) / 121][Stage 129:==================================================>  (116 + 5) / 121][Stage 129:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.937839717 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIn dex<=241", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=241,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40759397 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 130:==========================>                          (60 + 60) / 120][Stage 130:=============================>                       (66 + 54) / 120][Stage 130:==================================>                  (79 + 41) / 120][Stage 130:=================================================>   (113 + 7) / 120]                                                                                [Stage 131:===========================>                         (62 + 59) / 121][Stage 131:==============================>                      (69 + 52) / 121][Stage 131:====================================>                (84 + 37) / 121][Stage 131:==============================================>     (109 + 12) / 121][Stage 131:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.43890034 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIn dex<=126", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=126,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384193951 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 132:>                                                      (0 + 0) / 113][Stage 132:===========================>                         (59 + 54) / 113][Stage 132:==============================>                      (64 + 49) / 113][Stage 132:=======================================>             (85 + 28) / 113][Stage 132:===============================================>    (103 + 10) / 113][Stage 132:===================================================> (110 + 3) / 113]                                                                                [Stage 133:============================>                        (61 + 53) / 114][Stage 133:==============================>                      (66 + 48) / 114][Stage 133:========================================>            (87 + 27) / 114][Stage 133:==============================================>     (102 + 12) / 114][Stage 133:====================================================>(112 + 2) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.640905129 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZInd ex<=91", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=91,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393879419 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 134:===========================>                         (62 + 58) / 120][Stage 134:================================>                    (74 + 46) / 120][Stage 134:========================================>            (92 + 28) / 120][Stage 134:==============================================>     (108 + 12) / 120]                                                                                [Stage 135:===========================>                         (62 + 59) / 121][Stage 135:================================>                    (75 + 46) / 121][Stage 135:==========================================>          (96 + 25) / 121][Stage 135:=================================================>   (114 + 7) / 121][Stage 135:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.26555045 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIn dex<=135", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337094234 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 136:=====================================>               (81 + 34) / 115][Stage 136:=======================================>             (85 + 30) / 115][Stage 136:=============================================>      (100 + 15) / 115][Stage 136:===================================================> (112 + 3) / 115]                                                                                [Stage 137:=======================================>             (86 + 30) / 116][Stage 137:===========================================>         (95 + 21) / 116][Stage 137:=================================================>   (109 + 7) / 116][Stage 137:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.752013077 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIn dex<=164", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=164,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39317814 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 138:===========================>                         (62 + 58) / 120][Stage 138:=================================>                   (75 + 45) / 120][Stage 138:=======================================>             (89 + 31) / 120][Stage 138:============================================>       (103 + 17) / 120]                                                                                [Stage 139:===========================>                         (62 + 59) / 121][Stage 139:===============================>                     (71 + 50) / 121][Stage 139:======================================>              (89 + 32) / 121][Stage 139:===============================================>    (110 + 11) / 121][Stage 139:====================================================>(119 + 2) / 121][Stage 139:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.469147106 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZInd ex<=80", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346375882 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 140:=================================>                   (72 + 41) / 113][Stage 140:======================================>              (82 + 31) / 113][Stage 140:===========================================>         (93 + 20) / 113][Stage 140:===============================================>    (103 + 10) / 113][Stage 140:===================================================> (110 + 3) / 113]                                                                                [Stage 141:=======================================>             (84 + 30) / 114][Stage 141:==========================================>          (92 + 22) / 114][Stage 141:==============================================>     (103 + 11) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.846359782 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZInd ex<=24", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=24,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347726224 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 142:=====================================>               (81 + 32) / 113][Stage 142:==========================================>          (91 + 22) / 113][Stage 142:=============================================>       (98 + 15) / 113][Stage 142:==================================================>  (107 + 6) / 113][Stage 142:===================================================> (110 + 3) / 113]                                                                                [Stage 143:===================================>                 (77 + 37) / 114][Stage 143:==========================================>          (91 + 23) / 114][Stage 143:============================================>        (96 + 18) / 114][Stage 143:=================================================>   (106 + 8) / 114][Stage 143:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.248816874 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIn dex<=237", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=237,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365073079 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 144:================================>                    (72 + 46) / 118][Stage 144:=====================================>               (84 + 34) / 118][Stage 144:==========================================>          (95 + 23) / 118][Stage 144:=================================================>   (110 + 8) / 118][Stage 144:====================================================>(117 + 1) / 118]                                                                                [Stage 145:==================================>                  (78 + 41) / 119][Stage 145:======================================>              (86 + 33) / 119][Stage 145:=============================================>      (104 + 15) / 119][Stage 145:===============================================>    (109 + 10) / 119][Stage 145:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.512065902 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIn dex<=129", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=129,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366546298 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 146:=================================>                   (72 + 43) / 115][Stage 146:======================================>              (83 + 32) / 115][Stage 146:=============================================>      (101 + 14) / 115][Stage 146:====================================================>(114 + 1) / 115]                                                                                [Stage 147:===============================>                     (69 + 47) / 116][Stage 147:=====================================>               (83 + 33) / 116][Stage 147:=============================================>       (99 + 17) / 116][Stage 147:===================================================> (113 + 3) / 116][Stage 147:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.873474035 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIn dex<=227", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=227,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382869101 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 148:============================>                        (60 + 53) / 113][Stage 148:===============================>                     (68 + 45) / 113][Stage 148:===========================================>         (92 + 21) / 113][Stage 148:===============================================>    (103 + 10) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:===========================>                         (59 + 55) / 114][Stage 149:================================>                    (70 + 44) / 114][Stage 149:========================================>            (88 + 26) / 114][Stage 149:=================================================>   (106 + 8) / 114][Stage 149:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.494373439 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide97"
dataSource: String = /nidan/orc/individualORC/slide97

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZInd ex<=78", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350326456 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 150:======================================>              (83 + 32) / 115][Stage 150:=========================================>           (90 + 25) / 115][Stage 150:==============================================>     (102 + 13) / 115]                                                                                [Stage 151:=====================================>               (82 + 34) / 116][Stage 151:==========================================>          (93 + 23) / 116][Stage 151:================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.54179099 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIn dex<=224", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=224,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37410068 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 152:================================>                    (72 + 46) / 118][Stage 152:==================================>                  (77 + 41) / 118][Stage 152:=========================================>           (92 + 26) / 118][Stage 152:==============================================>     (106 + 12) / 118][Stage 152:====================================================>(117 + 1) / 118]                                                                                [Stage 153:================================>                    (73 + 46) / 119][Stage 153:===================================>                 (79 + 40) / 119][Stage 153:========================================>            (90 + 29) / 119][Stage 153:===========================================>        (100 + 19) / 119][Stage 153:================================================>    (110 + 9) / 119][Stage 153:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.295779537 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZInd ex<=58", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359418719 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:=================================>                   (75 + 43) / 118][Stage 154:============================================>       (100 + 18) / 118][Stage 154:==================================================>  (112 + 6) / 118][Stage 154:====================================================>(117 + 1) / 118]                                                                                [Stage 155:================================>                    (73 + 46) / 119][Stage 155:=================================>                   (76 + 43) / 119][Stage 155:========================================>            (90 + 29) / 119][Stage 155:==============================================>     (106 + 13) / 119][Stage 155:=================================================>   (111 + 8) / 119][Stage 155:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.498431015 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIn dex<=235", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.331981955 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 156:======================================>              (84 + 31) / 115][Stage 156:==========================================>          (92 + 23) / 115][Stage 156:===============================================>    (104 + 11) / 115][Stage 156:====================================================>(113 + 2) / 115]                                                                                [Stage 157:======================================>              (84 + 32) / 116][Stage 157:==========================================>          (93 + 23) / 116][Stage 157:=============================================>      (102 + 14) / 116][Stage 157:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.911414604 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZInd ex<=52", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=52,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394734326 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 158:>                                                      (0 + 0) / 120][Stage 158:==========================>                          (60 + 60) / 120][Stage 158:===============================>                     (71 + 49) / 120][Stage 158:=======================================>             (90 + 30) / 120][Stage 158:=================================================>   (113 + 7) / 120]                                                                                [Stage 159:==========================>                          (61 + 60) / 121][Stage 159:===============================>                     (72 + 49) / 121][Stage 159:==========================================>          (96 + 25) / 121][Stage 159:=================================================>   (112 + 9) / 121][Stage 159:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.357775183 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIn dex<=157", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=157,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35449894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 160:=================================>                   (72 + 41) / 113][Stage 160:=======================================>             (84 + 29) / 113][Stage 160:=============================================>       (96 + 17) / 113][Stage 160:=================================================>   (105 + 8) / 113][Stage 160:====================================================>(112 + 1) / 113]                                                                                [Stage 161:=========================================>           (89 + 25) / 114][Stage 161:============================================>        (96 + 18) / 114][Stage 161:=================================================>   (107 + 7) / 114][Stage 161:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.955762739 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZInd ex<=72", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=72,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385462686 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 162:===============================>                     (69 + 46) / 115][Stage 162:=========================================>           (90 + 25) / 115][Stage 162:================================================>    (106 + 9) / 115][Stage 162:====================================================>(114 + 1) / 115]                                                                                [Stage 163:===============================>                     (70 + 46) / 116][Stage 163:=========================================>           (91 + 25) / 116][Stage 163:================================================>    (107 + 9) / 116][Stage 163:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.883138231 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIn dex<=219", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=219,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355175321 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 164:=====================================>               (80 + 33) / 113][Stage 164:===========================================>         (92 + 21) / 113][Stage 164:=================================================>   (105 + 8) / 113][Stage 164:====================================================>(112 + 1) / 113]                                                                                [Stage 165:===================================>                 (76 + 38) / 114][Stage 165:======================================>              (83 + 31) / 114][Stage 165:===========================================>         (93 + 21) / 114][Stage 165:==============================================>     (102 + 12) / 114][Stage 165:==================================================>  (109 + 5) / 114][Stage 165:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.14242382 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIn dex<=198", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=198,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348105381 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 166:=====================================>               (81 + 32) / 113][Stage 166:===========================================>         (92 + 21) / 113][Stage 166:=================================================>   (106 + 7) / 113][Stage 166:====================================================>(111 + 2) / 113]                                                                                [Stage 167:===================================>                 (77 + 37) / 114][Stage 167:=========================================>           (89 + 25) / 114][Stage 167:==============================================>     (101 + 13) / 114]                                                                                Time elapsed: 2.612291853 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZInd ex<=39", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=39,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.525791932 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 168:===========================>                         (59 + 54) / 113][Stage 168:============================>                        (60 + 53) / 113][Stage 168:===================================>                 (76 + 37) / 113][Stage 168:============================================>        (94 + 19) / 113][Stage 168:================================================>    (104 + 9) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:=============================>                       (64 + 50) / 114][Stage 169:====================================>                (79 + 35) / 114][Stage 169:==========================================>          (91 + 23) / 114][Stage 169:===============================================>    (104 + 10) / 114][Stage 169:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.814345267 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZInd ex<=49", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=49,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367841004 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 170:================================>                    (72 + 46) / 118][Stage 170:===================================>                 (78 + 40) / 118][Stage 170:=======================================>             (87 + 31) / 118][Stage 170:=============================================>      (104 + 14) / 118][Stage 170:===================================================> (115 + 3) / 118]                                                                                [Stage 171:================================>                    (73 + 46) / 119][Stage 171:=================================>                   (75 + 44) / 119][Stage 171:=====================================>               (85 + 34) / 119][Stage 171:===========================================>        (100 + 19) / 119][Stage 171:==================================================>  (113 + 6) / 119][Stage 171:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.442627388 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIn dex<=236", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=236,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349508882 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 172:=================================>                   (72 + 41) / 113][Stage 172:=======================================>             (85 + 28) / 113][Stage 172:============================================>        (94 + 19) / 113][Stage 172:================================================>    (104 + 9) / 113][Stage 172:====================================================>(112 + 1) / 113]                                                                                [Stage 173:===================================>                 (76 + 38) / 114][Stage 173:=========================================>           (89 + 25) / 114][Stage 173:=============================================>       (98 + 16) / 114][Stage 173:================================================>    (105 + 9) / 114][Stage 173:===================================================> (110 + 4) / 114][Stage 173:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.376337101 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIn dex<=175", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404703533 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 174:==========================>                          (61 + 59) / 120][Stage 174:==============================>                      (69 + 51) / 120][Stage 174:===================================>                 (81 + 39) / 120][Stage 174:=============================================>      (105 + 15) / 120][Stage 174:====================================================>(119 + 1) / 120]                                                                                [Stage 175:==========================>                          (61 + 60) / 121][Stage 175:=============================>                       (67 + 54) / 121][Stage 175:======================================>              (87 + 34) / 121][Stage 175:==============================================>     (108 + 13) / 121]                                                                                Time elapsed: 3.097627796 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIn dex<=206", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493889649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 176:==============================>                      (66 + 49) / 115][Stage 176:====================================>                (80 + 35) / 115][Stage 176:=========================================>           (89 + 26) / 115][Stage 176:==============================================>     (102 + 13) / 115][Stage 176:====================================================>(113 + 2) / 115]                                                                                [Stage 177:===============================>                     (70 + 46) / 116][Stage 177:=======================================>             (87 + 29) / 116][Stage 177:============================================>       (100 + 16) / 116][Stage 177:==================================================>  (110 + 6) / 116][Stage 177:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.000404064 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIn dex<=144", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=144,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395157592 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 178:==========================>                          (61 + 60) / 121][Stage 178:================================>                    (75 + 46) / 121][Stage 178:=======================================>             (90 + 31) / 121][Stage 178:==============================================>     (109 + 12) / 121][Stage 178:====================================================>(120 + 1) / 121]                                                                                [Stage 179:==========================>                          (62 + 60) / 122][Stage 179:=================================>                   (76 + 46) / 122][Stage 179:===========================================>         (99 + 23) / 122][Stage 179:=================================================>   (113 + 9) / 122][Stage 179:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.569210392 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIn dex<=145", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=145,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358885806 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 180:=================================>                   (71 + 42) / 113][Stage 180:======================================>              (82 + 31) / 113][Stage 180:===========================================>         (93 + 20) / 113][Stage 180:==============================================>     (101 + 12) / 113][Stage 180:===================================================> (109 + 4) / 113]                                                                                [Stage 181:=====================================>               (81 + 33) / 114][Stage 181:========================================>            (87 + 27) / 114][Stage 181:=============================================>      (100 + 14) / 114][Stage 181:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.968723706 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZInd ex<=90", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=90,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38351919 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 182:====================================>                (78 + 35) / 113][Stage 182:=======================================>             (85 + 28) / 113][Stage 182:============================================>        (95 + 18) / 113][Stage 182:===============================================>    (103 + 10) / 113][Stage 182:===================================================> (110 + 3) / 113]                                                                                [Stage 183:=====================================>               (81 + 33) / 114][Stage 183:===========================================>         (93 + 21) / 114][Stage 183:==============================================>     (102 + 12) / 114][Stage 183:===================================================> (110 + 4) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.166249347 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZInd ex<=51", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=51,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412799417 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 184:==========================>                          (60 + 60) / 120][Stage 184:==============================>                      (70 + 50) / 120][Stage 184:===========================================>         (98 + 22) / 120]                                                                                [Stage 185:==========================>                          (61 + 60) / 121][Stage 185:=============================>                       (68 + 53) / 121][Stage 185:=====================================>               (86 + 35) / 121][Stage 185:=================================================>   (112 + 9) / 121][Stage 185:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.338669924 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIn dex<=108", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=108,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358155188 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 186:================================>                    (72 + 46) / 118][Stage 186:==================================>                  (77 + 41) / 118][Stage 186:========================================>            (91 + 27) / 118][Stage 186:=================================================>   (111 + 7) / 118]                                                                                [Stage 187:================================>                    (74 + 45) / 119][Stage 187:====================================>                (83 + 36) / 119][Stage 187:=========================================>           (93 + 26) / 119][Stage 187:==================================================>  (113 + 6) / 119][Stage 187:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.291719821 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIn dex<=150", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=150,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404093337 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 188:==========================>                          (60 + 61) / 121][Stage 188:============================>                        (65 + 56) / 121][Stage 188:====================================>                (83 + 38) / 121][Stage 188:==============================================>     (109 + 12) / 121][Stage 188:===================================================> (117 + 4) / 121]                                                                                [Stage 189:==========================>                          (62 + 60) / 122][Stage 189:==============================>                      (71 + 51) / 122][Stage 189:=========================================>           (96 + 26) / 122][Stage 189:===============================================>    (112 + 10) / 122][Stage 189:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.732105169 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIn dex<=138", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=138,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374216211 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 190:==============================>                      (67 + 48) / 115][Stage 190:===================================>                 (76 + 39) / 115][Stage 190:=========================================>           (91 + 24) / 115][Stage 190:==================================================>  (109 + 6) / 115]                                                                                [Stage 191:==================================>                  (76 + 40) / 116][Stage 191:===========================================>         (95 + 21) / 116][Stage 191:===============================================>    (105 + 11) / 116][Stage 191:=================================================>   (109 + 7) / 116][Stage 191:==================================================>  (111 + 5) / 116][Stage 191:===================================================> (113 + 3) / 116][Stage 191:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.698380689 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIn dex<=204", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=204,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345909547 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 192:====================================>                (78 + 35) / 113][Stage 192:=========================================>           (88 + 25) / 113][Stage 192:==============================================>     (100 + 13) / 113][Stage 192:===================================================> (109 + 4) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:====================================>                (79 + 35) / 114][Stage 193:=========================================>           (89 + 25) / 114][Stage 193:==============================================>     (101 + 13) / 114][Stage 193:===============================================>    (104 + 10) / 114][Stage 193:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.201907019 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZInd ex<=94", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=94,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348781908 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 194:=================================>                   (72 + 41) / 113][Stage 194:=======================================>             (85 + 28) / 113][Stage 194:============================================>        (95 + 18) / 113][Stage 194:================================================>    (104 + 9) / 113][Stage 194:====================================================>(111 + 2) / 113]                                                                                [Stage 195:===================================>                 (77 + 37) / 114][Stage 195:========================================>            (87 + 27) / 114][Stage 195:=============================================>       (98 + 16) / 114][Stage 195:=================================================>   (107 + 7) / 114][Stage 195:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.062354356 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide95"
dataSource: String = /nidan/orc/individualORC/slide95

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZInd ex<=88", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=88,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36230809 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 196:=================================>                   (72 + 43) / 115][Stage 196:========================================>            (88 + 27) / 115][Stage 196:=============================================>      (101 + 14) / 115][Stage 196:===================================================> (112 + 3) / 115]                                                                                [Stage 197:=====================================>               (83 + 33) / 116][Stage 197:============================================>       (100 + 16) / 116][Stage 197:====================================================>(114 + 2) / 116][Stage 197:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.888465167 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZInd ex<=95", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=95,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409915861 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 198:==========================>                          (61 + 59) / 120][Stage 198:================================>                    (74 + 46) / 120][Stage 198:========================================>            (92 + 28) / 120][Stage 198:===============================================>    (110 + 10) / 120]                                                                                [Stage 199:===========================>                         (63 + 58) / 121][Stage 199:=================================>                   (77 + 44) / 121][Stage 199:========================================>            (93 + 28) / 121][Stage 199:==============================================>     (108 + 13) / 121][Stage 199:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.242842641 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZInd ex<=71", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342172748 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 200:==================================>                  (74 + 39) / 113][Stage 200:=====================================>               (81 + 32) / 113][Stage 200:============================================>        (94 + 19) / 113][Stage 200:===============================================>    (103 + 10) / 113][Stage 200:====================================================>(111 + 2) / 113][Stage 200:====================================================>(112 + 1) / 113]                                                                                [Stage 201:====================================>                (79 + 35) / 114][Stage 201:=========================================>           (89 + 25) / 114][Stage 201:============================================>        (96 + 18) / 114][Stage 201:==================================================>  (108 + 6) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.097592837 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m25.122s
user	11m48.104s
sys	0m49.948s
