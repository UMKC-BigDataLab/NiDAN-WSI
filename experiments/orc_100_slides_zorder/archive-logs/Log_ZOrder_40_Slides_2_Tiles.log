Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 19:59:05 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:59:20 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:59:20 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:59:21 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 19:59:23 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:59:33 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524195922-0588).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.305301624 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:======>                                               (13 + 102) / 115][Stage 0:========================>                              (52 + 63) / 115][Stage 0:==========================>                            (55 + 60) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:======================================>                (81 + 34) / 115][Stage 0:===========================================>           (90 + 25) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:====================>                                  (44 + 72) / 116][Stage 1:=========================>                             (54 + 62) / 116][Stage 1:=============================>                         (62 + 54) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:===========================================>           (92 + 24) / 116][Stage 1:=============================================>         (97 + 19) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:=====================================================> (113 + 3) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 13.030521835 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=161", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=161,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.661655483 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==========================>                            (56 + 59) / 115][Stage 2:================================>                      (67 + 48) / 115][Stage 2:======================================>                (81 + 34) / 115][Stage 2:=========================================>             (86 + 29) / 115][Stage 2:============================================>          (92 + 23) / 115][Stage 2:==============================================>        (97 + 18) / 115][Stage 2:===============================================>      (101 + 14) / 115][Stage 2:===================================================>   (107 + 8) / 115][Stage 2:=====================================================> (111 + 4) / 115][Stage 2:======================================================>(114 + 1) / 115]                                                                                [Stage 3:=====================================>                 (80 + 36) / 116][Stage 3:========================================>              (85 + 31) / 116][Stage 3:=========================================>             (87 + 29) / 116][Stage 3:==========================================>            (90 + 26) / 116][Stage 3:===============================================>      (102 + 14) / 116][Stage 3:================================================>     (105 + 11) / 116][Stage 3:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 4.681060144 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=185", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=185,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.644116153 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==============================>                        (62 + 51) / 113][Stage 4:==================================>                    (70 + 43) / 113][Stage 4:====================================>                  (75 + 38) / 113][Stage 4:======================================>                (79 + 34) / 113][Stage 4:==========================================>            (87 + 26) / 113][Stage 4:===============================================>       (97 + 16) / 113][Stage 4:================================================>     (102 + 11) / 113][Stage 4:==================================================>    (104 + 9) / 113][Stage 4:====================================================>  (108 + 5) / 113][Stage 4:=====================================================> (109 + 4) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:================================>                      (67 + 47) / 114][Stage 5:=====================================>                 (78 + 36) / 114][Stage 5:=======================================>               (82 + 32) / 114][Stage 5:=========================================>             (87 + 27) / 114][Stage 5:===============================================>      (100 + 14) / 114][Stage 5:==================================================>    (105 + 9) / 114][Stage 5:====================================================>  (108 + 6) / 114][Stage 5:=====================================================> (111 + 3) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.268956081 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=58", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=58,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.604452317 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==============================>                        (64 + 51) / 115][Stage 6:==================================>                    (72 + 43) / 115][Stage 6:====================================>                  (76 + 39) / 115][Stage 6:========================================>              (84 + 31) / 115][Stage 6:============================================>          (92 + 23) / 115][Stage 6:===================================================>   (108 + 7) / 115][Stage 6:======================================================>(113 + 2) / 115]                                                                                [Stage 7:================================>                      (69 + 47) / 116][Stage 7:====================================>                  (76 + 40) / 116][Stage 7:=====================================>                 (79 + 37) / 116][Stage 7:========================================>              (86 + 30) / 116][Stage 7:==============================================>        (98 + 18) / 116][Stage 7:====================================================>  (110 + 6) / 116][Stage 7:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.538699806 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=46", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=46,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.520571354 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===============================>                       (65 + 48) / 113][Stage 8:===================================>                   (72 + 41) / 113][Stage 8:=======================================>               (81 + 32) / 113][Stage 8:==========================================>            (88 + 25) / 113][Stage 8:==============================================>        (96 + 17) / 113][Stage 8:===================================================>   (105 + 8) / 113][Stage 8:=====================================================> (110 + 3) / 113][Stage 8:======================================================>(112 + 1) / 113]                                                                                [Stage 9:====================================>                  (75 + 39) / 114][Stage 9:=======================================>               (82 + 32) / 114][Stage 9:==========================================>            (89 + 25) / 114][Stage 9:=============================================>         (95 + 19) / 114][Stage 9:=================================================>    (104 + 10) / 114][Stage 9:====================================================>  (109 + 5) / 114][Stage 9:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.663413966 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=140", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=140,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.581387779 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==========================>                           (58 + 62) / 120][Stage 10:==============================>                       (68 + 52) / 120][Stage 10:==================================>                   (77 + 43) / 120][Stage 10:============================================>        (100 + 20) / 120][Stage 10:================================================>    (110 + 10) / 120][Stage 10:====================================================> (116 + 4) / 120]                                                                                [Stage 11:===========================>                          (61 + 60) / 121][Stage 11:===============================>                      (71 + 50) / 121][Stage 11:=======================================>              (88 + 33) / 121][Stage 11:===========================================>         (100 + 21) / 121][Stage 11:===============================================>     (109 + 12) / 121]                                                                                Time elapsed: 3.799973472 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=6", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=6,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.616980754 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==========================>                           (60 + 61) / 121][Stage 12:================================>                     (72 + 49) / 121][Stage 12:=========================================>            (93 + 28) / 121][Stage 12:================================================>    (110 + 11) / 121][Stage 12:===================================================>  (116 + 5) / 121][Stage 12:=====================================================>(119 + 2) / 121][Stage 12:=====================================================>(120 + 1) / 121]                                                                                [Stage 13:===========================>                          (62 + 60) / 122][Stage 13:=================================>                    (75 + 47) / 122][Stage 13:=======================================>              (89 + 33) / 122][Stage 13:==================================================>   (113 + 9) / 122][Stage 13:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.141337088 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=92", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=92,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43831998 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:=====================================>                (79 + 36) / 115][Stage 14:=======================================>              (84 + 31) / 115][Stage 14:==========================================>           (90 + 25) / 115][Stage 14:==================================================>   (108 + 7) / 115][Stage 14:====================================================> (111 + 4) / 115][Stage 14:=====================================================>(113 + 2) / 115]                                                                                [Stage 15:========================================>             (86 + 30) / 116][Stage 15:============================================>         (96 + 20) / 116][Stage 15:=================================================>    (107 + 9) / 116][Stage 15:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.355382851 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=84", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=84,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.527995047 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:================================>                     (72 + 46) / 118][Stage 16:=================================>                    (73 + 45) / 118][Stage 16:======================================>               (85 + 33) / 118][Stage 16:=============================================>       (102 + 16) / 118][Stage 16:==================================================>   (111 + 7) / 118][Stage 16:=====================================================>(116 + 2) / 118]                                                                                [Stage 17:=================================>                    (74 + 45) / 119][Stage 17:=======================================>              (88 + 31) / 119][Stage 17:============================================>        (101 + 18) / 119][Stage 17:===================================================>  (114 + 5) / 119][Stage 17:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.632931195 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=206", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=206,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499431406 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==============================>                       (65 + 50) / 115][Stage 18:=====================================>                (79 + 36) / 115][Stage 18:==============================================>       (99 + 16) / 115][Stage 18:==================================================>   (107 + 8) / 115][Stage 18:=====================================================>(114 + 1) / 115]                                                                                [Stage 19:==============================>                       (65 + 51) / 116][Stage 19:=====================================>                (80 + 36) / 116][Stage 19:==========================================>           (92 + 24) / 116][Stage 19:==============================================>      (101 + 15) / 116][Stage 19:==================================================>   (108 + 8) / 116][Stage 19:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.670802718 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=130", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=130,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.554420323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==========================>                           (58 + 62) / 120][Stage 20:===============================>                      (70 + 50) / 120][Stage 20:=====================================>                (83 + 37) / 120][Stage 20:=============================================>       (102 + 18) / 120][Stage 20:================================================>    (110 + 10) / 120]                                                                                [Stage 21:===========================>                          (61 + 60) / 121][Stage 21:==============================>                       (69 + 52) / 121][Stage 21:======================================>               (87 + 34) / 121][Stage 21:================================================>    (110 + 11) / 121][Stage 21:===================================================>  (115 + 6) / 121][Stage 21:====================================================> (117 + 4) / 121][Stage 21:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.969455795 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=26", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=26,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497220964 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:============================>                         (59 + 54) / 113][Stage 22:===============================>                      (65 + 48) / 113][Stage 22:=========================================>            (87 + 26) / 113][Stage 22:==================================================>   (105 + 8) / 113][Stage 22:====================================================> (110 + 3) / 113]                                                                                [Stage 23:===========================>                          (59 + 55) / 114][Stage 23:===============================>                      (66 + 48) / 114][Stage 23:=======================================>              (83 + 31) / 114][Stage 23:============================================>         (94 + 20) / 114][Stage 23:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.529183851 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=4", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=4,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45009619 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:====================================>                 (77 + 36) / 113][Stage 24:==========================================>           (88 + 25) / 113][Stage 24:============================================>         (94 + 19) / 113][Stage 24:=================================================>    (104 + 9) / 113][Stage 24:====================================================> (109 + 4) / 113][Stage 24:=====================================================>(112 + 1) / 113]                                                                                [Stage 25:=====================================>                (80 + 34) / 114][Stage 25:===========================================>          (91 + 23) / 114][Stage 25:===============================================>     (103 + 11) / 114][Stage 25:====================================================> (110 + 4) / 114][Stage 25:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.003356588 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=174", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=174,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501420536 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===================================>                  (76 + 39) / 115][Stage 26:=============================================>        (97 + 18) / 115][Stage 26:==================================================>   (108 + 7) / 115][Stage 26:=====================================================>(114 + 1) / 115]                                                                                [Stage 27:===============================>                      (67 + 49) / 116][Stage 27:======================================>               (83 + 33) / 116][Stage 27:===============================================>     (103 + 13) / 116][Stage 27:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.711735039 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=86", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=86,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474379649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:=============================>                        (61 + 52) / 113][Stage 28:==================================>                   (73 + 40) / 113][Stage 28:==============================================>       (97 + 16) / 113][Stage 28:=====================================================>(111 + 2) / 113]                                                                                [Stage 29:===========================>                          (59 + 55) / 114][Stage 29:================================>                     (68 + 46) / 114][Stage 29:========================================>             (85 + 29) / 114][Stage 29:===============================================>     (102 + 12) / 114][Stage 29:====================================================> (110 + 4) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.281197991 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=60", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=60,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502772384 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (60 + 60) / 120][Stage 30:================================>                     (72 + 48) / 120][Stage 30:=========================================>            (93 + 27) / 120][Stage 30:====================================================> (116 + 4) / 120][Stage 30:=====================================================>(118 + 2) / 120]                                                                                [Stage 31:===========================>                          (61 + 60) / 121][Stage 31:==============================>                       (69 + 52) / 121][Stage 31:=============================================>       (103 + 18) / 121][Stage 31:=====================================================>(119 + 2) / 121][Stage 31:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.48545708 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=147", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=147,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426898651 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===================================>                  (75 + 38) / 113][Stage 32:========================================>             (85 + 28) / 113][Stage 32:=============================================>        (96 + 17) / 113][Stage 32:===================================================>  (107 + 6) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:=====================================>                (80 + 34) / 114][Stage 33:===========================================>          (91 + 23) / 114][Stage 33:===============================================>     (102 + 12) / 114][Stage 33:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.203933228 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=207", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=207,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436405049 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=================================>                    (71 + 42) / 113][Stage 34:=====================================>                (79 + 34) / 113][Stage 34:===========================================>          (91 + 22) / 113][Stage 34:===============================================>     (102 + 11) / 113][Stage 34:====================================================> (110 + 3) / 113]                                                                                [Stage 35:====================================>                 (77 + 37) / 114][Stage 35:===========================================>          (91 + 23) / 114][Stage 35:==============================================>      (100 + 14) / 114][Stage 35:===================================================>  (109 + 5) / 114][Stage 35:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.165907581 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=143", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=143,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465772771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===============================>                      (67 + 48) / 115][Stage 36:======================================>               (81 + 34) / 115][Stage 36:==============================================>      (101 + 14) / 115][Stage 36:===================================================>  (109 + 6) / 115][Stage 36:====================================================> (112 + 3) / 115]                                                                                [Stage 37:=================================>                    (71 + 45) / 116][Stage 37:=======================================>              (85 + 31) / 116][Stage 37:=============================================>       (100 + 16) / 116][Stage 37:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.879675273 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=244", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=244,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.516763514 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==========================>                           (60 + 61) / 121][Stage 38:============================>                         (63 + 58) / 121][Stage 38:===============================>                      (71 + 50) / 121][Stage 38:===========================================>         (100 + 21) / 121][Stage 38:==================================================>   (114 + 7) / 121][Stage 38:=====================================================>(120 + 1) / 121]                                                                                [Stage 39:===========================>                          (61 + 61) / 122][Stage 39:============================>                         (65 + 57) / 122][Stage 39:==================================>                   (79 + 43) / 122][Stage 39:===========================================>         (100 + 22) / 122][Stage 39:================================================>    (111 + 11) / 122][Stage 39:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.586430075 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=156", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=156,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402644144 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:=====================================>                (80 + 35) / 115][Stage 40:========================================>             (86 + 29) / 115][Stage 40:=============================================>        (97 + 18) / 115][Stage 40:==================================================>   (107 + 8) / 115][Stage 40:====================================================> (111 + 4) / 115][Stage 40:====================================================> (112 + 3) / 115]                                                                                [Stage 41:========================================>             (86 + 30) / 116][Stage 41:============================================>         (95 + 21) / 116][Stage 41:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.234318259 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=210", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=210,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.513371223 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (60 + 60) / 120][Stage 42:===============================>                      (69 + 51) / 120][Stage 42:=======================================>              (87 + 33) / 120][Stage 42:===============================================>     (108 + 12) / 120][Stage 42:=====================================================>(119 + 1) / 120]                                                                                [Stage 43:===========================>                          (61 + 60) / 121][Stage 43:=============================>                        (67 + 54) / 121][Stage 43:=================================>                    (76 + 45) / 121][Stage 43:================================================>    (110 + 11) / 121][Stage 43:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.217034626 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=172", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=172,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465899927 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (60 + 60) / 120][Stage 44:==============================>                       (68 + 52) / 120][Stage 44:==========================================>           (94 + 26) / 120][Stage 44:=================================================>    (111 + 9) / 120]                                                                                [Stage 45:===========================>                          (61 + 60) / 121][Stage 45:==============================>                       (68 + 53) / 121][Stage 45:=====================================>                (83 + 38) / 121][Stage 45:=================================================>    (112 + 9) / 121][Stage 45:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.229254497 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=55", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=55,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40130133 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:=====================================>                (78 + 35) / 113][Stage 46:=========================================>            (86 + 27) / 113][Stage 46:===============================================>      (99 + 14) / 113][Stage 46:===================================================>  (108 + 5) / 113][Stage 46:=====================================================>(112 + 1) / 113]                                                                                [Stage 47:====================================>                 (77 + 37) / 114][Stage 47:=========================================>            (87 + 27) / 114][Stage 47:============================================>         (93 + 21) / 114][Stage 47:===============================================>     (102 + 12) / 114][Stage 47:==================================================>   (107 + 7) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.732116078 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=23", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=23,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449961871 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (58 + 55) / 113][Stage 48:===============================>                      (65 + 48) / 113][Stage 48:===================================>                  (74 + 39) / 113][Stage 48:=============================================>        (95 + 18) / 113][Stage 48:===================================================>  (107 + 6) / 113]                                                                                [Stage 49:============================>                         (61 + 53) / 114][Stage 49:================================>                     (69 + 45) / 114][Stage 49:==========================================>           (90 + 24) / 114][Stage 49:=================================================>    (105 + 9) / 114][Stage 49:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.506606915 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=122", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=122,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428006188 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:==============================>                       (65 + 50) / 115][Stage 50:====================================>                 (78 + 37) / 115][Stage 50:=========================================>            (89 + 26) / 115][Stage 50:==================================================>   (108 + 7) / 115]                                                                                [Stage 51:==================================>                   (75 + 41) / 116][Stage 51:============================================>         (95 + 21) / 116][Stage 51:=================================================>    (107 + 9) / 116][Stage 51:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.826951911 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=149", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=149,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425624307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:================================>                     (69 + 46) / 115][Stage 52:======================================>               (81 + 34) / 115][Stage 52:=============================================>        (96 + 19) / 115][Stage 52:=================================================>    (106 + 9) / 115][Stage 52:===================================================>  (110 + 5) / 115][Stage 52:=====================================================>(114 + 1) / 115]                                                                                [Stage 53:====================================>                 (79 + 37) / 116][Stage 53:========================================>             (87 + 29) / 116][Stage 53:==============================================>       (99 + 17) / 116][Stage 53:================================================>    (106 + 10) / 116][Stage 53:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.513522751 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=100", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=100,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378639077 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=======================================>              (85 + 30) / 115][Stage 54:===========================================>          (93 + 22) / 115][Stage 54:===================================================>  (110 + 5) / 115]                                                                                [Stage 55:========================================>             (87 + 29) / 116][Stage 55:=============================================>        (97 + 19) / 116][Stage 55:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.537973221 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=40", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=40,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414721874 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:================================>                     (72 + 46) / 118][Stage 56:=====================================>                (82 + 36) / 118][Stage 56:============================================>         (98 + 20) / 118][Stage 56:=====================================================>(116 + 2) / 118]                                                                                [Stage 57:==================================>                   (77 + 42) / 119][Stage 57:========================================>             (89 + 30) / 119][Stage 57:==============================================>      (105 + 14) / 119][Stage 57:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.025333229 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=31", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=31,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4324175 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:============================>                         (59 + 54) / 113][Stage 58:===============================>                      (66 + 47) / 113][Stage 58:=======================================>              (83 + 30) / 113][Stage 58:================================================>    (103 + 10) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:===========================>                          (59 + 55) / 114][Stage 59:=============================>                        (63 + 51) / 114][Stage 59:=======================================>              (84 + 30) / 114][Stage 59:===============================================>     (102 + 12) / 114][Stage 59:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.127921269 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=121", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=121,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424499193 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:================================>                     (69 + 46) / 115][Stage 60:==========================================>           (90 + 25) / 115][Stage 60:==============================================>      (101 + 14) / 115][Stage 60:====================================================> (112 + 3) / 115]                                                                                [Stage 61:=================================>                    (73 + 43) / 116][Stage 61:========================================>             (87 + 29) / 116][Stage 61:==============================================>       (99 + 17) / 116][Stage 61:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.946767741 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=125", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=125,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438379546 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (59 + 54) / 113][Stage 62:=============================>                        (62 + 51) / 113][Stage 62:=====================================>                (78 + 35) / 113][Stage 62:============================================>         (94 + 19) / 113][Stage 62:=================================================>    (104 + 9) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:===========================>                          (59 + 55) / 114][Stage 63:==============================>                       (65 + 49) / 114][Stage 63:=======================================>              (83 + 31) / 114][Stage 63:==============================================>      (101 + 13) / 114][Stage 63:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.228129439 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=103", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=103,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472339346 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (60 + 60) / 120][Stage 64:===============================>                      (70 + 50) / 120][Stage 64:=========================================>            (93 + 27) / 120][Stage 64:==================================================>   (112 + 8) / 120]                                                                                [Stage 65:===========================>                          (61 + 60) / 121][Stage 65:==============================>                       (69 + 52) / 121][Stage 65:=========================================>            (92 + 29) / 121][Stage 65:==================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.007144943 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=11", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=11,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434766674 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=====================================>                (79 + 34) / 113][Stage 66:==========================================>           (88 + 25) / 113][Stage 66:===============================================>     (101 + 12) / 113][Stage 66:===================================================>  (108 + 5) / 113][Stage 66:====================================================> (110 + 3) / 113][Stage 66:=====================================================>(111 + 2) / 113]                                                                                [Stage 67:======================================>               (82 + 32) / 114][Stage 67:=========================================>            (88 + 26) / 114][Stage 67:=============================================>        (97 + 17) / 114][Stage 67:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.744903411 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=28", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=28,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458491648 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (60 + 60) / 120][Stage 68:=============================>                        (66 + 54) / 120][Stage 68:====================================>                 (81 + 39) / 120][Stage 68:==============================================>      (105 + 15) / 120][Stage 68:=====================================================>(118 + 2) / 120]                                                                                [Stage 69:===========================>                          (62 + 59) / 121][Stage 69:==============================>                       (69 + 52) / 121][Stage 69:=======================================>              (89 + 32) / 121][Stage 69:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.142189126 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=79", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=79,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.492458957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (59 + 54) / 113][Stage 70:================================>                     (69 + 44) / 113][Stage 70:=======================================>              (82 + 31) / 113][Stage 70:===============================================>      (99 + 14) / 113][Stage 70:=====================================================>(111 + 2) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:===========================>                          (59 + 55) / 114][Stage 71:==============================>                       (65 + 49) / 114][Stage 71:========================================>             (86 + 28) / 114][Stage 71:===============================================>     (102 + 12) / 114][Stage 71:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.483652348 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=8", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=8,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421678616 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==============================>                       (65 + 50) / 115][Stage 72:=====================================>                (80 + 35) / 115][Stage 72:=========================================>            (89 + 26) / 115][Stage 72:===============================================>     (103 + 12) / 115][Stage 72:===================================================>  (110 + 5) / 115][Stage 72:=====================================================>(114 + 1) / 115]                                                                                [Stage 73:=================================>                    (72 + 44) / 116][Stage 73:========================================>             (86 + 30) / 116][Stage 73:=============================================>        (97 + 19) / 116][Stage 73:==================================================>   (109 + 7) / 116][Stage 73:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.517402905 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=22", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=22,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424419758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (58 + 55) / 113][Stage 74:================================>                     (67 + 46) / 113][Stage 74:======================================>               (81 + 32) / 113][Stage 74:==================================================>   (105 + 8) / 113]                                                                                [Stage 75:============================>                         (60 + 54) / 114][Stage 75:================================>                     (69 + 45) / 114][Stage 75:==========================================>           (90 + 24) / 114][Stage 75:===============================================>     (102 + 12) / 114][Stage 75:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.137556638 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=97", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=97,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428937296 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (61 + 59) / 120][Stage 76:===============================>                      (70 + 50) / 120][Stage 76:=======================================>              (87 + 33) / 120][Stage 76:============================================>        (100 + 20) / 120][Stage 76:=====================================================>(118 + 2) / 120]                                                                                [Stage 77:============================>                         (63 + 58) / 121][Stage 77:=================================>                    (75 + 46) / 121][Stage 77:===========================================>          (97 + 24) / 121][Stage 77:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.270146034 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=50", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=50,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452675995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:==========================>                           (60 + 61) / 121][Stage 78:=============================>                        (66 + 55) / 121][Stage 78:======================================>               (86 + 35) / 121][Stage 78:=============================================>       (104 + 17) / 121][Stage 78:====================================================> (117 + 4) / 121]                                                                                [Stage 79:===========================>                          (63 + 59) / 122][Stage 79:===================================>                  (81 + 41) / 122][Stage 79:==============================================>      (106 + 16) / 122][Stage 79:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.065945778 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=159", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=159,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388710213 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:================================>                     (72 + 46) / 118][Stage 80:==================================>                   (75 + 43) / 118][Stage 80:=======================================>              (86 + 32) / 118][Stage 80:===========================================>          (96 + 22) / 118][Stage 80:=================================================>    (109 + 9) / 118][Stage 80:=====================================================>(117 + 1) / 118]                                                                                [Stage 81:=================================>                    (74 + 45) / 119][Stage 81:=====================================>                (83 + 36) / 119][Stage 81:==========================================>           (94 + 25) / 119][Stage 81:==============================================>      (104 + 15) / 119][Stage 81:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.862050914 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=164", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=164,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434152477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===========================>                          (60 + 60) / 120][Stage 82:============================>                         (64 + 56) / 120][Stage 82:==================================>                   (77 + 43) / 120][Stage 82:============================================>        (101 + 19) / 120][Stage 82:=====================================================>(118 + 2) / 120]                                                                                [Stage 83:===========================>                          (61 + 60) / 121][Stage 83:=============================>                        (67 + 54) / 121][Stage 83:===================================>                  (80 + 41) / 121][Stage 83:=============================================>       (104 + 17) / 121][Stage 83:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 2.987901943 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=176", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=176,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488115233 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:======================================>               (80 + 33) / 113][Stage 84:=========================================>            (87 + 26) / 113][Stage 84:==============================================>      (100 + 13) / 113][Stage 84:====================================================> (109 + 4) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:====================================>                 (78 + 36) / 114][Stage 85:========================================>             (86 + 28) / 114][Stage 85:=============================================>        (97 + 17) / 114][Stage 85:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.043921351 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=75", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=75,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371285444 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:=======================================>              (85 + 30) / 115][Stage 86:============================================>         (94 + 21) / 115][Stage 86:==================================================>   (108 + 7) / 115]                                                                                [Stage 87:=======================================>              (85 + 31) / 116][Stage 87:===========================================>          (94 + 22) / 116][Stage 87:================================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.623333926 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=38", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=38,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401675679 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (58 + 55) / 113][Stage 88:=============================>                        (61 + 52) / 113][Stage 88:================================>                     (69 + 44) / 113][Stage 88:===========================================>          (92 + 21) / 113][Stage 88:====================================================> (110 + 3) / 113]                                                                                [Stage 89:===========================>                          (59 + 55) / 114][Stage 89:===============================>                      (66 + 48) / 114][Stage 89:====================================>                 (77 + 37) / 114][Stage 89:=============================================>        (97 + 17) / 114][Stage 89:===================================================>  (109 + 5) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.278333883 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=170", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=170,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428297584 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (60 + 60) / 120][Stage 90:=============================>                        (65 + 55) / 120][Stage 90:===================================>                  (79 + 41) / 120][Stage 90:============================================>         (99 + 21) / 120][Stage 90:=====================================================>(119 + 1) / 120]                                                                                [Stage 91:===========================>                          (61 + 60) / 121][Stage 91:==============================>                       (69 + 52) / 121][Stage 91:=====================================>                (83 + 38) / 121][Stage 91:===========================================>         (100 + 21) / 121][Stage 91:====================================================> (118 + 3) / 121][Stage 91:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.201210343 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=67", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=67,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419133025 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==========================>                           (60 + 61) / 121][Stage 92:============================>                         (64 + 57) / 121][Stage 92:=================================>                    (75 + 46) / 121][Stage 92:===========================================>          (97 + 24) / 121][Stage 92:==================================================>   (114 + 7) / 121][Stage 92:=====================================================>(120 + 1) / 121]                                                                                [Stage 93:===========================>                          (61 + 61) / 122][Stage 93:============================>                         (64 + 58) / 122][Stage 93:==================================>                   (77 + 45) / 122][Stage 93:============================================>        (103 + 19) / 122][Stage 93:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.327617005 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=154", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=154,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429054349 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==========================>                           (60 + 61) / 121][Stage 94:=============================>                        (66 + 55) / 121][Stage 94:=====================================>                (85 + 36) / 121][Stage 94:=============================================>       (105 + 16) / 121][Stage 94:=====================================================>(120 + 1) / 121]                                                                                [Stage 95:===========================>                          (61 + 61) / 122][Stage 95:==============================>                       (68 + 54) / 122][Stage 95:======================================>               (86 + 36) / 122][Stage 95:===============================================>     (109 + 13) / 122][Stage 95:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.12324333 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=36", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=36,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360326507 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===================================>                  (74 + 39) / 113][Stage 96:========================================>             (84 + 29) / 113][Stage 96:===========================================>          (92 + 21) / 113][Stage 96:=================================================>    (104 + 9) / 113][Stage 96:====================================================> (109 + 4) / 113][Stage 96:=====================================================>(112 + 1) / 113]                                                                                [Stage 97:===================================>                  (74 + 40) / 114][Stage 97:=======================================>              (84 + 30) / 114][Stage 97:============================================>         (94 + 20) / 114][Stage 97:================================================>    (104 + 10) / 114][Stage 97:==================================================>   (106 + 8) / 114][Stage 97:====================================================> (111 + 3) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.919942299 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=90", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=90,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.515602018 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:==========================>                           (60 + 61) / 121][Stage 98:==============================>                       (68 + 53) / 121][Stage 98:=====================================>                (83 + 38) / 121][Stage 98:============================================>        (101 + 20) / 121][Stage 98:====================================================> (117 + 4) / 121]                                                                                [Stage 99:===========================>                          (63 + 59) / 122][Stage 99:=================================>                    (75 + 47) / 122][Stage 99:==========================================>           (97 + 25) / 122][Stage 99:==================================================>   (115 + 7) / 122][Stage 99:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.415888149 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=177", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=177,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365023625 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:======================================>              (83 + 30) / 113][Stage 100:===========================================>         (92 + 21) / 113][Stage 100:==============================================>     (102 + 11) / 113][Stage 100:===================================================> (110 + 3) / 113][Stage 100:====================================================>(111 + 2) / 113]                                                                                [Stage 101:======================================>              (83 + 31) / 114][Stage 101:==========================================>          (91 + 23) / 114][Stage 101:=============================================>      (100 + 14) / 114][Stage 101:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.187105349 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=150", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=150,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404005593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (58 + 55) / 113][Stage 102:==============================>                      (64 + 49) / 113][Stage 102:======================================>              (82 + 31) / 113][Stage 102:================================================>    (104 + 9) / 113][Stage 102:====================================================>(111 + 2) / 113]                                                                                [Stage 103:===========================>                         (59 + 55) / 114][Stage 103:===============================>                     (67 + 47) / 114][Stage 103:====================================>                (79 + 35) / 114][Stage 103:=============================================>       (97 + 17) / 114][Stage 103:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.170089419 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=128", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=128,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371690559 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==================================>                  (73 + 40) / 113][Stage 104:=====================================>               (81 + 32) / 113][Stage 104:============================================>        (94 + 19) / 113][Stage 104:===============================================>    (103 + 10) / 113][Stage 104:===================================================> (109 + 4) / 113]                                                                                [Stage 105:======================================>              (83 + 31) / 114][Stage 105:==========================================>          (92 + 22) / 114][Stage 105:==============================================>     (101 + 13) / 114][Stage 105:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.961928354 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=34", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=34,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388921164 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:================================>                    (72 + 46) / 118][Stage 106:=================================>                   (75 + 43) / 118][Stage 106:===================================>                 (80 + 38) / 118][Stage 106:=========================================>           (93 + 25) / 118][Stage 106:================================================>    (109 + 9) / 118][Stage 106:===================================================> (115 + 3) / 118]                                                                                [Stage 107:================================>                    (73 + 46) / 119][Stage 107:=================================>                   (76 + 43) / 119][Stage 107:=====================================>               (84 + 35) / 119][Stage 107:========================================>            (91 + 28) / 119][Stage 107:================================================>    (110 + 9) / 119][Stage 107:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.610811547 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=64", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=64,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397515656 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=================================>                   (72 + 43) / 115][Stage 108:========================================>            (87 + 28) / 115][Stage 108:=============================================>       (98 + 17) / 115][Stage 108:===================================================> (112 + 3) / 115]                                                                                [Stage 109:====================================>                (79 + 37) / 116][Stage 109:===========================================>         (96 + 20) / 116][Stage 109:===============================================>    (105 + 11) / 116][Stage 109:===================================================> (112 + 4) / 116][Stage 109:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.100549713 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=20", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=20,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35310872 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=====================================>               (81 + 32) / 113][Stage 110:===========================================>         (92 + 21) / 113][Stage 110:===============================================>    (103 + 10) / 113][Stage 110:====================================================>(112 + 1) / 113]                                                                                [Stage 111:======================================>              (82 + 32) / 114][Stage 111:==========================================>          (92 + 22) / 114][Stage 111:==============================================>     (102 + 12) / 114][Stage 111:==================================================>  (109 + 5) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.579050564 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=179", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=179,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355378519 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:====================================>                (78 + 35) / 113][Stage 112:=========================================>           (89 + 24) / 113][Stage 112:=============================================>       (96 + 17) / 113][Stage 112:================================================>    (104 + 9) / 113][Stage 112:===================================================> (109 + 4) / 113]                                                                                [Stage 113:=======================================>             (86 + 28) / 114][Stage 113:============================================>        (95 + 19) / 114][Stage 113:=================================================>   (107 + 7) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.014259292 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=202", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=202,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340354952 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:====================================>                (80 + 35) / 115][Stage 114:=========================================>           (89 + 26) / 115][Stage 114:===========================================>         (95 + 20) / 115][Stage 114:==============================================>     (103 + 12) / 115][Stage 114:====================================================>(113 + 2) / 115][Stage 114:====================================================>(114 + 1) / 115]                                                                                [Stage 115:======================================>              (84 + 32) / 116][Stage 115:==========================================>          (92 + 24) / 116][Stage 115:==============================================>     (104 + 12) / 116][Stage 115:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.101386381 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=243", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=243,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405629681 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 61) / 121][Stage 116:=============================>                       (68 + 53) / 121][Stage 116:===================================>                 (82 + 39) / 121][Stage 116:=============================================>      (105 + 16) / 121][Stage 116:====================================================>(120 + 1) / 121]                                                                                [Stage 117:===========================>                         (64 + 58) / 122][Stage 117:=================================>                   (77 + 45) / 122][Stage 117:===========================================>        (102 + 20) / 122][Stage 117:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.25743565 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=114", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=114,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37715252 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==================================>                  (75 + 40) / 115][Stage 118:=========================================>           (90 + 25) / 115][Stage 118:==================================================>  (109 + 6) / 115][Stage 118:====================================================>(114 + 1) / 115]                                                                                [Stage 119:===============================>                     (69 + 47) / 116][Stage 119:=======================================>             (87 + 29) / 116][Stage 119:============================================>       (100 + 16) / 116]                                                                                Time elapsed: 2.600903568 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=52", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=52,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394875549 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:============================>                        (60 + 53) / 113][Stage 120:==============================>                      (65 + 48) / 113][Stage 120:====================================>                (77 + 36) / 113][Stage 120:=============================================>       (97 + 16) / 113][Stage 120:=================================================>   (106 + 7) / 113]                                                                                [Stage 121:===========================>                         (59 + 55) / 114][Stage 121:=============================>                       (64 + 50) / 114][Stage 121:====================================>                (78 + 36) / 114][Stage 121:========================================>            (88 + 26) / 114][Stage 121:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.358397148 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=119", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=119,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364111509 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:================================>                    (72 + 46) / 118][Stage 122:=================================>                   (75 + 43) / 118][Stage 122:===================================>                 (78 + 40) / 118][Stage 122:======================================>              (86 + 32) / 118][Stage 122:============================================>        (99 + 19) / 118][Stage 122:===================================================> (115 + 3) / 118]                                                                                [Stage 123:================================>                    (73 + 46) / 119][Stage 123:================================>                    (74 + 45) / 119][Stage 123:===================================>                 (80 + 39) / 119][Stage 123:========================================>            (91 + 28) / 119][Stage 123:=============================================>      (104 + 15) / 119][Stage 123:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.431362516 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=224", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=224,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35249013 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:=================================>                   (72 + 41) / 113][Stage 124:=======================================>             (85 + 28) / 113][Stage 124:============================================>        (94 + 19) / 113][Stage 124:================================================>    (104 + 9) / 113][Stage 124:====================================================>(111 + 2) / 113]                                                                                [Stage 125:=======================================>             (85 + 29) / 114][Stage 125:=============================================>       (97 + 17) / 114][Stage 125:==================================================>  (109 + 5) / 114][Stage 125:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.943418618 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=219", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=219,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369269311 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:================================>                    (72 + 46) / 118][Stage 126:==================================>                  (76 + 42) / 118][Stage 126:=========================================>           (92 + 26) / 118][Stage 126:============================================>       (102 + 16) / 118][Stage 126:==================================================>  (112 + 6) / 118]                                                                                [Stage 127:=================================>                   (76 + 43) / 119][Stage 127:======================================>              (87 + 32) / 119][Stage 127:=============================================>      (103 + 16) / 119][Stage 127:==================================================>  (113 + 6) / 119][Stage 127:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.404252174 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=209", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=209,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36335912 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:======================================>              (82 + 31) / 113][Stage 128:===========================================>         (93 + 20) / 113][Stage 128:===============================================>    (103 + 10) / 113][Stage 128:===================================================> (110 + 3) / 113]                                                                                [Stage 129:======================================>              (82 + 32) / 114][Stage 129:============================================>        (95 + 19) / 114][Stage 129:==============================================>     (103 + 11) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.991817814 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=48", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=48,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377167256 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:================================>                    (73 + 45) / 118][Stage 130:===================================>                 (79 + 39) / 118][Stage 130:===========================================>         (96 + 22) / 118][Stage 130:=================================================>   (110 + 8) / 118][Stage 130:====================================================>(117 + 1) / 118]                                                                                [Stage 131:================================>                    (74 + 45) / 119][Stage 131:===================================>                 (80 + 39) / 119][Stage 131:=======================================>             (88 + 31) / 119][Stage 131:=============================================>      (105 + 14) / 119][Stage 131:===================================================> (115 + 4) / 119][Stage 131:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.264495624 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=229", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=229,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384560997 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (59 + 54) / 113][Stage 132:===================================>                 (76 + 37) / 113][Stage 132:============================================>        (94 + 19) / 113][Stage 132:===================================================> (110 + 3) / 113]                                                                                [Stage 133:============================>                        (62 + 52) / 114][Stage 133:==================================>                  (74 + 40) / 114][Stage 133:=============================================>      (100 + 14) / 114][Stage 133:==================================================>  (108 + 6) / 114][Stage 133:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.134132421 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=236", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=236,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355020488 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=====================================>               (79 + 34) / 113][Stage 134:===========================================>         (93 + 20) / 113][Stage 134:===============================================>    (103 + 10) / 113][Stage 134:==================================================>  (107 + 6) / 113][Stage 134:====================================================>(111 + 2) / 113]                                                                                [Stage 135:=======================================>             (85 + 29) / 114][Stage 135:============================================>        (95 + 19) / 114][Stage 135:===============================================>    (104 + 10) / 114][Stage 135:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.085770347 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=193", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=193,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383101323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (59 + 54) / 113][Stage 136:============================>                        (61 + 52) / 113][Stage 136:====================================>                (77 + 36) / 113][Stage 136:==============================================>     (100 + 13) / 113]                                                                                [Stage 137:===========================>                         (60 + 54) / 114][Stage 137:================================>                    (69 + 45) / 114][Stage 137:========================================>            (87 + 27) / 114][Stage 137:=================================================>   (107 + 7) / 114][Stage 137:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.946879612 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=101", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=101,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360639774 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (73 + 45) / 118][Stage 138:==================================>                  (76 + 42) / 118][Stage 138:==========================================>          (95 + 23) / 118][Stage 138:=================================================>   (111 + 7) / 118][Stage 138:====================================================>(116 + 2) / 118]                                                                                [Stage 139:================================>                    (73 + 46) / 119][Stage 139:==================================>                  (77 + 42) / 119][Stage 139:===========================================>         (97 + 22) / 119][Stage 139:===============================================>    (108 + 11) / 119][Stage 139:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.168646852 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=221", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=221,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363371776 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:================================>                    (72 + 46) / 118][Stage 140:==================================>                  (76 + 42) / 118][Stage 140:=======================================>             (87 + 31) / 118][Stage 140:===============================================>    (107 + 11) / 118][Stage 140:===================================================> (115 + 3) / 118]                                                                                [Stage 141:================================>                    (73 + 46) / 119][Stage 141:==================================>                  (77 + 42) / 119][Stage 141:=======================================>             (88 + 31) / 119][Stage 141:================================================>    (110 + 9) / 119][Stage 141:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 2.972782159 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=240", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=240,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419385266 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:=====================================>               (82 + 33) / 115][Stage 142:========================================>            (87 + 28) / 115][Stage 142:=============================================>      (101 + 14) / 115][Stage 142:==================================================>  (110 + 5) / 115]                                                                                [Stage 143:=======================================>             (87 + 29) / 116][Stage 143:============================================>        (98 + 18) / 116][Stage 143:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.570577151 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=186", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=186,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392875282 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 60) / 120][Stage 144:============================>                        (65 + 55) / 120][Stage 144:=================================>                   (75 + 45) / 120][Stage 144:===========================================>        (101 + 19) / 120][Stage 144:==================================================>  (115 + 5) / 120][Stage 144:====================================================>(119 + 1) / 120]                                                                                [Stage 145:==========================>                          (61 + 60) / 121][Stage 145:==============================>                      (69 + 52) / 121][Stage 145:========================================>            (92 + 29) / 121][Stage 145:==============================================>     (109 + 12) / 121][Stage 145:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.136419663 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=214", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=214,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381525066 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:============================>                        (60 + 53) / 113][Stage 146:================================>                    (70 + 43) / 113][Stage 146:=========================================>           (88 + 25) / 113][Stage 146:================================================>    (104 + 9) / 113]                                                                                [Stage 147:============================>                        (61 + 53) / 114][Stage 147:================================>                    (70 + 44) / 114][Stage 147:===========================================>         (93 + 21) / 114][Stage 147:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.085805931 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=165", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=165,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352103219 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:=================================>                   (72 + 41) / 113][Stage 148:======================================>              (82 + 31) / 113][Stage 148:===========================================>         (92 + 21) / 113][Stage 148:==================================================>  (107 + 6) / 113][Stage 148:====================================================>(111 + 2) / 113]                                                                                [Stage 149:======================================>              (82 + 32) / 114][Stage 149:============================================>        (95 + 19) / 114][Stage 149:===============================================>    (104 + 10) / 114][Stage 149:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.978689126 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=37", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=37,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339108288 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:======================================>              (84 + 31) / 115][Stage 150:==========================================>          (93 + 22) / 115][Stage 150:=============================================>      (100 + 15) / 115][Stage 150:==================================================>  (110 + 5) / 115][Stage 150:====================================================>(114 + 1) / 115]                                                                                [Stage 151:=====================================>               (83 + 33) / 116][Stage 151:===========================================>         (95 + 21) / 116][Stage 151:===============================================>    (106 + 10) / 116][Stage 151:===================================================> (112 + 4) / 116][Stage 151:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.254641855 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=152", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=152,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387775376 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==============================>                      (67 + 48) / 115][Stage 152:======================================>              (84 + 31) / 115][Stage 152:============================================>        (96 + 19) / 115][Stage 152:=================================================>   (108 + 7) / 115][Stage 152:====================================================>(114 + 1) / 115]                                                                                [Stage 153:===============================>                     (70 + 46) / 116][Stage 153:=====================================>               (82 + 34) / 116][Stage 153:==============================================>     (104 + 12) / 116][Stage 153:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.812250354 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=102", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=102,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363712454 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:===================================>                 (78 + 40) / 118][Stage 154:============================================>        (99 + 19) / 118][Stage 154:=================================================>   (110 + 8) / 118]                                                                                [Stage 155:================================>                    (73 + 46) / 119][Stage 155:====================================>                (82 + 37) / 119][Stage 155:============================================>        (99 + 20) / 119][Stage 155:=================================================>   (112 + 7) / 119][Stage 155:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.266695903 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=231", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=231,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363185588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (72 + 46) / 118][Stage 156:=================================>                   (75 + 43) / 118][Stage 156:===================================>                 (80 + 38) / 118][Stage 156:==========================================>          (94 + 24) / 118][Stage 156:==============================================>     (106 + 12) / 118][Stage 156:====================================================>(116 + 2) / 118]                                                                                [Stage 157:================================>                    (73 + 46) / 119][Stage 157:=================================>                   (75 + 44) / 119][Stage 157:==================================>                  (78 + 41) / 119][Stage 157:========================================>            (92 + 27) / 119][Stage 157:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.369621161 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=94", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=94,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372050602 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:================================>                    (70 + 45) / 115][Stage 158:=======================================>             (86 + 29) / 115][Stage 158:=============================================>       (98 + 17) / 115][Stage 158:==================================================>  (110 + 5) / 115][Stage 158:====================================================>(114 + 1) / 115]                                                                                [Stage 159:=================================>                   (74 + 42) / 116][Stage 159:=========================================>           (91 + 25) / 116][Stage 159:===============================================>    (106 + 10) / 116][Stage 159:==================================================>  (111 + 5) / 116][Stage 159:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.34768359 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=2", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=2,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360145461 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (72 + 46) / 118][Stage 160:================================>                    (73 + 45) / 118][Stage 160:==================================>                  (76 + 42) / 118][Stage 160:=======================================>             (87 + 31) / 118][Stage 160:==========================================>          (95 + 23) / 118][Stage 160:================================================>    (109 + 9) / 118]                                                                                [Stage 161:================================>                    (74 + 45) / 119][Stage 161:===================================>                 (80 + 39) / 119][Stage 161:===========================================>         (97 + 22) / 119][Stage 161:===============================================>    (109 + 10) / 119][Stage 161:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.50829991 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=74", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=74,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367827185 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:================================>                    (72 + 46) / 118][Stage 162:================================>                    (73 + 45) / 118][Stage 162:=====================================>               (83 + 35) / 118][Stage 162:========================================>            (91 + 27) / 118][Stage 162:==============================================>     (106 + 12) / 118][Stage 162:====================================================>(116 + 2) / 118]                                                                                [Stage 163:=================================>                   (75 + 44) / 119][Stage 163:===================================>                 (80 + 39) / 119][Stage 163:========================================>            (90 + 29) / 119][Stage 163:=============================================>      (104 + 15) / 119][Stage 163:==================================================>  (114 + 5) / 119][Stage 163:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.803550919 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=118", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=118,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373642033 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==============================>                      (66 + 49) / 115][Stage 164:==================================>                  (74 + 41) / 115][Stage 164:========================================>            (87 + 28) / 115][Stage 164:===============================================>    (104 + 11) / 115][Stage 164:=================================================>   (107 + 8) / 115][Stage 164:====================================================>(113 + 2) / 115][Stage 164:====================================================>(114 + 1) / 115]                                                                                [Stage 165:==================================>                  (75 + 41) / 116][Stage 165:======================================>              (85 + 31) / 116][Stage 165:============================================>        (98 + 18) / 116][Stage 165:=================================================>   (109 + 7) / 116][Stage 165:====================================================>(114 + 2) / 116][Stage 165:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.485926408 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=93", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=93,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34832746 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===================================>                 (76 + 37) / 113][Stage 166:========================================>            (86 + 27) / 113][Stage 166:==============================================>      (99 + 14) / 113][Stage 166:==================================================>  (108 + 5) / 113][Stage 166:====================================================>(111 + 2) / 113]                                                                                [Stage 167:======================================>              (83 + 31) / 114][Stage 167:===========================================>         (93 + 21) / 114][Stage 167:==============================================>     (103 + 11) / 114][Stage 167:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.060298813 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=77", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=77,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41519896 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 61) / 121][Stage 168:============================>                        (64 + 57) / 121][Stage 168:=======================================>             (90 + 31) / 121][Stage 168:==============================================>     (109 + 12) / 121][Stage 168:===================================================> (117 + 4) / 121]                                                                                [Stage 169:==========================>                          (61 + 61) / 122][Stage 169:===========================>                         (64 + 58) / 122][Stage 169:===================================>                 (82 + 40) / 122][Stage 169:=============================================>      (106 + 16) / 122][Stage 169:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.09762498 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=145", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=145,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403948885 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 60) / 120][Stage 170:===============================>                     (71 + 49) / 120][Stage 170:=======================================>             (89 + 31) / 120][Stage 170:===============================================>    (109 + 11) / 120][Stage 170:====================================================>(118 + 2) / 120]                                                                                [Stage 171:===========================>                         (62 + 59) / 121][Stage 171:===============================>                     (72 + 49) / 121][Stage 171:======================================>              (88 + 33) / 121][Stage 171:============================================>       (104 + 17) / 121][Stage 171:=================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.263705126 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=25", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=25,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363604406 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:================================>                    (72 + 46) / 118][Stage 172:===================================>                 (80 + 38) / 118][Stage 172:======================================>              (86 + 32) / 118][Stage 172:==========================================>          (94 + 24) / 118][Stage 172:=================================================>   (110 + 8) / 118][Stage 172:====================================================>(117 + 1) / 118]                                                                                [Stage 173:================================>                    (73 + 46) / 119][Stage 173:=================================>                   (75 + 44) / 119][Stage 173:=====================================>               (85 + 34) / 119][Stage 173:============================================>       (101 + 18) / 119][Stage 173:==================================================>  (113 + 6) / 119][Stage 173:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.609180613 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=13", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=13,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376542734 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:================================>                    (70 + 45) / 115][Stage 174:=======================================>             (86 + 29) / 115][Stage 174:=============================================>       (99 + 16) / 115][Stage 174:===================================================> (111 + 4) / 115]                                                                                [Stage 175:==================================>                  (75 + 41) / 116][Stage 175:========================================>            (88 + 28) / 116][Stage 175:=============================================>       (99 + 17) / 116][Stage 175:===================================================> (113 + 3) / 116][Stage 175:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.327785089 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=32", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=32,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364369431 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (72 + 46) / 118][Stage 176:==================================>                  (77 + 41) / 118][Stage 176:=====================================>               (83 + 35) / 118][Stage 176:============================================>       (102 + 16) / 118][Stage 176:===================================================> (114 + 4) / 118][Stage 176:====================================================>(117 + 1) / 118]                                                                                [Stage 177:=================================>                   (75 + 44) / 119][Stage 177:====================================>                (82 + 37) / 119][Stage 177:========================================>            (91 + 28) / 119][Stage 177:=============================================>      (104 + 15) / 119][Stage 177:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.707639622 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=70", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=70,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.331997639 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=====================================>               (81 + 34) / 115][Stage 178:========================================>            (87 + 28) / 115][Stage 178:===============================================>    (105 + 10) / 115][Stage 178:====================================================>(113 + 2) / 115]                                                                                [Stage 179:=====================================>               (83 + 33) / 116][Stage 179:========================================>            (88 + 28) / 116][Stage 179:===============================================>    (105 + 11) / 116][Stage 179:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.520167236 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=234", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=234,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383128787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (58 + 55) / 113][Stage 180:============================>                        (60 + 53) / 113][Stage 180:====================================>                (78 + 35) / 113][Stage 180:============================================>        (94 + 19) / 113][Stage 180:===================================================> (110 + 3) / 113]                                                                                [Stage 181:=============================>                       (63 + 51) / 114][Stage 181:====================================>                (78 + 36) / 114][Stage 181:=============================================>      (100 + 14) / 114][Stage 181:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.020522658 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416923909 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:================================>                    (72 + 46) / 118][Stage 182:=================================>                   (75 + 43) / 118][Stage 182:========================================>            (90 + 28) / 118][Stage 182:===============================================>    (107 + 11) / 118][Stage 182:===================================================> (115 + 3) / 118]                                                                                [Stage 183:=================================>                   (75 + 44) / 119][Stage 183:======================================>              (86 + 33) / 119][Stage 183:==========================================>          (95 + 24) / 119][Stage 183:================================================>    (110 + 9) / 119][Stage 183:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.328423869 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=54", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=54,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417749275 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (60 + 60) / 120][Stage 184:===============================>                     (71 + 49) / 120][Stage 184:=======================================>             (89 + 31) / 120][Stage 184:===================================================> (116 + 4) / 120]                                                                                [Stage 185:============================>                        (65 + 56) / 121][Stage 185:===================================>                 (82 + 39) / 121][Stage 185:============================================>       (104 + 17) / 121][Stage 185:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.198205473 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=83", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=83,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377698679 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (58 + 55) / 113][Stage 186:=================================>                   (72 + 41) / 113][Stage 186:==========================================>          (90 + 23) / 113][Stage 186:==================================================>  (107 + 6) / 113]                                                                                [Stage 187:============================>                        (61 + 53) / 114][Stage 187:=================================>                   (71 + 43) / 114][Stage 187:========================================>            (88 + 26) / 114][Stage 187:==============================================>     (101 + 13) / 114][Stage 187:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.214983607 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=49", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=49,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373751146 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (59 + 54) / 113][Stage 188:==============================>                      (66 + 47) / 113][Stage 188:=======================================>             (85 + 28) / 113][Stage 188:=================================================>   (105 + 8) / 113][Stage 188:====================================================>(112 + 1) / 113]                                                                                [Stage 189:=============================>                       (63 + 51) / 114][Stage 189:==================================>                  (75 + 39) / 114][Stage 189:============================================>        (95 + 19) / 114][Stage 189:===================================================> (111 + 3) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.274907702 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=235", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=235,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400496628 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 60) / 120][Stage 190:=============================>                       (66 + 54) / 120][Stage 190:=====================================>               (86 + 34) / 120][Stage 190:==============================================>     (107 + 13) / 120][Stage 190:===================================================> (117 + 3) / 120]                                                                                [Stage 191:==========================>                          (61 + 60) / 121][Stage 191:==============================>                      (70 + 51) / 121][Stage 191:========================================>            (93 + 28) / 121][Stage 191:=================================================>   (113 + 8) / 121][Stage 191:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.036033578 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=146", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=146,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33976552 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:====================================>                (79 + 36) / 115][Stage 192:=====================================>               (82 + 33) / 115][Stage 192:==========================================>          (93 + 22) / 115][Stage 192:===============================================>    (104 + 11) / 115][Stage 192:==================================================>  (109 + 6) / 115][Stage 192:====================================================>(114 + 1) / 115]                                                                                [Stage 193:=====================================>               (81 + 35) / 116][Stage 193:========================================>            (88 + 28) / 116][Stage 193:==============================================>     (104 + 12) / 116][Stage 193:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.034814303 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=227", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=227,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399551458 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:============================>                        (61 + 52) / 113][Stage 194:==================================>                  (74 + 39) / 113][Stage 194:==========================================>          (91 + 22) / 113][Stage 194:==============================================>     (101 + 12) / 113]                                                                                [Stage 195:===========================>                         (59 + 55) / 114][Stage 195:===============================>                     (68 + 46) / 114][Stage 195:=========================================>           (90 + 24) / 114][Stage 195:===============================================>    (104 + 10) / 114][Stage 195:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.128406759 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=184", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=184,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391238269 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (62 + 59) / 121][Stage 196:==============================>                      (70 + 51) / 121][Stage 196:=====================================>               (86 + 35) / 121][Stage 196:===============================================>    (111 + 10) / 121]                                                                                [Stage 197:===========================>                         (63 + 59) / 122][Stage 197:=================================>                   (77 + 45) / 122][Stage 197:===========================================>         (99 + 23) / 122][Stage 197:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.064393798 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=78", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=78,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424524126 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:============================>                        (60 + 53) / 113][Stage 198:================================>                    (70 + 43) / 113][Stage 198:=======================================>             (85 + 28) / 113][Stage 198:==============================================>     (102 + 11) / 113]                                                                                [Stage 199:===========================>                         (60 + 54) / 114][Stage 199:==================================>                  (74 + 40) / 114][Stage 199:========================================>            (88 + 26) / 114][Stage 199:===============================================>    (104 + 10) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.145749353 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=21", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=21,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395401822 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (61 + 59) / 120][Stage 200:===============================>                     (72 + 48) / 120][Stage 200:===========================================>         (98 + 22) / 120][Stage 200:===================================================> (116 + 4) / 120]                                                                                [Stage 201:============================>                        (65 + 56) / 121][Stage 201:==================================>                  (79 + 42) / 121][Stage 201:==========================================>         (100 + 21) / 121][Stage 201:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.956574427 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m5.750s
user	11m19.708s
sys	0m37.200s
