Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/25 01:56:49 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 01:57:03 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 01:57:03 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 01:57:04 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/25 01:57:06 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 01:57:17 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170525015706-0622).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@158cb50a

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.396633604 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIn dex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=====>                                                (11 + 104) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:======================================>                (81 + 34) / 115][Stage 0:==========================================>            (88 + 27) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:====================================================>  (109 + 6) / 115]                                                                                [Stage 1:===========================>                           (59 + 57) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:========================================>              (86 + 30) / 116][Stage 1:============================================>          (93 + 23) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:====================================================>  (110 + 6) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.612276884 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIn dex<=133", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=133,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.750958705 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 2:=========================>                             (52 + 61) / 113][Stage 2:=============================>                         (60 + 53) / 113][Stage 2:==================================>                    (70 + 43) / 113][Stage 2:=====================================>                 (77 + 36) / 113][Stage 2:==========================================>            (87 + 26) / 113][Stage 2:============================================>          (92 + 21) / 113][Stage 2:================================================>     (101 + 12) / 113][Stage 2:=====================================================> (110 + 3) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:==============================>                        (63 + 51) / 114][Stage 3:=================================>                     (70 + 44) / 114][Stage 3:====================================>                  (76 + 38) / 114][Stage 3:========================================>              (84 + 30) / 114][Stage 3:=============================================>         (94 + 20) / 114][Stage 3:================================================>     (102 + 12) / 114][Stage 3:===================================================>   (107 + 7) / 114][Stage 3:=====================================================> (111 + 3) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.781735052 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIn dex<=206", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.622319432 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 4:=================================>                     (70 + 45) / 115][Stage 4:=====================================>                 (79 + 36) / 115][Stage 4:==========================================>            (88 + 27) / 115][Stage 4:===========================================>           (91 + 24) / 115][Stage 4:================================================>     (103 + 12) / 115][Stage 4:=====================================================> (111 + 4) / 115][Stage 4:======================================================>(114 + 1) / 115]                                                                                [Stage 5:=======================================>               (84 + 32) / 116][Stage 5:===========================================>           (91 + 25) / 116][Stage 5:============================================>          (93 + 23) / 116][Stage 5:===============================================>      (103 + 13) / 116][Stage 5:===================================================>   (109 + 7) / 116][Stage 5:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.069774938 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZInd ex<=40", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.841433742 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 6:===========================>                           (57 + 56) / 113][Stage 6:=============================>                         (61 + 52) / 113][Stage 6:====================================>                  (75 + 38) / 113][Stage 6:========================================>              (84 + 29) / 113][Stage 6:============================================>          (91 + 22) / 113][Stage 6:================================================>     (101 + 12) / 113][Stage 6:======================================================>(111 + 2) / 113]                                                                                [Stage 7:===========================>                           (58 + 56) / 114][Stage 7:=============================>                         (61 + 53) / 114][Stage 7:==================================>                    (71 + 43) / 114][Stage 7:======================================>                (80 + 34) / 114][Stage 7:===========================================>           (90 + 24) / 114][Stage 7:====================================================>  (108 + 6) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.366435541 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIn dex<=215", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.612641525 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 8:===========================>                           (56 + 57) / 113][Stage 8:============================>                          (58 + 55) / 113][Stage 8:===============================>                       (64 + 49) / 113][Stage 8:=======================================>               (81 + 32) / 113][Stage 8:================================================>     (101 + 12) / 113][Stage 8:====================================================>  (107 + 6) / 113][Stage 8:=====================================================> (109 + 4) / 113][Stage 8:======================================================>(111 + 2) / 113]                                                                                [Stage 9:============================>                          (59 + 55) / 114][Stage 9:==============================>                        (63 + 51) / 114][Stage 9:====================================>                  (75 + 39) / 114][Stage 9:============================================>          (93 + 21) / 114][Stage 9:=================================================>    (104 + 10) / 114][Stage 9:======================================================>(112 + 2) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.265867154 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZInd ex<=13", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.585320787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 10:==============================>                       (64 + 51) / 115][Stage 10:=================================>                    (71 + 44) / 115][Stage 10:======================================>               (82 + 33) / 115][Stage 10:===========================================>          (92 + 23) / 115][Stage 10:==============================================>      (101 + 14) / 115][Stage 10:==================================================>   (107 + 8) / 115][Stage 10:===================================================>  (110 + 5) / 115]                                                                                [Stage 11:===============================>                      (68 + 48) / 116][Stage 11:====================================>                 (79 + 37) / 116][Stage 11:===========================================>          (93 + 23) / 116][Stage 11:===============================================>     (104 + 12) / 116][Stage 11:==================================================>   (109 + 7) / 116][Stage 11:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 5.47047237 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIn dex<=179", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=179,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.589361401 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 12:===========================>                          (57 + 56) / 113][Stage 12:==============================>                       (64 + 49) / 113][Stage 12:===================================>                  (75 + 38) / 113][Stage 12:========================================>             (85 + 28) / 113][Stage 12:===========================================>          (90 + 23) / 113][Stage 12:===============================================>      (99 + 14) / 113][Stage 12:===================================================>  (107 + 6) / 113]                                                                                [Stage 13:============================>                         (60 + 54) / 114][Stage 13:==============================>                       (64 + 50) / 114][Stage 13:======================================>               (81 + 33) / 114][Stage 13:=============================================>        (96 + 18) / 114][Stage 13:================================================>    (104 + 10) / 114][Stage 13:===================================================>  (109 + 5) / 114][Stage 13:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.425137409 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZInd ex<=31", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.557234702 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 14:==========================>                           (60 + 61) / 121][Stage 14:============================>                         (63 + 58) / 121][Stage 14:==================================>                   (78 + 43) / 121][Stage 14:===========================================>         (100 + 21) / 121][Stage 14:===================================================>  (116 + 5) / 121]                                                                                [Stage 15:===========================>                          (61 + 61) / 122][Stage 15:=============================>                        (66 + 56) / 122][Stage 15:==================================>                   (78 + 44) / 122][Stage 15:======================================>               (88 + 34) / 122][Stage 15:============================================>        (103 + 19) / 122][Stage 15:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.804663203 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIn dex<=234", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=234,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.566756141 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 16:===========================>                          (60 + 60) / 120][Stage 16:=============================>                        (66 + 54) / 120][Stage 16:=====================================>                (84 + 36) / 120][Stage 16:===============================================>     (107 + 13) / 120][Stage 16:====================================================> (117 + 3) / 120]                                                                                [Stage 17:===========================>                          (62 + 59) / 121][Stage 17:================================>                     (72 + 49) / 121][Stage 17:======================================>               (86 + 35) / 121][Stage 17:===============================================>     (108 + 13) / 121][Stage 17:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.854582639 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIn dex<=194", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=194,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.491084698 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 18:================================>                     (72 + 46) / 118][Stage 18:==================================>                   (75 + 43) / 118][Stage 18:======================================>               (84 + 34) / 118][Stage 18:===========================================>          (95 + 23) / 118][Stage 18:================================================>    (108 + 10) / 118][Stage 18:====================================================> (114 + 4) / 118]                                                                                [Stage 19:==================================>                   (76 + 43) / 119][Stage 19:======================================>               (85 + 34) / 119][Stage 19:=========================================>            (92 + 27) / 119][Stage 19:==============================================>      (104 + 15) / 119][Stage 19:==================================================>   (112 + 7) / 119][Stage 19:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.027118415 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIn dex<=205", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=205,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455341486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 20:=======================================>              (84 + 31) / 115][Stage 20:===========================================>          (93 + 22) / 115][Stage 20:=====================================================>(113 + 2) / 115][Stage 20:=====================================================>(114 + 1) / 115]                                                                                [Stage 21:======================================>               (82 + 34) / 116][Stage 21:===========================================>          (93 + 23) / 116][Stage 21:==============================================>      (102 + 14) / 116][Stage 21:==================================================>   (109 + 7) / 116][Stage 21:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.992644629 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIn dex<=135", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.534278938 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 22:==========================>                           (60 + 61) / 121][Stage 22:============================>                         (63 + 58) / 121][Stage 22:==============================>                       (68 + 53) / 121][Stage 22:=======================================>              (88 + 33) / 121][Stage 22:================================================>    (110 + 11) / 121][Stage 22:====================================================> (117 + 4) / 121]                                                                                [Stage 23:===========================>                          (61 + 61) / 122][Stage 23:============================>                         (65 + 57) / 122][Stage 23:==================================>                   (77 + 45) / 122][Stage 23:===========================================>         (100 + 22) / 122][Stage 23:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.654352794 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIn dex<=202", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.475298807 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 24:=================================>                    (73 + 45) / 118][Stage 24:===================================>                  (78 + 40) / 118][Stage 24:===========================================>          (95 + 23) / 118][Stage 24:================================================>    (107 + 11) / 118][Stage 24:==================================================>   (111 + 7) / 118][Stage 24:===================================================>  (113 + 5) / 118][Stage 24:====================================================> (114 + 4) / 118]                                                                                [Stage 25:==================================>                   (75 + 44) / 119][Stage 25:=======================================>              (86 + 33) / 119][Stage 25:============================================>         (99 + 20) / 119][Stage 25:====================================================> (116 + 3) / 119][Stage 25:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.332186 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZInd ex<=48", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=48,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.510310653 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 26:===========================>                          (61 + 59) / 120][Stage 26:===============================>                      (71 + 49) / 120][Stage 26:=======================================>              (88 + 32) / 120][Stage 26:===================================================>  (115 + 5) / 120]                                                                                [Stage 27:=============================>                        (67 + 54) / 121][Stage 27:=====================================>                (83 + 38) / 121][Stage 27:=========================================>            (92 + 29) / 121][Stage 27:=============================================>       (104 + 17) / 121][Stage 27:===================================================>  (115 + 6) / 121][Stage 27:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.445740623 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZInd ex<=26", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431738519 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 28:=================================>                    (70 + 43) / 113][Stage 28:======================================>               (80 + 33) / 113][Stage 28:==========================================>           (88 + 25) / 113][Stage 28:=================================================>    (104 + 9) / 113][Stage 28:===================================================>  (108 + 5) / 113]                                                                                [Stage 29:===================================>                  (75 + 39) / 114][Stage 29:=======================================>              (84 + 30) / 114][Stage 29:============================================>         (93 + 21) / 114][Stage 29:===============================================>     (102 + 12) / 114][Stage 29:===================================================>  (109 + 5) / 114][Stage 29:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.921708908 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIn dex<=207", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=207,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.481383766 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 30:================================>                     (72 + 46) / 118][Stage 30:=====================================>                (81 + 37) / 118][Stage 30:============================================>        (100 + 18) / 118][Stage 30:==================================================>   (111 + 7) / 118][Stage 30:====================================================> (114 + 4) / 118][Stage 30:=====================================================>(116 + 2) / 118]                                                                                [Stage 31:=================================>                    (73 + 46) / 119][Stage 31:====================================>                 (80 + 39) / 119][Stage 31:============================================>         (99 + 20) / 119][Stage 31:================================================>    (109 + 10) / 119][Stage 31:===================================================>  (113 + 6) / 119][Stage 31:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.7503432 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZInd ex<=88", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=88,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412959557 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 32:=====================================>                (80 + 35) / 115][Stage 32:=======================================>              (84 + 31) / 115][Stage 32:===========================================>          (93 + 22) / 115][Stage 32:==============================================>      (100 + 15) / 115][Stage 32:===============================================>     (104 + 11) / 115][Stage 32:===================================================>  (110 + 5) / 115][Stage 32:====================================================> (112 + 3) / 115]                                                                                [Stage 33:======================================>               (83 + 33) / 116][Stage 33:===========================================>          (93 + 23) / 116][Stage 33:===============================================>     (104 + 12) / 116][Stage 33:===================================================>  (110 + 6) / 116][Stage 33:====================================================> (112 + 4) / 116][Stage 33:====================================================> (113 + 3) / 116][Stage 33:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.832820877 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIn dex<=188", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=188,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.531418193 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 34:==========================>                           (60 + 61) / 121][Stage 34:=============================>                        (66 + 55) / 121][Stage 34:=================================>                    (74 + 47) / 121][Stage 34:===========================================>          (97 + 24) / 121][Stage 34:================================================>    (110 + 11) / 121][Stage 34:====================================================> (118 + 3) / 121]                                                                                [Stage 35:===========================>                          (62 + 60) / 122][Stage 35:=================================>                    (75 + 47) / 122][Stage 35:=======================================>              (90 + 32) / 122][Stage 35:================================================>    (112 + 10) / 122][Stage 35:===================================================>  (117 + 5) / 122][Stage 35:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.960836756 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIn dex<=185", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=185,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.517562453 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 36:===========================>                          (62 + 58) / 120][Stage 36:==================================>                   (77 + 43) / 120][Stage 36:============================================>         (98 + 22) / 120][Stage 36:================================================>    (109 + 11) / 120][Stage 36:=====================================================>(119 + 1) / 120]                                                                                [Stage 37:===========================>                          (61 + 60) / 121][Stage 37:=============================>                        (66 + 55) / 121][Stage 37:=======================================>              (89 + 32) / 121][Stage 37:==================================================>   (114 + 7) / 121][Stage 37:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.288987082 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIn dex<=180", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=180,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494891376 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 38:============================>                         (59 + 54) / 113][Stage 38:=============================>                        (62 + 51) / 113][Stage 38:======================================>               (80 + 33) / 113][Stage 38:================================================>    (103 + 10) / 113][Stage 38:====================================================> (109 + 4) / 113]                                                                                [Stage 39:============================>                         (60 + 54) / 114][Stage 39:=================================>                    (70 + 44) / 114][Stage 39:=========================================>            (88 + 26) / 114][Stage 39:==============================================>       (98 + 16) / 114][Stage 39:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.48881577 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIn dex<=235", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.520429081 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 40:===========================>                          (60 + 60) / 120][Stage 40:=============================>                        (65 + 55) / 120][Stage 40:==================================>                   (77 + 43) / 120][Stage 40:============================================>         (98 + 22) / 120][Stage 40:====================================================> (116 + 4) / 120]                                                                                [Stage 41:===========================>                          (61 + 60) / 121][Stage 41:=============================>                        (66 + 55) / 121][Stage 41:=====================================>                (83 + 38) / 121][Stage 41:=============================================>       (103 + 18) / 121][Stage 41:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.294795305 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIn dex<=122", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=122,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.513773352 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 42:===========================>                          (60 + 60) / 120][Stage 42:=============================>                        (65 + 55) / 120][Stage 42:===================================>                  (78 + 42) / 120][Stage 42:==========================================>           (95 + 25) / 120][Stage 42:==================================================>   (113 + 7) / 120]                                                                                [Stage 43:============================>                         (64 + 57) / 121][Stage 43:==================================>                   (78 + 43) / 121][Stage 43:===========================================>          (97 + 24) / 121][Stage 43:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.249654706 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZInde x<=10", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=10,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.475239449 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 44:==========================>                           (60 + 61) / 121][Stage 44:===========================>                          (62 + 59) / 121][Stage 44:=================================>                    (74 + 47) / 121][Stage 44:===========================================>         (100 + 21) / 121][Stage 44:====================================================> (118 + 3) / 121]                                                                                [Stage 45:===========================>                          (63 + 59) / 122][Stage 45:=================================>                    (75 + 47) / 122][Stage 45:=======================================>              (90 + 32) / 122][Stage 45:==================================================>   (113 + 9) / 122][Stage 45:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.600179423 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZInd ex<=67", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=67,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403880849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 46:==================================>                   (72 + 41) / 113][Stage 46:=========================================>            (87 + 26) / 113][Stage 46:===============================================>     (101 + 12) / 113][Stage 46:====================================================> (109 + 4) / 113][Stage 46:=====================================================>(111 + 2) / 113]                                                                                [Stage 47:===================================>                  (74 + 40) / 114][Stage 47:======================================>               (82 + 32) / 114][Stage 47:==========================================>           (89 + 25) / 114][Stage 47:=================================================>    (105 + 9) / 114][Stage 47:===================================================>  (108 + 6) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.402370703 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIn dex<=175", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480488408 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 48:================================>                     (72 + 46) / 118][Stage 48:=================================>                    (74 + 44) / 118][Stage 48:=====================================>                (82 + 36) / 118][Stage 48:=========================================>            (91 + 27) / 118][Stage 48:==================================================>   (110 + 8) / 118][Stage 48:=====================================================>(117 + 1) / 118]                                                                                [Stage 49:=================================>                    (73 + 46) / 119][Stage 49:===================================>                  (79 + 40) / 119][Stage 49:=======================================>              (87 + 32) / 119][Stage 49:==========================================>           (94 + 25) / 119][Stage 49:==============================================>      (105 + 14) / 119][Stage 49:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.646404391 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIn dex<=141", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401877598 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 50:======================================>               (82 + 33) / 115][Stage 50:============================================>         (94 + 21) / 115][Stage 50:===================================================>  (109 + 6) / 115]                                                                                [Stage 51:=======================================>              (84 + 32) / 116][Stage 51:===========================================>          (93 + 23) / 116][Stage 51:===============================================>     (105 + 11) / 116][Stage 51:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.621695484 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIn dex<=137", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=137,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410534413 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 52:=================================>                    (70 + 43) / 113][Stage 52:=====================================>                (78 + 35) / 113][Stage 52:=========================================>            (86 + 27) / 113][Stage 52:==============================================>       (98 + 15) / 113][Stage 52:===================================================>  (107 + 6) / 113][Stage 52:====================================================> (110 + 3) / 113]                                                                                [Stage 53:====================================>                 (78 + 36) / 114][Stage 53:=========================================>            (88 + 26) / 114][Stage 53:==============================================>       (98 + 16) / 114][Stage 53:===================================================>  (109 + 5) / 114][Stage 53:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.427516677 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIn dex<=154", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=154,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448746771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 54:============================>                         (59 + 54) / 113][Stage 54:=============================>                        (61 + 52) / 113][Stage 54:===================================>                  (74 + 39) / 113][Stage 54:===========================================>          (92 + 21) / 113][Stage 54:===================================================>  (108 + 5) / 113]                                                                                [Stage 55:===========================>                          (59 + 55) / 114][Stage 55:=============================>                        (63 + 51) / 114][Stage 55:======================================>               (82 + 32) / 114][Stage 55:==============================================>       (99 + 15) / 114][Stage 55:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.261519695 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIn dex<=134", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=134,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447569725 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 56:===========================>                          (58 + 55) / 113][Stage 56:============================>                         (60 + 53) / 113][Stage 56:================================>                     (68 + 45) / 113][Stage 56:=======================================>              (82 + 31) / 113][Stage 56:============================================>         (94 + 19) / 113][Stage 56:==================================================>   (105 + 8) / 113]                                                                                [Stage 57:===========================>                          (59 + 55) / 114][Stage 57:==============================>                       (65 + 49) / 114][Stage 57:========================================>             (85 + 29) / 114][Stage 57:=============================================>        (95 + 19) / 114][Stage 57:===================================================>  (108 + 6) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.959968253 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZInd ex<=52", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=52,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467856368 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:============================>                         (63 + 57) / 120][Stage 58:====================================>                 (82 + 38) / 120][Stage 58:=============================================>       (102 + 18) / 120][Stage 58:=====================================================>(119 + 1) / 120]                                                                                [Stage 59:============================>                         (63 + 58) / 121][Stage 59:=================================>                    (75 + 46) / 121][Stage 59:===========================================>          (97 + 24) / 121][Stage 59:===================================================>  (116 + 5) / 121][Stage 59:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.497697816 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZInd ex<=76", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=76,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394066019 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 60:=======================================>              (84 + 31) / 115][Stage 60:============================================>         (94 + 21) / 115][Stage 60:================================================>    (105 + 10) / 115][Stage 60:====================================================> (111 + 4) / 115][Stage 60:=====================================================>(114 + 1) / 115]                                                                                [Stage 61:=====================================>                (81 + 35) / 116][Stage 61:=========================================>            (90 + 26) / 116][Stage 61:=================================================>    (107 + 9) / 116][Stage 61:====================================================> (113 + 3) / 116][Stage 61:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.009739336 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIn dex<=152", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=152,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394271659 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 62:======================================>               (81 + 34) / 115][Stage 62:======================================>               (83 + 32) / 115][Stage 62:==============================================>       (98 + 17) / 115][Stage 62:===================================================>  (109 + 6) / 115]                                                                                [Stage 63:=======================================>              (84 + 32) / 116][Stage 63:=========================================>            (90 + 26) / 116][Stage 63:==============================================>      (101 + 15) / 116][Stage 63:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.896175516 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIn dex<=225", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=225,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37808913 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 64:======================================>               (82 + 33) / 115][Stage 64:========================================>             (87 + 28) / 115][Stage 64:==============================================>      (101 + 14) / 115][Stage 64:====================================================> (112 + 3) / 115]                                                                                [Stage 65:======================================>               (82 + 34) / 116][Stage 65:========================================>             (86 + 30) / 116][Stage 65:=============================================>        (97 + 19) / 116][Stage 65:===============================================>     (103 + 13) / 116][Stage 65:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.828680607 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIn dex<=178", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=178,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446272673 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 66:============================>                         (59 + 54) / 113][Stage 66:=============================>                        (62 + 51) / 113][Stage 66:======================================>               (80 + 33) / 113][Stage 66:============================================>         (93 + 20) / 113][Stage 66:==================================================>   (105 + 8) / 113][Stage 66:=====================================================>(111 + 2) / 113]                                                                                [Stage 67:===========================>                          (59 + 55) / 114][Stage 67:=============================>                        (63 + 51) / 114][Stage 67:===================================>                  (75 + 39) / 114][Stage 67:==============================================>       (99 + 15) / 114][Stage 67:================================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.476888749 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZInd ex<=70", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=70,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404282757 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 68:=================================>                    (74 + 44) / 118][Stage 68:====================================>                 (79 + 39) / 118][Stage 68:=======================================>              (87 + 31) / 118][Stage 68:=============================================>       (101 + 17) / 118][Stage 68:====================================================> (114 + 4) / 118]                                                                                [Stage 69:==================================>                   (76 + 43) / 119][Stage 69:===================================>                  (78 + 41) / 119][Stage 69:======================================>               (85 + 34) / 119][Stage 69:===========================================>          (95 + 24) / 119][Stage 69:==================================================>   (111 + 8) / 119][Stage 69:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.615708034 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIn dex<=138", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=138,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459292484 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 70:============================>                         (59 + 54) / 113][Stage 70:============================>                         (60 + 53) / 113][Stage 70:===================================>                  (74 + 39) / 113][Stage 70:===========================================>          (92 + 21) / 113][Stage 70:==================================================>   (106 + 7) / 113][Stage 70:===================================================>  (108 + 5) / 113]                                                                                [Stage 71:==============================>                       (64 + 50) / 114][Stage 71:====================================>                 (77 + 37) / 114][Stage 71:=============================================>        (97 + 17) / 114][Stage 71:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.415669034 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZInd ex<=64", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=64,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454588243 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 72:==========================>                           (60 + 61) / 121][Stage 72:===========================>                          (61 + 60) / 121][Stage 72:===============================>                      (71 + 50) / 121][Stage 72:========================================>             (90 + 31) / 121][Stage 72:================================================>    (111 + 10) / 121][Stage 72:=====================================================>(120 + 1) / 121]                                                                                [Stage 73:===========================>                          (61 + 61) / 122][Stage 73:==============================>                       (69 + 53) / 122][Stage 73:===================================>                  (81 + 41) / 122][Stage 73:============================================>        (102 + 20) / 122][Stage 73:=====================================================>(120 + 2) / 122][Stage 73:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.848734636 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZInde x<=5", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=5,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447339991 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 74:==========================>                           (60 + 61) / 121][Stage 74:=============================>                        (66 + 55) / 121][Stage 74:====================================>                 (81 + 40) / 121][Stage 74:===========================================>         (100 + 21) / 121][Stage 74:=====================================================>(119 + 2) / 121]                                                                                [Stage 75:===========================>                          (63 + 59) / 122][Stage 75:==============================>                       (69 + 53) / 122][Stage 75:=========================================>            (94 + 28) / 122][Stage 75:==================================================>   (113 + 9) / 122][Stage 75:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.641467564 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZInd ex<=21", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=21,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39677008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 76:===================================>                  (74 + 39) / 113][Stage 76:======================================>               (81 + 32) / 113][Stage 76:===========================================>          (92 + 21) / 113][Stage 76:==================================================>   (105 + 8) / 113][Stage 76:=====================================================>(112 + 1) / 113]                                                                                [Stage 77:======================================>               (81 + 33) / 114][Stage 77:============================================>         (93 + 21) / 114][Stage 77:==============================================>      (101 + 13) / 114][Stage 77:==================================================>   (107 + 7) / 114][Stage 77:=====================================================>(112 + 2) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.361921231 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZInd ex<=82", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=82,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441156322 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 78:======================================>               (83 + 32) / 115][Stage 78:=========================================>            (88 + 27) / 115][Stage 78:===============================================>     (103 + 12) / 115][Stage 78:=====================================================>(113 + 2) / 115]                                                                                [Stage 79:======================================>               (83 + 33) / 116][Stage 79:===========================================>          (93 + 23) / 116][Stage 79:===================================================>  (111 + 5) / 116][Stage 79:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.674519827 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZInd ex<=85", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361444932 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 80:======================================>               (81 + 34) / 115][Stage 80:==========================================>           (91 + 24) / 115][Stage 80:==============================================>       (98 + 17) / 115][Stage 80:===================================================>  (110 + 5) / 115][Stage 80:=====================================================>(114 + 1) / 115]                                                                                [Stage 81:=======================================>              (85 + 31) / 116][Stage 81:============================================>         (96 + 20) / 116][Stage 81:==============================================>      (101 + 15) / 116][Stage 81:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.126267944 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIn dex<=161", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=161,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408724146 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 82:===========================>                          (58 + 55) / 113][Stage 82:=============================>                        (61 + 52) / 113][Stage 82:===================================>                  (75 + 38) / 113][Stage 82:=============================================>        (96 + 17) / 113][Stage 82:=====================================================>(111 + 2) / 113]                                                                                [Stage 83:============================>                         (60 + 54) / 114][Stage 83:===============================>                      (66 + 48) / 114][Stage 83:========================================>             (85 + 29) / 114][Stage 83:==================================================>   (106 + 8) / 114][Stage 83:=====================================================>(112 + 2) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.494823175 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIn dex<=171", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40272652 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 84:==================================>                   (73 + 42) / 115][Stage 84:===========================================>          (93 + 22) / 115][Stage 84:==================================================>   (108 + 7) / 115][Stage 84:====================================================> (112 + 3) / 115]                                                                                [Stage 85:=================================>                    (71 + 45) / 116][Stage 85:=======================================>              (85 + 31) / 116][Stage 85:===========================================>          (94 + 22) / 116][Stage 85:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.033255483 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIn dex<=127", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=127,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364479602 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 86:======================================>               (82 + 33) / 115][Stage 86:=============================================>        (96 + 19) / 115][Stage 86:====================================================> (112 + 3) / 115][Stage 86:=====================================================>(114 + 1) / 115]                                                                                [Stage 87:========================================>             (86 + 30) / 116][Stage 87:============================================>         (96 + 20) / 116][Stage 87:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.537552013 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZInd ex<=43", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=43,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357514272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 88:=====================================>                (79 + 36) / 115][Stage 88:========================================>             (86 + 29) / 115][Stage 88:==============================================>       (99 + 16) / 115][Stage 88:===================================================>  (109 + 6) / 115][Stage 88:===================================================>  (110 + 5) / 115][Stage 88:=====================================================>(114 + 1) / 115]                                                                                [Stage 89:======================================>               (83 + 33) / 116][Stage 89:===========================================>          (93 + 23) / 116][Stage 89:===============================================>     (105 + 11) / 116][Stage 89:====================================================> (113 + 3) / 116][Stage 89:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.876568738 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZInd ex<=87", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405505288 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 90:>                                                       (0 + 0) / 118][Stage 90:================================>                     (72 + 46) / 118][Stage 90:====================================>                 (79 + 39) / 118][Stage 90:===========================================>          (94 + 24) / 118][Stage 90:===============================================>     (106 + 12) / 118][Stage 90:===================================================>  (113 + 5) / 118]                                                                                [Stage 91:==================================>                   (75 + 44) / 119][Stage 91:======================================>               (84 + 35) / 119][Stage 91:=============================================>       (103 + 16) / 119][Stage 91:====================================================> (115 + 4) / 119][Stage 91:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.461140796 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIn dex<=239", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=239,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411560513 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 92:>                                                       (0 + 0) / 115][Stage 92:================================>                     (70 + 45) / 115][Stage 92:=======================================>              (84 + 31) / 115][Stage 92:==============================================>      (101 + 14) / 115][Stage 92:=====================================================>(113 + 2) / 115]                                                                                [Stage 93:=================================>                    (71 + 45) / 116][Stage 93:=========================================>            (89 + 27) / 116][Stage 93:==================================================>   (109 + 7) / 116][Stage 93:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.749677542 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZInd ex<=51", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=51,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428373701 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 94:============================>                         (64 + 57) / 121][Stage 94:=================================>                    (74 + 47) / 121][Stage 94:=========================================>            (93 + 28) / 121][Stage 94:=================================================>    (112 + 9) / 121]                                                                                [Stage 95:===========================>                          (61 + 61) / 122][Stage 95:==============================>                       (70 + 52) / 122][Stage 95:=======================================>              (89 + 33) / 122][Stage 95:================================================>    (111 + 11) / 122]                                                                                Time elapsed: 3.148091931 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIn dex<=125", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=125,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426261571 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 96:============================>                         (59 + 54) / 113][Stage 96:=============================>                        (62 + 51) / 113][Stage 96:====================================>                 (76 + 37) / 113][Stage 96:===============================================>     (102 + 11) / 113][Stage 96:====================================================> (110 + 3) / 113][Stage 96:=====================================================>(112 + 1) / 113]                                                                                [Stage 97:===========================>                          (59 + 55) / 114][Stage 97:===============================>                      (66 + 48) / 114][Stage 97:========================================>             (85 + 29) / 114][Stage 97:==============================================>      (101 + 13) / 114][Stage 97:====================================================> (111 + 3) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.859100961 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIn dex<=241", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=241,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423743439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 98:===========================>                          (60 + 60) / 120][Stage 98:============================>                         (64 + 56) / 120][Stage 98:====================================>                 (80 + 40) / 120][Stage 98:============================================>        (100 + 20) / 120]                                                                                [Stage 99:============================>                         (64 + 57) / 121][Stage 99:==================================>                   (78 + 43) / 121][Stage 99:==========================================>           (95 + 26) / 121][Stage 99:=================================================>    (112 + 9) / 121][Stage 99:=====================================================>(119 + 2) / 121][Stage 99:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.438848545 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZInde x<=4", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=4,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397104968 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 100:===============================>                     (69 + 46) / 115][Stage 100:=====================================>               (81 + 34) / 115][Stage 100:===============================================>    (105 + 10) / 115][Stage 100:===================================================> (111 + 4) / 115][Stage 100:====================================================>(113 + 2) / 115]                                                                                [Stage 101:==================================>                  (75 + 41) / 116][Stage 101:========================================>            (89 + 27) / 116][Stage 101:=============================================>       (99 + 17) / 116][Stage 101:==============================================>     (104 + 12) / 116][Stage 101:=================================================>   (109 + 7) / 116][Stage 101:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.845911917 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIn dex<=195", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356942262 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 102:======================================>              (84 + 31) / 115][Stage 102:===========================================>         (95 + 20) / 115][Stage 102:================================================>    (106 + 9) / 115][Stage 102:====================================================>(114 + 1) / 115]                                                                                [Stage 103:=====================================>               (81 + 35) / 116][Stage 103:=========================================>           (91 + 25) / 116][Stage 103:==============================================>     (103 + 13) / 116][Stage 103:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.744202495 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIn dex<=233", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=233,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.470298125 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 104:==============================>                      (66 + 49) / 115][Stage 104:===================================>                 (76 + 39) / 115][Stage 104:==========================================>          (93 + 22) / 115][Stage 104:===================================================> (111 + 4) / 115][Stage 104:====================================================>(113 + 2) / 115]                                                                                [Stage 105:===============================>                     (70 + 46) / 116][Stage 105:===================================>                 (78 + 38) / 116][Stage 105:==========================================>          (94 + 22) / 116][Stage 105:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.813055169 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIn dex<=219", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=219,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402879408 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 106:===============================>                     (68 + 47) / 115][Stage 106:=====================================>               (82 + 33) / 115][Stage 106:=============================================>      (100 + 15) / 115][Stage 106:====================================================>(113 + 2) / 115]                                                                                [Stage 107:===============================>                     (68 + 48) / 116][Stage 107:=======================================>             (86 + 30) / 116][Stage 107:=============================================>       (99 + 17) / 116][Stage 107:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.848765267 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZInd ex<=93", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=93,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408345609 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 108:=============================>                       (65 + 50) / 115][Stage 108:===================================>                 (76 + 39) / 115][Stage 108:==========================================>          (93 + 22) / 115][Stage 108:=================================================>   (107 + 8) / 115][Stage 108:====================================================>(114 + 1) / 115]                                                                                [Stage 109:================================>                    (72 + 44) / 116][Stage 109:=======================================>             (87 + 29) / 116][Stage 109:=============================================>       (99 + 17) / 116][Stage 109:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.743096128 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIn dex<=197", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=197,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427840388 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 110:===========================>                         (58 + 55) / 113][Stage 110:===============================>                     (67 + 46) / 113][Stage 110:=========================================>           (88 + 25) / 113][Stage 110:==============================================>     (102 + 11) / 113][Stage 110:===================================================> (110 + 3) / 113]                                                                                [Stage 111:=============================>                       (63 + 51) / 114][Stage 111:===================================>                 (76 + 38) / 114][Stage 111:==========================================>          (91 + 23) / 114][Stage 111:=================================================>   (107 + 7) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.428283379 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIn dex<=187", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474038235 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 112:=================================>                   (72 + 43) / 115][Stage 112:=======================================>             (85 + 30) / 115][Stage 112:=============================================>       (99 + 16) / 115][Stage 112:====================================================>(113 + 2) / 115]                                                                                [Stage 113:====================================>                (79 + 37) / 116][Stage 113:==========================================>          (93 + 23) / 116][Stage 113:================================================>    (107 + 9) / 116][Stage 113:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.873095643 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIn dex<=159", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=159,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347107335 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 114:=====================================>               (81 + 34) / 115][Stage 114:==========================================>          (93 + 22) / 115][Stage 114:================================================>    (106 + 9) / 115]                                                                                [Stage 115:========================================>            (88 + 28) / 116][Stage 115:============================================>        (97 + 19) / 116][Stage 115:=================================================>   (109 + 7) / 116][Stage 115:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.679465567 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIn dex<=106", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=106,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381185994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 116:===================================>                 (77 + 38) / 115][Stage 116:==========================================>          (92 + 23) / 115][Stage 116:================================================>    (106 + 9) / 115]                                                                                [Stage 117:===================================>                 (77 + 39) / 116][Stage 117:==========================================>          (94 + 22) / 116][Stage 117:=================================================>   (109 + 7) / 116][Stage 117:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.696572529 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZInd ex<=56", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346935034 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 118:======================================>              (83 + 32) / 115][Stage 118:=======================================>             (86 + 29) / 115][Stage 118:=============================================>      (100 + 15) / 115][Stage 118:===================================================> (112 + 3) / 115]                                                                                [Stage 119:========================================>            (88 + 28) / 116][Stage 119:============================================>        (97 + 19) / 116][Stage 119:=================================================>   (109 + 7) / 116][Stage 119:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.689312925 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIn dex<=237", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=237,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393907744 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 120:================================>                    (71 + 44) / 115][Stage 120:======================================>              (83 + 32) / 115][Stage 120:==============================================>     (102 + 13) / 115][Stage 120:====================================================>(113 + 2) / 115][Stage 120:====================================================>(114 + 1) / 115]                                                                                [Stage 121:===============================>                     (68 + 48) / 116][Stage 121:======================================>              (84 + 32) / 116][Stage 121:============================================>       (100 + 16) / 116][Stage 121:=================================================>   (109 + 7) / 116][Stage 121:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 3.195548105 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZInd ex<=63", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344523962 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 122:======================================>              (84 + 31) / 115][Stage 122:=========================================>           (90 + 25) / 115][Stage 122:================================================>    (106 + 9) / 115][Stage 122:====================================================>(114 + 1) / 115]                                                                                [Stage 123:======================================>              (84 + 32) / 116][Stage 123:===========================================>         (95 + 21) / 116][Stage 123:==============================================>     (104 + 12) / 116][Stage 123:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.905514303 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIn dex<=117", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=117,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406461332 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 124:==========================>                          (60 + 60) / 120][Stage 124:============================>                        (65 + 55) / 120][Stage 124:====================================>                (83 + 37) / 120][Stage 124:===========================================>         (98 + 22) / 120][Stage 124:===================================================> (116 + 4) / 120]                                                                                [Stage 125:==========================>                          (61 + 60) / 121][Stage 125:===========================>                         (62 + 59) / 121][Stage 125:=================================>                   (77 + 44) / 121][Stage 125:===========================================>        (102 + 19) / 121][Stage 125:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.134100337 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIn dex<=223", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=223,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395703408 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 126:===========================>                         (58 + 55) / 113][Stage 126:=============================>                       (62 + 51) / 113][Stage 126:================================>                    (70 + 43) / 113][Stage 126:============================================>        (94 + 19) / 113][Stage 126:===================================================> (109 + 4) / 113]                                                                                [Stage 127:============================>                        (61 + 53) / 114][Stage 127:=================================>                   (71 + 43) / 114][Stage 127:==========================================>          (91 + 23) / 114][Stage 127:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.132863083 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIn dex<=169", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=169,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383395916 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 128:====================================>                (79 + 36) / 115][Stage 128:=========================================>           (91 + 24) / 115][Stage 128:==============================================>     (102 + 13) / 115][Stage 128:===================================================> (112 + 3) / 115]                                                                                [Stage 129:====================================>                (79 + 37) / 116][Stage 129:==========================================>          (94 + 22) / 116][Stage 129:=============================================>      (101 + 15) / 116][Stage 129:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.833220518 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIn dex<=243", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=243,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376736449 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 130:=====================================>               (79 + 34) / 113][Stage 130:============================================>        (94 + 19) / 113][Stage 130:=============================================>       (97 + 16) / 113][Stage 130:==================================================>  (107 + 6) / 113][Stage 130:====================================================>(112 + 1) / 113]                                                                                [Stage 131:======================================>              (83 + 31) / 114][Stage 131:=============================================>       (97 + 17) / 114][Stage 131:================================================>    (105 + 9) / 114][Stage 131:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.137148523 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIn dex<=220", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361182364 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 132:=====================================>               (79 + 34) / 113][Stage 132:=======================================>             (85 + 28) / 113][Stage 132:=============================================>       (96 + 17) / 113][Stage 132:==================================================>  (107 + 6) / 113][Stage 132:====================================================>(112 + 1) / 113]                                                                                [Stage 133:=====================================>               (81 + 33) / 114][Stage 133:==============================================>     (101 + 13) / 114][Stage 133:================================================>    (105 + 9) / 114][Stage 133:====================================================>(112 + 2) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.335750239 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIn dex<=238", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382328989 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 134:================================>                    (73 + 45) / 118][Stage 134:===================================>                 (79 + 39) / 118][Stage 134:======================================>              (86 + 32) / 118][Stage 134:===============================================>    (107 + 11) / 118][Stage 134:====================================================>(117 + 1) / 118]                                                                                [Stage 135:================================>                    (73 + 46) / 119][Stage 135:=================================>                   (76 + 43) / 119][Stage 135:========================================>            (90 + 29) / 119][Stage 135:=============================================>      (103 + 16) / 119][Stage 135:==================================================>  (114 + 5) / 119][Stage 135:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.494546554 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZInd ex<=98", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=98,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349770656 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 136:====================================>                (80 + 35) / 115][Stage 136:=======================================>             (86 + 29) / 115][Stage 136:============================================>        (96 + 19) / 115][Stage 136:=================================================>   (107 + 8) / 115][Stage 136:===================================================> (111 + 4) / 115]                                                                                [Stage 137:=======================================>             (87 + 29) / 116][Stage 137:============================================>        (98 + 18) / 116][Stage 137:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.698444382 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIn dex<=114", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=114,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418603674 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 138:======================================>              (84 + 31) / 115][Stage 138:=============================================>      (101 + 14) / 115][Stage 138:==================================================>  (109 + 6) / 115][Stage 138:====================================================>(114 + 1) / 115]                                                                                [Stage 139:====================================>                (80 + 36) / 116][Stage 139:===========================================>         (95 + 21) / 116][Stage 139:===============================================>    (106 + 10) / 116][Stage 139:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.72431962 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIn dex<=111", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370132697 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 140:=================================>                   (74 + 44) / 118][Stage 140:======================================>              (85 + 33) / 118][Stage 140:===========================================>         (96 + 22) / 118][Stage 140:================================================>    (109 + 9) / 118][Stage 140:====================================================>(117 + 1) / 118]                                                                                [Stage 141:================================>                    (73 + 46) / 119][Stage 141:==================================>                  (77 + 42) / 119][Stage 141:=========================================>           (94 + 25) / 119][Stage 141:==============================================>     (107 + 12) / 119][Stage 141:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.491395893 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZInd ex<=90", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=90,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402757487 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 142:===========================>                         (62 + 59) / 121][Stage 142:================================>                    (74 + 47) / 121][Stage 142:=======================================>             (91 + 30) / 121][Stage 142:=================================================>   (113 + 8) / 121]                                                                                [Stage 143:===========================>                         (63 + 59) / 122][Stage 143:================================>                    (74 + 48) / 122][Stage 143:=======================================>             (92 + 30) / 122][Stage 143:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.221214291 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIn dex<=146", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=146,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368653168 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 144:================================>                    (73 + 45) / 118][Stage 144:======================================>              (85 + 33) / 118][Stage 144:================================================>    (109 + 9) / 118][Stage 144:====================================================>(117 + 1) / 118]                                                                                [Stage 145:================================>                    (73 + 46) / 119][Stage 145:==================================>                  (78 + 41) / 119][Stage 145:==========================================>          (96 + 23) / 119][Stage 145:===================================================> (115 + 4) / 119][Stage 145:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.095384734 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIn dex<=126", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=126,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409542053 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 146:==========================>                          (61 + 60) / 121][Stage 146:===============================>                     (72 + 49) / 121][Stage 146:========================================>            (93 + 28) / 121][Stage 146:==============================================>     (108 + 13) / 121]                                                                                [Stage 147:===========================>                         (63 + 59) / 122][Stage 147:================================>                    (75 + 47) / 122][Stage 147:========================================>            (94 + 28) / 122][Stage 147:===================================================> (118 + 4) / 122][Stage 147:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.65690105 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZInd ex<=30", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=30,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347814382 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 148:====================================>                (80 + 35) / 115][Stage 148:========================================>            (88 + 27) / 115][Stage 148:=============================================>       (98 + 17) / 115][Stage 148:==================================================>  (109 + 6) / 115][Stage 148:====================================================>(113 + 2) / 115]                                                                                [Stage 149:=====================================>               (83 + 33) / 116][Stage 149:=========================================>           (91 + 25) / 116][Stage 149:===============================================>    (106 + 10) / 116][Stage 149:===================================================> (112 + 4) / 116][Stage 149:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.027782434 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIn dex<=140", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=140,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41198428 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 150:==========================>                          (60 + 61) / 121][Stage 150:===========================>                         (63 + 58) / 121][Stage 150:================================>                    (74 + 47) / 121][Stage 150:==========================================>          (97 + 24) / 121][Stage 150:===================================================> (117 + 4) / 121]                                                                                [Stage 151:==========================>                          (62 + 60) / 122][Stage 151:================================>                    (74 + 48) / 122][Stage 151:==========================================>          (98 + 24) / 122][Stage 151:===============================================>    (112 + 10) / 122][Stage 151:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.454327132 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZInd ex<=36", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=36,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417813842 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 152:====================================>                (79 + 36) / 115][Stage 152:======================================>              (84 + 31) / 115][Stage 152:=============================================>      (100 + 15) / 115][Stage 152:=================================================>   (107 + 8) / 115][Stage 152:====================================================>(113 + 2) / 115]                                                                                [Stage 153:======================================>              (84 + 32) / 116][Stage 153:==========================================>          (94 + 22) / 116][Stage 153:=================================================>   (109 + 7) / 116][Stage 153:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.146869988 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIn dex<=118", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=118,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.510270832 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 154:==========================>                          (60 + 61) / 121][Stage 154:=============================>                       (67 + 54) / 121][Stage 154:===================================>                 (82 + 39) / 121][Stage 154:==============================================>     (109 + 12) / 121][Stage 154:====================================================>(120 + 1) / 121]                                                                                [Stage 155:==========================>                          (62 + 60) / 122][Stage 155:=================================>                   (77 + 45) / 122][Stage 155:===========================================>        (102 + 20) / 122][Stage 155:====================================================>(120 + 2) / 122][Stage 155:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.813376634 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIn dex<=130", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=130,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386682894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 156:===========================>                         (59 + 54) / 113][Stage 156:=================================>                   (71 + 42) / 113][Stage 156:==========================================>          (91 + 22) / 113][Stage 156:=================================================>   (106 + 7) / 113]                                                                                [Stage 157:===========================>                         (60 + 54) / 114][Stage 157:================================>                    (70 + 44) / 114][Stage 157:=======================================>             (85 + 29) / 114][Stage 157:==============================================>     (101 + 13) / 114][Stage 157:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.297993512 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZInd ex<=44", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345404767 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 158:=======================================>             (86 + 29) / 115][Stage 158:===========================================>         (95 + 20) / 115][Stage 158:==================================================>  (110 + 5) / 115][Stage 158:====================================================>(114 + 1) / 115]                                                                                [Stage 159:=====================================>               (81 + 35) / 116][Stage 159:========================================>            (89 + 27) / 116][Stage 159:==============================================>     (103 + 13) / 116][Stage 159:==================================================>  (111 + 5) / 116][Stage 159:====================================================>(114 + 2) / 116][Stage 159:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.845056599 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIn dex<=110", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=110,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409160022 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 160:===========================>                         (63 + 57) / 120][Stage 160:================================>                    (74 + 46) / 120][Stage 160:=========================================>           (93 + 27) / 120][Stage 160:==================================================>  (115 + 5) / 120]                                                                                [Stage 161:==========================>                          (61 + 60) / 121][Stage 161:===============================>                     (73 + 48) / 121][Stage 161:==========================================>          (96 + 25) / 121][Stage 161:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.34451476 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZInde x<=9", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=9,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410914608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 162:==========================>                          (60 + 61) / 121][Stage 162:=============================>                       (68 + 53) / 121][Stage 162:===================================>                 (80 + 41) / 121][Stage 162:===========================================>        (101 + 20) / 121][Stage 162:====================================================>(120 + 1) / 121]                                                                                [Stage 163:==========================>                          (61 + 61) / 122][Stage 163:=============================>                       (69 + 53) / 122][Stage 163:====================================>                (85 + 37) / 122][Stage 163:===========================================>        (101 + 21) / 122][Stage 163:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.457841764 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIn dex<=148", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=148,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356325228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 164:==================================>                  (73 + 40) / 113][Stage 164:======================================>              (82 + 31) / 113][Stage 164:==========================================>          (90 + 23) / 113][Stage 164:=================================================>   (106 + 7) / 113][Stage 164:===================================================> (110 + 3) / 113]                                                                                [Stage 165:==================================>                  (75 + 39) / 114][Stage 165:========================================>            (87 + 27) / 114][Stage 165:==============================================>     (103 + 11) / 114][Stage 165:====================================================>(112 + 2) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.080730844 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIn dex<=208", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=208,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401209427 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 166:==========================>                          (60 + 60) / 120][Stage 166:==============================>                      (68 + 52) / 120][Stage 166:===================================>                 (81 + 39) / 120][Stage 166:===========================================>        (101 + 19) / 120][Stage 166:====================================================>(118 + 2) / 120]                                                                                [Stage 167:============================>                        (64 + 57) / 121][Stage 167:===================================>                 (80 + 41) / 121][Stage 167:============================================>       (104 + 17) / 121][Stage 167:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.349806073 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIn dex<=120", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=120,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415167742 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 168:==========================>                          (61 + 59) / 120][Stage 168:===============================>                     (71 + 49) / 120][Stage 168:=======================================>             (90 + 30) / 120][Stage 168:=================================================>   (111 + 9) / 120][Stage 168:====================================================>(119 + 1) / 120]                                                                                [Stage 169:==========================>                          (61 + 60) / 121][Stage 169:=============================>                       (68 + 53) / 121][Stage 169:=====================================>               (85 + 36) / 121][Stage 169:=================================================>   (114 + 7) / 121][Stage 169:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.367923656 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZInd ex<=24", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=24,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413904915 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 170:==========================>                          (61 + 59) / 120][Stage 170:================================>                    (73 + 47) / 120][Stage 170:=======================================>             (89 + 31) / 120][Stage 170:===============================================>    (109 + 11) / 120][Stage 170:====================================================>(118 + 2) / 120]                                                                                [Stage 171:===========================>                         (63 + 58) / 121][Stage 171:==================================>                  (78 + 43) / 121][Stage 171:========================================>            (93 + 28) / 121][Stage 171:=================================================>   (112 + 9) / 121][Stage 171:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.340956099 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZInd ex<=34", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371948507 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 172:================================>                    (72 + 46) / 118][Stage 172:==================================>                  (77 + 41) / 118][Stage 172:========================================>            (90 + 28) / 118][Stage 172:=============================================>      (104 + 14) / 118][Stage 172:==================================================>  (112 + 6) / 118]                                                                                [Stage 173:================================>                    (73 + 46) / 119][Stage 173:====================================>                (82 + 37) / 119][Stage 173:==========================================>          (96 + 23) / 119][Stage 173:==============================================>     (107 + 12) / 119][Stage 173:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.424772744 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZInd ex<=66", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=66,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361467363 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 174:=================================>                   (71 + 42) / 113][Stage 174:=====================================>               (81 + 32) / 113][Stage 174:===========================================>         (92 + 21) / 113][Stage 174:===============================================>    (103 + 10) / 113][Stage 174:==================================================>  (107 + 6) / 113]                                                                                [Stage 175:==================================>                  (75 + 39) / 114][Stage 175:======================================>              (83 + 31) / 114][Stage 175:=============================================>       (97 + 17) / 114][Stage 175:================================================>    (105 + 9) / 114][Stage 175:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.311233242 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIn dex<=246", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=246,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349397794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 176:=====================================>               (82 + 33) / 115][Stage 176:=========================================>           (91 + 24) / 115][Stage 176:===============================================>    (104 + 11) / 115][Stage 176:===================================================> (112 + 3) / 115]                                                                                [Stage 177:========================================>            (89 + 27) / 116][Stage 177:=============================================>       (99 + 17) / 116][Stage 177:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.615610137 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIn dex<=244", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=244,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361871643 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 178:================================>                    (70 + 43) / 113][Stage 178:====================================>                (78 + 35) / 113][Stage 178:=========================================>           (88 + 25) / 113][Stage 178:=================================================>   (106 + 7) / 113][Stage 178:====================================================>(112 + 1) / 113]                                                                                [Stage 179:===================================>                 (77 + 37) / 114][Stage 179:=======================================>             (86 + 28) / 114][Stage 179:==============================================>     (101 + 13) / 114][Stage 179:=================================================>   (107 + 7) / 114][Stage 179:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.06930148 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIn dex<=153", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=153,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358216628 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 180:=================================>                   (72 + 41) / 113][Stage 180:=====================================>               (81 + 32) / 113][Stage 180:============================================>        (95 + 18) / 113][Stage 180:=================================================>   (105 + 8) / 113][Stage 180:====================================================>(112 + 1) / 113]                                                                                [Stage 181:=======================================>             (84 + 30) / 114][Stage 181:=============================================>       (97 + 17) / 114][Stage 181:=================================================>   (106 + 8) / 114][Stage 181:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.062788907 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIn dex<=155", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=155,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425005153 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 182:===========================>                         (59 + 54) / 113][Stage 182:=============================>                       (63 + 50) / 113][Stage 182:=====================================>               (81 + 32) / 113][Stage 182:================================================>    (104 + 9) / 113][Stage 182:====================================================>(112 + 1) / 113]                                                                                [Stage 183:============================>                        (62 + 52) / 114][Stage 183:=================================>                   (73 + 41) / 114][Stage 183:=========================================>           (89 + 25) / 114][Stage 183:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.312364453 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIn dex<=142", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360090293 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 184:=================================>                   (71 + 42) / 113][Stage 184:========================================>            (86 + 27) / 113][Stage 184:===========================================>         (93 + 20) / 113][Stage 184:==============================================>     (102 + 11) / 113][Stage 184:==================================================>  (107 + 6) / 113][Stage 184:====================================================>(112 + 1) / 113]                                                                                [Stage 185:=====================================>               (81 + 33) / 114][Stage 185:==========================================>          (92 + 22) / 114][Stage 185:=============================================>      (100 + 14) / 114][Stage 185:=================================================>   (107 + 7) / 114][Stage 185:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.410623415 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZInd ex<=14", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384091628 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 186:===========================>                         (59 + 54) / 113][Stage 186:===============================>                     (68 + 45) / 113][Stage 186:=========================================>           (88 + 25) / 113][Stage 186:==============================================>     (101 + 12) / 113]                                                                                [Stage 187:============================>                        (62 + 52) / 114][Stage 187:===============================>                     (68 + 46) / 114][Stage 187:=======================================>             (85 + 29) / 114][Stage 187:================================================>    (105 + 9) / 114][Stage 187:===================================================> (111 + 3) / 114][Stage 187:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.669616771 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIn dex<=128", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=128,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374465829 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 188:====================================>                (77 + 36) / 113][Stage 188:=======================================>             (84 + 29) / 113][Stage 188:=============================================>       (98 + 15) / 113][Stage 188:===============================================>    (103 + 10) / 113][Stage 188:=================================================>   (105 + 8) / 113][Stage 188:==================================================>  (107 + 6) / 113][Stage 188:==================================================>  (108 + 5) / 113][Stage 188:===================================================> (110 + 3) / 113][Stage 188:====================================================>(112 + 1) / 113]                                                                                [Stage 189:=====================================>               (80 + 34) / 114][Stage 189:==========================================>          (92 + 22) / 114][Stage 189:==============================================>     (101 + 13) / 114][Stage 189:=================================================>   (107 + 7) / 114][Stage 189:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.669071032 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIn dex<=147", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=147,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405615751 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 190:==========================>                          (60 + 60) / 120][Stage 190:===============================>                     (72 + 48) / 120][Stage 190:========================================>            (92 + 28) / 120][Stage 190:==================================================>  (114 + 6) / 120]                                                                                [Stage 191:==========================>                          (61 + 60) / 121][Stage 191:==============================>                      (69 + 52) / 121][Stage 191:=======================================>             (91 + 30) / 121][Stage 191:==================================================>  (115 + 6) / 121][Stage 191:====================================================>(119 + 2) / 121][Stage 191:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.010592583 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZInd ex<=68", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=68,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342172698 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 192:====================================>                (79 + 36) / 115][Stage 192:=======================================>             (86 + 29) / 115][Stage 192:============================================>        (97 + 18) / 115][Stage 192:==================================================>  (110 + 5) / 115]                                                                                [Stage 193:=====================================>               (82 + 34) / 116][Stage 193:==========================================>          (92 + 24) / 116][Stage 193:================================================>    (107 + 9) / 116][Stage 193:===================================================> (112 + 4) / 116][Stage 193:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.683585887 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIn dex<=196", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=196,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422390795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 194:==========================>                          (61 + 60) / 121][Stage 194:===============================>                     (71 + 50) / 121][Stage 194:==========================================>          (98 + 23) / 121][Stage 194:=================================================>   (112 + 9) / 121]                                                                                [Stage 195:===========================>                         (63 + 59) / 122][Stage 195:==============================>                      (71 + 51) / 122][Stage 195:=======================================>             (92 + 30) / 122][Stage 195:=================================================>   (113 + 9) / 122][Stage 195:===================================================> (119 + 3) / 122][Stage 195:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.678508905 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIn dex<=177", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=177,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387784517 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 196:================================>                    (70 + 45) / 115][Stage 196:=====================================>               (82 + 33) / 115][Stage 196:=============================================>       (98 + 17) / 115][Stage 196:===================================================> (111 + 4) / 115]                                                                                [Stage 197:===================================>                 (78 + 38) / 116][Stage 197:========================================>            (89 + 27) / 116][Stage 197:===============================================>    (105 + 11) / 116]                                                                                Time elapsed: 2.686706366 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIn dex<=131", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=131,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396519431 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 198:================================>                    (71 + 44) / 115][Stage 198:=======================================>             (86 + 29) / 115][Stage 198:=============================================>       (99 + 16) / 115][Stage 198:==================================================>  (109 + 6) / 115]                                                                                [Stage 199:================================>                    (71 + 45) / 116][Stage 199:======================================>              (84 + 32) / 116][Stage 199:==============================================>     (103 + 13) / 116][Stage 199:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.808314781 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIn dex<=136", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400382745 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 200:==========================>                          (60 + 60) / 120][Stage 200:===========================>                         (63 + 57) / 120][Stage 200:===================================>                 (80 + 40) / 120][Stage 200:==============================================>     (107 + 13) / 120][Stage 200:===================================================> (117 + 3) / 120]                                                                                [Stage 201:============================>                        (64 + 57) / 121][Stage 201:===================================>                 (81 + 40) / 121][Stage 201:===========================================>         (99 + 22) / 121][Stage 201:===================================================> (117 + 4) / 121][Stage 201:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.466749659 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m27.775s
user	11m48.740s
sys	0m50.664s
