Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/25 01:04:48 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 01:05:03 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 01:05:03 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 01:05:04 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/25 01:05:06 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 01:05:17 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170525010506-0617).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 4.427739976 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:======================>                                (47 + 68) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:=====================================>                 (79 + 36) / 115][Stage 0:=======================================>               (82 + 33) / 115][Stage 0:============================================>          (94 + 21) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:====================================================>  (110 + 5) / 115]                                                                                [Stage 1:===========================>                           (57 + 59) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:==================================>                    (72 + 44) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:=========================================>             (87 + 29) / 116][Stage 1:===========================================>           (92 + 24) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:====================================================>  (110 + 6) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.582032381 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  O R  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  p artitionIndex = 106 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.782420341 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 2:================================>                      (66 + 47) / 113][Stage 2:===================================>                   (72 + 41) / 113][Stage 2:===================================>                   (73 + 40) / 113][Stage 2:=====================================>                 (78 + 35) / 113][Stage 2:===========================================>           (90 + 23) / 113][Stage 2:==============================================>        (95 + 18) / 113][Stage 2:===============================================>      (100 + 13) / 113][Stage 2:==================================================>    (104 + 9) / 113][Stage 2:=====================================================> (109 + 4) / 113][Stage 2:======================================================>(111 + 2) / 113]                                                                                [Stage 3:=================================>                     (70 + 44) / 114][Stage 3:====================================>                  (76 + 38) / 114][Stage 3:========================================>              (84 + 30) / 114][Stage 3:===========================================>           (90 + 24) / 114][Stage 3:==============================================>        (96 + 18) / 114][Stage 3:=================================================>    (104 + 10) / 114][Stage 3:===================================================>   (106 + 8) / 114][Stage 3:======================================================>(112 + 2) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.703777595 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 18 0  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 195   OR  partitionIndex = 196 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 195  OR  partitionIndex = 196 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.661467783 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (58 + 60) / 118][Stage 4:===============================>                       (68 + 50) / 118][Stage 4:=================================>                     (72 + 46) / 118][Stage 4:=====================================>                 (80 + 38) / 118][Stage 4:=========================================>             (90 + 28) / 118][Stage 4:==============================================>        (99 + 19) / 118][Stage 4:===================================================>   (110 + 8) / 118][Stage 4:====================================================>  (113 + 5) / 118][Stage 4:======================================================>(116 + 2) / 118]                                                                                [Stage 5:================================>                      (71 + 48) / 119][Stage 5:=================================>                     (73 + 46) / 119][Stage 5:==================================>                    (75 + 44) / 119][Stage 5:======================================>                (84 + 35) / 119][Stage 5:=============================================>        (100 + 19) / 119][Stage 5:==================================================>    (110 + 9) / 119][Stage 5:======================================================>(117 + 2) / 119][Stage 5:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.910586323 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 13 5  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149   OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.631042156 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (57 + 56) / 113][Stage 6:============================>                          (59 + 54) / 113][Stage 6:================================>                      (67 + 46) / 113][Stage 6:=======================================>               (81 + 32) / 113][Stage 6:===============================================>      (100 + 13) / 113][Stage 6:======================================================>(112 + 1) / 113]                                                                                [Stage 7:============================>                          (59 + 55) / 114][Stage 7:=============================>                         (62 + 52) / 114][Stage 7:===============================>                       (66 + 48) / 114][Stage 7:====================================>                  (75 + 39) / 114][Stage 7:===========================================>           (91 + 23) / 114][Stage 7:==================================================>    (105 + 9) / 114][Stage 7:=====================================================> (111 + 3) / 114][Stage 7:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.862530529 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  O R  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  pa rtitionIndex = 61 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.624422436 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (60 + 60) / 120][Stage 8:================================>                      (71 + 49) / 120][Stage 8:======================================>                (83 + 37) / 120][Stage 8:===========================================>           (95 + 25) / 120][Stage 8:=================================================>    (109 + 11) / 120][Stage 8:======================================================>(119 + 1) / 120]                                                                                [Stage 9:===========================>                           (61 + 60) / 121][Stage 9:=============================>                         (65 + 56) / 121][Stage 9:=================================>                     (73 + 48) / 121][Stage 9:==========================================>            (94 + 27) / 121][Stage 9:=================================================>    (111 + 10) / 121][Stage 9:====================================================>  (116 + 5) / 121][Stage 9:======================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.480093938 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  O R  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  pa rtitionIndex = 59 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.595817234 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==========================>                           (60 + 61) / 121][Stage 10:==============================>                       (68 + 53) / 121][Stage 10:====================================>                 (82 + 39) / 121][Stage 10:===========================================>         (100 + 21) / 121][Stage 10:==============================================>      (106 + 15) / 121][Stage 10:===================================================>  (116 + 5) / 121]                                                                                [Stage 11:===========================>                          (62 + 60) / 122][Stage 11:==============================>                       (70 + 52) / 122][Stage 11:=====================================>                (85 + 37) / 122][Stage 11:=============================================>       (104 + 18) / 122][Stage 11:===================================================>  (116 + 6) / 122][Stage 11:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.687274788 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  O R  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 53  OR  pa rtitionIndex = 54 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 53  OR  partitionIndex = 54 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.539153377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 12:================================>                     (72 + 46) / 118][Stage 12:=================================>                    (73 + 45) / 118][Stage 12:=========================================>            (91 + 27) / 118][Stage 12:===============================================>     (105 + 13) / 118]                                                                                [Stage 13:=================================>                    (73 + 46) / 119][Stage 13:===================================>                  (78 + 41) / 119][Stage 13:========================================>             (90 + 29) / 119][Stage 13:=============================================>       (103 + 16) / 119][Stage 13:================================================>    (109 + 10) / 119][Stage 13:=====================================================>(117 + 2) / 119][Stage 13:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.043362368 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  O R  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 107  OR  p artitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.507270127 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 14:>                                                       (0 + 0) / 113][Stage 14:=================================>                    (71 + 42) / 113][Stage 14:=====================================>                (78 + 35) / 113][Stage 14:==========================================>           (89 + 24) / 113][Stage 14:==============================================>      (100 + 13) / 113][Stage 14:==================================================>   (106 + 7) / 113][Stage 14:===================================================>  (108 + 5) / 113][Stage 14:=====================================================>(111 + 2) / 113]                                                                                [Stage 15:=======================================>              (84 + 30) / 114][Stage 15:=========================================>            (87 + 27) / 114][Stage 15:============================================>         (94 + 20) / 114][Stage 15:==================================================>   (106 + 8) / 114][Stage 15:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.104665801 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  192  OR  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 20 7  OR  partitionIndex = 208  OR  partitionIndex = 221  OR  partitionIndex = 235   OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.536831187 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===============================>                      (67 + 48) / 115][Stage 16:====================================>                 (77 + 38) / 115][Stage 16:==============================================>       (99 + 16) / 115][Stage 16:==================================================>   (108 + 7) / 115]                                                                                [Stage 17:=================================>                    (72 + 44) / 116][Stage 17:=======================================>              (84 + 32) / 116][Stage 17:=============================================>       (100 + 16) / 116][Stage 17:==================================================>   (108 + 8) / 116][Stage 17:===================================================>  (110 + 6) / 116][Stage 17:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.460079207 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 18 1  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195   OR  partitionIndex = 196 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.481702934 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 18:================================>                     (70 + 48) / 118][Stage 18:==================================>                   (76 + 42) / 118][Stage 18:====================================>                 (79 + 39) / 118][Stage 18:========================================>             (89 + 29) / 118][Stage 18:===========================================>          (96 + 22) / 118][Stage 18:============================================>        (100 + 18) / 118][Stage 18:===============================================>     (105 + 13) / 118][Stage 18:===================================================>  (112 + 6) / 118][Stage 18:=====================================================>(116 + 2) / 118]                                                                                [Stage 19:=================================>                    (73 + 46) / 119][Stage 19:==================================>                   (76 + 43) / 119][Stage 19:======================================>               (84 + 35) / 119][Stage 19:=========================================>            (91 + 28) / 119][Stage 19:=============================================>       (103 + 16) / 119][Stage 19:================================================>    (108 + 11) / 119][Stage 19:================================================>    (109 + 10) / 119][Stage 19:==================================================>   (112 + 7) / 119][Stage 19:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.031184279 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  O R  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  pa rtitionIndex = 50 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.482690995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 20:=================================>                    (70 + 43) / 113][Stage 20:=====================================>                (78 + 35) / 113][Stage 20:=========================================>            (87 + 26) / 113][Stage 20:============================================>         (93 + 20) / 113][Stage 20:==============================================>      (100 + 13) / 113][Stage 20:=================================================>    (104 + 9) / 113][Stage 20:====================================================> (110 + 3) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:=====================================>                (79 + 35) / 114][Stage 21:=========================================>            (88 + 26) / 114][Stage 21:=============================================>        (96 + 18) / 114][Stage 21:==============================================>       (99 + 15) / 114][Stage 21:===============================================>     (102 + 12) / 114][Stage 21:===================================================>  (108 + 6) / 114][Stage 21:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 8.39515479 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  12  OR  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 15  O R  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  pa rtitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.467500111 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 22:=================================>                    (70 + 43) / 113][Stage 22:=======================================>              (82 + 31) / 113][Stage 22:=============================================>        (95 + 18) / 113][Stage 22:================================================>    (103 + 10) / 113][Stage 22:====================================================> (109 + 4) / 113][Stage 22:=====================================================>(111 + 2) / 113]                                                                                [Stage 23:========================================>             (86 + 28) / 114][Stage 23:==========================================>           (90 + 24) / 114][Stage 23:==============================================>       (98 + 16) / 114][Stage 23:==============================================>      (100 + 14) / 114][Stage 23:===================================================>  (109 + 5) / 114][Stage 23:=====================================================>(112 + 2) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.680973624 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  190  OR  partitionIndex = 191  OR  partitionIndex = 204  OR  partitionIndex = 20 5  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219   OR  partitionIndex = 233 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.506118193 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (58 + 55) / 113][Stage 24:============================>                         (60 + 53) / 113][Stage 24:================================>                     (69 + 44) / 113][Stage 24:=======================================>              (82 + 31) / 113][Stage 24:==============================================>       (97 + 16) / 113][Stage 24:=================================================>    (104 + 9) / 113][Stage 24:====================================================> (109 + 4) / 113]                                                                                [Stage 25:===========================>                          (57 + 57) / 114][Stage 25:===============================>                      (66 + 48) / 114][Stage 25:=====================================>                (79 + 35) / 114][Stage 25:=========================================>            (88 + 26) / 114][Stage 25:===============================================>     (103 + 11) / 114][Stage 25:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 4.098249994 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 12 7  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 167   OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.465680062 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (70 + 45) / 115][Stage 26:=====================================>                (80 + 35) / 115][Stage 26:==============================================>      (100 + 15) / 115][Stage 26:====================================================> (112 + 3) / 115][Stage 26:=====================================================>(114 + 1) / 115]                                                                                [Stage 27:===============================>                      (68 + 48) / 116][Stage 27:=====================================>                (80 + 36) / 116][Stage 27:==========================================>           (92 + 24) / 116][Stage 27:===============================================>     (104 + 12) / 116][Stage 27:=================================================>    (107 + 9) / 116][Stage 27:===================================================>  (111 + 5) / 116][Stage 27:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.690010815 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  186  OR  partitionIndex = 187  OR  partitionIndex = 200  OR  partitionIndex = 20 1  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215   OR  partitionIndex = 229 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.478051014 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 28:=============================>                        (63 + 52) / 115][Stage 28:=================================>                    (71 + 44) / 115][Stage 28:=======================================>              (84 + 31) / 115][Stage 28:==============================================>       (99 + 16) / 115][Stage 28:==================================================>   (107 + 8) / 115][Stage 28:====================================================> (112 + 3) / 115][Stage 28:=====================================================>(114 + 1) / 115]                                                                                [Stage 29:=================================>                    (73 + 43) / 116][Stage 29:========================================>             (87 + 29) / 116][Stage 29:===============================================>     (105 + 11) / 116][Stage 29:==================================================>   (109 + 7) / 116][Stage 29:====================================================> (112 + 4) / 116][Stage 29:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.985030241 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  66  OR  partitionIndex = 67  OR  partitionIndex = 80  OR  partitionIndex = 81  O R  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  pa rtitionIndex = 109 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.456836755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 30:================================>                     (72 + 46) / 118][Stage 30:=================================>                    (74 + 44) / 118][Stage 30:====================================>                 (79 + 39) / 118][Stage 30:===========================================>          (94 + 24) / 118][Stage 30:===============================================>     (106 + 12) / 118][Stage 30:==================================================>   (111 + 7) / 118][Stage 30:===================================================>  (112 + 6) / 118][Stage 30:====================================================> (115 + 3) / 118]                                                                                [Stage 31:=================================>                    (74 + 45) / 119][Stage 31:====================================>                 (80 + 39) / 119][Stage 31:========================================>             (89 + 30) / 119][Stage 31:============================================>        (100 + 19) / 119][Stage 31:==================================================>   (111 + 8) / 119][Stage 31:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 4.446542955 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  O R  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  pa rtitionIndex = 60 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.472966677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (58 + 55) / 113][Stage 32:============================>                         (60 + 53) / 113][Stage 32:=================================>                    (70 + 43) / 113][Stage 32:=========================================>            (86 + 27) / 113][Stage 32:===============================================>     (101 + 12) / 113][Stage 32:===================================================>  (107 + 6) / 113][Stage 32:===================================================>  (108 + 5) / 113][Stage 32:====================================================> (110 + 3) / 113]                                                                                [Stage 33:=============================>                        (62 + 52) / 114][Stage 33:=====================================>                (79 + 35) / 114][Stage 33:===============================================>     (103 + 11) / 114][Stage 33:===================================================>  (108 + 6) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.73959093 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 14 8  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162   OR  partitionIndex = 163 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.484516527 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=================================>                    (72 + 43) / 115][Stage 34:========================================>             (86 + 29) / 115][Stage 34:===============================================>     (102 + 13) / 115][Stage 34:====================================================> (112 + 3) / 115]                                                                                [Stage 35:======================================>               (82 + 34) / 116][Stage 35:==============================================>      (102 + 14) / 116][Stage 35:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.744853518 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR   partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  part itionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.472691174 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (58 + 55) / 113][Stage 36:=============================>                        (62 + 51) / 113][Stage 36:=================================>                    (71 + 42) / 113][Stage 36:=============================================>        (96 + 17) / 113][Stage 36:==================================================>   (105 + 8) / 113][Stage 36:=====================================================>(112 + 1) / 113]                                                                                [Stage 37:=============================>                        (62 + 52) / 114][Stage 37:==================================>                   (72 + 42) / 114][Stage 37:=========================================>            (87 + 27) / 114][Stage 37:===============================================>     (102 + 12) / 114][Stage 37:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.998514826 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 96  O R  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110  OR   partitionIndex = 111 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.44986765 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (72 + 46) / 118][Stage 38:=================================>                    (74 + 44) / 118][Stage 38:=======================================>              (86 + 32) / 118][Stage 38:===============================================>     (106 + 12) / 118][Stage 38:====================================================> (115 + 3) / 118]                                                                                [Stage 39:=================================>                    (73 + 46) / 119][Stage 39:==================================>                   (76 + 43) / 119][Stage 39:=======================================>              (88 + 31) / 119][Stage 39:============================================>        (100 + 19) / 119][Stage 39:===================================================>  (114 + 5) / 119][Stage 39:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.558619349 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 15 9  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173   OR  partitionIndex = 174 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.581610983 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==========================>                           (60 + 61) / 121][Stage 40:===========================>                          (61 + 60) / 121][Stage 40:================================>                     (73 + 48) / 121][Stage 40:==========================================>           (96 + 25) / 121][Stage 40:====================================================> (117 + 4) / 121]                                                                                [Stage 41:===========================>                          (61 + 61) / 122][Stage 41:=================================>                    (75 + 47) / 122][Stage 41:=========================================>            (93 + 29) / 122][Stage 41:================================================>    (111 + 11) / 122][Stage 41:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.800137747 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 18 3  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197   OR  partitionIndex = 198 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.489164533 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (60 + 60) / 120][Stage 42:===============================>                      (71 + 49) / 120][Stage 42:=======================================>              (87 + 33) / 120][Stage 42:===================================================>  (114 + 6) / 120]                                                                                [Stage 43:===========================>                          (62 + 59) / 121][Stage 43:===============================>                      (71 + 50) / 121][Stage 43:===========================================>          (97 + 24) / 121][Stage 43:================================================>    (111 + 10) / 121][Stage 43:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.855814884 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  128  OR  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 13 1  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 231   OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.498900437 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 44:==========================>                           (60 + 61) / 121][Stage 44:=============================>                        (66 + 55) / 121][Stage 44:==================================>                   (78 + 43) / 121][Stage 44:============================================>        (102 + 19) / 121][Stage 44:=====================================================>(120 + 1) / 121]                                                                                [Stage 45:===========================>                          (61 + 61) / 122][Stage 45:=============================>                        (67 + 55) / 122][Stage 45:==================================>                   (77 + 45) / 122][Stage 45:=========================================>            (93 + 29) / 122][Stage 45:==================================================>   (115 + 7) / 122][Stage 45:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.038974702 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 15 4  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 169   OR  partitionIndex = 170 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 169  OR  partitionIndex = 170 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.413692728 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 46:====================================>                 (77 + 36) / 113][Stage 46:=========================================>            (87 + 26) / 113][Stage 46:============================================>         (94 + 19) / 113][Stage 46:===================================================>  (107 + 6) / 113][Stage 46:=====================================================>(112 + 1) / 113]                                                                                [Stage 47:====================================>                 (77 + 37) / 114][Stage 47:==========================================>           (89 + 25) / 114][Stage 47:==============================================>      (100 + 14) / 114][Stage 47:====================================================> (110 + 4) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.016183793 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  O R  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  pa rtitionIndex = 47 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.454394075 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 48:>                                                       (0 + 0) / 113][Stage 48:============================>                         (59 + 54) / 113][Stage 48:===============================>                      (65 + 48) / 113][Stage 48:======================================>               (80 + 33) / 113][Stage 48:===============================================>      (99 + 14) / 113][Stage 48:====================================================> (110 + 3) / 113]                                                                                [Stage 49:============================>                         (60 + 54) / 114][Stage 49:==============================>                       (64 + 50) / 114][Stage 49:=======================================>              (83 + 31) / 114][Stage 49:==============================================>       (99 + 15) / 114][Stage 49:===================================================>  (109 + 5) / 114][Stage 49:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.603038953 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  O R  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  pa rtitionIndex = 94 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.49037545 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 50:============================>                         (59 + 54) / 113][Stage 50:================================>                     (69 + 44) / 113][Stage 50:==========================================>           (89 + 24) / 113][Stage 50:==================================================>   (105 + 8) / 113]                                                                                [Stage 51:============================>                         (60 + 54) / 114][Stage 51:=================================>                    (70 + 44) / 114][Stage 51:==========================================>           (90 + 24) / 114][Stage 51:==================================================>   (106 + 8) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.642655168 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 13 6  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150   OR  partitionIndex = 151 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.454953034 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 52:=======================================>              (85 + 30) / 115][Stage 52:==============================================>       (98 + 17) / 115][Stage 52:==================================================>   (108 + 7) / 115][Stage 52:====================================================> (112 + 3) / 115]                                                                                [Stage 53:=======================================>              (85 + 31) / 116][Stage 53:===========================================>          (93 + 23) / 116][Stage 53:================================================>    (106 + 10) / 116][Stage 53:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.033436431 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 22 0  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234   OR  partitionIndex = 235 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.411147636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 54:====================================>                 (76 + 37) / 113][Stage 54:==========================================>           (88 + 25) / 113][Stage 54:=============================================>        (96 + 17) / 113][Stage 54:===============================================>     (102 + 11) / 113][Stage 54:====================================================> (110 + 3) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:====================================>                 (76 + 38) / 114][Stage 55:=========================================>            (88 + 26) / 114][Stage 55:============================================>         (93 + 21) / 114][Stage 55:=================================================>    (105 + 9) / 114][Stage 55:====================================================> (110 + 4) / 114][Stage 55:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.465021253 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 79  O R  partitionIndex = 80  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  p artitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.444378264 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==========================>                           (60 + 61) / 121][Stage 56:==============================>                       (68 + 53) / 121][Stage 56:=======================================>              (89 + 32) / 121][Stage 56:==============================================>      (107 + 14) / 121]                                                                                [Stage 57:===========================>                          (61 + 61) / 122][Stage 57:==================================>                   (77 + 45) / 122][Stage 57:==========================================>           (95 + 27) / 122][Stage 57:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.50518265 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  14  OR  partitionIndex = 15  OR  partitionIndex = 28  OR  partitionIndex = 29  O R  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  pa rtitionIndex = 57 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.407794805 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===================================>                  (75 + 38) / 113][Stage 58:==========================================>           (88 + 25) / 113][Stage 58:=============================================>        (95 + 18) / 113][Stage 58:=================================================>    (104 + 9) / 113][Stage 58:===================================================>  (107 + 6) / 113][Stage 58:====================================================> (110 + 3) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:========================================>             (85 + 29) / 114][Stage 59:===========================================>          (91 + 23) / 114][Stage 59:==============================================>      (100 + 14) / 114][Stage 59:================================================>    (104 + 10) / 114][Stage 59:===================================================>  (109 + 5) / 114][Stage 59:====================================================> (110 + 4) / 114][Stage 59:====================================================> (111 + 3) / 114][Stage 59:=====================================================>(112 + 2) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 9.794396867 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  O R  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  pa rtitionIndex = 99 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.4146053 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 60:=================================>                    (73 + 45) / 118][Stage 60:==================================>                   (76 + 42) / 118][Stage 60:======================================>               (84 + 34) / 118][Stage 60:===========================================>          (95 + 23) / 118][Stage 60:=================================================>    (109 + 9) / 118][Stage 60:=====================================================>(117 + 1) / 118]                                                                                [Stage 61:=================================>                    (74 + 45) / 119][Stage 61:==================================>                   (77 + 42) / 119][Stage 61:=======================================>              (87 + 32) / 119][Stage 61:============================================>         (98 + 21) / 119][Stage 61:==================================================>   (112 + 7) / 119][Stage 61:=====================================================>(117 + 2) / 119][Stage 61:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.253841264 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 16 0  OR  partitionIndex = 161  OR  partitionIndex = 174  OR  partitionIndex = 175   OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.379367006 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 62:=======================================>              (84 + 31) / 115][Stage 62:==========================================>           (90 + 25) / 115][Stage 62:===============================================>     (103 + 12) / 115][Stage 62:=====================================================>(113 + 2) / 115]                                                                                [Stage 63:========================================>             (87 + 29) / 116][Stage 63:==============================================>       (99 + 17) / 116][Stage 63:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.729254432 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  130  OR  partitionIndex = 131  OR  partitionIndex = 144  OR  partitionIndex = 14 5  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159   OR  partitionIndex = 173 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402866827 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==================================>                   (72 + 41) / 113][Stage 64:========================================>             (84 + 29) / 113][Stage 64:============================================>         (94 + 19) / 113][Stage 64:===============================================>     (101 + 12) / 113][Stage 64:====================================================> (109 + 4) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:====================================>                 (77 + 37) / 114][Stage 65:==========================================>           (89 + 25) / 114][Stage 65:==============================================>       (99 + 15) / 114][Stage 65:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.173018519 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  O R  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  pa rtitionIndex = 60 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.496738974 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==========================>                           (60 + 61) / 121][Stage 66:==============================>                       (68 + 53) / 121][Stage 66:=====================================>                (83 + 38) / 121][Stage 66:============================================>        (101 + 20) / 121]                                                                                [Stage 67:===========================>                          (61 + 61) / 122][Stage 67:==============================>                       (69 + 53) / 122][Stage 67:======================================>               (87 + 35) / 122][Stage 67:===============================================>     (109 + 13) / 122][Stage 67:===================================================>  (117 + 5) / 122][Stage 67:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.871963398 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 16 1  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175   OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402218803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 68:=================================>                    (72 + 43) / 115][Stage 68:========================================>             (87 + 28) / 115][Stage 68:================================================>    (105 + 10) / 115][Stage 68:=====================================================>(113 + 2) / 115]                                                                                [Stage 69:=================================>                    (71 + 45) / 116][Stage 69:========================================>             (87 + 29) / 116][Stage 69:================================================>    (106 + 10) / 116][Stage 69:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.84684572 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  8  OR  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 11  OR   partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  part itionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.419619807 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 70:=================================>                    (70 + 43) / 113][Stage 70:=======================================>              (82 + 31) / 113][Stage 70:===========================================>          (92 + 21) / 113][Stage 70:================================================>    (103 + 10) / 113][Stage 70:===================================================>  (107 + 6) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:====================================>                 (78 + 36) / 114][Stage 71:==========================================>           (90 + 24) / 114][Stage 71:=============================================>        (95 + 19) / 114][Stage 71:====================================================> (110 + 4) / 114][Stage 71:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.934715737 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 14 6  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173   OR  partitionIndex = 174 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.434463026 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (59 + 54) / 113][Stage 72:==============================>                       (64 + 49) / 113][Stage 72:=====================================>                (78 + 35) / 113][Stage 72:==============================================>       (97 + 16) / 113]                                                                                [Stage 73:============================>                         (60 + 54) / 114][Stage 73:==================================>                   (72 + 42) / 114][Stage 73:=========================================>            (88 + 26) / 114][Stage 73:==============================================>      (100 + 14) / 114][Stage 73:===================================================>  (109 + 5) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.896447025 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24  OR   partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  par titionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39107159 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 74:=================================>                    (70 + 43) / 113][Stage 74:======================================>               (80 + 33) / 113][Stage 74:============================================>         (93 + 20) / 113][Stage 74:==================================================>   (105 + 8) / 113][Stage 74:=====================================================>(111 + 2) / 113]                                                                                [Stage 75:==================================>                   (73 + 41) / 114][Stage 75:=========================================>            (87 + 27) / 114][Stage 75:=============================================>        (97 + 17) / 114][Stage 75:=================================================>    (105 + 9) / 114][Stage 75:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.80407371 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  O R  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  pa rtitionIndex = 54 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.428667727 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (62 + 58) / 120][Stage 76:===============================>                      (69 + 51) / 120][Stage 76:============================================>         (98 + 22) / 120][Stage 76:===================================================>  (114 + 6) / 120]                                                                                [Stage 77:===========================>                          (61 + 60) / 121][Stage 77:=================================>                    (74 + 47) / 121][Stage 77:=======================================>              (88 + 33) / 121][Stage 77:=============================================>       (105 + 16) / 121]                                                                                Time elapsed: 4.905350351 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 21 8  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 233   OR  partitionIndex = 234 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 233  OR  partitionIndex = 234 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.393369833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 78:====================================>                 (77 + 36) / 113][Stage 78:===========================================>          (91 + 22) / 113][Stage 78:================================================>    (103 + 10) / 113][Stage 78:===================================================>  (108 + 5) / 113][Stage 78:=====================================================>(112 + 1) / 113]                                                                                [Stage 79:==================================>                   (72 + 42) / 114][Stage 79:======================================>               (81 + 33) / 114][Stage 79:===========================================>          (92 + 22) / 114][Stage 79:=================================================>    (105 + 9) / 114][Stage 79:===================================================>  (108 + 6) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.325316888 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  O R  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  pa rtitionIndex = 90 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.423741932 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 80:==========================>                           (60 + 61) / 121][Stage 80:=============================>                        (65 + 56) / 121][Stage 80:================================>                     (73 + 48) / 121][Stage 80:=========================================>            (94 + 27) / 121][Stage 80:==================================================>   (114 + 7) / 121]                                                                                [Stage 81:===========================>                          (63 + 59) / 122][Stage 81:===============================>                      (71 + 51) / 122][Stage 81:=======================================>              (90 + 32) / 122][Stage 81:================================================>    (111 + 11) / 122][Stage 81:=====================================================>(120 + 2) / 122][Stage 81:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.440527883 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR   partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  parti tionIndex = 34 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.390719364 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 82:================================>                     (72 + 46) / 118][Stage 82:==================================>                   (76 + 42) / 118][Stage 82:==========================================>           (92 + 26) / 118][Stage 82:================================================>    (107 + 11) / 118][Stage 82:=====================================================>(117 + 1) / 118]                                                                                [Stage 83:=================================>                    (73 + 46) / 119][Stage 83:===================================>                  (79 + 40) / 119][Stage 83:============================================>         (99 + 20) / 119][Stage 83:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.681420101 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 20 3  OR  partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 206   OR  partitionIndex = 218 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.424578911 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (60 + 60) / 120][Stage 84:===============================>                      (70 + 50) / 120][Stage 84:========================================>             (90 + 30) / 120][Stage 84:=================================================>    (111 + 9) / 120]                                                                                [Stage 85:===========================>                          (61 + 60) / 121][Stage 85:===============================>                      (70 + 51) / 121][Stage 85:=======================================>              (89 + 32) / 121][Stage 85:===============================================>     (109 + 12) / 121][Stage 85:===================================================>  (115 + 6) / 121][Stage 85:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.194086092 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  124  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 15 3  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 167   OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.386620771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==================================>                   (73 + 40) / 113][Stage 86:==========================================>           (88 + 25) / 113][Stage 86:==============================================>      (100 + 13) / 113][Stage 86:===================================================>  (107 + 6) / 113][Stage 86:=====================================================>(112 + 1) / 113]                                                                                [Stage 87:========================================>             (86 + 28) / 114][Stage 87:=============================================>        (97 + 17) / 114][Stage 87:===================================================>  (108 + 6) / 114][Stage 87:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.094039804 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  O R  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  p artitionIndex = 106 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.435038076 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 88:==========================>                           (60 + 61) / 121][Stage 88:============================>                         (63 + 58) / 121][Stage 88:=================================>                    (76 + 45) / 121][Stage 88:==========================================>           (95 + 26) / 121][Stage 88:===================================================>  (115 + 6) / 121][Stage 88:=====================================================>(120 + 1) / 121]                                                                                [Stage 89:===========================>                          (61 + 61) / 122][Stage 89:============================>                         (64 + 58) / 122][Stage 89:======================================>               (87 + 35) / 122][Stage 89:=============================================>       (105 + 17) / 122][Stage 89:=====================================================>(120 + 2) / 122][Stage 89:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.823140308 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  O R  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR   partitionIndex = 107 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.435456075 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 90:==========================>                           (60 + 61) / 121][Stage 90:===========================>                          (62 + 59) / 121][Stage 90:=================================>                    (75 + 46) / 121][Stage 90:============================================>        (101 + 20) / 121][Stage 90:=====================================================>(119 + 2) / 121]                                                                                [Stage 91:===========================>                          (61 + 61) / 122][Stage 91:============================>                         (65 + 57) / 122][Stage 91:====================================>                 (83 + 39) / 122][Stage 91:===========================================>         (100 + 22) / 122][Stage 91:===================================================>  (117 + 5) / 122][Stage 91:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.98473223 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  O R  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  pa rtitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.369802163 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 92:======================================>               (83 + 32) / 115][Stage 92:==========================================>           (91 + 24) / 115][Stage 92:===============================================>     (102 + 13) / 115][Stage 92:====================================================> (112 + 3) / 115]                                                                                [Stage 93:=======================================>              (84 + 32) / 116][Stage 93:==========================================>           (91 + 25) / 116][Stage 93:===============================================>     (104 + 12) / 116][Stage 93:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.684741848 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  64  OR  partitionIndex = 65  OR  partitionIndex = 92  OR  partitionIndex = 93  O R  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR   partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402500627 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 94:=============================>                        (61 + 52) / 113][Stage 94:==================================>                   (73 + 40) / 113][Stage 94:==============================================>       (98 + 15) / 113][Stage 94:====================================================> (109 + 4) / 113]                                                                                [Stage 95:============================>                         (60 + 54) / 114][Stage 95:==============================>                       (64 + 50) / 114][Stage 95:=====================================>                (79 + 35) / 114][Stage 95:=============================================>        (95 + 19) / 114][Stage 95:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.544962878 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 18 2  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196   OR  partitionIndex = 197 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.416029501 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 96:==========================>                           (60 + 61) / 121][Stage 96:============================>                         (64 + 57) / 121][Stage 96:=======================================>              (88 + 33) / 121][Stage 96:============================================>        (102 + 19) / 121][Stage 96:====================================================> (118 + 3) / 121]                                                                                [Stage 97:===========================>                          (61 + 61) / 122][Stage 97:================================>                     (73 + 49) / 122][Stage 97:========================================>             (91 + 31) / 122][Stage 97:==============================================>      (108 + 14) / 122][Stage 97:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.713368726 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 16 9  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172   OR  partitionIndex = 180 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.42371936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (61 + 59) / 120][Stage 98:===============================>                      (70 + 50) / 120][Stage 98:=================================>                    (75 + 45) / 120][Stage 98:===========================================>          (96 + 24) / 120][Stage 98:====================================================> (116 + 4) / 120]                                                                                [Stage 99:============================>                         (63 + 58) / 121][Stage 99:===============================>                      (70 + 51) / 121][Stage 99:=======================================>              (89 + 32) / 121][Stage 99:===============================================>     (109 + 12) / 121][Stage 99:====================================================> (117 + 4) / 121][Stage 99:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.66371188 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  2  OR  partitionIndex = 3  OR  partitionIndex = 16  OR  partitionIndex = 17  OR   partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  part itionIndex = 45 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.368083694 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==================================>                  (74 + 39) / 113][Stage 100:=======================================>             (85 + 28) / 113][Stage 100:============================================>        (95 + 18) / 113][Stage 100:=================================================>   (106 + 7) / 113][Stage 100:====================================================>(111 + 2) / 113]                                                                                [Stage 101:===================================>                 (76 + 38) / 114][Stage 101:=======================================>             (85 + 29) / 114][Stage 101:=========================================>           (90 + 24) / 114][Stage 101:==============================================>      (99 + 15) / 114][Stage 101:===============================================>    (104 + 10) / 114][Stage 101:==================================================>  (108 + 6) / 114][Stage 101:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 8.97456948 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  12  OR  partitionIndex = 13  OR  partitionIndex = 40  OR  partitionIndex = 41  O R  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 55  OR  pa rtitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 55  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.373392946 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===================================>                 (75 + 38) / 113][Stage 102:========================================>            (86 + 27) / 113][Stage 102:=============================================>       (97 + 16) / 113][Stage 102:==================================================>  (107 + 6) / 113][Stage 102:====================================================>(111 + 2) / 113]                                                                                [Stage 103:==================================>                  (75 + 39) / 114][Stage 103:=======================================>             (84 + 30) / 114][Stage 103:===========================================>         (93 + 21) / 114][Stage 103:==============================================>     (101 + 13) / 114][Stage 103:================================================>    (105 + 9) / 114][Stage 103:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 6.225460632 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  O R  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  pa rtitionIndex = 77 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.366461707 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 104:================================>                    (70 + 43) / 113][Stage 104:=====================================>               (79 + 34) / 113][Stage 104:============================================>        (94 + 19) / 113][Stage 104:==============================================>     (100 + 13) / 113][Stage 104:====================================================>(112 + 1) / 113]                                                                                [Stage 105:===================================>                 (76 + 38) / 114][Stage 105:=======================================>             (84 + 30) / 114][Stage 105:=============================================>       (98 + 16) / 114][Stage 105:================================================>    (105 + 9) / 114][Stage 105:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.561648854 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  132  OR  partitionIndex = 133  OR  partitionIndex = 160  OR  partitionIndex = 16 1  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175   OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.405598146 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:===========================>                         (63 + 58) / 121][Stage 106:=====================================>               (86 + 35) / 121][Stage 106:=================================================>   (114 + 7) / 121]                                                                                [Stage 107:==========================>                          (62 + 60) / 122][Stage 107:===============================>                     (72 + 50) / 122][Stage 107:=========================================>           (95 + 27) / 122][Stage 107:=================================================>   (115 + 7) / 122][Stage 107:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.813864113 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  O R  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  pa rtitionIndex = 76 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.433985318 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (60 + 60) / 120][Stage 108:==============================>                      (68 + 52) / 120][Stage 108:====================================>                (82 + 38) / 120][Stage 108:=============================================>      (105 + 15) / 120]                                                                                [Stage 109:==========================>                          (61 + 60) / 121][Stage 109:=================================>                   (77 + 44) / 121][Stage 109:==========================================>          (97 + 24) / 121][Stage 109:==================================================>  (115 + 6) / 121][Stage 109:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.519684245 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 15 1  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165   OR  partitionIndex = 166 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.433554736 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 110:>                                                      (0 + 0) / 120][Stage 110:==========================>                          (60 + 60) / 120][Stage 110:==============================>                      (70 + 50) / 120][Stage 110:=====================================>               (84 + 36) / 120][Stage 110:==============================================>     (107 + 13) / 120]                                                                                [Stage 111:===========================>                         (63 + 58) / 121][Stage 111:==================================>                  (78 + 43) / 121][Stage 111:========================================>            (93 + 28) / 121][Stage 111:=================================================>   (112 + 9) / 121][Stage 111:====================================================>(119 + 2) / 121][Stage 111:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.625888379 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR   partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 45  OR  par titionIndex = 46 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 45  OR  partitionIndex = 46 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.349638739 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===================================>                 (76 + 37) / 113][Stage 112:=======================================>             (84 + 29) / 113][Stage 112:============================================>        (95 + 18) / 113][Stage 112:=================================================>   (106 + 7) / 113][Stage 112:====================================================>(111 + 2) / 113]                                                                                [Stage 113:==================================>                  (74 + 40) / 114][Stage 113:=======================================>             (84 + 30) / 114][Stage 113:==========================================>          (92 + 22) / 114][Stage 113:============================================>        (95 + 19) / 114][Stage 113:=================================================>   (107 + 7) / 114][Stage 113:==================================================>  (109 + 5) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.86902963 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 22 0  OR  partitionIndex = 221  OR  partitionIndex = 234  OR  partitionIndex = 235   OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.360373885 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==================================>                  (73 + 40) / 113][Stage 114:=========================================>           (88 + 25) / 113][Stage 114:==============================================>      (99 + 14) / 113][Stage 114:==================================================>  (108 + 5) / 113][Stage 114:====================================================>(112 + 1) / 113]                                                                                [Stage 115:=================================>                   (73 + 41) / 114][Stage 115:=======================================>             (85 + 29) / 114][Stage 115:=============================================>      (100 + 14) / 114][Stage 115:==================================================>  (108 + 6) / 114][Stage 115:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.116618693 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 21 6  OR  partitionIndex = 217  OR  partitionIndex = 230  OR  partitionIndex = 231   OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.373411937 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===============================>                     (68 + 47) / 115][Stage 116:=====================================>               (81 + 34) / 115][Stage 116:============================================>        (97 + 18) / 115][Stage 116:================================================>    (106 + 9) / 115][Stage 116:====================================================>(114 + 1) / 115]                                                                                [Stage 117:===============================>                     (69 + 47) / 116][Stage 117:=======================================>             (86 + 30) / 116][Stage 117:============================================>       (100 + 16) / 116][Stage 117:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.889758464 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 20 6  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233   OR  partitionIndex = 234 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.377043385 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==============================>                      (66 + 49) / 115][Stage 118:======================================>              (84 + 31) / 115][Stage 118:=============================================>      (100 + 15) / 115][Stage 118:====================================================>(113 + 2) / 115]                                                                                [Stage 119:=================================>                   (74 + 42) / 116][Stage 119:========================================>            (89 + 27) / 116][Stage 119:==============================================>     (104 + 12) / 116][Stage 119:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.800221869 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 18 8  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 203   OR  partitionIndex = 204 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 203  OR  partitionIndex = 204 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.389460777 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (59 + 54) / 113][Stage 120:====================================>                (77 + 36) / 113][Stage 120:==============================================>      (99 + 14) / 113][Stage 120:==================================================>  (108 + 5) / 113]                                                                                [Stage 121:===========================>                         (59 + 55) / 114][Stage 121:=============================>                       (64 + 50) / 114][Stage 121:=====================================>               (80 + 34) / 114][Stage 121:=============================================>       (97 + 17) / 114][Stage 121:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.561436428 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  O R  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR   partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.366080035 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=================================>                   (74 + 44) / 118][Stage 122:===================================>                 (80 + 38) / 118][Stage 122:===========================================>         (97 + 21) / 118][Stage 122:===============================================>    (107 + 11) / 118][Stage 122:====================================================>(116 + 2) / 118]                                                                                [Stage 123:================================>                    (73 + 46) / 119][Stage 123:=================================>                   (76 + 43) / 119][Stage 123:====================================>                (82 + 37) / 119][Stage 123:========================================>            (92 + 27) / 119][Stage 123:=============================================>      (105 + 14) / 119][Stage 123:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 4.440950385 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  128  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 21 7  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 231   OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.356016909 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==================================>                  (74 + 39) / 113][Stage 124:=========================================>           (89 + 24) / 113][Stage 124:==============================================>      (99 + 14) / 113][Stage 124:==================================================>  (107 + 6) / 113]                                                                                [Stage 125:======================================>              (82 + 32) / 114][Stage 125:============================================>        (95 + 19) / 114][Stage 125:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.706573007 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 92  O R  partitionIndex = 93  OR  partitionIndex = 106  OR  partitionIndex = 107  OR   partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.407915381 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 61) / 121][Stage 126:=============================>                       (67 + 54) / 121][Stage 126:==================================>                  (78 + 43) / 121][Stage 126:=============================================>      (105 + 16) / 121][Stage 126:===================================================> (118 + 3) / 121]                                                                                [Stage 127:==========================>                          (61 + 61) / 122][Stage 127:==============================>                      (71 + 51) / 122][Stage 127:======================================>              (89 + 33) / 122][Stage 127:===============================================>    (112 + 10) / 122][Stage 127:===================================================> (118 + 4) / 122][Stage 127:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.248064869 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  185  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 19 9  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 202   OR  partitionIndex = 214 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402945007 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (58 + 55) / 113][Stage 128:=============================>                       (62 + 51) / 113][Stage 128:========================================>            (86 + 27) / 113][Stage 128:============================================>        (95 + 18) / 113][Stage 128:===================================================> (109 + 4) / 113]                                                                                [Stage 129:============================>                        (62 + 52) / 114][Stage 129:=================================>                   (73 + 41) / 114][Stage 129:=========================================>           (90 + 24) / 114][Stage 129:==================================================>  (108 + 6) / 114][Stage 129:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.771285703 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  O R  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  pa rtitionIndex = 39 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.346130321 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 130:=====================================>               (82 + 33) / 115][Stage 130:========================================>            (87 + 28) / 115][Stage 130:=============================================>       (99 + 16) / 115][Stage 130:==================================================>  (110 + 5) / 115][Stage 130:====================================================>(114 + 1) / 115]                                                                                [Stage 131:=====================================>               (83 + 33) / 116][Stage 131:==========================================>          (93 + 23) / 116][Stage 131:============================================>        (98 + 18) / 116][Stage 131:================================================>    (107 + 9) / 116][Stage 131:===================================================> (112 + 4) / 116][Stage 131:===================================================> (113 + 3) / 116][Stage 131:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 6.570552388 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 100   OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114  OR   partitionIndex = 115 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 115 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.408057237 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (63 + 58) / 121][Stage 132:================================>                    (75 + 46) / 121][Stage 132:========================================>            (93 + 28) / 121][Stage 132:=================================================>   (113 + 8) / 121]                                                                                [Stage 133:===========================>                         (63 + 59) / 122][Stage 133:==============================>                      (71 + 51) / 122][Stage 133:=========================================>           (95 + 27) / 122][Stage 133:==================================================>  (117 + 5) / 122][Stage 133:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.26503261 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  O R  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 57  OR  pa rtitionIndex = 58 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 57  OR  partitionIndex = 58 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.410137721 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==========================>                          (61 + 60) / 121][Stage 134:===============================>                     (71 + 50) / 121][Stage 134:====================================>                (83 + 38) / 121][Stage 134:===============================================>    (110 + 11) / 121]                                                                                [Stage 135:==========================>                          (61 + 61) / 122][Stage 135:==============================>                      (71 + 51) / 122][Stage 135:========================================>            (93 + 29) / 122][Stage 135:=================================================>   (113 + 9) / 122][Stage 135:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.863007118 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102   OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 117  OR   partitionIndex = 118 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 117  OR  partitionIndex = 118 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402152859 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (62 + 59) / 121][Stage 136:===============================>                     (72 + 49) / 121][Stage 136:=========================================>           (94 + 27) / 121][Stage 136:==================================================>  (116 + 5) / 121]                                                                                [Stage 137:==========================>                          (60 + 62) / 122][Stage 137:=============================>                       (67 + 55) / 122][Stage 137:===================================>                 (81 + 41) / 122][Stage 137:===========================================>        (101 + 21) / 122][Stage 137:==================================================>  (116 + 6) / 122][Stage 137:====================================================>(120 + 2) / 122][Stage 137:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.821816495 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  0  OR  partitionIndex = 1  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  p artitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partit ionIndex = 18 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.381519186 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (70 + 45) / 115][Stage 138:=======================================>             (85 + 30) / 115][Stage 138:===========================================>         (94 + 21) / 115][Stage 138:=================================================>   (107 + 8) / 115]                                                                                [Stage 139:================================>                    (71 + 45) / 116][Stage 139:=======================================>             (87 + 29) / 116][Stage 139:=================================================>   (109 + 7) / 116][Stage 139:==================================================>  (111 + 5) / 116][Stage 139:===================================================> (112 + 4) / 116][Stage 139:===================================================> (113 + 3) / 116][Stage 139:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.84526665 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  8  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  OR   partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111  OR   partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.396853742 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 61) / 121][Stage 140:==========================>                          (61 + 60) / 121][Stage 140:=============================>                       (68 + 53) / 121][Stage 140:========================================>            (92 + 29) / 121][Stage 140:=================================================>   (114 + 7) / 121]                                                                                [Stage 141:==========================>                          (62 + 60) / 122][Stage 141:=============================>                       (68 + 54) / 122][Stage 141:====================================>                (83 + 39) / 122][Stage 141:=================================================>   (114 + 8) / 122][Stage 141:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 5.10141992 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  p artitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 47  OR  partit ionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.360901831 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 142:================================>                    (73 + 45) / 118][Stage 142:=====================================>               (83 + 35) / 118][Stage 142:===========================================>         (97 + 21) / 118][Stage 142:===================================================> (115 + 3) / 118]                                                                                [Stage 143:=================================>                   (76 + 43) / 119][Stage 143:======================================>              (87 + 32) / 119][Stage 143:=============================================>      (105 + 14) / 119][Stage 143:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.409329238 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 14 4  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231   OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.349998582 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 144:======================================>              (83 + 30) / 113][Stage 144:===========================================>         (92 + 21) / 113][Stage 144:==============================================>     (101 + 12) / 113][Stage 144:===================================================> (109 + 4) / 113][Stage 144:====================================================>(112 + 1) / 113]                                                                                [Stage 145:======================================>              (82 + 32) / 114][Stage 145:========================================>            (88 + 26) / 114][Stage 145:=============================================>      (100 + 14) / 114][Stage 145:==================================================>  (108 + 6) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.221215796 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 12 7  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 141   OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.408081567 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 61) / 121][Stage 146:=============================>                       (67 + 54) / 121][Stage 146:====================================>                (83 + 38) / 121][Stage 146:=================================================>   (114 + 7) / 121][Stage 146:===================================================> (118 + 3) / 121][Stage 146:====================================================>(119 + 2) / 121]                                                                                [Stage 147:==========================>                          (61 + 61) / 122][Stage 147:============================>                        (66 + 56) / 122][Stage 147:================================>                    (74 + 48) / 122][Stage 147:=========================================>           (96 + 26) / 122][Stage 147:===================================================> (119 + 3) / 122][Stage 147:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.424809416 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  O R  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  pa rtitionIndex = 69 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.387379654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 148:================================>                    (71 + 44) / 115][Stage 148:========================================>            (88 + 27) / 115][Stage 148:==============================================>     (103 + 12) / 115][Stage 148:===================================================> (111 + 4) / 115]                                                                                [Stage 149:======================================>              (84 + 32) / 116][Stage 149:==========================================>          (93 + 23) / 116][Stage 149:===============================================>    (105 + 11) / 116][Stage 149:==================================================>  (111 + 5) / 116][Stage 149:===================================================> (112 + 4) / 116][Stage 149:===================================================> (113 + 3) / 116][Stage 149:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.054268455 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  O R  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  pa rtitionIndex = 68 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.392990046 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 60) / 120][Stage 150:============================>                        (65 + 55) / 120][Stage 150:==================================>                  (79 + 41) / 120][Stage 150:===========================================>        (101 + 19) / 120][Stage 150:===================================================> (117 + 3) / 120]                                                                                [Stage 151:==========================>                          (61 + 60) / 121][Stage 151:==============================>                      (69 + 52) / 121][Stage 151:===================================>                 (81 + 40) / 121][Stage 151:=============================================>      (107 + 14) / 121][Stage 151:===================================================> (118 + 3) / 121][Stage 151:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.902430053 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  p artitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partit ionIndex = 22 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.339389211 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 152:======================================>              (83 + 32) / 115][Stage 152:=========================================>           (91 + 24) / 115][Stage 152:=============================================>      (100 + 15) / 115][Stage 152:==================================================>  (110 + 5) / 115]                                                                                [Stage 153:======================================>              (84 + 32) / 116][Stage 153:==========================================>          (94 + 22) / 116][Stage 153:==============================================>     (103 + 13) / 116][Stage 153:==================================================>  (110 + 6) / 116][Stage 153:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 6.510790596 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  O R  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  pa rtitionIndex = 52 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex = 52 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.371171289 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:=================================>                   (75 + 43) / 118][Stage 154:=====================================>               (84 + 34) / 118][Stage 154:=======================================>             (87 + 31) / 118][Stage 154:============================================>        (99 + 19) / 118][Stage 154:====================================================>(116 + 2) / 118][Stage 154:====================================================>(117 + 1) / 118]                                                                                [Stage 155:================================>                    (73 + 46) / 119][Stage 155:=================================>                   (76 + 43) / 119][Stage 155:====================================>                (83 + 36) / 119][Stage 155:========================================>            (90 + 29) / 119][Stage 155:==============================================>     (107 + 12) / 119][Stage 155:====================================================>(117 + 2) / 119][Stage 155:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.022127667 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  74  OR  partitionIndex = 75  OR  partitionIndex = 88  OR  partitionIndex = 89  O R  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR   partitionIndex = 117 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397945855 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==========================>                          (60 + 60) / 120][Stage 156:==============================>                      (68 + 52) / 120][Stage 156:=====================================>               (84 + 36) / 120][Stage 156:=============================================>      (104 + 16) / 120]                                                                                [Stage 157:===========================>                         (62 + 59) / 121][Stage 157:===============================>                     (72 + 49) / 121][Stage 157:====================================>                (84 + 37) / 121][Stage 157:===============================================>    (111 + 10) / 121][Stage 157:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.368585458 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  64  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  O R  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR   partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.384790541 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (59 + 54) / 113][Stage 158:===============================>                     (67 + 46) / 113][Stage 158:=======================================>             (84 + 29) / 113][Stage 158:===============================================>    (103 + 10) / 113]                                                                                [Stage 159:=============================>                       (63 + 51) / 114][Stage 159:=================================>                   (71 + 43) / 114][Stage 159:==========================================>          (91 + 23) / 114][Stage 159:==================================================>  (109 + 5) / 114][Stage 159:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.56143309 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  O R  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  pa rtitionIndex = 86 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.362885805 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (72 + 46) / 118][Stage 160:===================================>                 (78 + 40) / 118][Stage 160:======================================>              (86 + 32) / 118][Stage 160:=============================================>      (103 + 15) / 118][Stage 160:===================================================> (114 + 4) / 118]                                                                                [Stage 161:=================================>                   (76 + 43) / 119][Stage 161:====================================>                (81 + 38) / 119][Stage 161:======================================>              (87 + 32) / 119][Stage 161:===========================================>        (100 + 19) / 119][Stage 161:=================================================>   (111 + 8) / 119][Stage 161:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.138919121 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  192  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 22 1  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235   OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.380775689 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==============================>                      (66 + 49) / 115][Stage 162:===================================>                 (77 + 38) / 115][Stage 162:============================================>        (96 + 19) / 115][Stage 162:=================================================>   (108 + 7) / 115][Stage 162:====================================================>(113 + 2) / 115]                                                                                [Stage 163:================================>                    (71 + 45) / 116][Stage 163:=====================================>               (83 + 33) / 116][Stage 163:============================================>        (98 + 18) / 116][Stage 163:===================================================> (112 + 4) / 116][Stage 163:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.054322369 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 19 6  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210   OR  partitionIndex = 211 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39748631 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 60) / 120][Stage 164:===============================>                     (72 + 48) / 120][Stage 164:=====================================>               (86 + 34) / 120][Stage 164:============================================>       (103 + 17) / 120][Stage 164:====================================================>(118 + 2) / 120]                                                                                [Stage 165:=============================>                       (67 + 54) / 121][Stage 165:===================================>                 (80 + 41) / 121][Stage 165:==========================================>         (100 + 21) / 121][Stage 165:=================================================>   (114 + 7) / 121][Stage 165:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.648363039 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 12 0  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 135   OR  partitionIndex = 136 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 135  OR  partitionIndex = 136 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.335597695 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 166:=====================================>               (81 + 34) / 115][Stage 166:=========================================>           (91 + 24) / 115][Stage 166:===============================================>    (104 + 11) / 115][Stage 166:===================================================> (111 + 4) / 115]                                                                                [Stage 167:=======================================>             (87 + 29) / 116][Stage 167:=============================================>       (99 + 17) / 116][Stage 167:==================================================>  (111 + 5) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.96030838 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  184  OR  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 19 9  OR  partitionIndex = 200  OR  partitionIndex = 213  OR  partitionIndex = 227   OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39447276 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 60) / 120][Stage 168:=============================>                       (67 + 53) / 120][Stage 168:====================================>                (83 + 37) / 120][Stage 168:============================================>       (103 + 17) / 120][Stage 168:====================================================>(119 + 1) / 120]                                                                                [Stage 169:==========================>                          (61 + 60) / 121][Stage 169:============================>                        (66 + 55) / 121][Stage 169:=================================>                   (77 + 44) / 121][Stage 169:===========================================>        (102 + 19) / 121][Stage 169:===================================================> (118 + 3) / 121][Stage 169:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.970495461 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  p artitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partit ionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.383788173 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (59 + 54) / 113][Stage 170:===============================>                     (67 + 46) / 113][Stage 170:=========================================>           (89 + 24) / 113][Stage 170:==================================================>  (107 + 6) / 113]                                                                                [Stage 171:============================>                        (61 + 53) / 114][Stage 171:=================================>                   (72 + 42) / 114][Stage 171:=======================================>             (86 + 28) / 114][Stage 171:=================================================>   (106 + 8) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.531885402 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  6  OR  partitionIndex = 7  OR  partitionIndex = 20  OR  partitionIndex = 21  OR   partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  part itionIndex = 49 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.336547294 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 172:========================================>            (87 + 28) / 115][Stage 172:=============================================>      (100 + 15) / 115][Stage 172:==================================================>  (110 + 5) / 115]                                                                                [Stage 173:=======================================>             (86 + 30) / 116][Stage 173:==========================================>          (93 + 23) / 116][Stage 173:==============================================>     (103 + 13) / 116][Stage 173:===================================================> (113 + 3) / 116][Stage 173:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.404195822 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 13 9  OR  partitionIndex = 140  OR  partitionIndex = 153  OR  partitionIndex = 167   OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.356873663 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 174:====================================>                (78 + 35) / 113][Stage 174:==========================================>          (91 + 22) / 113][Stage 174:=============================================>       (97 + 16) / 113][Stage 174:====================================================>(111 + 2) / 113]                                                                                [Stage 175:===================================>                 (77 + 37) / 114][Stage 175:========================================>            (87 + 27) / 114][Stage 175:============================================>        (96 + 18) / 114][Stage 175:==================================================>  (109 + 5) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.820147556 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  O R  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  pa rtitionIndex = 102 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.34002312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=====================================>               (82 + 33) / 115][Stage 176:==========================================>          (93 + 22) / 115][Stage 176:====================================================>(113 + 2) / 115][Stage 176:====================================================>(114 + 1) / 115]                                                                                [Stage 177:======================================>              (84 + 32) / 116][Stage 177:========================================>            (89 + 27) / 116][Stage 177:================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.535924027 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 14 2  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169   OR  partitionIndex = 170 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.363606878 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=================================>                   (75 + 43) / 118][Stage 178:===================================>                 (79 + 39) / 118][Stage 178:======================================>              (85 + 33) / 118][Stage 178:=============================================>      (104 + 14) / 118][Stage 178:===================================================> (115 + 3) / 118]                                                                                [Stage 179:================================>                    (73 + 46) / 119][Stage 179:==================================>                  (78 + 41) / 119][Stage 179:=====================================>               (84 + 35) / 119][Stage 179:==========================================>          (95 + 24) / 119][Stage 179:===============================================>    (108 + 11) / 119][Stage 179:===================================================> (116 + 3) / 119][Stage 179:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.012665768 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  132  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 16 1  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175   OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39700846 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (59 + 54) / 113][Stage 180:================================>                    (70 + 43) / 113][Stage 180:===========================================>         (93 + 20) / 113][Stage 180:==============================================>     (102 + 11) / 113][Stage 180:====================================================>(112 + 1) / 113]                                                                                [Stage 181:===========================>                         (60 + 54) / 114][Stage 181:==============================>                      (65 + 49) / 114][Stage 181:=================================>                   (72 + 42) / 114][Stage 181:==============================================>      (99 + 15) / 114][Stage 181:==================================================>  (108 + 6) / 114][Stage 181:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.822840808 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 15 3  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 167   OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.415566545 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (58 + 55) / 113][Stage 182:===============================>                     (68 + 45) / 113][Stage 182:========================================>            (87 + 26) / 113][Stage 182:==================================================>  (107 + 6) / 113][Stage 182:====================================================>(112 + 1) / 113]                                                                                [Stage 183:===========================>                         (60 + 54) / 114][Stage 183:===============================>                     (68 + 46) / 114][Stage 183:======================================>              (83 + 31) / 114][Stage 183:==============================================>     (101 + 13) / 114][Stage 183:====================================================>(112 + 2) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.621168242 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 18 9  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203   OR  partitionIndex = 204 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.408629626 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (62 + 58) / 120][Stage 184:================================>                    (73 + 47) / 120][Stage 184:========================================>            (92 + 28) / 120][Stage 184:=================================================>   (113 + 7) / 120]                                                                                [Stage 185:===========================>                         (62 + 59) / 121][Stage 185:===============================>                     (71 + 50) / 121][Stage 185:=======================================>             (90 + 31) / 121][Stage 185:=================================================>   (112 + 9) / 121][Stage 185:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.829171444 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  122  OR  partitionIndex = 123  OR  partitionIndex = 136  OR  partitionIndex = 13 7  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151   OR  partitionIndex = 165 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.388196954 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 60) / 120][Stage 186:===============================>                     (71 + 49) / 120][Stage 186:=======================================>             (89 + 31) / 120][Stage 186:===============================================>    (109 + 11) / 120]                                                                                [Stage 187:===========================>                         (62 + 59) / 121][Stage 187:================================>                    (75 + 46) / 121][Stage 187:=========================================>           (94 + 27) / 121][Stage 187:===============================================>    (110 + 11) / 121][Stage 187:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.401834959 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  184  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 21 3  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 227   OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.410886709 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (63 + 58) / 121][Stage 188:=================================>                   (77 + 44) / 121][Stage 188:==========================================>          (97 + 24) / 121][Stage 188:===================================================> (117 + 4) / 121]                                                                                [Stage 189:============================>                        (65 + 57) / 122][Stage 189:================================>                    (75 + 47) / 122][Stage 189:========================================>            (94 + 28) / 122][Stage 189:===============================================>    (112 + 10) / 122][Stage 189:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.674460421 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 12 7  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 141   OR  partitionIndex = 142 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.392829644 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 60) / 120][Stage 190:==============================>                      (68 + 52) / 120][Stage 190:====================================>                (82 + 38) / 120][Stage 190:=============================================>      (105 + 15) / 120]                                                                                [Stage 191:==========================>                          (61 + 60) / 121][Stage 191:==============================>                      (70 + 51) / 121][Stage 191:=====================================>               (86 + 35) / 121][Stage 191:=============================================>      (107 + 14) / 121][Stage 191:====================================================>(119 + 2) / 121][Stage 191:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.346388539 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 16 0  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174   OR  partitionIndex = 175 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.373111695 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==============================>                      (67 + 48) / 115][Stage 192:======================================>              (84 + 31) / 115][Stage 192:=================================================>   (108 + 7) / 115][Stage 192:====================================================>(114 + 1) / 115]                                                                                [Stage 193:===============================>                     (69 + 47) / 116][Stage 193:====================================>                (79 + 37) / 116][Stage 193:============================================>        (98 + 18) / 116][Stage 193:===================================================> (112 + 4) / 116][Stage 193:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.740141573 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  O R  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  pa rtitionIndex = 98 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.394939127 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 60) / 120][Stage 194:=============================>                       (67 + 53) / 120][Stage 194:=====================================>               (86 + 34) / 120][Stage 194:=============================================>      (105 + 15) / 120]                                                                                [Stage 195:==========================>                          (61 + 60) / 121][Stage 195:=============================>                       (67 + 54) / 121][Stage 195:=======================================>             (90 + 31) / 121][Stage 195:==============================================>     (109 + 12) / 121][Stage 195:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.624850438 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  162  OR  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 16 5  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179   OR  partitionIndex = 180 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179  OR  partitionIndex = 180 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.383806398 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=============================>                       (64 + 51) / 115][Stage 196:==================================>                  (74 + 41) / 115][Stage 196:=========================================>           (91 + 24) / 115][Stage 196:===================================================> (111 + 4) / 115][Stage 196:====================================================>(114 + 1) / 115]                                                                                [Stage 197:=================================>                   (73 + 43) / 116][Stage 197:=======================================>             (86 + 30) / 116][Stage 197:=============================================>      (101 + 15) / 116][Stage 197:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.698186056 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 15 8  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 173   OR  partitionIndex = 174 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 173  OR  partitionIndex = 174 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398375133 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==============================>                      (66 + 49) / 115][Stage 198:==================================>                  (74 + 41) / 115][Stage 198:=========================================>           (90 + 25) / 115][Stage 198:================================================>    (106 + 9) / 115][Stage 198:====================================================>(113 + 2) / 115]                                                                                [Stage 199:===================================>                 (77 + 39) / 116][Stage 199:========================================>            (88 + 28) / 116][Stage 199:=============================================>      (102 + 14) / 116][Stage 199:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.953889175 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  70  OR  partitionIndex = 71  OR  partitionIndex = 84  OR  partitionIndex = 85  O R  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  pa rtitionIndex = 113 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.367725758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==============================>                      (66 + 49) / 115][Stage 200:=====================================>               (81 + 34) / 115][Stage 200:=============================================>       (98 + 17) / 115][Stage 200:===================================================> (111 + 4) / 115]                                                                                [Stage 201:===================================>                 (77 + 39) / 116][Stage 201:=========================================>           (90 + 26) / 116][Stage 201:=================================================>   (108 + 8) / 116][Stage 201:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.768904697 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/25 01:16:35 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.18:40888) dropped. RpcEnv already stopped.
17/05/25 01:16:35 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.18:40888) dropped. RpcEnv already stopped.

real	11m49.041s
user	12m48.368s
sys	1m38.748s
