Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 14:21:56 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 14:22:11 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 14:22:11 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 14:22:11 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 14:22:14 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 14:22:24 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524142213-0556).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.455434707 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:=======>                                               (16 + 99) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:======================================>                (80 + 35) / 115][Stage 0:============================================>          (94 + 21) / 115][Stage 0:==============================================>        (98 + 17) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:====================================================>  (110 + 5) / 115]                                                                                [Stage 1:=======================>                               (50 + 66) / 116][Stage 1:=============================>                         (62 + 54) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:=================================>                     (71 + 45) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:=======================================>               (83 + 33) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:==============================================>        (98 + 18) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 12.499397488 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=40", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=40,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.784986026 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:======================>                                (46 + 67) / 113][Stage 2:===========================>                           (57 + 56) / 113][Stage 2:==============================>                        (63 + 50) / 113][Stage 2:===================================>                   (73 + 40) / 113][Stage 2:===========================================>           (89 + 24) / 113][Stage 2:=================================================>    (103 + 10) / 113][Stage 2:====================================================>  (107 + 6) / 113][Stage 2:=====================================================> (109 + 4) / 113]                                                                                [Stage 3:===========================>                           (57 + 57) / 114][Stage 3:============================>                          (60 + 54) / 114][Stage 3:=============================>                         (62 + 52) / 114][Stage 3:=================================>                     (70 + 44) / 114][Stage 3:===========================================>           (91 + 23) / 114][Stage 3:===============================================>      (100 + 14) / 114][Stage 3:===================================================>   (107 + 7) / 114]                                                                                Time elapsed: 4.857295141 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=209", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=209,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.727225668 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:============================>                          (58 + 55) / 113][Stage 4:============================>                          (59 + 54) / 113][Stage 4:===============================>                       (64 + 49) / 113][Stage 4:===================================>                   (72 + 41) / 113][Stage 4:==========================================>            (88 + 25) / 113][Stage 4:==================================================>    (104 + 9) / 113][Stage 4:====================================================>  (108 + 5) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:===========================>                           (57 + 57) / 114][Stage 5:===========================>                           (58 + 56) / 114][Stage 5:================================>                      (68 + 46) / 114][Stage 5:======================================>                (80 + 34) / 114][Stage 5:==========================================>            (89 + 25) / 114][Stage 5:===============================================>      (101 + 13) / 114][Stage 5:====================================================>  (108 + 6) / 114][Stage 5:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.669954001 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=152", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=152,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.655239567 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:============================>                          (58 + 55) / 113][Stage 6:=============================>                         (60 + 53) / 113][Stage 6:==================================>                    (70 + 43) / 113][Stage 6:======================================>                (80 + 33) / 113][Stage 6:=============================================>         (94 + 19) / 113][Stage 6:===================================================>   (105 + 8) / 113][Stage 6:=====================================================> (110 + 3) / 113]                                                                                [Stage 7:============================>                          (59 + 55) / 114][Stage 7:==============================>                        (63 + 51) / 114][Stage 7:=================================>                     (69 + 45) / 114][Stage 7:======================================>                (80 + 34) / 114][Stage 7:===============================================>      (101 + 13) / 114][Stage 7:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.120868527 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=3", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=3,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.64637215 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:============================>                          (59 + 54) / 113][Stage 8:==============================>                        (62 + 51) / 113][Stage 8:===================================>                   (72 + 41) / 113][Stage 8:=============================================>         (93 + 20) / 113][Stage 8:===================================================>   (106 + 7) / 113][Stage 8:=====================================================> (109 + 4) / 113]                                                                                [Stage 9:=============================>                         (62 + 52) / 114][Stage 9:=================================>                     (70 + 44) / 114][Stage 9:===========================================>           (90 + 24) / 114][Stage 9:==============================================>        (97 + 17) / 114][Stage 9:===================================================>   (106 + 8) / 114][Stage 9:=====================================================> (110 + 4) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.218015879 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=90", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=90,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.581621148 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (58 + 55) / 113][Stage 10:============================>                         (60 + 53) / 113][Stage 10:===================================>                  (75 + 38) / 113][Stage 10:============================================>         (93 + 20) / 113][Stage 10:===============================================>     (102 + 11) / 113][Stage 10:===================================================>  (108 + 5) / 113][Stage 10:====================================================> (110 + 3) / 113]                                                                                [Stage 11:=============================>                        (62 + 52) / 114][Stage 11:===============================>                      (67 + 47) / 114][Stage 11:=========================================>            (88 + 26) / 114][Stage 11:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.746358542 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=134", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=134,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.547800609 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (57 + 56) / 113][Stage 12:==============================>                       (64 + 49) / 113][Stage 12:=====================================>                (79 + 34) / 113][Stage 12:================================================>    (103 + 10) / 113][Stage 12:===================================================>  (107 + 6) / 113][Stage 12:=====================================================>(111 + 2) / 113]                                                                                [Stage 13:===========================>                          (58 + 56) / 114][Stage 13:============================>                         (60 + 54) / 114][Stage 13:================================>                     (68 + 46) / 114][Stage 13:=======================================>              (84 + 30) / 114][Stage 13:=================================================>    (105 + 9) / 114][Stage 13:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.029349046 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=129", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=129,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.550980732 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:============================>                         (59 + 54) / 113][Stage 14:==============================>                       (63 + 50) / 113][Stage 14:======================================>               (80 + 33) / 113][Stage 14:===============================================>      (99 + 14) / 113][Stage 14:===============================================>     (101 + 12) / 113][Stage 14:====================================================> (110 + 3) / 113][Stage 14:=====================================================>(112 + 1) / 113]                                                                                [Stage 15:=============================>                        (62 + 52) / 114][Stage 15:=================================>                    (71 + 43) / 114][Stage 15:==========================================>           (90 + 24) / 114][Stage 15:=================================================>    (105 + 9) / 114][Stage 15:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.971066261 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.522503851 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (57 + 56) / 113][Stage 16:============================>                         (60 + 53) / 113][Stage 16:===================================>                  (75 + 38) / 113][Stage 16:==========================================>           (88 + 25) / 113][Stage 16:==============================================>       (98 + 15) / 113][Stage 16:====================================================> (109 + 4) / 113]                                                                                [Stage 17:============================>                         (61 + 53) / 114][Stage 17:================================>                     (68 + 46) / 114][Stage 17:===========================================>          (91 + 23) / 114][Stage 17:===================================================>  (109 + 5) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.650846449 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=29", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=29,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.571725439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:==============================>                       (63 + 50) / 113][Stage 18:================================>                     (68 + 45) / 113][Stage 18:===========================================>          (90 + 23) / 113][Stage 18:=============================================>        (96 + 17) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:============================>                         (60 + 54) / 114][Stage 19:===============================>                      (66 + 48) / 114][Stage 19:=======================================>              (83 + 31) / 114][Stage 19:================================================>    (104 + 10) / 114][Stage 19:==================================================>   (106 + 8) / 114][Stage 19:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.652352387 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=4", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=4,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.503175515 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:============================>                         (59 + 54) / 113][Stage 20:==============================>                       (63 + 50) / 113][Stage 20:===================================>                  (75 + 38) / 113][Stage 20:===============================================>      (99 + 14) / 113][Stage 20:===================================================>  (108 + 5) / 113]                                                                                [Stage 21:============================>                         (60 + 54) / 114][Stage 21:=================================>                    (71 + 43) / 114][Stage 21:=======================================>              (84 + 30) / 114][Stage 21:==============================================>      (100 + 14) / 114][Stage 21:====================================================> (111 + 3) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.89333663 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=237", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=237,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505805477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:============================>                         (60 + 53) / 113][Stage 22:=================================>                    (70 + 43) / 113][Stage 22:===============================================>     (101 + 12) / 113][Stage 22:====================================================> (109 + 4) / 113][Stage 22:=====================================================>(111 + 2) / 113]                                                                                [Stage 23:============================>                         (60 + 54) / 114][Stage 23:================================>                     (69 + 45) / 114][Stage 23:==========================================>           (90 + 24) / 114][Stage 23:==============================================>      (100 + 14) / 114][Stage 23:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.38752983 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=98", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=98,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493620078 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (58 + 55) / 113][Stage 24:============================>                         (59 + 54) / 113][Stage 24:==================================>                   (72 + 41) / 113][Stage 24:===========================================>          (91 + 22) / 113][Stage 24:==================================================>   (105 + 8) / 113][Stage 24:====================================================> (110 + 3) / 113]                                                                                [Stage 25:=============================>                        (62 + 52) / 114][Stage 25:===================================>                  (74 + 40) / 114][Stage 25:=============================================>        (95 + 19) / 114][Stage 25:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.453083253 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=131", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=131,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4964211 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (58 + 55) / 113][Stage 26:================================>                     (67 + 46) / 113][Stage 26:===========================================>          (91 + 22) / 113][Stage 26:==================================================>   (105 + 8) / 113][Stage 26:====================================================> (110 + 3) / 113]                                                                                [Stage 27:=============================>                        (62 + 52) / 114][Stage 27:====================================>                 (78 + 36) / 114][Stage 27:===============================================>     (102 + 12) / 114][Stage 27:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.31026413 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=87", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=87,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483949961 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:============================>                         (60 + 53) / 113][Stage 28:=================================>                    (71 + 42) / 113][Stage 28:===========================================>          (90 + 23) / 113][Stage 28:===================================================>  (107 + 6) / 113][Stage 28:=====================================================>(111 + 2) / 113]                                                                                [Stage 29:===========================>                          (59 + 55) / 114][Stage 29:==============================>                       (64 + 50) / 114][Stage 29:=====================================>                (80 + 34) / 114][Stage 29:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.144840522 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=27", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=27,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493609664 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (58 + 55) / 113][Stage 30:============================>                         (60 + 53) / 113][Stage 30:===================================>                  (75 + 38) / 113][Stage 30:==============================================>      (100 + 13) / 113][Stage 30:=====================================================>(111 + 2) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:============================>                         (60 + 54) / 114][Stage 31:===============================>                      (67 + 47) / 114][Stage 31:========================================>             (86 + 28) / 114][Stage 31:==================================================>   (107 + 7) / 114][Stage 31:=====================================================>(112 + 2) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.740253355 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=177", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=177,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.530449312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (58 + 55) / 113][Stage 32:============================>                         (59 + 54) / 113][Stage 32:================================>                     (68 + 45) / 113][Stage 32:===========================================>          (91 + 22) / 113][Stage 32:====================================================> (110 + 3) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:===========================>                          (59 + 55) / 114][Stage 33:================================>                     (69 + 45) / 114][Stage 33:=========================================>            (88 + 26) / 114][Stage 33:===============================================>     (102 + 12) / 114][Stage 33:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.297330171 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=172", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=172,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.528184893 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (58 + 55) / 113][Stage 34:=============================>                        (62 + 51) / 113][Stage 34:====================================>                 (76 + 37) / 113][Stage 34:===============================================>     (101 + 12) / 113][Stage 34:====================================================> (109 + 4) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:============================>                         (60 + 54) / 114][Stage 35:==============================>                       (64 + 50) / 114][Stage 35:====================================>                 (76 + 38) / 114][Stage 35:===============================================>     (102 + 12) / 114][Stage 35:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.367722814 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=145", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=145,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.536932076 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:============================>                         (59 + 54) / 113][Stage 36:=================================>                    (70 + 43) / 113][Stage 36:============================================>         (93 + 20) / 113][Stage 36:====================================================> (110 + 3) / 113]                                                                                [Stage 37:============================>                         (60 + 54) / 114][Stage 37:====================================>                 (76 + 38) / 114][Stage 37:==============================================>      (101 + 13) / 114][Stage 37:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.067247305 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=230", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=230,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483967432 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (58 + 55) / 113][Stage 38:================================>                     (68 + 45) / 113][Stage 38:=========================================>            (87 + 26) / 113][Stage 38:===============================================>     (101 + 12) / 113][Stage 38:================================================>    (103 + 10) / 113][Stage 38:=====================================================>(111 + 2) / 113]                                                                                [Stage 39:============================>                         (60 + 54) / 114][Stage 39:==============================>                       (65 + 49) / 114][Stage 39:=======================================>              (84 + 30) / 114][Stage 39:=================================================>    (105 + 9) / 114][Stage 39:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.371317043 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=244", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=244,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.495113755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:============================>                         (60 + 53) / 113][Stage 40:=================================>                    (70 + 43) / 113][Stage 40:===========================================>          (91 + 22) / 113][Stage 40:===================================================>  (108 + 5) / 113]                                                                                [Stage 41:============================>                         (60 + 54) / 114][Stage 41:===================================>                  (75 + 39) / 114][Stage 41:=============================================>        (95 + 19) / 114][Stage 41:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.010816702 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=155", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=155,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.475204354 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:============================>                         (59 + 54) / 113][Stage 42:=============================>                        (62 + 51) / 113][Stage 42:==================================>                   (72 + 41) / 113][Stage 42:============================================>         (93 + 20) / 113][Stage 42:=====================================================>(112 + 1) / 113]                                                                                [Stage 43:===========================>                          (59 + 55) / 114][Stage 43:==============================>                       (65 + 49) / 114][Stage 43:=======================================>              (83 + 31) / 114][Stage 43:==============================================>       (99 + 15) / 114]                                                                                Time elapsed: 3.172778919 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=26", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=26,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465616314 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (58 + 55) / 113][Stage 44:===============================>                      (66 + 47) / 113][Stage 44:=========================================>            (87 + 26) / 113][Stage 44:=====================================================>(112 + 1) / 113]                                                                                [Stage 45:===========================>                          (59 + 55) / 114][Stage 45:================================>                     (68 + 46) / 114][Stage 45:==========================================>           (90 + 24) / 114][Stage 45:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.131158045 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=245", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=245,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476271598 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (58 + 55) / 113][Stage 46:=============================>                        (62 + 51) / 113][Stage 46:==================================>                   (73 + 40) / 113][Stage 46:==============================================>       (98 + 15) / 113][Stage 46:=====================================================>(111 + 2) / 113]                                                                                [Stage 47:=============================>                        (62 + 52) / 114][Stage 47:====================================>                 (77 + 37) / 114][Stage 47:=============================================>        (95 + 19) / 114][Stage 47:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.102381293 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=44", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=44,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453061835 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (58 + 55) / 113][Stage 48:============================>                         (60 + 53) / 113][Stage 48:===================================>                  (74 + 39) / 113][Stage 48:================================================>    (103 + 10) / 113][Stage 48:====================================================> (110 + 3) / 113][Stage 48:=====================================================>(112 + 1) / 113]                                                                                [Stage 49:===========================>                          (59 + 55) / 114][Stage 49:===============================>                      (66 + 48) / 114][Stage 49:======================================>               (81 + 33) / 114][Stage 49:==============================================>      (101 + 13) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.289549597 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=183", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=183,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.58456642 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:============================>                         (59 + 54) / 113][Stage 50:===============================>                      (65 + 48) / 113][Stage 50:===========================================>          (91 + 22) / 113][Stage 50:=================================================>    (104 + 9) / 113][Stage 50:=====================================================>(111 + 2) / 113]                                                                                [Stage 51:============================>                         (60 + 54) / 114][Stage 51:===============================>                      (67 + 47) / 114][Stage 51:========================================>             (85 + 29) / 114][Stage 51:===============================================>     (102 + 12) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.168724049 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=83", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=83,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432833756 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:============================>                         (59 + 54) / 113][Stage 52:===============================>                      (66 + 47) / 113][Stage 52:========================================>             (84 + 29) / 113][Stage 52:==================================================>   (105 + 8) / 113]                                                                                [Stage 53:=============================>                        (62 + 52) / 114][Stage 53:================================>                     (69 + 45) / 114][Stage 53:===========================================>          (92 + 22) / 114][Stage 53:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 2.93629556 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=63", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=63,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452012001 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (58 + 55) / 113][Stage 54:=============================>                        (61 + 52) / 113][Stage 54:====================================>                 (76 + 37) / 113][Stage 54:===============================================>     (102 + 11) / 113]                                                                                [Stage 55:============================>                         (60 + 54) / 114][Stage 55:==================================>                   (72 + 42) / 114][Stage 55:=======================================>              (84 + 30) / 114][Stage 55:===============================================>     (103 + 11) / 114][Stage 55:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.071633775 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=110", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=110,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446006422 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (58 + 55) / 113][Stage 56:===============================>                      (65 + 48) / 113][Stage 56:========================================>             (85 + 28) / 113][Stage 56:===============================================>     (101 + 12) / 113][Stage 56:====================================================> (110 + 3) / 113]                                                                                [Stage 57:=============================>                        (62 + 52) / 114][Stage 57:==================================>                   (72 + 42) / 114][Stage 57:==========================================>           (89 + 25) / 114][Stage 57:===================================================>  (108 + 6) / 114][Stage 57:====================================================> (110 + 4) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.628129192 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=206", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=206,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449720724 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:============================>                         (59 + 54) / 113][Stage 58:============================>                         (60 + 53) / 113][Stage 58:=====================================>                (78 + 35) / 113][Stage 58:=============================================>        (95 + 18) / 113][Stage 58:====================================================> (110 + 3) / 113]                                                                                [Stage 59:============================>                         (60 + 54) / 114][Stage 59:===============================>                      (67 + 47) / 114][Stage 59:=====================================>                (80 + 34) / 114][Stage 59:==================================================>   (106 + 8) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.328874269 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=130", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=130,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439727924 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:============================>                         (59 + 54) / 113][Stage 60:=============================>                        (62 + 51) / 113][Stage 60:======================================>               (80 + 33) / 113][Stage 60:==============================================>       (97 + 16) / 113][Stage 60:=====================================================>(111 + 2) / 113]                                                                                [Stage 61:=============================>                        (63 + 51) / 114][Stage 61:====================================>                 (77 + 37) / 114][Stage 61:==============================================>       (98 + 16) / 114][Stage 61:===================================================>  (109 + 5) / 114][Stage 61:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.356857488 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=135", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=135,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434827045 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (58 + 55) / 113][Stage 62:=============================>                        (61 + 52) / 113][Stage 62:==================================>                   (73 + 40) / 113][Stage 62:===========================================>          (92 + 21) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:============================>                         (60 + 54) / 114][Stage 63:================================>                     (69 + 45) / 114][Stage 63:=========================================>            (87 + 27) / 114][Stage 63:==============================================>      (101 + 13) / 114][Stage 63:===================================================>  (109 + 5) / 114][Stage 63:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.228834516 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=70", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=70,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.576700335 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:============================>                         (59 + 54) / 113][Stage 64:==============================>                       (63 + 50) / 113][Stage 64:====================================>                 (76 + 37) / 113][Stage 64:=============================================>        (96 + 17) / 113][Stage 64:====================================================> (109 + 4) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:============================>                         (60 + 54) / 114][Stage 65:====================================>                 (76 + 38) / 114][Stage 65:============================================>         (93 + 21) / 114][Stage 65:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.307715826 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=243", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=243,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436115188 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:============================>                         (59 + 54) / 113][Stage 66:================================>                     (69 + 44) / 113][Stage 66:=======================================>              (83 + 30) / 113][Stage 66:==================================================>   (105 + 8) / 113][Stage 66:=====================================================>(111 + 2) / 113][Stage 66:=====================================================>(112 + 1) / 113]                                                                                [Stage 67:=============================>                        (62 + 52) / 114][Stage 67:====================================>                 (76 + 38) / 114][Stage 67:==============================================>      (100 + 14) / 114][Stage 67:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.387576435 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=116", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=116,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430679629 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (58 + 55) / 113][Stage 68:===============================>                      (66 + 47) / 113][Stage 68:=======================================>              (83 + 30) / 113][Stage 68:===================================================>  (108 + 5) / 113]                                                                                [Stage 69:============================>                         (61 + 53) / 114][Stage 69:=================================>                    (71 + 43) / 114][Stage 69:===========================================>          (92 + 22) / 114][Stage 69:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.102488488 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=212", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=212,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413086807 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (58 + 55) / 113][Stage 70:=============================>                        (62 + 51) / 113][Stage 70:==================================>                   (73 + 40) / 113][Stage 70:=============================================>        (96 + 17) / 113][Stage 70:====================================================> (109 + 4) / 113]                                                                                [Stage 71:==============================>                       (64 + 50) / 114][Stage 71:==================================>                   (73 + 41) / 114][Stage 71:============================================>         (93 + 21) / 114][Stage 71:====================================================> (110 + 4) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.208610023 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.513022411 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (59 + 54) / 113][Stage 72:===============================>                      (66 + 47) / 113][Stage 72:=========================================>            (86 + 27) / 113][Stage 72:================================================>    (103 + 10) / 113][Stage 72:====================================================> (110 + 3) / 113]                                                                                [Stage 73:=============================>                        (62 + 52) / 114][Stage 73:===================================>                  (74 + 40) / 114][Stage 73:=========================================>            (88 + 26) / 114][Stage 73:==================================================>   (106 + 8) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.400497797 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=111", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=111,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417578512 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:============================>                         (60 + 53) / 113][Stage 74:===================================>                  (74 + 39) / 113][Stage 74:===========================================>          (92 + 21) / 113][Stage 74:=====================================================>(111 + 2) / 113]                                                                                [Stage 75:============================>                         (60 + 54) / 114][Stage 75:=============================>                        (62 + 52) / 114][Stage 75:===================================>                  (75 + 39) / 114][Stage 75:===============================================>     (102 + 12) / 114][Stage 75:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.070587638 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=11", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=11,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422837894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:============================>                         (59 + 54) / 113][Stage 76:================================>                     (67 + 46) / 113][Stage 76:========================================>             (84 + 29) / 113][Stage 76:================================================>    (103 + 10) / 113][Stage 76:====================================================> (109 + 4) / 113]                                                                                [Stage 77:============================>                         (61 + 53) / 114][Stage 77:================================>                     (69 + 45) / 114][Stage 77:===========================================>          (92 + 22) / 114][Stage 77:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.393207602 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=6", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=6,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417427375 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (58 + 55) / 113][Stage 78:=============================>                        (62 + 51) / 113][Stage 78:===================================>                  (75 + 38) / 113][Stage 78:==============================================>       (98 + 15) / 113][Stage 78:=====================================================>(111 + 2) / 113]                                                                                [Stage 79:===========================>                          (59 + 55) / 114][Stage 79:=============================>                        (63 + 51) / 114][Stage 79:====================================>                 (77 + 37) / 114][Stage 79:===========================================>          (92 + 22) / 114][Stage 79:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.273549508 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=73", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=73,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427724038 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (60 + 53) / 113][Stage 80:=================================>                    (70 + 43) / 113][Stage 80:===========================================>          (92 + 21) / 113][Stage 80:===================================================>  (108 + 5) / 113]                                                                                [Stage 81:===========================>                          (59 + 55) / 114][Stage 81:============================>                         (60 + 54) / 114][Stage 81:======================================>               (82 + 32) / 114][Stage 81:==============================================>      (101 + 13) / 114][Stage 81:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.01214432 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=117", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=117,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409466896 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===========================>                          (58 + 55) / 113][Stage 82:=============================>                        (61 + 52) / 113][Stage 82:====================================>                 (76 + 37) / 113][Stage 82:============================================>         (93 + 20) / 113][Stage 82:=================================================>    (104 + 9) / 113][Stage 82:=====================================================>(111 + 2) / 113]                                                                                [Stage 83:===========================>                          (59 + 55) / 114][Stage 83:================================>                     (68 + 46) / 114][Stage 83:========================================>             (86 + 28) / 114][Stage 83:=================================================>    (105 + 9) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.149573184 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=193", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=193,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409871597 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (58 + 55) / 113][Stage 84:=============================>                        (62 + 51) / 113][Stage 84:=====================================>                (78 + 35) / 113][Stage 84:============================================>         (94 + 19) / 113][Stage 84:=====================================================>(111 + 2) / 113]                                                                                [Stage 85:============================>                         (61 + 53) / 114][Stage 85:=================================>                    (71 + 43) / 114][Stage 85:===========================================>          (92 + 22) / 114][Stage 85:==================================================>   (106 + 8) / 114][Stage 85:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.348501362 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=23", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=23,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412152039 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:=============================>                        (62 + 51) / 113][Stage 86:==================================>                   (73 + 40) / 113][Stage 86:===========================================>          (92 + 21) / 113][Stage 86:==================================================>   (105 + 8) / 113]                                                                                [Stage 87:===========================>                          (59 + 55) / 114][Stage 87:==================================>                   (72 + 42) / 114][Stage 87:=========================================>            (88 + 26) / 114][Stage 87:===================================================>  (109 + 5) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.288939341 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=236", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=236,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425027904 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:===============================>                      (66 + 47) / 113][Stage 88:=========================================>            (87 + 26) / 113][Stage 88:==================================================>   (106 + 7) / 113]                                                                                [Stage 89:=============================>                        (62 + 52) / 114][Stage 89:===================================>                  (75 + 39) / 114][Stage 89:==============================================>       (98 + 16) / 114][Stage 89:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.973063256 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=176", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=176,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401917741 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (59 + 54) / 113][Stage 90:==================================>                   (72 + 41) / 113][Stage 90:=============================================>        (95 + 18) / 113][Stage 90:====================================================> (109 + 4) / 113]                                                                                [Stage 91:============================>                         (61 + 53) / 114][Stage 91:================================>                     (69 + 45) / 114][Stage 91:==========================================>           (90 + 24) / 114][Stage 91:================================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.030488 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=39", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=39,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433004509 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:============================>                         (59 + 54) / 113][Stage 92:====================================>                 (77 + 36) / 113][Stage 92:===========================================>          (92 + 21) / 113][Stage 92:=====================================================>(111 + 2) / 113]                                                                                [Stage 93:==============================>                       (64 + 50) / 114][Stage 93:===================================>                  (74 + 40) / 114][Stage 93:==================================================>   (106 + 8) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.074190502 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=133", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=133,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410256865 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (58 + 55) / 113][Stage 94:===============================>                      (65 + 48) / 113][Stage 94:====================================>                 (77 + 36) / 113][Stage 94:===============================================>      (99 + 14) / 113]                                                                                [Stage 95:============================>                         (60 + 54) / 114][Stage 95:==================================>                   (73 + 41) / 114][Stage 95:============================================>         (94 + 20) / 114][Stage 95:====================================================> (111 + 3) / 114][Stage 95:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.160891877 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=240", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=240,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404622726 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:============================>                         (59 + 54) / 113][Stage 96:================================>                     (68 + 45) / 113][Stage 96:===========================================>          (91 + 22) / 113][Stage 96:===================================================>  (108 + 5) / 113]                                                                                [Stage 97:============================>                         (60 + 54) / 114][Stage 97:==================================>                   (72 + 42) / 114][Stage 97:=======================================>              (84 + 30) / 114][Stage 97:===================================================>  (108 + 6) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.171315911 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=22", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=22,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407210527 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:============================>                         (59 + 54) / 113][Stage 98:===============================>                      (65 + 48) / 113][Stage 98:=======================================>              (83 + 30) / 113][Stage 98:=================================================>    (104 + 9) / 113][Stage 98:===================================================>  (108 + 5) / 113]                                                                                [Stage 99:============================>                         (61 + 53) / 114][Stage 99:==================================>                   (72 + 42) / 114][Stage 99:=========================================>            (88 + 26) / 114][Stage 99:===================================================>  (109 + 5) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.291387415 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=239", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=239,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395187005 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (58 + 55) / 113][Stage 100:==============================>                      (64 + 49) / 113][Stage 100:======================================>              (82 + 31) / 113][Stage 100:===============================================>    (103 + 10) / 113][Stage 100:===================================================> (109 + 4) / 113][Stage 100:====================================================>(111 + 2) / 113]                                                                                [Stage 101:============================>                        (61 + 53) / 114][Stage 101:==================================>                  (74 + 40) / 114][Stage 101:===========================================>         (94 + 20) / 114][Stage 101:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.365531567 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=93", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=93,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401096889 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (59 + 54) / 113][Stage 102:==================================>                  (74 + 39) / 113][Stage 102:===========================================>         (93 + 20) / 113][Stage 102:====================================================>(112 + 1) / 113]                                                                                [Stage 103:===========================>                         (59 + 55) / 114][Stage 103:==============================>                      (66 + 48) / 114][Stage 103:====================================>                (79 + 35) / 114][Stage 103:=============================================>       (97 + 17) / 114]                                                                                Time elapsed: 2.861256282 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=115", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=115,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392260948 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (59 + 54) / 113][Stage 104:===================================>                 (75 + 38) / 113][Stage 104:===========================================>         (93 + 20) / 113][Stage 104:===================================================> (110 + 3) / 113]                                                                                [Stage 105:=============================>                       (64 + 50) / 114][Stage 105:====================================>                (78 + 36) / 114][Stage 105:=============================================>       (97 + 17) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.010384953 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=147", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=147,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409817814 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (58 + 55) / 113][Stage 106:=============================>                       (62 + 51) / 113][Stage 106:================================>                    (69 + 44) / 113][Stage 106:=============================================>       (98 + 15) / 113]                                                                                [Stage 107:===========================>                         (60 + 54) / 114][Stage 107:=================================>                   (71 + 43) / 114][Stage 107:==========================================>          (91 + 23) / 114][Stage 107:==============================================>     (102 + 12) / 114]                                                                                Time elapsed: 2.907516495 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=96", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=96,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399800833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:============================>                        (60 + 53) / 113][Stage 108:=================================>                   (72 + 41) / 113][Stage 108:============================================>        (95 + 18) / 113][Stage 108:=================================================>   (105 + 8) / 113]                                                                                [Stage 109:===========================>                         (60 + 54) / 114][Stage 109:================================>                    (70 + 44) / 114][Stage 109:======================================>              (83 + 31) / 114][Stage 109:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.038108862 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=82", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=82,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393419792 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (59 + 54) / 113][Stage 110:=============================>                       (63 + 50) / 113][Stage 110:=====================================>               (80 + 33) / 113][Stage 110:================================================>    (104 + 9) / 113][Stage 110:====================================================>(112 + 1) / 113]                                                                                [Stage 111:===========================>                         (59 + 55) / 114][Stage 111:===============================>                     (68 + 46) / 114][Stage 111:======================================>              (82 + 32) / 114][Stage 111:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 2.909987676 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=181", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=181,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390454793 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (58 + 55) / 113][Stage 112:==============================>                      (65 + 48) / 113][Stage 112:====================================>                (77 + 36) / 113][Stage 112:==============================================>     (101 + 12) / 113][Stage 112:====================================================>(111 + 2) / 113]                                                                                [Stage 113:===========================>                         (60 + 54) / 114][Stage 113:====================================>                (78 + 36) / 114][Stage 113:============================================>        (95 + 19) / 114][Stage 113:===============================================>    (104 + 10) / 114][Stage 113:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.382250705 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=233", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=233,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389198794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=============================>                       (63 + 50) / 113][Stage 114:=================================>                   (71 + 42) / 113][Stage 114:=======================================>             (84 + 29) / 113][Stage 114:==================================================>  (107 + 6) / 113][Stage 114:====================================================>(112 + 1) / 113]                                                                                [Stage 115:===========================>                         (60 + 54) / 114][Stage 115:=============================>                       (64 + 50) / 114][Stage 115:=====================================>               (80 + 34) / 114][Stage 115:================================================>    (105 + 9) / 114][Stage 115:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.182471859 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=241", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=241,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395654138 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (59 + 54) / 113][Stage 116:=============================>                       (62 + 51) / 113][Stage 116:=====================================>               (80 + 33) / 113][Stage 116:==============================================>     (102 + 11) / 113]                                                                                [Stage 117:===========================>                         (60 + 54) / 114][Stage 117:=================================>                   (72 + 42) / 114][Stage 117:=========================================>           (90 + 24) / 114][Stage 117:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.940000778 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=227", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=227,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414545884 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (59 + 54) / 113][Stage 118:==================================>                  (74 + 39) / 113][Stage 118:===========================================>         (92 + 21) / 113][Stage 118:===================================================> (109 + 4) / 113]                                                                                [Stage 119:============================>                        (62 + 52) / 114][Stage 119:=================================>                   (71 + 43) / 114][Stage 119:=============================================>      (100 + 14) / 114][Stage 119:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.119218562 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=48", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=48,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403533663 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==============================>                      (64 + 49) / 113][Stage 120:==================================>                  (73 + 40) / 113][Stage 120:=============================================>       (97 + 16) / 113][Stage 120:==================================================>  (107 + 6) / 113]                                                                                [Stage 121:=============================>                       (64 + 50) / 114][Stage 121:====================================>                (79 + 35) / 114][Stage 121:===============================================>    (104 + 10) / 114][Stage 121:====================================================>(112 + 2) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.361289068 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386670239 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (59 + 54) / 113][Stage 122:==============================>                      (66 + 47) / 113][Stage 122:===========================================>         (92 + 21) / 113][Stage 122:=================================================>   (106 + 7) / 113]                                                                                [Stage 123:============================>                        (62 + 52) / 114][Stage 123:==================================>                  (75 + 39) / 114][Stage 123:==========================================>          (91 + 23) / 114][Stage 123:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.934648407 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=79", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=79,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388943681 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (59 + 54) / 113][Stage 124:================================>                    (70 + 43) / 113][Stage 124:========================================>            (87 + 26) / 113][Stage 124:=================================================>   (105 + 8) / 113]                                                                                [Stage 125:===========================>                         (60 + 54) / 114][Stage 125:================================>                    (69 + 45) / 114][Stage 125:========================================>            (87 + 27) / 114][Stage 125:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.023204265 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=114", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=114,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41220679 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (58 + 55) / 113][Stage 126:===========================>                         (59 + 54) / 113][Stage 126:====================================>                (77 + 36) / 113][Stage 126:============================================>        (95 + 18) / 113][Stage 126:=================================================>   (106 + 7) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:===========================>                         (59 + 55) / 114][Stage 127:=============================>                       (63 + 51) / 114][Stage 127:====================================>                (79 + 35) / 114][Stage 127:==============================================>     (102 + 12) / 114][Stage 127:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.388908372 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=137", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=137,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388714503 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (58 + 55) / 113][Stage 128:==================================>                  (74 + 39) / 113][Stage 128:==============================================>     (101 + 12) / 113][Stage 128:====================================================>(112 + 1) / 113]                                                                                [Stage 129:===========================>                         (60 + 54) / 114][Stage 129:================================>                    (69 + 45) / 114][Stage 129:=======================================>             (85 + 29) / 114][Stage 129:================================================>    (105 + 9) / 114][Stage 129:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.088833068 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=21", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=21,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408241811 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (58 + 55) / 113][Stage 130:===============================>                     (68 + 45) / 113][Stage 130:=======================================>             (84 + 29) / 113][Stage 130:==================================================>  (107 + 6) / 113]                                                                                [Stage 131:============================>                        (61 + 53) / 114][Stage 131:================================>                    (69 + 45) / 114][Stage 131:=============================================>       (98 + 16) / 114][Stage 131:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.927575747 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=162", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=162,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383154025 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (59 + 54) / 113][Stage 132:==============================>                      (65 + 48) / 113][Stage 132:====================================>                (78 + 35) / 113][Stage 132:=============================================>       (98 + 15) / 113][Stage 132:===================================================> (110 + 3) / 113]                                                                                [Stage 133:==============================>                      (65 + 49) / 114][Stage 133:======================================>              (82 + 32) / 114][Stage 133:=============================================>       (97 + 17) / 114][Stage 133:==================================================>  (109 + 5) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.198275947 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=210", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=210,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387117728 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:============================>                        (60 + 53) / 113][Stage 134:===================================>                 (75 + 38) / 113][Stage 134:==============================================>     (100 + 13) / 113][Stage 134:==================================================>  (108 + 5) / 113]                                                                                [Stage 135:===========================>                         (60 + 54) / 114][Stage 135:================================>                    (70 + 44) / 114][Stage 135:======================================>              (83 + 31) / 114][Stage 135:==============================================>     (101 + 13) / 114]                                                                                Time elapsed: 3.112247009 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=168", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=168,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396810852 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (59 + 54) / 113][Stage 136:=============================>                       (62 + 51) / 113][Stage 136:=====================================>               (79 + 34) / 113][Stage 136:==============================================>     (102 + 11) / 113][Stage 136:===================================================> (110 + 3) / 113]                                                                                [Stage 137:===========================>                         (60 + 54) / 114][Stage 137:==============================>                      (66 + 48) / 114][Stage 137:====================================>                (78 + 36) / 114][Stage 137:==============================================>     (102 + 12) / 114][Stage 137:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.095535535 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=121", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=121,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398052614 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (58 + 55) / 113][Stage 138:==============================>                      (66 + 47) / 113][Stage 138:=======================================>             (85 + 28) / 113][Stage 138:=================================================>   (105 + 8) / 113]                                                                                [Stage 139:===========================>                         (60 + 54) / 114][Stage 139:================================>                    (70 + 44) / 114][Stage 139:============================================>        (95 + 19) / 114][Stage 139:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.941788054 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=18", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=18,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38319151 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (58 + 55) / 113][Stage 140:=============================>                       (62 + 51) / 113][Stage 140:====================================>                (77 + 36) / 113][Stage 140:=============================================>       (96 + 17) / 113][Stage 140:===================================================> (110 + 3) / 113]                                                                                [Stage 141:============================>                        (62 + 52) / 114][Stage 141:=================================>                   (73 + 41) / 114][Stage 141:=========================================>           (89 + 25) / 114][Stage 141:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.049462662 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=242", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=242,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389506054 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (59 + 54) / 113][Stage 142:=============================>                       (63 + 50) / 113][Stage 142:====================================>                (77 + 36) / 113][Stage 142:=================================================>   (105 + 8) / 113][Stage 142:====================================================>(111 + 2) / 113]                                                                                [Stage 143:=============================>                       (63 + 51) / 114][Stage 143:=====================================>               (80 + 34) / 114][Stage 143:=============================================>      (100 + 14) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.055112414 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=153", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=153,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389651735 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (59 + 54) / 113][Stage 144:==============================>                      (65 + 48) / 113][Stage 144:=====================================>               (80 + 33) / 113][Stage 144:==============================================>     (102 + 11) / 113][Stage 144:====================================================>(112 + 1) / 113]                                                                                [Stage 145:===========================>                         (59 + 55) / 114][Stage 145:================================>                    (69 + 45) / 114][Stage 145:======================================>              (82 + 32) / 114][Stage 145:==============================================>     (101 + 13) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.032289977 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=167", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=167,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391111157 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (59 + 54) / 113][Stage 146:================================>                    (69 + 44) / 113][Stage 146:===========================================>         (93 + 20) / 113][Stage 146:=================================================>   (106 + 7) / 113]                                                                                [Stage 147:===========================>                         (60 + 54) / 114][Stage 147:===============================>                     (67 + 47) / 114][Stage 147:============================================>        (96 + 18) / 114][Stage 147:=================================================>   (107 + 7) / 114][Stage 147:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.248926305 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=169", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=169,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387734338 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (58 + 55) / 113][Stage 148:=============================>                       (62 + 51) / 113][Stage 148:=====================================>               (79 + 34) / 113][Stage 148:==============================================>     (100 + 13) / 113]                                                                                [Stage 149:===========================>                         (59 + 55) / 114][Stage 149:===============================>                     (67 + 47) / 114][Stage 149:=======================================>             (85 + 29) / 114][Stage 149:================================================>    (105 + 9) / 114][Stage 149:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.967961176 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=232", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=232,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382786017 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:============================>                        (60 + 53) / 113][Stage 150:===================================>                 (75 + 38) / 113][Stage 150:============================================>        (95 + 18) / 113][Stage 150:=================================================>   (105 + 8) / 113][Stage 150:===================================================> (109 + 4) / 113]                                                                                [Stage 151:===========================>                         (59 + 55) / 114][Stage 151:=============================>                       (64 + 50) / 114][Stage 151:=====================================>               (80 + 34) / 114][Stage 151:==============================================>      (99 + 15) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.100967714 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=163", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=163,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393554582 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (59 + 54) / 113][Stage 152:================================>                    (69 + 44) / 113][Stage 152:=========================================>           (89 + 24) / 113][Stage 152:===================================================> (110 + 3) / 113]                                                                                [Stage 153:===========================>                         (59 + 55) / 114][Stage 153:===========================>                         (60 + 54) / 114][Stage 153:=======================================>             (86 + 28) / 114][Stage 153:==============================================>     (103 + 11) / 114][Stage 153:====================================================>(112 + 2) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.116699651 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=214", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=214,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397637265 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===========================>                         (58 + 55) / 113][Stage 154:=============================>                       (62 + 51) / 113][Stage 154:=====================================>               (79 + 34) / 113][Stage 154:==============================================>     (101 + 12) / 113][Stage 154:===================================================> (109 + 4) / 113]                                                                                [Stage 155:============================>                        (62 + 52) / 114][Stage 155:===================================>                 (77 + 37) / 114][Stage 155:=============================================>       (97 + 17) / 114][Stage 155:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.214675618 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=143", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=143,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384064641 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:============================>                        (60 + 53) / 113][Stage 156:=================================>                   (72 + 41) / 113][Stage 156:=============================================>       (97 + 16) / 113][Stage 156:===================================================> (110 + 3) / 113]                                                                                [Stage 157:===========================>                         (60 + 54) / 114][Stage 157:==============================>                      (65 + 49) / 114][Stage 157:====================================>                (79 + 35) / 114][Stage 157:==============================================>     (103 + 11) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.02710398 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=69", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=69,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388975505 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (58 + 55) / 113][Stage 158:===============================>                     (67 + 46) / 113][Stage 158:======================================>              (83 + 30) / 113][Stage 158:==================================================>  (108 + 5) / 113]                                                                                [Stage 159:===========================>                         (60 + 54) / 114][Stage 159:===============================>                     (67 + 47) / 114][Stage 159:=======================================>             (86 + 28) / 114][Stage 159:===============================================>    (104 + 10) / 114][Stage 159:===================================================> (111 + 3) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.219428962 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=80", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=80,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393091687 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (58 + 55) / 113][Stage 160:=================================>                   (72 + 41) / 113][Stage 160:=========================================>           (89 + 24) / 113][Stage 160:===================================================> (109 + 4) / 113]                                                                                [Stage 161:============================>                        (61 + 53) / 114][Stage 161:==================================>                  (74 + 40) / 114][Stage 161:===========================================>         (94 + 20) / 114][Stage 161:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.171612076 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=146", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=146,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389210128 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (58 + 55) / 113][Stage 162:===============================>                     (67 + 46) / 113][Stage 162:======================================>              (83 + 30) / 113][Stage 162:==================================================>  (107 + 6) / 113][Stage 162:====================================================>(112 + 1) / 113]                                                                                [Stage 163:==============================>                      (65 + 49) / 114][Stage 163:==================================>                  (75 + 39) / 114][Stage 163:============================================>        (95 + 19) / 114][Stage 163:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.222798427 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=226", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=226,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386176148 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (58 + 55) / 113][Stage 164:============================>                        (61 + 52) / 113][Stage 164:=====================================>               (79 + 34) / 113][Stage 164:=============================================>       (97 + 16) / 113][Stage 164:===================================================> (110 + 3) / 113]                                                                                [Stage 165:===========================>                         (59 + 55) / 114][Stage 165:=============================>                       (64 + 50) / 114][Stage 165:===================================>                 (76 + 38) / 114][Stage 165:=============================================>       (97 + 17) / 114][Stage 165:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.080320564 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=76", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=76,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380663867 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (58 + 55) / 113][Stage 166:============================>                        (61 + 52) / 113][Stage 166:======================================>              (82 + 31) / 113][Stage 166:==============================================>     (101 + 12) / 113][Stage 166:====================================================>(112 + 1) / 113]                                                                                [Stage 167:===========================>                         (60 + 54) / 114][Stage 167:==============================>                      (65 + 49) / 114][Stage 167:====================================>                (78 + 36) / 114][Stage 167:==============================================>     (102 + 12) / 114]                                                                                Time elapsed: 2.982822856 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=77", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=77,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391387532 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:============================>                        (61 + 52) / 113][Stage 168:================================>                    (69 + 44) / 113][Stage 168:=======================================>             (85 + 28) / 113][Stage 168:==============================================>     (101 + 12) / 113][Stage 168:====================================================>(111 + 2) / 113]                                                                                [Stage 169:===========================>                         (59 + 55) / 114][Stage 169:===============================>                     (68 + 46) / 114][Stage 169:=======================================>             (85 + 29) / 114][Stage 169:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.114366038 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=66", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=66,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386483972 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:============================>                        (60 + 53) / 113][Stage 170:==================================>                  (74 + 39) / 113][Stage 170:==========================================>          (91 + 22) / 113][Stage 170:===================================================> (109 + 4) / 113]                                                                                [Stage 171:==============================>                      (65 + 49) / 114][Stage 171:====================================>                (78 + 36) / 114][Stage 171:=============================================>       (98 + 16) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.103626805 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=2", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=2,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501348739 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (59 + 54) / 113][Stage 172:================================>                    (70 + 43) / 113][Stage 172:==========================================>          (91 + 22) / 113][Stage 172:=================================================>   (106 + 7) / 113]                                                                                [Stage 173:===========================>                         (59 + 55) / 114][Stage 173:=============================>                       (64 + 50) / 114][Stage 173:=====================================>               (81 + 33) / 114][Stage 173:==============================================>      (99 + 15) / 114][Stage 173:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.246815792 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=33", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=33,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392921117 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (58 + 55) / 113][Stage 174:===============================>                     (67 + 46) / 113][Stage 174:=======================================>             (85 + 28) / 113][Stage 174:===================================================> (110 + 3) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:===========================>                         (59 + 55) / 114][Stage 175:================================>                    (70 + 44) / 114][Stage 175:========================================>            (88 + 26) / 114][Stage 175:===============================================>    (104 + 10) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.045947363 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=14", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=14,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383853635 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (59 + 54) / 113][Stage 176:=================================>                   (71 + 42) / 113][Stage 176:===========================================>         (93 + 20) / 113][Stage 176:===================================================> (109 + 4) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:===========================>                         (59 + 55) / 114][Stage 177:==============================>                      (66 + 48) / 114][Stage 177:====================================>                (79 + 35) / 114][Stage 177:==============================================>     (103 + 11) / 114][Stage 177:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.403988719 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=61", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=61,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386936918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:============================>                        (61 + 52) / 113][Stage 178:=================================>                   (72 + 41) / 113][Stage 178:=============================================>       (97 + 16) / 113][Stage 178:===================================================> (109 + 4) / 113]                                                                                [Stage 179:============================>                        (61 + 53) / 114][Stage 179:=================================>                   (71 + 43) / 114][Stage 179:============================================>        (96 + 18) / 114][Stage 179:===================================================> (111 + 3) / 114][Stage 179:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.165489174 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=74", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=74,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385110039 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (59 + 54) / 113][Stage 180:================================>                    (70 + 43) / 113][Stage 180:=======================================>             (84 + 29) / 113][Stage 180:===============================================>    (103 + 10) / 113]                                                                                [Stage 181:============================>                        (62 + 52) / 114][Stage 181:====================================>                (79 + 35) / 114][Stage 181:==============================================>     (102 + 12) / 114][Stage 181:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.061733922 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=64", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=64,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426582017 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (59 + 54) / 113][Stage 182:==============================>                      (66 + 47) / 113][Stage 182:==========================================>          (91 + 22) / 113][Stage 182:===================================================> (109 + 4) / 113]                                                                                [Stage 183:===========================>                         (60 + 54) / 114][Stage 183:=============================>                       (64 + 50) / 114][Stage 183:=====================================>               (81 + 33) / 114][Stage 183:==============================================>      (99 + 15) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.861459369 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=186", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=186,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40554031 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (58 + 55) / 113][Stage 184:===============================>                     (67 + 46) / 113][Stage 184:=====================================>               (81 + 32) / 113][Stage 184:==============================================>     (102 + 11) / 113][Stage 184:==================================================>  (107 + 6) / 113]                                                                                [Stage 185:===========================>                         (60 + 54) / 114][Stage 185:================================>                    (69 + 45) / 114][Stage 185:=======================================>             (85 + 29) / 114][Stage 185:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.056259542 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=165", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=165,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384519302 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (58 + 55) / 113][Stage 186:==============================>                      (66 + 47) / 113][Stage 186:=====================================>               (80 + 33) / 113][Stage 186:==============================================>      (99 + 14) / 113][Stage 186:====================================================>(111 + 2) / 113]                                                                                [Stage 187:=============================>                       (64 + 50) / 114][Stage 187:===================================>                 (76 + 38) / 114][Stage 187:==============================================>     (101 + 13) / 114][Stage 187:===================================================> (110 + 4) / 114][Stage 187:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.352054037 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=97", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=97,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395756789 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:=============================>                       (63 + 50) / 113][Stage 188:==================================>                  (74 + 39) / 113][Stage 188:===========================================>         (93 + 20) / 113][Stage 188:=================================================>   (106 + 7) / 113][Stage 188:===================================================> (110 + 3) / 113]                                                                                [Stage 189:===========================>                         (60 + 54) / 114][Stage 189:==================================>                  (75 + 39) / 114][Stage 189:============================================>        (96 + 18) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.210976429 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=128", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=128,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393025629 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:============================>                        (60 + 53) / 113][Stage 190:================================>                    (69 + 44) / 113][Stage 190:========================================>            (86 + 27) / 113][Stage 190:====================================================>(111 + 2) / 113]                                                                                [Stage 191:============================>                        (62 + 52) / 114][Stage 191:======================================>              (82 + 32) / 114][Stage 191:==============================================>      (99 + 15) / 114][Stage 191:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.869982613 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=171", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=171,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390316628 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (59 + 54) / 113][Stage 192:=============================>                       (62 + 51) / 113][Stage 192:=====================================>               (80 + 33) / 113][Stage 192:=============================================>       (97 + 16) / 113][Stage 192:===================================================> (110 + 3) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:===========================>                         (59 + 55) / 114][Stage 193:============================>                        (61 + 53) / 114][Stage 193:==================================>                  (75 + 39) / 114][Stage 193:=============================================>      (100 + 14) / 114][Stage 193:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.269076276 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=84", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=84,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397137572 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (59 + 54) / 113][Stage 194:==============================>                      (65 + 48) / 113][Stage 194:========================================>            (86 + 27) / 113][Stage 194:===============================================>    (103 + 10) / 113]                                                                                [Stage 195:============================>                        (61 + 53) / 114][Stage 195:====================================>                (78 + 36) / 114][Stage 195:==========================================>          (92 + 22) / 114][Stage 195:================================================>    (105 + 9) / 114][Stage 195:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.142168072 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=217", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=217,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381467687 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (58 + 55) / 113][Stage 196:===============================>                     (67 + 46) / 113][Stage 196:==========================================>          (90 + 23) / 113][Stage 196:================================================>    (104 + 9) / 113][Stage 196:====================================================>(111 + 2) / 113]                                                                                [Stage 197:============================>                        (61 + 53) / 114][Stage 197:====================================>                (79 + 35) / 114][Stage 197:============================================>        (96 + 18) / 114][Stage 197:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.222859118 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=101", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=101,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.52078169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (59 + 54) / 113][Stage 198:===============================>                     (67 + 46) / 113][Stage 198:====================================>                (77 + 36) / 113][Stage 198:==============================================>     (102 + 11) / 113][Stage 198:===================================================> (109 + 4) / 113]                                                                                [Stage 199:============================>                        (62 + 52) / 114][Stage 199:===================================>                 (77 + 37) / 114][Stage 199:===========================================>         (93 + 21) / 114][Stage 199:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.129186648 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=159", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=159,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38098383 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (58 + 55) / 113][Stage 200:================================>                    (69 + 44) / 113][Stage 200:=========================================>           (88 + 25) / 113][Stage 200:==================================================>  (107 + 6) / 113]                                                                                [Stage 201:===========================>                         (59 + 55) / 114][Stage 201:===============================>                     (68 + 46) / 114][Stage 201:==========================================>          (92 + 22) / 114][Stage 201:=================================================>   (106 + 8) / 114][Stage 201:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.240929649 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m0.348s
user	11m29.024s
sys	0m39.760s
