Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 19:27:38 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:27:52 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:27:52 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:27:53 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 19:27:55 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:28:06 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524192755-0585).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.429139644 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:>                                                      (0 + 115) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:=====================================>                 (78 + 37) / 115][Stage 0:============================================>          (92 + 23) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:=======================>                               (49 + 67) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:==================================>                    (72 + 44) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:========================================>              (86 + 30) / 116][Stage 1:==============================================>        (98 + 18) / 116][Stage 1:===============================================>      (102 + 14) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:====================================================>  (110 + 6) / 116]                                                                                Time elapsed: 12.782852331 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 70  OR  pa rtitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex =  86  OR  partitionIndex = 98 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.72775658 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=======================>                               (51 + 67) / 118][Stage 2:=============================>                         (63 + 55) / 118][Stage 2:=================================>                     (71 + 47) / 118][Stage 2:==================================>                    (73 + 45) / 118][Stage 2:=====================================>                 (81 + 37) / 118][Stage 2:=========================================>             (89 + 29) / 118][Stage 2:============================================>          (95 + 23) / 118][Stage 2:==============================================>       (101 + 17) / 118][Stage 2:================================================>     (107 + 11) / 118][Stage 2:======================================================>(117 + 1) / 118]                                                                                [Stage 3:=================================>                     (72 + 47) / 119][Stage 3:=================================>                     (73 + 46) / 119][Stage 3:===================================>                   (77 + 42) / 119][Stage 3:=========================================>             (89 + 30) / 119][Stage 3:===========================================>           (94 + 25) / 119][Stage 3:==============================================>       (102 + 17) / 119][Stage 3:===================================================>   (111 + 8) / 119][Stage 3:======================================================>(117 + 2) / 119][Stage 3:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.643324655 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR   partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIn dex = 235  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.702875472 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===============================>                       (65 + 50) / 115][Stage 4:=================================>                     (71 + 44) / 115][Stage 4:====================================>                  (76 + 39) / 115][Stage 4:========================================>              (84 + 31) / 115][Stage 4:============================================>          (94 + 21) / 115][Stage 4:===============================================>      (102 + 13) / 115][Stage 4:==================================================>    (106 + 9) / 115][Stage 4:=====================================================> (111 + 4) / 115]                                                                                [Stage 5:=============================>                         (63 + 53) / 116][Stage 5:===================================>                   (75 + 41) / 116][Stage 5:=====================================>                 (79 + 37) / 116][Stage 5:=========================================>             (88 + 28) / 116][Stage 5:=============================================>         (97 + 19) / 116][Stage 5:==============================================>       (100 + 16) / 116][Stage 5:===================================================>   (109 + 7) / 116][Stage 5:====================================================>  (111 + 5) / 116][Stage 5:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.856982702 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIn dex = 135  OR  partitionIndex = 136 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.590547407 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===============================>                       (68 + 50) / 118][Stage 6:=================================>                     (72 + 46) / 118][Stage 6:===================================>                   (77 + 41) / 118][Stage 6:====================================>                  (79 + 39) / 118][Stage 6:======================================>                (83 + 35) / 118][Stage 6:========================================>              (86 + 32) / 118][Stage 6:============================================>          (95 + 23) / 118][Stage 6:=====================================================> (114 + 4) / 118]                                                                                [Stage 7:=================================>                     (72 + 47) / 119][Stage 7:=================================>                     (73 + 46) / 119][Stage 7:==================================>                    (75 + 44) / 119][Stage 7:=====================================>                 (82 + 37) / 119][Stage 7:=======================================>               (86 + 33) / 119][Stage 7:==========================================>            (93 + 26) / 119][Stage 7:==============================================>       (102 + 17) / 119][Stage 7:===================================================>   (112 + 7) / 119][Stage 7:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.599641425 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR   partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIn dex = 195  OR  partitionIndex = 196 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.569346534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===================================>                   (73 + 40) / 113][Stage 8:=========================================>             (85 + 28) / 113][Stage 8:============================================>          (91 + 22) / 113][Stage 8:==============================================>        (95 + 18) / 113][Stage 8:===============================================>       (97 + 16) / 113][Stage 8:======================================================>(111 + 2) / 113]                                                                                [Stage 9:========================================>              (83 + 31) / 114][Stage 9:============================================>          (92 + 22) / 114][Stage 9:===============================================>       (99 + 15) / 114][Stage 9:=================================================>    (104 + 10) / 114][Stage 9:====================================================>  (108 + 6) / 114][Stage 9:=====================================================> (110 + 4) / 114][Stage 9:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.30901007 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR   partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIn dex = 137  OR  partitionIndex = 138 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.514772756 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=================================>                    (70 + 43) / 113][Stage 10:===================================>                  (74 + 39) / 113][Stage 10:=======================================>              (82 + 31) / 113][Stage 10:===========================================>          (92 + 21) / 113][Stage 10:==============================================>       (98 + 15) / 113][Stage 10:==================================================>   (106 + 7) / 113][Stage 10:=====================================================>(111 + 2) / 113]                                                                                [Stage 11:====================================>                 (78 + 36) / 114][Stage 11:============================================>         (93 + 21) / 114][Stage 11:==============================================>       (99 + 15) / 114][Stage 11:===============================================>     (103 + 11) / 114][Stage 11:================================================>    (104 + 10) / 114][Stage 11:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.966763755 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 6  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 33  OR  partitionIndex = 47   OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.631908378 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==========================>                           (59 + 62) / 121][Stage 12:==========================>                           (60 + 61) / 121][Stage 12:================================>                     (73 + 48) / 121][Stage 12:========================================>             (90 + 31) / 121][Stage 12:=============================================>       (105 + 16) / 121][Stage 12:================================================>    (111 + 10) / 121][Stage 12:=====================================================>(120 + 1) / 121]                                                                                [Stage 13:===========================>                          (61 + 61) / 122][Stage 13:=============================>                        (67 + 55) / 122][Stage 13:==================================>                   (79 + 43) / 122][Stage 13:========================================>             (92 + 30) / 122][Stage 13:==============================================>      (106 + 16) / 122][Stage 13:==================================================>   (113 + 9) / 122][Stage 13:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.48570646 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  pa rtitionIndex = 14  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 41  OR  partitionIndex =  55  OR  partitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469803889 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:======================================>               (81 + 34) / 115][Stage 14:=========================================>            (88 + 27) / 115][Stage 14:==============================================>      (100 + 15) / 115][Stage 14:====================================================> (111 + 4) / 115][Stage 14:=====================================================>(114 + 1) / 115]                                                                                [Stage 15:======================================>               (82 + 34) / 116][Stage 15:========================================>             (87 + 29) / 116][Stage 15:=========================================>            (90 + 26) / 116][Stage 15:=============================================>        (97 + 19) / 116][Stage 15:===============================================>     (104 + 12) / 116][Stage 15:===================================================>  (111 + 5) / 116][Stage 15:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 6.856906 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47   OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.578673888 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:==============================>                       (64 + 49) / 113][Stage 16:====================================>                 (77 + 36) / 113][Stage 16:==============================================>      (100 + 13) / 113][Stage 16:====================================================> (110 + 3) / 113]                                                                                [Stage 17:============================>                         (60 + 54) / 114][Stage 17:===============================>                      (67 + 47) / 114][Stage 17:======================================>               (81 + 33) / 114][Stage 17:=============================================>        (95 + 19) / 114][Stage 17:==============================================>      (100 + 14) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.090254312 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  pa rtitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex =  45  OR  partitionIndex = 46 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429205186 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:======================================>               (81 + 34) / 115][Stage 18:===========================================>          (92 + 23) / 115][Stage 18:================================================>    (105 + 10) / 115]                                                                                [Stage 19:=======================================>              (84 + 32) / 116][Stage 19:=========================================>            (90 + 26) / 116][Stage 19:===============================================>     (103 + 13) / 116][Stage 19:==================================================>   (109 + 7) / 116][Stage 19:===================================================>  (111 + 5) / 116][Stage 19:====================================================> (113 + 3) / 116][Stage 19:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.829620412 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR   partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIn dex = 165  OR  partitionIndex = 166 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.51296174 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:================================>                     (72 + 46) / 118][Stage 20:=================================>                    (73 + 45) / 118][Stage 20:=====================================>                (83 + 35) / 118][Stage 20:===========================================>          (96 + 22) / 118][Stage 20:=============================================>       (102 + 16) / 118][Stage 20:====================================================> (115 + 3) / 118]                                                                                [Stage 21:=================================>                    (73 + 46) / 119][Stage 21:===================================>                  (79 + 40) / 119][Stage 21:=======================================>              (88 + 31) / 119][Stage 21:============================================>         (97 + 22) / 119][Stage 21:===============================================>     (106 + 13) / 119][Stage 21:==================================================>   (112 + 7) / 119][Stage 21:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.203488854 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 215  OR   partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIn dex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.567128263 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (60 + 60) / 120][Stage 22:============================>                         (64 + 56) / 120][Stage 22:======================================>               (86 + 34) / 120][Stage 22:=============================================>       (102 + 18) / 120][Stage 22:====================================================> (116 + 4) / 120][Stage 22:=====================================================>(119 + 1) / 120]                                                                                [Stage 23:===========================>                          (61 + 60) / 121][Stage 23:=============================>                        (66 + 55) / 121][Stage 23:===================================>                  (80 + 41) / 121][Stage 23:=============================================>       (103 + 18) / 121][Stage 23:=================================================>    (112 + 9) / 121][Stage 23:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.968880919 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  pa rtitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex  = 107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.498722814 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==============================>                       (66 + 49) / 115][Stage 24:======================================>               (82 + 33) / 115][Stage 24:==============================================>      (100 + 15) / 115][Stage 24:=================================================>    (106 + 9) / 115][Stage 24:====================================================> (111 + 4) / 115][Stage 24:=====================================================>(113 + 2) / 115]                                                                                [Stage 25:======================================>               (82 + 34) / 116][Stage 25:==========================================>           (91 + 25) / 116][Stage 25:===============================================>     (104 + 12) / 116][Stage 25:==================================================>   (109 + 7) / 116][Stage 25:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.516800518 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  pa rtitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex =  83  OR  partitionIndex = 84 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 83  OR  partitionIndex = 84 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427820942 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:======================================>               (82 + 33) / 115][Stage 26:=========================================>            (89 + 26) / 115][Stage 26:==============================================>      (101 + 14) / 115][Stage 26:===============================================>     (103 + 12) / 115][Stage 26:==================================================>   (108 + 7) / 115][Stage 26:====================================================> (111 + 4) / 115][Stage 26:=====================================================>(113 + 2) / 115]                                                                                [Stage 27:========================================>             (86 + 30) / 116][Stage 27:==============================================>      (101 + 15) / 116][Stage 27:==================================================>   (108 + 8) / 116][Stage 27:===================================================>  (110 + 6) / 116][Stage 27:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.226432519 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR   partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIn dex = 195  OR  partitionIndex = 196 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.487926303 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:============================>                         (59 + 54) / 113][Stage 28:=============================>                        (61 + 52) / 113][Stage 28:==================================>                   (73 + 40) / 113][Stage 28:==========================================>           (89 + 24) / 113][Stage 28:==================================================>   (106 + 7) / 113]                                                                                [Stage 29:===========================>                          (59 + 55) / 114][Stage 29:==============================>                       (65 + 49) / 114][Stage 29:======================================>               (81 + 33) / 114][Stage 29:============================================>         (93 + 21) / 114][Stage 29:==================================================>   (107 + 7) / 114][Stage 29:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.917714114 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 211  OR   partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIn dex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.487571957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:============================>                         (59 + 54) / 113][Stage 30:=================================>                    (71 + 42) / 113][Stage 30:============================================>         (93 + 20) / 113][Stage 30:================================================>    (103 + 10) / 113][Stage 30:==================================================>   (106 + 7) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:===========================>                          (59 + 55) / 114][Stage 31:================================>                     (68 + 46) / 114][Stage 31:=======================================>              (83 + 31) / 114][Stage 31:==============================================>      (100 + 14) / 114][Stage 31:====================================================> (110 + 4) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.897802036 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  pa rtitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex =  42  OR  partitionIndex = 43 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46451877 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:================================>                     (72 + 46) / 118][Stage 32:=================================>                    (74 + 44) / 118][Stage 32:=====================================>                (81 + 37) / 118][Stage 32:===========================================>          (95 + 23) / 118][Stage 32:=================================================>    (109 + 9) / 118][Stage 32:====================================================> (114 + 4) / 118][Stage 32:=====================================================>(116 + 2) / 118]                                                                                [Stage 33:=================================>                    (73 + 46) / 119][Stage 33:==================================>                   (76 + 43) / 119][Stage 33:=======================================>              (86 + 33) / 119][Stage 33:============================================>        (101 + 18) / 119][Stage 33:================================================>    (109 + 10) / 119][Stage 33:====================================================> (116 + 3) / 119][Stage 33:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.312141312 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR   partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIn dex = 155  OR  partitionIndex = 169 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435089322 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=====================================>                (80 + 35) / 115][Stage 34:=======================================>              (85 + 30) / 115][Stage 34:============================================>         (95 + 20) / 115][Stage 34:==================================================>   (108 + 7) / 115][Stage 34:===================================================>  (109 + 6) / 115][Stage 34:=====================================================>(113 + 2) / 115]                                                                                [Stage 35:=======================================>              (85 + 31) / 116][Stage 35:==========================================>           (92 + 24) / 116][Stage 35:===============================================>     (103 + 13) / 116][Stage 35:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.268910889 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR   partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIn dex = 173  OR  partitionIndex = 174 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 173  OR  partitionIndex = 174 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449914824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:================================>                     (72 + 46) / 118][Stage 36:=================================>                    (73 + 45) / 118][Stage 36:========================================>             (89 + 29) / 118][Stage 36:===============================================>     (106 + 12) / 118][Stage 36:=====================================================>(117 + 1) / 118]                                                                                [Stage 37:==================================>                   (75 + 44) / 119][Stage 37:=======================================>              (87 + 32) / 119][Stage 37:=============================================>       (103 + 16) / 119][Stage 37:=================================================>    (110 + 9) / 119][Stage 37:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.657334658 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  pa rtitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex =  113  OR  partitionIndex = 114 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.538466679 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (60 + 60) / 120][Stage 38:==============================>                       (67 + 53) / 120][Stage 38:====================================>                 (81 + 39) / 120][Stage 38:============================================>         (98 + 22) / 120][Stage 38:==================================================>   (112 + 8) / 120]                                                                                [Stage 39:=============================>                        (65 + 56) / 121][Stage 39:===============================>                      (70 + 51) / 121][Stage 39:=======================================>              (88 + 33) / 121][Stage 39:==================================================>   (114 + 7) / 121][Stage 39:====================================================> (118 + 3) / 121][Stage 39:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.202746302 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR   partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIn dex = 203  OR  partitionIndex = 204 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 203  OR  partitionIndex = 204 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.48838555 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:====================================>                 (76 + 37) / 113][Stage 40:==========================================>           (88 + 25) / 113][Stage 40:===============================================>     (101 + 12) / 113][Stage 40:====================================================> (110 + 3) / 113]                                                                                [Stage 41:=====================================>                (79 + 35) / 114][Stage 41:==========================================>           (89 + 25) / 114][Stage 41:==============================================>       (99 + 15) / 114][Stage 41:===================================================>  (108 + 6) / 114][Stage 41:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.062160593 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIn dex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.470498294 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (58 + 55) / 113][Stage 42:=============================>                        (61 + 52) / 113][Stage 42:==================================>                   (73 + 40) / 113][Stage 42:==============================================>       (97 + 16) / 113][Stage 42:====================================================> (110 + 3) / 113]                                                                                [Stage 43:============================>                         (60 + 54) / 114][Stage 43:=============================>                        (62 + 52) / 114][Stage 43:===================================>                  (75 + 39) / 114][Stage 43:===========================================>          (92 + 22) / 114][Stage 43:=================================================>    (105 + 9) / 114][Stage 43:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.641440785 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  pa rtitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex =  29  OR  partitionIndex = 30 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.492752328 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (61 + 60) / 121][Stage 44:==============================>                       (68 + 53) / 121][Stage 44:=========================================>            (92 + 29) / 121][Stage 44:==================================================>   (114 + 7) / 121]                                                                                [Stage 45:===========================>                          (62 + 60) / 122][Stage 45:==============================>                       (70 + 52) / 122][Stage 45:=======================================>              (89 + 33) / 122][Stage 45:=============================================>       (105 + 17) / 122][Stage 45:====================================================> (118 + 4) / 122][Stage 45:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.769829505 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  pa rtitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex =  89  OR  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457203681 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:=================================>                    (72 + 43) / 115][Stage 46:========================================>             (86 + 29) / 115][Stage 46:==============================================>      (101 + 14) / 115][Stage 46:===================================================>  (109 + 6) / 115][Stage 46:====================================================> (112 + 3) / 115][Stage 46:=====================================================>(113 + 2) / 115]                                                                                [Stage 47:==================================>                   (74 + 42) / 116][Stage 47:========================================>             (86 + 30) / 116][Stage 47:==============================================>       (99 + 17) / 116][Stage 47:==================================================>   (108 + 8) / 116][Stage 47:===================================================>  (111 + 5) / 116][Stage 47:====================================================> (113 + 3) / 116][Stage 47:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.102928863 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  part itionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35   OR  partitionIndex = 49 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.470261404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==========================>                           (60 + 61) / 121][Stage 48:============================>                         (63 + 58) / 121][Stage 48:====================================>                 (81 + 40) / 121][Stage 48:===============================================>     (109 + 12) / 121][Stage 48:====================================================> (118 + 3) / 121]                                                                                [Stage 49:===========================>                          (61 + 61) / 122][Stage 49:=============================>                        (67 + 55) / 122][Stage 49:=====================================>                (84 + 38) / 122][Stage 49:==============================================>      (107 + 15) / 122][Stage 49:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.678349958 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR   partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIn dex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448467511 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===============================>                      (68 + 47) / 115][Stage 50:======================================>               (82 + 33) / 115][Stage 50:==============================================>       (98 + 17) / 115][Stage 50:====================================================> (111 + 4) / 115]                                                                                [Stage 51:=====================================>                (80 + 36) / 116][Stage 51:===========================================>          (94 + 22) / 116][Stage 51:===============================================>     (105 + 11) / 116][Stage 51:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.747129588 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIn dex = 120  OR  partitionIndex = 121 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378169191 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:======================================>               (82 + 33) / 115][Stage 52:==========================================>           (91 + 24) / 115][Stage 52:================================================>    (105 + 10) / 115][Stage 52:===================================================>  (109 + 6) / 115][Stage 52:=====================================================>(114 + 1) / 115]                                                                                [Stage 53:======================================>               (83 + 33) / 116][Stage 53:==========================================>           (91 + 25) / 116][Stage 53:===============================================>     (103 + 13) / 116][Stage 53:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.863651401 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR   partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIn dex = 188  OR  partitionIndex = 189 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449632659 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=================================>                    (72 + 43) / 115][Stage 54:=========================================>            (89 + 26) / 115][Stage 54:==================================================>   (107 + 8) / 115][Stage 54:====================================================> (112 + 3) / 115]                                                                                [Stage 55:===================================>                  (77 + 39) / 116][Stage 55:============================================>         (96 + 20) / 116][Stage 55:===================================================>  (111 + 5) / 116][Stage 55:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.824189087 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 154  OR   partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIn dex = 170  OR  partitionIndex = 171 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.463603392 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==========================>                           (60 + 61) / 121][Stage 56:===========================>                          (62 + 59) / 121][Stage 56:===============================>                      (70 + 51) / 121][Stage 56:========================================>             (91 + 30) / 121][Stage 56:====================================================> (117 + 4) / 121]                                                                                [Stage 57:===========================>                          (61 + 61) / 122][Stage 57:================================>                     (74 + 48) / 122][Stage 57:==========================================>           (97 + 25) / 122][Stage 57:===================================================>  (116 + 6) / 122][Stage 57:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.570757373 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  pa rtitionIndex = 79  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 106  OR  partitionIndex =  107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407159984 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:================================>                     (72 + 46) / 118][Stage 58:=================================>                    (73 + 45) / 118][Stage 58:=====================================>                (82 + 36) / 118][Stage 58:========================================>             (89 + 29) / 118][Stage 58:================================================>    (108 + 10) / 118][Stage 58:=====================================================>(116 + 2) / 118]                                                                                [Stage 59:=================================>                    (73 + 46) / 119][Stage 59:=================================>                    (74 + 45) / 119][Stage 59:====================================>                 (80 + 39) / 119][Stage 59:========================================>             (89 + 30) / 119][Stage 59:================================================>    (108 + 11) / 119][Stage 59:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 4.171446839 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIn dex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458053992 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:>                                                       (0 + 0) / 121][Stage 60:==========================>                           (60 + 61) / 121][Stage 60:=============================>                        (66 + 55) / 121][Stage 60:=====================================>                (84 + 37) / 121][Stage 60:==============================================>      (106 + 15) / 121][Stage 60:=====================================================>(120 + 1) / 121]                                                                                [Stage 61:=============================>                        (67 + 55) / 122][Stage 61:=================================>                    (76 + 46) / 122][Stage 61:=======================================>              (90 + 32) / 122][Stage 61:==============================================>      (107 + 15) / 122][Stage 61:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.222815969 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155  OR   partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIn dex = 171  OR  partitionIndex = 172 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440820384 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (60 + 60) / 120][Stage 62:==============================>                       (67 + 53) / 120][Stage 62:=========================================>            (92 + 28) / 120][Stage 62:====================================================> (116 + 4) / 120]                                                                                [Stage 63:===========================>                          (62 + 59) / 121][Stage 63:================================>                     (73 + 48) / 121][Stage 63:=========================================>            (94 + 27) / 121][Stage 63:================================================>    (111 + 10) / 121][Stage 63:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.752602159 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 159  OR   partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIn dex = 175  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43339885 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===================================>                  (75 + 40) / 115][Stage 64:========================================>             (87 + 28) / 115][Stage 64:==================================================>   (107 + 8) / 115][Stage 64:=====================================================>(114 + 1) / 115]                                                                                [Stage 65:==================================>                   (74 + 42) / 116][Stage 65:=======================================>              (84 + 32) / 116][Stage 65:==============================================>       (99 + 17) / 116][Stage 65:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.76128524 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  pa rtitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex =  49  OR  partitionIndex = 50 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400111688 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==================================>                   (73 + 40) / 113][Stage 66:=======================================>              (83 + 30) / 113][Stage 66:===========================================>          (90 + 23) / 113][Stage 66:==============================================>      (100 + 13) / 113][Stage 66:====================================================> (109 + 4) / 113]                                                                                [Stage 67:===================================>                  (74 + 40) / 114][Stage 67:=======================================>              (84 + 30) / 114][Stage 67:============================================>         (93 + 21) / 114][Stage 67:==============================================>      (100 + 14) / 114][Stage 67:=================================================>    (105 + 9) / 114][Stage 67:==================================================>   (106 + 8) / 114][Stage 67:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.497840411 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 122  OR   partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIn dex = 138  OR  partitionIndex = 150 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479312665 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:================================>                     (72 + 46) / 118][Stage 68:==================================>                   (76 + 42) / 118][Stage 68:========================================>             (89 + 29) / 118][Stage 68:===============================================>     (106 + 12) / 118][Stage 68:====================================================> (115 + 3) / 118]                                                                                [Stage 69:==================================>                   (76 + 43) / 119][Stage 69:=======================================>              (87 + 32) / 119][Stage 69:============================================>         (97 + 22) / 119][Stage 69:================================================>    (109 + 10) / 119]                                                                                Time elapsed: 4.325215384 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR   partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIn dex = 135  OR  partitionIndex = 136 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431620085 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:================================>                     (70 + 45) / 115][Stage 70:========================================>             (86 + 29) / 115][Stage 70:==============================================>      (100 + 15) / 115][Stage 70:====================================================> (112 + 3) / 115][Stage 70:=====================================================>(114 + 1) / 115]                                                                                [Stage 71:==============================>                       (65 + 51) / 116][Stage 71:=====================================>                (80 + 36) / 116][Stage 71:=============================================>        (97 + 19) / 116][Stage 71:=================================================>    (107 + 9) / 116][Stage 71:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.225427583 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIn dex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397333993 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:=================================>                    (73 + 45) / 118][Stage 72:===================================>                  (77 + 41) / 118][Stage 72:=========================================>            (90 + 28) / 118][Stage 72:===============================================>     (105 + 13) / 118][Stage 72:====================================================> (114 + 4) / 118]                                                                                [Stage 73:==================================>                   (75 + 44) / 119][Stage 73:=====================================>                (83 + 36) / 119][Stage 73:===========================================>          (95 + 24) / 119][Stage 73:===============================================>     (107 + 12) / 119][Stage 73:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.829705985 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR   partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIn dex = 154  OR  partitionIndex = 155 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396940288 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:================================>                     (72 + 46) / 118][Stage 74:==================================>                   (76 + 42) / 118][Stage 74:=====================================>                (83 + 35) / 118][Stage 74:==========================================>           (93 + 25) / 118][Stage 74:================================================>    (107 + 11) / 118][Stage 74:=====================================================>(117 + 1) / 118]                                                                                [Stage 75:=================================>                    (73 + 46) / 119][Stage 75:====================================>                 (80 + 39) / 119][Stage 75:=========================================>            (91 + 28) / 119][Stage 75:================================================>    (109 + 10) / 119][Stage 75:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.950567424 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  pa rtitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex =  105  OR  partitionIndex = 106 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.51848415 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (60 + 60) / 120][Stage 76:===============================>                      (70 + 50) / 120][Stage 76:=====================================>                (83 + 37) / 120][Stage 76:=============================================>       (103 + 17) / 120][Stage 76:=====================================================>(118 + 2) / 120]                                                                                [Stage 77:===========================>                          (61 + 60) / 121][Stage 77:=============================>                        (67 + 54) / 121][Stage 77:===================================>                  (79 + 42) / 121][Stage 77:============================================>        (101 + 20) / 121][Stage 77:===================================================>  (115 + 6) / 121][Stage 77:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.093885833 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 47   OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409485883 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===============================>                      (67 + 48) / 115][Stage 78:=====================================>                (79 + 36) / 115][Stage 78:==========================================>           (91 + 24) / 115][Stage 78:==================================================>   (108 + 7) / 115][Stage 78:=====================================================>(114 + 1) / 115]                                                                                [Stage 79:====================================>                 (78 + 38) / 116][Stage 79:========================================>             (87 + 29) / 116][Stage 79:===============================================>     (103 + 13) / 116][Stage 79:===================================================>  (111 + 5) / 116][Stage 79:====================================================> (113 + 3) / 116][Stage 79:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.786741454 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  pa rtitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex =  109  OR  partitionIndex = 110 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369721699 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===================================>                  (74 + 39) / 113][Stage 80:========================================>             (85 + 28) / 113][Stage 80:=============================================>        (95 + 18) / 113][Stage 80:==================================================>   (106 + 7) / 113]                                                                                [Stage 81:======================================>               (81 + 33) / 114][Stage 81:===========================================>          (92 + 22) / 114][Stage 81:==============================================>      (100 + 14) / 114][Stage 81:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 2.890783726 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  pa rtitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex =  105  OR  partitionIndex = 106 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.528069473 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:>                                                       (0 + 0) / 120][Stage 82:===========================>                          (60 + 60) / 120][Stage 82:==============================>                       (68 + 52) / 120][Stage 82:=====================================>                (83 + 37) / 120][Stage 82:===============================================>     (107 + 13) / 120][Stage 82:=====================================================>(118 + 2) / 120][Stage 82:=====================================================>(119 + 1) / 120]                                                                                [Stage 83:===========================>                          (61 + 60) / 121][Stage 83:=============================>                        (65 + 56) / 121][Stage 83:==================================>                   (78 + 43) / 121][Stage 83:==========================================>           (96 + 25) / 121][Stage 83:===================================================>  (116 + 5) / 121][Stage 83:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.535395002 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  part itionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49   OR  partitionIndex = 50 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429413766 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==========================>                           (60 + 61) / 121][Stage 84:================================>                     (73 + 48) / 121][Stage 84:========================================>             (90 + 31) / 121][Stage 84:==================================================>   (113 + 8) / 121]                                                                                [Stage 85:===========================>                          (63 + 59) / 122][Stage 85:================================>                     (73 + 49) / 122][Stage 85:===========================================>          (99 + 23) / 122][Stage 85:================================================>    (112 + 10) / 122][Stage 85:====================================================> (119 + 3) / 122][Stage 85:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.756095387 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIn dex = 175  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432992478 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (61 + 59) / 120][Stage 86:===============================>                      (69 + 51) / 120][Stage 86:=======================================>              (87 + 33) / 120][Stage 86:=================================================>    (111 + 9) / 120]                                                                                [Stage 87:===========================>                          (61 + 60) / 121][Stage 87:==============================>                       (69 + 52) / 121][Stage 87:===========================================>          (97 + 24) / 121][Stage 87:===================================================>  (115 + 6) / 121][Stage 87:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.732648684 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 130  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 217  OR  partitionIn dex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393746981 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:================================>                     (72 + 46) / 118][Stage 88:====================================>                 (79 + 39) / 118][Stage 88:==========================================>           (92 + 26) / 118][Stage 88:===============================================>     (105 + 13) / 118]                                                                                [Stage 89:=================================>                    (74 + 45) / 119][Stage 89:=====================================>                (83 + 36) / 119][Stage 89:==========================================>           (93 + 26) / 119][Stage 89:===============================================>     (106 + 13) / 119][Stage 89:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.422408242 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  pa rtitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex =  81  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372446636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:==================================>                   (72 + 41) / 113][Stage 90:======================================>               (81 + 32) / 113][Stage 90:===========================================>          (91 + 22) / 113][Stage 90:==============================================>      (100 + 13) / 113][Stage 90:====================================================> (110 + 3) / 113]                                                                                [Stage 91:======================================>               (81 + 33) / 114][Stage 91:===========================================>          (92 + 22) / 114][Stage 91:==============================================>      (101 + 13) / 114][Stage 91:==================================================>   (107 + 7) / 114][Stage 91:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.293309873 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  pa rtitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex =  103  OR  partitionIndex = 117 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351991459 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:=====================================>                (80 + 35) / 115][Stage 92:========================================>             (86 + 29) / 115][Stage 92:===============================================>     (103 + 12) / 115][Stage 92:====================================================> (111 + 4) / 115]                                                                                [Stage 93:=======================================>              (85 + 31) / 116][Stage 93:============================================>         (95 + 21) / 116][Stage 93:==============================================>      (102 + 14) / 116][Stage 93:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.748840746 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR   partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIn dex = 233  OR  partitionIndex = 234 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 233  OR  partitionIndex = 234 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39108145 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:=================================>                    (73 + 45) / 118][Stage 94:======================================>               (84 + 34) / 118][Stage 94:===========================================>          (94 + 24) / 118][Stage 94:===============================================>     (106 + 12) / 118][Stage 94:===================================================>  (112 + 6) / 118]                                                                                [Stage 95:==================================>                   (75 + 44) / 119][Stage 95:====================================>                 (80 + 39) / 119][Stage 95:==========================================>           (93 + 26) / 119][Stage 95:============================================>        (100 + 19) / 119][Stage 95:====================================================> (115 + 4) / 119][Stage 95:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.974674142 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  part itionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30   OR  partitionIndex = 31 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351294268 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=======================================>              (85 + 30) / 115][Stage 96:=========================================>            (89 + 26) / 115][Stage 96:==================================================>   (107 + 8) / 115][Stage 96:====================================================> (112 + 3) / 115]                                                                                [Stage 97:========================================>             (87 + 29) / 116][Stage 97:=============================================>        (97 + 19) / 116][Stage 97:================================================>    (106 + 10) / 116][Stage 97:===================================================>  (110 + 6) / 116][Stage 97:===================================================>  (111 + 5) / 116][Stage 97:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 7.320208935 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 62  OR  pa rtitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex =  78  OR  partitionIndex = 90 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405513763 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:============================>                         (59 + 54) / 113][Stage 98:=============================>                        (62 + 51) / 113][Stage 98:=======================================>              (82 + 31) / 113][Stage 98:===============================================>      (99 + 14) / 113][Stage 98:====================================================> (109 + 4) / 113]                                                                                [Stage 99:============================>                         (61 + 53) / 114][Stage 99:==================================>                   (73 + 41) / 114][Stage 99:===========================================>          (91 + 23) / 114][Stage 99:==================================================>   (106 + 8) / 114][Stage 99:===================================================>  (109 + 5) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.909109684 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  pa rtitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex =  51  OR  partitionIndex = 52 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex = 52 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381522152 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==============================>                      (66 + 49) / 115][Stage 100:===================================>                 (78 + 37) / 115][Stage 100:========================================>            (88 + 27) / 115][Stage 100:===============================================>    (105 + 10) / 115]                                                                                [Stage 101:===============================>                     (70 + 46) / 116][Stage 101:======================================>              (85 + 31) / 116][Stage 101:===========================================>         (96 + 20) / 116][Stage 101:==============================================>     (104 + 12) / 116][Stage 101:==================================================>  (111 + 5) / 116][Stage 101:===================================================> (113 + 3) / 116][Stage 101:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.538666287 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR   partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIn dex = 233  OR  partitionIndex = 234 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.527018272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 61) / 121][Stage 102:==========================>                          (61 + 60) / 121][Stage 102:===============================>                     (73 + 48) / 121][Stage 102:========================================>            (93 + 28) / 121][Stage 102:=================================================>   (113 + 8) / 121]                                                                                [Stage 103:===========================>                         (63 + 59) / 122][Stage 103:=================================>                   (77 + 45) / 122][Stage 103:==========================================>          (97 + 25) / 122][Stage 103:==================================================>  (116 + 6) / 122][Stage 103:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.509061431 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIn dex = 149  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403827218 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==================================>                  (74 + 41) / 115][Stage 104:=====================================>               (81 + 34) / 115][Stage 104:================================================>    (106 + 9) / 115][Stage 104:===================================================> (112 + 3) / 115]                                                                                [Stage 105:===================================>                 (77 + 39) / 116][Stage 105:========================================>            (89 + 27) / 116][Stage 105:==============================================>     (104 + 12) / 116]                                                                                Time elapsed: 2.718281591 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR   partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIn dex = 181  OR  partitionIndex = 195 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424117389 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:===========================>                         (63 + 58) / 121][Stage 106:==================================>                  (78 + 43) / 121][Stage 106:=========================================>           (95 + 26) / 121][Stage 106:===================================================> (118 + 3) / 121]                                                                                [Stage 107:===========================>                         (64 + 58) / 122][Stage 107:===============================>                     (72 + 50) / 122][Stage 107:========================================>            (93 + 29) / 122][Stage 107:==============================================>     (109 + 13) / 122][Stage 107:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 6.507086218 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  pa rtitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex  = 113  OR  partitionIndex = 114 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419651364 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (59 + 54) / 113][Stage 108:=================================>                   (71 + 42) / 113][Stage 108:=====================================>               (81 + 32) / 113][Stage 108:=============================================>       (97 + 16) / 113][Stage 108:===================================================> (110 + 3) / 113]                                                                                [Stage 109:===========================>                         (60 + 54) / 114][Stage 109:================================>                    (70 + 44) / 114][Stage 109:=======================================>             (85 + 29) / 114][Stage 109:================================================>    (105 + 9) / 114][Stage 109:===================================================> (110 + 4) / 114][Stage 109:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.579722624 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  pa rtitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex =  107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364785581 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=================================>                   (72 + 41) / 113][Stage 110:======================================>              (82 + 31) / 113][Stage 110:=============================================>       (97 + 16) / 113][Stage 110:=================================================>   (105 + 8) / 113][Stage 110:==================================================>  (108 + 5) / 113]                                                                                [Stage 111:=======================================>             (84 + 30) / 114][Stage 111:===========================================>         (93 + 21) / 114][Stage 111:==============================================>     (103 + 11) / 114]                                                                                Time elapsed: 2.911144112 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 10  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 97  OR  partitionIndex = 11 1  OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365567667 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:================================>                    (72 + 46) / 118][Stage 112:================================>                    (73 + 45) / 118][Stage 112:=====================================>               (84 + 34) / 118][Stage 112:============================================>       (101 + 17) / 118][Stage 112:=================================================>   (110 + 8) / 118]                                                                                [Stage 113:================================>                    (73 + 46) / 119][Stage 113:==================================>                  (77 + 42) / 119][Stage 113:=========================================>           (94 + 25) / 119][Stage 113:================================================>    (110 + 9) / 119][Stage 113:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.645696824 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 25   OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377966162 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===============================>                     (69 + 46) / 115][Stage 114:======================================>              (84 + 31) / 115][Stage 114:=============================================>       (99 + 16) / 115][Stage 114:=================================================>   (108 + 7) / 115]                                                                                [Stage 115:===============================>                     (70 + 46) / 116][Stage 115:====================================>                (79 + 37) / 116][Stage 115:=============================================>       (99 + 17) / 116][Stage 115:==============================================>     (104 + 12) / 116][Stage 115:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 5.399508881 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 182  OR   partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIn dex = 198  OR  partitionIndex = 210 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339880198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:======================================>              (84 + 31) / 115][Stage 116:==========================================>          (92 + 23) / 115][Stage 116:===============================================>    (105 + 10) / 115][Stage 116:====================================================>(113 + 2) / 115][Stage 116:====================================================>(114 + 1) / 115]                                                                                [Stage 117:=====================================>               (83 + 33) / 116][Stage 117:=========================================>           (90 + 26) / 116][Stage 117:============================================>       (100 + 16) / 116][Stage 117:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.875193165 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  pa rtitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex =  55  OR  partitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 55  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354612377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==================================>                  (73 + 40) / 113][Stage 118:=======================================>             (84 + 29) / 113][Stage 118:==========================================>          (91 + 22) / 113][Stage 118:=============================================>       (98 + 15) / 113][Stage 118:=================================================>   (105 + 8) / 113]                                                                                [Stage 119:===================================>                 (77 + 37) / 114][Stage 119:========================================>            (87 + 27) / 114][Stage 119:============================================>        (96 + 18) / 114][Stage 119:==============================================>      (99 + 15) / 114][Stage 119:==============================================>     (102 + 12) / 114][Stage 119:===================================================> (111 + 3) / 114][Stage 119:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 6.739177034 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 130  OR   partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIn dex = 146  OR  partitionIndex = 158 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411488512 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 60) / 120][Stage 120:===============================>                     (72 + 48) / 120][Stage 120:========================================>            (91 + 29) / 120][Stage 120:==============================================>     (107 + 13) / 120]                                                                                [Stage 121:===========================>                         (63 + 58) / 121][Stage 121:===============================>                     (73 + 48) / 121][Stage 121:======================================>              (88 + 33) / 121][Stage 121:=============================================>      (105 + 16) / 121][Stage 121:===================================================> (118 + 3) / 121][Stage 121:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.082694588 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  par titionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 4 5  OR  partitionIndex = 46 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 45  OR  partitionIndex = 46 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356288488 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=================================>                   (72 + 41) / 113][Stage 122:======================================>              (83 + 30) / 113][Stage 122:==========================================>          (90 + 23) / 113][Stage 122:==============================================>     (102 + 11) / 113][Stage 122:===================================================> (110 + 3) / 113]                                                                                [Stage 123:===================================>                 (76 + 38) / 114][Stage 123:=====================================>               (81 + 33) / 114][Stage 123:=========================================>           (89 + 25) / 114][Stage 123:=============================================>       (98 + 16) / 114][Stage 123:===============================================>    (104 + 10) / 114][Stage 123:===================================================> (110 + 4) / 114][Stage 123:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 7.795604325 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 186  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 213  OR  partitionIn dex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406900843 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 60) / 120][Stage 124:================================>                    (74 + 46) / 120][Stage 124:=========================================>           (95 + 25) / 120][Stage 124:=================================================>   (113 + 7) / 120]                                                                                [Stage 125:===========================>                         (62 + 59) / 121][Stage 125:==============================>                      (69 + 52) / 121][Stage 125:======================================>              (87 + 34) / 121][Stage 125:===========================================>        (101 + 20) / 121][Stage 125:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.879197287 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR   partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIn dex = 167  OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39622906 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (58 + 55) / 113][Stage 126:=============================>                       (62 + 51) / 113][Stage 126:======================================>              (83 + 30) / 113][Stage 126:===============================================>    (103 + 10) / 113][Stage 126:===================================================> (109 + 4) / 113]                                                                                [Stage 127:===========================>                         (60 + 54) / 114][Stage 127:=================================>                   (73 + 41) / 114][Stage 127:========================================>            (87 + 27) / 114][Stage 127:==============================================>     (102 + 12) / 114][Stage 127:===================================================> (110 + 4) / 114][Stage 127:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.778257716 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  pa rtitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex =  69  OR  partitionIndex = 83 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357591994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=====================================>               (82 + 33) / 115][Stage 128:==========================================>          (93 + 22) / 115][Stage 128:===============================================>    (104 + 11) / 115][Stage 128:=================================================>   (108 + 7) / 115][Stage 128:====================================================>(113 + 2) / 115]                                                                                [Stage 129:=====================================>               (82 + 34) / 116][Stage 129:=======================================>             (87 + 29) / 116][Stage 129:============================================>       (100 + 16) / 116][Stage 129:===============================================>    (105 + 11) / 116][Stage 129:====================================================>(114 + 2) / 116][Stage 129:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.479178147 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  pa rtitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex =  50  OR  partitionIndex = 51 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416059643 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (63 + 57) / 120][Stage 130:==================================>                  (79 + 41) / 120][Stage 130:==========================================>          (97 + 23) / 120][Stage 130:===================================================> (116 + 4) / 120]                                                                                [Stage 131:============================>                        (64 + 57) / 121][Stage 131:=============================>                       (68 + 53) / 121][Stage 131:========================================>            (93 + 28) / 121][Stage 131:===============================================>    (111 + 10) / 121][Stage 131:====================================================>(119 + 2) / 121][Stage 131:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.802258864 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIn dex = 149  OR  partitionIndex = 150 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 150 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361597307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:>                                                      (0 + 0) / 113][Stage 132:====================================>                (77 + 36) / 113][Stage 132:========================================>            (86 + 27) / 113][Stage 132:=============================================>       (97 + 16) / 113][Stage 132:==================================================>  (108 + 5) / 113][Stage 132:====================================================>(112 + 1) / 113]                                                                                [Stage 133:====================================>                (78 + 36) / 114][Stage 133:=========================================>           (89 + 25) / 114][Stage 133:==============================================>      (99 + 15) / 114][Stage 133:===================================================> (110 + 4) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.978073616 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125  OR  partitionIndex = 126  OR   partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIn dex = 142  OR  partitionIndex = 154 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37590222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=============================>                       (64 + 51) / 115][Stage 134:===================================>                 (76 + 39) / 115][Stage 134:=========================================>           (91 + 24) / 115][Stage 134:=================================================>   (108 + 7) / 115][Stage 134:====================================================>(114 + 1) / 115]                                                                                [Stage 135:================================>                    (72 + 44) / 116][Stage 135:=====================================>               (82 + 34) / 116][Stage 135:============================================>       (100 + 16) / 116][Stage 135:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.796447953 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  part itionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34   OR  partitionIndex = 35 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397565283 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 60) / 120][Stage 136:==============================>                      (70 + 50) / 120][Stage 136:=======================================>             (89 + 31) / 120][Stage 136:============================================>       (102 + 18) / 120][Stage 136:====================================================>(118 + 2) / 120]                                                                                [Stage 137:===========================>                         (62 + 59) / 121][Stage 137:============================>                        (66 + 55) / 121][Stage 137:====================================>                (84 + 37) / 121][Stage 137:=============================================>      (107 + 14) / 121]                                                                                Time elapsed: 3.633260337 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 11 1  OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348308237 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:====================================>                (80 + 35) / 115][Stage 138:========================================>            (88 + 27) / 115][Stage 138:==============================================>     (103 + 12) / 115][Stage 138:====================================================>(113 + 2) / 115][Stage 138:====================================================>(114 + 1) / 115]                                                                                [Stage 139:=====================================>               (83 + 33) / 116][Stage 139:========================================>            (88 + 28) / 116][Stage 139:============================================>       (100 + 16) / 116][Stage 139:==================================================>  (110 + 6) / 116][Stage 139:===================================================> (112 + 4) / 116][Stage 139:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.799988033 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 156  OR   partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIn dex = 172  OR  partitionIndex = 180 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371567974 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:================================>                    (72 + 46) / 118][Stage 140:==================================>                  (76 + 42) / 118][Stage 140:======================================>              (86 + 32) / 118][Stage 140:============================================>       (100 + 18) / 118][Stage 140:===================================================> (115 + 3) / 118]                                                                                [Stage 141:================================>                    (73 + 46) / 119][Stage 141:==================================>                  (77 + 42) / 119][Stage 141:====================================>                (83 + 36) / 119][Stage 141:=========================================>           (93 + 26) / 119][Stage 141:===============================================>    (108 + 11) / 119][Stage 141:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.741500376 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR   partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIn dex = 175  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386958057 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:============================>                        (61 + 52) / 113][Stage 142:===============================>                     (68 + 45) / 113][Stage 142:=======================================>             (85 + 28) / 113][Stage 142:=================================================>   (106 + 7) / 113][Stage 142:===================================================> (109 + 4) / 113]                                                                                [Stage 143:===========================>                         (60 + 54) / 114][Stage 143:==============================>                      (66 + 48) / 114][Stage 143:====================================>                (79 + 35) / 114][Stage 143:============================================>        (95 + 19) / 114][Stage 143:====================================================>(112 + 2) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.792029213 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  pa rtitionIndex = 87  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 114  OR  partitionIndex  = 115  OR  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 114  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356829432 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==================================>                  (74 + 39) / 113][Stage 144:======================================>              (83 + 30) / 113][Stage 144:===========================================>         (93 + 20) / 113][Stage 144:==============================================>     (102 + 11) / 113][Stage 144:===================================================> (109 + 4) / 113]                                                                                [Stage 145:=====================================>               (81 + 33) / 114][Stage 145:===========================================>         (93 + 21) / 114][Stage 145:==============================================>      (99 + 15) / 114][Stage 145:===================================================> (110 + 4) / 114][Stage 145:===================================================> (111 + 3) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.277786246 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  pa rtitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex =  75  OR  partitionIndex = 76 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373337605 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:================================>                    (72 + 46) / 118][Stage 146:=================================>                   (75 + 43) / 118][Stage 146:======================================>              (85 + 33) / 118][Stage 146:==========================================>          (95 + 23) / 118][Stage 146:==============================================>     (106 + 12) / 118]                                                                                [Stage 147:================================>                    (73 + 46) / 119][Stage 147:====================================>                (81 + 38) / 119][Stage 147:=========================================>           (93 + 26) / 119][Stage 147:=============================================>      (103 + 16) / 119][Stage 147:==================================================>  (114 + 5) / 119][Stage 147:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.79748319 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR   partitionIndex = 207  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 234  OR  partitionIn dex = 235  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.508938156 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (63 + 58) / 121][Stage 148:===============================>                     (73 + 48) / 121][Stage 148:===========================================>        (101 + 20) / 121][Stage 148:===================================================> (117 + 4) / 121]                                                                                [Stage 149:===========================>                         (63 + 59) / 122][Stage 149:===============================>                     (73 + 49) / 122][Stage 149:=======================================>             (91 + 31) / 122][Stage 149:=================================================>   (113 + 9) / 122]                                                                                Time elapsed: 3.635267528 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR   partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIn dex = 169  OR  partitionIndex = 170 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370334733 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:================================>                    (73 + 45) / 118][Stage 150:===================================>                 (80 + 38) / 118][Stage 150:=======================================>             (87 + 31) / 118][Stage 150:============================================>       (101 + 17) / 118][Stage 150:===================================================> (115 + 3) / 118]                                                                                [Stage 151:================================>                    (73 + 46) / 119][Stage 151:==================================>                  (78 + 41) / 119][Stage 151:======================================>              (86 + 33) / 119][Stage 151:==========================================>          (96 + 23) / 119][Stage 151:=================================================>   (111 + 8) / 119][Stage 151:====================================================>(117 + 2) / 119][Stage 151:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.169063877 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIn dex = 145  OR  partitionIndex = 146 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 146 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340715114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:======================================>              (83 + 32) / 115][Stage 152:============================================>        (96 + 19) / 115][Stage 152:===============================================>    (105 + 10) / 115][Stage 152:====================================================>(113 + 2) / 115]                                                                                [Stage 153:=====================================>               (82 + 34) / 116][Stage 153:=========================================>           (91 + 25) / 116][Stage 153:==============================================>     (104 + 12) / 116][Stage 153:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.773425396 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51  OR  pa rtitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex =  75  OR  partitionIndex = 76 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 75  OR  partitionIndex = 76 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422207056 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 61) / 121][Stage 154:============================>                        (64 + 57) / 121][Stage 154:====================================>                (84 + 37) / 121][Stage 154:==========================================>          (98 + 23) / 121][Stage 154:===================================================> (117 + 4) / 121][Stage 154:====================================================>(120 + 1) / 121]                                                                                [Stage 155:==========================>                          (61 + 61) / 122][Stage 155:=============================>                       (67 + 55) / 122][Stage 155:=====================================>               (87 + 35) / 122][Stage 155:============================================>       (104 + 18) / 122][Stage 155:=================================================>   (114 + 8) / 122][Stage 155:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.041180761 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  pa rtitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex =  90  OR  partitionIndex = 91 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399824064 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==========================>                          (60 + 61) / 121][Stage 156:============================>                        (66 + 55) / 121][Stage 156:====================================>                (83 + 38) / 121][Stage 156:=============================================>      (105 + 16) / 121][Stage 156:===================================================> (117 + 4) / 121]                                                                                [Stage 157:==========================>                          (61 + 61) / 122][Stage 157:===========================>                         (63 + 59) / 122][Stage 157:==================================>                  (79 + 43) / 122][Stage 157:=========================================>           (96 + 26) / 122][Stage 157:===============================================>    (111 + 11) / 122][Stage 157:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.175841961 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR   partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIn dex = 230  OR  partitionIndex = 231 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 231 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373073972 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==================================>                  (74 + 41) / 115][Stage 158:======================================>              (84 + 31) / 115][Stage 158:==================================================>  (109 + 6) / 115][Stage 158:====================================================>(114 + 1) / 115]                                                                                [Stage 159:================================>                    (72 + 44) / 116][Stage 159:======================================>              (85 + 31) / 116][Stage 159:============================================>        (97 + 19) / 116][Stage 159:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.695606467 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIn dex = 211  OR  partitionIndex = 225 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395773363 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (62 + 59) / 121][Stage 160:===============================>                     (71 + 50) / 121][Stage 160:======================================>              (89 + 32) / 121][Stage 160:=================================================>   (113 + 8) / 121][Stage 160:====================================================>(120 + 1) / 121]                                                                                [Stage 161:==========================>                          (61 + 61) / 122][Stage 161:============================>                        (65 + 57) / 122][Stage 161:=================================>                   (77 + 45) / 122][Stage 161:=========================================>           (96 + 26) / 122][Stage 161:===================================================> (118 + 4) / 122][Stage 161:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.77816808 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  pa rtitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex =  75  OR  partitionIndex = 76 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361084196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:======================================>              (83 + 30) / 113][Stage 162:==========================================>          (91 + 22) / 113][Stage 162:==============================================>     (102 + 11) / 113][Stage 162:====================================================>(111 + 2) / 113][Stage 162:====================================================>(112 + 1) / 113]                                                                                [Stage 163:====================================>                (78 + 36) / 114][Stage 163:=========================================>           (89 + 25) / 114][Stage 163:=============================================>      (100 + 14) / 114][Stage 163:================================================>    (105 + 9) / 114][Stage 163:==================================================>  (108 + 6) / 114][Stage 163:====================================================>(112 + 2) / 114][Stage 163:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.19541801 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR   partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIn dex = 174  OR  partitionIndex = 175 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398327322 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 61) / 121][Stage 164:===========================>                         (62 + 59) / 121][Stage 164:=================================>                   (77 + 44) / 121][Stage 164:==========================================>          (98 + 23) / 121][Stage 164:==================================================>  (116 + 5) / 121]                                                                                [Stage 165:===========================>                         (63 + 59) / 122][Stage 165:===============================>                     (73 + 49) / 122][Stage 165:=======================================>             (90 + 32) / 122][Stage 165:==============================================>     (110 + 12) / 122][Stage 165:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.80817656 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR   partitionIndex = 178  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIn dex = 189  OR  partitionIndex = 203 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 178  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409086721 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (62 + 59) / 121][Stage 166:=================================>                   (76 + 45) / 121][Stage 166:==========================================>          (97 + 24) / 121][Stage 166:===============================================>    (111 + 10) / 121]                                                                                [Stage 167:==========================>                          (62 + 60) / 122][Stage 167:===============================>                     (72 + 50) / 122][Stage 167:======================================>              (88 + 34) / 122][Stage 167:=================================================>   (114 + 8) / 122][Stage 167:====================================================>(120 + 2) / 122][Stage 167:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.304901999 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  pa rtitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex =  85  OR  partitionIndex = 86 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36095021 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===================================>                 (75 + 38) / 113][Stage 168:=======================================>             (85 + 28) / 113][Stage 168:=============================================>       (98 + 15) / 113][Stage 168:=================================================>   (106 + 7) / 113]                                                                                [Stage 169:====================================>                (78 + 36) / 114][Stage 169:=========================================>           (89 + 25) / 114][Stage 169:==============================================>      (99 + 15) / 114][Stage 169:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.844294946 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR   partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIn dex = 219  OR  partitionIndex = 233 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343000361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:======================================>              (84 + 31) / 115][Stage 170:=============================================>       (98 + 17) / 115][Stage 170:==============================================>     (103 + 12) / 115][Stage 170:==================================================>  (110 + 5) / 115]                                                                                [Stage 171:=====================================>               (83 + 33) / 116][Stage 171:=========================================>           (90 + 26) / 116][Stage 171:=============================================>       (99 + 17) / 116][Stage 171:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.989946233 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR   partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIn dex = 234  OR  partitionIndex = 235 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362085917 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:================================>                    (73 + 45) / 118][Stage 172:===================================>                 (79 + 39) / 118][Stage 172:=========================================>           (92 + 26) / 118][Stage 172:=============================================>      (104 + 14) / 118]                                                                                [Stage 173:================================>                    (74 + 45) / 119][Stage 173:====================================>                (83 + 36) / 119][Stage 173:=========================================>           (93 + 26) / 119][Stage 173:===============================================>    (109 + 10) / 119][Stage 173:===================================================> (116 + 3) / 119][Stage 173:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.684377916 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 31  OR  par titionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 4 7  OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374795294 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===============================>                     (69 + 46) / 115][Stage 174:======================================>              (84 + 31) / 115][Stage 174:=============================================>       (98 + 17) / 115][Stage 174:===================================================> (112 + 3) / 115][Stage 174:====================================================>(113 + 2) / 115]                                                                                [Stage 175:===============================>                     (68 + 48) / 116][Stage 175:====================================>                (80 + 36) / 116][Stage 175:==========================================>          (92 + 24) / 116][Stage 175:===============================================>    (106 + 10) / 116][Stage 175:=================================================>   (109 + 7) / 116][Stage 175:==================================================>  (110 + 6) / 116][Stage 175:====================================================>(114 + 2) / 116][Stage 175:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 9.066192911 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  pa rtitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex =  90  OR  partitionIndex = 102 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370893474 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (72 + 46) / 118][Stage 176:==================================>                  (76 + 42) / 118][Stage 176:======================================>              (86 + 32) / 118][Stage 176:============================================>       (101 + 17) / 118][Stage 176:===================================================> (115 + 3) / 118]                                                                                [Stage 177:================================>                    (73 + 46) / 119][Stage 177:===================================>                 (79 + 40) / 119][Stage 177:========================================>            (92 + 27) / 119][Stage 177:============================================>       (101 + 18) / 119][Stage 177:====================================================>(117 + 2) / 119][Stage 177:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.538084929 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  pa rtitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex  = 117  OR  partitionIndex = 118 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 117  OR  partitionIndex = 118 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374751248 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===================================>                 (76 + 39) / 115][Stage 178:=========================================>           (91 + 24) / 115][Stage 178:==============================================>     (102 + 13) / 115][Stage 178:===================================================> (112 + 3) / 115]                                                                                [Stage 179:==================================>                  (75 + 41) / 116][Stage 179:==========================================>          (94 + 22) / 116][Stage 179:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.771265807 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR   partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIn dex = 166  OR  partitionIndex = 167 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 167 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371062652 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:================================>                    (72 + 46) / 118][Stage 180:==================================>                  (76 + 42) / 118][Stage 180:=========================================>           (92 + 26) / 118][Stage 180:=================================================>   (111 + 7) / 118][Stage 180:===================================================> (114 + 4) / 118]                                                                                [Stage 181:=================================>                   (76 + 43) / 119][Stage 181:=====================================>               (84 + 35) / 119][Stage 181:============================================>        (99 + 20) / 119][Stage 181:===============================================>    (108 + 11) / 119][Stage 181:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.404623705 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIn dex = 121  OR  partitionIndex = 135 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385486724 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:======================================>              (83 + 32) / 115][Stage 182:=========================================>           (90 + 25) / 115][Stage 182:=============================================>      (100 + 15) / 115][Stage 182:==================================================>  (110 + 5) / 115]                                                                                [Stage 183:======================================>              (85 + 31) / 116][Stage 183:=========================================>           (91 + 25) / 116][Stage 183:=============================================>      (102 + 14) / 116][Stage 183:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.935247766 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR   partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIn dex = 165  OR  partitionIndex = 166 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.331919425 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:======================================>              (83 + 32) / 115][Stage 184:=========================================>           (90 + 25) / 115][Stage 184:===============================================>    (104 + 11) / 115][Stage 184:==================================================>  (109 + 6) / 115]                                                                                [Stage 185:=====================================>               (83 + 33) / 116][Stage 185:==========================================>          (92 + 24) / 116][Stage 185:=================================================>   (108 + 8) / 116][Stage 185:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.77341367 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29  OR  pa rtitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex =  57  OR  partitionIndex = 58 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 57  OR  partitionIndex = 58 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391333756 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 60) / 120][Stage 186:============================>                        (64 + 56) / 120][Stage 186:==================================>                  (79 + 41) / 120][Stage 186:===========================================>        (101 + 19) / 120][Stage 186:==================================================>  (114 + 6) / 120]                                                                                [Stage 187:==========================>                          (61 + 60) / 121][Stage 187:============================>                        (64 + 57) / 121][Stage 187:===================================>                 (81 + 40) / 121][Stage 187:==============================================>     (108 + 13) / 121][Stage 187:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.487587252 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  pa rtitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex =  83  OR  partitionIndex = 84 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376387035 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:================================>                    (72 + 46) / 118][Stage 188:==================================>                  (77 + 41) / 118][Stage 188:=======================================>             (88 + 30) / 118][Stage 188:===========================================>         (97 + 21) / 118][Stage 188:===================================================> (115 + 3) / 118]                                                                                [Stage 189:================================>                    (74 + 45) / 119][Stage 189:====================================>                (81 + 38) / 119][Stage 189:========================================>            (90 + 29) / 119][Stage 189:==============================================>     (106 + 13) / 119][Stage 189:==================================================>  (114 + 5) / 119][Stage 189:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.20236877 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIn dex = 175  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414457026 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 61) / 121][Stage 190:==========================>                          (61 + 60) / 121][Stage 190:==================================>                  (78 + 43) / 121][Stage 190:=========================================>           (94 + 27) / 121][Stage 190:=================================================>   (114 + 7) / 121]                                                                                [Stage 191:===========================>                         (63 + 59) / 122][Stage 191:===============================>                     (73 + 49) / 122][Stage 191:========================================>            (93 + 29) / 122][Stage 191:===============================================>    (111 + 11) / 122][Stage 191:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.986993591 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR   partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIn dex = 173  OR  partitionIndex = 174 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344568176 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:======================================>              (82 + 31) / 113][Stage 192:===========================================>         (92 + 21) / 113][Stage 192:=================================================>   (105 + 8) / 113][Stage 192:===================================================> (110 + 3) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:========================================>            (87 + 27) / 114][Stage 193:=============================================>       (97 + 17) / 114][Stage 193:================================================>    (105 + 9) / 114][Stage 193:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.082908068 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86  OR  partitionIndex = 98  OR  pa rtitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex  = 114  OR  partitionIndex = 115 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 115 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403027196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (62 + 58) / 120][Stage 194:=================================>                   (75 + 45) / 120][Stage 194:======================================>              (87 + 33) / 120][Stage 194:=============================================>      (104 + 16) / 120][Stage 194:====================================================>(119 + 1) / 120]                                                                                [Stage 195:==========================>                          (61 + 60) / 121][Stage 195:==============================>                      (70 + 51) / 121][Stage 195:===================================>                 (81 + 40) / 121][Stage 195:==========================================>         (100 + 21) / 121][Stage 195:=================================================>   (114 + 7) / 121][Stage 195:====================================================>(119 + 2) / 121][Stage 195:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.560363987 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  pa rtitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex =  91  OR  partitionIndex = 105 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432930651 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==========================>                          (60 + 61) / 121][Stage 196:============================>                        (65 + 56) / 121][Stage 196:===================================>                 (81 + 40) / 121][Stage 196:===========================================>        (102 + 19) / 121][Stage 196:===================================================> (117 + 4) / 121]                                                                                [Stage 197:===========================>                         (63 + 59) / 122][Stage 197:=================================>                   (76 + 46) / 122][Stage 197:==========================================>          (98 + 24) / 122][Stage 197:==============================================>     (110 + 12) / 122][Stage 197:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.195361743 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  pa rtitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex =  94  OR  partitionIndex = 95 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390559257 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:================================>                    (72 + 46) / 118][Stage 198:==================================>                  (77 + 41) / 118][Stage 198:=======================================>             (87 + 31) / 118][Stage 198:================================================>    (109 + 9) / 118][Stage 198:====================================================>(116 + 2) / 118]                                                                                [Stage 199:================================>                    (73 + 46) / 119][Stage 199:================================>                    (74 + 45) / 119][Stage 199:=====================================>               (85 + 34) / 119][Stage 199:============================================>       (101 + 18) / 119][Stage 199:===================================================> (116 + 3) / 119][Stage 199:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.484913785 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  pa rtitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex =  53  OR  partitionIndex = 54 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389199962 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 61) / 121][Stage 200:===============================>                     (73 + 48) / 121][Stage 200:========================================>            (93 + 28) / 121][Stage 200:==================================================>  (115 + 6) / 121]                                                                                [Stage 201:==========================>                          (62 + 60) / 122][Stage 201:==============================>                      (70 + 52) / 122][Stage 201:===================================>                 (81 + 41) / 122][Stage 201:=============================================>      (106 + 16) / 122][Stage 201:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.43089635 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/24 19:39:20 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.34:59004) dropped. RpcEnv already stopped.
17/05/24 19:39:20 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.34:59004) dropped. RpcEnv already stopped.

real	11m45.756s
user	12m37.236s
sys	1m36.276s
