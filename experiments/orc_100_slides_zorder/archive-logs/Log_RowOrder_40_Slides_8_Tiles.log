Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 20:52:10 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 20:52:24 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 20:52:24 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 20:52:25 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 20:52:27 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 20:52:37 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524205227-0593).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.441922343 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:==>                                                    (6 + 109) / 115][Stage 0:===========================>                           (57 + 58) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:==========================================>            (88 + 27) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:=============================>                         (62 + 54) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:=========================================>             (87 + 29) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:====================================================>  (110 + 6) / 116]                                                                                Time elapsed: 12.597562435 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR   partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIn dex = 165  OR  partitionIndex = 166 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.893650553 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:====================>                                  (46 + 75) / 121][Stage 2:=========================>                             (55 + 66) / 121][Stage 2:===========================>                           (60 + 61) / 121][Stage 2:==============================>                        (66 + 55) / 121][Stage 2:==================================>                    (75 + 46) / 121][Stage 2:==========================================>            (93 + 28) / 121][Stage 2:=============================================>        (102 + 19) / 121][Stage 2:=====================================================> (117 + 4) / 121]                                                                                [Stage 3:===========================>                           (60 + 62) / 122][Stage 3:===========================>                           (61 + 61) / 122][Stage 3:=============================>                         (66 + 56) / 122][Stage 3:===============================>                       (70 + 52) / 122][Stage 3:====================================>                  (81 + 41) / 122][Stage 3:============================================>         (100 + 22) / 122][Stage 3:===================================================>   (115 + 7) / 122][Stage 3:======================================================>(120 + 2) / 122][Stage 3:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 6.467727519 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 44  OR  pa rtitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex =  60  OR  partitionIndex = 68 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.723213862 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=========================>                             (56 + 64) / 120][Stage 4:===========================>                           (61 + 59) / 120][Stage 4:=============================>                         (64 + 56) / 120][Stage 4:=================================>                     (73 + 47) / 120][Stage 4:=====================================>                 (81 + 39) / 120][Stage 4:============================================>          (96 + 24) / 120][Stage 4:====================================================>  (114 + 6) / 120][Stage 4:=====================================================> (117 + 3) / 120]                                                                                [Stage 5:===========================>                           (61 + 60) / 121][Stage 5:==============================>                        (67 + 54) / 121][Stage 5:=================================>                     (73 + 48) / 121][Stage 5:====================================>                  (81 + 40) / 121][Stage 5:=========================================>             (91 + 30) / 121][Stage 5:====================================================>  (115 + 6) / 121][Stage 5:=====================================================> (117 + 4) / 121][Stage 5:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.130680954 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR   partitionIndex = 126  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 153  OR  partitionIn dex = 167  OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.609433494 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=============================>                         (61 + 54) / 115][Stage 6:===============================>                       (66 + 49) / 115][Stage 6:=====================================>                 (78 + 37) / 115][Stage 6:===========================================>           (91 + 24) / 115][Stage 6:==============================================>        (98 + 17) / 115][Stage 6:===================================================>   (107 + 8) / 115][Stage 6:====================================================>  (110 + 5) / 115]                                                                                [Stage 7:================================>                      (68 + 48) / 116][Stage 7:========================================>              (85 + 31) / 116][Stage 7:=============================================>         (95 + 21) / 116][Stage 7:===============================================>      (102 + 14) / 116][Stage 7:===================================================>   (108 + 8) / 116][Stage 7:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 4.085846221 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIn dex = 145  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.521258399 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=============================>                         (60 + 53) / 113][Stage 8:===================================>                   (73 + 40) / 113][Stage 8:======================================>                (80 + 33) / 113][Stage 8:=========================================>             (86 + 27) / 113][Stage 8:==============================================>        (95 + 18) / 113][Stage 8:================================================>      (99 + 14) / 113][Stage 8:=====================================================> (110 + 3) / 113][Stage 8:======================================================>(111 + 2) / 113]                                                                                [Stage 9:==================================>                    (71 + 43) / 114][Stage 9:=========================================>             (86 + 28) / 114][Stage 9:===========================================>           (91 + 23) / 114][Stage 9:==============================================>        (97 + 17) / 114][Stage 9:===============================================>      (101 + 13) / 114][Stage 9:================================================>     (103 + 11) / 114][Stage 9:====================================================>  (109 + 5) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.632959895 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52  OR  partitionIndex = 60  OR  pa rtitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex =  76  OR  partitionIndex = 77 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.637236682 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=======================>                              (52 + 68) / 120][Stage 10:==========================>                           (59 + 61) / 120][Stage 10:===============================>                      (69 + 51) / 120][Stage 10:=====================================>                (83 + 37) / 120][Stage 10:===========================================>          (97 + 23) / 120][Stage 10:================================================>    (110 + 10) / 120][Stage 10:=====================================================>(119 + 1) / 120]                                                                                [Stage 11:===========================>                          (61 + 60) / 121][Stage 11:============================>                         (64 + 57) / 121][Stage 11:================================>                     (72 + 49) / 121][Stage 11:=======================================>              (89 + 32) / 121][Stage 11:================================================>    (110 + 11) / 121][Stage 11:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.244280971 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  part itionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31   OR  partitionIndex = 45 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.494254517 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:================================>                     (72 + 46) / 118][Stage 12:=================================>                    (73 + 45) / 118][Stage 12:=====================================>                (83 + 35) / 118][Stage 12:=============================================>       (102 + 16) / 118][Stage 12:====================================================> (114 + 4) / 118][Stage 12:=====================================================>(117 + 1) / 118]                                                                                [Stage 13:=================================>                    (73 + 46) / 119][Stage 13:===================================>                  (79 + 40) / 119][Stage 13:========================================>             (89 + 30) / 119][Stage 13:=============================================>       (102 + 17) / 119][Stage 13:=================================================>    (110 + 9) / 119][Stage 13:====================================================> (116 + 3) / 119][Stage 13:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.096955497 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 219  OR   partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIn dex = 235  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505779095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:================================>                     (72 + 46) / 118][Stage 14:==================================>                   (75 + 43) / 118][Stage 14:=====================================>                (81 + 37) / 118][Stage 14:=========================================>            (91 + 27) / 118][Stage 14:=============================================>       (101 + 17) / 118][Stage 14:===============================================>     (106 + 12) / 118][Stage 14:====================================================> (115 + 3) / 118]                                                                                [Stage 15:=================================>                    (73 + 46) / 119][Stage 15:===================================>                  (78 + 41) / 119][Stage 15:=========================================>            (92 + 27) / 119][Stage 15:==============================================>      (104 + 15) / 119][Stage 15:=================================================>    (110 + 9) / 119][Stage 15:==================================================>   (111 + 8) / 119][Stage 15:===================================================>  (114 + 5) / 119][Stage 15:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.726307887 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 164  OR   partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179  OR  partitionIn dex = 180  OR  partitionIndex = 188 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.625180761 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:================================>                     (72 + 46) / 118][Stage 16:=================================>                    (73 + 45) / 118][Stage 16:====================================>                 (80 + 38) / 118][Stage 16:============================================>         (97 + 21) / 118][Stage 16:================================================>    (108 + 10) / 118][Stage 16:=====================================================>(116 + 2) / 118]                                                                                [Stage 17:=================================>                    (73 + 46) / 119][Stage 17:====================================>                 (80 + 39) / 119][Stage 17:===========================================>          (95 + 24) / 119][Stage 17:===================================================>  (114 + 5) / 119][Stage 17:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.888057568 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  pa rtitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex =  84  OR  partitionIndex = 85 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 85 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.513121825 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==============================>                       (65 + 50) / 115][Stage 18:==================================>                   (74 + 41) / 115][Stage 18:==========================================>           (90 + 25) / 115][Stage 18:===============================================>     (103 + 12) / 115][Stage 18:=====================================================>(114 + 1) / 115]                                                                                [Stage 19:==============================>                       (65 + 51) / 116][Stage 19:=======================================>              (84 + 32) / 116][Stage 19:==============================================>       (99 + 17) / 116][Stage 19:==================================================>   (108 + 8) / 116][Stage 19:=====================================================>(114 + 2) / 116][Stage 19:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.280109364 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIn dex = 135  OR  partitionIndex = 136 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.546792332 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (60 + 60) / 120][Stage 20:===========================>                          (61 + 59) / 120][Stage 20:==============================>                       (67 + 53) / 120][Stage 20:=====================================>                (83 + 37) / 120][Stage 20:==============================================>      (105 + 15) / 120]                                                                                [Stage 21:===========================>                          (61 + 60) / 121][Stage 21:==============================>                       (68 + 53) / 121][Stage 21:====================================>                 (82 + 39) / 121][Stage 21:==============================================>      (106 + 15) / 121][Stage 21:===================================================>  (115 + 6) / 121][Stage 21:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.419963791 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  pa rtitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex =  53  OR  partitionIndex = 54 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.477240122 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:================================>                     (72 + 46) / 118][Stage 22:==================================>                   (75 + 43) / 118][Stage 22:=====================================>                (83 + 35) / 118][Stage 22:===========================================>          (95 + 23) / 118][Stage 22:===================================================>  (112 + 6) / 118][Stage 22:=====================================================>(117 + 1) / 118]                                                                                [Stage 23:=================================>                    (73 + 46) / 119][Stage 23:=======================================>              (87 + 32) / 119][Stage 23:=========================================>            (91 + 28) / 119][Stage 23:==============================================>      (104 + 15) / 119][Stage 23:===================================================>  (113 + 6) / 119][Stage 23:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 4.086315808 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  pa rtitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex =  43  OR  partitionIndex = 57 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.538496755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (58 + 55) / 113][Stage 24:=============================>                        (61 + 52) / 113][Stage 24:===================================>                  (75 + 38) / 113][Stage 24:===============================================>     (102 + 11) / 113][Stage 24:===================================================>  (108 + 5) / 113][Stage 24:=====================================================>(111 + 2) / 113]                                                                                [Stage 25:===========================>                          (59 + 55) / 114][Stage 25:================================>                     (68 + 46) / 114][Stage 25:==========================================>           (89 + 25) / 114][Stage 25:==============================================>      (100 + 14) / 114][Stage 25:====================================================> (110 + 4) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.195472345 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  pa rtitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex =  68  OR  partitionIndex = 69 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.540494349 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (72 + 46) / 118][Stage 26:====================================>                 (79 + 39) / 118][Stage 26:=========================================>            (91 + 27) / 118][Stage 26:==================================================>   (111 + 7) / 118]                                                                                [Stage 27:=================================>                    (73 + 46) / 119][Stage 27:=====================================>                (83 + 36) / 119][Stage 27:==========================================>           (94 + 25) / 119][Stage 27:===============================================>     (106 + 13) / 119][Stage 27:===================================================>  (114 + 5) / 119][Stage 27:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.492116748 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 130  OR   partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIn dex = 146  OR  partitionIndex = 158 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493508112 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (60 + 60) / 120][Stage 28:=============================>                        (66 + 54) / 120][Stage 28:===================================>                  (78 + 42) / 120][Stage 28:===========================================>          (97 + 23) / 120][Stage 28:====================================================> (116 + 4) / 120][Stage 28:=====================================================>(119 + 1) / 120]                                                                                [Stage 29:===========================>                          (61 + 60) / 121][Stage 29:=================================>                    (74 + 47) / 121][Stage 29:=====================================>                (85 + 36) / 121][Stage 29:============================================>        (102 + 19) / 121][Stage 29:=================================================>    (112 + 9) / 121][Stage 29:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.029954468 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR   partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIn dex = 135  OR  partitionIndex = 136 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476358836 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (57 + 56) / 113][Stage 30:============================>                         (59 + 54) / 113][Stage 30:===================================>                  (75 + 38) / 113][Stage 30:===========================================>          (91 + 22) / 113][Stage 30:==================================================>   (106 + 7) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:===========================>                          (59 + 55) / 114][Stage 31:==============================>                       (65 + 49) / 114][Stage 31:===================================>                  (74 + 40) / 114][Stage 31:===========================================>          (92 + 22) / 114][Stage 31:==================================================>   (107 + 7) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.678149713 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR   partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIn dex = 169  OR  partitionIndex = 170 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.495725466 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:==========================>                           (60 + 61) / 121][Stage 32:==============================>                       (68 + 53) / 121][Stage 32:========================================>             (90 + 31) / 121][Stage 32:==================================================>   (113 + 8) / 121]                                                                                [Stage 33:===========================>                          (62 + 60) / 122][Stage 33:==============================>                       (68 + 54) / 122][Stage 33:====================================>                 (82 + 40) / 122][Stage 33:===========================================>          (99 + 23) / 122][Stage 33:==============================================>      (108 + 14) / 122][Stage 33:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.58853876 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  pa rtitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex =  75  OR  partitionIndex = 76 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.492848568 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (60 + 60) / 120][Stage 34:==============================>                       (68 + 52) / 120][Stage 34:========================================>             (89 + 31) / 120][Stage 34:==================================================>   (113 + 7) / 120][Stage 34:=====================================================>(119 + 1) / 120]                                                                                [Stage 35:===========================>                          (61 + 60) / 121][Stage 35:=============================>                        (67 + 54) / 121][Stage 35:===================================>                  (80 + 41) / 121][Stage 35:===============================================>     (109 + 12) / 121][Stage 35:===================================================>  (115 + 6) / 121][Stage 35:=====================================================>(119 + 2) / 121][Stage 35:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.0108284 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIn dex = 121  OR  partitionIndex = 135 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.65903739 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (60 + 60) / 120][Stage 36:==============================>                       (68 + 52) / 120][Stage 36:======================================>               (85 + 35) / 120][Stage 36:=============================================>       (102 + 18) / 120][Stage 36:====================================================> (117 + 3) / 120]                                                                                [Stage 37:===========================>                          (62 + 59) / 121][Stage 37:================================>                     (73 + 48) / 121][Stage 37:============================================>         (99 + 22) / 121][Stage 37:=================================================>    (112 + 9) / 121][Stage 37:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.106756748 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 91  OR  pa rtitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex  = 107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434821516 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:======================================>               (83 + 32) / 115][Stage 38:========================================>             (86 + 29) / 115][Stage 38:==============================================>       (99 + 16) / 115][Stage 38:===============================================>     (103 + 12) / 115][Stage 38:===================================================>  (109 + 6) / 115]                                                                                [Stage 39:=======================================>              (84 + 32) / 116][Stage 39:===========================================>          (94 + 22) / 116][Stage 39:===============================================>     (103 + 13) / 116][Stage 39:===================================================>  (111 + 5) / 116][Stage 39:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.449115027 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR   partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIn dex = 197  OR  partitionIndex = 198 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496005369 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==========================>                           (60 + 61) / 121][Stage 40:============================>                         (63 + 58) / 121][Stage 40:=================================>                    (76 + 45) / 121][Stage 40:==========================================>           (95 + 26) / 121][Stage 40:==================================================>   (114 + 7) / 121]                                                                                [Stage 41:===========================>                          (61 + 61) / 122][Stage 41:==============================>                       (69 + 53) / 122][Stage 41:=====================================>                (85 + 37) / 122][Stage 41:==============================================>      (108 + 14) / 122][Stage 41:===================================================>  (117 + 5) / 122][Stage 41:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.848894048 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21   OR  partitionIndex = 22 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.495881548 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (60 + 60) / 120][Stage 42:===================================>                  (78 + 42) / 120][Stage 42:============================================>         (98 + 22) / 120][Stage 42:==================================================>   (112 + 8) / 120]                                                                                [Stage 43:============================>                         (64 + 57) / 121][Stage 43:=================================>                    (74 + 47) / 121][Stage 43:=========================================>            (94 + 27) / 121][Stage 43:================================================>    (110 + 11) / 121][Stage 43:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.003621593 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR   partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIn dex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415469645 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=================================>                    (70 + 43) / 113][Stage 44:=======================================>              (82 + 31) / 113][Stage 44:===========================================>          (90 + 23) / 113][Stage 44:===============================================>     (101 + 12) / 113][Stage 44:===================================================>  (108 + 5) / 113][Stage 44:=====================================================>(112 + 1) / 113]                                                                                [Stage 45:======================================>               (82 + 32) / 114][Stage 45:===========================================>          (91 + 23) / 114][Stage 45:===============================================>     (102 + 12) / 114][Stage 45:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.177655196 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  pa rtitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex =  58  OR  partitionIndex = 59 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474023301 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==========================>                           (60 + 61) / 121][Stage 46:=============================>                        (67 + 54) / 121][Stage 46:======================================>               (86 + 35) / 121][Stage 46:===============================================>     (109 + 12) / 121][Stage 46:=====================================================>(120 + 1) / 121]                                                                                [Stage 47:===========================>                          (61 + 61) / 122][Stage 47:============================>                         (65 + 57) / 122][Stage 47:===================================>                  (81 + 41) / 122][Stage 47:===========================================>         (100 + 22) / 122][Stage 47:===================================================>  (117 + 5) / 122][Stage 47:=====================================================>(120 + 2) / 122][Stage 47:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.843066429 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 14  OR  pa rtitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex =  30  OR  partitionIndex = 42 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488363578 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (58 + 55) / 113][Stage 48:=============================>                        (61 + 52) / 113][Stage 48:======================================>               (80 + 33) / 113][Stage 48:==============================================>       (98 + 15) / 113]                                                                                [Stage 49:===========================>                          (58 + 56) / 114][Stage 49:==================================>                   (73 + 41) / 114][Stage 49:=========================================>            (88 + 26) / 114][Stage 49:==============================================>       (99 + 15) / 114][Stage 49:================================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.93948376 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 16 3  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177   OR  partitionIndex = 178 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 178 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.419248491 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 50:================================>                     (72 + 46) / 118][Stage 50:==================================>                   (75 + 43) / 118][Stage 50:============================================>         (97 + 21) / 118][Stage 50:===================================================>  (113 + 5) / 118][Stage 50:=====================================================>(116 + 2) / 118]                                                                                [Stage 51:=================================>                    (74 + 45) / 119][Stage 51:======================================>               (85 + 34) / 119][Stage 51:===============================================>     (107 + 12) / 119][Stage 51:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.523315405 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  O R  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 53  OR  pa rtitionIndex = 54 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 53  OR  partitionIndex = 54 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.444679488 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (58 + 55) / 113][Stage 52:===============================>                      (66 + 47) / 113][Stage 52:===================================>                  (74 + 39) / 113][Stage 52:===============================================>      (99 + 14) / 113][Stage 52:====================================================> (110 + 3) / 113]                                                                                [Stage 53:=============================>                        (63 + 51) / 114][Stage 53:===================================>                  (75 + 39) / 114][Stage 53:==============================================>       (99 + 15) / 114][Stage 53:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.79130096 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  8  OR  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 11  OR   partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  part itionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398072107 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=================================>                    (71 + 42) / 113][Stage 54:=======================================>              (83 + 30) / 113][Stage 54:============================================>         (93 + 20) / 113][Stage 54:===============================================>      (99 + 14) / 113][Stage 54:====================================================> (109 + 4) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:======================================>               (81 + 33) / 114][Stage 55:===========================================>          (91 + 23) / 114][Stage 55:==============================================>      (100 + 14) / 114][Stage 55:==================================================>   (107 + 7) / 114][Stage 55:===================================================>  (109 + 5) / 114][Stage 55:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 6.185256994 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 13 5  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149   OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.412185247 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 56:================================>                     (72 + 46) / 118][Stage 56:=================================>                    (74 + 44) / 118][Stage 56:===========================================>          (95 + 23) / 118][Stage 56:==================================================>   (110 + 8) / 118]                                                                                [Stage 57:=================================>                    (73 + 46) / 119][Stage 57:=====================================>                (82 + 37) / 119][Stage 57:============================================>         (97 + 22) / 119][Stage 57:=================================================>    (110 + 9) / 119][Stage 57:====================================================> (116 + 3) / 119][Stage 57:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.825324255 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 13 5  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149   OR  partitionIndex = 150 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 150 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.437320855 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (58 + 55) / 113][Stage 58:============================>                         (60 + 53) / 113][Stage 58:=================================>                    (70 + 43) / 113][Stage 58:=======================================>              (82 + 31) / 113][Stage 58:==============================================>       (98 + 15) / 113][Stage 58:====================================================> (109 + 4) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:==============================>                       (65 + 49) / 114][Stage 59:==================================>                   (72 + 42) / 114][Stage 59:========================================>             (85 + 29) / 114][Stage 59:===============================================>     (102 + 12) / 114][Stage 59:====================================================> (111 + 3) / 114][Stage 59:=====================================================>(112 + 2) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.91404193 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 13 5  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138   OR  partitionIndex = 150 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.425729427 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 60:================================>                     (72 + 46) / 118][Stage 60:=================================>                    (74 + 44) / 118][Stage 60:========================================>             (88 + 30) / 118][Stage 60:=============================================>        (99 + 19) / 118][Stage 60:=====================================================>(116 + 2) / 118]                                                                                [Stage 61:=================================>                    (74 + 45) / 119][Stage 61:====================================>                 (81 + 38) / 119][Stage 61:============================================>         (98 + 21) / 119][Stage 61:==================================================>   (111 + 8) / 119][Stage 61:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.201909226 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 21 5  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229   OR  partitionIndex = 230 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402555667 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 62:=====================================>                (79 + 36) / 115][Stage 62:==========================================>           (90 + 25) / 115][Stage 62:===============================================>     (102 + 13) / 115][Stage 62:===================================================>  (110 + 5) / 115]                                                                                [Stage 63:======================================>               (82 + 34) / 116][Stage 63:===========================================>          (93 + 23) / 116][Stage 63:===============================================>     (103 + 13) / 116][Stage 63:===================================================>  (110 + 6) / 116][Stage 63:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.912158702 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  164  OR  partitionIndex = 165  OR  partitionIndex = 178  OR  partitionIndex = 17 9  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189   OR  partitionIndex = 203 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 178  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.434036272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (58 + 55) / 113][Stage 64:===============================>                      (66 + 47) / 113][Stage 64:========================================>             (85 + 28) / 113][Stage 64:===================================================>  (107 + 6) / 113]                                                                                [Stage 65:=============================>                        (62 + 52) / 114][Stage 65:==================================>                   (72 + 42) / 114][Stage 65:==========================================>           (90 + 24) / 114][Stage 65:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 4.268518315 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  12  OR  partitionIndex = 13  OR  partitionIndex = 40  OR  partitionIndex = 41  O R  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 55  OR  pa rtitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 55  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.453734846 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (61 + 59) / 120][Stage 66:===============================>                      (70 + 50) / 120][Stage 66:==========================================>           (95 + 25) / 120][Stage 66:==================================================>   (113 + 7) / 120]                                                                                [Stage 67:===========================>                          (61 + 60) / 121][Stage 67:=============================>                        (66 + 55) / 121][Stage 67:====================================>                 (81 + 40) / 121][Stage 67:===============================================>     (109 + 12) / 121][Stage 67:====================================================> (118 + 3) / 121][Stage 67:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.084059202 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 18 2  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196   OR  partitionIndex = 197 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.385384305 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 68:======================================>               (82 + 33) / 115][Stage 68:==========================================>           (90 + 25) / 115][Stage 68:================================================>    (105 + 10) / 115][Stage 68:=====================================================>(114 + 1) / 115]                                                                                [Stage 69:========================================>             (86 + 30) / 116][Stage 69:============================================>         (96 + 20) / 116][Stage 69:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.687408256 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  64  OR  partitionIndex = 65  OR  partitionIndex = 92  OR  partitionIndex = 93  O R  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR   partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.436065702 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (60 + 60) / 120][Stage 70:===============================>                      (70 + 50) / 120][Stage 70:======================================>               (86 + 34) / 120][Stage 70:===============================================>     (108 + 12) / 120][Stage 70:=====================================================>(118 + 2) / 120]                                                                                [Stage 71:===========================>                          (61 + 60) / 121][Stage 71:=============================>                        (66 + 55) / 121][Stage 71:==================================>                   (77 + 44) / 121][Stage 71:=============================================>       (103 + 18) / 121][Stage 71:===================================================>  (115 + 6) / 121][Stage 71:=====================================================>(119 + 2) / 121][Stage 71:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.127434706 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 11 7  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120   partitionIndex = 120 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.401474811 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
org.apache.spark.sql.catalyst.parser.ParseException:
extraneous input 'partitionIndex' expecting {<EOF>, '.', '[', 'GROUP', 'ORDER', 'HAVING', 'LIMIT', 'OR', 'AND', 'IN', NOT, 'BETWEEN', 'LIKE', RLIKE, 'IS', 'WINDOW', 'UNION', 'EXCEPT', 'MINUS', 'INTERSECT', EQ, '<=>', '<>', '!=', '<', LTE, '>', GTE, '+', '-', '*', '/', '%', 'DIV', '&', '|', '^', 'SORT', 'CLUSTER', 'DISTRIBUTE'}(line 1, pos 213)

== SQL ==
SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------^^^

  at org.apache.spark.sql.catalyst.parser.ParseException.withCommand(ParseDriver.scala:197)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parse(ParseDriver.scala:99)
  at org.apache.spark.sql.execution.SparkSqlParser.parse(SparkSqlParser.scala:45)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parsePlan(ParseDriver.scala:53)
  at org.apache.spark.sql.SparkSession.sql(SparkSession.scala:592)
  at org.apache.spark.sql.SQLContext.sql(SQLContext.scala:699)
  at $anonfun$1.apply$mcI$sp(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  O R  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  pa rtitionIndex = 54 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.424204553 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (60 + 60) / 120][Stage 72:============================>                         (63 + 57) / 120][Stage 72:=================================>                    (75 + 45) / 120][Stage 72:========================================>             (89 + 31) / 120][Stage 72:================================================>    (110 + 10) / 120]                                                                                [Stage 73:===========================>                          (61 + 60) / 121][Stage 73:=================================>                    (74 + 47) / 121][Stage 73:===========================================>         (100 + 21) / 121][Stage 73:==================================================>   (113 + 8) / 121][Stage 73:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.793476578 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  4  OR  partitionIndex = 5  OR  partitionIndex = 32  OR  partitionIndex = 33  OR   partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47  OR  part itionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.401092433 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 74:=================================>                    (71 + 44) / 115][Stage 74:======================================>               (81 + 34) / 115][Stage 74:===============================================>     (102 + 13) / 115][Stage 74:==================================================>   (108 + 7) / 115][Stage 74:=====================================================>(114 + 1) / 115]                                                                                [Stage 75:===================================>                  (76 + 40) / 116][Stage 75:==========================================>           (92 + 24) / 116][Stage 75:===============================================>     (103 + 13) / 116][Stage 75:===================================================>  (110 + 6) / 116][Stage 75:====================================================> (112 + 4) / 116][Stage 75:=====================================================>(114 + 2) / 116][Stage 75:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.591247487 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 100   OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114  OR   partitionIndex = 115 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 115 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.437937874 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===============================>                      (67 + 48) / 115][Stage 76:=====================================>                (80 + 35) / 115][Stage 76:==========================================>           (91 + 24) / 115][Stage 76:===============================================>     (103 + 12) / 115][Stage 76:=====================================================>(114 + 1) / 115]                                                                                [Stage 77:================================>                     (70 + 46) / 116][Stage 77:=========================================>            (90 + 26) / 116][Stage 77:==============================================>       (99 + 17) / 116][Stage 77:===================================================>  (111 + 5) / 116][Stage 77:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.181011553 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  O R  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  p artitionIndex = 114 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.350622222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 78:======================================>               (83 + 32) / 115][Stage 78:==========================================>           (91 + 24) / 115][Stage 78:==============================================>      (100 + 15) / 115][Stage 78:================================================>    (105 + 10) / 115][Stage 78:=====================================================>(114 + 1) / 115]                                                                                [Stage 79:======================================>               (82 + 34) / 116][Stage 79:=========================================>            (89 + 27) / 116][Stage 79:===========================================>          (94 + 22) / 116][Stage 79:===============================================>     (104 + 12) / 116][Stage 79:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.118784077 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 14 8  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162   OR  partitionIndex = 163 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.377903956 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 80:====================================>                 (76 + 37) / 113][Stage 80:=========================================>            (86 + 27) / 113][Stage 80:=============================================>        (95 + 18) / 113][Stage 80:===================================================>  (108 + 5) / 113][Stage 80:====================================================> (110 + 3) / 113]                                                                                [Stage 81:====================================>                 (77 + 37) / 114][Stage 81:==========================================>           (90 + 24) / 114][Stage 81:=============================================>        (97 + 17) / 114][Stage 81:===================================================>  (108 + 6) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.37639706 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  O R  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR   partitionIndex = 107 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.431625061 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==========================>                           (60 + 61) / 121][Stage 82:===============================>                      (71 + 50) / 121][Stage 82:======================================>               (86 + 35) / 121][Stage 82:=============================================>       (104 + 17) / 121][Stage 82:=====================================================>(119 + 2) / 121]                                                                                [Stage 83:============================>                         (65 + 57) / 122][Stage 83:===================================>                  (80 + 42) / 122][Stage 83:==========================================>           (95 + 27) / 122][Stage 83:==================================================>   (115 + 7) / 122][Stage 83:====================================================> (118 + 4) / 122][Stage 83:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.95659587 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 18 0  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 195   OR  partitionIndex = 196 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 195  OR  partitionIndex = 196 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.373159486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==================================>                   (73 + 40) / 113][Stage 84:=======================================>              (83 + 30) / 113][Stage 84:============================================>         (94 + 19) / 113][Stage 84:===================================================>  (107 + 6) / 113][Stage 84:====================================================> (109 + 4) / 113]                                                                                [Stage 85:======================================>               (81 + 33) / 114][Stage 85:===========================================>          (92 + 22) / 114][Stage 85:==================================================>   (106 + 8) / 114][Stage 85:====================================================> (110 + 4) / 114][Stage 85:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.192718771 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 15 6  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170   OR  partitionIndex = 171 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.35170333 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 86:=====================================>                (80 + 35) / 115][Stage 86:=======================================>              (84 + 31) / 115][Stage 86:=============================================>        (96 + 19) / 115][Stage 86:==================================================>   (108 + 7) / 115][Stage 86:=====================================================>(114 + 1) / 115]                                                                                [Stage 87:=====================================>                (81 + 35) / 116][Stage 87:========================================>             (86 + 30) / 116][Stage 87:============================================>         (96 + 20) / 116][Stage 87:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.81419504 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 15 2  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166   OR  partitionIndex = 167 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 167 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.404845774 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:================================>                     (68 + 45) / 113][Stage 88:=========================================>            (86 + 27) / 113][Stage 88:===============================================>     (101 + 12) / 113][Stage 88:====================================================> (110 + 3) / 113]                                                                                [Stage 89:==============================>                       (65 + 49) / 114][Stage 89:====================================>                 (77 + 37) / 114][Stage 89:============================================>         (93 + 21) / 114][Stage 89:===================================================>  (108 + 6) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.918035034 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  182  OR  partitionIndex = 183  OR  partitionIndex = 196  OR  partitionIndex = 19 7  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211   OR  partitionIndex = 225 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.399696261 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 90:==================================>                   (74 + 41) / 115][Stage 90:=======================================>              (84 + 31) / 115][Stage 90:============================================>         (95 + 20) / 115][Stage 90:===================================================>  (110 + 5) / 115]                                                                                [Stage 91:=====================================>                (81 + 35) / 116][Stage 91:===========================================>          (94 + 22) / 116][Stage 91:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.724168536 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  128  OR  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 13 1  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 145   OR  partitionIndex = 146 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 146 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.35441322 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 92:=======================================>              (84 + 31) / 115][Stage 92:============================================>         (94 + 21) / 115][Stage 92:==================================================>   (107 + 8) / 115]                                                                                [Stage 93:========================================>             (87 + 29) / 116][Stage 93:=============================================>        (97 + 19) / 116][Stage 93:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.610687556 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  132  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 16 1  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175   OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.384568063 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 94:================================>                     (69 + 46) / 115][Stage 94:======================================>               (83 + 32) / 115][Stage 94:===============================================>     (104 + 11) / 115][Stage 94:====================================================> (111 + 4) / 115][Stage 94:=====================================================>(114 + 1) / 115]                                                                                [Stage 95:===============================>                      (67 + 49) / 116][Stage 95:=====================================>                (81 + 35) / 116][Stage 95:==============================================>       (99 + 17) / 116][Stage 95:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.91898012 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR   partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  part itionIndex = 50 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.362611204 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 96:==================================>                   (73 + 40) / 113][Stage 96:=======================================>              (83 + 30) / 113][Stage 96:============================================>         (93 + 20) / 113][Stage 96:===============================================>     (102 + 11) / 113][Stage 96:====================================================> (109 + 4) / 113][Stage 96:=====================================================>(111 + 2) / 113]                                                                                [Stage 97:======================================>               (82 + 32) / 114][Stage 97:==========================================>           (90 + 24) / 114][Stage 97:================================================>    (104 + 10) / 114][Stage 97:===================================================>  (108 + 6) / 114][Stage 97:====================================================> (110 + 4) / 114][Stage 97:====================================================> (111 + 3) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.755108158 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  184  OR  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 18 7  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 201   OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.380371275 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=================================>                    (73 + 45) / 118][Stage 98:==================================>                   (75 + 43) / 118][Stage 98:======================================>               (85 + 33) / 118][Stage 98:===========================================>          (94 + 24) / 118][Stage 98:================================================>    (108 + 10) / 118][Stage 98:====================================================> (115 + 3) / 118]                                                                                [Stage 99:=================================>                    (73 + 46) / 119][Stage 99:==================================>                   (76 + 43) / 119][Stage 99:======================================>               (85 + 34) / 119][Stage 99:============================================>        (100 + 19) / 119][Stage 99:=================================================>    (110 + 9) / 119][Stage 99:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.124611512 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 16 9  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172   OR  partitionIndex = 180 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.449400685 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (61 + 60) / 121][Stage 100:==============================>                      (70 + 51) / 121][Stage 100:======================================>              (89 + 32) / 121][Stage 100:==============================================>     (108 + 13) / 121][Stage 100:====================================================>(120 + 1) / 121]                                                                                [Stage 101:==========================>                          (61 + 61) / 122][Stage 101:=============================>                       (68 + 54) / 122][Stage 101:==================================>                  (80 + 42) / 122][Stage 101:==========================================>          (97 + 25) / 122][Stage 101:=================================================>   (114 + 8) / 122][Stage 101:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.618569635 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  O R  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  pa rtitionIndex = 43 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.369520909 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 102:=================================>                   (71 + 42) / 113][Stage 102:====================================>                (78 + 35) / 113][Stage 102:==========================================>          (90 + 23) / 113][Stage 102:=============================================>       (98 + 15) / 113][Stage 102:==================================================>  (108 + 5) / 113][Stage 102:====================================================>(112 + 1) / 113]                                                                                [Stage 103:=================================>                   (73 + 41) / 114][Stage 103:======================================>              (82 + 32) / 114][Stage 103:=======================================>             (86 + 28) / 114][Stage 103:===========================================>         (93 + 21) / 114][Stage 103:===================================================> (110 + 4) / 114][Stage 103:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 8.184257804 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 21 3  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 227   OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.374438305 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 104:=====================================>               (81 + 34) / 115][Stage 104:==========================================>          (93 + 22) / 115][Stage 104:================================================>    (106 + 9) / 115][Stage 104:==================================================>  (109 + 6) / 115][Stage 104:====================================================>(114 + 1) / 115]                                                                                [Stage 105:======================================>              (84 + 32) / 116][Stage 105:===========================================>         (95 + 21) / 116][Stage 105:=================================================>   (108 + 8) / 116][Stage 105:==================================================>  (110 + 6) / 116][Stage 105:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.250375678 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  O R  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR   partitionIndex = 118 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.372006119 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 106:================================>                    (72 + 46) / 118][Stage 106:=====================================>               (84 + 34) / 118][Stage 106:=============================================>      (104 + 14) / 118][Stage 106:===================================================> (115 + 3) / 118]                                                                                [Stage 107:================================>                    (73 + 46) / 119][Stage 107:==================================>                  (78 + 41) / 119][Stage 107:========================================>            (90 + 29) / 119][Stage 107:==============================================>     (107 + 12) / 119][Stage 107:===================================================> (115 + 4) / 119][Stage 107:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.015815908 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  O R  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 107  OR  p artitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397542631 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (58 + 55) / 113][Stage 108:==============================>                      (64 + 49) / 113][Stage 108:=====================================>               (79 + 34) / 113][Stage 108:==============================================>     (102 + 11) / 113][Stage 108:===================================================> (109 + 4) / 113]                                                                                [Stage 109:============================>                        (62 + 52) / 114][Stage 109:=====================================>               (80 + 34) / 114][Stage 109:==============================================>     (101 + 13) / 114][Stage 109:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.557258952 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  O R  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 115  OR  p artitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.35316969 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=====================================>               (80 + 33) / 113][Stage 110:=========================================>           (88 + 25) / 113][Stage 110:==============================================>     (100 + 13) / 113][Stage 110:===================================================> (110 + 3) / 113][Stage 110:====================================================>(111 + 2) / 113]                                                                                [Stage 111:===================================>                 (76 + 38) / 114][Stage 111:=======================================>             (85 + 29) / 114][Stage 111:===========================================>         (93 + 21) / 114][Stage 111:==============================================>     (101 + 13) / 114][Stage 111:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.053776615 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  185  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 19 9  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 202   OR  partitionIndex = 214 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39972088 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (62 + 59) / 121][Stage 112:===============================>                     (73 + 48) / 121][Stage 112:=======================================>             (91 + 30) / 121][Stage 112:==============================================>     (109 + 12) / 121][Stage 112:====================================================>(120 + 1) / 121]                                                                                [Stage 113:==========================>                          (61 + 61) / 122][Stage 113:=============================>                       (67 + 55) / 122][Stage 113:=================================>                   (78 + 44) / 122][Stage 113:============================================>       (104 + 18) / 122][Stage 113:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.869990027 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  192  OR  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 19 5  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 235   OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.404246954 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==========================>                          (60 + 61) / 121][Stage 114:==========================>                          (61 + 60) / 121][Stage 114:===============================>                     (73 + 48) / 121][Stage 114:=========================================>           (94 + 27) / 121][Stage 114:==================================================>  (116 + 5) / 121][Stage 114:====================================================>(120 + 1) / 121]                                                                                [Stage 115:==========================>                          (61 + 61) / 122][Stage 115:============================>                        (66 + 56) / 122][Stage 115:===============================>                     (73 + 49) / 122][Stage 115:============================================>       (104 + 18) / 122][Stage 115:==================================================>  (117 + 5) / 122][Stage 115:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.730565044 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 14 7  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 150   OR  partitionIndex = 162 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.352673892 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 116:=================================>                   (72 + 41) / 113][Stage 116:=======================================>             (84 + 29) / 113][Stage 116:============================================>        (94 + 19) / 113][Stage 116:===============================================>    (103 + 10) / 113][Stage 116:====================================================>(111 + 2) / 113]                                                                                [Stage 117:=================================>                   (73 + 41) / 114][Stage 117:========================================>            (87 + 27) / 114][Stage 117:============================================>        (96 + 18) / 114][Stage 117:=================================================>   (106 + 8) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.976028134 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 20 0  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214   OR  partitionIndex = 215 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402387551 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 61) / 121][Stage 118:===============================>                     (73 + 48) / 121][Stage 118:==========================================>          (96 + 25) / 121][Stage 118:==================================================>  (116 + 5) / 121]                                                                                [Stage 119:===========================>                         (63 + 59) / 122][Stage 119:==============================>                      (70 + 52) / 122][Stage 119:=======================================>             (91 + 31) / 122][Stage 119:==============================================>     (110 + 12) / 122][Stage 119:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.583390527 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 21 2  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226   OR  partitionIndex = 227 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 227 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.375642819 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 120:================================>                    (73 + 45) / 118][Stage 120:===================================>                 (79 + 39) / 118][Stage 120:============================================>        (98 + 20) / 118][Stage 120:=================================================>   (110 + 8) / 118]                                                                                [Stage 121:=================================>                   (75 + 44) / 119][Stage 121:=====================================>               (84 + 35) / 119][Stage 121:==========================================>          (96 + 23) / 119][Stage 121:=================================================>   (112 + 7) / 119][Stage 121:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.487505852 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 19 1  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 205   OR  partitionIndex = 206 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 206 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.381523696 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (58 + 55) / 113][Stage 122:=============================>                       (63 + 50) / 113][Stage 122:==================================>                  (73 + 40) / 113][Stage 122:============================================>        (95 + 18) / 113][Stage 122:==================================================>  (108 + 5) / 113]                                                                                [Stage 123:============================>                        (61 + 53) / 114][Stage 123:=================================>                   (73 + 41) / 114][Stage 123:==========================================>          (91 + 23) / 114][Stage 123:==============================================>     (103 + 11) / 114][Stage 123:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.420364138 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  130  OR  partitionIndex = 131  OR  partitionIndex = 144  OR  partitionIndex = 14 5  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159   OR  partitionIndex = 173 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.40732925 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 124:================================>                    (72 + 46) / 118][Stage 124:=================================>                   (74 + 44) / 118][Stage 124:=====================================>               (84 + 34) / 118][Stage 124:===========================================>         (96 + 22) / 118][Stage 124:=================================================>   (111 + 7) / 118]                                                                                [Stage 125:================================>                    (74 + 45) / 119][Stage 125:===================================>                 (80 + 39) / 119][Stage 125:==========================================>          (95 + 24) / 119][Stage 125:==============================================>     (107 + 12) / 119][Stage 125:==================================================>  (114 + 5) / 119][Stage 125:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.82774154 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 16 1  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175   OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.353867982 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=================================>                   (72 + 41) / 113][Stage 126:======================================>              (83 + 30) / 113][Stage 126:===========================================>         (93 + 20) / 113][Stage 126:================================================>    (104 + 9) / 113][Stage 126:==================================================>  (108 + 5) / 113]                                                                                [Stage 127:=======================================>             (86 + 28) / 114][Stage 127:============================================>        (96 + 18) / 114][Stage 127:=================================================>   (106 + 8) / 114][Stage 127:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.911598267 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  O R  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47  OR  pa rtitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.383319085 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=============================>                       (65 + 50) / 115][Stage 128:=================================>                   (73 + 42) / 115][Stage 128:=========================================>           (91 + 24) / 115][Stage 128:===============================================>    (104 + 11) / 115][Stage 128:====================================================>(113 + 2) / 115]                                                                                [Stage 129:===============================>                     (69 + 47) / 116][Stage 129:=====================================>               (82 + 34) / 116][Stage 129:========================================>            (88 + 28) / 116][Stage 129:=============================================>      (102 + 14) / 116][Stage 129:==================================================>  (110 + 6) / 116][Stage 129:==================================================>  (111 + 5) / 116][Stage 129:===================================================> (113 + 3) / 116][Stage 129:====================================================>(114 + 2) / 116][Stage 129:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.249180633 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 12 0  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 135   OR  partitionIndex = 136 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 135  OR  partitionIndex = 136 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.406461672 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 130:============================>                        (64 + 56) / 120][Stage 130:==================================>                  (78 + 42) / 120][Stage 130:===========================================>        (100 + 20) / 120][Stage 130:=================================================>   (111 + 9) / 120][Stage 130:====================================================>(118 + 2) / 120]                                                                                [Stage 131:==========================>                          (61 + 60) / 121][Stage 131:=============================>                       (67 + 54) / 121][Stage 131:===================================>                 (81 + 40) / 121][Stage 131:===========================================>         (99 + 22) / 121][Stage 131:=================================================>   (114 + 7) / 121][Stage 131:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.316828794 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 18 8  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 203   OR  partitionIndex = 204 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 203  OR  partitionIndex = 204 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.367774506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==============================>                      (66 + 49) / 115][Stage 132:===================================>                 (78 + 37) / 115][Stage 132:===========================================>         (94 + 21) / 115][Stage 132:================================================>    (106 + 9) / 115][Stage 132:====================================================>(113 + 2) / 115][Stage 132:====================================================>(114 + 1) / 115]                                                                                [Stage 133:================================>                    (71 + 45) / 116][Stage 133:=====================================>               (82 + 34) / 116][Stage 133:===========================================>         (95 + 21) / 116][Stage 133:=================================================>   (109 + 7) / 116][Stage 133:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.175714006 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  O R  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  pa rtitionIndex = 84 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.396043626 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (63 + 57) / 120][Stage 134:==================================>                  (77 + 43) / 120][Stage 134:=========================================>           (94 + 26) / 120][Stage 134:===================================================> (117 + 3) / 120]                                                                                [Stage 135:============================>                        (64 + 57) / 121][Stage 135:==================================>                  (78 + 43) / 121][Stage 135:==========================================>          (98 + 23) / 121][Stage 135:===================================================> (118 + 3) / 121][Stage 135:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.898622377 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102   OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 117  OR   partitionIndex = 118 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 117  OR  partitionIndex = 118 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.40406033 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 60) / 120][Stage 136:=============================>                       (66 + 54) / 120][Stage 136:===================================>                 (81 + 39) / 120][Stage 136:===============================================>    (110 + 10) / 120]                                                                                [Stage 137:==========================>                          (61 + 60) / 121][Stage 137:==============================>                      (70 + 51) / 121][Stage 137:======================================>              (87 + 34) / 121][Stage 137:============================================>       (103 + 18) / 121][Stage 137:==================================================>  (115 + 6) / 121][Stage 137:===================================================> (118 + 3) / 121][Stage 137:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.415431319 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 21 0  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 225   OR  partitionIndex = 226 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 225  OR  partitionIndex = 226 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.368789653 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (72 + 46) / 118][Stage 138:=================================>                   (74 + 44) / 118][Stage 138:========================================>            (91 + 27) / 118][Stage 138:===============================================>    (108 + 10) / 118][Stage 138:====================================================>(116 + 2) / 118]                                                                                [Stage 139:================================>                    (73 + 46) / 119][Stage 139:==================================>                  (77 + 42) / 119][Stage 139:========================================>            (91 + 28) / 119][Stage 139:==============================================>     (107 + 12) / 119][Stage 139:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.281452816 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  O R  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  pa rtitionIndex = 90 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.380210286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (59 + 54) / 113][Stage 140:=============================>                       (62 + 51) / 113][Stage 140:===================================>                 (75 + 38) / 113][Stage 140:=========================================>           (89 + 24) / 113][Stage 140:===============================================>    (103 + 10) / 113]                                                                                [Stage 141:===========================>                         (60 + 54) / 114][Stage 141:================================>                    (69 + 45) / 114][Stage 141:======================================>              (82 + 32) / 114][Stage 141:=============================================>       (98 + 16) / 114][Stage 141:=================================================>   (107 + 7) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.78132393 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  12  OR  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 27  O R  partitionIndex = 28  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  pa rtitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.403190072 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (60 + 60) / 120][Stage 142:==============================>                      (69 + 51) / 120][Stage 142:======================================>              (87 + 33) / 120][Stage 142:=================================================>   (113 + 7) / 120]                                                                                [Stage 143:==========================>                          (61 + 60) / 121][Stage 143:==============================>                      (69 + 52) / 121][Stage 143:=====================================>               (86 + 35) / 121][Stage 143:=============================================>      (105 + 16) / 121][Stage 143:===================================================> (117 + 4) / 121][Stage 143:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.457310584 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 18 9  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203   OR  partitionIndex = 204 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.331636053 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 144:>                                                      (0 + 0) / 115][Stage 144:=====================================>               (82 + 33) / 115][Stage 144:=========================================>           (90 + 25) / 115][Stage 144:=============================================>      (100 + 15) / 115][Stage 144:=================================================>   (108 + 7) / 115]                                                                                [Stage 145:======================================>              (84 + 32) / 116][Stage 145:===========================================>         (96 + 20) / 116][Stage 145:==============================================>     (103 + 13) / 116]                                                                                Time elapsed: 2.713330835 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 19 5  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198   OR  partitionIndex = 210 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397080118 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 60) / 120][Stage 146:=================================>                   (75 + 45) / 120][Stage 146:=========================================>           (95 + 25) / 120][Stage 146:===================================================> (116 + 4) / 120]                                                                                [Stage 147:===========================>                         (63 + 58) / 121][Stage 147:===============================>                     (73 + 48) / 121][Stage 147:===========================================>        (101 + 20) / 121][Stage 147:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.583808595 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 18 0  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203   OR  partitionIndex = 204 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.382859159 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (58 + 55) / 113][Stage 148:=============================>                       (62 + 51) / 113][Stage 148:=================================>                   (72 + 41) / 113][Stage 148:==========================================>          (91 + 22) / 113][Stage 148:==================================================>  (108 + 5) / 113]                                                                                [Stage 149:===========================>                         (60 + 54) / 114][Stage 149:=================================>                   (72 + 42) / 114][Stage 149:=========================================>           (90 + 24) / 114][Stage 149:===================================================> (110 + 4) / 114][Stage 149:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.599893956 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  70  OR  partitionIndex = 71  OR  partitionIndex = 84  OR  partitionIndex = 85  O R  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  pa rtitionIndex = 113 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.404333261 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 60) / 120][Stage 150:=============================>                       (66 + 54) / 120][Stage 150:======================================>              (87 + 33) / 120][Stage 150:==============================================>     (107 + 13) / 120]                                                                                [Stage 151:===========================>                         (63 + 58) / 121][Stage 151:=================================>                   (77 + 44) / 121][Stage 151:========================================>            (93 + 28) / 121][Stage 151:=============================================>      (107 + 14) / 121][Stage 151:====================================================>(119 + 2) / 121][Stage 151:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.314705068 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 22 1  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235   OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402002336 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==========================>                          (60 + 61) / 121][Stage 152:===============================>                     (72 + 49) / 121][Stage 152:======================================>              (88 + 33) / 121][Stage 152:=============================================>      (105 + 16) / 121][Stage 152:====================================================>(119 + 2) / 121]                                                                                [Stage 153:==========================>                          (61 + 61) / 122][Stage 153:============================>                        (65 + 57) / 122][Stage 153:=================================>                   (77 + 45) / 122][Stage 153:===========================================>        (102 + 20) / 122][Stage 153:===================================================> (119 + 3) / 122][Stage 153:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.203756171 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR   partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 45  OR  par titionIndex = 46 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 45  OR  partitionIndex = 46 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.355473467 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===================================>                 (75 + 38) / 113][Stage 154:==========================================>          (90 + 23) / 113][Stage 154:=============================================>       (96 + 17) / 113][Stage 154:===================================================> (109 + 4) / 113]                                                                                [Stage 155:=====================================>               (81 + 33) / 114][Stage 155:=======================================>             (86 + 28) / 114][Stage 155:=============================================>       (98 + 16) / 114][Stage 155:===============================================>    (104 + 10) / 114][Stage 155:=================================================>   (107 + 7) / 114][Stage 155:===================================================> (110 + 4) / 114][Stage 155:===================================================> (111 + 3) / 114][Stage 155:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.898638502 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 14 6  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173   OR  partitionIndex = 174 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402894443 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==========================>                          (60 + 60) / 120][Stage 156:============================>                        (65 + 55) / 120][Stage 156:==================================>                  (77 + 43) / 120][Stage 156:==========================================>          (96 + 24) / 120][Stage 156:=================================================>   (113 + 7) / 120]                                                                                [Stage 157:============================>                        (64 + 57) / 121][Stage 157:==================================>                  (78 + 43) / 121][Stage 157:=========================================>           (95 + 26) / 121][Stage 157:=============================================>      (105 + 16) / 121][Stage 157:====================================================>(119 + 2) / 121][Stage 157:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.270810384 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 13 6  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150   OR  partitionIndex = 151 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.387617501 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (58 + 55) / 113][Stage 158:================================>                    (70 + 43) / 113][Stage 158:=======================================>             (85 + 28) / 113][Stage 158:===============================================>    (103 + 10) / 113][Stage 158:====================================================>(111 + 2) / 113]                                                                                [Stage 159:===========================>                         (60 + 54) / 114][Stage 159:================================>                    (69 + 45) / 114][Stage 159:========================================>            (87 + 27) / 114][Stage 159:===============================================>    (104 + 10) / 114][Stage 159:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.664806357 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  162  OR  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 16 5  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179   OR  partitionIndex = 180 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179  OR  partitionIndex = 180 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.36900651 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (72 + 46) / 118][Stage 160:==================================>                  (76 + 42) / 118][Stage 160:=====================================>               (83 + 35) / 118][Stage 160:=======================================>             (89 + 29) / 118][Stage 160:================================================>    (109 + 9) / 118][Stage 160:===================================================> (114 + 4) / 118]                                                                                [Stage 161:=================================>                   (76 + 43) / 119][Stage 161:=====================================>               (84 + 35) / 119][Stage 161:===========================================>         (97 + 22) / 119][Stage 161:===============================================>    (109 + 10) / 119][Stage 161:==================================================>  (114 + 5) / 119][Stage 161:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.243175696 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  62  OR  partitionIndex = 63  OR  partitionIndex = 76  OR  partitionIndex = 77  O R  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  pa rtitionIndex = 105 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.338969165 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 162:>                                                      (0 + 0) / 115][Stage 162:======================================>              (84 + 31) / 115][Stage 162:===========================================>         (94 + 21) / 115][Stage 162:==================================================>  (109 + 6) / 115][Stage 162:===================================================> (112 + 3) / 115]                                                                                [Stage 163:======================================>              (85 + 31) / 116][Stage 163:============================================>        (97 + 19) / 116][Stage 163:===============================================>    (106 + 10) / 116][Stage 163:====================================================>(114 + 2) / 116][Stage 163:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.622174543 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  O R  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  pa rtitionIndex = 82 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionIndex = 82 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.35052174 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==================================>                  (74 + 39) / 113][Stage 164:========================================>            (86 + 27) / 113][Stage 164:==============================================>      (99 + 14) / 113][Stage 164:=================================================>   (105 + 8) / 113][Stage 164:===================================================> (110 + 3) / 113]                                                                                [Stage 165:==================================>                  (74 + 40) / 114][Stage 165:======================================>              (83 + 31) / 114][Stage 165:============================================>        (95 + 19) / 114][Stage 165:==============================================>     (101 + 13) / 114][Stage 165:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.113419703 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR   partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  part itionIndex = 46 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.377225856 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (59 + 54) / 113][Stage 166:===============================>                     (67 + 46) / 113][Stage 166:=======================================>             (84 + 29) / 113][Stage 166:=================================================>   (106 + 7) / 113]                                                                                [Stage 167:===========================>                         (60 + 54) / 114][Stage 167:=================================>                   (71 + 43) / 114][Stage 167:=========================================>           (90 + 24) / 114][Stage 167:================================================>    (105 + 9) / 114][Stage 167:===================================================> (111 + 3) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.026663542 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  O R  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 105  OR  p artitionIndex = 106 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 105  OR  partitionIndex = 106 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.399386801 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 168:================================>                    (70 + 45) / 115][Stage 168:========================================>            (87 + 28) / 115][Stage 168:=============================================>      (100 + 15) / 115][Stage 168:==================================================>  (109 + 6) / 115]                                                                                [Stage 169:===============================>                     (69 + 47) / 116][Stage 169:======================================>              (84 + 32) / 116][Stage 169:==============================================>     (103 + 13) / 116][Stage 169:==================================================>  (111 + 5) / 116][Stage 169:====================================================>(114 + 2) / 116][Stage 169:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.378513042 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  122  OR  partitionIndex = 123  OR  partitionIndex = 136  OR  partitionIndex = 13 7  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151   OR  partitionIndex = 165 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.395606992 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 60) / 120][Stage 170:=============================>                       (66 + 54) / 120][Stage 170:======================================>              (87 + 33) / 120][Stage 170:==============================================>     (108 + 12) / 120][Stage 170:====================================================>(118 + 2) / 120]                                                                                [Stage 171:==========================>                          (61 + 60) / 121][Stage 171:=============================>                       (68 + 53) / 121][Stage 171:===================================>                 (81 + 40) / 121][Stage 171:=========================================>           (94 + 27) / 121][Stage 171:==================================================>  (116 + 5) / 121][Stage 171:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.433288894 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  124  OR  partitionIndex = 125  OR  partitionIndex = 152  OR  partitionIndex = 15 3  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 167   OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.347398195 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=====================================>               (81 + 34) / 115][Stage 172:=======================================>             (85 + 30) / 115][Stage 172:=============================================>      (100 + 15) / 115][Stage 172:===================================================> (112 + 3) / 115]                                                                                [Stage 173:======================================>              (85 + 31) / 116][Stage 173:===========================================>         (95 + 21) / 116][Stage 173:=================================================>   (109 + 7) / 116][Stage 173:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.008312064 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 21 6  OR  partitionIndex = 217  OR  partitionIndex = 230  OR  partitionIndex = 231   OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.329989906 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 174:====================================>                (80 + 35) / 115][Stage 174:======================================>              (83 + 32) / 115][Stage 174:=============================================>       (99 + 16) / 115][Stage 174:=================================================>   (107 + 8) / 115]                                                                                [Stage 175:======================================>              (85 + 31) / 116][Stage 175:============================================>        (97 + 19) / 116][Stage 175:==================================================>  (110 + 6) / 116][Stage 175:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.855030313 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  O R  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  pa rtitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.347525958 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=====================================>               (81 + 32) / 113][Stage 176:==========================================>          (90 + 23) / 113][Stage 176:==============================================>      (99 + 14) / 113][Stage 176:==================================================>  (107 + 6) / 113]                                                                                [Stage 177:====================================>                (78 + 36) / 114][Stage 177:=========================================>           (90 + 24) / 114][Stage 177:============================================>        (95 + 19) / 114][Stage 177:==============================================>     (103 + 11) / 114][Stage 177:===============================================>    (104 + 10) / 114][Stage 177:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 6.441840452 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 21 1  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225   OR  partitionIndex = 226 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.350121787 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=================================>                   (71 + 42) / 113][Stage 178:=====================================>               (80 + 33) / 113][Stage 178:==========================================>          (90 + 23) / 113][Stage 178:=============================================>       (97 + 16) / 113][Stage 178:===================================================> (110 + 3) / 113][Stage 178:====================================================>(112 + 1) / 113]                                                                                [Stage 179:=======================================>             (86 + 28) / 114][Stage 179:==========================================>          (92 + 22) / 114][Stage 179:================================================>    (105 + 9) / 114][Stage 179:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.137155289 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 20 6  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233   OR  partitionIndex = 234 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.408481377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=============================>                       (65 + 50) / 115][Stage 180:=====================================>               (81 + 34) / 115][Stage 180:==========================================>          (93 + 22) / 115][Stage 180:===============================================>    (105 + 10) / 115][Stage 180:===================================================> (111 + 4) / 115]                                                                                [Stage 181:==================================>                  (75 + 41) / 116][Stage 181:==========================================>          (93 + 23) / 116][Stage 181:==============================================>     (103 + 13) / 116][Stage 181:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 3.0406454 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  134  OR  partitionIndex = 135  OR  partitionIndex = 148  OR  partitionIndex = 14 9  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163   OR  partitionIndex = 177 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.41637596 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (61 + 59) / 120][Stage 182:=============================>                       (66 + 54) / 120][Stage 182:====================================>                (82 + 38) / 120][Stage 182:===========================================>        (100 + 20) / 120][Stage 182:===================================================> (117 + 3) / 120]                                                                                [Stage 183:==========================>                          (61 + 60) / 121][Stage 183:==============================>                      (69 + 52) / 121][Stage 183:=====================================>               (86 + 35) / 121][Stage 183:==========================================>          (97 + 24) / 121][Stage 183:===============================================>    (111 + 10) / 121][Stage 183:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.90508505 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR   partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  part itionIndex = 35 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.364568092 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=============================>                       (65 + 50) / 115][Stage 184:====================================>                (79 + 36) / 115][Stage 184:===========================================>         (94 + 21) / 115][Stage 184:===============================================>    (104 + 11) / 115][Stage 184:===================================================> (111 + 4) / 115]                                                                                [Stage 185:===============================>                     (69 + 47) / 116][Stage 185:===================================>                 (78 + 38) / 116][Stage 185:========================================>            (89 + 27) / 116][Stage 185:==========================================>          (94 + 22) / 116][Stage 185:==================================================>  (111 + 5) / 116][Stage 185:===================================================> (112 + 4) / 116][Stage 185:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.756137885 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  O R  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  p artitionIndex = 110 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.386645619 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===================================>                 (77 + 38) / 115][Stage 186:==========================================>          (93 + 22) / 115][Stage 186:===============================================>    (104 + 11) / 115][Stage 186:====================================================>(114 + 1) / 115]                                                                                [Stage 187:===============================>                     (68 + 48) / 116][Stage 187:====================================>                (80 + 36) / 116][Stage 187:============================================>        (97 + 19) / 116][Stage 187:=================================================>   (108 + 8) / 116][Stage 187:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.99143052 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  O R  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  pa rtitionIndex = 58 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.387795983 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 188:============================>                        (61 + 52) / 113][Stage 188:==================================>                  (74 + 39) / 113][Stage 188:==========================================>          (91 + 22) / 113][Stage 188:=================================================>   (105 + 8) / 113][Stage 188:===================================================> (109 + 4) / 113]                                                                                [Stage 189:===========================>                         (59 + 55) / 114][Stage 189:============================>                        (61 + 53) / 114][Stage 189:==================================>                  (75 + 39) / 114][Stage 189:===========================================>         (93 + 21) / 114][Stage 189:================================================>    (105 + 9) / 114][Stage 189:===================================================> (110 + 4) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.181581018 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  8  OR  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 23  OR   partitionIndex = 24  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  par titionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397078971 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 61) / 121][Stage 190:============================>                        (64 + 57) / 121][Stage 190:===================================>                 (80 + 41) / 121][Stage 190:==========================================>         (100 + 21) / 121]                                                                                [Stage 191:===========================>                         (64 + 58) / 122][Stage 191:=================================>                   (76 + 46) / 122][Stage 191:===========================================>        (102 + 20) / 122][Stage 191:=================================================>   (114 + 8) / 122][Stage 191:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.650812393 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  6  OR  partitionIndex = 7  OR  partitionIndex = 20  OR  partitionIndex = 21  OR   partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  part itionIndex = 49 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.380221884 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (58 + 55) / 113][Stage 192:==============================>                      (64 + 49) / 113][Stage 192:========================================>            (87 + 26) / 113][Stage 192:==============================================>      (99 + 14) / 113][Stage 192:====================================================>(111 + 2) / 113]                                                                                [Stage 193:===========================>                         (59 + 55) / 114][Stage 193:===============================>                     (68 + 46) / 114][Stage 193:===================================>                 (77 + 37) / 114][Stage 193:=============================================>       (98 + 16) / 114][Stage 193:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 4.257682948 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 15 9  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173   OR  partitionIndex = 174 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.392453461 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=================================>                   (73 + 42) / 115][Stage 194:=======================================>             (86 + 29) / 115][Stage 194:=============================================>       (99 + 16) / 115][Stage 194:==================================================>  (110 + 5) / 115][Stage 194:====================================================>(114 + 1) / 115]                                                                                [Stage 195:===============================>                     (70 + 46) / 116][Stage 195:=====================================>               (81 + 35) / 116][Stage 195:=============================================>       (99 + 17) / 116][Stage 195:=================================================>   (109 + 7) / 116][Stage 195:==================================================>  (111 + 5) / 116][Stage 195:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.196883959 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  132  OR  partitionIndex = 133  OR  partitionIndex = 160  OR  partitionIndex = 16 1  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175   OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.382618494 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 196:================================>                    (72 + 46) / 118][Stage 196:===================================>                 (78 + 40) / 118][Stage 196:=========================================>           (92 + 26) / 118][Stage 196:================================================>    (109 + 9) / 118][Stage 196:====================================================>(117 + 1) / 118]                                                                                [Stage 197:================================>                    (73 + 46) / 119][Stage 197:===================================>                 (80 + 39) / 119][Stage 197:==========================================>          (95 + 24) / 119][Stage 197:===============================================>    (109 + 10) / 119][Stage 197:====================================================>(117 + 2) / 119][Stage 197:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.49969347 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 21 8  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 233   OR  partitionIndex = 234 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 233  OR  partitionIndex = 234 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.365775445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===================================>                 (76 + 39) / 115][Stage 198:========================================>            (88 + 27) / 115][Stage 198:===============================================>    (104 + 11) / 115][Stage 198:====================================================>(114 + 1) / 115]                                                                                [Stage 199:================================>                    (72 + 44) / 116][Stage 199:=====================================>               (83 + 33) / 116][Stage 199:============================================>       (100 + 16) / 116][Stage 199:====================================================>(114 + 2) / 116][Stage 199:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.855408702 seconds
res203: Int = 0

scala> 

scala> :quit

real	11m33.761s
user	12m18.044s
sys	1m33.480s
