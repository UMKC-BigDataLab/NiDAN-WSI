Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 14:52:21 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 14:52:35 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 14:52:35 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 14:52:36 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 14:52:38 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 14:52:49 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524145238-0559).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.368399134 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:==================>                                    (39 + 76) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:======================================>                (81 + 34) / 115][Stage 0:========================================>              (84 + 31) / 115][Stage 0:============================================>          (92 + 23) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:========================>                              (51 + 65) / 116][Stage 1:===========================>                           (59 + 57) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:======================================>                (81 + 35) / 116][Stage 1:=======================================>               (84 + 32) / 116][Stage 1:=============================================>         (97 + 19) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:====================================================>  (111 + 5) / 116]                                                                                Time elapsed: 12.752524645 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  part itionIndex = 19  OR  partitionIndex = 20 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.795468254 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==================>                                    (39 + 74) / 113][Stage 2:=======================>                               (48 + 65) / 113][Stage 2:============================>                          (59 + 54) / 113][Stage 2:==============================>                        (62 + 51) / 113][Stage 2:====================================>                  (74 + 39) / 113][Stage 2:==========================================>            (87 + 26) / 113][Stage 2:==============================================>        (95 + 18) / 113][Stage 2:====================================================>  (108 + 5) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:===========================>                           (58 + 56) / 114][Stage 3:==============================>                        (63 + 51) / 114][Stage 3:================================>                      (67 + 47) / 114][Stage 3:=====================================>                 (77 + 37) / 114][Stage 3:=============================================>         (94 + 20) / 114][Stage 3:===================================================>   (106 + 8) / 114][Stage 3:====================================================>  (108 + 6) / 114][Stage 3:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 5.615460827 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  pa rtitionIndex = 42  OR  partitionIndex = 43 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.783375183 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (57 + 56) / 113][Stage 4:============================>                          (59 + 54) / 113][Stage 4:=============================>                         (61 + 52) / 113][Stage 4:=================================>                     (68 + 45) / 113][Stage 4:=======================================>               (81 + 32) / 113][Stage 4:==============================================>        (95 + 18) / 113][Stage 4:====================================================>  (108 + 5) / 113][Stage 4:======================================================>(111 + 2) / 113]                                                                                [Stage 5:===========================>                           (57 + 57) / 114][Stage 5:===========================>                           (58 + 56) / 114][Stage 5:==============================>                        (64 + 50) / 114][Stage 5:====================================>                  (76 + 38) / 114][Stage 5:============================================>          (92 + 22) / 114][Stage 5:===============================================>       (98 + 16) / 114][Stage 5:====================================================>  (109 + 5) / 114]                                                                                Time elapsed: 4.479496262 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  pa rtitionIndex = 84  OR  partitionIndex = 85 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 84  OR  partitionIndex = 85 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.680344427 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (57 + 56) / 113][Stage 6:============================>                          (58 + 55) / 113][Stage 6:=============================>                         (61 + 52) / 113][Stage 6:====================================>                  (75 + 38) / 113][Stage 6:==========================================>            (88 + 25) / 113][Stage 6:===============================================>       (97 + 16) / 113][Stage 6:=====================================================> (110 + 3) / 113]                                                                                [Stage 7:============================>                          (60 + 54) / 114][Stage 7:=============================>                         (62 + 52) / 114][Stage 7:==================================>                    (72 + 42) / 114][Stage 7:=======================================>               (81 + 33) / 114][Stage 7:============================================>          (92 + 22) / 114][Stage 7:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.303209329 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR   partitionIndex = 138  OR  partitionIndex = 150 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.591458643 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:============================>                          (58 + 55) / 113][Stage 8:============================>                          (59 + 54) / 113][Stage 8:================================>                      (66 + 47) / 113][Stage 8:==========================================>            (87 + 26) / 113][Stage 8:================================================>     (101 + 12) / 113][Stage 8:==================================================>    (104 + 9) / 113][Stage 8:======================================================>(111 + 2) / 113]                                                                                [Stage 9:============================>                          (60 + 54) / 114][Stage 9:===============================>                       (66 + 48) / 114][Stage 9:=======================================>               (82 + 32) / 114][Stage 9:=================================================>    (104 + 10) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.850954202 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR   partitionIndex = 113  OR  partitionIndex = 114 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.586320215 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (57 + 56) / 113][Stage 10:============================>                         (59 + 54) / 113][Stage 10:================================>                     (69 + 44) / 113][Stage 10:=======================================>              (82 + 31) / 113][Stage 10:=============================================>        (95 + 18) / 113][Stage 10:===============================================>     (102 + 11) / 113][Stage 10:===================================================>  (108 + 5) / 113][Stage 10:=====================================================>(112 + 1) / 113]                                                                                [Stage 11:===========================>                          (58 + 56) / 114][Stage 11:==============================>                       (64 + 50) / 114][Stage 11:======================================>               (81 + 33) / 114][Stage 11:=============================================>        (96 + 18) / 114][Stage 11:=================================================>    (105 + 9) / 114][Stage 11:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 4.257614125 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 41  OR  pa rtitionIndex = 55  OR  partitionIndex = 56 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.541680204 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (58 + 55) / 113][Stage 12:============================>                         (59 + 54) / 113][Stage 12:===============================>                      (66 + 47) / 113][Stage 12:=======================================>              (82 + 31) / 113][Stage 12:===============================================>     (102 + 11) / 113]                                                                                [Stage 13:============================>                         (60 + 54) / 114][Stage 13:==============================>                       (65 + 49) / 114][Stage 13:====================================>                 (76 + 38) / 114][Stage 13:===========================================>          (91 + 23) / 114][Stage 13:==================================================>   (106 + 8) / 114][Stage 13:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.795493491 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 47  OR  partitionIndex = 48 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 47  OR  partitionIndex = 48 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.520744727 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (57 + 56) / 113][Stage 14:===========================>                          (58 + 55) / 113][Stage 14:=============================>                        (62 + 51) / 113][Stage 14:======================================>               (81 + 32) / 113][Stage 14:==============================================>       (98 + 15) / 113][Stage 14:===================================================>  (108 + 5) / 113]                                                                                [Stage 15:===========================>                          (59 + 55) / 114][Stage 15:=============================>                        (63 + 51) / 114][Stage 15:=======================================>              (83 + 31) / 114][Stage 15:===============================================>     (102 + 12) / 114][Stage 15:====================================================> (110 + 4) / 114][Stage 15:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.939774876 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219  OR  partitionIndex = 220  OR   partitionIndex = 233  OR  partitionIndex = 234 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 233  OR  partitionIndex = 234 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518098355 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (57 + 56) / 113][Stage 16:===========================>                          (58 + 55) / 113][Stage 16:===============================>                      (65 + 48) / 113][Stage 16:===========================================>          (92 + 21) / 113][Stage 16:====================================================> (109 + 4) / 113]                                                                                [Stage 17:===========================>                          (59 + 55) / 114][Stage 17:================================>                     (68 + 46) / 114][Stage 17:====================================>                 (78 + 36) / 114][Stage 17:=========================================>            (88 + 26) / 114][Stage 17:===============================================>     (102 + 12) / 114][Stage 17:==================================================>   (107 + 7) / 114][Stage 17:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.731774611 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR   partitionIndex = 172  OR  partitionIndex = 180 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.551556833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:============================>                         (60 + 53) / 113][Stage 18:==================================>                   (72 + 41) / 113][Stage 18:=============================================>        (95 + 18) / 113][Stage 18:==================================================>   (106 + 7) / 113][Stage 18:=====================================================>(111 + 2) / 113]                                                                                [Stage 19:===========================>                          (57 + 57) / 114][Stage 19:===========================>                          (59 + 55) / 114][Stage 19:=================================>                    (70 + 44) / 114][Stage 19:==============================================>       (99 + 15) / 114][Stage 19:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.547394879 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 93  OR  pa rtitionIndex = 107  OR  partitionIndex = 108 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.524369628 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (58 + 55) / 113][Stage 20:==============================>                       (63 + 50) / 113][Stage 20:===================================>                  (75 + 38) / 113][Stage 20:========================================>             (84 + 29) / 113][Stage 20:==============================================>      (100 + 13) / 113][Stage 20:====================================================> (110 + 3) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:===========================>                          (59 + 55) / 114][Stage 21:==============================>                       (65 + 49) / 114][Stage 21:==========================================>           (89 + 25) / 114][Stage 21:==============================================>      (101 + 13) / 114][Stage 21:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.704108059 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  pa rtitionIndex = 38  OR  partitionIndex = 39 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.507958481 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:============================>                         (59 + 54) / 113][Stage 22:================================>                     (69 + 44) / 113][Stage 22:==============================================>       (98 + 15) / 113][Stage 22:====================================================> (109 + 4) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:=============================>                        (62 + 52) / 114][Stage 23:=================================>                    (71 + 43) / 114][Stage 23:=============================================>        (96 + 18) / 114][Stage 23:===================================================>  (109 + 5) / 114][Stage 23:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.956946321 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 227  OR  partitionIndex = 228 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 227  OR  partitionIndex = 228 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.523941033 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:============================>                         (60 + 53) / 113][Stage 24:================================>                     (69 + 44) / 113][Stage 24:=======================================>              (83 + 30) / 113][Stage 24:================================================>    (103 + 10) / 113][Stage 24:=====================================================>(112 + 1) / 113]                                                                                [Stage 25:===========================>                          (59 + 55) / 114][Stage 25:===============================>                      (66 + 48) / 114][Stage 25:=======================================>              (83 + 31) / 114][Stage 25:==============================================>       (99 + 15) / 114][Stage 25:===============================================>     (103 + 11) / 114][Stage 25:==================================================>   (106 + 8) / 114][Stage 25:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.070962346 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  pa rtitionIndex = 105  OR  partitionIndex = 106 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483031693 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (58 + 55) / 113][Stage 26:============================>                         (59 + 54) / 113][Stage 26:================================>                     (69 + 44) / 113][Stage 26:==========================================>           (89 + 24) / 113][Stage 26:====================================================> (109 + 4) / 113]                                                                                [Stage 27:============================>                         (60 + 54) / 114][Stage 27:=================================>                    (70 + 44) / 114][Stage 27:========================================>             (86 + 28) / 114][Stage 27:==================================================>   (107 + 7) / 114][Stage 27:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.548911125 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR   partitionIndex = 139  OR  partitionIndex = 140 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.487995106 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:============================>                         (59 + 54) / 113][Stage 28:================================>                     (69 + 44) / 113][Stage 28:==========================================>           (89 + 24) / 113][Stage 28:=================================================>    (104 + 9) / 113][Stage 28:=====================================================>(111 + 2) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:============================>                         (60 + 54) / 114][Stage 29:================================>                     (68 + 46) / 114][Stage 29:======================================>               (81 + 33) / 114][Stage 29:==============================================>      (100 + 14) / 114][Stage 29:====================================================> (111 + 3) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.840799316 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  pa rtitionIndex = 58  OR  partitionIndex = 59 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 58  OR  partitionIndex = 59 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.515177157 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:============================>                         (59 + 54) / 113][Stage 30:============================>                         (60 + 53) / 113][Stage 30:====================================>                 (76 + 37) / 113][Stage 30:==============================================>       (98 + 15) / 113][Stage 30:=====================================================>(111 + 2) / 113]                                                                                [Stage 31:============================>                         (61 + 53) / 114][Stage 31:===================================>                  (74 + 40) / 114][Stage 31:=============================================>        (97 + 17) / 114][Stage 31:===============================================>     (103 + 11) / 114][Stage 31:====================================================> (110 + 4) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.615925634 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 70  OR  pa rtitionIndex = 83  OR  partitionIndex = 84 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 83  OR  partitionIndex = 84 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493257761 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (58 + 55) / 113][Stage 32:============================>                         (60 + 53) / 113][Stage 32:======================================>               (81 + 32) / 113][Stage 32:==============================================>       (98 + 15) / 113][Stage 32:==================================================>   (105 + 8) / 113][Stage 32:=====================================================>(111 + 2) / 113]                                                                                [Stage 33:============================>                         (60 + 54) / 114][Stage 33:===============================>                      (67 + 47) / 114][Stage 33:==========================================>           (90 + 24) / 114][Stage 33:================================================>    (104 + 10) / 114][Stage 33:====================================================> (110 + 4) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.880832237 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  pa rtitionIndex = 81  OR  partitionIndex = 82 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.490406129 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (58 + 55) / 113][Stage 34:============================>                         (60 + 53) / 113][Stage 34:==================================>                   (73 + 40) / 113][Stage 34:==============================================>       (97 + 16) / 113][Stage 34:====================================================> (109 + 4) / 113]                                                                                [Stage 35:===========================>                          (59 + 55) / 114][Stage 35:=================================>                    (70 + 44) / 114][Stage 35:============================================>         (93 + 21) / 114][Stage 35:=====================================================>(112 + 2) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.497019949 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 122  OR   partitionIndex = 135  OR  partitionIndex = 136 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 135  OR  partitionIndex = 136 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.517682741 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (58 + 55) / 113][Stage 36:==============================>                       (63 + 50) / 113][Stage 36:======================================>               (81 + 32) / 113][Stage 36:===============================================>     (102 + 11) / 113][Stage 36:====================================================> (110 + 3) / 113]                                                                                [Stage 37:===========================>                          (59 + 55) / 114][Stage 37:================================>                     (69 + 45) / 114][Stage 37:========================================>             (86 + 28) / 114][Stage 37:================================================>    (104 + 10) / 114][Stage 37:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.557171354 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  pa rtitionIndex = 110  OR  partitionIndex = 111 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 110  OR  partitionIndex = 111 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478052476 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (58 + 55) / 113][Stage 38:===================================>                  (74 + 39) / 113][Stage 38:============================================>         (93 + 20) / 113][Stage 38:====================================================> (109 + 4) / 113]                                                                                [Stage 39:===========================>                          (59 + 55) / 114][Stage 39:================================>                     (68 + 46) / 114][Stage 39:=========================================>            (87 + 27) / 114][Stage 39:==================================================>   (106 + 8) / 114][Stage 39:===================================================>  (109 + 5) / 114][Stage 39:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.622762729 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  pa rtitionIndex = 43  OR  partitionIndex = 57 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479831275 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:============================>                         (59 + 54) / 113][Stage 40:================================>                     (67 + 46) / 113][Stage 40:========================================>             (84 + 29) / 113][Stage 40:===================================================>  (107 + 6) / 113][Stage 40:=====================================================>(111 + 2) / 113]                                                                                [Stage 41:===========================>                          (59 + 55) / 114][Stage 41:==============================>                       (64 + 50) / 114][Stage 41:======================================>               (81 + 33) / 114][Stage 41:==============================================>       (98 + 16) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.220105527 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  p artitionIndex = 103  OR  partitionIndex = 117 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478882599 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (58 + 55) / 113][Stage 42:=============================>                        (62 + 51) / 113][Stage 42:======================================>               (81 + 32) / 113][Stage 42:===============================================>     (101 + 12) / 113]                                                                                [Stage 43:============================>                         (60 + 54) / 114][Stage 43:=============================>                        (63 + 51) / 114][Stage 43:==========================================>           (90 + 24) / 114][Stage 43:================================================>    (104 + 10) / 114][Stage 43:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.344713071 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 199  OR  partitionIndex = 200 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447192799 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:============================>                         (59 + 54) / 113][Stage 44:================================>                     (68 + 45) / 113][Stage 44:=====================================>                (79 + 34) / 113][Stage 44:===============================================>     (101 + 12) / 113][Stage 44:=====================================================>(112 + 1) / 113]                                                                                [Stage 45:============================>                         (60 + 54) / 114][Stage 45:=============================>                        (63 + 51) / 114][Stage 45:=====================================>                (79 + 35) / 114][Stage 45:==============================================>       (99 + 15) / 114][Stage 45:====================================================> (110 + 4) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.405012515 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 143  OR  partitionIndex = 144 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460117717 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:============================>                         (59 + 54) / 113][Stage 46:===============================>                      (66 + 47) / 113][Stage 46:==========================================>           (88 + 25) / 113][Stage 46:===================================================>  (108 + 5) / 113]                                                                                [Stage 47:============================>                         (60 + 54) / 114][Stage 47:================================>                     (68 + 46) / 114][Stage 47:============================================>         (93 + 21) / 114][Stage 47:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.116721577 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133  OR  partitionIndex = 134  OR   partitionIndex = 147  OR  partitionIndex = 148 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 147  OR  partitionIndex = 148 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.550215075 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (58 + 55) / 113][Stage 48:===============================>                      (65 + 48) / 113][Stage 48:=======================================>              (82 + 31) / 113][Stage 48:==============================================>       (98 + 15) / 113][Stage 48:=====================================================>(112 + 1) / 113]                                                                                [Stage 49:===========================>                          (58 + 56) / 114][Stage 49:=============================>                        (63 + 51) / 114][Stage 49:=====================================>                (80 + 34) / 114][Stage 49:==============================================>      (101 + 13) / 114][Stage 49:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.413861488 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR   partitionIndex = 207  OR  partitionIndex = 208 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437049464 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (58 + 55) / 113][Stage 50:============================>                         (60 + 53) / 113][Stage 50:====================================>                 (77 + 36) / 113][Stage 50:==============================================>       (97 + 16) / 113][Stage 50:====================================================> (109 + 4) / 113]                                                                                [Stage 51:=============================>                        (62 + 52) / 114][Stage 51:=================================>                    (71 + 43) / 114][Stage 51:==========================================>           (90 + 24) / 114][Stage 51:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.137280786 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR   partitionIndex = 147  OR  partitionIndex = 148 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422644271 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:============================>                         (59 + 54) / 113][Stage 52:==============================>                       (64 + 49) / 113][Stage 52:====================================>                 (77 + 36) / 113][Stage 52:============================================>         (94 + 19) / 113][Stage 52:=====================================================>(111 + 2) / 113]                                                                                [Stage 53:=============================>                        (63 + 51) / 114][Stage 53:===================================>                  (75 + 39) / 114][Stage 53:=============================================>        (95 + 19) / 114][Stage 53:====================================================> (111 + 3) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.434915058 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 196  OR  partitionIndex = 197 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 196  OR  partitionIndex = 197 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446833009 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:============================>                         (59 + 54) / 113][Stage 54:=============================>                        (61 + 52) / 113][Stage 54:======================================>               (81 + 32) / 113][Stage 54:==============================================>       (97 + 16) / 113][Stage 54:===================================================>  (107 + 6) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:===========================>                          (59 + 55) / 114][Stage 55:==================================>                   (72 + 42) / 114][Stage 55:=======================================>              (84 + 30) / 114][Stage 55:===================================================>  (108 + 6) / 114][Stage 55:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.445593513 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  pa rtitionIndex = 27  OR  partitionIndex = 28 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 28 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433621955 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (58 + 55) / 113][Stage 56:============================>                         (60 + 53) / 113][Stage 56:================================>                     (67 + 46) / 113][Stage 56:========================================>             (85 + 28) / 113][Stage 56:===============================================>      (99 + 14) / 113][Stage 56:====================================================> (109 + 4) / 113]                                                                                [Stage 57:===========================>                          (58 + 56) / 114][Stage 57:==============================>                       (64 + 50) / 114][Stage 57:=======================================>              (83 + 31) / 114][Stage 57:==============================================>      (101 + 13) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.615150281 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR   partitionIndex = 135  OR  partitionIndex = 136 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441175123 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:============================>                         (59 + 54) / 113][Stage 58:================================>                     (69 + 44) / 113][Stage 58:==========================================>           (88 + 25) / 113][Stage 58:===============================================>     (102 + 11) / 113]                                                                                [Stage 59:============================>                         (61 + 53) / 114][Stage 59:=================================>                    (70 + 44) / 114][Stage 59:============================================>         (93 + 21) / 114][Stage 59:=================================================>    (105 + 9) / 114][Stage 59:====================================================> (111 + 3) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.440065753 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  pa rtitionIndex = 59  OR  partitionIndex = 60 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438802729 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (58 + 55) / 113][Stage 60:============================>                         (60 + 53) / 113][Stage 60:===================================>                  (75 + 38) / 113][Stage 60:=============================================>        (96 + 17) / 113][Stage 60:====================================================> (109 + 4) / 113]                                                                                [Stage 61:============================>                         (60 + 54) / 114][Stage 61:=================================>                    (71 + 43) / 114][Stage 61:=============================================>        (95 + 19) / 114][Stage 61:===================================================>  (109 + 5) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.45524876 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 23  OR  partitionIndex = 24 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436098336 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (58 + 55) / 113][Stage 62:==============================>                       (63 + 50) / 113][Stage 62:====================================>                 (76 + 37) / 113][Stage 62:===============================================>      (99 + 14) / 113][Stage 62:====================================================> (110 + 3) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:===========================>                          (59 + 55) / 114][Stage 63:=================================>                    (70 + 44) / 114][Stage 63:=======================================>              (83 + 31) / 114][Stage 63:==============================================>       (99 + 15) / 114][Stage 63:===================================================>  (108 + 6) / 114][Stage 63:====================================================> (111 + 3) / 114][Stage 63:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.001570675 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR   partitionIndex = 171  OR  partitionIndex = 172 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448790955 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (58 + 55) / 113][Stage 64:=============================>                        (62 + 51) / 113][Stage 64:======================================>               (80 + 33) / 113][Stage 64:===========================================>          (92 + 21) / 113][Stage 64:====================================================> (109 + 4) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:============================>                         (60 + 54) / 114][Stage 65:=============================>                        (63 + 51) / 114][Stage 65:=======================================>              (83 + 31) / 114][Stage 65:=================================================>    (105 + 9) / 114][Stage 65:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.411982749 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  pa rtitionIndex = 69  OR  partitionIndex = 83 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439203435 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (58 + 55) / 113][Stage 66:=============================>                        (62 + 51) / 113][Stage 66:===================================>                  (74 + 39) / 113][Stage 66:===========================================>          (91 + 22) / 113][Stage 66:====================================================> (109 + 4) / 113][Stage 66:=====================================================>(112 + 1) / 113]                                                                                [Stage 67:===========================>                          (59 + 55) / 114][Stage 67:=============================>                        (62 + 52) / 114][Stage 67:=====================================>                (80 + 34) / 114][Stage 67:==============================================>       (99 + 15) / 114][Stage 67:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.473388993 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  pa rtitionIndex = 109  OR  partitionIndex = 110 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417321615 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:=============================>                        (61 + 52) / 113][Stage 68:================================>                     (68 + 45) / 113][Stage 68:=========================================>            (87 + 26) / 113][Stage 68:====================================================> (109 + 4) / 113]                                                                                [Stage 69:============================>                         (60 + 54) / 114][Stage 69:=================================>                    (70 + 44) / 114][Stage 69:=========================================>            (88 + 26) / 114][Stage 69:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.211309194 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  pa rtitionIndex = 90  OR  partitionIndex = 91 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406580496 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (59 + 54) / 113][Stage 70:==============================>                       (64 + 49) / 113][Stage 70:====================================>                 (76 + 37) / 113][Stage 70:===================================================>  (107 + 6) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:============================>                         (60 + 54) / 114][Stage 71:==============================>                       (64 + 50) / 114][Stage 71:=====================================>                (80 + 34) / 114][Stage 71:===================================================>  (108 + 6) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.301122688 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  pa rtitionIndex = 55  OR  partitionIndex = 56 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 55  OR  partitionIndex = 56 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407839535 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (58 + 55) / 113][Stage 72:============================>                         (59 + 54) / 113][Stage 72:=================================>                    (70 + 43) / 113][Stage 72:===========================================>          (91 + 22) / 113][Stage 72:=====================================================>(111 + 2) / 113]                                                                                [Stage 73:===========================>                          (59 + 55) / 114][Stage 73:=============================>                        (62 + 52) / 114][Stage 73:===================================>                  (74 + 40) / 114][Stage 73:==============================================>      (100 + 14) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.886866643 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 40  OR  pa rtitionIndex = 53  OR  partitionIndex = 54 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 53  OR  partitionIndex = 54 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408754676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (58 + 55) / 113][Stage 74:============================>                         (60 + 53) / 113][Stage 74:====================================>                 (76 + 37) / 113][Stage 74:==========================================>           (88 + 25) / 113][Stage 74:===================================================>  (108 + 5) / 113][Stage 74:====================================================> (110 + 3) / 113]                                                                                [Stage 75:=============================>                        (62 + 52) / 114][Stage 75:====================================>                 (77 + 37) / 114][Stage 75:==============================================>       (99 + 15) / 114][Stage 75:====================================================> (110 + 4) / 114][Stage 75:====================================================> (111 + 3) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.283517298 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR   partitionIndex = 181  OR  partitionIndex = 195 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419950098 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:=============================>                        (62 + 51) / 113][Stage 76:=================================>                    (71 + 42) / 113][Stage 76:=============================================>        (96 + 17) / 113][Stage 76:===================================================>  (108 + 5) / 113]                                                                                [Stage 77:============================>                         (60 + 54) / 114][Stage 77:=================================>                    (70 + 44) / 114][Stage 77:=======================================>              (84 + 30) / 114][Stage 77:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.185226598 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR   partitionIndex = 198  OR  partitionIndex = 210 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421273337 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (58 + 55) / 113][Stage 78:=============================>                        (61 + 52) / 113][Stage 78:==================================>                   (72 + 41) / 113][Stage 78:=============================================>        (95 + 18) / 113]                                                                                [Stage 79:============================>                         (60 + 54) / 114][Stage 79:=================================>                    (71 + 43) / 114][Stage 79:===========================================>          (92 + 22) / 114][Stage 79:====================================================> (110 + 4) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.255614587 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR   partitionIndex = 163  OR  partitionIndex = 177 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41531493 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (58 + 55) / 113][Stage 80:=============================>                        (62 + 51) / 113][Stage 80:===================================>                  (75 + 38) / 113][Stage 80:============================================>         (93 + 20) / 113][Stage 80:===================================================>  (107 + 6) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:===========================>                          (59 + 55) / 114][Stage 81:==============================>                       (65 + 49) / 114][Stage 81:======================================>               (81 + 33) / 114][Stage 81:==============================================>       (98 + 16) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.269144576 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR   partitionIndex = 139  OR  partitionIndex = 140 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.482816612 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:============================>                         (59 + 54) / 113][Stage 82:================================>                     (68 + 45) / 113][Stage 82:=======================================>              (82 + 31) / 113][Stage 82:===============================================>     (101 + 12) / 113][Stage 82:===================================================>  (108 + 5) / 113]                                                                                [Stage 83:============================>                         (60 + 54) / 114][Stage 83:================================>                     (68 + 46) / 114][Stage 83:=======================================>              (84 + 30) / 114][Stage 83:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.312862453 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  pa rtitionIndex = 79  OR  partitionIndex = 80 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400310959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:============================>                         (59 + 54) / 113][Stage 84:=============================>                        (62 + 51) / 113][Stage 84:=====================================>                (79 + 34) / 113][Stage 84:=================================================>    (104 + 9) / 113][Stage 84:====================================================> (110 + 3) / 113]                                                                                [Stage 85:===========================>                          (59 + 55) / 114][Stage 85:=================================>                    (71 + 43) / 114][Stage 85:=========================================>            (88 + 26) / 114][Stage 85:==================================================>   (106 + 8) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.411836473 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 147  OR  partitionIndex = 148 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417588991 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (58 + 55) / 113][Stage 86:=============================>                        (62 + 51) / 113][Stage 86:===================================>                  (74 + 39) / 113][Stage 86:==========================================>           (88 + 25) / 113][Stage 86:===================================================>  (107 + 6) / 113][Stage 86:=====================================================>(112 + 1) / 113]                                                                                [Stage 87:===========================>                          (59 + 55) / 114][Stage 87:==============================>                       (65 + 49) / 114][Stage 87:=======================================>              (83 + 31) / 114][Stage 87:==============================================>      (100 + 14) / 114][Stage 87:=====================================================>(112 + 2) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.599754779 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  pa rtitionIndex = 39  OR  partitionIndex = 53 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405536794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:==================================>                   (73 + 40) / 113][Stage 88:===========================================>          (90 + 23) / 113][Stage 88:===================================================>  (108 + 5) / 113][Stage 88:=====================================================>(112 + 1) / 113]                                                                                [Stage 89:===========================>                          (59 + 55) / 114][Stage 89:=================================>                    (71 + 43) / 114][Stage 89:======================================>               (82 + 32) / 114][Stage 89:==============================================>       (99 + 15) / 114][Stage 89:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.448865557 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  pa rtitionIndex = 30  OR  partitionIndex = 31 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397839868 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (58 + 55) / 113][Stage 90:==============================>                       (63 + 50) / 113][Stage 90:====================================>                 (77 + 36) / 113][Stage 90:==============================================>      (100 + 13) / 113][Stage 90:====================================================> (110 + 3) / 113]                                                                                [Stage 91:============================>                         (60 + 54) / 114][Stage 91:==============================>                       (65 + 49) / 114][Stage 91:==================================>                   (73 + 41) / 114][Stage 91:============================================>         (94 + 20) / 114][Stage 91:===================================================>  (109 + 5) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.473310249 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 100  OR  p artitionIndex = 113  OR  partitionIndex = 114 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 113  OR  partitionIndex = 114 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404506198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (58 + 55) / 113][Stage 92:==============================>                       (63 + 50) / 113][Stage 92:====================================>                 (76 + 37) / 113][Stage 92:===============================================>     (101 + 12) / 113][Stage 92:====================================================> (110 + 3) / 113]                                                                                [Stage 93:============================>                         (60 + 54) / 114][Stage 93:===============================>                      (66 + 48) / 114][Stage 93:======================================>               (82 + 32) / 114][Stage 93:===============================================>     (103 + 11) / 114][Stage 93:====================================================> (110 + 4) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.381441542 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 19  OR  partitionIndex = 20 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399236569 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (58 + 55) / 113][Stage 94:=============================>                        (62 + 51) / 113][Stage 94:===================================>                  (74 + 39) / 113][Stage 94:===============================================>     (101 + 12) / 113][Stage 94:=====================================================>(112 + 1) / 113]                                                                                [Stage 95:=============================>                        (62 + 52) / 114][Stage 95:===================================>                  (74 + 40) / 114][Stage 95:==============================================>      (101 + 13) / 114][Stage 95:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.452375014 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51  OR  pa rtitionIndex = 52  OR  partitionIndex = 60 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406864678 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:============================>                         (59 + 54) / 113][Stage 96:================================>                     (68 + 45) / 113][Stage 96:==========================================>           (89 + 24) / 113][Stage 96:==================================================>   (106 + 7) / 113]                                                                                [Stage 97:===========================>                          (59 + 55) / 114][Stage 97:==================================>                   (72 + 42) / 114][Stage 97:=========================================>            (88 + 26) / 114][Stage 97:==================================================>   (106 + 8) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.272706076 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86  OR  partitionIndex = 98  OR  pa rtitionIndex = 99  OR  partitionIndex = 113 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40052119 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:============================>                         (60 + 53) / 113][Stage 98:================================>                     (69 + 44) / 113][Stage 98:=========================================>            (86 + 27) / 113][Stage 98:===============================================>     (101 + 12) / 113][Stage 98:=====================================================>(112 + 1) / 113]                                                                                [Stage 99:=============================>                        (62 + 52) / 114][Stage 99:==============================>                       (65 + 49) / 114][Stage 99:=======================================>              (83 + 31) / 114][Stage 99:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.209519038 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  pa rtitionIndex = 90  OR  partitionIndex = 102 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413510489 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:============================>                        (60 + 53) / 113][Stage 100:===============================>                     (68 + 45) / 113][Stage 100:========================================>            (87 + 26) / 113][Stage 100:===================================================> (110 + 3) / 113]                                                                                [Stage 101:============================>                        (61 + 53) / 114][Stage 101:===================================>                 (77 + 37) / 114][Stage 101:==============================================>     (102 + 12) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.14563162 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  pa rtitionIndex = 94  OR  partitionIndex = 95 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39049101 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (59 + 54) / 113][Stage 102:===============================>                     (68 + 45) / 113][Stage 102:=======================================>             (85 + 28) / 113][Stage 102:===============================================>    (103 + 10) / 113]                                                                                [Stage 103:===========================>                         (60 + 54) / 114][Stage 103:===============================>                     (67 + 47) / 114][Stage 103:==============================================>      (99 + 15) / 114][Stage 103:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.042070029 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 96  OR  pa rtitionIndex = 109  OR  partitionIndex = 110 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 109  OR  partitionIndex = 110 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38547008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:============================>                        (60 + 53) / 113][Stage 104:================================>                    (70 + 43) / 113][Stage 104:=========================================>           (89 + 24) / 113][Stage 104:==================================================>  (107 + 6) / 113]                                                                                [Stage 105:============================>                        (61 + 53) / 114][Stage 105:==================================>                  (75 + 39) / 114][Stage 105:===========================================>         (94 + 20) / 114][Stage 105:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.182182182 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  pa rtitionIndex = 46  OR  partitionIndex = 47 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 46  OR  partitionIndex = 47 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411055898 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (59 + 54) / 113][Stage 106:=================================>                   (71 + 42) / 113][Stage 106:==============================================>     (100 + 13) / 113][Stage 106:===================================================> (110 + 3) / 113]                                                                                [Stage 107:============================>                        (61 + 53) / 114][Stage 107:===============================>                     (67 + 47) / 114][Stage 107:=============================================>       (97 + 17) / 114][Stage 107:===================================================> (110 + 4) / 114][Stage 107:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.31983914 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  pa rtitionIndex = 75  OR  partitionIndex = 76 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383191648 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:============================>                        (60 + 53) / 113][Stage 108:================================>                    (69 + 44) / 113][Stage 108:===========================================>         (92 + 21) / 113][Stage 108:=================================================>   (105 + 8) / 113][Stage 108:===================================================> (109 + 4) / 113]                                                                                [Stage 109:============================>                        (61 + 53) / 114][Stage 109:====================================>                (79 + 35) / 114][Stage 109:==============================================>     (102 + 12) / 114][Stage 109:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.300632705 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR   partitionIndex = 120  OR  partitionIndex = 121 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379058076 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:============================>                        (61 + 52) / 113][Stage 110:===============================>                     (67 + 46) / 113][Stage 110:==========================================>          (91 + 22) / 113][Stage 110:===================================================> (109 + 4) / 113]                                                                                [Stage 111:==============================>                      (65 + 49) / 114][Stage 111:==================================>                  (74 + 40) / 114][Stage 111:===========================================>         (94 + 20) / 114][Stage 111:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.093542089 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR   partitionIndex = 211  OR  partitionIndex = 225 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382020272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:============================>                        (60 + 53) / 113][Stage 112:==============================>                      (65 + 48) / 113][Stage 112:============================================>        (95 + 18) / 113][Stage 112:===================================================> (109 + 4) / 113][Stage 112:====================================================>(111 + 2) / 113]                                                                                [Stage 113:===========================>                         (59 + 55) / 114][Stage 113:============================>                        (62 + 52) / 114][Stage 113:===================================>                 (76 + 38) / 114][Stage 113:===========================================>         (93 + 21) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.256609945 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR   partitionIndex = 205  OR  partitionIndex = 206 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384877149 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:============================>                        (61 + 52) / 113][Stage 114:===============================>                     (67 + 46) / 113][Stage 114:===========================================>         (92 + 21) / 113][Stage 114:==================================================>  (108 + 5) / 113][Stage 114:====================================================>(112 + 1) / 113]                                                                                [Stage 115:===========================>                         (60 + 54) / 114][Stage 115:==============================>                      (66 + 48) / 114][Stage 115:========================================>            (87 + 27) / 114][Stage 115:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.054071159 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  pa rtitionIndex = 49  OR  partitionIndex = 50 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388189625 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (58 + 55) / 113][Stage 116:============================>                        (61 + 52) / 113][Stage 116:==================================>                  (73 + 40) / 113][Stage 116:==============================================>     (100 + 13) / 113][Stage 116:===================================================> (110 + 3) / 113][Stage 116:====================================================>(112 + 1) / 113]                                                                                [Stage 117:===========================>                         (59 + 55) / 114][Stage 117:==============================>                      (65 + 49) / 114][Stage 117:====================================>                (79 + 35) / 114][Stage 117:=============================================>      (100 + 14) / 114][Stage 117:===================================================> (110 + 4) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.750055358 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  pa rtitionIndex = 29  OR  partitionIndex = 30 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402258263 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:============================>                        (60 + 53) / 113][Stage 118:=================================>                   (72 + 41) / 113][Stage 118:========================================>            (87 + 26) / 113][Stage 118:==================================================>  (107 + 6) / 113]                                                                                [Stage 119:===========================>                         (60 + 54) / 114][Stage 119:=================================>                   (71 + 43) / 114][Stage 119:======================================>              (83 + 31) / 114][Stage 119:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.232203423 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR   partitionIndex = 173  OR  partitionIndex = 174 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394435378 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:============================>                        (61 + 52) / 113][Stage 120:===============================>                     (68 + 45) / 113][Stage 120:=========================================>           (88 + 25) / 113][Stage 120:================================================>    (104 + 9) / 113]                                                                                [Stage 121:============================>                        (61 + 53) / 114][Stage 121:===================================>                 (77 + 37) / 114][Stage 121:============================================>        (95 + 19) / 114][Stage 121:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.132735843 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR   partitionIndex = 144  OR  partitionIndex = 145 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 144  OR  partitionIndex = 145 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382311859 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (58 + 55) / 113][Stage 122:=============================>                       (62 + 51) / 113][Stage 122:======================================>              (83 + 30) / 113][Stage 122:==============================================>     (102 + 11) / 113]                                                                                [Stage 123:============================>                        (61 + 53) / 114][Stage 123:==================================>                  (74 + 40) / 114][Stage 123:=============================================>       (98 + 16) / 114][Stage 123:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.031687404 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 44  OR  pa rtitionIndex = 57  OR  partitionIndex = 58 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 57  OR  partitionIndex = 58 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384583777 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:============================>                        (61 + 52) / 113][Stage 124:==================================>                  (73 + 40) / 113][Stage 124:=============================================>       (98 + 15) / 113][Stage 124:===================================================> (109 + 4) / 113]                                                                                [Stage 125:===========================>                         (60 + 54) / 114][Stage 125:================================>                    (70 + 44) / 114][Stage 125:=========================================>           (89 + 25) / 114][Stage 125:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.150811377 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR   partitionIndex = 227  OR  partitionIndex = 228 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390824428 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (59 + 54) / 113][Stage 126:================================>                    (70 + 43) / 113][Stage 126:========================================>            (86 + 27) / 113][Stage 126:==================================================>  (107 + 6) / 113]                                                                                [Stage 127:===========================>                         (60 + 54) / 114][Stage 127:=================================>                   (73 + 41) / 114][Stage 127:=========================================>           (89 + 25) / 114][Stage 127:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.162458109 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  par titionIndex = 18  OR  partitionIndex = 30 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391849228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (58 + 55) / 113][Stage 128:================================>                    (70 + 43) / 113][Stage 128:==========================================>          (90 + 23) / 113][Stage 128:=================================================>   (106 + 7) / 113][Stage 128:====================================================>(112 + 1) / 113]                                                                                [Stage 129:===========================>                         (59 + 55) / 114][Stage 129:==============================>                      (66 + 48) / 114][Stage 129:======================================>              (83 + 31) / 114][Stage 129:=================================================>   (106 + 8) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.473000324 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR   partitionIndex = 229  OR  partitionIndex = 230 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384892961 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (59 + 54) / 113][Stage 130:================================>                    (70 + 43) / 113][Stage 130:===========================================>         (92 + 21) / 113][Stage 130:=================================================>   (105 + 8) / 113][Stage 130:====================================================>(112 + 1) / 113]                                                                                [Stage 131:===========================>                         (60 + 54) / 114][Stage 131:===============================>                     (67 + 47) / 114][Stage 131:=======================================>             (84 + 30) / 114][Stage 131:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.076783035 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  pa rtitionIndex = 54  OR  partitionIndex = 55 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 54  OR  partitionIndex = 55 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379688751 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (59 + 54) / 113][Stage 132:===============================>                     (68 + 45) / 113][Stage 132:============================================>        (95 + 18) / 113][Stage 132:===================================================> (110 + 3) / 113]                                                                                [Stage 133:===========================>                         (60 + 54) / 114][Stage 133:==============================>                      (66 + 48) / 114][Stage 133:==================================>                  (75 + 39) / 114][Stage 133:=============================================>      (100 + 14) / 114][Stage 133:==================================================>  (109 + 5) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.337269015 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 10  OR  par titionIndex = 23  OR  partitionIndex = 24 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 23  OR  partitionIndex = 24 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466727348 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (59 + 54) / 113][Stage 134:===============================>                     (67 + 46) / 113][Stage 134:=======================================>             (84 + 29) / 113][Stage 134:==================================================>  (107 + 6) / 113]                                                                                [Stage 135:=============================>                       (63 + 51) / 114][Stage 135:====================================>                (78 + 36) / 114][Stage 135:=============================================>       (98 + 16) / 114][Stage 135:===============================================>    (104 + 10) / 114][Stage 135:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.507882827 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 197  OR  partitionIndex = 198 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385873003 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:============================>                        (60 + 53) / 113][Stage 136:===============================>                     (67 + 46) / 113][Stage 136:=============================================>       (96 + 17) / 113][Stage 136:====================================================>(111 + 2) / 113]                                                                                [Stage 137:============================>                        (62 + 52) / 114][Stage 137:===================================>                 (77 + 37) / 114][Stage 137:============================================>        (95 + 19) / 114][Stage 137:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.151458407 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 213  OR   partitionIndex = 227  OR  partitionIndex = 228 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386115745 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:============================>                        (60 + 53) / 113][Stage 138:==============================>                      (66 + 47) / 113][Stage 138:==========================================>          (90 + 23) / 113][Stage 138:=================================================>   (105 + 8) / 113][Stage 138:====================================================>(112 + 1) / 113]                                                                                [Stage 139:===========================>                         (60 + 54) / 114][Stage 139:=============================>                       (63 + 51) / 114][Stage 139:====================================>                (78 + 36) / 114][Stage 139:==============================================>     (102 + 12) / 114][Stage 139:====================================================>(112 + 2) / 114][Stage 139:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.438648147 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  pa rtitionIndex = 23  OR  partitionIndex = 24 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382587152 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (59 + 54) / 113][Stage 140:=============================>                       (62 + 51) / 113][Stage 140:==================================>                  (73 + 40) / 113][Stage 140:=============================================>       (98 + 15) / 113][Stage 140:==================================================>  (107 + 6) / 113][Stage 140:====================================================>(112 + 1) / 113]                                                                                [Stage 141:===========================>                         (60 + 54) / 114][Stage 141:================================>                    (69 + 45) / 114][Stage 141:==========================================>          (91 + 23) / 114][Stage 141:==================================================>  (109 + 5) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.453162157 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 66  OR  pa rtitionIndex = 79  OR  partitionIndex = 80 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 79  OR  partitionIndex = 80 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403483799 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (59 + 54) / 113][Stage 142:=============================>                       (62 + 51) / 113][Stage 142:=====================================>               (79 + 34) / 113][Stage 142:=============================================>       (96 + 17) / 113][Stage 142:==================================================>  (108 + 5) / 113][Stage 142:====================================================>(111 + 2) / 113]                                                                                [Stage 143:===========================>                         (60 + 54) / 114][Stage 143:=================================>                   (72 + 42) / 114][Stage 143:==============================================>     (102 + 12) / 114][Stage 143:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.413318596 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR   partitionIndex = 159  OR  partitionIndex = 173 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379246621 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (59 + 54) / 113][Stage 144:================================>                    (69 + 44) / 113][Stage 144:========================================>            (86 + 27) / 113][Stage 144:================================================>    (104 + 9) / 113][Stage 144:====================================================>(112 + 1) / 113]                                                                                [Stage 145:===========================>                         (60 + 54) / 114][Stage 145:================================>                    (70 + 44) / 114][Stage 145:========================================>            (88 + 26) / 114][Stage 145:===============================================>    (104 + 10) / 114][Stage 145:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.225354776 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 190  OR   partitionIndex = 203  OR  partitionIndex = 204 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 203  OR  partitionIndex = 204 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3923429 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (58 + 55) / 113][Stage 146:============================>                        (60 + 53) / 113][Stage 146:==================================>                  (74 + 39) / 113][Stage 146:==============================================>      (99 + 14) / 113][Stage 146:==================================================>  (108 + 5) / 113]                                                                                [Stage 147:============================>                        (61 + 53) / 114][Stage 147:=================================>                   (72 + 42) / 114][Stage 147:============================================>        (95 + 19) / 114][Stage 147:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.210197073 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  pa rtitionIndex = 34  OR  partitionIndex = 35 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381174741 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (59 + 54) / 113][Stage 148:===============================>                     (68 + 45) / 113][Stage 148:===========================================>         (92 + 21) / 113][Stage 148:==================================================>  (108 + 5) / 113]                                                                                [Stage 149:============================>                        (62 + 52) / 114][Stage 149:=================================>                   (72 + 42) / 114][Stage 149:=======================================>             (84 + 30) / 114][Stage 149:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.173755444 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  part itionIndex = 15  OR  partitionIndex = 16 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 15  OR  partitionIndex = 16 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383934798 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (58 + 55) / 113][Stage 150:============================>                        (61 + 52) / 113][Stage 150:=================================>                   (71 + 42) / 113][Stage 150:============================================>        (95 + 18) / 113][Stage 150:====================================================>(111 + 2) / 113]                                                                                [Stage 151:===========================>                         (59 + 55) / 114][Stage 151:================================>                    (70 + 44) / 114][Stage 151:====================================>                (79 + 35) / 114][Stage 151:==============================================>     (103 + 11) / 114][Stage 151:====================================================>(112 + 2) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.608268272 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR   partitionIndex = 179  OR  partitionIndex = 180 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396700898 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (58 + 55) / 113][Stage 152:============================>                        (60 + 53) / 113][Stage 152:=====================================>               (81 + 32) / 113][Stage 152:================================================>    (104 + 9) / 113][Stage 152:===================================================> (110 + 3) / 113]                                                                                [Stage 153:============================>                        (62 + 52) / 114][Stage 153:===================================>                 (76 + 38) / 114][Stage 153:==============================================>     (102 + 12) / 114][Stage 153:===================================================> (111 + 3) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.537199082 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR   partitionIndex = 170  OR  partitionIndex = 171 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 170  OR  partitionIndex = 171 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392916206 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===========================>                         (58 + 55) / 113][Stage 154:=============================>                       (63 + 50) / 113][Stage 154:======================================>              (82 + 31) / 113][Stage 154:==============================================>     (100 + 13) / 113][Stage 154:===================================================> (110 + 3) / 113]                                                                                [Stage 155:===========================>                         (59 + 55) / 114][Stage 155:=============================>                       (64 + 50) / 114][Stage 155:=====================================>               (80 + 34) / 114][Stage 155:==============================================>     (101 + 13) / 114][Stage 155:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.200372398 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 154  OR   partitionIndex = 155  OR  partitionIndex = 169 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380481907 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (58 + 55) / 113][Stage 156:===============================>                     (67 + 46) / 113][Stage 156:========================================>            (87 + 26) / 113][Stage 156:=================================================>   (106 + 7) / 113]                                                                                [Stage 157:===========================>                         (60 + 54) / 114][Stage 157:===============================>                     (68 + 46) / 114][Stage 157:========================================>            (87 + 27) / 114][Stage 157:=================================================>   (107 + 7) / 114][Stage 157:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.246546756 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR   partitionIndex = 204  OR  partitionIndex = 205 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 204  OR  partitionIndex = 205 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381540027 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (59 + 54) / 113][Stage 158:=============================>                       (62 + 51) / 113][Stage 158:==================================>                  (74 + 39) / 113][Stage 158:=============================================>       (96 + 17) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:===========================>                         (60 + 54) / 114][Stage 159:==================================>                  (75 + 39) / 114][Stage 159:==============================================>     (101 + 13) / 114][Stage 159:===================================================> (111 + 3) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.212128583 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  pa rtitionIndex = 79  OR  partitionIndex = 80 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393849828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (59 + 54) / 113][Stage 160:=============================>                       (63 + 50) / 113][Stage 160:========================================>            (87 + 26) / 113][Stage 160:================================================>    (104 + 9) / 113][Stage 160:===================================================> (110 + 3) / 113]                                                                                [Stage 161:============================>                        (62 + 52) / 114][Stage 161:=================================>                   (71 + 43) / 114][Stage 161:=======================================>             (86 + 28) / 114][Stage 161:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.291014549 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR   partitionIndex = 235  OR  partitionIndex = 236 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383414067 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (59 + 54) / 113][Stage 162:================================>                    (70 + 43) / 113][Stage 162:=========================================>           (89 + 24) / 113][Stage 162:==================================================>  (107 + 6) / 113][Stage 162:====================================================>(112 + 1) / 113]                                                                                [Stage 163:===========================>                         (59 + 55) / 114][Stage 163:============================>                        (62 + 52) / 114][Stage 163:=====================================>               (80 + 34) / 114][Stage 163:=============================================>       (98 + 16) / 114][Stage 163:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.266254201 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR   partitionIndex = 233  OR  partitionIndex = 234 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376836538 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (59 + 54) / 113][Stage 164:============================>                        (60 + 53) / 113][Stage 164:==================================>                  (74 + 39) / 113][Stage 164:=============================================>       (96 + 17) / 113][Stage 164:===================================================> (110 + 3) / 113][Stage 164:====================================================>(112 + 1) / 113]                                                                                [Stage 165:===========================>                         (60 + 54) / 114][Stage 165:=============================>                       (63 + 51) / 114][Stage 165:======================================>              (82 + 32) / 114][Stage 165:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.1865117 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR   partitionIndex = 203  OR  partitionIndex = 204 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384260928 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (58 + 55) / 113][Stage 166:==============================>                      (65 + 48) / 113][Stage 166:=======================================>             (85 + 28) / 113][Stage 166:================================================>    (104 + 9) / 113][Stage 166:====================================================>(112 + 1) / 113]                                                                                [Stage 167:===========================>                         (59 + 55) / 114][Stage 167:=============================>                       (63 + 51) / 114][Stage 167:======================================>              (82 + 32) / 114][Stage 167:=============================================>      (100 + 14) / 114]                                                                                Time elapsed: 3.04869027 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR   partitionIndex = 146  OR  partitionIndex = 158 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376920801 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:============================>                        (60 + 53) / 113][Stage 168:================================>                    (70 + 43) / 113][Stage 168:===========================================>         (93 + 20) / 113][Stage 168:====================================================>(111 + 2) / 113]                                                                                [Stage 169:===========================>                         (59 + 55) / 114][Stage 169:=============================>                       (63 + 51) / 114][Stage 169:=======================================>             (86 + 28) / 114][Stage 169:=============================================>       (98 + 16) / 114][Stage 169:==================================================>  (109 + 5) / 114][Stage 169:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.305932294 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  pa rtitionIndex = 57  OR  partitionIndex = 58 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382407553 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (59 + 54) / 113][Stage 170:============================>                        (61 + 52) / 113][Stage 170:====================================>                (77 + 36) / 113][Stage 170:=============================================>       (97 + 16) / 113][Stage 170:====================================================>(112 + 1) / 113]                                                                                [Stage 171:===========================>                         (59 + 55) / 114][Stage 171:==============================>                      (66 + 48) / 114][Stage 171:========================================>            (87 + 27) / 114][Stage 171:===============================================>    (104 + 10) / 114][Stage 171:===================================================> (110 + 4) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.234737339 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 119  OR   partitionIndex = 120  partitionIndex = 120 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375897665 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
org.apache.spark.sql.catalyst.parser.ParseException:
extraneous input 'partitionIndex' expecting {<EOF>, '.', '[', 'GROUP', 'ORDER', 'HAVING', 'LIMIT', 'OR', 'AND', 'IN', NOT, 'BETWEEN', 'LIKE', RLIKE, 'IS', 'WINDOW', 'UNION', 'EXCEPT', 'MINUS', 'INTERSECT', EQ, '<=>', '<>', '!=', '<', LTE, '>', GTE, '+', '-', '*', '/', '%', 'DIV', '&', '|', '^', 'SORT', 'CLUSTER', 'DISTRIBUTE'}(line 1, pos 109)

== SQL ==
SELECT imageBytes FROM data WHERE  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120
-------------------------------------------------------------------------------------------------------------^^^

  at org.apache.spark.sql.catalyst.parser.ParseException.withCommand(ParseDriver.scala:197)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parse(ParseDriver.scala:99)
  at org.apache.spark.sql.execution.SparkSqlParser.parse(SparkSqlParser.scala:45)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parsePlan(ParseDriver.scala:53)
  at org.apache.spark.sql.SparkSession.sql(SparkSession.scala:592)
  at org.apache.spark.sql.SQLContext.sql(SQLContext.scala:699)
  at $anonfun$1.apply$mcI$sp(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202  OR   partitionIndex = 214  OR  partitionIndex = 215 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3671116 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:============================>                        (61 + 52) / 113][Stage 172:==================================>                  (74 + 39) / 113][Stage 172:=============================================>       (96 + 17) / 113][Stage 172:===================================================> (110 + 3) / 113][Stage 172:====================================================>(112 + 1) / 113]                                                                                [Stage 173:===========================>                         (59 + 55) / 114][Stage 173:===============================>                     (68 + 46) / 114][Stage 173:=======================================>             (86 + 28) / 114][Stage 173:================================================>    (105 + 9) / 114][Stage 173:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.33338818 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  pa rtitionIndex = 53  OR  partitionIndex = 54 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37444159 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (59 + 54) / 113][Stage 174:=================================>                   (71 + 42) / 113][Stage 174:============================================>        (94 + 19) / 113][Stage 174:===================================================> (109 + 4) / 113][Stage 174:===================================================> (110 + 3) / 113]                                                                                [Stage 175:============================>                        (62 + 52) / 114][Stage 175:===================================>                 (76 + 38) / 114][Stage 175:============================================>        (95 + 19) / 114][Stage 175:====================================================>(112 + 2) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.107099576 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR   partitionIndex = 139  OR  partitionIndex = 168 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 168 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396515457 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (59 + 54) / 113][Stage 176:=============================>                       (63 + 50) / 113][Stage 176:======================================>              (82 + 31) / 113][Stage 176:=================================================>   (106 + 7) / 113]                                                                                [Stage 177:===========================>                         (59 + 55) / 114][Stage 177:==============================>                      (66 + 48) / 114][Stage 177:========================================>            (87 + 27) / 114][Stage 177:=================================================>   (107 + 7) / 114][Stage 177:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.183809162 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103  OR   partitionIndex = 117  OR  partitionIndex = 118 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379342586 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=============================>                       (62 + 51) / 113][Stage 178:================================>                    (69 + 44) / 113][Stage 178:=========================================>           (89 + 24) / 113][Stage 178:==================================================>  (108 + 5) / 113][Stage 178:====================================================>(112 + 1) / 113]                                                                                [Stage 179:============================>                        (62 + 52) / 114][Stage 179:===================================>                 (76 + 38) / 114][Stage 179:==============================================>     (102 + 12) / 114][Stage 179:===================================================> (111 + 3) / 114][Stage 179:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.648253188 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  pa rtitionIndex = 55  OR  partitionIndex = 56 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40957898 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:============================>                        (60 + 53) / 113][Stage 180:================================>                    (69 + 44) / 113][Stage 180:========================================>            (86 + 27) / 113][Stage 180:==================================================>  (108 + 5) / 113]                                                                                [Stage 181:===========================>                         (60 + 54) / 114][Stage 181:=============================>                       (64 + 50) / 114][Stage 181:===================================>                 (77 + 37) / 114][Stage 181:=============================================>      (100 + 14) / 114][Stage 181:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.232704031 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  pa rtitionIndex = 87  OR  partitionIndex = 88 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 87  OR  partitionIndex = 88 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377209492 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:============================>                        (61 + 52) / 113][Stage 182:=================================>                   (72 + 41) / 113][Stage 182:=======================================>             (85 + 28) / 113][Stage 182:=================================================>   (105 + 8) / 113][Stage 182:===================================================> (109 + 4) / 113]                                                                                [Stage 183:=============================>                       (64 + 50) / 114][Stage 183:=====================================>               (80 + 34) / 114][Stage 183:=============================================>       (98 + 16) / 114][Stage 183:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.400403542 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR   partitionIndex = 115  OR  partitionIndex = 116 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377870332 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (58 + 55) / 113][Stage 184:=================================>                   (72 + 41) / 113][Stage 184:=========================================>           (89 + 24) / 113][Stage 184:===============================================>    (103 + 10) / 113][Stage 184:====================================================>(112 + 1) / 113]                                                                                [Stage 185:===========================>                         (60 + 54) / 114][Stage 185:===============================>                     (67 + 47) / 114][Stage 185:=======================================>             (84 + 30) / 114][Stage 185:=============================================>       (98 + 16) / 114][Stage 185:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.587064125 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR   partitionIndex = 229  OR  partitionIndex = 230 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375555077 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (58 + 55) / 113][Stage 186:=============================>                       (62 + 51) / 113][Stage 186:====================================>                (77 + 36) / 113][Stage 186:==============================================>      (99 + 14) / 113][Stage 186:====================================================>(111 + 2) / 113]                                                                                [Stage 187:=============================>                       (63 + 51) / 114][Stage 187:====================================>                (79 + 35) / 114][Stage 187:==============================================>     (101 + 13) / 114][Stage 187:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.255197693 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193  OR  partitionIndex = 194  OR   partitionIndex = 207  OR  partitionIndex = 208 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 207  OR  partitionIndex = 208 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378628774 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:============================>                        (60 + 53) / 113][Stage 188:===============================>                     (67 + 46) / 113][Stage 188:======================================>              (83 + 30) / 113][Stage 188:================================================>    (104 + 9) / 113][Stage 188:===================================================> (110 + 3) / 113]                                                                                [Stage 189:===========================>                         (59 + 55) / 114][Stage 189:===============================>                     (68 + 46) / 114][Stage 189:=========================================>           (89 + 25) / 114][Stage 189:=================================================>   (106 + 8) / 114][Stage 189:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.204597163 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR   partitionIndex = 150  OR  partitionIndex = 151 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465389701 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (59 + 54) / 113][Stage 190:===============================>                     (67 + 46) / 113][Stage 190:==========================================>          (90 + 23) / 113][Stage 190:==================================================>  (107 + 6) / 113]                                                                                [Stage 191:============================>                        (62 + 52) / 114][Stage 191:==================================>                  (75 + 39) / 114][Stage 191:=============================================>       (98 + 16) / 114][Stage 191:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.102321972 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  part itionIndex = 20  OR  partitionIndex = 21 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 20  OR  partitionIndex = 21 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385171606 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:============================>                        (60 + 53) / 113][Stage 192:=================================>                   (72 + 41) / 113][Stage 192:=============================================>       (96 + 17) / 113][Stage 192:=================================================>   (106 + 7) / 113][Stage 192:====================================================>(111 + 2) / 113]                                                                                [Stage 193:============================>                        (62 + 52) / 114][Stage 193:=====================================>               (80 + 34) / 114][Stage 193:==============================================>     (102 + 12) / 114][Stage 193:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.501928828 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 221  OR   partitionIndex = 235  OR  partitionIndex = 236 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39008212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (59 + 54) / 113][Stage 194:=============================>                       (63 + 50) / 113][Stage 194:===================================>                 (76 + 37) / 113][Stage 194:==============================================>      (99 + 14) / 113][Stage 194:====================================================>(112 + 1) / 113]                                                                                [Stage 195:===========================>                         (59 + 55) / 114][Stage 195:===============================>                     (68 + 46) / 114][Stage 195:====================================>                (78 + 36) / 114][Stage 195:==============================================>     (102 + 12) / 114][Stage 195:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.135056985 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  pa rtitionIndex = 113  OR  partitionIndex = 114 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390165541 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (59 + 54) / 113][Stage 196:============================>                        (61 + 52) / 113][Stage 196:===================================>                 (75 + 38) / 113][Stage 196:=============================================>       (97 + 16) / 113][Stage 196:===================================================> (109 + 4) / 113]                                                                                [Stage 197:============================>                        (61 + 53) / 114][Stage 197:================================>                    (69 + 45) / 114][Stage 197:==========================================>          (91 + 23) / 114][Stage 197:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.162697934 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  pa rtitionIndex = 80  OR  partitionIndex = 81 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 80  OR  partitionIndex = 81 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389171505 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:============================>                        (61 + 52) / 113][Stage 198:===============================>                     (68 + 45) / 113][Stage 198:========================================>            (87 + 26) / 113][Stage 198:=================================================>   (106 + 7) / 113]                                                                                [Stage 199:=============================>                       (63 + 51) / 114][Stage 199:====================================>                (78 + 36) / 114][Stage 199:=============================================>       (97 + 17) / 114][Stage 199:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.177669162 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m17.419s
user	11m38.520s
sys	1m0.540s
