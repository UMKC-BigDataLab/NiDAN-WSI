Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/25 01:16:38 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 01:16:52 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 01:16:52 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 01:16:53 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/25 01:16:55 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 01:17:05 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170525011655-0618).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 4.352803171 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:====>                                                  (9 + 106) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:========================================>              (85 + 30) / 115][Stage 0:============================================>          (94 + 21) / 115][Stage 0:==============================================>        (97 + 18) / 115][Stage 0:==============================================>        (98 + 17) / 115][Stage 0:===============================================>      (101 + 14) / 115]                                                                                [Stage 1:=======================>                               (49 + 67) / 116][Stage 1:============================>                          (61 + 55) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:=====================================================> (112 + 4) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.725865036 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 44 AND partitionZIndex<=244", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=244,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.796159578 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 2:====================>                                  (42 + 71) / 113][Stage 2:=========================>                             (52 + 61) / 113][Stage 2:==========================>                            (54 + 59) / 113][Stage 2:==============================>                        (63 + 50) / 113][Stage 2:================================>                      (66 + 47) / 113][Stage 2:=======================================>               (81 + 32) / 113][Stage 2:==============================================>        (95 + 18) / 113][Stage 2:===============================================>      (100 + 13) / 113][Stage 2:===================================================>   (105 + 8) / 113][Stage 2:====================================================>  (108 + 5) / 113][Stage 2:=====================================================> (110 + 3) / 113]                                                                                [Stage 3:===========================>                           (58 + 56) / 114][Stage 3:============================>                          (59 + 55) / 114][Stage 3:===============================>                       (66 + 48) / 114][Stage 3:====================================>                  (76 + 38) / 114][Stage 3:============================================>          (92 + 22) / 114][Stage 3:===============================================>      (100 + 14) / 114][Stage 3:======================================================>(112 + 2) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.312234029 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 8 AND partitionZIndex<=18", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=18,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.717136285 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==========================>                            (59 + 62) / 121][Stage 4:===========================>                           (60 + 61) / 121][Stage 4:============================>                          (63 + 58) / 121][Stage 4:===============================>                       (69 + 52) / 121][Stage 4:=======================================>               (87 + 34) / 121][Stage 4:=============================================>        (103 + 18) / 121][Stage 4:====================================================>  (115 + 6) / 121]                                                                                [Stage 5:===========================>                           (61 + 61) / 122][Stage 5:============================>                          (63 + 59) / 122][Stage 5:=============================>                         (65 + 57) / 122][Stage 5:==================================>                    (77 + 45) / 122][Stage 5:===========================================>           (97 + 25) / 122][Stage 5:================================================>     (110 + 12) / 122][Stage 5:=====================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.250133896 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 06 AND partitionZIndex<=106", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.688756695 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (56 + 57) / 113][Stage 6:============================>                          (59 + 54) / 113][Stage 6:===============================>                       (64 + 49) / 113][Stage 6:=======================================>               (81 + 32) / 113][Stage 6:=============================================>         (94 + 19) / 113][Stage 6:===================================================>   (106 + 7) / 113][Stage 6:=====================================================> (109 + 4) / 113]                                                                                [Stage 7:============================>                          (60 + 54) / 114][Stage 7:=============================>                         (62 + 52) / 114][Stage 7:====================================>                  (76 + 38) / 114][Stage 7:==========================================>            (89 + 25) / 114][Stage 7:================================================>     (103 + 11) / 114][Stage 7:====================================================>  (109 + 5) / 114]                                                                                Time elapsed: 4.114168015 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 3 AND partitionZIndex<=93", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=93,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.528654109 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 8:======================================>                (81 + 34) / 115][Stage 8:========================================>              (85 + 30) / 115][Stage 8:============================================>          (94 + 21) / 115][Stage 8:==============================================>        (97 + 18) / 115][Stage 8:=================================================>    (105 + 10) / 115][Stage 8:=====================================================> (112 + 3) / 115]                                                                                [Stage 9:=======================================>               (83 + 33) / 116][Stage 9:=============================================>         (95 + 21) / 116][Stage 9:=================================================>    (106 + 10) / 116][Stage 9:====================================================>  (110 + 6) / 116][Stage 9:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.907993068 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7  AND partitionZIndex<=7", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=7,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.491248797 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==================================>                   (72 + 41) / 113][Stage 10:====================================>                 (76 + 37) / 113][Stage 10:=======================================>              (83 + 30) / 113][Stage 10:==============================================>       (98 + 15) / 113][Stage 10:===================================================>  (108 + 5) / 113][Stage 10:=====================================================>(111 + 2) / 113]                                                                                [Stage 11:===================================>                  (75 + 39) / 114][Stage 11:=====================================>                (80 + 34) / 114][Stage 11:===========================================>          (91 + 23) / 114][Stage 11:==============================================>       (99 + 15) / 114][Stage 11:===================================================>  (108 + 6) / 114][Stage 11:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.233286815 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 20 AND partitionZIndex<=120", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=120,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.630734749 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (60 + 60) / 120][Stage 12:===========================>                          (62 + 58) / 120][Stage 12:================================>                     (72 + 48) / 120][Stage 12:======================================>               (86 + 34) / 120][Stage 12:===========================================>          (97 + 23) / 120][Stage 12:==================================================>   (112 + 8) / 120][Stage 12:===================================================>  (115 + 5) / 120]                                                                                [Stage 13:===========================>                          (61 + 60) / 121][Stage 13:=============================>                        (66 + 55) / 121][Stage 13:===============================>                      (71 + 50) / 121][Stage 13:=====================================>                (84 + 37) / 121][Stage 13:===========================================>          (97 + 24) / 121][Stage 13:===============================================>     (108 + 13) / 121][Stage 13:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.123321559 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 2 AND partitionZIndex<=72", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=72,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.4521319 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 14:======================================>               (82 + 33) / 115][Stage 14:========================================>             (87 + 28) / 115][Stage 14:=============================================>        (97 + 18) / 115][Stage 14:===============================================>     (104 + 11) / 115][Stage 14:==================================================>   (107 + 8) / 115][Stage 14:===================================================>  (110 + 5) / 115]                                                                                [Stage 15:=======================================>              (85 + 31) / 116][Stage 15:==========================================>           (91 + 25) / 116][Stage 15:============================================>         (96 + 20) / 116][Stage 15:================================================>    (106 + 10) / 116][Stage 15:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.824472893 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 51 AND partitionZIndex<=151", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=151,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.549637751 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 16:============================>                         (59 + 54) / 113][Stage 16:===============================>                      (66 + 47) / 113][Stage 16:===================================>                  (75 + 38) / 113][Stage 16:============================================>         (93 + 20) / 113][Stage 16:==================================================>   (105 + 8) / 113][Stage 16:=====================================================>(111 + 2) / 113]                                                                                [Stage 17:===========================>                          (59 + 55) / 114][Stage 17:============================>                         (60 + 54) / 114][Stage 17:==================================>                   (72 + 42) / 114][Stage 17:=========================================>            (88 + 26) / 114][Stage 17:===============================================>     (103 + 11) / 114][Stage 17:===================================================>  (108 + 6) / 114][Stage 17:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.826078926 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 1 AND partitionZIndex<=21", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.504151722 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:============================>                         (59 + 54) / 113][Stage 18:================================>                     (68 + 45) / 113][Stage 18:=========================================>            (87 + 26) / 113][Stage 18:===============================================>     (102 + 11) / 113][Stage 18:====================================================> (110 + 3) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:===========================>                          (59 + 55) / 114][Stage 19:===============================>                      (66 + 48) / 114][Stage 19:========================================>             (85 + 29) / 114][Stage 19:===============================================>     (102 + 12) / 114][Stage 19:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.569416724 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 25 AND partitionZIndex<=225", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=225,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.676918232 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (61 + 60) / 121][Stage 20:=============================>                        (65 + 56) / 121][Stage 20:=================================>                    (76 + 45) / 121][Stage 20:========================================>             (90 + 31) / 121][Stage 20:===============================================>     (109 + 12) / 121]                                                                                [Stage 21:===========================>                          (61 + 61) / 122][Stage 21:=============================>                        (67 + 55) / 122][Stage 21:===================================>                  (80 + 42) / 122][Stage 21:============================================>        (103 + 19) / 122][Stage 21:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.583353927 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 7 AND partitionZIndex<=17", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=17,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.528122536 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (60 + 60) / 120][Stage 22:==============================>                       (67 + 53) / 120][Stage 22:======================================>               (86 + 34) / 120][Stage 22:==============================================>      (106 + 14) / 120][Stage 22:================================================>    (110 + 10) / 120][Stage 22:====================================================> (116 + 4) / 120]                                                                                [Stage 23:===========================>                          (61 + 60) / 121][Stage 23:=============================>                        (67 + 54) / 121][Stage 23:===================================>                  (80 + 41) / 121][Stage 23:=============================================>       (103 + 18) / 121][Stage 23:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.597475271 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 95 AND partitionZIndex<=195", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=195,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.511652655 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (60 + 60) / 120][Stage 24:============================>                         (63 + 57) / 120][Stage 24:==================================>                   (76 + 44) / 120][Stage 24:===========================================>          (97 + 23) / 120][Stage 24:==================================================>   (112 + 8) / 120][Stage 24:=====================================================>(119 + 1) / 120]                                                                                [Stage 25:===========================>                          (61 + 60) / 121][Stage 25:==============================>                       (68 + 53) / 121][Stage 25:=====================================>                (83 + 38) / 121][Stage 25:===========================================>         (100 + 21) / 121][Stage 25:===================================================>  (116 + 5) / 121][Stage 25:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.480324763 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 70 AND partitionZIndex<=170", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=170,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.601720128 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (60 + 60) / 120][Stage 26:================================>                     (73 + 47) / 120][Stage 26:====================================>                 (80 + 40) / 120][Stage 26:============================================>        (101 + 19) / 120][Stage 26:===================================================>  (114 + 6) / 120][Stage 26:=====================================================>(118 + 2) / 120]                                                                                [Stage 27:=============================>                        (65 + 56) / 121][Stage 27:===================================>                  (80 + 41) / 121][Stage 27:=============================================>       (103 + 18) / 121][Stage 27:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.358271565 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 11 AND partitionZIndex<=111", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=111,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.49763296 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 28:==========================>                           (60 + 61) / 121][Stage 28:=============================>                        (65 + 56) / 121][Stage 28:===================================>                  (80 + 41) / 121][Stage 28:==============================================>      (107 + 14) / 121][Stage 28:=====================================================>(119 + 2) / 121][Stage 28:=====================================================>(120 + 1) / 121]                                                                                [Stage 29:===========================>                          (61 + 61) / 122][Stage 29:===========================>                          (63 + 59) / 122][Stage 29:=================================>                    (75 + 47) / 122][Stage 29:==========================================>           (96 + 26) / 122][Stage 29:===================================================>  (116 + 6) / 122][Stage 29:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.63856012 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 45 AND partitionZIndex<=145", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=145,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.465620142 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 30:================================>                     (72 + 46) / 118][Stage 30:=================================>                    (73 + 45) / 118][Stage 30:====================================>                 (80 + 38) / 118][Stage 30:=======================================>              (87 + 31) / 118][Stage 30:================================================>    (108 + 10) / 118]                                                                                [Stage 31:=================================>                    (74 + 45) / 119][Stage 31:===================================>                  (78 + 41) / 119][Stage 31:=======================================>              (86 + 33) / 119][Stage 31:============================================>        (101 + 18) / 119][Stage 31:==================================================>   (111 + 8) / 119][Stage 31:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.480835157 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 2 AND partitionZIndex<=12", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=12,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.447900879 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 32:=================================>                    (73 + 45) / 118][Stage 32:===================================>                  (78 + 40) / 118][Stage 32:=======================================>              (86 + 32) / 118][Stage 32:=============================================>        (99 + 19) / 118][Stage 32:==================================================>   (110 + 8) / 118][Stage 32:===================================================>  (112 + 6) / 118][Stage 32:===================================================>  (113 + 5) / 118][Stage 32:=====================================================>(117 + 1) / 118]                                                                                [Stage 33:=================================>                    (73 + 46) / 119][Stage 33:==================================>                   (77 + 42) / 119][Stage 33:=======================================>              (86 + 33) / 119][Stage 33:===========================================>          (96 + 23) / 119][Stage 33:================================================>    (109 + 10) / 119][Stage 33:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.972589591 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 04 AND partitionZIndex<=104", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=104,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.522612255 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 34:============================>                         (59 + 54) / 113][Stage 34:===============================>                      (66 + 47) / 113][Stage 34:=========================================>            (86 + 27) / 113][Stage 34:===============================================>     (102 + 11) / 113]                                                                                [Stage 35:=============================>                        (62 + 52) / 114][Stage 35:==================================>                   (72 + 42) / 114][Stage 35:=============================================>        (95 + 19) / 114][Stage 35:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.064089436 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 32 AND partitionZIndex<=232", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=232,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.410446429 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 36:======================================>               (83 + 32) / 115][Stage 36:============================================>         (94 + 21) / 115][Stage 36:==================================================>   (107 + 8) / 115][Stage 36:===================================================>  (110 + 5) / 115][Stage 36:====================================================> (111 + 4) / 115][Stage 36:====================================================> (112 + 3) / 115]                                                                                [Stage 37:========================================>             (86 + 30) / 116][Stage 37:==============================================>       (99 + 17) / 116][Stage 37:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.115113208 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 8 AND partitionZIndex<=38", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=38,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.468493705 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===============================>                      (67 + 48) / 115][Stage 38:======================================>               (83 + 32) / 115][Stage 38:============================================>         (95 + 20) / 115][Stage 38:==================================================>   (108 + 7) / 115]                                                                                [Stage 39:=================================>                    (72 + 44) / 116][Stage 39:========================================>             (87 + 29) / 116][Stage 39:===============================================>     (104 + 12) / 116][Stage 39:=====================================================>(114 + 2) / 116][Stage 39:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.593975289 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 15 AND partitionZIndex<=215", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.466620279 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 40:================================>                     (72 + 46) / 118][Stage 40:==================================>                   (75 + 43) / 118][Stage 40:======================================>               (84 + 34) / 118][Stage 40:=============================================>        (99 + 19) / 118][Stage 40:===================================================>  (113 + 5) / 118]                                                                                [Stage 41:==================================>                   (77 + 42) / 119][Stage 41:====================================>                 (81 + 38) / 119][Stage 41:========================================>             (90 + 29) / 119][Stage 41:===============================================>     (106 + 13) / 119][Stage 41:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.321476919 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 46 AND partitionZIndex<=246", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=246,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.517204117 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==========================>                           (60 + 61) / 121][Stage 42:=============================>                        (66 + 55) / 121][Stage 42:==================================>                   (78 + 43) / 121][Stage 42:============================================>         (99 + 22) / 121][Stage 42:==================================================>   (114 + 7) / 121]                                                                                [Stage 43:===========================>                          (62 + 60) / 122][Stage 43:===============================>                      (71 + 51) / 122][Stage 43:==========================================>           (97 + 25) / 122][Stage 43:================================================>    (112 + 10) / 122][Stage 43:====================================================> (119 + 3) / 122][Stage 43:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.454410543 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 4 AND partitionZIndex<=94", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=94,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.433016257 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 44:================================>                     (69 + 46) / 115][Stage 44:==========================================>           (90 + 25) / 115][Stage 44:==============================================>      (100 + 15) / 115][Stage 44:==================================================>   (108 + 7) / 115][Stage 44:===================================================>  (110 + 5) / 115][Stage 44:====================================================> (111 + 4) / 115]                                                                                [Stage 45:====================================>                 (79 + 37) / 116][Stage 45:============================================>         (95 + 21) / 116][Stage 45:=================================================>    (107 + 9) / 116][Stage 45:====================================================> (112 + 4) / 116][Stage 45:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.608618325 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 9 AND partitionZIndex<=89", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.443540582 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (58 + 55) / 113][Stage 46:=============================>                        (62 + 51) / 113][Stage 46:================================>                     (67 + 46) / 113][Stage 46:=========================================>            (87 + 26) / 113][Stage 46:=================================================>    (104 + 9) / 113]                                                                                [Stage 47:=============================>                        (63 + 51) / 114][Stage 47:================================>                     (69 + 45) / 114][Stage 47:==========================================>           (89 + 25) / 114][Stage 47:=================================================>    (105 + 9) / 114][Stage 47:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.255056456 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 41 AND partitionZIndex<=241", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=241,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.474072912 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==================================>                   (75 + 43) / 118][Stage 48:======================================>               (84 + 34) / 118][Stage 48:============================================>         (98 + 20) / 118][Stage 48:===============================================>     (106 + 12) / 118][Stage 48:=====================================================>(116 + 2) / 118]                                                                                [Stage 49:=================================>                    (73 + 46) / 119][Stage 49:==================================>                   (77 + 42) / 119][Stage 49:=======================================>              (88 + 31) / 119][Stage 49:=============================================>       (103 + 16) / 119][Stage 49:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.246227828 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8  AND partitionZIndex<=8", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=8,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.465139829 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 50:============================>                         (59 + 54) / 113][Stage 50:==============================>                       (63 + 50) / 113][Stage 50:=======================================>              (83 + 30) / 113][Stage 50:===========================================>          (92 + 21) / 113][Stage 50:==================================================>   (106 + 7) / 113]                                                                                [Stage 51:============================>                         (60 + 54) / 114][Stage 51:================================>                     (68 + 46) / 114][Stage 51:===========================================>          (92 + 22) / 114][Stage 51:==============================================>       (98 + 16) / 114][Stage 51:===================================================>  (108 + 6) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.475417497 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 27 AND partitionZIndex<=227", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=227,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.467517114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==========================>                           (60 + 61) / 121][Stage 52:============================>                         (63 + 58) / 121][Stage 52:=================================>                    (75 + 46) / 121][Stage 52:===========================================>         (100 + 21) / 121][Stage 52:================================================>    (110 + 11) / 121][Stage 52:====================================================> (118 + 3) / 121]                                                                                [Stage 53:===========================>                          (61 + 61) / 122][Stage 53:=============================>                        (67 + 55) / 122][Stage 53:====================================>                 (82 + 40) / 122][Stage 53:============================================>        (102 + 20) / 122][Stage 53:===================================================>  (116 + 6) / 122][Stage 53:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.418563096 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 0 AND partitionZIndex<=10", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=10,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.436744041 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (58 + 55) / 113][Stage 54:================================>                     (68 + 45) / 113][Stage 54:==========================================>           (89 + 24) / 113][Stage 54:==================================================>   (106 + 7) / 113]                                                                                [Stage 55:============================>                         (60 + 54) / 114][Stage 55:===============================>                      (67 + 47) / 114][Stage 55:=======================================>              (84 + 30) / 114][Stage 55:==============================================>      (100 + 14) / 114][Stage 55:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.298342966 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 40 AND partitionZIndex<=240", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=240,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.422971508 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==============================>                       (65 + 50) / 115][Stage 56:====================================>                 (78 + 37) / 115][Stage 56:=========================================>            (88 + 27) / 115][Stage 56:===============================================>     (104 + 11) / 115][Stage 56:===================================================>  (110 + 5) / 115][Stage 56:=====================================================>(114 + 1) / 115]                                                                                [Stage 57:=================================>                    (72 + 44) / 116][Stage 57:=====================================>                (81 + 35) / 116][Stage 57:============================================>         (96 + 20) / 116][Stage 57:==================================================>   (108 + 8) / 116][Stage 57:=====================================================>(114 + 2) / 116][Stage 57:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.330838915 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 26 AND partitionZIndex<=226", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=226,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.368338619 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 58:======================================>               (82 + 33) / 115][Stage 58:============================================>         (95 + 20) / 115][Stage 58:==============================================>      (100 + 15) / 115][Stage 58:===================================================>  (110 + 5) / 115][Stage 58:=====================================================>(114 + 1) / 115]                                                                                [Stage 59:======================================>               (83 + 33) / 116][Stage 59:==========================================>           (92 + 24) / 116][Stage 59:===============================================>     (104 + 12) / 116][Stage 59:==================================================>   (109 + 7) / 116][Stage 59:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.159643488 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 36 AND partitionZIndex<=236", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=236,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.46309672 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (60 + 60) / 120][Stage 60:===========================>                          (62 + 58) / 120][Stage 60:=================================>                    (74 + 46) / 120][Stage 60:===========================================>          (96 + 24) / 120][Stage 60:====================================================> (117 + 3) / 120]                                                                                [Stage 61:============================>                         (64 + 57) / 121][Stage 61:===================================>                  (80 + 41) / 121][Stage 61:==========================================>           (96 + 25) / 121][Stage 61:===================================================>  (116 + 5) / 121][Stage 61:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.152629224 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 24 AND partitionZIndex<=124", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=124,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.494794992 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (60 + 60) / 120][Stage 62:=============================>                        (65 + 55) / 120][Stage 62:====================================>                 (82 + 38) / 120][Stage 62:============================================>         (98 + 22) / 120][Stage 62:===================================================>  (115 + 5) / 120][Stage 62:=====================================================>(119 + 1) / 120]                                                                                [Stage 63:===========================>                          (61 + 60) / 121][Stage 63:===============================>                      (71 + 50) / 121][Stage 63:=====================================>                (85 + 36) / 121][Stage 63:============================================>        (101 + 20) / 121][Stage 63:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.327717565 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 59 AND partitionZIndex<=159", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=159,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397292084 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 64:================================>                     (72 + 46) / 118][Stage 64:====================================>                 (80 + 38) / 118][Stage 64:==========================================>           (92 + 26) / 118][Stage 64:=============================================>       (101 + 17) / 118][Stage 64:==================================================>   (111 + 7) / 118][Stage 64:=====================================================>(117 + 1) / 118]                                                                                [Stage 65:=================================>                    (73 + 46) / 119][Stage 65:==================================>                   (77 + 42) / 119][Stage 65:=======================================>              (86 + 33) / 119][Stage 65:=============================================>       (102 + 17) / 119][Stage 65:===================================================>  (114 + 5) / 119][Stage 65:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.550836236 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 17 AND partitionZIndex<=217", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=217,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.4214881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===============================>                      (68 + 47) / 115][Stage 66:===================================>                  (75 + 40) / 115][Stage 66:========================================>             (87 + 28) / 115][Stage 66:================================================>    (105 + 10) / 115]                                                                                [Stage 67:=================================>                    (73 + 43) / 116][Stage 67:======================================>               (83 + 33) / 116][Stage 67:===============================================>     (104 + 12) / 116][Stage 67:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.845086728 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 2 AND partitionZIndex<=92", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=92,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.464471379 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (61 + 59) / 120][Stage 68:==============================>                       (68 + 52) / 120][Stage 68:=======================================>              (87 + 33) / 120][Stage 68:===============================================>     (107 + 13) / 120]                                                                                [Stage 69:============================>                         (63 + 58) / 121][Stage 69:=============================>                        (66 + 55) / 121][Stage 69:=======================================>              (89 + 32) / 121][Stage 69:================================================>    (110 + 11) / 121]                                                                                Time elapsed: 2.999549 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 1 AND partitionZIndex<=51", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=51,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.44405573 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 70:==========================>                           (60 + 61) / 121][Stage 70:===========================>                          (62 + 59) / 121][Stage 70:=================================>                    (76 + 45) / 121][Stage 70:===========================================>         (100 + 21) / 121][Stage 70:====================================================> (117 + 4) / 121]                                                                                [Stage 71:===========================>                          (61 + 61) / 122][Stage 71:=============================>                        (67 + 55) / 122][Stage 71:====================================>                 (82 + 40) / 122][Stage 71:============================================>        (103 + 19) / 122][Stage 71:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 2.971086568 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 29 AND partitionZIndex<=129", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=129,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.423428781 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (63 + 57) / 120][Stage 72:===============================>                      (71 + 49) / 120][Stage 72:======================================>               (85 + 35) / 120][Stage 72:===============================================>     (107 + 13) / 120][Stage 72:=====================================================>(118 + 2) / 120]                                                                                [Stage 73:============================>                         (64 + 57) / 121][Stage 73:==================================>                   (78 + 43) / 121][Stage 73:==========================================>           (96 + 25) / 121][Stage 73:==================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.259044548 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 25 AND partitionZIndex<=125", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=125,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.417474507 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (58 + 55) / 113][Stage 74:============================>                         (60 + 53) / 113][Stage 74:=====================================>                (78 + 35) / 113][Stage 74:==========================================>           (89 + 24) / 113][Stage 74:===================================================>  (107 + 6) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:=============================>                        (63 + 51) / 114][Stage 75:====================================>                 (76 + 38) / 114][Stage 75:==============================================>       (99 + 15) / 114][Stage 75:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.256173274 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 49 AND partitionZIndex<=149", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=149,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.416832544 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 76:=============================>                        (61 + 52) / 113][Stage 76:===================================>                  (74 + 39) / 113][Stage 76:===============================================>      (99 + 14) / 113][Stage 76:=====================================================>(111 + 2) / 113]                                                                                [Stage 77:============================>                         (60 + 54) / 114][Stage 77:==============================>                       (65 + 49) / 114][Stage 77:=====================================>                (79 + 35) / 114][Stage 77:===============================================>     (103 + 11) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.882946584 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 1 AND partitionZIndex<=61", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=61,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.440219037 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 78:>                                                       (0 + 0) / 120][Stage 78:===========================>                          (60 + 60) / 120][Stage 78:==============================>                       (68 + 52) / 120][Stage 78:========================================>             (90 + 30) / 120][Stage 78:=================================================>    (111 + 9) / 120]                                                                                [Stage 79:============================>                         (63 + 58) / 121][Stage 79:===============================>                      (71 + 50) / 121][Stage 79:=========================================>            (93 + 28) / 121][Stage 79:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 2.879548131 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 92 AND partitionZIndex<=192", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.375931328 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===================================>                  (74 + 39) / 113][Stage 80:=======================================>              (83 + 30) / 113][Stage 80:=============================================>        (96 + 17) / 113][Stage 80:===============================================>     (101 + 12) / 113][Stage 80:====================================================> (109 + 4) / 113]                                                                                [Stage 81:========================================>             (85 + 29) / 114][Stage 81:=============================================>        (95 + 19) / 114][Stage 81:=================================================>    (105 + 9) / 114][Stage 81:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.085126418 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 04 AND partitionZIndex<=204", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=204,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.47279673 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 82:========================================>             (86 + 29) / 115][Stage 82:============================================>         (94 + 21) / 115][Stage 82:==================================================>   (107 + 8) / 115][Stage 82:===================================================>  (109 + 6) / 115][Stage 82:===================================================>  (110 + 5) / 115][Stage 82:=====================================================>(114 + 1) / 115]                                                                                [Stage 83:=======================================>              (84 + 32) / 116][Stage 83:============================================>         (95 + 21) / 116][Stage 83:===============================================>     (105 + 11) / 116][Stage 83:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.538420576 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 20 AND partitionZIndex<=220", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=220,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.393565267 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 84:================================>                     (72 + 46) / 118][Stage 84:==================================>                   (75 + 43) / 118][Stage 84:======================================>               (84 + 34) / 118][Stage 84:===========================================>          (95 + 23) / 118][Stage 84:==================================================>   (111 + 7) / 118]                                                                                [Stage 85:=================================>                    (73 + 46) / 119][Stage 85:====================================>                 (80 + 39) / 119][Stage 85:=========================================>            (92 + 27) / 119][Stage 85:===============================================>     (107 + 12) / 119][Stage 85:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.27432428 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 96 AND partitionZIndex<=196", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=196,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.425095659 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==========================>                           (60 + 61) / 121][Stage 86:===============================>                      (70 + 51) / 121][Stage 86:======================================>               (87 + 34) / 121][Stage 86:===============================================>     (108 + 13) / 121]                                                                                [Stage 87:===========================>                          (62 + 60) / 122][Stage 87:==============================>                       (68 + 54) / 122][Stage 87:======================================>               (86 + 36) / 122][Stage 87:===============================================>     (109 + 13) / 122][Stage 87:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.168055288 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 5 AND partitionZIndex<=75", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=75,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.347270738 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 88:======================================>               (82 + 33) / 115][Stage 88:==========================================>           (90 + 25) / 115][Stage 88:===============================================>     (104 + 11) / 115][Stage 88:=====================================================>(113 + 2) / 115]                                                                                [Stage 89:=======================================>              (84 + 32) / 116][Stage 89:============================================>         (95 + 21) / 116][Stage 89:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.690589424 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 3 AND partitionZIndex<=83", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=83,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.416841958 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (59 + 54) / 113][Stage 90:================================>                     (67 + 46) / 113][Stage 90:=======================================>              (83 + 30) / 113][Stage 90:==============================================>      (100 + 13) / 113][Stage 90:=====================================================>(112 + 1) / 113]                                                                                [Stage 91:===========================>                          (59 + 55) / 114][Stage 91:===============================>                      (66 + 48) / 114][Stage 91:====================================>                 (76 + 38) / 114][Stage 91:============================================>         (94 + 20) / 114][Stage 91:===================================================>  (109 + 5) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.214339381 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 31 AND partitionZIndex<=131", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=131,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.539339218 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (60 + 60) / 120][Stage 92:=============================>                        (65 + 55) / 120][Stage 92:====================================>                 (82 + 38) / 120][Stage 92:================================================>    (109 + 11) / 120]                                                                                [Stage 93:===========================>                          (61 + 60) / 121][Stage 93:===============================>                      (71 + 50) / 121][Stage 93:=====================================>                (83 + 38) / 121][Stage 93:=============================================>       (103 + 18) / 121][Stage 93:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.017955963 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 7 AND partitionZIndex<=47", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.399317756 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 94:================================>                     (69 + 46) / 115][Stage 94:=======================================>              (85 + 30) / 115][Stage 94:=============================================>        (97 + 18) / 115][Stage 94:====================================================> (111 + 4) / 115][Stage 94:=====================================================>(113 + 2) / 115]                                                                                [Stage 95:================================>                     (70 + 46) / 116][Stage 95:========================================>             (88 + 28) / 116][Stage 95:=============================================>       (100 + 16) / 116][Stage 95:====================================================> (112 + 4) / 116][Stage 95:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.294685591 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 23 AND partitionZIndex<=123", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=123,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.419595321 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 96:==========================>                           (60 + 61) / 121][Stage 96:============================>                         (63 + 58) / 121][Stage 96:=================================>                    (74 + 47) / 121][Stage 96:=========================================>            (93 + 28) / 121][Stage 96:=================================================>    (112 + 9) / 121]                                                                                [Stage 97:===========================>                          (62 + 60) / 122][Stage 97:===============================>                      (71 + 51) / 122][Stage 97:=====================================>                (85 + 37) / 122][Stage 97:================================================>    (112 + 10) / 122][Stage 97:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.220554874 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 0 AND partitionZIndex<=40", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=40,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.390583134 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 98:================================>                     (72 + 46) / 118][Stage 98:===================================>                  (77 + 41) / 118][Stage 98:==========================================>           (93 + 25) / 118][Stage 98:==================================================>   (110 + 8) / 118]                                                                                [Stage 99:=================================>                    (73 + 46) / 119][Stage 99:=====================================>                (83 + 36) / 119][Stage 99:============================================>         (97 + 22) / 119][Stage 99:================================================>    (109 + 10) / 119]                                                                                Time elapsed: 2.952849935 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 0 AND partitionZIndex<=80", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=80,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.37638884 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (72 + 46) / 118][Stage 100:=================================>                   (74 + 44) / 118][Stage 100:=====================================>               (83 + 35) / 118][Stage 100:===========================================>         (97 + 21) / 118][Stage 100:==================================================>  (112 + 6) / 118]                                                                                [Stage 101:=================================>                   (75 + 44) / 119][Stage 101:=====================================>               (84 + 35) / 119][Stage 101:===========================================>        (100 + 19) / 119][Stage 101:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.050336752 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 4 AND partitionZIndex<=34", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.427789837 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 61) / 121][Stage 102:============================>                        (64 + 57) / 121][Stage 102:===================================>                 (81 + 40) / 121][Stage 102:==============================================>     (108 + 13) / 121][Stage 102:====================================================>(119 + 2) / 121]                                                                                [Stage 103:==========================>                          (61 + 61) / 122][Stage 103:=============================>                       (67 + 55) / 122][Stage 103:===================================>                 (82 + 40) / 122][Stage 103:===========================================>        (102 + 20) / 122][Stage 103:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.052139809 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 43 AND partitionZIndex<=143", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=143,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.383615309 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==================================>                  (74 + 41) / 115][Stage 104:=======================================>             (86 + 29) / 115][Stage 104:==============================================>     (103 + 12) / 115]                                                                                [Stage 105:================================>                    (71 + 45) / 116][Stage 105:======================================>              (85 + 31) / 116][Stage 105:===============================================>    (105 + 11) / 116][Stage 105:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.697826706 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 45 AND partitionZIndex<=245", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.377901436 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 106:================================>                    (73 + 45) / 118][Stage 106:==================================>                  (77 + 41) / 118][Stage 106:=====================================>               (83 + 35) / 118][Stage 106:========================================>            (90 + 28) / 118][Stage 106:=============================================>      (103 + 15) / 118][Stage 106:====================================================>(116 + 2) / 118]                                                                                [Stage 107:================================>                    (74 + 45) / 119][Stage 107:===================================>                 (79 + 40) / 119][Stage 107:=======================================>             (88 + 31) / 119][Stage 107:============================================>       (101 + 18) / 119][Stage 107:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.591444083 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 40 AND partitionZIndex<=140", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=140,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.353038065 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=====================================>               (81 + 34) / 115][Stage 108:========================================>            (87 + 28) / 115][Stage 108:=============================================>       (98 + 17) / 115][Stage 108:=================================================>   (108 + 7) / 115][Stage 108:====================================================>(114 + 1) / 115]                                                                                [Stage 109:=====================================>               (83 + 33) / 116][Stage 109:===========================================>         (95 + 21) / 116][Stage 109:===============================================>    (106 + 10) / 116][Stage 109:===================================================> (113 + 3) / 116][Stage 109:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.082405366 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 98 AND partitionZIndex<=198", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=198,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.359641023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=================================>                   (72 + 41) / 113][Stage 110:======================================>              (83 + 30) / 113][Stage 110:=============================================>       (98 + 15) / 113][Stage 110:==================================================>  (107 + 6) / 113][Stage 110:====================================================>(112 + 1) / 113]                                                                                [Stage 111:======================================>              (82 + 32) / 114][Stage 111:==========================================>          (91 + 23) / 114][Stage 111:==============================================>     (101 + 13) / 114][Stage 111:==================================================>  (108 + 6) / 114][Stage 111:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.223843739 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 35 AND partitionZIndex<=235", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=235,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402064322 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (60 + 60) / 120][Stage 112:==============================>                      (68 + 52) / 120][Stage 112:====================================>                (82 + 38) / 120][Stage 112:=================================================>   (112 + 8) / 120][Stage 112:====================================================>(119 + 1) / 120]                                                                                [Stage 113:==========================>                          (61 + 60) / 121][Stage 113:=============================>                       (68 + 53) / 121][Stage 113:======================================>              (87 + 34) / 121][Stage 113:==============================================>     (109 + 12) / 121][Stage 113:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.939049701 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 5 AND partitionZIndex<=45", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=45,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.381972843 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===============================>                     (68 + 47) / 115][Stage 114:====================================>                (79 + 36) / 115][Stage 114:==========================================>          (93 + 22) / 115][Stage 114:=================================================>   (108 + 7) / 115]                                                                                [Stage 115:==============================>                      (67 + 49) / 116][Stage 115:=====================================>               (82 + 34) / 116][Stage 115:==========================================>          (93 + 23) / 116][Stage 115:===============================================>    (105 + 11) / 116][Stage 115:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.053903859 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 8 AND partitionZIndex<=78", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=78,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.405366769 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 61) / 121][Stage 116:============================>                        (64 + 57) / 121][Stage 116:================================>                    (75 + 46) / 121][Stage 116:===========================================>         (99 + 22) / 121][Stage 116:===================================================> (117 + 4) / 121]                                                                                [Stage 117:===========================>                         (64 + 58) / 122][Stage 117:==================================>                  (80 + 42) / 122][Stage 117:==========================================>          (97 + 25) / 122][Stage 117:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.087950807 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 93 AND partitionZIndex<=193", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=193,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.405712609 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 118:============================>                        (64 + 56) / 120][Stage 118:==================================>                  (78 + 42) / 120][Stage 118:===========================================>         (99 + 21) / 120][Stage 118:==================================================>  (115 + 5) / 120]                                                                                [Stage 119:===========================>                         (62 + 59) / 121][Stage 119:=================================>                   (76 + 45) / 121][Stage 119:=========================================>           (94 + 27) / 121][Stage 119:=================================================>   (113 + 8) / 121][Stage 119:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.143868976 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 37 AND partitionZIndex<=137", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=137,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397450324 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (59 + 54) / 113][Stage 120:=================================>                   (72 + 41) / 113][Stage 120:==========================================>          (90 + 23) / 113][Stage 120:=================================================>   (106 + 7) / 113]                                                                                [Stage 121:============================>                        (62 + 52) / 114][Stage 121:=================================>                   (71 + 43) / 114][Stage 121:==============================================>      (99 + 15) / 114][Stage 121:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.000277782 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 02 AND partitionZIndex<=202", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=202,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.426464525 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 60) / 120][Stage 122:============================>                        (65 + 55) / 120][Stage 122:=====================================>               (84 + 36) / 120][Stage 122:==============================================>     (107 + 13) / 120]                                                                                [Stage 123:==========================>                          (61 + 60) / 121][Stage 123:===============================>                     (73 + 48) / 121][Stage 123:========================================>            (92 + 29) / 121][Stage 123:===============================================>    (111 + 10) / 121][Stage 123:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.982102822 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 80 AND partitionZIndex<=180", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=180,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.387386953 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (59 + 54) / 113][Stage 124:===============================>                     (68 + 45) / 113][Stage 124:======================================>              (82 + 31) / 113][Stage 124:=================================================>   (106 + 7) / 113][Stage 124:===================================================> (109 + 4) / 113]                                                                                [Stage 125:===========================>                         (60 + 54) / 114][Stage 125:===============================>                     (68 + 46) / 114][Stage 125:====================================>                (79 + 35) / 114][Stage 125:==============================================>      (99 + 15) / 114][Stage 125:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.141623004 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 1 AND partitionZIndex<=11", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=11,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.410706158 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 60) / 120][Stage 126:============================>                        (64 + 56) / 120][Stage 126:==================================>                  (79 + 41) / 120][Stage 126:=========================================>           (95 + 25) / 120][Stage 126:===================================================> (117 + 3) / 120][Stage 126:====================================================>(119 + 1) / 120]                                                                                [Stage 127:==========================>                          (61 + 60) / 121][Stage 127:===============================>                     (72 + 49) / 121][Stage 127:======================================>              (87 + 34) / 121][Stage 127:============================================>       (103 + 18) / 121][Stage 127:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.39173848 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 61 AND partitionZIndex<=161", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=161,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.344281929 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 128:====================================>                (79 + 36) / 115][Stage 128:=====================================>               (81 + 34) / 115][Stage 128:========================================>            (87 + 28) / 115][Stage 128:=============================================>       (99 + 16) / 115]                                                                                [Stage 129:======================================>              (84 + 32) / 116][Stage 129:=========================================>           (91 + 25) / 116][Stage 129:==============================================>     (103 + 13) / 116]                                                                                Time elapsed: 2.63477616 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 91 AND partitionZIndex<=191", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=191,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.386044546 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (58 + 55) / 113][Stage 130:==============================>                      (65 + 48) / 113][Stage 130:=====================================>               (80 + 33) / 113][Stage 130:=========================================>           (89 + 24) / 113][Stage 130:===============================================>    (103 + 10) / 113][Stage 130:====================================================>(112 + 1) / 113]                                                                                [Stage 131:===========================>                         (59 + 55) / 114][Stage 131:===============================>                     (68 + 46) / 114][Stage 131:=====================================>               (81 + 33) / 114][Stage 131:============================================>        (96 + 18) / 114][Stage 131:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.26654961 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 66 AND partitionZIndex<=166", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=166,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.355597619 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 132:=====================================>               (79 + 34) / 113][Stage 132:===========================================>         (92 + 21) / 113][Stage 132:==============================================>     (100 + 13) / 113][Stage 132:===================================================> (109 + 4) / 113][Stage 132:====================================================>(112 + 1) / 113]                                                                                [Stage 133:======================================>              (83 + 31) / 114][Stage 133:=============================================>       (98 + 16) / 114][Stage 133:===============================================>    (104 + 10) / 114][Stage 133:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.124920403 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 72 AND partitionZIndex<=172", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=172,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.352632711 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 134:================================>                    (70 + 43) / 113][Stage 134:=======================================>             (85 + 28) / 113][Stage 134:===========================================>         (93 + 20) / 113][Stage 134:==============================================>      (99 + 14) / 113][Stage 134:==================================================>  (107 + 6) / 113][Stage 134:====================================================>(111 + 2) / 113]                                                                                [Stage 135:===================================>                 (77 + 37) / 114][Stage 135:=======================================>             (85 + 29) / 114][Stage 135:=============================================>      (100 + 14) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.852851311 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 0 AND partitionZIndex<=60", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=60,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.339381732 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 136:======================================>              (83 + 32) / 115][Stage 136:===========================================>         (94 + 21) / 115][Stage 136:=================================================>   (107 + 8) / 115][Stage 136:==================================================>  (109 + 6) / 115][Stage 136:====================================================>(114 + 1) / 115]                                                                                [Stage 137:======================================>              (85 + 31) / 116][Stage 137:===========================================>         (96 + 20) / 116][Stage 137:=================================================>   (108 + 8) / 116][Stage 137:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.154067348 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 4 AND partitionZIndex<=64", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=64,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.394092785 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==========================>                          (60 + 60) / 120][Stage 138:============================>                        (64 + 56) / 120][Stage 138:=====================================>               (84 + 36) / 120][Stage 138:=============================================>      (104 + 16) / 120][Stage 138:====================================================>(118 + 2) / 120]                                                                                [Stage 139:==========================>                          (61 + 60) / 121][Stage 139:=============================>                       (68 + 53) / 121][Stage 139:====================================>                (84 + 37) / 121][Stage 139:===============================================>    (110 + 11) / 121]                                                                                Time elapsed: 2.798615563 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 9 AND partitionZIndex<=39", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=39,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.370001517 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 140:================================>                    (72 + 46) / 118][Stage 140:==================================>                  (76 + 42) / 118][Stage 140:===========================================>         (96 + 22) / 118][Stage 140:==================================================>  (113 + 5) / 118][Stage 140:====================================================>(116 + 2) / 118]                                                                                [Stage 141:================================>                    (73 + 46) / 119][Stage 141:====================================>                (81 + 38) / 119][Stage 141:===========================================>         (97 + 22) / 119][Stage 141:================================================>    (110 + 9) / 119][Stage 141:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 2.969762895 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 01 AND partitionZIndex<=201", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=201,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.404872073 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (60 + 61) / 121][Stage 142:===============================>                     (72 + 49) / 121][Stage 142:========================================>            (93 + 28) / 121][Stage 142:==================================================>  (115 + 6) / 121]                                                                                [Stage 143:==========================>                          (62 + 60) / 122][Stage 143:=============================>                       (68 + 54) / 122][Stage 143:======================================>              (89 + 33) / 122][Stage 143:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.014829514 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=100", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=100,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.387375063 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (58 + 55) / 113][Stage 144:===============================>                     (67 + 46) / 113][Stage 144:=======================================>             (84 + 29) / 113][Stage 144:==============================================>      (99 + 14) / 113][Stage 144:==================================================>  (108 + 5) / 113]                                                                                [Stage 145:===========================>                         (60 + 54) / 114][Stage 145:===============================>                     (67 + 47) / 114][Stage 145:========================================>            (87 + 27) / 114][Stage 145:==================================================>  (108 + 6) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.147278595 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 63 AND partitionZIndex<=163", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=163,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.401487722 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 61) / 121][Stage 146:==============================>                      (70 + 51) / 121][Stage 146:=========================================>           (94 + 27) / 121][Stage 146:=================================================>   (113 + 8) / 121][Stage 146:====================================================>(120 + 1) / 121]                                                                                [Stage 147:===========================>                         (63 + 59) / 122][Stage 147:==============================>                      (71 + 51) / 122][Stage 147:=========================================>           (96 + 26) / 122][Stage 147:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.14867185 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 77 AND partitionZIndex<=177", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=177,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39778667 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 148:>                                                      (0 + 0) / 120][Stage 148:==========================>                          (60 + 60) / 120][Stage 148:===============================>                     (71 + 49) / 120][Stage 148:=====================================>               (86 + 34) / 120][Stage 148:=============================================>      (106 + 14) / 120][Stage 148:====================================================>(119 + 1) / 120]                                                                                [Stage 149:==========================>                          (61 + 60) / 121][Stage 149:==============================>                      (69 + 52) / 121][Stage 149:===================================>                 (80 + 41) / 121][Stage 149:===============================================>    (110 + 11) / 121][Stage 149:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.049086225 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 58 AND partitionZIndex<=158", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.406412293 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 60) / 120][Stage 150:===========================>                         (63 + 57) / 120][Stage 150:=================================>                   (76 + 44) / 120][Stage 150:=============================================>      (104 + 16) / 120][Stage 150:===================================================> (117 + 3) / 120]                                                                                [Stage 151:===============================>                     (72 + 49) / 121][Stage 151:===================================>                 (81 + 40) / 121][Stage 151:==========================================>         (100 + 21) / 121][Stage 151:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.991376756 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 82 AND partitionZIndex<=182", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=182,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.360374564 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 152:================================>                    (72 + 46) / 118][Stage 152:===================================>                 (78 + 40) / 118][Stage 152:=======================================>             (88 + 30) / 118][Stage 152:============================================>       (101 + 17) / 118][Stage 152:==================================================>  (112 + 6) / 118][Stage 152:====================================================>(117 + 1) / 118]                                                                                [Stage 153:================================>                    (73 + 46) / 119][Stage 153:=================================>                   (75 + 44) / 119][Stage 153:====================================>                (81 + 38) / 119][Stage 153:=========================================>           (93 + 26) / 119][Stage 153:================================================>    (110 + 9) / 119][Stage 153:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.51322142 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1  AND partitionZIndex<=1", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=1 AND partitionZIndex<=1,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.36296335 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:===================================>                 (78 + 40) / 118][Stage 154:=====================================>               (84 + 34) / 118][Stage 154:===========================================>         (97 + 21) / 118][Stage 154:===================================================> (114 + 4) / 118]                                                                                [Stage 155:================================>                    (73 + 46) / 119][Stage 155:===================================>                 (79 + 40) / 119][Stage 155:=======================================>             (89 + 30) / 119][Stage 155:===========================================>        (100 + 19) / 119][Stage 155:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.332885308 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 6 AND partitionZIndex<=86", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.36348429 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (72 + 46) / 118][Stage 156:=================================>                   (74 + 44) / 118][Stage 156:===================================>                 (80 + 38) / 118][Stage 156:=======================================>             (87 + 31) / 118][Stage 156:==============================================>     (106 + 12) / 118][Stage 156:===================================================> (115 + 3) / 118]                                                                                [Stage 157:================================>                    (74 + 45) / 119][Stage 157:====================================>                (82 + 37) / 119][Stage 157:===========================================>         (98 + 21) / 119][Stage 157:===============================================>    (108 + 11) / 119][Stage 157:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.423843291 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 0 AND partitionZIndex<=90", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=90,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.38892572 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 158:============================>                        (61 + 52) / 113][Stage 158:==================================>                  (73 + 40) / 113][Stage 158:==========================================>          (90 + 23) / 113][Stage 158:=================================================>   (106 + 7) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:=============================>                       (64 + 50) / 114][Stage 159:====================================>                (78 + 36) / 114][Stage 159:==========================================>          (92 + 22) / 114][Stage 159:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.234997617 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 6 AND partitionZIndex<=36", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=36,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.38566835 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===================================>                 (77 + 38) / 115][Stage 160:=========================================>           (91 + 24) / 115][Stage 160:==============================================>     (103 + 12) / 115][Stage 160:====================================================>(113 + 2) / 115]                                                                                [Stage 161:===============================>                     (70 + 46) / 116][Stage 161:=====================================>               (83 + 33) / 116][Stage 161:=============================================>       (99 + 17) / 116][Stage 161:==================================================>  (110 + 6) / 116][Stage 161:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.157013792 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 38 AND partitionZIndex<=138", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.408135591 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 61) / 121][Stage 162:===============================>                     (71 + 50) / 121][Stage 162:====================================>                (84 + 37) / 121][Stage 162:===========================================>         (99 + 22) / 121][Stage 162:=================================================>   (113 + 8) / 121]                                                                                [Stage 163:===========================>                         (64 + 58) / 122][Stage 163:================================>                    (75 + 47) / 122][Stage 163:=======================================>             (91 + 31) / 122][Stage 163:==============================================>     (110 + 12) / 122]                                                                                Time elapsed: 3.211386374 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 2 AND partitionZIndex<=32", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=32,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.366748836 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 164:=============================>                       (65 + 50) / 115][Stage 164:==================================>                  (75 + 40) / 115][Stage 164:==========================================>          (92 + 23) / 115][Stage 164:===============================================>    (105 + 10) / 115][Stage 164:====================================================>(113 + 2) / 115]                                                                                [Stage 165:=====================================>               (81 + 35) / 116][Stage 165:=========================================>           (91 + 25) / 116][Stage 165:===================================================> (112 + 4) / 116][Stage 165:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.980182286 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 79 AND partitionZIndex<=179", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=179,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.341409924 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 166:========================================>            (87 + 28) / 115][Stage 166:==============================================>     (102 + 13) / 115][Stage 166:===================================================> (111 + 4) / 115]                                                                                [Stage 167:======================================>              (84 + 32) / 116][Stage 167:===========================================>         (96 + 20) / 116][Stage 167:=================================================>   (108 + 8) / 116][Stage 167:===================================================> (113 + 3) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.834361515 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 0 AND partitionZIndex<=30", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.409310091 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 168:=============================>                       (62 + 51) / 113][Stage 168:=================================>                   (71 + 42) / 113][Stage 168:===========================================>         (92 + 21) / 113][Stage 168:==============================================>     (102 + 11) / 113][Stage 168:====================================================>(111 + 2) / 113]                                                                                [Stage 169:=============================>                       (63 + 51) / 114][Stage 169:==================================>                  (74 + 40) / 114][Stage 169:==========================================>          (92 + 22) / 114][Stage 169:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.215298539 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 57 AND partitionZIndex<=157", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=157,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.335203885 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 170:=====================================>               (82 + 33) / 115][Stage 170:==========================================>          (92 + 23) / 115][Stage 170:=================================================>   (107 + 8) / 115][Stage 170:====================================================>(113 + 2) / 115]                                                                                [Stage 171:=======================================>             (87 + 29) / 116][Stage 171:============================================>       (100 + 16) / 116][Stage 171:===================================================> (112 + 4) / 116][Stage 171:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.984407534 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 33 AND partitionZIndex<=133", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=133,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.369400139 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=============================>                       (65 + 50) / 115][Stage 172:==================================>                  (75 + 40) / 115][Stage 172:============================================>        (96 + 19) / 115][Stage 172:==============================================>     (102 + 13) / 115][Stage 172:====================================================>(113 + 2) / 115]                                                                                [Stage 173:===============================>                     (70 + 46) / 116][Stage 173:======================================>              (85 + 31) / 116][Stage 173:=============================================>       (99 + 17) / 116][Stage 173:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.95675101 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 88 AND partitionZIndex<=188", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=188,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.387928849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 174:============================>                        (61 + 52) / 113][Stage 174:=================================>                   (72 + 41) / 113][Stage 174:=========================================>           (89 + 24) / 113][Stage 174:==============================================>      (99 + 14) / 113][Stage 174:==================================================>  (107 + 6) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:===========================>                         (59 + 55) / 114][Stage 175:===============================>                     (68 + 46) / 114][Stage 175:======================================>              (83 + 31) / 114][Stage 175:=============================================>       (98 + 16) / 114][Stage 175:=================================================>   (106 + 8) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.665629255 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 75 AND partitionZIndex<=175", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=175,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.3412902 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 176:====================================>                (79 + 36) / 115][Stage 176:========================================>            (88 + 27) / 115][Stage 176:=============================================>       (99 + 16) / 115][Stage 176:===================================================> (112 + 3) / 115]                                                                                [Stage 177:========================================>            (89 + 27) / 116][Stage 177:=============================================>       (99 + 17) / 116][Stage 177:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.707706669 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 6 AND partitionZIndex<=56", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=56,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.369091335 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 178:================================>                    (71 + 44) / 115][Stage 178:========================================>            (87 + 28) / 115][Stage 178:==============================================>     (103 + 12) / 115][Stage 178:===================================================> (111 + 4) / 115]                                                                                [Stage 179:===================================>                 (78 + 38) / 116][Stage 179:========================================>            (89 + 27) / 116][Stage 179:=============================================>       (99 + 17) / 116][Stage 179:===================================================> (112 + 4) / 116][Stage 179:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.401136548 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 03 AND partitionZIndex<=203", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=203,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.415600402 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 180:>                                                      (0 + 0) / 120][Stage 180:==========================>                          (60 + 60) / 120][Stage 180:=============================>                       (67 + 53) / 120][Stage 180:=====================================>               (86 + 34) / 120][Stage 180:=================================================>   (113 + 7) / 120]                                                                                [Stage 181:============================>                        (64 + 57) / 121][Stage 181:==================================>                  (78 + 43) / 121][Stage 181:==============================================>     (108 + 13) / 121]                                                                                Time elapsed: 2.841482462 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 2 AND partitionZIndex<=22", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=22,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.391044933 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==================================>                  (73 + 40) / 113][Stage 182:======================================>              (83 + 30) / 113][Stage 182:============================================>        (94 + 19) / 113][Stage 182:=================================================>   (105 + 8) / 113][Stage 182:==================================================>  (108 + 5) / 113]                                                                                [Stage 183:======================================>              (83 + 31) / 114][Stage 183:===========================================>         (93 + 21) / 114][Stage 183:=================================================>   (106 + 8) / 114][Stage 183:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.154538533 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 69 AND partitionZIndex<=169", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.344557765 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=====================================>               (82 + 33) / 115][Stage 184:===========================================>         (95 + 20) / 115][Stage 184:=================================================>   (107 + 8) / 115][Stage 184:====================================================>(114 + 1) / 115]                                                                                [Stage 185:=====================================>               (83 + 33) / 116][Stage 185:==========================================>          (94 + 22) / 116][Stage 185:===============================================>    (105 + 11) / 116][Stage 185:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.693912482 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 33 AND partitionZIndex<=233", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=233,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.338544107 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 186:=====================================>               (82 + 33) / 115][Stage 186:=========================================>           (90 + 25) / 115][Stage 186:================================================>    (106 + 9) / 115][Stage 186:====================================================>(114 + 1) / 115]                                                                                [Stage 187:=======================================>             (87 + 29) / 116][Stage 187:==========================================>          (94 + 22) / 116][Stage 187:================================================>    (107 + 9) / 116][Stage 187:==================================================>  (110 + 6) / 116][Stage 187:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.156888384 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 6 AND partitionZIndex<=66", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.371901477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 188:====================================>                (78 + 35) / 113][Stage 188:=========================================>           (89 + 24) / 113][Stage 188:==============================================>     (100 + 13) / 113][Stage 188:===================================================> (109 + 4) / 113][Stage 188:====================================================>(112 + 1) / 113]                                                                                [Stage 189:==================================>                  (75 + 39) / 114][Stage 189:==========================================>          (91 + 23) / 114][Stage 189:==============================================>      (99 + 15) / 114][Stage 189:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.868728807 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 71 AND partitionZIndex<=171", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=171,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.379324497 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 190:================================>                    (70 + 45) / 115][Stage 190:=====================================>               (81 + 34) / 115][Stage 190:=============================================>       (98 + 17) / 115]                                                                                [Stage 191:=================================>                   (73 + 43) / 116][Stage 191:========================================>            (88 + 28) / 116][Stage 191:============================================>       (100 + 16) / 116][Stage 191:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.633537577 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 76 AND partitionZIndex<=176", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=176,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.382324445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (59 + 54) / 113][Stage 192:============================>                        (60 + 53) / 113][Stage 192:=================================>                   (71 + 42) / 113][Stage 192:==============================================>     (102 + 11) / 113][Stage 192:====================================================>(111 + 2) / 113]                                                                                [Stage 193:============================>                        (62 + 52) / 114][Stage 193:================================>                    (70 + 44) / 114][Stage 193:========================================>            (88 + 26) / 114][Stage 193:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.074478955 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 14 AND partitionZIndex<=214", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.371679614 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==================================>                  (74 + 39) / 113][Stage 194:=======================================>             (85 + 28) / 113][Stage 194:=============================================>       (97 + 16) / 113][Stage 194:=================================================>   (105 + 8) / 113][Stage 194:====================================================>(111 + 2) / 113]                                                                                [Stage 195:=====================================>               (81 + 33) / 114][Stage 195:===========================================>         (94 + 20) / 114][Stage 195:===============================================>    (104 + 10) / 114][Stage 195:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.064492039 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 6 AND partitionZIndex<=26", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=26,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.394685636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (59 + 54) / 113][Stage 196:===============================>                     (68 + 45) / 113][Stage 196:=======================================>             (85 + 28) / 113][Stage 196:=================================================>   (106 + 7) / 113]                                                                                [Stage 197:============================>                        (61 + 53) / 114][Stage 197:=================================>                   (72 + 42) / 114][Stage 197:==============================================>      (99 + 15) / 114][Stage 197:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.911035573 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 27 AND partitionZIndex<=127", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=127,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.370538389 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 198:====================================>                (77 + 36) / 113][Stage 198:=========================================>           (88 + 25) / 113][Stage 198:=============================================>       (98 + 15) / 113][Stage 198:===================================================> (110 + 3) / 113][Stage 198:====================================================>(111 + 2) / 113]                                                                                [Stage 199:=====================================>               (81 + 33) / 114][Stage 199:==========================================>          (91 + 23) / 114][Stage 199:==============================================>     (102 + 12) / 114][Stage 199:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.055402539 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 30 AND partitionZIndex<=230", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=230,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.394569574 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (63 + 57) / 120][Stage 200:=================================>                   (76 + 44) / 120][Stage 200:=========================================>           (94 + 26) / 120][Stage 200:=================================================>   (112 + 8) / 120]                                                                                [Stage 201:==========================>                          (61 + 60) / 121][Stage 201:=============================>                       (68 + 53) / 121][Stage 201:==================================>                  (79 + 42) / 121][Stage 201:=========================================>           (94 + 27) / 121][Stage 201:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 2.973322928 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m0.199s
user	11m25.200s
sys	0m29.584s
