Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 16:05:40 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:05:54 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:05:54 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:05:54 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 16:05:57 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:06:07 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524160556-0566).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.44199352 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:========================>                              (52 + 63) / 115][Stage 0:==========================>                            (55 + 60) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:=====================================>                 (79 + 36) / 115][Stage 0:===========================================>           (90 + 25) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:============================>                          (60 + 56) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:=========================================>             (88 + 28) / 116][Stage 1:============================================>          (93 + 23) / 116][Stage 1:==============================================>        (99 + 17) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:====================================================>  (110 + 6) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 13.029638199 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.72396312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===============================>                       (68 + 50) / 118][Stage 2:================================>                      (69 + 49) / 118][Stage 2:=================================>                     (72 + 46) / 118][Stage 2:===================================>                   (76 + 42) / 118][Stage 2:====================================>                  (79 + 39) / 118][Stage 2:=====================================>                 (81 + 37) / 118][Stage 2:==========================================>            (91 + 27) / 118][Stage 2:===============================================>      (104 + 14) / 118][Stage 2:======================================================>(117 + 1) / 118]                                                                                [Stage 3:=================================>                     (73 + 46) / 119][Stage 3:====================================>                  (80 + 39) / 119][Stage 3:=====================================>                 (81 + 38) / 119][Stage 3:========================================>              (88 + 31) / 119][Stage 3:=============================================>         (99 + 20) / 119][Stage 3:===============================================>      (104 + 15) / 119][Stage 3:================================================>     (107 + 12) / 119][Stage 3:==================================================>    (110 + 9) / 119][Stage 3:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.176873895 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.697306266 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:========================>                              (51 + 62) / 113][Stage 4:===========================>                           (56 + 57) / 113][Stage 4:=============================>                         (60 + 53) / 113][Stage 4:===============================>                       (65 + 48) / 113][Stage 4:=====================================>                 (77 + 36) / 113][Stage 4:===========================================>           (90 + 23) / 113][Stage 4:===============================================>       (98 + 15) / 113][Stage 4:====================================================>  (108 + 5) / 113][Stage 4:=====================================================> (109 + 4) / 113]                                                                                [Stage 5:===========================>                           (58 + 56) / 114][Stage 5:=============================>                         (62 + 52) / 114][Stage 5:====================================>                  (75 + 39) / 114][Stage 5:========================================>              (84 + 30) / 114][Stage 5:==============================================>        (97 + 17) / 114][Stage 5:==================================================>    (105 + 9) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.813952625 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=189", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=189,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.604758799 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=================================>                     (72 + 46) / 118][Stage 6:====================================>                  (79 + 39) / 118][Stage 6:=====================================>                 (81 + 37) / 118][Stage 6:===========================================>           (93 + 25) / 118][Stage 6:================================================>     (105 + 13) / 118][Stage 6:====================================================>  (113 + 5) / 118][Stage 6:======================================================>(116 + 2) / 118]                                                                                [Stage 7:==================================>                    (75 + 44) / 119][Stage 7:====================================>                  (79 + 40) / 119][Stage 7:========================================>              (87 + 32) / 119][Stage 7:=============================================>        (101 + 18) / 119][Stage 7:===================================================>   (111 + 8) / 119][Stage 7:=====================================================> (116 + 3) / 119][Stage 7:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.638925145 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=221", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=221,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.513730609 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:======================================>                (80 + 35) / 115][Stage 8:=========================================>             (87 + 28) / 115][Stage 8:==============================================>        (97 + 18) / 115][Stage 8:==============================================>       (100 + 15) / 115][Stage 8:==================================================>    (106 + 9) / 115][Stage 8:=====================================================> (112 + 3) / 115]                                                                                [Stage 9:=======================================>               (83 + 33) / 116][Stage 9:============================================>          (94 + 22) / 116][Stage 9:==============================================>       (100 + 16) / 116][Stage 9:================================================>     (104 + 12) / 116][Stage 9:====================================================>  (111 + 5) / 116][Stage 9:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.809752901 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.555549983 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (58 + 55) / 113][Stage 10:============================>                         (60 + 53) / 113][Stage 10:==================================>                   (73 + 40) / 113][Stage 10:========================================>             (85 + 28) / 113][Stage 10:=============================================>        (96 + 17) / 113][Stage 10:====================================================> (110 + 3) / 113]                                                                                [Stage 11:============================>                         (60 + 54) / 114][Stage 11:============================>                         (61 + 53) / 114][Stage 11:=================================>                    (71 + 43) / 114][Stage 11:=========================================>            (88 + 26) / 114][Stage 11:==============================================>       (98 + 16) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.866398441 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.617553745 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (57 + 56) / 113][Stage 12:============================>                         (59 + 54) / 113][Stage 12:=================================>                    (70 + 43) / 113][Stage 12:======================================>               (81 + 32) / 113][Stage 12:================================================>    (103 + 10) / 113][Stage 12:====================================================> (110 + 3) / 113]                                                                                [Stage 13:============================>                         (60 + 54) / 114][Stage 13:=================================>                    (70 + 44) / 114][Stage 13:=======================================>              (83 + 31) / 114][Stage 13:=============================================>        (97 + 17) / 114][Stage 13:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.71966687 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=66", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=66,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.524323196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (57 + 56) / 113][Stage 14:============================>                         (59 + 54) / 113][Stage 14:=================================>                    (70 + 43) / 113][Stage 14:========================================>             (85 + 28) / 113][Stage 14:===============================================>      (99 + 14) / 113][Stage 14:==================================================>   (105 + 8) / 113][Stage 14:=====================================================>(112 + 1) / 113]                                                                                [Stage 15:===========================>                          (59 + 55) / 114][Stage 15:=============================>                        (62 + 52) / 114][Stage 15:===================================>                  (74 + 40) / 114][Stage 15:===========================================>          (92 + 22) / 114][Stage 15:==================================================>   (106 + 8) / 114][Stage 15:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.91216997 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.549036758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:=============================>                        (62 + 51) / 113][Stage 16:=====================================>                (79 + 34) / 113][Stage 16:==============================================>      (100 + 13) / 113][Stage 16:====================================================> (110 + 3) / 113][Stage 16:=====================================================>(112 + 1) / 113]                                                                                [Stage 17:===========================>                          (58 + 56) / 114][Stage 17:=============================>                        (63 + 51) / 114][Stage 17:====================================>                 (76 + 38) / 114][Stage 17:============================================>         (94 + 20) / 114][Stage 17:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.617752313 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453359573 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==================================>                   (72 + 41) / 113][Stage 18:=========================================>            (86 + 27) / 113][Stage 18:============================================>         (93 + 20) / 113][Stage 18:===============================================>     (102 + 11) / 113][Stage 18:==================================================>   (106 + 7) / 113][Stage 18:====================================================> (110 + 3) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:=====================================>                (80 + 34) / 114][Stage 19:============================================>         (93 + 21) / 114][Stage 19:==============================================>      (100 + 14) / 114][Stage 19:==================================================>   (107 + 7) / 114][Stage 19:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.742363564 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=156", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=156,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444160789 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:====================================>                 (78 + 37) / 115][Stage 20:======================================>               (83 + 32) / 115][Stage 20:=========================================>            (89 + 26) / 115][Stage 20:===============================================>     (103 + 12) / 115][Stage 20:====================================================> (112 + 3) / 115]                                                                                [Stage 21:=======================================>              (84 + 32) / 116][Stage 21:===========================================>          (94 + 22) / 116][Stage 21:=================================================>    (107 + 9) / 116][Stage 21:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.028701735 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=230", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=230,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505664452 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:============================>                         (59 + 54) / 113][Stage 22:============================>                         (60 + 53) / 113][Stage 22:=================================>                    (71 + 42) / 113][Stage 22:=======================================>              (83 + 30) / 113][Stage 22:==============================================>      (100 + 13) / 113][Stage 22:====================================================> (110 + 3) / 113]                                                                                [Stage 23:===========================>                          (58 + 56) / 114][Stage 23:============================>                         (61 + 53) / 114][Stage 23:====================================>                 (76 + 38) / 114][Stage 23:===========================================>          (92 + 22) / 114][Stage 23:==================================================>   (107 + 7) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.623166234 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=219", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=219,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.527755658 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:>                                                       (0 + 0) / 113][Stage 24:===========================>                          (58 + 55) / 113][Stage 24:==============================>                       (64 + 49) / 113][Stage 24:======================================>               (81 + 32) / 113][Stage 24:===============================================>      (99 + 14) / 113][Stage 24:====================================================> (110 + 3) / 113]                                                                                [Stage 25:===========================>                          (59 + 55) / 114][Stage 25:=============================>                        (63 + 51) / 114][Stage 25:==================================>                   (73 + 41) / 114][Stage 25:==========================================>           (89 + 25) / 114][Stage 25:=================================================>    (105 + 9) / 114][Stage 25:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.451457136 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=188", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=188,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439745639 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:=================================>                    (70 + 43) / 113][Stage 26:======================================>               (81 + 32) / 113][Stage 26:===========================================>          (92 + 21) / 113][Stage 26:==============================================>      (100 + 13) / 113][Stage 26:===================================================>  (108 + 5) / 113]                                                                                [Stage 27:====================================>                 (78 + 36) / 114][Stage 27:========================================>             (85 + 29) / 114][Stage 27:=============================================>        (97 + 17) / 114][Stage 27:===================================================>  (108 + 6) / 114][Stage 27:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.132648832 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.541325439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:=================================>                    (71 + 42) / 113][Stage 28:=======================================>              (82 + 31) / 113][Stage 28:===========================================>          (91 + 22) / 113][Stage 28:===============================================>     (102 + 11) / 113][Stage 28:====================================================> (109 + 4) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:=====================================>                (79 + 35) / 114][Stage 29:===========================================>          (91 + 23) / 114][Stage 29:============================================>         (94 + 20) / 114][Stage 29:===================================================>  (108 + 6) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.340842069 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=24", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=24,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.504512879 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:===========================>                          (61 + 60) / 121][Stage 30:=============================>                        (66 + 55) / 121][Stage 30:=========================================>            (92 + 29) / 121][Stage 30:===============================================>     (109 + 12) / 121][Stage 30:====================================================> (117 + 4) / 121]                                                                                [Stage 31:===========================>                          (61 + 61) / 122][Stage 31:============================>                         (64 + 58) / 122][Stage 31:================================>                     (74 + 48) / 122][Stage 31:=============================================>       (105 + 17) / 122][Stage 31:=====================================================>(120 + 2) / 122][Stage 31:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.556310756 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=231", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=231,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404474599 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:=====================================>                (80 + 35) / 115][Stage 32:===========================================>          (93 + 22) / 115][Stage 32:===============================================>     (104 + 11) / 115][Stage 32:===================================================>  (110 + 5) / 115][Stage 32:====================================================> (112 + 3) / 115]                                                                                [Stage 33:=====================================>                (81 + 35) / 116][Stage 33:========================================>             (88 + 28) / 116][Stage 33:=============================================>       (100 + 16) / 116][Stage 33:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.134829012 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.55526486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:================================>                     (72 + 46) / 118][Stage 34:==================================>                   (75 + 43) / 118][Stage 34:======================================>               (85 + 33) / 118][Stage 34:=============================================>       (101 + 17) / 118][Stage 34:==================================================>   (111 + 7) / 118][Stage 34:====================================================> (115 + 3) / 118][Stage 34:=====================================================>(117 + 1) / 118]                                                                                [Stage 35:=================================>                    (73 + 46) / 119][Stage 35:=================================>                    (74 + 45) / 119][Stage 35:=========================================>            (91 + 28) / 119][Stage 35:============================================>         (98 + 21) / 119][Stage 35:=================================================>    (110 + 9) / 119][Stage 35:===================================================>  (113 + 6) / 119][Stage 35:====================================================> (116 + 3) / 119][Stage 35:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.649615784 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=237", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=237,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.517668261 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==========================>                           (60 + 61) / 121][Stage 36:================================>                     (72 + 49) / 121][Stage 36:=====================================>                (85 + 36) / 121][Stage 36:===============================================>     (108 + 13) / 121]                                                                                [Stage 37:===========================>                          (61 + 61) / 122][Stage 37:===============================>                      (71 + 51) / 122][Stage 37:========================================>             (92 + 30) / 122][Stage 37:==================================================>   (115 + 7) / 122][Stage 37:====================================================> (119 + 3) / 122][Stage 37:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.594510484 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=46", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=46,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429185843 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:>                                                       (0 + 0) / 113][Stage 38:==================================>                   (73 + 40) / 113][Stage 38:======================================>               (81 + 32) / 113][Stage 38:=============================================>        (96 + 17) / 113][Stage 38:===================================================>  (108 + 5) / 113][Stage 38:=====================================================>(112 + 1) / 113]                                                                                [Stage 39:===================================>                  (75 + 39) / 114][Stage 39:========================================>             (85 + 29) / 114][Stage 39:=============================================>        (96 + 18) / 114][Stage 39:==================================================>   (106 + 8) / 114][Stage 39:===================================================>  (108 + 6) / 114][Stage 39:===================================================>  (109 + 5) / 114][Stage 39:====================================================> (110 + 4) / 114][Stage 39:====================================================> (111 + 3) / 114][Stage 39:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.0113232 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=62", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=62,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.548455056 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==================================>                   (73 + 42) / 115][Stage 40:========================================>             (86 + 29) / 115][Stage 40:==============================================>      (100 + 15) / 115][Stage 40:====================================================> (111 + 4) / 115]                                                                                [Stage 41:==================================>                   (75 + 41) / 116][Stage 41:========================================>             (88 + 28) / 116][Stage 41:==============================================>       (99 + 17) / 116][Stage 41:=================================================>    (107 + 9) / 116][Stage 41:===================================================>  (110 + 6) / 116][Stage 41:=====================================================>(114 + 2) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.360656316 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=246", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=246,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427207729 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:======================================>               (83 + 32) / 115][Stage 42:============================================>         (95 + 20) / 115][Stage 42:==================================================>   (107 + 8) / 115][Stage 42:===================================================>  (110 + 5) / 115][Stage 42:====================================================> (112 + 3) / 115]                                                                                [Stage 43:=======================================>              (85 + 31) / 116][Stage 43:============================================>         (95 + 21) / 116][Stage 43:==================================================>   (108 + 8) / 116][Stage 43:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.285860941 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=157", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=157,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42724373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=======================================>              (82 + 31) / 113][Stage 44:===========================================>          (90 + 23) / 113][Stage 44:===============================================>     (102 + 11) / 113][Stage 44:===================================================>  (107 + 6) / 113]                                                                                [Stage 45:=======================================>              (84 + 30) / 114][Stage 45:==========================================>           (90 + 24) / 114][Stage 45:===============================================>     (102 + 12) / 114][Stage 45:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.010300281 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=25", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=25,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448758937 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (58 + 55) / 113][Stage 46:=============================>                        (61 + 52) / 113][Stage 46:=================================>                    (71 + 42) / 113][Stage 46:===============================================>      (99 + 14) / 113][Stage 46:====================================================> (110 + 3) / 113][Stage 46:=====================================================>(111 + 2) / 113]                                                                                [Stage 47:===========================>                          (59 + 55) / 114][Stage 47:============================>                         (60 + 54) / 114][Stage 47:=====================================>                (80 + 34) / 114][Stage 47:============================================>         (94 + 20) / 114][Stage 47:====================================================> (111 + 3) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.195740693 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=72", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=72,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448661918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (58 + 55) / 113][Stage 48:=============================>                        (62 + 51) / 113][Stage 48:====================================>                 (76 + 37) / 113][Stage 48:=============================================>        (96 + 17) / 113][Stage 48:=====================================================>(112 + 1) / 113]                                                                                [Stage 49:===========================>                          (59 + 55) / 114][Stage 49:=============================>                        (62 + 52) / 114][Stage 49:=====================================>                (80 + 34) / 114][Stage 49:=============================================>        (97 + 17) / 114][Stage 49:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.293134914 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=10", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=10,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458391124 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (60 + 60) / 120][Stage 50:================================>                     (73 + 47) / 120][Stage 50:==============================================>      (105 + 15) / 120][Stage 50:===================================================>  (115 + 5) / 120][Stage 50:=====================================================>(119 + 1) / 120]                                                                                [Stage 51:===========================>                          (61 + 60) / 121][Stage 51:============================>                         (63 + 58) / 121][Stage 51:=================================>                    (74 + 47) / 121][Stage 51:==========================================>           (96 + 25) / 121][Stage 51:==================================================>   (113 + 8) / 121][Stage 51:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.159534351 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=205", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=205,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.489944616 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (61 + 59) / 120][Stage 52:===============================>                      (70 + 50) / 120][Stage 52:===================================>                  (79 + 41) / 120][Stage 52:=============================================>       (104 + 16) / 120][Stage 52:=====================================================>(118 + 2) / 120]                                                                                [Stage 53:===========================>                          (61 + 60) / 121][Stage 53:=============================>                        (67 + 54) / 121][Stage 53:====================================>                 (81 + 40) / 121][Stage 53:===========================================>          (97 + 24) / 121][Stage 53:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.375995422 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=222", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=222,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453152755 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:============================>                         (59 + 54) / 113][Stage 54:================================>                     (67 + 46) / 113][Stage 54:=========================================>            (86 + 27) / 113][Stage 54:=================================================>    (104 + 9) / 113][Stage 54:====================================================> (110 + 3) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:===========================>                          (59 + 55) / 114][Stage 55:===============================>                      (66 + 48) / 114][Stage 55:======================================>               (82 + 32) / 114][Stage 55:==============================================>       (98 + 16) / 114][Stage 55:==================================================>   (107 + 7) / 114][Stage 55:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.707088515 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=137", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=137,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427020776 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (58 + 55) / 113][Stage 56:==============================>                       (63 + 50) / 113][Stage 56:=====================================>                (79 + 34) / 113][Stage 56:=============================================>        (96 + 17) / 113]                                                                                [Stage 57:===========================>                          (59 + 55) / 114][Stage 57:===============================>                      (66 + 48) / 114][Stage 57:======================================>               (81 + 33) / 114][Stage 57:==============================================>       (98 + 16) / 114][Stage 57:==================================================>   (107 + 7) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.394957569 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371851783 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:======================================>               (82 + 33) / 115][Stage 58:==========================================>           (91 + 24) / 115][Stage 58:===============================================>     (103 + 12) / 115][Stage 58:====================================================> (111 + 4) / 115]                                                                                [Stage 59:======================================>               (83 + 33) / 116][Stage 59:===========================================>          (94 + 22) / 116][Stage 59:==================================================>   (108 + 8) / 116][Stage 59:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.74130755 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455056955 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (60 + 60) / 120][Stage 60:============================>                         (64 + 56) / 120][Stage 60:====================================>                 (81 + 39) / 120][Stage 60:============================================>        (101 + 19) / 120][Stage 60:=====================================================>(119 + 1) / 120]                                                                                [Stage 61:===========================>                          (61 + 60) / 121][Stage 61:==============================>                       (69 + 52) / 121][Stage 61:=================================>                    (75 + 46) / 121][Stage 61:===========================================>          (98 + 23) / 121][Stage 61:==================================================>   (114 + 7) / 121][Stage 61:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.368652724 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=97", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=97,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376974317 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:=====================================>                (79 + 36) / 115][Stage 62:=======================================>              (84 + 31) / 115][Stage 62:============================================>         (95 + 20) / 115][Stage 62:=================================================>    (106 + 9) / 115]                                                                                [Stage 63:=======================================>              (84 + 32) / 116][Stage 63:=========================================>            (90 + 26) / 116][Stage 63:================================================>    (106 + 10) / 116][Stage 63:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.67796184 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=217", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=217,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45991063 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (60 + 60) / 120][Stage 64:============================>                         (64 + 56) / 120][Stage 64:===================================>                  (78 + 42) / 120][Stage 64:==========================================>           (95 + 25) / 120][Stage 64:===================================================>  (115 + 5) / 120]                                                                                [Stage 65:============================>                         (63 + 58) / 121][Stage 65:=================================>                    (74 + 47) / 121][Stage 65:==========================================>           (95 + 26) / 121][Stage 65:===================================================>  (116 + 5) / 121][Stage 65:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.633426051 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=93", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=93,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.565719527 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (60 + 60) / 120][Stage 66:==============================>                       (67 + 53) / 120][Stage 66:==================================>                   (76 + 44) / 120][Stage 66:=======================================>              (87 + 33) / 120][Stage 66:===============================================>     (108 + 12) / 120]                                                                                [Stage 67:===========================>                          (62 + 59) / 121][Stage 67:==============================>                       (68 + 53) / 121][Stage 67:=======================================>              (89 + 32) / 121][Stage 67:==============================================>      (107 + 14) / 121][Stage 67:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.478837218 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=77", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=77,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377738358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:====================================>                 (76 + 37) / 113][Stage 68:=========================================>            (87 + 26) / 113][Stage 68:============================================>         (93 + 20) / 113][Stage 68:==================================================>   (106 + 7) / 113][Stage 68:=====================================================>(111 + 2) / 113]                                                                                [Stage 69:====================================>                 (76 + 38) / 114][Stage 69:========================================>             (85 + 29) / 114][Stage 69:=============================================>        (95 + 19) / 114][Stage 69:=================================================>    (105 + 9) / 114][Stage 69:====================================================> (111 + 3) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.165916648 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=30", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=30,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46143161 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (58 + 55) / 113][Stage 70:============================>                         (60 + 53) / 113][Stage 70:===================================>                  (74 + 39) / 113][Stage 70:=============================================>        (96 + 17) / 113][Stage 70:==================================================>   (106 + 7) / 113]                                                                                [Stage 71:===========================>                          (59 + 55) / 114][Stage 71:=================================>                    (70 + 44) / 114][Stage 71:===========================================>          (92 + 22) / 114][Stage 71:==================================================>   (106 + 8) / 114][Stage 71:=====================================================>(112 + 2) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.70260193 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=74", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=74,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394352675 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:=================================>                    (71 + 42) / 113][Stage 72:======================================>               (81 + 32) / 113][Stage 72:=========================================>            (87 + 26) / 113][Stage 72:=============================================>        (95 + 18) / 113][Stage 72:===================================================>  (108 + 5) / 113][Stage 72:=====================================================>(112 + 1) / 113]                                                                                [Stage 73:======================================>               (81 + 33) / 114][Stage 73:===========================================>          (92 + 22) / 114][Stage 73:==============================================>      (101 + 13) / 114][Stage 73:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.156757456 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42370753 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:============================>                         (59 + 54) / 113][Stage 74:===============================>                      (66 + 47) / 113][Stage 74:==========================================>           (88 + 25) / 113][Stage 74:==================================================>   (106 + 7) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:===========================>                          (59 + 55) / 114][Stage 75:=============================>                        (63 + 51) / 114][Stage 75:=====================================>                (79 + 35) / 114][Stage 75:==============================================>      (100 + 14) / 114][Stage 75:===================================================>  (108 + 6) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.513719936 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408495515 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:================================>                     (72 + 46) / 118][Stage 76:====================================>                 (79 + 39) / 118][Stage 76:========================================>             (88 + 30) / 118][Stage 76:=============================================>       (102 + 16) / 118][Stage 76:===================================================>  (112 + 6) / 118]                                                                                [Stage 77:=================================>                    (73 + 46) / 119][Stage 77:===================================>                  (79 + 40) / 119][Stage 77:========================================>             (89 + 30) / 119][Stage 77:=============================================>       (102 + 17) / 119][Stage 77:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.649408417 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=18", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=18,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381195118 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:================================>                     (72 + 46) / 118][Stage 78:=================================>                    (74 + 44) / 118][Stage 78:=====================================>                (82 + 36) / 118][Stage 78:============================================>        (100 + 18) / 118][Stage 78:=====================================================>(116 + 2) / 118]                                                                                [Stage 79:=================================>                    (74 + 45) / 119][Stage 79:===================================>                  (79 + 40) / 119][Stage 79:=======================================>              (88 + 31) / 119][Stage 79:==============================================>      (104 + 15) / 119]                                                                                Time elapsed: 3.289728855 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=160", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=160,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382141717 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:=======================================>              (82 + 31) / 113][Stage 80:==========================================>           (88 + 25) / 113][Stage 80:=============================================>        (96 + 17) / 113][Stage 80:=====================================================>(111 + 2) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:====================================>                 (78 + 36) / 114][Stage 81:==========================================>           (89 + 25) / 114][Stage 81:==============================================>      (100 + 14) / 114][Stage 81:====================================================> (111 + 3) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.082889937 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=35", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=35,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397649654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:================================>                     (70 + 45) / 115][Stage 82:======================================>               (82 + 33) / 115][Stage 82:================================================>    (105 + 10) / 115][Stage 82:===================================================>  (109 + 6) / 115]                                                                                [Stage 83:=================================>                    (73 + 43) / 116][Stage 83:======================================>               (82 + 34) / 116][Stage 83:=============================================>        (97 + 19) / 116][Stage 83:=================================================>    (107 + 9) / 116][Stage 83:====================================================> (113 + 3) / 116][Stage 83:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.044616758 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428794348 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (60 + 60) / 120][Stage 84:==============================>                       (67 + 53) / 120][Stage 84:=====================================>                (84 + 36) / 120][Stage 84:=============================================>       (104 + 16) / 120]                                                                                [Stage 85:============================>                         (63 + 58) / 121][Stage 85:=================================>                    (74 + 47) / 121][Stage 85:==========================================>           (96 + 25) / 121][Stage 85:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.145856678 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=152", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=152,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379758143 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:================================>                     (72 + 46) / 118][Stage 86:=================================>                    (73 + 45) / 118][Stage 86:======================================>               (84 + 34) / 118][Stage 86:===========================================>          (96 + 22) / 118][Stage 86:================================================>    (107 + 11) / 118][Stage 86:=====================================================>(116 + 2) / 118]                                                                                [Stage 87:=================================>                    (74 + 45) / 119][Stage 87:===================================>                  (78 + 41) / 119][Stage 87:=======================================>              (88 + 31) / 119][Stage 87:============================================>        (101 + 18) / 119][Stage 87:===================================================>  (114 + 5) / 119][Stage 87:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.804470925 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=153", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=153,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407563861 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (58 + 55) / 113][Stage 88:=============================>                        (61 + 52) / 113][Stage 88:==================================>                   (72 + 41) / 113][Stage 88:==========================================>           (88 + 25) / 113][Stage 88:=================================================>    (104 + 9) / 113]                                                                                [Stage 89:============================>                         (60 + 54) / 114][Stage 89:====================================>                 (76 + 38) / 114][Stage 89:=============================================>        (95 + 19) / 114][Stage 89:=====================================================>(112 + 2) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.406903437 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406286284 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (59 + 54) / 113][Stage 90:================================>                     (67 + 46) / 113][Stage 90:==========================================>           (88 + 25) / 113][Stage 90:==================================================>   (106 + 7) / 113]                                                                                [Stage 91:============================>                         (60 + 54) / 114][Stage 91:=============================>                        (63 + 51) / 114][Stage 91:====================================>                 (77 + 37) / 114][Stage 91:===========================================>          (92 + 22) / 114][Stage 91:====================================================> (111 + 3) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.674220149 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401246734 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (58 + 55) / 113][Stage 92:================================>                     (67 + 46) / 113][Stage 92:========================================>             (84 + 29) / 113][Stage 92:===================================================>  (108 + 5) / 113][Stage 92:=====================================================>(111 + 2) / 113]                                                                                [Stage 93:============================>                         (60 + 54) / 114][Stage 93:==================================>                   (72 + 42) / 114][Stage 93:===========================================>          (91 + 23) / 114][Stage 93:==================================================>   (106 + 8) / 114][Stage 93:====================================================> (111 + 3) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.596288969 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374585115 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==================================>                   (72 + 41) / 113][Stage 94:========================================>             (85 + 28) / 113][Stage 94:============================================>         (94 + 19) / 113][Stage 94:===============================================>     (102 + 11) / 113][Stage 94:===================================================>  (108 + 5) / 113]                                                                                [Stage 95:===================================>                  (74 + 40) / 114][Stage 95:=========================================>            (88 + 26) / 114][Stage 95:============================================>         (93 + 21) / 114][Stage 95:===============================================>     (103 + 11) / 114][Stage 95:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.972394357 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415282955 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (61 + 59) / 120][Stage 96:================================>                     (72 + 48) / 120][Stage 96:=========================================>            (92 + 28) / 120][Stage 96:===================================================>  (114 + 6) / 120]                                                                                [Stage 97:===========================>                          (62 + 59) / 121][Stage 97:==============================>                       (69 + 52) / 121][Stage 97:========================================>             (90 + 31) / 121][Stage 97:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.177760795 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366928568 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===================================>                  (75 + 38) / 113][Stage 98:========================================>             (85 + 28) / 113][Stage 98:=============================================>        (95 + 18) / 113][Stage 98:==================================================>   (105 + 8) / 113]                                                                                [Stage 99:====================================>                 (77 + 37) / 114][Stage 99:=======================================>              (84 + 30) / 114][Stage 99:=============================================>        (95 + 19) / 114][Stage 99:===================================================>  (109 + 5) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.95902635 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=95", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=95,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.517644682 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (60 + 61) / 121][Stage 100:=============================>                       (68 + 53) / 121][Stage 100:======================================>              (89 + 32) / 121][Stage 100:=============================================>      (106 + 15) / 121][Stage 100:====================================================>(120 + 1) / 121]                                                                                [Stage 101:==========================>                          (61 + 61) / 122][Stage 101:============================>                        (65 + 57) / 122][Stage 101:========================================>            (93 + 29) / 122][Stage 101:==============================================>     (109 + 13) / 122][Stage 101:==================================================>  (117 + 5) / 122][Stage 101:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.386462414 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=208", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=208,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423117745 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (61 + 59) / 120][Stage 102:=================================>                   (75 + 45) / 120][Stage 102:========================================>            (92 + 28) / 120][Stage 102:==================================================>  (114 + 6) / 120]                                                                                [Stage 103:============================>                        (64 + 57) / 121][Stage 103:===============================>                     (71 + 50) / 121][Stage 103:========================================>            (93 + 28) / 121][Stage 103:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.212173763 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=182", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=182,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399318501 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (58 + 55) / 113][Stage 104:============================>                        (60 + 53) / 113][Stage 104:=====================================>               (79 + 34) / 113][Stage 104:==============================================>      (99 + 14) / 113][Stage 104:===================================================> (110 + 3) / 113]                                                                                [Stage 105:==========================>                          (58 + 56) / 114][Stage 105:===============================>                     (67 + 47) / 114][Stage 105:======================================>              (83 + 31) / 114][Stage 105:==============================================>      (99 + 15) / 114][Stage 105:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.331476192 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450494226 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:=============================>                       (62 + 51) / 113][Stage 106:=================================>                   (72 + 41) / 113][Stage 106:===========================================>         (92 + 21) / 113][Stage 106:===================================================> (109 + 4) / 113]                                                                                [Stage 107:============================>                        (61 + 53) / 114][Stage 107:===================================>                 (77 + 37) / 114][Stage 107:=========================================>           (89 + 25) / 114][Stage 107:================================================>    (105 + 9) / 114][Stage 107:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.410151521 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429870698 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (60 + 60) / 120][Stage 108:============================>                        (65 + 55) / 120][Stage 108:==================================>                  (79 + 41) / 120][Stage 108:=========================================>           (94 + 26) / 120][Stage 108:==================================================>  (114 + 6) / 120]                                                                                [Stage 109:==========================>                          (61 + 60) / 121][Stage 109:=============================>                       (68 + 53) / 121][Stage 109:==================================>                  (79 + 42) / 121][Stage 109:=============================================>      (105 + 16) / 121][Stage 109:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.112888413 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=47", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=47,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358598985 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==================================>                  (73 + 40) / 113][Stage 110:=======================================>             (84 + 29) / 113][Stage 110:===========================================>         (92 + 21) / 113][Stage 110:==============================================>     (101 + 12) / 113][Stage 110:===================================================> (110 + 3) / 113]                                                                                [Stage 111:=====================================>               (81 + 33) / 114][Stage 111:=========================================>           (90 + 24) / 114][Stage 111:=============================================>       (97 + 17) / 114][Stage 111:===============================================>    (104 + 10) / 114][Stage 111:==================================================>  (109 + 5) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.258619412 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=19", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=19,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387827002 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:================================>                    (70 + 45) / 115][Stage 112:========================================>            (87 + 28) / 115][Stage 112:===============================================>    (104 + 11) / 115][Stage 112:===================================================> (112 + 3) / 115]                                                                                [Stage 113:===================================>                 (77 + 39) / 116][Stage 113:==========================================>          (92 + 24) / 116][Stage 113:=================================================>   (109 + 7) / 116][Stage 113:====================================================>(114 + 2) / 116][Stage 113:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.614344421 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=147", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=147,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340453774 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=====================================>               (82 + 33) / 115][Stage 114:=========================================>           (91 + 24) / 115][Stage 114:===============================================>    (105 + 10) / 115][Stage 114:====================================================>(113 + 2) / 115]                                                                                [Stage 115:=====================================>               (82 + 34) / 116][Stage 115:========================================>            (88 + 28) / 116][Stage 115:==============================================>     (103 + 13) / 116][Stage 115:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.585899817 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=126", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=126,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401065844 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 60) / 120][Stage 116:=============================>                       (66 + 54) / 120][Stage 116:=================================>                   (75 + 45) / 120][Stage 116:===========================================>         (99 + 21) / 120][Stage 116:====================================================>(119 + 1) / 120]                                                                                [Stage 117:==========================>                          (61 + 60) / 121][Stage 117:=============================>                       (68 + 53) / 121][Stage 117:=====================================>               (86 + 35) / 121][Stage 117:=============================================>      (105 + 16) / 121][Stage 117:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.275965438 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=119", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=119,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359118487 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==================================>                  (74 + 39) / 113][Stage 118:=======================================>             (85 + 28) / 113][Stage 118:============================================>        (95 + 18) / 113][Stage 118:==============================================>     (102 + 11) / 113][Stage 118:===================================================> (109 + 4) / 113]                                                                                [Stage 119:=======================================>             (85 + 29) / 114][Stage 119:============================================>        (95 + 19) / 114][Stage 119:==============================================>     (102 + 12) / 114][Stage 119:===================================================> (110 + 4) / 114][Stage 119:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.176431013 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=112", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=112,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402865803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (62 + 58) / 120][Stage 120:==============================>                      (68 + 52) / 120][Stage 120:=====================================>               (85 + 35) / 120][Stage 120:=============================================>      (106 + 14) / 120]                                                                                [Stage 121:============================>                        (64 + 57) / 121][Stage 121:=================================>                   (76 + 45) / 121][Stage 121:=========================================>           (95 + 26) / 121][Stage 121:===============================================>    (111 + 10) / 121][Stage 121:====================================================>(119 + 2) / 121][Stage 121:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.476865995 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=94", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=94,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352611758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==================================>                  (73 + 40) / 113][Stage 122:=======================================>             (84 + 29) / 113][Stage 122:============================================>        (95 + 18) / 113][Stage 122:==================================================>  (108 + 5) / 113][Stage 122:====================================================>(112 + 1) / 113]                                                                                [Stage 123:====================================>                (78 + 36) / 114][Stage 123:===========================================>         (94 + 20) / 114][Stage 123:===============================================>    (104 + 10) / 114][Stage 123:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.784663805 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=122", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=122,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360924227 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:================================>                    (72 + 46) / 118][Stage 124:==================================>                  (76 + 42) / 118][Stage 124:====================================>                (81 + 37) / 118][Stage 124:========================================>            (90 + 28) / 118][Stage 124:==============================================>     (106 + 12) / 118][Stage 124:====================================================>(116 + 2) / 118]                                                                                [Stage 125:================================>                    (73 + 46) / 119][Stage 125:====================================>                (82 + 37) / 119][Stage 125:==========================================>          (96 + 23) / 119][Stage 125:===============================================>    (108 + 11) / 119][Stage 125:===================================================> (116 + 3) / 119][Stage 125:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.904334939 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=161", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=161,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353368399 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=================================>                   (71 + 42) / 113][Stage 126:=====================================>               (80 + 33) / 113][Stage 126:=========================================>           (89 + 24) / 113][Stage 126:===============================================>    (103 + 10) / 113][Stage 126:====================================================>(111 + 2) / 113]                                                                                [Stage 127:======================================>              (83 + 31) / 114][Stage 127:==========================================>          (92 + 22) / 114][Stage 127:=================================================>   (106 + 8) / 114][Stage 127:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.021482349 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383909435 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=====================================>               (80 + 33) / 113][Stage 128:========================================>            (86 + 27) / 113][Stage 128:=============================================>       (98 + 15) / 113][Stage 128:==================================================>  (108 + 5) / 113][Stage 128:====================================================>(112 + 1) / 113]                                                                                [Stage 129:=====================================>               (80 + 34) / 114][Stage 129:========================================>            (88 + 26) / 114][Stage 129:==============================================>      (99 + 15) / 114][Stage 129:===================================================> (110 + 4) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.114009858 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=7", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=7,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384031995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:============================>                        (60 + 53) / 113][Stage 130:====================================>                (77 + 36) / 113][Stage 130:============================================>        (94 + 19) / 113][Stage 130:===================================================> (109 + 4) / 113]                                                                                [Stage 131:===========================>                         (60 + 54) / 114][Stage 131:=================================>                   (73 + 41) / 114][Stage 131:=========================================>           (89 + 25) / 114][Stage 131:==============================================>     (103 + 11) / 114][Stage 131:====================================================>(112 + 2) / 114][Stage 131:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.666379545 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412563275 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 61) / 121][Stage 132:=============================>                       (68 + 53) / 121][Stage 132:=======================================>             (90 + 31) / 121][Stage 132:===============================================>    (110 + 11) / 121]                                                                                [Stage 133:==========================>                          (61 + 61) / 122][Stage 133:==============================>                      (70 + 52) / 122][Stage 133:===================================>                 (82 + 40) / 122][Stage 133:==============================================>     (110 + 12) / 122][Stage 133:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.738681557 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=27", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=27,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37560593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:================================>                    (70 + 45) / 115][Stage 134:=====================================>               (81 + 34) / 115][Stage 134:=============================================>      (100 + 15) / 115][Stage 134:====================================================>(113 + 2) / 115]                                                                                [Stage 135:==================================>                  (76 + 40) / 116][Stage 135:===========================================>         (95 + 21) / 116][Stage 135:===============================================>    (105 + 11) / 116][Stage 135:===================================================> (112 + 4) / 116][Stage 135:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 5.073603232 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387132734 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:============================>                        (60 + 53) / 113][Stage 136:================================>                    (69 + 44) / 113][Stage 136:========================================>            (87 + 26) / 113][Stage 136:===================================================> (109 + 4) / 113]                                                                                [Stage 137:===========================>                         (60 + 54) / 114][Stage 137:=============================>                       (64 + 50) / 114][Stage 137:====================================>                (79 + 35) / 114][Stage 137:=============================================>       (98 + 16) / 114][Stage 137:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.26435549 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380262005 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (70 + 45) / 115][Stage 138:=====================================>               (81 + 34) / 115][Stage 138:=============================================>       (99 + 16) / 115][Stage 138:===================================================> (111 + 4) / 115]                                                                                [Stage 139:===============================>                     (68 + 48) / 116][Stage 139:===================================>                 (77 + 39) / 116][Stage 139:=============================================>       (99 + 17) / 116][Stage 139:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.619238537 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=232", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=232,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396653541 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (62 + 58) / 120][Stage 140:==============================>                      (70 + 50) / 120][Stage 140:========================================>            (92 + 28) / 120][Stage 140:=================================================>   (113 + 7) / 120]                                                                                [Stage 141:==========================>                          (61 + 60) / 121][Stage 141:============================>                        (65 + 56) / 121][Stage 141:===================================>                 (81 + 40) / 121][Stage 141:============================================>       (103 + 18) / 121]                                                                                Time elapsed: 2.997396572 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=166", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=166,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39799004 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:============================>                        (64 + 56) / 120][Stage 142:================================>                    (74 + 46) / 120][Stage 142:===========================================>         (98 + 22) / 120][Stage 142:====================================================>(119 + 1) / 120]                                                                                [Stage 143:==========================>                          (61 + 60) / 121][Stage 143:============================>                        (66 + 55) / 121][Stage 143:=======================================>             (90 + 31) / 121][Stage 143:=================================================>   (112 + 9) / 121][Stage 143:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.00953726 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=114", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=114,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372747858 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==================================>                  (74 + 41) / 115][Stage 144:========================================>            (88 + 27) / 115][Stage 144:==============================================>     (103 + 12) / 115][Stage 144:===================================================> (111 + 4) / 115]                                                                                [Stage 145:=================================>                   (74 + 42) / 116][Stage 145:=========================================>           (91 + 25) / 116][Stage 145:================================================>    (107 + 9) / 116][Stage 145:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.829987267 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=174", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=174,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361783674 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===================================>                 (75 + 38) / 113][Stage 146:========================================>            (86 + 27) / 113][Stage 146:=============================================>       (97 + 16) / 113][Stage 146:===================================================> (110 + 3) / 113][Stage 146:====================================================>(112 + 1) / 113]                                                                                [Stage 147:======================================>              (83 + 31) / 114][Stage 147:==========================================>          (92 + 22) / 114][Stage 147:==============================================>     (103 + 11) / 114][Stage 147:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.042794463 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=170", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=170,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361239736 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:================================>                    (72 + 46) / 118][Stage 148:===================================>                 (80 + 38) / 118][Stage 148:========================================>            (91 + 27) / 118][Stage 148:==============================================>     (105 + 13) / 118][Stage 148:====================================================>(116 + 2) / 118]                                                                                [Stage 149:=================================>                   (75 + 44) / 119][Stage 149:==================================>                  (78 + 41) / 119][Stage 149:============================================>        (99 + 20) / 119][Stage 149:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.254756422 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=144", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=144,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378715111 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:================================>                    (70 + 45) / 115][Stage 150:=====================================>               (82 + 33) / 115][Stage 150:=============================================>      (101 + 14) / 115][Stage 150:====================================================>(113 + 2) / 115]                                                                                [Stage 151:===============================>                     (68 + 48) / 116][Stage 151:=====================================>               (82 + 34) / 116][Stage 151:=============================================>      (102 + 14) / 116][Stage 151:===================================================> (112 + 4) / 116][Stage 151:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.760078645 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335675634 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:====================================>                (80 + 35) / 115][Stage 152:=======================================>             (85 + 30) / 115][Stage 152:============================================>        (97 + 18) / 115][Stage 152:==================================================>  (109 + 6) / 115]                                                                                [Stage 153:=====================================>               (82 + 34) / 116][Stage 153:==========================================>          (94 + 22) / 116][Stage 153:=============================================>      (102 + 14) / 116][Stage 153:==================================================>  (110 + 6) / 116][Stage 153:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.670269131 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=164", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=164,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403934657 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 61) / 121][Stage 154:===========================>                         (62 + 59) / 121][Stage 154:=================================>                   (77 + 44) / 121][Stage 154:=============================================>      (106 + 15) / 121][Stage 154:====================================================>(119 + 2) / 121]                                                                                [Stage 155:==========================>                          (61 + 61) / 122][Stage 155:=============================>                       (67 + 55) / 122][Stage 155:==================================>                  (80 + 42) / 122][Stage 155:========================================>            (93 + 29) / 122][Stage 155:==================================================>  (117 + 5) / 122][Stage 155:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.415477612 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=185", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=185,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34710678 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:========================================>            (86 + 27) / 113][Stage 156:=============================================>       (97 + 16) / 113][Stage 156:===============================================>    (103 + 10) / 113][Stage 156:===================================================> (110 + 3) / 113][Stage 156:====================================================>(112 + 1) / 113]                                                                                [Stage 157:====================================>                (79 + 35) / 114][Stage 157:========================================>            (87 + 27) / 114][Stage 157:=============================================>       (98 + 16) / 114][Stage 157:====================================================>(112 + 2) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.160207867 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=45", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=45,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374591801 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===================================>                 (78 + 37) / 115][Stage 158:==========================================>          (92 + 23) / 115][Stage 158:==============================================>     (103 + 12) / 115][Stage 158:====================================================>(114 + 1) / 115]                                                                                [Stage 159:===============================>                     (68 + 48) / 116][Stage 159:=======================================>             (86 + 30) / 116][Stage 159:===========================================>         (96 + 20) / 116][Stage 159:=================================================>   (109 + 7) / 116][Stage 159:==================================================>  (111 + 5) / 116][Stage 159:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.178857429 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369220649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (73 + 45) / 118][Stage 160:===================================>                 (79 + 39) / 118][Stage 160:=======================================>             (88 + 30) / 118][Stage 160:============================================>       (100 + 18) / 118][Stage 160:==================================================>  (112 + 6) / 118][Stage 160:====================================================>(117 + 1) / 118]                                                                                [Stage 161:================================>                    (73 + 46) / 119][Stage 161:================================>                    (74 + 45) / 119][Stage 161:=====================================>               (85 + 34) / 119][Stage 161:============================================>       (101 + 18) / 119][Stage 161:===================================================> (115 + 4) / 119][Stage 161:====================================================>(117 + 2) / 119][Stage 161:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.908632407 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410434951 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 61) / 121][Stage 162:==============================>                      (70 + 51) / 121][Stage 162:======================================>              (88 + 33) / 121][Stage 162:=============================================>      (105 + 16) / 121][Stage 162:====================================================>(119 + 2) / 121]                                                                                [Stage 163:==========================>                          (61 + 61) / 122][Stage 163:============================>                        (65 + 57) / 122][Stage 163:=====================================>               (87 + 35) / 122][Stage 163:===========================================>        (103 + 19) / 122][Stage 163:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.282922993 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=228", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=228,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359980144 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:================================>                    (72 + 46) / 118][Stage 164:=================================>                   (75 + 43) / 118][Stage 164:=====================================>               (84 + 34) / 118][Stage 164:===========================================>         (97 + 21) / 118][Stage 164:===============================================>    (108 + 10) / 118][Stage 164:==================================================>  (113 + 5) / 118]                                                                                [Stage 165:=================================>                   (75 + 44) / 119][Stage 165:=====================================>               (84 + 35) / 119][Stage 165:==========================================>          (95 + 24) / 119][Stage 165:=============================================>      (105 + 14) / 119][Stage 165:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.964654944 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414202807 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (61 + 60) / 121][Stage 166:==============================>                      (70 + 51) / 121][Stage 166:======================================>              (87 + 34) / 121][Stage 166:=================================================>   (113 + 8) / 121][Stage 166:====================================================>(119 + 2) / 121]                                                                                [Stage 167:==========================>                          (61 + 61) / 122][Stage 167:=============================>                       (67 + 55) / 122][Stage 167:========================================>            (94 + 28) / 122][Stage 167:==============================================>     (108 + 14) / 122][Stage 167:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.345264458 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351805278 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:=====================================>               (80 + 33) / 113][Stage 168:=======================================>             (85 + 28) / 113][Stage 168:==============================================>     (101 + 12) / 113][Stage 168:=================================================>   (106 + 7) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:=================================>                   (72 + 42) / 114][Stage 169:========================================>            (88 + 26) / 114][Stage 169:==========================================>          (92 + 22) / 114][Stage 169:===============================================>    (104 + 10) / 114][Stage 169:===================================================> (111 + 3) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.499228439 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=197", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=197,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372515349 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:================================>                    (72 + 46) / 118][Stage 170:==================================>                  (76 + 42) / 118][Stage 170:======================================>              (85 + 33) / 118][Stage 170:=========================================>           (93 + 25) / 118][Stage 170:=================================================>   (111 + 7) / 118][Stage 170:====================================================>(117 + 1) / 118]                                                                                [Stage 171:================================>                    (73 + 46) / 119][Stage 171:=================================>                   (75 + 44) / 119][Stage 171:=====================================>               (84 + 35) / 119][Stage 171:===========================================>         (98 + 21) / 119][Stage 171:==================================================>  (114 + 5) / 119][Stage 171:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.63644208 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351077061 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=================================>                   (72 + 41) / 113][Stage 172:=======================================>             (85 + 28) / 113][Stage 172:===========================================>         (93 + 20) / 113][Stage 172:==============================================>     (102 + 11) / 113][Stage 172:====================================================>(112 + 1) / 113]                                                                                [Stage 173:======================================>              (82 + 32) / 114][Stage 173:==========================================>          (91 + 23) / 114][Stage 173:==============================================>     (101 + 13) / 114][Stage 173:==================================================>  (109 + 5) / 114][Stage 173:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.07223639 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=60", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=60,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387239629 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (58 + 55) / 113][Stage 174:=============================>                       (63 + 50) / 113][Stage 174:=====================================>               (81 + 32) / 113][Stage 174:==============================================>      (99 + 14) / 113][Stage 174:===================================================> (109 + 4) / 113]                                                                                [Stage 175:=============================>                       (63 + 51) / 114][Stage 175:=================================>                   (72 + 42) / 114][Stage 175:=========================================>           (90 + 24) / 114][Stage 175:=================================================>   (106 + 8) / 114][Stage 175:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.627610428 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=194", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=194,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354055177 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (72 + 46) / 118][Stage 176:=================================>                   (74 + 44) / 118][Stage 176:====================================>                (82 + 36) / 118][Stage 176:==========================================>          (95 + 23) / 118][Stage 176:================================================>    (109 + 9) / 118][Stage 176:====================================================>(117 + 1) / 118]                                                                                [Stage 177:================================>                    (73 + 46) / 119][Stage 177:=================================>                   (75 + 44) / 119][Stage 177:======================================>              (86 + 33) / 119][Stage 177:==========================================>          (96 + 23) / 119][Stage 177:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.361068073 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=123", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=123,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376436187 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (58 + 55) / 113][Stage 178:============================>                        (60 + 53) / 113][Stage 178:====================================>                (78 + 35) / 113][Stage 178:============================================>        (94 + 19) / 113]                                                                                [Stage 179:============================>                        (62 + 52) / 114][Stage 179:================================>                    (70 + 44) / 114][Stage 179:=========================================>           (90 + 24) / 114][Stage 179:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.068262095 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=240", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=240,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33978602 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=====================================>               (82 + 33) / 115][Stage 180:=========================================>           (89 + 26) / 115][Stage 180:===============================================>    (105 + 10) / 115][Stage 180:====================================================>(114 + 1) / 115]                                                                                [Stage 181:=====================================>               (83 + 33) / 116][Stage 181:========================================>            (88 + 28) / 116][Stage 181:==============================================>     (104 + 12) / 116][Stage 181:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.735884471 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=102", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=102,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394594462 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:================================>                    (72 + 46) / 118][Stage 182:===================================>                 (78 + 40) / 118][Stage 182:========================================>            (90 + 28) / 118][Stage 182:==============================================>     (105 + 13) / 118][Stage 182:====================================================>(117 + 1) / 118]                                                                                [Stage 183:================================>                    (73 + 46) / 119][Stage 183:=================================>                   (76 + 43) / 119][Stage 183:=======================================>             (88 + 31) / 119][Stage 183:===========================================>         (98 + 21) / 119][Stage 183:==================================================>  (114 + 5) / 119][Stage 183:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.698174337 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=120", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=120,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34741509 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:====================================>                (78 + 35) / 113][Stage 184:========================================>            (87 + 26) / 113][Stage 184:============================================>        (95 + 18) / 113][Stage 184:==================================================>  (108 + 5) / 113]                                                                                [Stage 185:====================================>                (78 + 36) / 114][Stage 185:==========================================>          (91 + 23) / 114][Stage 185:=============================================>      (100 + 14) / 114][Stage 185:===================================================> (110 + 4) / 114][Stage 185:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.071402885 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=43", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=43,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.471376375 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 60) / 120][Stage 186:=============================>                       (67 + 53) / 120][Stage 186:=====================================>               (84 + 36) / 120][Stage 186:=================================================>   (112 + 8) / 120][Stage 186:====================================================>(119 + 1) / 120]                                                                                [Stage 187:==========================>                          (61 + 60) / 121][Stage 187:==============================>                      (69 + 52) / 121][Stage 187:======================================>              (89 + 32) / 121][Stage 187:==============================================>     (108 + 13) / 121]                                                                                Time elapsed: 3.178414199 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=52", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=52,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.327527956 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:====================================>                (79 + 36) / 115][Stage 188:========================================>            (88 + 27) / 115][Stage 188:=============================================>       (98 + 17) / 115][Stage 188:==================================================>  (109 + 6) / 115][Stage 188:====================================================>(114 + 1) / 115]                                                                                [Stage 189:=====================================>               (83 + 33) / 116][Stage 189:========================================>            (89 + 27) / 116][Stage 189:==============================================>     (103 + 13) / 116][Stage 189:==================================================>  (110 + 6) / 116][Stage 189:====================================================>(114 + 2) / 116][Stage 189:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.212577135 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394941861 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 60) / 120][Stage 190:==============================>                      (69 + 51) / 120][Stage 190:====================================>                (83 + 37) / 120][Stage 190:==============================================>     (108 + 12) / 120]                                                                                [Stage 191:==========================>                          (61 + 60) / 121][Stage 191:===============================>                     (71 + 50) / 121][Stage 191:=====================================>               (86 + 35) / 121][Stage 191:=================================================>   (113 + 8) / 121][Stage 191:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.32277183 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=37", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=37,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34319938 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:=====================================>               (81 + 32) / 113][Stage 192:==========================================>          (91 + 22) / 113][Stage 192:==============================================>     (100 + 13) / 113][Stage 192:===================================================> (110 + 3) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:==================================>                  (74 + 40) / 114][Stage 193:=======================================>             (85 + 29) / 114][Stage 193:==========================================>          (92 + 22) / 114][Stage 193:=============================================>      (100 + 14) / 114][Stage 193:==================================================>  (108 + 6) / 114][Stage 193:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.766293657 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=57", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=57,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409333586 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 60) / 120][Stage 194:===============================>                     (72 + 48) / 120][Stage 194:=====================================>               (86 + 34) / 120][Stage 194:===============================================>    (109 + 11) / 120]                                                                                [Stage 195:===========================>                         (62 + 59) / 121][Stage 195:===============================>                     (71 + 50) / 121][Stage 195:=========================================>           (95 + 26) / 121][Stage 195:=================================================>   (114 + 7) / 121][Stage 195:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.069729997 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=117", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=117,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357765364 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:====================================>                (78 + 35) / 113][Stage 196:==========================================>          (91 + 22) / 113][Stage 196:=================================================>   (106 + 7) / 113][Stage 196:===================================================> (110 + 3) / 113]                                                                                [Stage 197:=====================================>               (81 + 33) / 114][Stage 197:===========================================>         (93 + 21) / 114][Stage 197:==============================================>     (101 + 13) / 114][Stage 197:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.852593268 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408588089 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (58 + 55) / 113][Stage 198:==============================>                      (66 + 47) / 113][Stage 198:====================================>                (77 + 36) / 113][Stage 198:=============================================>       (98 + 15) / 113][Stage 198:====================================================>(111 + 2) / 113]                                                                                [Stage 199:============================>                        (61 + 53) / 114][Stage 199:=================================>                   (71 + 43) / 114][Stage 199:=========================================>           (90 + 24) / 114][Stage 199:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.227915998 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=207", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=207,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345066279 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=================================>                   (72 + 41) / 113][Stage 200:=====================================>               (81 + 32) / 113][Stage 200:===========================================>         (93 + 20) / 113][Stage 200:==============================================>     (101 + 12) / 113][Stage 200:====================================================>(111 + 2) / 113]                                                                                [Stage 201:=====================================>               (80 + 34) / 114][Stage 201:==========================================>          (91 + 23) / 114][Stage 201:==============================================>     (101 + 13) / 114][Stage 201:==================================================>  (109 + 5) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.063277285 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/24 16:16:08 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.12:42498) dropped. RpcEnv already stopped.

real	10m30.934s
user	12m5.664s
sys	0m56.276s
