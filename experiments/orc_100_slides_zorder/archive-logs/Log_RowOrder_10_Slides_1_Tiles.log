Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 15:35:30 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 15:35:45 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 15:35:45 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 15:35:45 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 15:35:48 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 15:35:58 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524153547-0563).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.348306106 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:=======>                                              (15 + 100) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:=========================================>             (87 + 28) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:====================================================>  (109 + 6) / 115]                                                                                [Stage 1:======================>                                (48 + 68) / 116][Stage 1:========================>                              (52 + 64) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:===================================>                   (75 + 41) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:===========================================>           (91 + 25) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.643104612 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 113 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 113 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.739338965 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==========================>                            (55 + 58) / 113][Stage 2:==============================>                        (63 + 50) / 113][Stage 2:===================================>                   (73 + 40) / 113][Stage 2:=====================================>                 (77 + 36) / 113][Stage 2:=======================================>               (81 + 32) / 113][Stage 2:=========================================>             (85 + 28) / 113][Stage 2:============================================>          (92 + 21) / 113][Stage 2:================================================>     (102 + 11) / 113][Stage 2:===================================================>   (105 + 8) / 113][Stage 2:=====================================================> (110 + 3) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:================================>                      (67 + 47) / 114][Stage 3:=================================>                     (69 + 45) / 114][Stage 3:====================================>                  (75 + 39) / 114][Stage 3:=======================================>               (81 + 33) / 114][Stage 3:==========================================>            (89 + 25) / 114][Stage 3:=============================================>         (95 + 19) / 114][Stage 3:===============================================>      (101 + 13) / 114][Stage 3:================================================>     (103 + 11) / 114][Stage 3:====================================================>  (109 + 5) / 114][Stage 3:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.449398353 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.755036958 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:========================>                              (54 + 66) / 120][Stage 4:===========================>                           (60 + 60) / 120][Stage 4:=============================>                         (65 + 55) / 120][Stage 4:=================================>                     (72 + 48) / 120][Stage 4:==================================>                    (76 + 44) / 120][Stage 4:==========================================>            (93 + 27) / 120][Stage 4:=====================================================> (116 + 4) / 120]                                                                                [Stage 5:===========================>                           (61 + 60) / 121][Stage 5:============================>                          (63 + 58) / 121][Stage 5:===============================>                       (69 + 52) / 121][Stage 5:=======================================>               (87 + 34) / 121][Stage 5:=============================================>        (103 + 18) / 121][Stage 5:====================================================>  (116 + 5) / 121]                                                                                Time elapsed: 4.163682491 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.573453376 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=================================>                     (72 + 46) / 118][Stage 6:==================================>                    (74 + 44) / 118][Stage 6:======================================>                (83 + 35) / 118][Stage 6:=========================================>             (90 + 28) / 118][Stage 6:=============================================>         (97 + 21) / 118][Stage 6:===================================================>   (111 + 7) / 118][Stage 6:======================================================>(117 + 1) / 118]                                                                                [Stage 7:=================================>                     (72 + 47) / 119][Stage 7:=================================>                     (73 + 46) / 119][Stage 7:==================================>                    (75 + 44) / 119][Stage 7:========================================>              (88 + 31) / 119][Stage 7:================================================>     (106 + 13) / 119][Stage 7:====================================================>  (114 + 5) / 119]                                                                                Time elapsed: 4.049844939 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.550339753 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:================================>                      (70 + 48) / 118][Stage 8:==================================>                    (73 + 45) / 118][Stage 8:=====================================>                 (80 + 38) / 118][Stage 8:=========================================>             (88 + 30) / 118][Stage 8:============================================>          (96 + 22) / 118][Stage 8:=============================================>        (100 + 18) / 118][Stage 8:===============================================>      (104 + 14) / 118][Stage 8:====================================================>  (113 + 5) / 118]                                                                                [Stage 9:=================================>                     (73 + 46) / 119][Stage 9:====================================>                  (78 + 41) / 119][Stage 9:==========================================>            (91 + 28) / 119][Stage 9:================================================>     (106 + 13) / 119][Stage 9:====================================================>  (114 + 5) / 119][Stage 9:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.219554246 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.547915116 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:>                                                       (0 + 0) / 113][Stage 10:=================================>                    (70 + 43) / 113][Stage 10:=====================================>                (79 + 34) / 113][Stage 10:==========================================>           (89 + 24) / 113][Stage 10:============================================>         (94 + 19) / 113][Stage 10:================================================>    (103 + 10) / 113][Stage 10:====================================================> (110 + 3) / 113]                                                                                [Stage 11:====================================>                 (76 + 38) / 114][Stage 11:========================================>             (85 + 29) / 114][Stage 11:===========================================>          (92 + 22) / 114][Stage 11:==============================================>      (101 + 13) / 114][Stage 11:===============================================>     (103 + 11) / 114][Stage 11:===================================================>  (108 + 6) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.054141143 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 168 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.727096327 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (60 + 60) / 120][Stage 12:============================>                         (63 + 57) / 120][Stage 12:================================>                     (72 + 48) / 120][Stage 12:========================================>             (89 + 31) / 120][Stage 12:============================================>        (101 + 19) / 120][Stage 12:==================================================>   (113 + 7) / 120][Stage 12:====================================================> (117 + 3) / 120]                                                                                [Stage 13:===========================>                          (61 + 60) / 121][Stage 13:=============================>                        (65 + 56) / 121][Stage 13:================================>                     (72 + 49) / 121][Stage 13:=====================================>                (84 + 37) / 121][Stage 13:===========================================>         (100 + 21) / 121][Stage 13:==================================================>   (113 + 8) / 121][Stage 13:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.977759464 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 153 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.517745618 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:=============================>                        (63 + 52) / 115][Stage 14:=================================>                    (71 + 44) / 115][Stage 14:===========================================>          (92 + 23) / 115][Stage 14:==============================================>      (100 + 15) / 115][Stage 14:====================================================> (112 + 3) / 115][Stage 14:=====================================================>(114 + 1) / 115]                                                                                [Stage 15:===============================>                      (67 + 49) / 116][Stage 15:=======================================>              (85 + 31) / 116][Stage 15:=============================================>        (97 + 19) / 116][Stage 15:==================================================>   (109 + 7) / 116][Stage 15:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.424364298 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493012296 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=================================>                    (70 + 43) / 113][Stage 16:====================================>                 (77 + 36) / 113][Stage 16:=========================================>            (87 + 26) / 113][Stage 16:==============================================>       (97 + 16) / 113][Stage 16:==================================================>   (105 + 8) / 113][Stage 16:===================================================>  (108 + 5) / 113][Stage 16:=====================================================>(112 + 1) / 113][Stage 16:======================================================(113 + 0) / 113]                                                                                [Stage 17:==================================>                   (73 + 41) / 114][Stage 17:=======================================>              (83 + 31) / 114][Stage 17:==========================================>           (90 + 24) / 114][Stage 17:===============================================>     (103 + 11) / 114][Stage 17:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.68063551 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 148 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.561386774 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:=================================>                    (71 + 42) / 113][Stage 18:========================================>             (84 + 29) / 113][Stage 18:==========================================>           (89 + 24) / 113][Stage 18:============================================>         (93 + 20) / 113][Stage 18:============================================>         (94 + 19) / 113][Stage 18:==============================================>       (98 + 15) / 113][Stage 18:==================================================>   (106 + 7) / 113][Stage 18:====================================================> (110 + 3) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:==================================>                   (72 + 42) / 114][Stage 19:=======================================>              (84 + 30) / 114][Stage 19:============================================>         (94 + 20) / 114][Stage 19:================================================>    (104 + 10) / 114][Stage 19:=====================================================>(112 + 2) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.093992347 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.477756347 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:=================================>                    (71 + 42) / 113][Stage 20:=======================================>              (83 + 30) / 113][Stage 20:===========================================>          (91 + 22) / 113][Stage 20:==============================================>       (98 + 15) / 113][Stage 20:=================================================>    (104 + 9) / 113][Stage 20:===================================================>  (107 + 6) / 113][Stage 20:====================================================> (109 + 4) / 113]                                                                                [Stage 21:====================================>                 (77 + 37) / 114][Stage 21:=========================================>            (87 + 27) / 114][Stage 21:==============================================>       (98 + 16) / 114][Stage 21:==================================================>   (107 + 7) / 114][Stage 21:===================================================>  (109 + 5) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.352520002 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485759584 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:=================================>                    (70 + 43) / 113][Stage 22:=======================================>              (83 + 30) / 113][Stage 22:============================================>         (93 + 20) / 113][Stage 22:=================================================>    (104 + 9) / 113][Stage 22:=====================================================>(111 + 2) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:===================================>                  (75 + 39) / 114][Stage 23:========================================>             (86 + 28) / 114][Stage 23:===========================================>          (91 + 23) / 114][Stage 23:==============================================>      (101 + 13) / 114][Stage 23:==================================================>   (107 + 7) / 114][Stage 23:====================================================> (110 + 4) / 114][Stage 23:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.628688094 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.540886632 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (60 + 60) / 120][Stage 24:=================================>                    (75 + 45) / 120][Stage 24:=====================================>                (84 + 36) / 120][Stage 24:=========================================>            (92 + 28) / 120][Stage 24:===============================================>     (108 + 12) / 120][Stage 24:==================================================>   (113 + 7) / 120][Stage 24:=====================================================>(119 + 1) / 120]                                                                                [Stage 25:===========================>                          (61 + 60) / 121][Stage 25:=============================>                        (67 + 54) / 121][Stage 25:======================================>               (87 + 34) / 121][Stage 25:==============================================>      (107 + 14) / 121][Stage 25:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.554758029 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.520990265 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:==========================>                           (60 + 61) / 121][Stage 26:===========================>                          (62 + 59) / 121][Stage 26:=================================>                    (75 + 46) / 121][Stage 26:=========================================>            (94 + 27) / 121][Stage 26:==================================================>   (113 + 8) / 121][Stage 26:=====================================================>(120 + 1) / 121]                                                                                [Stage 27:============================>                         (64 + 58) / 122][Stage 27:==============================>                       (70 + 52) / 122][Stage 27:=======================================>              (90 + 32) / 122][Stage 27:==================================================>   (114 + 8) / 122][Stage 27:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.474907427 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 106 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460308103 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:================================>                     (72 + 46) / 118][Stage 28:===================================>                  (78 + 40) / 118][Stage 28:===========================================>          (94 + 24) / 118][Stage 28:================================================>    (108 + 10) / 118][Stage 28:=====================================================>(117 + 1) / 118]                                                                                [Stage 29:=================================>                    (73 + 46) / 119][Stage 29:==================================>                   (76 + 43) / 119][Stage 29:======================================>               (85 + 34) / 119][Stage 29:============================================>        (101 + 18) / 119][Stage 29:================================================>    (109 + 10) / 119][Stage 29:===================================================>  (114 + 5) / 119][Stage 29:====================================================> (116 + 3) / 119][Stage 29:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.743355295 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.533578541 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:=====================================>                (80 + 35) / 115][Stage 30:==========================================>           (91 + 24) / 115][Stage 30:===============================================>     (102 + 13) / 115][Stage 30:==================================================>   (108 + 7) / 115][Stage 30:===================================================>  (110 + 5) / 115][Stage 30:====================================================> (112 + 3) / 115]                                                                                [Stage 31:=====================================>                (81 + 35) / 116][Stage 31:=========================================>            (89 + 27) / 116][Stage 31:===============================================>     (105 + 11) / 116][Stage 31:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.212097922 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 226 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.500359202 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (60 + 60) / 120][Stage 32:===============================>                      (69 + 51) / 120][Stage 32:=========================================>            (92 + 28) / 120][Stage 32:===================================================>  (114 + 6) / 120]                                                                                [Stage 33:===========================>                          (62 + 59) / 121][Stage 33:=================================>                    (74 + 47) / 121][Stage 33:=========================================>            (92 + 29) / 121][Stage 33:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.070783114 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485529692 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=====================================>                (78 + 35) / 113][Stage 34:===========================================>          (90 + 23) / 113][Stage 34:=============================================>        (96 + 17) / 113][Stage 34:===================================================>  (108 + 5) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:===================================>                  (75 + 39) / 114][Stage 35:========================================>             (85 + 29) / 114][Stage 35:=============================================>        (95 + 19) / 114][Stage 35:================================================>    (104 + 10) / 114][Stage 35:===================================================>  (109 + 5) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.256961391 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.516201355 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==========================>                           (60 + 61) / 121][Stage 36:=================================>                    (75 + 46) / 121][Stage 36:==============================================>      (106 + 15) / 121][Stage 36:=====================================================>(120 + 1) / 121]                                                                                [Stage 37:===========================>                          (61 + 61) / 122][Stage 37:=============================>                        (66 + 56) / 122][Stage 37:====================================>                 (82 + 40) / 122][Stage 37:=============================================>       (105 + 17) / 122][Stage 37:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.045786404 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486295434 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (60 + 60) / 120][Stage 38:==============================>                       (67 + 53) / 120][Stage 38:=====================================>                (84 + 36) / 120][Stage 38:===========================================>          (96 + 24) / 120][Stage 38:================================================>    (110 + 10) / 120][Stage 38:===================================================>  (114 + 6) / 120][Stage 38:===================================================>  (115 + 5) / 120][Stage 38:====================================================> (116 + 4) / 120]                                                                                [Stage 39:===========================>                          (61 + 60) / 121][Stage 39:================================>                     (72 + 49) / 121][Stage 39:=======================================>              (89 + 32) / 121][Stage 39:===============================================>     (108 + 13) / 121]                                                                                Time elapsed: 4.355300925 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433696747 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:======================================>               (80 + 33) / 113][Stage 40:=========================================>            (86 + 27) / 113][Stage 40:============================================>         (93 + 20) / 113][Stage 40:==================================================>   (106 + 7) / 113][Stage 40:=====================================================>(111 + 2) / 113][Stage 40:=====================================================>(112 + 1) / 113]                                                                                [Stage 41:====================================>                 (76 + 38) / 114][Stage 41:=========================================>            (88 + 26) / 114][Stage 41:=============================================>        (97 + 17) / 114][Stage 41:====================================================> (110 + 4) / 114][Stage 41:=====================================================>(112 + 2) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.690450484 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.522794775 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (60 + 60) / 120][Stage 42:===========================>                          (62 + 58) / 120][Stage 42:===================================>                  (79 + 41) / 120][Stage 42:============================================>         (98 + 22) / 120][Stage 42:===================================================>  (114 + 6) / 120]                                                                                [Stage 43:=============================>                        (65 + 56) / 121][Stage 43:=================================>                    (74 + 47) / 121][Stage 43:=========================================>            (93 + 28) / 121][Stage 43:===================================================>  (115 + 6) / 121][Stage 43:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.242072695 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.609487406 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (60 + 60) / 120][Stage 44:============================>                         (63 + 57) / 120][Stage 44:=================================>                    (74 + 46) / 120][Stage 44:============================================>         (98 + 22) / 120][Stage 44:==================================================>   (112 + 8) / 120][Stage 44:====================================================> (117 + 3) / 120]                                                                                [Stage 45:=============================>                        (65 + 56) / 121][Stage 45:==================================>                   (77 + 44) / 121][Stage 45:============================================>        (101 + 20) / 121][Stage 45:===================================================>  (116 + 5) / 121][Stage 45:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.393195956 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 173 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428383413 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:================================>                     (70 + 45) / 115][Stage 46:======================================>               (81 + 34) / 115][Stage 46:=============================================>        (96 + 19) / 115][Stage 46:==================================================>   (107 + 8) / 115][Stage 46:====================================================> (112 + 3) / 115]                                                                                [Stage 47:===============================>                      (67 + 49) / 116][Stage 47:=======================================>              (85 + 31) / 116][Stage 47:==============================================>       (99 + 17) / 116][Stage 47:=================================================>    (107 + 9) / 116][Stage 47:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.12235624 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 50 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452476279 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (58 + 55) / 113][Stage 48:============================>                         (59 + 54) / 113][Stage 48:===================================>                  (74 + 39) / 113][Stage 48:=============================================>        (95 + 18) / 113][Stage 48:====================================================> (109 + 4) / 113]                                                                                [Stage 49:============================>                         (61 + 53) / 114][Stage 49:====================================>                 (77 + 37) / 114][Stage 49:===========================================>          (92 + 22) / 114][Stage 49:=====================================================>(112 + 2) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.186068351 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478748206 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:============================>                         (59 + 54) / 113][Stage 50:===============================>                      (65 + 48) / 113][Stage 50:===========================================>          (90 + 23) / 113][Stage 50:===================================================>  (107 + 6) / 113]                                                                                [Stage 51:=============================>                        (63 + 51) / 114][Stage 51:====================================>                 (78 + 36) / 114][Stage 51:============================================>         (93 + 21) / 114][Stage 51:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.047805857 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 117 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 117 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431782193 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:=================================>                    (71 + 44) / 115][Stage 52:========================================>             (86 + 29) / 115][Stage 52:==============================================>       (99 + 16) / 115][Stage 52:===================================================>  (110 + 5) / 115]                                                                                [Stage 53:==================================>                   (74 + 42) / 116][Stage 53:==========================================>           (91 + 25) / 116][Stage 53:=============================================>        (98 + 18) / 116][Stage 53:=================================================>    (107 + 9) / 116][Stage 53:===================================================>  (111 + 5) / 116][Stage 53:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.205319095 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458979619 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (61 + 60) / 121][Stage 54:================================>                     (73 + 48) / 121][Stage 54:==========================================>           (95 + 26) / 121][Stage 54:===================================================>  (116 + 5) / 121]                                                                                [Stage 55:===========================>                          (62 + 60) / 122][Stage 55:==============================>                       (70 + 52) / 122][Stage 55:======================================>               (86 + 36) / 122][Stage 55:================================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.096973884 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395977096 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==================================>                   (72 + 41) / 113][Stage 56:=====================================>                (79 + 34) / 113][Stage 56:==============================================>       (98 + 15) / 113][Stage 56:==================================================>   (106 + 7) / 113][Stage 56:=====================================================>(112 + 1) / 113]                                                                                [Stage 57:===================================>                  (74 + 40) / 114][Stage 57:========================================>             (85 + 29) / 114][Stage 57:=============================================>        (97 + 17) / 114][Stage 57:=================================================>    (105 + 9) / 114][Stage 57:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.29406072 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 47 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456000603 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:============================>                         (59 + 54) / 113][Stage 58:============================>                         (60 + 53) / 113][Stage 58:=================================>                    (71 + 42) / 113][Stage 58:==============================================>      (100 + 13) / 113][Stage 58:=====================================================>(111 + 2) / 113]                                                                                [Stage 59:============================>                         (60 + 54) / 114][Stage 59:===============================>                      (66 + 48) / 114][Stage 59:======================================>               (82 + 32) / 114][Stage 59:================================================>    (104 + 10) / 114]                                                                                Time elapsed: 2.937501168 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 107 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42875058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (58 + 55) / 113][Stage 60:==============================>                       (64 + 49) / 113][Stage 60:====================================>                 (76 + 37) / 113][Stage 60:============================================>         (94 + 19) / 113][Stage 60:===================================================>  (108 + 5) / 113]                                                                                [Stage 61:============================>                         (60 + 54) / 114][Stage 61:=================================>                    (70 + 44) / 114][Stage 61:==========================================>           (89 + 25) / 114][Stage 61:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.137186143 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 83 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449651968 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:================================>                     (72 + 46) / 118][Stage 62:=================================>                    (73 + 45) / 118][Stage 62:=====================================>                (81 + 37) / 118][Stage 62:=======================================>              (86 + 32) / 118][Stage 62:============================================>         (98 + 20) / 118][Stage 62:===================================================>  (113 + 5) / 118]                                                                                [Stage 63:=================================>                    (74 + 45) / 119][Stage 63:====================================>                 (81 + 38) / 119][Stage 63:=========================================>            (92 + 27) / 119][Stage 63:==================================================>   (111 + 8) / 119][Stage 63:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.493794672 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383551526 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:=================================>                    (70 + 43) / 113][Stage 64:======================================>               (80 + 33) / 113][Stage 64:===========================================>          (92 + 21) / 113][Stage 64:==============================================>       (98 + 15) / 113][Stage 64:=================================================>    (104 + 9) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:===================================>                  (74 + 40) / 114][Stage 65:========================================>             (86 + 28) / 114][Stage 65:============================================>         (94 + 20) / 114][Stage 65:===================================================>  (108 + 6) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.199049644 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 209 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 209 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41480893 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:================================>                     (72 + 46) / 118][Stage 66:=================================>                    (74 + 44) / 118][Stage 66:===================================>                  (78 + 40) / 118][Stage 66:===========================================>          (96 + 22) / 118][Stage 66:===================================================>  (112 + 6) / 118][Stage 66:=====================================================>(117 + 1) / 118]                                                                                [Stage 67:=================================>                    (74 + 45) / 119][Stage 67:=====================================>                (83 + 36) / 119][Stage 67:==========================================>           (94 + 25) / 119][Stage 67:=============================================>       (103 + 16) / 119][Stage 67:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.477604837 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 235 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436652899 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==========================>                           (60 + 61) / 121][Stage 68:==============================>                       (68 + 53) / 121][Stage 68:==================================>                   (78 + 43) / 121][Stage 68:=============================================>       (104 + 17) / 121][Stage 68:====================================================> (118 + 3) / 121]                                                                                [Stage 69:===========================>                          (62 + 60) / 122][Stage 69:=================================>                    (75 + 47) / 122][Stage 69:=========================================>            (94 + 28) / 122][Stage 69:================================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.136354134 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 166 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407297897 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:======================================>               (81 + 32) / 113][Stage 70:==========================================>           (89 + 24) / 113][Stage 70:===============================================>     (102 + 11) / 113][Stage 70:=====================================================>(111 + 2) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:===================================>                  (74 + 40) / 114][Stage 71:=========================================>            (87 + 27) / 114][Stage 71:==============================================>       (98 + 16) / 114][Stage 71:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.994783658 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461633687 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (60 + 60) / 120][Stage 72:================================>                     (72 + 48) / 120][Stage 72:=======================================>              (87 + 33) / 120][Stage 72:==================================================>   (112 + 8) / 120]                                                                                [Stage 73:============================>                         (63 + 58) / 121][Stage 73:=================================>                    (75 + 46) / 121][Stage 73:=========================================>            (92 + 29) / 121][Stage 73:================================================>    (110 + 11) / 121][Stage 73:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.191524358 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378150394 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:====================================>                 (77 + 36) / 113][Stage 74:========================================>             (84 + 29) / 113][Stage 74:=============================================>        (95 + 18) / 113][Stage 74:==================================================>   (106 + 7) / 113][Stage 74:=====================================================>(111 + 2) / 113]                                                                                [Stage 75:======================================>               (82 + 32) / 114][Stage 75:==========================================>           (90 + 24) / 114][Stage 75:==============================================>       (98 + 16) / 114][Stage 75:=================================================>    (105 + 9) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.270369603 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 199 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377928895 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:======================================>               (82 + 33) / 115][Stage 76:========================================>             (87 + 28) / 115][Stage 76:==============================================>       (98 + 17) / 115][Stage 76:===================================================>  (110 + 5) / 115][Stage 76:=====================================================>(114 + 1) / 115]                                                                                [Stage 77:======================================>               (82 + 34) / 116][Stage 77:============================================>         (95 + 21) / 116][Stage 77:==================================================>   (108 + 8) / 116][Stage 77:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.905012427 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384861572 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:======================================>               (83 + 32) / 115][Stage 78:=============================================>        (96 + 19) / 115][Stage 78:====================================================> (111 + 4) / 115]                                                                                [Stage 79:========================================>             (86 + 30) / 116][Stage 79:===========================================>          (94 + 22) / 116][Stage 79:====================================================> (113 + 3) / 116][Stage 79:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.66990756 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 97 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392822729 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:================================>                     (72 + 46) / 118][Stage 80:==================================>                   (75 + 43) / 118][Stage 80:=====================================>                (82 + 36) / 118][Stage 80:============================================>         (98 + 20) / 118][Stage 80:==================================================>   (111 + 7) / 118]                                                                                [Stage 81:==================================>                   (76 + 43) / 119][Stage 81:====================================>                 (80 + 39) / 119][Stage 81:==========================================>           (94 + 25) / 119][Stage 81:============================================>        (101 + 18) / 119][Stage 81:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.193425026 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 49 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387943592 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:=================================>                    (73 + 45) / 118][Stage 82:==================================>                   (75 + 43) / 118][Stage 82:======================================>               (85 + 33) / 118][Stage 82:============================================>         (98 + 20) / 118][Stage 82:==================================================>   (110 + 8) / 118][Stage 82:=====================================================>(117 + 1) / 118]                                                                                [Stage 83:=================================>                    (74 + 45) / 119][Stage 83:===================================>                  (79 + 40) / 119][Stage 83:=======================================>              (86 + 33) / 119][Stage 83:============================================>        (100 + 19) / 119][Stage 83:================================================>    (109 + 10) / 119][Stage 83:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.522598436 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373813641 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==================================>                   (73 + 40) / 113][Stage 84:=========================================>            (86 + 27) / 113][Stage 84:===========================================>          (92 + 21) / 113][Stage 84:===============================================>     (101 + 12) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:=====================================>                (80 + 34) / 114][Stage 85:============================================>         (94 + 20) / 114][Stage 85:==================================================>   (106 + 8) / 114][Stage 85:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.041041981 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406441165 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (58 + 55) / 113][Stage 86:============================>                         (59 + 54) / 113][Stage 86:================================>                     (67 + 46) / 113][Stage 86:===========================================>          (91 + 22) / 113][Stage 86:=================================================>    (104 + 9) / 113]                                                                                [Stage 87:============================>                         (60 + 54) / 114][Stage 87:==================================>                   (73 + 41) / 114][Stage 87:=============================================>        (96 + 18) / 114][Stage 87:===================================================>  (108 + 6) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.17062902 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432741391 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (60 + 60) / 120][Stage 88:===============================>                      (70 + 50) / 120][Stage 88:======================================>               (86 + 34) / 120][Stage 88:=================================================>    (111 + 9) / 120][Stage 88:=====================================================>(119 + 1) / 120]                                                                                [Stage 89:===========================>                          (61 + 60) / 121][Stage 89:==============================>                       (68 + 53) / 121][Stage 89:====================================>                 (82 + 39) / 121][Stage 89:============================================>        (102 + 19) / 121][Stage 89:===================================================>  (115 + 6) / 121][Stage 89:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.187747917 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402824888 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:=================================>                    (71 + 44) / 115][Stage 90:=======================================>              (85 + 30) / 115][Stage 90:==============================================>      (100 + 15) / 115][Stage 90:====================================================> (111 + 4) / 115]                                                                                [Stage 91:===================================>                  (77 + 39) / 116][Stage 91:==========================================>           (91 + 25) / 116][Stage 91:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.765691706 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 174 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41912948 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (60 + 60) / 120][Stage 92:============================>                         (63 + 57) / 120][Stage 92:====================================>                 (80 + 40) / 120][Stage 92:============================================>         (99 + 21) / 120][Stage 92:====================================================> (116 + 4) / 120]                                                                                [Stage 93:===========================>                          (61 + 60) / 121][Stage 93:=============================>                        (67 + 54) / 121][Stage 93:=====================================>                (85 + 36) / 121][Stage 93:=============================================>       (104 + 17) / 121][Stage 93:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 2.996101271 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352451056 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:>                                                       (0 + 0) / 115][Stage 94:======================================>               (81 + 34) / 115][Stage 94:==========================================>           (91 + 24) / 115][Stage 94:==============================================>      (101 + 14) / 115]                                                                                [Stage 95:======================================>               (83 + 33) / 116][Stage 95:=========================================>            (89 + 27) / 116][Stage 95:==============================================>      (101 + 15) / 116][Stage 95:===================================================>  (111 + 5) / 116][Stage 95:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.965364054 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 232 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350171018 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=======================================>              (84 + 31) / 115][Stage 96:============================================>         (94 + 21) / 115][Stage 96:===================================================>  (110 + 5) / 115]                                                                                [Stage 97:=====================================>                (81 + 35) / 116][Stage 97:=======================================>              (85 + 31) / 116][Stage 97:=============================================>        (97 + 19) / 116][Stage 97:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.412497447 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374488426 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:================================>                     (72 + 46) / 118][Stage 98:====================================>                 (79 + 39) / 118][Stage 98:=======================================>              (87 + 31) / 118][Stage 98:============================================>        (100 + 18) / 118][Stage 98:================================================>    (107 + 11) / 118]                                                                                [Stage 99:==================================>                   (76 + 43) / 119][Stage 99:====================================>                 (81 + 38) / 119][Stage 99:==========================================>           (93 + 26) / 119][Stage 99:=============================================>       (103 + 16) / 119][Stage 99:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.407492938 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38776346 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===============================>                     (68 + 47) / 115][Stage 100:=====================================>               (82 + 33) / 115][Stage 100:=============================================>      (100 + 15) / 115][Stage 100:====================================================>(113 + 2) / 115]                                                                                [Stage 101:==============================>                      (66 + 50) / 116][Stage 101:===================================>                 (78 + 38) / 116][Stage 101:=========================================>           (91 + 25) / 116][Stage 101:==============================================>     (104 + 12) / 116][Stage 101:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.744700146 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392960358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:=============================>                       (64 + 51) / 115][Stage 102:===================================>                 (76 + 39) / 115][Stage 102:============================================>        (97 + 18) / 115][Stage 102:=================================================>   (108 + 7) / 115]                                                                                [Stage 103:====================================>                (79 + 37) / 116][Stage 103:========================================>            (88 + 28) / 116][Stage 103:===============================================>    (105 + 11) / 116]                                                                                Time elapsed: 2.640309486 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 195 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374170969 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:====================================>                (78 + 35) / 113][Stage 104:========================================>            (87 + 26) / 113][Stage 104:=============================================>       (96 + 17) / 113][Stage 104:==================================================>  (107 + 6) / 113][Stage 104:===================================================> (110 + 3) / 113]                                                                                [Stage 105:===================================>                 (76 + 38) / 114][Stage 105:=======================================>             (85 + 29) / 114][Stage 105:===========================================>         (94 + 20) / 114][Stage 105:==============================================>     (101 + 13) / 114][Stage 105:==================================================>  (109 + 5) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.194581988 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366198073 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==================================>                  (74 + 39) / 113][Stage 106:=======================================>             (85 + 28) / 113][Stage 106:============================================>        (94 + 19) / 113][Stage 106:================================================>    (104 + 9) / 113][Stage 106:====================================================>(112 + 1) / 113]                                                                                [Stage 107:====================================>                (79 + 35) / 114][Stage 107:=======================================>             (85 + 29) / 114][Stage 107:============================================>        (95 + 19) / 114][Stage 107:==================================================>  (109 + 5) / 114][Stage 107:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.133036406 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37519021 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:======================================>              (84 + 31) / 115][Stage 108:============================================>        (96 + 19) / 115][Stage 108:=================================================>   (107 + 8) / 115][Stage 108:====================================================>(114 + 1) / 115]                                                                                [Stage 109:=======================================>             (86 + 30) / 116][Stage 109:=============================================>       (99 + 17) / 116][Stage 109:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.638068584 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367041375 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=================================>                   (72 + 41) / 113][Stage 110:=======================================>             (84 + 29) / 113][Stage 110:=============================================>       (96 + 17) / 113][Stage 110:=================================================>   (106 + 7) / 113][Stage 110:====================================================>(111 + 2) / 113][Stage 110:====================================================>(112 + 1) / 113]                                                                                [Stage 111:==================================>                  (75 + 39) / 114][Stage 111:=======================================>             (86 + 28) / 114][Stage 111:=============================================>       (97 + 17) / 114][Stage 111:==================================================>  (108 + 6) / 114][Stage 111:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.507051551 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412843092 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (61 + 59) / 120][Stage 112:================================>                    (73 + 47) / 120][Stage 112:=========================================>           (93 + 27) / 120][Stage 112:==================================================>  (115 + 5) / 120]                                                                                [Stage 113:==========================>                          (61 + 60) / 121][Stage 113:===================================>                 (82 + 39) / 121][Stage 113:===========================================>        (101 + 20) / 121][Stage 113:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.030767978 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380174809 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==============================>                      (67 + 48) / 115][Stage 114:====================================>                (80 + 35) / 115][Stage 114:==========================================>          (93 + 22) / 115][Stage 114:==============================================>     (103 + 12) / 115][Stage 114:===================================================> (111 + 4) / 115]                                                                                [Stage 115:===================================>                 (77 + 39) / 116][Stage 115:==========================================>          (93 + 23) / 116][Stage 115:==============================================>     (104 + 12) / 116][Stage 115:===================================================> (112 + 4) / 116][Stage 115:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.524002718 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405489358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 61) / 121][Stage 116:============================>                        (65 + 56) / 121][Stage 116:===================================>                 (81 + 40) / 121][Stage 116:==========================================>         (100 + 21) / 121]                                                                                [Stage 117:==========================>                          (61 + 61) / 122][Stage 117:=============================>                       (69 + 53) / 122][Stage 117:===================================>                 (81 + 41) / 122][Stage 117:===========================================>        (103 + 19) / 122][Stage 117:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.13365388 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 116 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366135678 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:================================>                    (72 + 46) / 118][Stage 118:================================>                    (73 + 45) / 118][Stage 118:=====================================>               (83 + 35) / 118][Stage 118:============================================>        (98 + 20) / 118][Stage 118:==================================================>  (112 + 6) / 118][Stage 118:====================================================>(117 + 1) / 118]                                                                                [Stage 119:================================>                    (73 + 46) / 119][Stage 119:===================================>                 (79 + 40) / 119][Stage 119:======================================>              (86 + 33) / 119][Stage 119:=============================================>      (103 + 16) / 119][Stage 119:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.316548517 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345897189 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:====================================>                (79 + 36) / 115][Stage 120:=======================================>             (85 + 30) / 115][Stage 120:=============================================>       (99 + 16) / 115][Stage 120:=================================================>   (107 + 8) / 115]                                                                                [Stage 121:=====================================>               (83 + 33) / 116][Stage 121:==========================================>          (92 + 24) / 116][Stage 121:==============================================>     (104 + 12) / 116][Stage 121:==================================================>  (111 + 5) / 116][Stage 121:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.12460668 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376793274 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===============================>                     (69 + 46) / 115][Stage 122:======================================>              (83 + 32) / 115][Stage 122:=========================================>           (91 + 24) / 115][Stage 122:================================================>    (106 + 9) / 115]                                                                                [Stage 123:=================================>                   (74 + 42) / 116][Stage 123:=============================================>       (99 + 17) / 116][Stage 123:===============================================>    (106 + 10) / 116][Stage 123:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.740973974 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38850465 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (58 + 55) / 113][Stage 124:===============================>                     (67 + 46) / 113][Stage 124:=====================================>               (79 + 34) / 113][Stage 124:==============================================>     (102 + 11) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:============================>                        (62 + 52) / 114][Stage 125:=====================================>               (80 + 34) / 114][Stage 125:==============================================>     (101 + 13) / 114][Stage 125:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.115936337 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 176 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41069768 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (61 + 60) / 121][Stage 126:===============================>                     (71 + 50) / 121][Stage 126:========================================>            (92 + 29) / 121][Stage 126:=================================================>   (112 + 9) / 121]                                                                                [Stage 127:==========================>                          (61 + 61) / 122][Stage 127:==============================>                      (70 + 52) / 122][Stage 127:======================================>              (88 + 34) / 122][Stage 127:============================================>       (105 + 17) / 122][Stage 127:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.273005907 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424322254 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (61 + 60) / 121][Stage 128:===============================>                     (72 + 49) / 121][Stage 128:========================================>            (93 + 28) / 121][Stage 128:====================================================>(119 + 2) / 121]                                                                                [Stage 129:==========================>                          (61 + 61) / 122][Stage 129:===========================>                         (63 + 59) / 122][Stage 129:=================================>                   (77 + 45) / 122][Stage 129:==========================================>         (100 + 22) / 122][Stage 129:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 2.895051097 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371037741 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:================================>                    (70 + 43) / 113][Stage 130:======================================>              (83 + 30) / 113][Stage 130:==========================================>          (91 + 22) / 113][Stage 130:=================================================>   (105 + 8) / 113][Stage 130:====================================================>(112 + 1) / 113]                                                                                [Stage 131:====================================>                (78 + 36) / 114][Stage 131:=========================================>           (90 + 24) / 114][Stage 131:==============================================>     (101 + 13) / 114][Stage 131:==================================================>  (109 + 5) / 114][Stage 131:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.966024489 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390455772 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:============================>                        (61 + 52) / 113][Stage 132:=================================>                   (72 + 41) / 113][Stage 132:==========================================>          (91 + 22) / 113][Stage 132:==================================================>  (107 + 6) / 113]                                                                                [Stage 133:================================>                    (69 + 45) / 114][Stage 133:=====================================>               (80 + 34) / 114][Stage 133:==============================================>     (102 + 12) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.903813065 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406449185 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==========================>                          (60 + 60) / 120][Stage 134:===========================>                         (63 + 57) / 120][Stage 134:===============================>                     (71 + 49) / 120][Stage 134:=========================================>           (95 + 25) / 120][Stage 134:=================================================>   (112 + 8) / 120]                                                                                [Stage 135:===========================>                         (62 + 59) / 121][Stage 135:==================================>                  (78 + 43) / 121][Stage 135:=========================================>           (94 + 27) / 121][Stage 135:=================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.05130962 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401450988 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 61) / 121][Stage 136:============================>                        (65 + 56) / 121][Stage 136:======================================>              (87 + 34) / 121][Stage 136:===============================================>    (110 + 11) / 121][Stage 136:====================================================>(119 + 2) / 121]                                                                                [Stage 137:==========================>                          (61 + 61) / 122][Stage 137:==============================>                      (71 + 51) / 122][Stage 137:=====================================>               (87 + 35) / 122][Stage 137:=============================================>      (106 + 16) / 122][Stage 137:===================================================> (118 + 4) / 122][Stage 137:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.172911389 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341034298 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:====================================>                (80 + 35) / 115][Stage 138:=====================================>               (82 + 33) / 115][Stage 138:=============================================>       (98 + 17) / 115][Stage 138:=================================================>   (108 + 7) / 115][Stage 138:====================================================>(114 + 1) / 115]                                                                                [Stage 139:======================================>              (84 + 32) / 116][Stage 139:========================================>            (89 + 27) / 116][Stage 139:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.638706709 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35839329 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===================================>                 (75 + 38) / 113][Stage 140:=======================================>             (84 + 29) / 113][Stage 140:==========================================>          (91 + 22) / 113][Stage 140:==============================================>     (101 + 12) / 113][Stage 140:===================================================> (109 + 4) / 113]                                                                                [Stage 141:=======================================>             (86 + 28) / 114][Stage 141:============================================>        (96 + 18) / 114][Stage 141:===============================================>    (104 + 10) / 114][Stage 141:==================================================>  (109 + 5) / 114][Stage 141:====================================================>(112 + 2) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.456898208 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402821651 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (60 + 61) / 121][Stage 142:===========================>                         (63 + 58) / 121][Stage 142:===================================>                 (81 + 40) / 121][Stage 142:===============================================>    (110 + 11) / 121][Stage 142:====================================================>(120 + 1) / 121]                                                                                [Stage 143:==========================>                          (61 + 61) / 122][Stage 143:============================>                        (65 + 57) / 122][Stage 143:=======================================>             (90 + 32) / 122][Stage 143:==============================================>     (110 + 12) / 122][Stage 143:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.207891434 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400212373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 60) / 120][Stage 144:===========================>                         (63 + 57) / 120][Stage 144:==================================>                  (77 + 43) / 120][Stage 144:=========================================>           (95 + 25) / 120][Stage 144:==================================================>  (114 + 6) / 120]                                                                                [Stage 145:============================>                        (64 + 57) / 121][Stage 145:=================================>                   (76 + 45) / 121][Stage 145:===========================================>        (101 + 20) / 121][Stage 145:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.959061017 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 56 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404647951 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 60) / 120][Stage 146:==============================>                      (69 + 51) / 120][Stage 146:=====================================>               (86 + 34) / 120][Stage 146:=============================================>      (106 + 14) / 120][Stage 146:====================================================>(119 + 1) / 120]                                                                                [Stage 147:==========================>                          (61 + 60) / 121][Stage 147:============================>                        (65 + 56) / 121][Stage 147:================================>                    (75 + 46) / 121][Stage 147:===========================================>         (99 + 22) / 121][Stage 147:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.080824127 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405083892 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==========================>                          (61 + 59) / 120][Stage 148:==============================>                      (68 + 52) / 120][Stage 148:====================================>                (83 + 37) / 120][Stage 148:=============================================>      (105 + 15) / 120][Stage 148:====================================================>(118 + 2) / 120]                                                                                [Stage 149:=============================>                       (68 + 53) / 121][Stage 149:==================================>                  (79 + 42) / 121][Stage 149:========================================>            (93 + 28) / 121][Stage 149:===============================================>    (111 + 10) / 121][Stage 149:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.326717539 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 217 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351667818 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:====================================>                (80 + 35) / 115][Stage 150:=========================================>           (90 + 25) / 115][Stage 150:================================================>    (106 + 9) / 115][Stage 150:====================================================>(114 + 1) / 115]                                                                                [Stage 151:=====================================>               (83 + 33) / 116][Stage 151:=========================================>           (91 + 25) / 116][Stage 151:==============================================>     (104 + 12) / 116][Stage 151:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.659895794 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402223575 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (59 + 54) / 113][Stage 152:==============================>                      (66 + 47) / 113][Stage 152:======================================>              (83 + 30) / 113][Stage 152:==============================================>     (100 + 13) / 113][Stage 152:====================================================>(112 + 1) / 113]                                                                                [Stage 153:===========================>                         (60 + 54) / 114][Stage 153:===============================>                     (68 + 46) / 114][Stage 153:=======================================>             (86 + 28) / 114][Stage 153:================================================>    (105 + 9) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.00684704 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378835067 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:=================================>                   (74 + 44) / 118][Stage 154:===================================>                 (79 + 39) / 118][Stage 154:============================================>        (98 + 20) / 118][Stage 154:==================================================>  (113 + 5) / 118]                                                                                [Stage 155:================================>                    (74 + 45) / 119][Stage 155:===================================>                 (79 + 40) / 119][Stage 155:=======================================>             (89 + 30) / 119][Stage 155:============================================>       (102 + 17) / 119][Stage 155:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.251129234 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353422599 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:====================================>                (77 + 36) / 113][Stage 156:========================================>            (87 + 26) / 113][Stage 156:=============================================>       (97 + 16) / 113][Stage 156:==================================================>  (108 + 5) / 113]                                                                                [Stage 157:=====================================>               (81 + 33) / 114][Stage 157:==========================================>          (91 + 23) / 114][Stage 157:==============================================>     (102 + 12) / 114][Stage 157:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 2.862599058 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 46 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382438087 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (58 + 55) / 113][Stage 158:============================>                        (61 + 52) / 113][Stage 158:=====================================>               (80 + 33) / 113][Stage 158:=============================================>       (97 + 16) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:==========================>                          (58 + 56) / 114][Stage 159:==============================>                      (65 + 49) / 114][Stage 159:======================================>              (83 + 31) / 114][Stage 159:================================================>    (105 + 9) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.880017016 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 79 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39829346 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (60 + 61) / 121][Stage 160:===========================>                         (62 + 59) / 121][Stage 160:===================================>                 (80 + 41) / 121][Stage 160:===========================================>        (102 + 19) / 121][Stage 160:=================================================>   (114 + 7) / 121]                                                                                [Stage 161:==========================>                          (62 + 60) / 122][Stage 161:=================================>                   (78 + 44) / 122][Stage 161:===========================================>        (102 + 20) / 122][Stage 161:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 2.956404047 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 213 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409507556 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (61 + 59) / 120][Stage 162:================================>                    (74 + 46) / 120][Stage 162:=========================================>           (94 + 26) / 120][Stage 162:===================================================> (117 + 3) / 120]                                                                                [Stage 163:==========================>                          (61 + 60) / 121][Stage 163:=============================>                       (68 + 53) / 121][Stage 163:========================================>            (93 + 28) / 121][Stage 163:=================================================>   (113 + 8) / 121][Stage 163:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 2.837795686 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360775159 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:======================================>              (82 + 31) / 113][Stage 164:==========================================>          (91 + 22) / 113][Stage 164:==============================================>      (99 + 14) / 113][Stage 164:===================================================> (110 + 3) / 113][Stage 164:====================================================>(112 + 1) / 113]                                                                                [Stage 165:=======================================>             (84 + 30) / 114][Stage 165:==========================================>          (91 + 23) / 114][Stage 165:==============================================>     (101 + 13) / 114][Stage 165:===================================================> (110 + 4) / 114][Stage 165:====================================================>(112 + 2) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.607441769 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338044469 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:====================================>                (80 + 35) / 115][Stage 166:=========================================>           (90 + 25) / 115][Stage 166:============================================>        (97 + 18) / 115][Stage 166:=================================================>   (108 + 7) / 115][Stage 166:====================================================>(114 + 1) / 115]                                                                                [Stage 167:=====================================>               (81 + 35) / 116][Stage 167:========================================>            (89 + 27) / 116][Stage 167:=============================================>      (101 + 15) / 116][Stage 167:==================================================>  (111 + 5) / 116][Stage 167:====================================================>(114 + 2) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.343231914 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 140 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380508231 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:================================>                    (72 + 46) / 118][Stage 168:=================================>                   (75 + 43) / 118][Stage 168:====================================>                (82 + 36) / 118][Stage 168:=========================================>           (92 + 26) / 118][Stage 168:=================================================>   (111 + 7) / 118]                                                                                [Stage 169:=================================>                   (75 + 44) / 119][Stage 169:====================================>                (81 + 38) / 119][Stage 169:========================================>            (90 + 29) / 119][Stage 169:=============================================>      (105 + 14) / 119][Stage 169:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.241558987 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 84 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372768195 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:=============================>                       (65 + 50) / 115][Stage 170:====================================>                (79 + 36) / 115][Stage 170:==========================================>          (93 + 22) / 115][Stage 170:===============================================>    (105 + 10) / 115][Stage 170:===================================================> (111 + 4) / 115]                                                                                [Stage 171:===============================>                     (68 + 48) / 116][Stage 171:====================================>                (80 + 36) / 116][Stage 171:=============================================>       (99 + 17) / 116][Stage 171:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.834667813 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 139 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352868325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:======================================>              (82 + 31) / 113][Stage 172:===========================================>         (92 + 21) / 113][Stage 172:==============================================>     (102 + 11) / 113][Stage 172:==================================================>  (108 + 5) / 113][Stage 172:====================================================>(111 + 2) / 113]                                                                                [Stage 173:====================================>                (78 + 36) / 114][Stage 173:=========================================>           (90 + 24) / 114][Stage 173:=============================================>       (97 + 17) / 114][Stage 173:=================================================>   (106 + 8) / 114][Stage 173:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.08178143 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339834952 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:=====================================>               (81 + 34) / 115][Stage 174:=======================================>             (86 + 29) / 115][Stage 174:=============================================>       (99 + 16) / 115][Stage 174:=================================================>   (108 + 7) / 115]                                                                                [Stage 175:======================================>              (84 + 32) / 116][Stage 175:==========================================>          (92 + 24) / 116][Stage 175:===============================================>    (105 + 11) / 116][Stage 175:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.969224605 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371728459 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=====================================>               (79 + 34) / 113][Stage 176:==========================================>          (90 + 23) / 113][Stage 176:==============================================>     (101 + 12) / 113][Stage 176:====================================================>(111 + 2) / 113]                                                                                [Stage 177:===================================>                 (77 + 37) / 114][Stage 177:=========================================>           (89 + 25) / 114][Stage 177:==============================================>      (99 + 15) / 114][Stage 177:==================================================>  (109 + 5) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.838624808 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 143 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364115202 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:================================>                    (73 + 45) / 118][Stage 178:==================================>                  (77 + 41) / 118][Stage 178:=======================================>             (88 + 30) / 118][Stage 178:============================================>       (100 + 18) / 118][Stage 178:=================================================>   (111 + 7) / 118][Stage 178:====================================================>(117 + 1) / 118]                                                                                [Stage 179:================================>                    (73 + 46) / 119][Stage 179:===================================>                 (79 + 40) / 119][Stage 179:======================================>              (87 + 32) / 119][Stage 179:==========================================>          (95 + 24) / 119][Stage 179:==============================================>     (106 + 13) / 119][Stage 179:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.4266684 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 80 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398676148 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==========================>                          (60 + 60) / 120][Stage 180:==============================>                      (70 + 50) / 120][Stage 180:=========================================>           (94 + 26) / 120][Stage 180:=================================================>   (111 + 9) / 120]                                                                                [Stage 181:===========================>                         (63 + 58) / 121][Stage 181:================================>                    (75 + 46) / 121][Stage 181:==========================================>          (97 + 24) / 121][Stage 181:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 2.974254142 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439685211 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (61 + 60) / 121][Stage 182:================================>                    (74 + 47) / 121][Stage 182:========================================>            (92 + 29) / 121][Stage 182:=================================================>   (112 + 9) / 121]                                                                                [Stage 183:==========================>                          (62 + 60) / 122][Stage 183:================================>                    (74 + 48) / 122][Stage 183:==========================================>          (97 + 25) / 122][Stage 183:===============================================>    (111 + 11) / 122][Stage 183:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.201145971 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 105 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.477043817 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:>                                                      (0 + 0) / 113][Stage 184:====================================>                (78 + 35) / 113][Stage 184:==========================================>          (91 + 22) / 113][Stage 184:=============================================>       (97 + 16) / 113][Stage 184:==================================================>  (108 + 5) / 113]                                                                                [Stage 185:=====================================>               (81 + 33) / 114][Stage 185:===========================================>         (93 + 21) / 114][Stage 185:==============================================>      (99 + 15) / 114][Stage 185:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.876811735 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35263147 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:=======================================>             (84 + 29) / 113][Stage 186:===========================================>         (93 + 20) / 113][Stage 186:==============================================>     (102 + 11) / 113][Stage 186:====================================================>(111 + 2) / 113]                                                                                [Stage 187:===================================>                 (76 + 38) / 114][Stage 187:=======================================>             (86 + 28) / 114][Stage 187:=============================================>       (98 + 16) / 114][Stage 187:================================================>    (105 + 9) / 114][Stage 187:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.917301864 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366975745 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===================================>                 (76 + 39) / 115][Stage 188:========================================>            (87 + 28) / 115][Stage 188:===============================================>    (104 + 11) / 115][Stage 188:====================================================>(113 + 2) / 115]                                                                                [Stage 189:===============================>                     (70 + 46) / 116][Stage 189:===================================>                 (77 + 39) / 116][Stage 189:==========================================>          (94 + 22) / 116][Stage 189:===================================================> (112 + 4) / 116][Stage 189:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.803560858 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387008818 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (59 + 54) / 113][Stage 190:==============================>                      (66 + 47) / 113][Stage 190:=======================================>             (84 + 29) / 113][Stage 190:=================================================>   (105 + 8) / 113][Stage 190:====================================================>(112 + 1) / 113]                                                                                [Stage 191:=============================>                       (64 + 50) / 114][Stage 191:===================================>                 (76 + 38) / 114][Stage 191:==============================================>     (101 + 13) / 114][Stage 191:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.998599921 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389558676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (62 + 58) / 120][Stage 192:================================>                    (73 + 47) / 120][Stage 192:========================================>            (91 + 29) / 120][Stage 192:=================================================>   (111 + 9) / 120]                                                                                [Stage 193:===========================>                         (62 + 59) / 121][Stage 193:================================>                    (74 + 47) / 121][Stage 193:========================================>            (92 + 29) / 121][Stage 193:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.025438256 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.516020585 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:============================>                        (61 + 52) / 113][Stage 194:=================================>                   (72 + 41) / 113][Stage 194:==========================================>          (91 + 22) / 113][Stage 194:=================================================>   (106 + 7) / 113]                                                                                [Stage 195:=============================>                       (64 + 50) / 114][Stage 195:===================================>                 (77 + 37) / 114][Stage 195:==============================================>     (102 + 12) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.884391561 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414989428 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==========================>                          (61 + 59) / 120][Stage 196:================================>                    (73 + 47) / 120][Stage 196:============================================>       (102 + 18) / 120][Stage 196:==================================================>  (115 + 5) / 120]                                                                                [Stage 197:==========================>                          (61 + 60) / 121][Stage 197:=============================>                       (68 + 53) / 121][Stage 197:====================================>                (83 + 38) / 121][Stage 197:============================================>       (104 + 17) / 121]                                                                                Time elapsed: 2.770220354 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 175 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404129973 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:==============================>                      (67 + 48) / 115][Stage 198:=========================================>           (90 + 25) / 115][Stage 198:=============================================>       (99 + 16) / 115][Stage 198:==================================================>  (109 + 6) / 115]                                                                                [Stage 199:================================>                    (71 + 45) / 116][Stage 199:========================================>            (88 + 28) / 116][Stage 199:=============================================>      (101 + 15) / 116][Stage 199:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.84262111 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227 ", 1))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 227 ",1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392006299 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (63 + 57) / 120][Stage 200:================================>                    (74 + 46) / 120][Stage 200:=========================================>           (94 + 26) / 120][Stage 200:===================================================> (116 + 4) / 120]                                                                                [Stage 201:===========================>                         (62 + 59) / 121][Stage 201:================================>                    (75 + 46) / 121][Stage 201:=============================================>      (105 + 16) / 121][Stage 201:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.009444326 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m55.865s
user	11m36.400s
sys	0m28.864s
