Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 19:05:12 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:05:26 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:05:26 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:05:27 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 19:05:29 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 19:05:40 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524190529-0583).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@158cb50a

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.331454058 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:==================>                                    (38 + 77) / 115][Stage 0:===========================>                           (57 + 58) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:===================================>                   (75 + 40) / 115][Stage 0:======================================>                (80 + 35) / 115][Stage 0:===========================================>           (91 + 24) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:====================================================>  (110 + 5) / 115]                                                                                [Stage 1:========================>                              (51 + 65) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:======================================>                (81 + 35) / 116][Stage 1:=============================================>         (96 + 20) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:====================================================>  (110 + 6) / 116]                                                                                Time elapsed: 12.685200228 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR   partitionIndex = 206  OR  partitionIndex = 218 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.78122647 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===================>                                   (43 + 77) / 120][Stage 2:========================>                              (53 + 67) / 120][Stage 2:=========================>                             (55 + 65) / 120][Stage 2:===========================>                           (59 + 61) / 120][Stage 2:==============================>                        (66 + 54) / 120][Stage 2:======================================>                (85 + 35) / 120][Stage 2:==============================================>       (103 + 17) / 120][Stage 2:===================================================>   (112 + 8) / 120][Stage 2:======================================================>(118 + 2) / 120]                                                                                [Stage 3:===========================>                           (60 + 61) / 121][Stage 3:============================>                          (62 + 59) / 121][Stage 3:=============================>                         (65 + 56) / 121][Stage 3:==============================>                        (67 + 54) / 121][Stage 3:========================================>              (89 + 32) / 121][Stage 3:===============================================>      (106 + 15) / 121][Stage 3:====================================================>  (115 + 6) / 121][Stage 3:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.319434166 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195  OR   partitionIndex = 208  OR  partitionIndex = 209 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 208  OR  partitionIndex = 209 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.765716531 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:========================>                              (53 + 68) / 121][Stage 4:==========================>                            (59 + 62) / 121][Stage 4:===========================>                           (60 + 61) / 121][Stage 4:==============================>                        (66 + 55) / 121][Stage 4:=================================>                     (73 + 48) / 121][Stage 4:==========================================>            (93 + 28) / 121][Stage 4:=================================================>    (110 + 11) / 121][Stage 4:======================================================>(119 + 2) / 121]                                                                                [Stage 5:===========================>                           (60 + 62) / 122][Stage 5:=============================>                         (66 + 56) / 122][Stage 5:================================>                      (72 + 50) / 122][Stage 5:====================================>                  (80 + 42) / 122][Stage 5:===========================================>           (96 + 26) / 122][Stage 5:===================================================>   (114 + 8) / 122]                                                                                Time elapsed: 4.412305298 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 111  OR  partitionIndex = 112 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 111  OR  partitionIndex = 112 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.715402622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (57 + 56) / 113][Stage 6:============================>                          (59 + 54) / 113][Stage 6:==============================>                        (63 + 50) / 113][Stage 6:===================================>                   (73 + 40) / 113][Stage 6:===========================================>           (90 + 23) / 113][Stage 6:===================================================>   (106 + 7) / 113]                                                                                [Stage 7:============================>                          (59 + 55) / 114][Stage 7:===============================>                       (65 + 49) / 114][Stage 7:====================================>                  (76 + 38) / 114][Stage 7:===========================================>           (91 + 23) / 114][Stage 7:================================================>     (102 + 12) / 114][Stage 7:=====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.841287987 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR   partitionIndex = 166  OR  partitionIndex = 167 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 166  OR  partitionIndex = 167 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.69701692 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:>                                                        (0 + 0) / 121][Stage 8:===========================>                           (60 + 61) / 121][Stage 8:==============================>                        (67 + 54) / 121][Stage 8:=====================================>                 (82 + 39) / 121][Stage 8:=========================================>             (91 + 30) / 121][Stage 8:===============================================>      (106 + 15) / 121][Stage 8:====================================================>  (116 + 5) / 121]                                                                                [Stage 9:===========================>                           (61 + 61) / 122][Stage 9:=============================>                         (65 + 57) / 122][Stage 9:===================================>                   (79 + 43) / 122][Stage 9:===========================================>           (96 + 26) / 122][Stage 9:==============================================>       (105 + 17) / 122][Stage 9:=====================================================> (118 + 4) / 122][Stage 9:======================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.431122058 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  pa rtitionIndex = 83  OR  partitionIndex = 84 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.606928638 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (58 + 55) / 113][Stage 10:===============================>                      (65 + 48) / 113][Stage 10:========================================>             (84 + 29) / 113][Stage 10:===============================================>      (99 + 14) / 113][Stage 10:===============================================>     (102 + 11) / 113][Stage 10:=====================================================>(112 + 1) / 113]                                                                                [Stage 11:===========================>                          (58 + 56) / 114][Stage 11:============================>                         (60 + 54) / 114][Stage 11:===================================>                  (74 + 40) / 114][Stage 11:=============================================>        (97 + 17) / 114][Stage 11:====================================================> (110 + 4) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.230978283 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR   partitionIndex = 200  OR  partitionIndex = 201 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 200  OR  partitionIndex = 201 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.524968645 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==============================>                       (66 + 49) / 115][Stage 12:====================================>                 (78 + 37) / 115][Stage 12:==========================================>           (90 + 25) / 115][Stage 12:===============================================>     (103 + 12) / 115][Stage 12:===================================================>  (110 + 5) / 115][Stage 12:====================================================> (111 + 4) / 115]                                                                                [Stage 13:=================================>                    (71 + 45) / 116][Stage 13:======================================>               (83 + 33) / 116][Stage 13:===========================================>          (94 + 22) / 116][Stage 13:==============================================>      (101 + 15) / 116][Stage 13:================================================>    (106 + 10) / 116][Stage 13:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 4.089226802 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  pa rtitionIndex = 47  OR  partitionIndex = 48 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449562329 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:=======================================>              (85 + 30) / 115][Stage 14:==========================================>           (91 + 24) / 115][Stage 14:===============================================>     (104 + 11) / 115][Stage 14:====================================================> (111 + 4) / 115][Stage 14:=====================================================>(113 + 2) / 115]                                                                                [Stage 15:======================================>               (82 + 34) / 116][Stage 15:========================================>             (87 + 29) / 116][Stage 15:===========================================>          (94 + 22) / 116][Stage 15:==============================================>      (102 + 14) / 116][Stage 15:===============================================>     (105 + 11) / 116][Stage 15:==================================================>   (109 + 7) / 116][Stage 15:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.361531574 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIndex = 85  OR  pa rtitionIndex = 86  OR  partitionIndex = 98 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.58626853 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:============================>                         (60 + 53) / 113][Stage 16:===================================>                  (75 + 38) / 113][Stage 16:===========================================>          (92 + 21) / 113][Stage 16:====================================================> (109 + 4) / 113][Stage 16:=====================================================>(112 + 1) / 113]                                                                                [Stage 17:===========================>                          (59 + 55) / 114][Stage 17:============================>                         (60 + 54) / 114][Stage 17:=====================================>                (79 + 35) / 114][Stage 17:=============================================>        (95 + 19) / 114][Stage 17:================================================>    (104 + 10) / 114][Stage 17:====================================================> (110 + 4) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.124489094 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  pa rtitionIndex = 31  OR  partitionIndex = 45 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.568167135 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (60 + 60) / 120][Stage 18:===========================>                          (61 + 59) / 120][Stage 18:===============================>                      (70 + 50) / 120][Stage 18:======================================>               (85 + 35) / 120][Stage 18:============================================>        (101 + 19) / 120][Stage 18:====================================================> (117 + 3) / 120]                                                                                [Stage 19:=============================>                        (66 + 55) / 121][Stage 19:===============================>                      (70 + 51) / 121][Stage 19:====================================>                 (82 + 39) / 121][Stage 19:===============================================>     (108 + 13) / 121][Stage 19:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.707216155 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR   partitionIndex = 121  OR  partitionIndex = 135 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499162774 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:============================>                         (59 + 54) / 113][Stage 20:============================>                         (60 + 53) / 113][Stage 20:==================================>                   (72 + 41) / 113][Stage 20:=========================================>            (87 + 26) / 113][Stage 20:===============================================>     (102 + 11) / 113][Stage 20:====================================================> (110 + 3) / 113]                                                                                [Stage 21:===========================>                          (59 + 55) / 114][Stage 21:==============================>                       (65 + 49) / 114][Stage 21:========================================>             (86 + 28) / 114][Stage 21:==============================================>       (99 + 15) / 114][Stage 21:===============================================>     (102 + 12) / 114][Stage 21:==================================================>   (106 + 8) / 114][Stage 21:=====================================================>(112 + 2) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.097283971 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  pa rtitionIndex = 94  OR  partitionIndex = 95 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.492939118 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:============================>                         (59 + 54) / 113][Stage 22:===============================>                      (66 + 47) / 113][Stage 22:======================================>               (80 + 33) / 113][Stage 22:=============================================>        (96 + 17) / 113][Stage 22:==================================================>   (106 + 7) / 113][Stage 22:====================================================> (109 + 4) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:============================>                         (60 + 54) / 114][Stage 23:==============================>                       (65 + 49) / 114][Stage 23:====================================>                 (78 + 36) / 114][Stage 23:==========================================>           (89 + 25) / 114][Stage 23:===============================================>     (103 + 11) / 114]                                                                                Time elapsed: 3.850057858 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 217  OR   partitionIndex = 231  OR  partitionIndex = 232 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.483414036 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (58 + 55) / 113][Stage 24:============================>                         (60 + 53) / 113][Stage 24:==================================>                   (72 + 41) / 113][Stage 24:===========================================>          (90 + 23) / 113][Stage 24:==============================================>      (100 + 13) / 113][Stage 24:====================================================> (110 + 3) / 113][Stage 24:=====================================================>(111 + 2) / 113][Stage 24:=====================================================>(112 + 1) / 113]                                                                                [Stage 25:===========================>                          (59 + 55) / 114][Stage 25:===============================>                      (66 + 48) / 114][Stage 25:====================================>                 (76 + 38) / 114][Stage 25:============================================>         (93 + 21) / 114][Stage 25:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.839004939 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR   partitionIndex = 230  OR  partitionIndex = 231 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 230  OR  partitionIndex = 231 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.445719658 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===================================>                  (74 + 39) / 113][Stage 26:========================================>             (84 + 29) / 113][Stage 26:===========================================>          (91 + 22) / 113][Stage 26:==============================================>      (100 + 13) / 113][Stage 26:====================================================> (110 + 3) / 113][Stage 26:=====================================================>(111 + 2) / 113][Stage 26:=====================================================>(112 + 1) / 113]                                                                                [Stage 27:=================================>                    (71 + 43) / 114][Stage 27:=======================================>              (84 + 30) / 114][Stage 27:=============================================>        (96 + 18) / 114][Stage 27:================================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.417071096 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  pa rtitionIndex = 80  OR  partitionIndex = 81 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 80  OR  partitionIndex = 81 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405062876 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:======================================>               (83 + 32) / 115][Stage 28:==========================================>           (91 + 24) / 115][Stage 28:===============================================>     (102 + 13) / 115][Stage 28:===================================================>  (109 + 6) / 115][Stage 28:===================================================>  (110 + 5) / 115][Stage 28:====================================================> (112 + 3) / 115]                                                                                [Stage 29:======================================>               (83 + 33) / 116][Stage 29:=======================================>              (85 + 31) / 116][Stage 29:=============================================>        (97 + 19) / 116][Stage 29:==================================================>   (109 + 7) / 116][Stage 29:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.344286469 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  pa rtitionIndex = 55  OR  partitionIndex = 56 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.512527169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:==============================>                       (68 + 53) / 121][Stage 30:===================================>                  (80 + 41) / 121][Stage 30:==============================================>      (107 + 14) / 121][Stage 30:====================================================> (117 + 4) / 121]                                                                                [Stage 31:===========================>                          (61 + 61) / 122][Stage 31:=============================>                        (66 + 56) / 122][Stage 31:=====================================>                (85 + 37) / 122][Stage 31:============================================>        (103 + 19) / 122][Stage 31:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.538333724 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  pa rtitionIndex = 98  OR  partitionIndex = 99 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425567903 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:====================================>                 (77 + 36) / 113][Stage 32:=========================================>            (87 + 26) / 113][Stage 32:==============================================>       (97 + 16) / 113][Stage 32:=================================================>    (104 + 9) / 113]                                                                                [Stage 33:======================================>               (81 + 33) / 114][Stage 33:============================================>         (93 + 21) / 114][Stage 33:==============================================>       (99 + 15) / 114][Stage 33:==================================================>   (107 + 7) / 114][Stage 33:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.178834191 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  pa rtitionIndex = 57  OR  partitionIndex = 58 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478107557 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (58 + 55) / 113][Stage 34:=============================>                        (61 + 52) / 113][Stage 34:==================================>                   (73 + 40) / 113][Stage 34:===========================================>          (90 + 23) / 113][Stage 34:==================================================>   (105 + 8) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:===========================>                          (59 + 55) / 114][Stage 35:==============================>                       (65 + 49) / 114][Stage 35:======================================>               (81 + 33) / 114][Stage 35:=============================================>        (95 + 19) / 114][Stage 35:==================================================>   (107 + 7) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.51768153 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 190  OR   partitionIndex = 203  OR  partitionIndex = 204 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 203  OR  partitionIndex = 204 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485484876 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===============================>                      (67 + 48) / 115][Stage 36:=====================================>                (80 + 35) / 115][Stage 36:=============================================>        (96 + 19) / 115][Stage 36:================================================>    (105 + 10) / 115]                                                                                [Stage 37:==================================>                   (75 + 41) / 116][Stage 37:=========================================>            (90 + 26) / 116][Stage 37:================================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.687532092 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  pa rtitionIndex = 50  OR  partitionIndex = 51 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 50  OR  partitionIndex = 51 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44896447 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (72 + 46) / 118][Stage 38:===================================>                  (78 + 40) / 118][Stage 38:==========================================>           (92 + 26) / 118][Stage 38:================================================>    (108 + 10) / 118][Stage 38:===================================================>  (112 + 6) / 118][Stage 38:=====================================================>(117 + 1) / 118]                                                                                [Stage 39:=================================>                    (73 + 46) / 119][Stage 39:==================================>                   (75 + 44) / 119][Stage 39:=======================================>              (87 + 32) / 119][Stage 39:===============================================>     (106 + 13) / 119][Stage 39:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.579250822 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR   partitionIndex = 226  OR  partitionIndex = 227 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 226  OR  partitionIndex = 227 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49033253 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (58 + 55) / 113][Stage 40:===============================>                      (65 + 48) / 113][Stage 40:========================================>             (84 + 29) / 113][Stage 40:===================================================>  (107 + 6) / 113][Stage 40:====================================================> (110 + 3) / 113]                                                                                [Stage 41:===========================>                          (59 + 55) / 114][Stage 41:==================================>                   (72 + 42) / 114][Stage 41:==========================================>           (89 + 25) / 114][Stage 41:=================================================>    (105 + 9) / 114][Stage 41:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.616001144 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  pa rtitionIndex = 77  OR  partitionIndex = 78 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484840442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:============================>                         (59 + 54) / 113][Stage 42:==============================>                       (64 + 49) / 113][Stage 42:======================================>               (81 + 32) / 113][Stage 42:=============================================>        (96 + 17) / 113][Stage 42:===================================================>  (107 + 6) / 113]                                                                                [Stage 43:=============================>                        (62 + 52) / 114][Stage 43:====================================>                 (77 + 37) / 114][Stage 43:============================================>         (94 + 20) / 114][Stage 43:=================================================>    (105 + 9) / 114][Stage 43:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.535695715 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR   partitionIndex = 144  OR  partitionIndex = 145 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 144  OR  partitionIndex = 145 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465622299 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (58 + 55) / 113][Stage 44:==============================>                       (63 + 50) / 113][Stage 44:========================================>             (84 + 29) / 113][Stage 44:=================================================>    (104 + 9) / 113][Stage 44:=====================================================>(111 + 2) / 113]                                                                                [Stage 45:===========================>                          (59 + 55) / 114][Stage 45:==============================>                       (65 + 49) / 114][Stage 45:===================================>                  (74 + 40) / 114][Stage 45:=============================================>        (95 + 19) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.23456992 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 152  OR   partitionIndex = 165  OR  partitionIndex = 166 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 165  OR  partitionIndex = 166 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4612068 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (60 + 60) / 120][Stage 46:==============================>                       (68 + 52) / 120][Stage 46:========================================>             (89 + 31) / 120][Stage 46:===============================================>     (108 + 12) / 120][Stage 46:=====================================================>(119 + 1) / 120]                                                                                [Stage 47:=============================>                        (65 + 56) / 121][Stage 47:==================================>                   (78 + 43) / 121][Stage 47:============================================>        (102 + 19) / 121][Stage 47:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.488890606 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR   partitionIndex = 229  OR  partitionIndex = 230 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443735333 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=======================================>              (85 + 30) / 115][Stage 48:============================================>         (94 + 21) / 115][Stage 48:==================================================>   (107 + 8) / 115]                                                                                [Stage 49:=======================================>              (84 + 32) / 116][Stage 49:==========================================>           (92 + 24) / 116][Stage 49:================================================>    (106 + 10) / 116][Stage 49:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.748655962 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  pa rtitionIndex = 79  OR  partitionIndex = 80 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416709706 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:=====================================>                (79 + 34) / 113][Stage 50:==========================================>           (88 + 25) / 113][Stage 50:==============================================>       (97 + 16) / 113][Stage 50:==================================================>   (105 + 8) / 113][Stage 50:=====================================================>(112 + 1) / 113]                                                                                [Stage 51:====================================>                 (77 + 37) / 114][Stage 51:=========================================>            (88 + 26) / 114][Stage 51:=============================================>        (96 + 18) / 114][Stage 51:===================================================>  (108 + 6) / 114][Stage 51:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.228404034 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  pa rtitionIndex = 60  OR  partitionIndex = 68 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.525552344 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:=================================>                    (72 + 43) / 115][Stage 52:===========================================>          (92 + 23) / 115][Stage 52:==================================================>   (108 + 7) / 115][Stage 52:=====================================================>(114 + 1) / 115]                                                                                [Stage 53:================================>                     (69 + 47) / 116][Stage 53:=====================================>                (80 + 36) / 116][Stage 53:===============================================>     (103 + 13) / 116][Stage 53:====================================================> (113 + 3) / 116][Stage 53:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.926491662 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 23  OR  partitionIndex = 24 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425769917 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:==============================>                       (65 + 50) / 115][Stage 54:====================================>                 (77 + 38) / 115][Stage 54:==========================================>           (90 + 25) / 115][Stage 54:===============================================>     (103 + 12) / 115][Stage 54:===================================================>  (110 + 5) / 115][Stage 54:=====================================================>(114 + 1) / 115]                                                                                [Stage 55:==================================>                   (74 + 42) / 116][Stage 55:===========================================>          (94 + 22) / 116][Stage 55:===================================================>  (110 + 6) / 116][Stage 55:====================================================> (112 + 4) / 116][Stage 55:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.554582826 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR   partitionIndex = 201  OR  partitionIndex = 202 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374244847 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:======================================>               (81 + 34) / 115][Stage 56:=========================================>            (88 + 27) / 115][Stage 56:===============================================>     (102 + 13) / 115][Stage 56:==================================================>   (107 + 8) / 115][Stage 56:===================================================>  (110 + 5) / 115]                                                                                [Stage 57:=======================================>              (84 + 32) / 116][Stage 57:=========================================>            (90 + 26) / 116][Stage 57:===============================================>     (104 + 12) / 116][Stage 57:==================================================>   (109 + 7) / 116][Stage 57:====================================================> (112 + 4) / 116][Stage 57:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.470044159 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 19  OR  partitionIndex = 48 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 48 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.463752984 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:=============================>                        (66 + 54) / 120][Stage 58:======================================>               (86 + 34) / 120][Stage 58:==================================================>   (113 + 7) / 120]                                                                                [Stage 59:=============================>                        (65 + 56) / 121][Stage 59:===================================>                  (79 + 42) / 121][Stage 59:===========================================>          (98 + 23) / 121][Stage 59:===================================================>  (116 + 5) / 121][Stage 59:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.364291427 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211  OR   partitionIndex = 225  OR  partitionIndex = 226 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40177793 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===================================>                  (75 + 38) / 113][Stage 60:==========================================>           (88 + 25) / 113][Stage 60:================================================>    (103 + 10) / 113][Stage 60:=====================================================>(111 + 2) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:====================================>                 (78 + 36) / 114][Stage 61:==========================================>           (89 + 25) / 114][Stage 61:=============================================>        (95 + 19) / 114][Stage 61:==================================================>   (107 + 7) / 114][Stage 61:=====================================================>(112 + 2) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.28077912 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR   partitionIndex = 169  OR  partitionIndex = 170 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420819645 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:================================>                     (72 + 46) / 118][Stage 62:====================================>                 (80 + 38) / 118][Stage 62:============================================>         (98 + 20) / 118][Stage 62:==================================================>   (111 + 7) / 118][Stage 62:=====================================================>(117 + 1) / 118]                                                                                [Stage 63:=================================>                    (74 + 45) / 119][Stage 63:===================================>                  (78 + 41) / 119][Stage 63:=========================================>            (91 + 28) / 119][Stage 63:================================================>    (108 + 11) / 119][Stage 63:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.405589509 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR   partitionIndex = 188  OR  partitionIndex = 189 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407462392 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:=================================>                    (71 + 44) / 115][Stage 64:=======================================>              (85 + 30) / 115][Stage 64:==============================================>      (100 + 15) / 115][Stage 64:=====================================================>(113 + 2) / 115]                                                                                [Stage 65:=================================>                    (71 + 45) / 116][Stage 65:=======================================>              (85 + 31) / 116][Stage 65:==============================================>      (101 + 15) / 116][Stage 65:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.729954754 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 199  OR  partitionIndex = 200 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386306956 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:======================================>               (81 + 34) / 115][Stage 66:========================================>             (86 + 29) / 115][Stage 66:=============================================>        (96 + 19) / 115][Stage 66:=================================================>    (106 + 9) / 115][Stage 66:=====================================================>(113 + 2) / 115][Stage 66:=====================================================>(114 + 1) / 115]                                                                                [Stage 67:=======================================>              (85 + 31) / 116][Stage 67:==========================================>           (92 + 24) / 116][Stage 67:==============================================>      (101 + 15) / 116][Stage 67:==================================================>   (108 + 8) / 116][Stage 67:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.121488797 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  pa rtitionIndex = 87  OR  partitionIndex = 88 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 87  OR  partitionIndex = 88 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390592849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:================================>                     (72 + 46) / 118][Stage 68:====================================>                 (79 + 39) / 118][Stage 68:======================================>               (85 + 33) / 118][Stage 68:============================================>         (98 + 20) / 118][Stage 68:===================================================>  (113 + 5) / 118]                                                                                [Stage 69:==================================>                   (76 + 43) / 119][Stage 69:=====================================>                (82 + 37) / 119][Stage 69:==========================================>           (93 + 26) / 119][Stage 69:=============================================>       (103 + 16) / 119][Stage 69:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.577624627 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR   partitionIndex = 173  OR  partitionIndex = 174 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439046365 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:================================>                     (70 + 45) / 115][Stage 70:=======================================>              (85 + 30) / 115][Stage 70:===============================================>     (103 + 12) / 115][Stage 70:====================================================> (112 + 3) / 115]                                                                                [Stage 71:===============================>                      (68 + 48) / 116][Stage 71:=====================================>                (81 + 35) / 116][Stage 71:============================================>         (96 + 20) / 116][Stage 71:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.711859321 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 66  OR  pa rtitionIndex = 79  OR  partitionIndex = 80 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 79  OR  partitionIndex = 80 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39976108 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==================================>                   (73 + 40) / 113][Stage 72:=======================================>              (83 + 30) / 113][Stage 72:===========================================>          (92 + 21) / 113][Stage 72:===============================================>     (101 + 12) / 113][Stage 72:====================================================> (110 + 3) / 113][Stage 72:=====================================================>(112 + 1) / 113]                                                                                [Stage 73:===================================>                  (74 + 40) / 114][Stage 73:==========================================>           (90 + 24) / 114][Stage 73:==============================================>       (99 + 15) / 114][Stage 73:==================================================>   (106 + 8) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.267036541 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 32  OR  pa rtitionIndex = 45  OR  partitionIndex = 46 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 45  OR  partitionIndex = 46 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438480915 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==========================>                           (60 + 61) / 121][Stage 74:============================>                         (64 + 57) / 121][Stage 74:==================================>                   (77 + 44) / 121][Stage 74:===========================================>          (98 + 23) / 121][Stage 74:===================================================>  (116 + 5) / 121][Stage 74:=====================================================>(120 + 1) / 121]                                                                                [Stage 75:===========================>                          (61 + 61) / 122][Stage 75:==============================>                       (70 + 52) / 122][Stage 75:=======================================>              (89 + 33) / 122][Stage 75:==============================================>      (108 + 14) / 122][Stage 75:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.472633008 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 175  OR  partitionIndex = 176 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 175  OR  partitionIndex = 176 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433940516 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==========================>                           (60 + 61) / 121][Stage 76:===========================>                          (61 + 60) / 121][Stage 76:====================================>                 (81 + 40) / 121][Stage 76:============================================>        (101 + 20) / 121][Stage 76:===================================================>  (116 + 5) / 121]                                                                                [Stage 77:===========================>                          (62 + 60) / 122][Stage 77:===============================>                      (71 + 51) / 122][Stage 77:==========================================>           (97 + 25) / 122][Stage 77:==================================================>   (115 + 7) / 122][Stage 77:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.428163123 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 195  OR  partitionIndex = 196 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440777069 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:==========================>                           (60 + 61) / 121][Stage 78:==============================>                       (68 + 53) / 121][Stage 78:======================================>               (86 + 35) / 121][Stage 78:=============================================>       (104 + 17) / 121]                                                                                [Stage 79:===========================>                          (62 + 60) / 122][Stage 79:=================================>                    (76 + 46) / 122][Stage 79:========================================>             (91 + 31) / 122][Stage 79:============================================>        (102 + 20) / 122][Stage 79:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.340401466 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR   partitionIndex = 148  OR  partitionIndex = 149 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 148  OR  partitionIndex = 149 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420535381 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (60 + 60) / 120][Stage 80:============================>                         (64 + 56) / 120][Stage 80:======================================>               (86 + 34) / 120][Stage 80:================================================>    (110 + 10) / 120][Stage 80:=====================================================>(119 + 1) / 120]                                                                                [Stage 81:===========================>                          (61 + 60) / 121][Stage 81:===============================>                      (71 + 50) / 121][Stage 81:========================================>             (90 + 31) / 121][Stage 81:================================================>    (110 + 11) / 121][Stage 81:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.454832203 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202  OR   partitionIndex = 214  OR  partitionIndex = 215 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402755833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==================================>                   (74 + 41) / 115][Stage 82:===========================================>          (92 + 23) / 115][Stage 82:===================================================>  (110 + 5) / 115][Stage 82:=====================================================>(113 + 2) / 115]                                                                                [Stage 83:==============================>                       (65 + 51) / 116][Stage 83:=====================================>                (81 + 35) / 116][Stage 83:==========================================>           (92 + 24) / 116][Stage 83:===================================================>  (110 + 6) / 116][Stage 83:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.910094352 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR   partitionIndex = 139  OR  partitionIndex = 168 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 168 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406018418 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===============================>                      (67 + 48) / 115][Stage 84:======================================>               (82 + 33) / 115][Stage 84:==============================================>      (101 + 14) / 115][Stage 84:===================================================>  (109 + 6) / 115][Stage 84:=====================================================>(113 + 2) / 115]                                                                                [Stage 85:===============================>                      (68 + 48) / 116][Stage 85:===================================>                  (76 + 40) / 116][Stage 85:==============================================>       (99 + 17) / 116][Stage 85:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.794575773 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR   partitionIndex = 137  OR  partitionIndex = 138 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370821529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:====================================>                 (76 + 37) / 113][Stage 86:========================================>             (85 + 28) / 113][Stage 86:=============================================>        (96 + 17) / 113][Stage 86:====================================================> (109 + 4) / 113][Stage 86:=====================================================>(111 + 2) / 113]                                                                                [Stage 87:===================================>                  (74 + 40) / 114][Stage 87:========================================>             (85 + 29) / 114][Stage 87:==============================================>      (100 + 14) / 114][Stage 87:====================================================> (111 + 3) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.418879596 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR   partitionIndex = 170  OR  partitionIndex = 171 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 170  OR  partitionIndex = 171 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412258165 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (60 + 53) / 113][Stage 88:=================================>                    (71 + 42) / 113][Stage 88:==========================================>           (89 + 24) / 113][Stage 88:==================================================>   (105 + 8) / 113][Stage 88:=====================================================>(111 + 2) / 113]                                                                                [Stage 89:============================>                         (61 + 53) / 114][Stage 89:=================================>                    (70 + 44) / 114][Stage 89:========================================>             (85 + 29) / 114][Stage 89:================================================>    (104 + 10) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.278028769 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR   partitionIndex = 171  OR  partitionIndex = 172 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41803875 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (60 + 60) / 120][Stage 90:================================>                     (73 + 47) / 120][Stage 90:=========================================>            (93 + 27) / 120][Stage 90:==============================================>      (105 + 15) / 120][Stage 90:====================================================> (116 + 4) / 120]                                                                                [Stage 91:============================>                         (64 + 57) / 121][Stage 91:=================================>                    (76 + 45) / 121][Stage 91:============================================>        (101 + 20) / 121][Stage 91:===================================================>  (116 + 5) / 121][Stage 91:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.495626745 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  pa rtitionIndex = 35  OR  partitionIndex = 49 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371954612 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:====================================>                 (77 + 36) / 113][Stage 92:==========================================>           (88 + 25) / 113][Stage 92:===============================================>     (102 + 11) / 113][Stage 92:===================================================>  (108 + 5) / 113]                                                                                [Stage 93:====================================>                 (78 + 36) / 114][Stage 93:=========================================>            (87 + 27) / 114][Stage 93:==============================================>       (98 + 16) / 114][Stage 93:==================================================>   (106 + 8) / 114][Stage 93:====================================================> (110 + 4) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.845948365 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 143  OR  partitionIndex = 232 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 232 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479595726 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (60 + 60) / 120][Stage 94:============================>                         (63 + 57) / 120][Stage 94:===================================>                  (79 + 41) / 120][Stage 94:============================================>        (100 + 20) / 120][Stage 94:====================================================> (116 + 4) / 120][Stage 94:=====================================================>(119 + 1) / 120]                                                                                [Stage 95:=============================>                        (65 + 56) / 121][Stage 95:=====================================>                (84 + 37) / 121][Stage 95:=============================================>       (103 + 18) / 121][Stage 95:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.442489388 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  pa rtitionIndex = 113  OR  partitionIndex = 114 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391163843 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:==============================>                       (65 + 50) / 115][Stage 96:======================================>               (81 + 34) / 115][Stage 96:=============================================>        (96 + 19) / 115][Stage 96:===============================================>     (104 + 11) / 115][Stage 96:=====================================================>(113 + 2) / 115]                                                                                [Stage 97:==================================>                   (75 + 41) / 116][Stage 97:========================================>             (87 + 29) / 116][Stage 97:==============================================>      (101 + 15) / 116][Stage 97:===============================================>     (105 + 11) / 116][Stage 97:===================================================>  (110 + 6) / 116][Stage 97:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.411213434 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  pa rtitionIndex = 87  OR  partitionIndex = 88 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390065272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:================================>                     (69 + 46) / 115][Stage 98:===========================================>          (92 + 23) / 115][Stage 98:================================================>    (105 + 10) / 115][Stage 98:=====================================================>(114 + 1) / 115]                                                                                [Stage 99:================================>                     (69 + 47) / 116][Stage 99:=====================================>                (81 + 35) / 116][Stage 99:============================================>         (96 + 20) / 116][Stage 99:===================================================>  (110 + 6) / 116][Stage 99:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.935049685 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195  OR   partitionIndex = 207  OR  partitionIndex = 208 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 207  OR  partitionIndex = 208 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381883164 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (72 + 46) / 118][Stage 100:===================================>                 (78 + 40) / 118][Stage 100:========================================>            (91 + 27) / 118][Stage 100:=============================================>      (104 + 14) / 118]                                                                                [Stage 101:================================>                    (74 + 45) / 119][Stage 101:====================================>                (82 + 37) / 119][Stage 101:========================================>            (91 + 28) / 119][Stage 101:==============================================>     (107 + 12) / 119][Stage 101:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.304587812 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43  OR  pa rtitionIndex = 57  OR  partitionIndex = 58 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417711833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (62 + 59) / 121][Stage 102:==============================>                      (69 + 52) / 121][Stage 102:=====================================>               (85 + 36) / 121][Stage 102:=================================================>   (112 + 9) / 121]                                                                                [Stage 103:==========================>                          (62 + 60) / 122][Stage 103:==============================>                      (71 + 51) / 122][Stage 103:=======================================>             (91 + 31) / 122][Stage 103:===============================================>    (111 + 11) / 122][Stage 103:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.285289538 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR   partitionIndex = 136  OR  partitionIndex = 137 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 136  OR  partitionIndex = 137 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354057574 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:=====================================>               (81 + 34) / 115][Stage 104:=======================================>             (85 + 30) / 115][Stage 104:==========================================>          (93 + 22) / 115][Stage 104:===============================================>    (105 + 10) / 115][Stage 104:====================================================>(113 + 2) / 115]                                                                                [Stage 105:=====================================>               (83 + 33) / 116][Stage 105:========================================>            (89 + 27) / 116][Stage 105:==============================================>     (104 + 12) / 116][Stage 105:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.852016305 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193  OR  partitionIndex = 194  OR   partitionIndex = 207  OR  partitionIndex = 208 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 207  OR  partitionIndex = 208 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410873493 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (58 + 55) / 113][Stage 106:============================>                        (60 + 53) / 113][Stage 106:==================================>                  (73 + 40) / 113][Stage 106:========================================>            (86 + 27) / 113][Stage 106:==============================================>      (99 + 14) / 113][Stage 106:===================================================> (110 + 3) / 113]                                                                                [Stage 107:=============================>                       (63 + 51) / 114][Stage 107:===================================>                 (77 + 37) / 114][Stage 107:==========================================>          (92 + 22) / 114][Stage 107:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.33160644 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR   partitionIndex = 235  OR  partitionIndex = 236 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 235  OR  partitionIndex = 236 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381994657 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=====================================>               (80 + 33) / 113][Stage 108:==========================================>          (90 + 23) / 113][Stage 108:==============================================>     (102 + 11) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:==================================>                  (75 + 39) / 114][Stage 109:========================================>            (87 + 27) / 114][Stage 109:============================================>        (96 + 18) / 114][Stage 109:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 2.798706383 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR   partitionIndex = 113  OR  partitionIndex = 114 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400510745 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (60 + 60) / 120][Stage 110:===========================>                         (62 + 58) / 120][Stage 110:===================================>                 (80 + 40) / 120][Stage 110:===========================================>         (99 + 21) / 120][Stage 110:==================================================>  (114 + 6) / 120]                                                                                [Stage 111:============================>                        (64 + 57) / 121][Stage 111:===================================>                 (80 + 41) / 121][Stage 111:=========================================>           (95 + 26) / 121][Stage 111:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.221513234 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  part itionIndex = 19  OR  partitionIndex = 20 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361072304 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:=================================>                   (74 + 44) / 118][Stage 112:======================================>              (86 + 32) / 118][Stage 112:============================================>       (100 + 18) / 118][Stage 112:===================================================> (115 + 3) / 118]                                                                                [Stage 113:================================>                    (73 + 46) / 119][Stage 113:====================================>                (83 + 36) / 119][Stage 113:===========================================>         (98 + 21) / 119][Stage 113:===============================================>    (109 + 10) / 119]                                                                                Time elapsed: 3.188139407 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR   partitionIndex = 143  OR  partitionIndex = 144 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398056921 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==========================>                          (60 + 61) / 121][Stage 114:===========================>                         (63 + 58) / 121][Stage 114:=================================>                   (76 + 45) / 121][Stage 114:==========================================>          (96 + 25) / 121][Stage 114:==================================================>  (115 + 6) / 121]                                                                                [Stage 115:==========================>                          (62 + 60) / 122][Stage 115:===============================>                     (73 + 49) / 122][Stage 115:=======================================>             (91 + 31) / 122][Stage 115:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.313060241 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 231  OR  partitionIndex = 232 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 231  OR  partitionIndex = 232 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362124209 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:================================>                    (72 + 46) / 118][Stage 116:=================================>                   (74 + 44) / 118][Stage 116:==================================>                  (76 + 42) / 118][Stage 116:=======================================>             (89 + 29) / 118][Stage 116:===========================================>         (96 + 22) / 118][Stage 116:===================================================> (114 + 4) / 118][Stage 116:====================================================>(117 + 1) / 118]                                                                                [Stage 117:================================>                    (73 + 46) / 119][Stage 117:=================================>                   (75 + 44) / 119][Stage 117:===================================>                 (79 + 40) / 119][Stage 117:=======================================>             (89 + 30) / 119][Stage 117:============================================>       (101 + 18) / 119][Stage 117:===================================================> (115 + 4) / 119][Stage 117:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.926050618 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  pa rtitionIndex = 49  OR  partitionIndex = 50 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462514098 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (61 + 59) / 120][Stage 118:==============================>                      (68 + 52) / 120][Stage 118:=========================================>           (94 + 26) / 120][Stage 118:==================================================>  (114 + 6) / 120][Stage 118:====================================================>(118 + 2) / 120]                                                                                [Stage 119:==========================>                          (61 + 60) / 121][Stage 119:===============================>                     (72 + 49) / 121][Stage 119:====================================>                (84 + 37) / 121][Stage 119:=============================================>      (105 + 16) / 121][Stage 119:===================================================> (118 + 3) / 121][Stage 119:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.895228446 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  pa rtitionIndex = 25  OR  partitionIndex = 26 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365748973 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:=================================>                   (74 + 44) / 118][Stage 120:=====================================>               (83 + 35) / 118][Stage 120:========================================>            (91 + 27) / 118][Stage 120:============================================>       (101 + 17) / 118][Stage 120:====================================================>(117 + 1) / 118]                                                                                [Stage 121:================================>                    (73 + 46) / 119][Stage 121:==================================>                  (77 + 42) / 119][Stage 121:========================================>            (91 + 28) / 119][Stage 121:=============================================>      (104 + 15) / 119][Stage 121:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.367973648 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR   partitionIndex = 120  OR  partitionIndex = 121 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381082355 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (58 + 55) / 113][Stage 122:==============================>                      (66 + 47) / 113][Stage 122:=========================================>           (88 + 25) / 113][Stage 122:=================================================>   (106 + 7) / 113]                                                                                [Stage 123:==============================>                      (65 + 49) / 114][Stage 123:==================================>                  (74 + 40) / 114][Stage 123:===========================================>         (93 + 21) / 114][Stage 123:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.071194856 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR   partitionIndex = 181  OR  partitionIndex = 195 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387683966 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (59 + 54) / 113][Stage 124:==============================>                      (66 + 47) / 113][Stage 124:========================================>            (87 + 26) / 113][Stage 124:=================================================>   (105 + 8) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:===========================>                         (59 + 55) / 114][Stage 125:==============================>                      (65 + 49) / 114][Stage 125:==================================>                  (74 + 40) / 114][Stage 125:=============================================>       (98 + 16) / 114][Stage 125:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.239895081 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR   partitionIndex = 218  OR  partitionIndex = 219 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399659761 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (59 + 54) / 113][Stage 126:==================================>                  (74 + 39) / 113][Stage 126:=========================================>           (88 + 25) / 113][Stage 126:=================================================>   (105 + 8) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:===========================>                         (59 + 55) / 114][Stage 127:==============================>                      (65 + 49) / 114][Stage 127:=======================================>             (85 + 29) / 114][Stage 127:=============================================>      (100 + 14) / 114][Stage 127:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.311554101 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 41  OR  pa rtitionIndex = 55  OR  partitionIndex = 56 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418635452 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (60 + 60) / 120][Stage 128:=============================>                       (67 + 53) / 120][Stage 128:===================================>                 (81 + 39) / 120][Stage 128:===========================================>         (99 + 21) / 120][Stage 128:===================================================> (117 + 3) / 120]                                                                                [Stage 129:=============================>                       (68 + 53) / 121][Stage 129:===================================>                 (80 + 41) / 121][Stage 129:==========================================>         (100 + 21) / 121][Stage 129:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.323446759 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86  OR  partitionIndex = 98  OR  pa rtitionIndex = 99  OR  partitionIndex = 113 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399655377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 61) / 121][Stage 130:============================>                        (65 + 56) / 121][Stage 130:==================================>                  (79 + 42) / 121][Stage 130:============================================>       (104 + 17) / 121][Stage 130:===================================================> (118 + 3) / 121]                                                                                [Stage 131:==========================>                          (61 + 61) / 122][Stage 131:============================>                        (66 + 56) / 122][Stage 131:=====================================>               (86 + 36) / 122][Stage 131:=============================================>      (106 + 16) / 122][Stage 131:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.16040985 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR   partitionIndex = 150  OR  partitionIndex = 151 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402325456 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 61) / 121][Stage 132:==============================>                      (70 + 51) / 121][Stage 132:==========================================>         (100 + 21) / 121][Stage 132:==================================================>  (115 + 6) / 121]                                                                                [Stage 133:===========================>                         (63 + 59) / 122][Stage 133:=============================>                       (69 + 53) / 122][Stage 133:=======================================>             (90 + 32) / 122][Stage 133:===============================================>    (111 + 11) / 122]                                                                                Time elapsed: 3.294818575 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  part itionIndex = 15  OR  partitionIndex = 16 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 15  OR  partitionIndex = 16 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381617087 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:============================>                        (60 + 53) / 113][Stage 134:=================================>                   (72 + 41) / 113][Stage 134:==========================================>          (90 + 23) / 113][Stage 134:=================================================>   (106 + 7) / 113]                                                                                [Stage 135:===========================>                         (60 + 54) / 114][Stage 135:=================================>                   (71 + 43) / 114][Stage 135:=========================================>           (90 + 24) / 114][Stage 135:==============================================>     (102 + 12) / 114][Stage 135:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.501296516 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR   partitionIndex = 149  OR  partitionIndex = 150 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389254067 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (58 + 55) / 113][Stage 136:============================>                        (60 + 53) / 113][Stage 136:=================================>                   (72 + 41) / 113][Stage 136:=============================================>       (97 + 16) / 113][Stage 136:====================================================>(112 + 1) / 113]                                                                                [Stage 137:===========================>                         (60 + 54) / 114][Stage 137:=================================>                   (71 + 43) / 114][Stage 137:========================================>            (87 + 27) / 114][Stage 137:=================================================>   (106 + 8) / 114][Stage 137:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.253390187 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 19  OR  partitionIndex = 20 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334178903 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:======================================>              (83 + 32) / 115][Stage 138:===========================================>         (95 + 20) / 115][Stage 138:==============================================>     (103 + 12) / 115][Stage 138:====================================================>(113 + 2) / 115]                                                                                [Stage 139:========================================>            (88 + 28) / 116][Stage 139:===========================================>         (96 + 20) / 116][Stage 139:=================================================>   (108 + 8) / 116][Stage 139:===================================================> (113 + 3) / 116][Stage 139:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.556555545 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  pa rtitionIndex = 45  OR  partitionIndex = 46 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379704365 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===================================>                 (78 + 37) / 115][Stage 140:=========================================>           (89 + 26) / 115][Stage 140:==============================================>     (102 + 13) / 115][Stage 140:====================================================>(113 + 2) / 115]                                                                                [Stage 141:====================================>                (80 + 36) / 116][Stage 141:========================================>            (89 + 27) / 116][Stage 141:=============================================>       (99 + 17) / 116][Stage 141:==================================================>  (111 + 5) / 116][Stage 141:====================================================>(114 + 2) / 116][Stage 141:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.729589303 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 96  OR  pa rtitionIndex = 109  OR  partitionIndex = 110 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 109  OR  partitionIndex = 110 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.331557077 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:=====================================>               (81 + 34) / 115][Stage 142:======================================>              (84 + 31) / 115][Stage 142:==========================================>          (93 + 22) / 115][Stage 142:=================================================>   (108 + 7) / 115][Stage 142:====================================================>(113 + 2) / 115]                                                                                [Stage 143:=====================================>               (81 + 35) / 116][Stage 143:========================================>            (88 + 28) / 116][Stage 143:============================================>        (97 + 19) / 116][Stage 143:=================================================>   (109 + 7) / 116][Stage 143:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.887518732 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  pa rtitionIndex = 75  OR  partitionIndex = 76 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75  OR  partitionIndex = 76 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401403134 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 61) / 121][Stage 144:============================>                        (64 + 57) / 121][Stage 144:===================================>                 (81 + 40) / 121][Stage 144:===========================================>        (101 + 20) / 121][Stage 144:====================================================>(119 + 2) / 121]                                                                                [Stage 145:==========================>                          (61 + 61) / 122][Stage 145:============================>                        (66 + 56) / 122][Stage 145:====================================>                (83 + 39) / 122][Stage 145:===========================================>        (102 + 20) / 122][Stage 145:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.331919356 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR   partitionIndex = 207  OR  partitionIndex = 236 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 236 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369354356 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:=============================>                       (65 + 50) / 115][Stage 146:===================================>                 (78 + 37) / 115][Stage 146:==========================================>          (92 + 23) / 115][Stage 146:==================================================>  (110 + 5) / 115][Stage 146:====================================================>(114 + 1) / 115]                                                                                [Stage 147:================================>                    (72 + 44) / 116][Stage 147:========================================>            (89 + 27) / 116][Stage 147:==============================================>     (104 + 12) / 116]                                                                                Time elapsed: 2.652906847 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  pa rtitionIndex = 23  OR  partitionIndex = 24 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353427287 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==================================>                  (74 + 39) / 113][Stage 148:========================================>            (86 + 27) / 113][Stage 148:=============================================>       (96 + 17) / 113][Stage 148:=================================================>   (105 + 8) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:====================================>                (78 + 36) / 114][Stage 149:=========================================>           (90 + 24) / 114][Stage 149:=============================================>       (98 + 16) / 114][Stage 149:==============================================>     (103 + 11) / 114]                                                                                Time elapsed: 4.432914585 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  pa rtitionIndex = 107  OR  partitionIndex = 108 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387527277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (58 + 55) / 113][Stage 150:==============================>                      (64 + 49) / 113][Stage 150:======================================>              (83 + 30) / 113][Stage 150:================================================>    (104 + 9) / 113][Stage 150:===================================================> (109 + 4) / 113]                                                                                [Stage 151:===========================>                         (59 + 55) / 114][Stage 151:==============================>                      (65 + 49) / 114][Stage 151:===================================>                 (76 + 38) / 114][Stage 151:=============================================>       (98 + 16) / 114][Stage 151:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.658465671 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  pa rtitionIndex = 26  OR  partitionIndex = 38 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341115444 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:=====================================>               (82 + 33) / 115][Stage 152:=======================================>             (85 + 30) / 115][Stage 152:=============================================>      (100 + 15) / 115][Stage 152:====================================================>(113 + 2) / 115]                                                                                [Stage 153:=======================================>             (86 + 30) / 116][Stage 153:==========================================>          (94 + 22) / 116][Stage 153:==================================================>  (110 + 6) / 116][Stage 153:====================================================>(114 + 2) / 116][Stage 153:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.400987897 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 93  OR  pa rtitionIndex = 107  OR  partitionIndex = 108 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355544977 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:=====================================>               (80 + 33) / 113][Stage 154:========================================>            (87 + 26) / 113][Stage 154:==============================================>     (101 + 12) / 113][Stage 154:===================================================> (110 + 3) / 113][Stage 154:====================================================>(111 + 2) / 113]                                                                                [Stage 155:==================================>                  (75 + 39) / 114][Stage 155:========================================>            (88 + 26) / 114][Stage 155:============================================>        (96 + 18) / 114][Stage 155:==================================================>  (109 + 5) / 114][Stage 155:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.148279918 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  pa rtitionIndex = 111  OR  partitionIndex = 112 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347189789 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:====================================>                (77 + 36) / 113][Stage 156:===========================================>         (92 + 21) / 113][Stage 156:==============================================>      (99 + 14) / 113][Stage 156:=================================================>   (106 + 7) / 113]                                                                                [Stage 157:=====================================>               (80 + 34) / 114][Stage 157:===========================================>         (94 + 20) / 114][Stage 157:=============================================>      (100 + 14) / 114][Stage 157:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.902576284 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 118  OR  partitionIndex = 119 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 118  OR  partitionIndex = 119 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374170322 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:=================================>                   (73 + 42) / 115][Stage 158:========================================>            (88 + 27) / 115][Stage 158:=============================================>      (100 + 15) / 115][Stage 158:===================================================> (112 + 3) / 115]                                                                                [Stage 159:====================================>                (80 + 36) / 116][Stage 159:=============================================>       (99 + 17) / 116][Stage 159:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.793106598 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR   partitionIndex = 207  OR  partitionIndex = 208 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377614248 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (71 + 44) / 115][Stage 160:======================================>              (83 + 32) / 115][Stage 160:==============================================>     (103 + 12) / 115][Stage 160:===================================================> (111 + 4) / 115]                                                                                [Stage 161:====================================>                (80 + 36) / 116][Stage 161:===========================================>         (96 + 20) / 116][Stage 161:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.648655315 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 213  OR   partitionIndex = 227  OR  partitionIndex = 228 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343342553 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:=====================================>               (81 + 34) / 115][Stage 162:============================================>        (97 + 18) / 115][Stage 162:==================================================>  (109 + 6) / 115][Stage 162:====================================================>(114 + 1) / 115]                                                                                [Stage 163:=====================================>               (82 + 34) / 116][Stage 163:=========================================>           (91 + 25) / 116][Stage 163:===============================================>    (105 + 11) / 116][Stage 163:====================================================>(114 + 2) / 116][Stage 163:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.834992646 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR   partitionIndex = 195  OR  partitionIndex = 196 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379909543 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (59 + 54) / 113][Stage 164:==============================>                      (65 + 48) / 113][Stage 164:===================================>                 (75 + 38) / 113][Stage 164:==============================================>     (100 + 13) / 113][Stage 164:====================================================>(111 + 2) / 113]                                                                                [Stage 165:============================>                        (62 + 52) / 114][Stage 165:==================================>                  (74 + 40) / 114][Stage 165:============================================>        (96 + 18) / 114][Stage 165:===================================================> (111 + 3) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.438040848 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  pa rtitionIndex = 45  OR  partitionIndex = 46 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419437016 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 60) / 120][Stage 166:=============================>                       (67 + 53) / 120][Stage 166:=====================================>               (85 + 35) / 120][Stage 166:=============================================>      (106 + 14) / 120]                                                                                [Stage 167:============================>                        (65 + 56) / 121][Stage 167:=================================>                   (76 + 45) / 121][Stage 167:==========================================>         (100 + 21) / 121][Stage 167:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 2.914070466 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR   partitionIndex = 233  OR  partitionIndex = 234 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365243903 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==================================>                  (74 + 39) / 113][Stage 168:========================================>            (86 + 27) / 113][Stage 168:=============================================>       (97 + 16) / 113][Stage 168:=================================================>   (106 + 7) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:===================================>                 (76 + 38) / 114][Stage 169:==========================================>          (91 + 23) / 114][Stage 169:==============================================>     (103 + 11) / 114][Stage 169:===================================================> (110 + 4) / 114][Stage 169:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.006826869 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR   partitionIndex = 147  OR  partitionIndex = 148 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390147219 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:=================================>                   (72 + 43) / 115][Stage 170:========================================>            (88 + 27) / 115][Stage 170:===============================================>    (104 + 11) / 115][Stage 170:===================================================> (112 + 3) / 115][Stage 170:====================================================>(113 + 2) / 115]                                                                                [Stage 171:=================================>                   (73 + 43) / 116][Stage 171:======================================>              (84 + 32) / 116][Stage 171:============================================>        (98 + 18) / 116][Stage 171:==================================================>  (111 + 5) / 116][Stage 171:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.086011283 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR   partitionIndex = 151  OR  partitionIndex = 165 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3653578 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:================================>                    (72 + 46) / 118][Stage 172:==================================>                  (76 + 42) / 118][Stage 172:======================================>              (85 + 33) / 118][Stage 172:=============================================>      (103 + 15) / 118][Stage 172:====================================================>(117 + 1) / 118]                                                                                [Stage 173:================================>                    (73 + 46) / 119][Stage 173:=================================>                   (76 + 43) / 119][Stage 173:========================================>            (90 + 29) / 119][Stage 173:============================================>       (101 + 18) / 119][Stage 173:===================================================> (115 + 4) / 119][Stage 173:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.35220122 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  pa rtitionIndex = 79  OR  partitionIndex = 80 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399807872 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (63 + 57) / 120][Stage 174:===============================>                     (72 + 48) / 120][Stage 174:=========================================>           (94 + 26) / 120][Stage 174:=================================================>   (113 + 7) / 120]                                                                                [Stage 175:============================>                        (64 + 57) / 121][Stage 175:==================================>                  (79 + 42) / 121][Stage 175:========================================>            (92 + 29) / 121][Stage 175:===============================================>    (110 + 11) / 121]                                                                                Time elapsed: 3.231602407 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 119  OR  partitionIndex = 120 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382716314 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (59 + 54) / 113][Stage 176:==============================>                      (65 + 48) / 113][Stage 176:======================================>              (82 + 31) / 113][Stage 176:===============================================>    (103 + 10) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:===========================>                         (59 + 55) / 114][Stage 177:================================>                    (70 + 44) / 114][Stage 177:=========================================>           (89 + 25) / 114][Stage 177:=================================================>   (107 + 7) / 114][Stage 177:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.168194548 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR   partitionIndex = 142  OR  partitionIndex = 154 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391163399 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (60 + 60) / 120][Stage 178:=============================>                       (67 + 53) / 120][Stage 178:=========================================>           (93 + 27) / 120][Stage 178:==================================================>  (115 + 5) / 120][Stage 178:====================================================>(119 + 1) / 120]                                                                                [Stage 179:==========================>                          (61 + 60) / 121][Stage 179:==============================>                      (69 + 52) / 121][Stage 179:======================================>              (87 + 34) / 121][Stage 179:==============================================>     (108 + 13) / 121][Stage 179:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.438641154 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  pa rtitionIndex = 87  OR  partitionIndex = 116 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 116 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398316854 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==========================>                          (60 + 61) / 121][Stage 180:============================>                        (66 + 55) / 121][Stage 180:===================================>                 (82 + 39) / 121][Stage 180:=============================================>      (105 + 16) / 121][Stage 180:====================================================>(120 + 1) / 121]                                                                                [Stage 181:==========================>                          (61 + 61) / 122][Stage 181:==============================>                      (70 + 52) / 122][Stage 181:=====================================>               (86 + 36) / 122][Stage 181:===========================================>        (103 + 19) / 122][Stage 181:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.298187544 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  pa rtitionIndex = 34  OR  partitionIndex = 35 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399764623 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:================================>                    (70 + 45) / 115][Stage 182:====================================>                (80 + 35) / 115][Stage 182:============================================>        (97 + 18) / 115][Stage 182:===================================================> (111 + 4) / 115]                                                                                [Stage 183:================================>                    (71 + 45) / 116][Stage 183:======================================>              (85 + 31) / 116][Stage 183:============================================>        (97 + 19) / 116][Stage 183:================================================>    (107 + 9) / 116][Stage 183:===================================================> (113 + 3) / 116][Stage 183:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.05760302 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR   partitionIndex = 135  OR  partitionIndex = 136 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398692591 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=================================>                   (73 + 42) / 115][Stage 184:=========================================>           (89 + 26) / 115][Stage 184:=============================================>      (100 + 15) / 115][Stage 184:================================================>    (106 + 9) / 115]                                                                                [Stage 185:==================================>                  (75 + 41) / 116][Stage 185:=========================================>           (91 + 25) / 116][Stage 185:==============================================>     (104 + 12) / 116]                                                                                Time elapsed: 2.768170737 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 156  OR   partitionIndex = 169  OR  partitionIndex = 170 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 169  OR  partitionIndex = 170 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367486304 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==================================>                  (75 + 40) / 115][Stage 186:=========================================>           (89 + 26) / 115][Stage 186:===============================================>    (104 + 11) / 115][Stage 186:====================================================>(113 + 2) / 115]                                                                                [Stage 187:===============================>                     (69 + 47) / 116][Stage 187:=======================================>             (86 + 30) / 116][Stage 187:=============================================>      (102 + 14) / 116][Stage 187:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.738216348 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159  OR  partitionIndex = 160  OR   partitionIndex = 173  OR  partitionIndex = 174 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474528227 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (62 + 59) / 121][Stage 188:================================>                    (75 + 46) / 121][Stage 188:==========================================>         (100 + 21) / 121][Stage 188:==================================================>  (115 + 6) / 121]                                                                                [Stage 189:===========================>                         (63 + 59) / 122][Stage 189:=================================>                   (78 + 44) / 122][Stage 189:========================================>            (93 + 29) / 122][Stage 189:=============================================>      (107 + 15) / 122]                                                                                Time elapsed: 3.292376349 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 100  OR  p artitionIndex = 113  OR  partitionIndex = 114 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 113  OR  partitionIndex = 114 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359667798 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==================================>                  (74 + 39) / 113][Stage 190:=======================================>             (84 + 29) / 113][Stage 190:=============================================>       (96 + 17) / 113][Stage 190:==================================================>  (108 + 5) / 113][Stage 190:====================================================>(111 + 2) / 113]                                                                                [Stage 191:=================================>                   (73 + 41) / 114][Stage 191:========================================>            (87 + 27) / 114][Stage 191:=============================================>       (97 + 17) / 114][Stage 191:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.842564625 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 221  OR   partitionIndex = 235  OR  partitionIndex = 236 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392978939 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (61 + 60) / 121][Stage 192:===============================>                     (72 + 49) / 121][Stage 192:=======================================>             (90 + 31) / 121][Stage 192:===============================================>    (111 + 10) / 121][Stage 192:===================================================> (118 + 3) / 121]                                                                                [Stage 193:===========================>                         (64 + 58) / 122][Stage 193:=================================>                   (76 + 46) / 122][Stage 193:===========================================>         (99 + 23) / 122][Stage 193:==================================================>  (116 + 6) / 122][Stage 193:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.625515704 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  pa rtitionIndex = 110  OR  partitionIndex = 111 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 110  OR  partitionIndex = 111 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367102534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:================================>                    (73 + 45) / 118][Stage 194:===================================>                 (79 + 39) / 118][Stage 194:========================================>            (91 + 27) / 118][Stage 194:==============================================>     (106 + 12) / 118]                                                                                [Stage 195:================================>                    (73 + 46) / 119][Stage 195:==================================>                  (78 + 41) / 119][Stage 195:========================================>            (91 + 28) / 119][Stage 195:==============================================>     (107 + 12) / 119][Stage 195:==================================================>  (113 + 6) / 119][Stage 195:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.583130711 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  pa rtitionIndex = 46  OR  partitionIndex = 47 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 46  OR  partitionIndex = 47 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389906851 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (62 + 59) / 121][Stage 196:===============================>                     (73 + 48) / 121][Stage 196:==========================================>          (98 + 23) / 121][Stage 196:====================================================>(119 + 2) / 121]                                                                                [Stage 197:==========================>                          (61 + 61) / 122][Stage 197:=============================>                       (69 + 53) / 122][Stage 197:====================================>                (84 + 38) / 122][Stage 197:==============================================>     (108 + 14) / 122][Stage 197:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.170744625 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188  OR  partitionIndex = 189  OR   partitionIndex = 203  OR  partitionIndex = 204 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387942654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=================================>                   (73 + 42) / 115][Stage 198:=========================================>           (91 + 24) / 115][Stage 198:===================================================> (112 + 3) / 115]                                                                                [Stage 199:=================================>                   (73 + 43) / 116][Stage 199:========================================>            (88 + 28) / 116][Stage 199:================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.558551274 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  pa rtitionIndex = 53  OR  partitionIndex = 54 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.328445164 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:======================================>              (84 + 31) / 115][Stage 200:==========================================>          (93 + 22) / 115][Stage 200:=================================================>   (108 + 7) / 115]                                                                                [Stage 201:=======================================>             (86 + 30) / 116][Stage 201:==========================================>          (92 + 24) / 116][Stage 201:===============================================>    (105 + 11) / 116][Stage 201:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 3.573356842 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/24 19:15:31 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.34:57440) dropped. Could not find BlockManagerMaster.

real	10m22.278s
user	12m0.060s
sys	0m54.600s
