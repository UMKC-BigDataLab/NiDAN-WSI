Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/25 00:42:40 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 00:42:55 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 00:42:55 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 00:42:55 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/25 00:42:57 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 00:43:08 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170525004257-0615).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 4.334928012 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=================>                                     (37 + 78) / 115][Stage 0:======================>                                (47 + 68) / 115][Stage 0:============================>                          (60 + 55) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:=========================================>             (86 + 29) / 115][Stage 0:============================================>          (94 + 21) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:====================================================>  (110 + 5) / 115]                                                                                [Stage 1:=============================>                         (62 + 54) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:=====================================>                 (79 + 37) / 116][Stage 1:==========================================>            (89 + 27) / 116][Stage 1:==============================================>        (99 + 17) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:====================================================>  (111 + 5) / 116][Stage 1:======================================================>(114 + 2) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 13.154067915 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  126  OR  partitionIndex = 127  OR  partitionIndex = 140  OR  partitionIndex = 14 1 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 140  OR  partitionIndex = 141 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.733425924 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 2:======================>                                (47 + 66) / 113][Stage 2:========================>                              (50 + 63) / 113][Stage 2:=============================>                         (60 + 53) / 113][Stage 2:==============================>                        (62 + 51) / 113][Stage 2:=================================>                     (68 + 45) / 113][Stage 2:======================================>                (79 + 34) / 113][Stage 2:============================================>          (92 + 21) / 113][Stage 2:================================================>     (101 + 12) / 113][Stage 2:===================================================>   (106 + 7) / 113]                                                                                [Stage 3:===========================>                           (58 + 56) / 114][Stage 3:============================>                          (60 + 54) / 114][Stage 3:==============================>                        (64 + 50) / 114][Stage 3:==================================>                    (71 + 43) / 114][Stage 3:======================================>                (80 + 34) / 114][Stage 3:==============================================>        (97 + 17) / 114][Stage 3:===================================================>   (106 + 8) / 114]                                                                                Time elapsed: 4.993825138 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 14 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.614432027 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 4:================================>                      (69 + 49) / 118][Stage 4:=================================>                     (72 + 46) / 118][Stage 4:===================================>                   (76 + 42) / 118][Stage 4:=======================================>               (84 + 34) / 118][Stage 4:=========================================>             (90 + 28) / 118][Stage 4:==============================================>       (101 + 17) / 118][Stage 4:====================================================>  (113 + 5) / 118][Stage 4:======================================================>(117 + 1) / 118]                                                                                [Stage 5:=================================>                     (72 + 47) / 119][Stage 5:==================================>                    (74 + 45) / 119][Stage 5:=====================================>                 (81 + 38) / 119][Stage 5:========================================>              (87 + 32) / 119][Stage 5:=============================================>        (100 + 19) / 119][Stage 5:====================================================>  (114 + 5) / 119][Stage 5:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.274627186 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.574360667 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=================================>                     (72 + 46) / 118][Stage 6:==================================>                    (74 + 44) / 118][Stage 6:=======================================>               (84 + 34) / 118][Stage 6:=============================================>         (98 + 20) / 118][Stage 6:=================================================>    (108 + 10) / 118][Stage 6:===================================================>   (111 + 7) / 118]                                                                                [Stage 7:=================================>                     (73 + 46) / 119][Stage 7:===================================>                   (76 + 43) / 119][Stage 7:=======================================>               (85 + 34) / 119][Stage 7:=============================================>         (98 + 21) / 119][Stage 7:====================================================>  (113 + 6) / 119][Stage 7:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.080061632 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  190  OR  partitionIndex = 191  OR  partitionIndex = 204  OR  partitionIndex = 20 5 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 204  OR  partitionIndex = 205 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.570845021 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==================================>                    (71 + 42) / 113][Stage 8:=====================================>                 (78 + 35) / 113][Stage 8:=========================================>             (85 + 28) / 113][Stage 8:=============================================>         (94 + 19) / 113][Stage 8:=================================================>    (103 + 10) / 113][Stage 8:=====================================================> (110 + 3) / 113][Stage 8:======================================================>(112 + 1) / 113]                                                                                [Stage 9:======================================>                (79 + 35) / 114][Stage 9:=========================================>             (85 + 29) / 114][Stage 9:===========================================>           (90 + 24) / 114][Stage 9:===============================================>       (98 + 16) / 114][Stage 9:==================================================>    (105 + 9) / 114][Stage 9:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.036341981 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 15 5 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.60556745 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=========================>                            (56 + 64) / 120][Stage 10:=============================>                        (65 + 55) / 120][Stage 10:===================================>                  (78 + 42) / 120][Stage 10:============================================>         (99 + 21) / 120][Stage 10:===============================================>     (108 + 12) / 120][Stage 10:================================================>    (110 + 10) / 120][Stage 10:=====================================================>(118 + 2) / 120]                                                                                [Stage 11:=========================>                            (57 + 64) / 121][Stage 11:===========================>                          (61 + 60) / 121][Stage 11:================================>                     (72 + 49) / 121][Stage 11:====================================>                 (81 + 40) / 121][Stage 11:===========================================>          (97 + 24) / 121][Stage 11:=================================================>    (112 + 9) / 121][Stage 11:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.402212251 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  212  OR  partitionIndex = 213  OR  partitionIndex = 226  OR  partitionIndex = 22 7 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 226  OR  partitionIndex = 227 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.537558749 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 12:================================>                     (69 + 44) / 113][Stage 12:====================================>                 (77 + 36) / 113][Stage 12:==========================================>           (88 + 25) / 113][Stage 12:==============================================>       (98 + 15) / 113][Stage 12:==================================================>   (105 + 8) / 113][Stage 12:====================================================> (110 + 3) / 113]                                                                                [Stage 13:=====================================>                (80 + 34) / 114][Stage 13:========================================>             (85 + 29) / 114][Stage 13:=============================================>        (96 + 18) / 114][Stage 13:================================================>    (104 + 10) / 114][Stage 13:===================================================>  (108 + 6) / 114][Stage 13:=====================================================>(112 + 2) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.884034203 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105 " , 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.559744862 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (60 + 60) / 120][Stage 14:==============================>                       (67 + 53) / 120][Stage 14:====================================>                 (82 + 38) / 120][Stage 14:=========================================>            (93 + 27) / 120][Stage 14:============================================>        (101 + 19) / 120][Stage 14:==================================================>   (112 + 8) / 120][Stage 14:=====================================================>(119 + 1) / 120]                                                                                [Stage 15:===========================>                          (61 + 60) / 121][Stage 15:=============================>                        (65 + 56) / 121][Stage 15:===================================>                  (80 + 41) / 121][Stage 15:=========================================>            (94 + 27) / 121][Stage 15:================================================>    (111 + 10) / 121][Stage 15:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.050573421 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  0  OR  partitionIndex = 1  OR  partitionIndex = 15  OR  partitionIndex = 16 ", 4 ))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  partitionIndex = 15  OR  partitionIndex = 16 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.58049981 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 16:==========================>                           (60 + 61) / 121][Stage 16:=============================>                        (65 + 56) / 121][Stage 16:======================================>               (86 + 35) / 121][Stage 16:=============================================>       (104 + 17) / 121][Stage 16:====================================================> (118 + 3) / 121]                                                                                [Stage 17:===========================>                          (61 + 61) / 122][Stage 17:===============================>                      (71 + 51) / 122][Stage 17:========================================>             (91 + 31) / 122][Stage 17:==============================================>      (106 + 16) / 122][Stage 17:===============================================>     (110 + 12) / 122][Stage 17:==================================================>   (113 + 9) / 122][Stage 17:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 4.171501992 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  122  OR  partitionIndex = 123  OR  partitionIndex = 136  OR  partitionIndex = 13 7 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 136  OR  partitionIndex = 137 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.481383485 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 18:================================>                     (72 + 46) / 118][Stage 18:=================================>                    (73 + 45) / 118][Stage 18:=====================================>                (81 + 37) / 118][Stage 18:==========================================>           (92 + 26) / 118][Stage 18:============================================>        (100 + 18) / 118][Stage 18:====================================================> (114 + 4) / 118]                                                                                [Stage 19:=================================>                    (74 + 45) / 119][Stage 19:===================================>                  (78 + 41) / 119][Stage 19:========================================>             (89 + 30) / 119][Stage 19:============================================>         (98 + 21) / 119][Stage 19:===============================================>     (107 + 12) / 119][Stage 19:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 4.001243736 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 23 3 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.682571918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (60 + 60) / 120][Stage 20:===========================>                          (62 + 58) / 120][Stage 20:====================================>                 (80 + 40) / 120][Stage 20:=============================================>       (103 + 17) / 120][Stage 20:==================================================>   (112 + 8) / 120][Stage 20:=====================================================>(118 + 2) / 120]                                                                                [Stage 21:===========================>                          (62 + 59) / 121][Stage 21:=============================>                        (65 + 56) / 121][Stage 21:==================================>                   (78 + 43) / 121][Stage 21:=============================================>       (103 + 18) / 121][Stage 21:==================================================>   (114 + 7) / 121][Stage 21:=====================================================>(119 + 2) / 121][Stage 21:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.937258496 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  181  OR  partitionIndex = 182  OR  partitionIndex = 195  OR  partitionIndex = 19 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 195  OR  partitionIndex = 196 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.437443439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 22:======================================>               (81 + 34) / 115][Stage 22:=========================================>            (89 + 26) / 115][Stage 22:==================================================>   (107 + 8) / 115][Stage 22:=====================================================>(113 + 2) / 115]                                                                                [Stage 23:========================================>             (87 + 29) / 116][Stage 23:============================================>         (95 + 21) / 116][Stage 23:==================================================>   (108 + 8) / 116][Stage 23:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.258435059 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.448572135 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 24:====================================>                 (77 + 36) / 113][Stage 24:=========================================>            (87 + 26) / 113][Stage 24:==============================================>       (97 + 16) / 113][Stage 24:===============================================>      (99 + 14) / 113][Stage 24:===================================================>  (108 + 5) / 113][Stage 24:====================================================> (109 + 4) / 113][Stage 24:=====================================================>(112 + 1) / 113]                                                                                [Stage 25:====================================>                 (76 + 38) / 114][Stage 25:========================================>             (86 + 28) / 114][Stage 25:=============================================>        (96 + 18) / 114][Stage 25:===============================================>     (103 + 11) / 114][Stage 25:==================================================>   (107 + 7) / 114][Stage 25:=====================================================>(112 + 2) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.025300092 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 19 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.494954382 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (58 + 55) / 113][Stage 26:============================>                         (59 + 54) / 113][Stage 26:===============================>                      (66 + 47) / 113][Stage 26:========================================>             (84 + 29) / 113][Stage 26:===============================================>     (101 + 12) / 113]                                                                                [Stage 27:============================>                         (60 + 54) / 114][Stage 27:================================>                     (68 + 46) / 114][Stage 27:========================================>             (85 + 29) / 114][Stage 27:==================================================>   (106 + 8) / 114][Stage 27:====================================================> (110 + 4) / 114][Stage 27:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.618137993 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.453532141 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 28:=================================>                    (73 + 45) / 118][Stage 28:=====================================>                (81 + 37) / 118][Stage 28:========================================>             (89 + 29) / 118][Stage 28:============================================>        (100 + 18) / 118][Stage 28:=================================================>    (109 + 9) / 118]                                                                                [Stage 29:=================================>                    (74 + 45) / 119][Stage 29:======================================>               (84 + 35) / 119][Stage 29:===========================================>          (95 + 24) / 119][Stage 29:==================================================>   (111 + 8) / 119][Stage 29:===================================================>  (114 + 5) / 119][Stage 29:====================================================> (115 + 4) / 119][Stage 29:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.009274897 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 19 5 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.504136393 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 30:============================>                         (59 + 54) / 113][Stage 30:================================>                     (69 + 44) / 113][Stage 30:========================================>             (85 + 28) / 113][Stage 30:===============================================>     (101 + 12) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:===========================>                          (59 + 55) / 114][Stage 31:============================>                         (61 + 53) / 114][Stage 31:=================================>                    (71 + 43) / 114][Stage 31:========================================>             (85 + 29) / 114][Stage 31:==============================================>       (99 + 15) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.455799486 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  64  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108  ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.509859881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (58 + 55) / 113][Stage 32:==============================>                       (64 + 49) / 113][Stage 32:=======================================>              (83 + 30) / 113][Stage 32:===============================================>      (99 + 14) / 113][Stage 32:====================================================> (109 + 4) / 113]                                                                                [Stage 33:===========================>                          (59 + 55) / 114][Stage 33:================================>                     (69 + 45) / 114][Stage 33:==========================================>           (89 + 25) / 114][Stage 33:==============================================>      (100 + 14) / 114][Stage 33:==================================================>   (107 + 7) / 114][Stage 33:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.727216756 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  10  OR  partitionIndex = 11  OR  partitionIndex = 24  OR  partitionIndex = 25 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 24  OR  partitionIndex = 25 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.497115082 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 34:============================>                         (59 + 54) / 113][Stage 34:===============================>                      (66 + 47) / 113][Stage 34:=======================================>              (83 + 30) / 113][Stage 34:===============================================>      (99 + 14) / 113][Stage 34:=====================================================>(111 + 2) / 113]                                                                                [Stage 35:=============================>                        (62 + 52) / 114][Stage 35:================================>                     (68 + 46) / 114][Stage 35:=====================================>                (80 + 34) / 114][Stage 35:==============================================>      (101 + 13) / 114][Stage 35:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.834536106 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 17 2 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.42683102 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===================================>                  (75 + 38) / 113][Stage 36:===========================================>          (90 + 23) / 113][Stage 36:===============================================>     (101 + 12) / 113][Stage 36:==================================================>   (106 + 7) / 113][Stage 36:=====================================================>(111 + 2) / 113]                                                                                [Stage 37:=======================================>              (84 + 30) / 114][Stage 37:==============================================>      (100 + 14) / 114][Stage 37:===================================================>  (108 + 6) / 114][Stage 37:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.074200099 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 18 1 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.42087987 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 38:====================================>                 (76 + 37) / 113][Stage 38:===========================================>          (90 + 23) / 113][Stage 38:===============================================>     (101 + 12) / 113][Stage 38:=====================================================>(111 + 2) / 113]                                                                                [Stage 39:=====================================>                (80 + 34) / 114][Stage 39:===========================================>          (92 + 22) / 114][Stage 39:==============================================>       (99 + 15) / 114][Stage 39:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.925392859 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 116 " , 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 116 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.501560646 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==============================>                       (66 + 49) / 115][Stage 40:====================================>                 (78 + 37) / 115][Stage 40:=========================================>            (88 + 27) / 115][Stage 40:=================================================>    (106 + 9) / 115][Stage 40:==================================================>   (107 + 8) / 115][Stage 40:===================================================>  (109 + 6) / 115][Stage 40:=====================================================>(114 + 1) / 115]                                                                                [Stage 41:====================================>                 (78 + 38) / 116][Stage 41:=============================================>        (98 + 18) / 116][Stage 41:==================================================>   (109 + 7) / 116][Stage 41:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.53664578 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  65  OR  partitionIndex = 66  OR  partitionIndex = 79  OR  partitionIndex = 80 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 79  OR  partitionIndex = 80 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.447869828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 42:=====================================>                (79 + 34) / 113][Stage 42:===========================================>          (90 + 23) / 113][Stage 42:==============================================>      (100 + 13) / 113][Stage 42:==================================================>   (106 + 7) / 113][Stage 42:=====================================================>(111 + 2) / 113]                                                                                [Stage 43:=======================================>              (83 + 31) / 114][Stage 43:==========================================>           (90 + 24) / 114][Stage 43:==============================================>      (101 + 13) / 114][Stage 43:===================================================>  (109 + 5) / 114][Stage 43:=====================================================>(112 + 2) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.475221406 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.452884415 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 44:================================>                     (72 + 46) / 118][Stage 44:===================================>                  (77 + 41) / 118][Stage 44:=====================================>                (81 + 37) / 118][Stage 44:==========================================>           (92 + 26) / 118][Stage 44:==============================================>      (103 + 15) / 118][Stage 44:=====================================================>(117 + 1) / 118]                                                                                [Stage 45:=================================>                    (73 + 46) / 119][Stage 45:==================================>                   (76 + 43) / 119][Stage 45:=====================================>                (82 + 37) / 119][Stage 45:=========================================>            (91 + 28) / 119][Stage 45:=============================================>       (102 + 17) / 119][Stage 45:==================================================>   (112 + 7) / 119][Stage 45:====================================================> (116 + 3) / 119][Stage 45:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.561410371 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 23 2 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 232 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.435136909 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===============================>                      (68 + 47) / 115][Stage 46:======================================>               (81 + 34) / 115][Stage 46:============================================>         (95 + 20) / 115][Stage 46:==================================================>   (107 + 8) / 115][Stage 46:===================================================>  (110 + 5) / 115][Stage 46:=====================================================>(114 + 1) / 115]                                                                                [Stage 47:=================================>                    (73 + 43) / 116][Stage 47:=======================================>              (85 + 31) / 116][Stage 47:================================================>    (106 + 10) / 116][Stage 47:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.010266845 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.443211779 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=============================>                        (61 + 52) / 113][Stage 48:================================>                     (67 + 46) / 113][Stage 48:=========================================>            (86 + 27) / 113][Stage 48:==================================================>   (105 + 8) / 113]                                                                                [Stage 49:============================>                         (60 + 54) / 114][Stage 49:==================================>                   (72 + 42) / 114][Stage 49:========================================>             (85 + 29) / 114][Stage 49:=================================================>    (105 + 9) / 114][Stage 49:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.328789101 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 22 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.498074718 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (60 + 60) / 120][Stage 50:==============================>                       (67 + 53) / 120][Stage 50:=====================================>                (84 + 36) / 120][Stage 50:===============================================>     (107 + 13) / 120][Stage 50:=====================================================>(118 + 2) / 120]                                                                                [Stage 51:===========================>                          (61 + 60) / 121][Stage 51:==============================>                       (68 + 53) / 121][Stage 51:=====================================>                (85 + 36) / 121][Stage 51:===============================================>     (108 + 13) / 121][Stage 51:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.316523419 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18 ", 4 ))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.472620621 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (61 + 59) / 120][Stage 52:=================================>                    (74 + 46) / 120][Stage 52:============================================>        (101 + 19) / 120][Stage 52:=====================================================>(119 + 1) / 120]                                                                                [Stage 53:===========================>                          (61 + 60) / 121][Stage 53:===============================>                      (70 + 51) / 121][Stage 53:=======================================>              (89 + 32) / 121][Stage 53:==================================================>   (113 + 8) / 121][Stage 53:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.152236179 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 108 " , 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 108 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.417436794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 54:================================>                     (72 + 46) / 118][Stage 54:====================================>                 (80 + 38) / 118][Stage 54:========================================>             (88 + 30) / 118][Stage 54:============================================>         (98 + 20) / 118][Stage 54:===============================================>     (105 + 13) / 118]                                                                                [Stage 55:=================================>                    (74 + 45) / 119][Stage 55:===================================>                  (79 + 40) / 119][Stage 55:======================================>               (84 + 35) / 119][Stage 55:==========================================>           (93 + 26) / 119][Stage 55:============================================>        (101 + 18) / 119][Stage 55:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.750759235 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.417704201 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 56:================================>                     (72 + 46) / 118][Stage 56:=================================>                    (73 + 45) / 118][Stage 56:=======================================>              (86 + 32) / 118][Stage 56:==============================================>      (103 + 15) / 118][Stage 56:===================================================>  (113 + 5) / 118]                                                                                [Stage 57:=================================>                    (74 + 45) / 119][Stage 57:=======================================>              (86 + 33) / 119][Stage 57:==================================================>   (112 + 7) / 119][Stage 57:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.207232115 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  159  OR  partitionIndex = 160  OR  partitionIndex = 173  OR  partitionIndex = 17 4 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.445742218 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (58 + 55) / 113][Stage 58:=============================>                        (62 + 51) / 113][Stage 58:====================================>                 (77 + 36) / 113][Stage 58:===============================================>     (101 + 12) / 113][Stage 58:=====================================================>(111 + 2) / 113]                                                                                [Stage 59:===========================>                          (59 + 55) / 114][Stage 59:===============================>                      (67 + 47) / 114][Stage 59:=======================================>              (84 + 30) / 114][Stage 59:================================================>    (104 + 10) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.288476391 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 15 1 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.541706823 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (60 + 60) / 120][Stage 60:==============================>                       (68 + 52) / 120][Stage 60:=====================================>                (84 + 36) / 120][Stage 60:==============================================>      (106 + 14) / 120]                                                                                [Stage 61:===========================>                          (61 + 60) / 121][Stage 61:===============================>                      (70 + 51) / 121][Stage 61:=========================================>            (92 + 29) / 121][Stage 61:===============================================>     (109 + 12) / 121][Stage 61:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.370360687 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 14 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.442129045 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===================================>                  (75 + 40) / 115][Stage 62:==========================================>           (90 + 25) / 115][Stage 62:==============================================>      (101 + 14) / 115][Stage 62:===================================================>  (109 + 6) / 115][Stage 62:=====================================================>(114 + 1) / 115]                                                                                [Stage 63:===============================>                      (68 + 48) / 116][Stage 63:======================================>               (83 + 33) / 116][Stage 63:=============================================>        (97 + 19) / 116][Stage 63:==================================================>   (109 + 7) / 116][Stage 63:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 3.233058277 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  61  OR  partitionIndex = 62  OR  partitionIndex = 75  OR  partitionIndex = 76 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 75  OR  partitionIndex = 76 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.403617837 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 64:================================>                     (72 + 46) / 118][Stage 64:======================================>               (84 + 34) / 118][Stage 64:===========================================>          (96 + 22) / 118][Stage 64:==================================================>   (110 + 8) / 118]                                                                                [Stage 65:=================================>                    (73 + 46) / 119][Stage 65:====================================>                 (81 + 38) / 119][Stage 65:===========================================>          (96 + 23) / 119][Stage 65:================================================>    (109 + 10) / 119]                                                                                Time elapsed: 3.232904527 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  194  OR  partitionIndex = 195  OR  partitionIndex = 208  OR  partitionIndex = 20 9 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 208  OR  partitionIndex = 209 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.422484889 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=================================>                    (72 + 43) / 115][Stage 66:=========================================>            (89 + 26) / 115][Stage 66:==============================================>      (100 + 15) / 115][Stage 66:=====================================================>(113 + 2) / 115]                                                                                [Stage 67:====================================>                 (78 + 38) / 116][Stage 67:============================================>         (96 + 20) / 116][Stage 67:=================================================>    (107 + 9) / 116][Stage 67:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.881172666 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 20 2 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398193881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 68:======================================>               (80 + 33) / 113][Stage 68:===========================================>          (91 + 22) / 113][Stage 68:==============================================>      (100 + 13) / 113][Stage 68:===================================================>  (107 + 6) / 113][Stage 68:=====================================================>(111 + 2) / 113]                                                                                [Stage 69:====================================>                 (77 + 37) / 114][Stage 69:==========================================>           (90 + 24) / 114][Stage 69:=============================================>        (95 + 19) / 114][Stage 69:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.041113699 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 12 1 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.415456687 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 70:=======================================>              (82 + 31) / 113][Stage 70:==========================================>           (88 + 25) / 113][Stage 70:==============================================>       (98 + 15) / 113][Stage 70:===================================================>  (108 + 5) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:====================================>                 (77 + 37) / 114][Stage 71:===========================================>          (92 + 22) / 114][Stage 71:==============================================>      (101 + 13) / 114][Stage 71:==================================================>   (107 + 7) / 114][Stage 71:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.333661438 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  128  OR  partitionIndex = 129  OR  partitionIndex = 231  OR  partitionIndex = 23 2 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 231  OR  partitionIndex = 232 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.46408258 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==========================>                           (60 + 61) / 121][Stage 72:=============================>                        (65 + 56) / 121][Stage 72:====================================>                 (82 + 39) / 121][Stage 72:==============================================>      (106 + 15) / 121][Stage 72:=====================================================>(119 + 2) / 121]                                                                                [Stage 73:===========================>                          (61 + 61) / 122][Stage 73:===========================>                          (63 + 59) / 122][Stage 73:=====================================>                (84 + 38) / 122][Stage 73:===========================================>         (101 + 21) / 122][Stage 73:===================================================>  (116 + 6) / 122][Stage 73:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.504087858 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 16 3 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.433307354 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==========================>                           (60 + 61) / 121][Stage 74:============================>                         (63 + 58) / 121][Stage 74:==================================>                   (78 + 43) / 121][Stage 74:===========================================>          (97 + 24) / 121][Stage 74:==================================================>   (113 + 8) / 121]                                                                                [Stage 75:===========================>                          (63 + 59) / 122][Stage 75:===================================>                  (81 + 41) / 122][Stage 75:============================================>        (102 + 20) / 122][Stage 75:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.221560889 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 20 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.426869355 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (60 + 60) / 120][Stage 76:===============================>                      (69 + 51) / 120][Stage 76:=====================================>                (84 + 36) / 120][Stage 76:================================================>    (110 + 10) / 120][Stage 76:=====================================================>(118 + 2) / 120]                                                                                [Stage 77:=============================>                        (67 + 54) / 121][Stage 77:===================================>                  (80 + 41) / 121][Stage 77:===========================================>         (100 + 21) / 121][Stage 77:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.428991171 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.390988495 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 78:================================>                     (72 + 46) / 118][Stage 78:=================================>                    (73 + 45) / 118][Stage 78:======================================>               (84 + 34) / 118][Stage 78:============================================>         (97 + 21) / 118][Stage 78:===================================================>  (112 + 6) / 118][Stage 78:====================================================> (114 + 4) / 118]                                                                                [Stage 79:=================================>                    (73 + 46) / 119][Stage 79:===================================>                  (79 + 40) / 119][Stage 79:=======================================>              (87 + 32) / 119][Stage 79:============================================>        (101 + 18) / 119][Stage 79:================================================>    (108 + 11) / 119][Stage 79:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.705327819 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402484725 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 80:================================>                     (72 + 46) / 118][Stage 80:=================================>                    (74 + 44) / 118][Stage 80:======================================>               (84 + 34) / 118][Stage 80:============================================>         (98 + 20) / 118][Stage 80:====================================================> (115 + 3) / 118][Stage 80:=====================================================>(117 + 1) / 118]                                                                                [Stage 81:=================================>                    (73 + 46) / 119][Stage 81:===================================>                  (79 + 40) / 119][Stage 81:=========================================>            (91 + 28) / 119][Stage 81:==============================================>      (105 + 14) / 119][Stage 81:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.456520845 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  164  OR  partitionIndex = 165  OR  partitionIndex = 178  OR  partitionIndex = 17 9 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 178  OR  partitionIndex = 179 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.383618832 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 82:================================>                     (72 + 46) / 118][Stage 82:==================================>                   (75 + 43) / 118][Stage 82:====================================>                 (80 + 38) / 118][Stage 82:==========================================>           (92 + 26) / 118][Stage 82:============================================>        (100 + 18) / 118][Stage 82:==================================================>   (111 + 7) / 118]                                                                                [Stage 83:=================================>                    (73 + 46) / 119][Stage 83:==================================>                   (76 + 43) / 119][Stage 83:====================================>                 (80 + 39) / 119][Stage 83:=========================================>            (92 + 27) / 119][Stage 83:==============================================>      (105 + 14) / 119][Stage 83:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.628787768 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 17 3 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.422581238 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (60 + 60) / 120][Stage 84:===========================>                          (61 + 59) / 120][Stage 84:=================================>                    (74 + 46) / 120][Stage 84:============================================>        (100 + 20) / 120][Stage 84:==================================================>   (113 + 7) / 120]                                                                                [Stage 85:===========================>                          (62 + 59) / 121][Stage 85:===============================>                      (71 + 50) / 121][Stage 85:======================================>               (87 + 34) / 121][Stage 85:================================================>    (111 + 10) / 121][Stage 85:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.401665175 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 14 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.435581452 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (60 + 60) / 120][Stage 86:============================>                         (63 + 57) / 120][Stage 86:================================>                     (73 + 47) / 120][Stage 86:==========================================>           (94 + 26) / 120][Stage 86:===================================================>  (115 + 5) / 120]                                                                                [Stage 87:============================>                         (64 + 57) / 121][Stage 87:====================================>                 (81 + 40) / 121][Stage 87:===========================================>          (98 + 23) / 121][Stage 87:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.282006178 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 14 0 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.396206884 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 88:==============================>                       (65 + 50) / 115][Stage 88:====================================>                 (77 + 38) / 115][Stage 88:=========================================>            (88 + 27) / 115][Stage 88:===============================================>     (104 + 11) / 115][Stage 88:=====================================================>(114 + 1) / 115]                                                                                [Stage 89:================================>                     (69 + 47) / 116][Stage 89:=======================================>              (85 + 31) / 116][Stage 89:===============================================>     (104 + 12) / 116][Stage 89:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.659762448 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 20 4 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.370615472 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 90:====================================>                 (76 + 37) / 113][Stage 90:==========================================>           (88 + 25) / 113][Stage 90:=============================================>        (95 + 18) / 113][Stage 90:===================================================>  (107 + 6) / 113][Stage 90:=====================================================>(112 + 1) / 113]                                                                                [Stage 91:====================================>                 (76 + 38) / 114][Stage 91:=========================================>            (88 + 26) / 114][Stage 91:=============================================>        (96 + 18) / 114][Stage 91:=================================================>    (105 + 9) / 114][Stage 91:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.406920681 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.432256779 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==========================>                           (60 + 61) / 121][Stage 92:============================>                         (63 + 58) / 121][Stage 92:==================================>                   (78 + 43) / 121][Stage 92:============================================>         (99 + 22) / 121][Stage 92:====================================================> (117 + 4) / 121][Stage 92:=====================================================>(120 + 1) / 121]                                                                                [Stage 93:===========================>                          (61 + 61) / 122][Stage 93:=============================>                        (66 + 56) / 122][Stage 93:=====================================>                (85 + 37) / 122][Stage 93:============================================>        (102 + 20) / 122][Stage 93:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.487944812 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.377337789 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 94:================================>                     (72 + 46) / 118][Stage 94:==================================>                   (76 + 42) / 118][Stage 94:==========================================>           (93 + 25) / 118][Stage 94:================================================>    (107 + 11) / 118]                                                                                [Stage 95:=================================>                    (74 + 45) / 119][Stage 95:=====================================>                (82 + 37) / 119][Stage 95:===============================================>     (106 + 13) / 119][Stage 95:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.023477997 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.387171094 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===============================>                      (67 + 48) / 115][Stage 96:=======================================>              (84 + 31) / 115][Stage 96:===============================================>     (102 + 13) / 115][Stage 96:====================================================> (111 + 4) / 115][Stage 96:=====================================================>(113 + 2) / 115]                                                                                [Stage 97:================================>                     (69 + 47) / 116][Stage 97:=====================================>                (80 + 36) / 116][Stage 97:============================================>         (96 + 20) / 116][Stage 97:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.118482487 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 17 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 176 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.351229296 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=====================================>                (80 + 35) / 115][Stage 98:============================================>         (94 + 21) / 115][Stage 98:==============================================>       (99 + 16) / 115][Stage 98:=====================================================>(114 + 1) / 115]                                                                                [Stage 99:=========================================>            (89 + 27) / 116][Stage 99:=============================================>        (97 + 19) / 116][Stage 99:===================================================>  (110 + 6) / 116][Stage 99:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.813345109 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 13 5 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.388840997 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==================================>                  (74 + 41) / 115][Stage 100:=======================================>             (86 + 29) / 115][Stage 100:===============================================>    (105 + 10) / 115][Stage 100:===================================================> (112 + 3) / 115]                                                                                [Stage 101:====================================>                (79 + 37) / 116][Stage 101:=========================================>           (90 + 26) / 116][Stage 101:==============================================>     (104 + 12) / 116][Stage 101:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.985408029 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 15 9 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.444409827 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 61) / 121][Stage 102:==========================>                          (61 + 60) / 121][Stage 102:=================================>                   (76 + 45) / 121][Stage 102:=========================================>           (94 + 27) / 121][Stage 102:==================================================>  (115 + 6) / 121]                                                                                [Stage 103:===========================>                         (63 + 59) / 122][Stage 103:=================================>                   (76 + 46) / 122][Stage 103:========================================>            (94 + 28) / 122][Stage 103:=================================================>   (114 + 8) / 122][Stage 103:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.465817505 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 15 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.382419337 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 104:================================>                    (72 + 46) / 118][Stage 104:================================>                    (73 + 45) / 118][Stage 104:=====================================>               (84 + 34) / 118][Stage 104:============================================>       (100 + 18) / 118][Stage 104:====================================================>(116 + 2) / 118]                                                                                [Stage 105:==================================>                  (77 + 42) / 119][Stage 105:=====================================>               (85 + 34) / 119][Stage 105:===============================================>    (108 + 11) / 119][Stage 105:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.128032339 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.379455588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 106:================================>                    (72 + 46) / 118][Stage 106:================================>                    (73 + 45) / 118][Stage 106:====================================>                (81 + 37) / 118][Stage 106:=========================================>           (92 + 26) / 118][Stage 106:==============================================>     (105 + 13) / 118][Stage 106:====================================================>(116 + 2) / 118]                                                                                [Stage 107:=================================>                   (75 + 44) / 119][Stage 107:====================================>                (83 + 36) / 119][Stage 107:========================================>            (92 + 27) / 119][Stage 107:=============================================>      (104 + 15) / 119][Stage 107:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.537283539 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.375460656 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=====================================>               (79 + 34) / 113][Stage 108:=========================================>           (89 + 24) / 113][Stage 108:==============================================>     (101 + 12) / 113][Stage 108:==================================================>  (108 + 5) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:==================================>                  (75 + 39) / 114][Stage 109:=======================================>             (86 + 28) / 114][Stage 109:============================================>        (96 + 18) / 114][Stage 109:=================================================>   (107 + 7) / 114][Stage 109:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.089083357 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.40680442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (60 + 60) / 120][Stage 110:=============================>                       (66 + 54) / 120][Stage 110:=======================================>             (89 + 31) / 120][Stage 110:=================================================>   (113 + 7) / 120]                                                                                [Stage 111:============================>                        (64 + 57) / 121][Stage 111:=================================>                   (76 + 45) / 121][Stage 111:===========================================>         (99 + 22) / 121][Stage 111:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.049974303 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  12  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.34045972 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 112:=====================================>               (82 + 33) / 115][Stage 112:=========================================>           (89 + 26) / 115][Stage 112:===============================================>    (104 + 11) / 115][Stage 112:===================================================> (111 + 4) / 115]                                                                                [Stage 113:======================================>              (84 + 32) / 116][Stage 113:==========================================>          (94 + 22) / 116][Stage 113:===============================================>    (106 + 10) / 116][Stage 113:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.545461832 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  72  OR  partitionIndex = 73  OR  partitionIndex = 115  OR  partitionIndex = 116  ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 115  OR  partitionIndex = 116 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.347018277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 114:====================================>                (80 + 35) / 115][Stage 114:======================================>              (84 + 31) / 115][Stage 114:=============================================>       (99 + 16) / 115][Stage 114:=================================================>   (107 + 8) / 115][Stage 114:====================================================>(114 + 1) / 115]                                                                                [Stage 115:=======================================>             (86 + 30) / 116][Stage 115:=============================================>      (101 + 15) / 116][Stage 115:==================================================>  (111 + 5) / 116][Stage 115:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.947306609 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.384922058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==============================>                      (67 + 48) / 115][Stage 116:==================================>                  (75 + 40) / 115][Stage 116:=========================================>           (89 + 26) / 115][Stage 116:================================================>    (106 + 9) / 115]                                                                                [Stage 117:================================>                    (71 + 45) / 116][Stage 117:=====================================>               (83 + 33) / 116][Stage 117:==============================================>     (103 + 13) / 116][Stage 117:==================================================>  (110 + 6) / 116][Stage 117:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.149143638 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  211  OR  partitionIndex = 212  OR  partitionIndex = 225  OR  partitionIndex = 22 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 225  OR  partitionIndex = 226 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.365874685 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 118:================================>                    (73 + 45) / 118][Stage 118:===================================>                 (78 + 40) / 118][Stage 118:===========================================>         (97 + 21) / 118][Stage 118:===================================================> (114 + 4) / 118]                                                                                [Stage 119:================================>                    (74 + 45) / 119][Stage 119:=====================================>               (84 + 35) / 119][Stage 119:===========================================>         (98 + 21) / 119][Stage 119:===================================================> (116 + 3) / 119][Stage 119:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.308163722 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 13 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.365539983 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 120:================================>                    (72 + 46) / 118][Stage 120:==================================>                  (76 + 42) / 118][Stage 120:=====================================>               (83 + 35) / 118][Stage 120:============================================>       (100 + 18) / 118][Stage 120:===================================================> (114 + 4) / 118]                                                                                [Stage 121:================================>                    (73 + 46) / 119][Stage 121:==================================>                  (78 + 41) / 119][Stage 121:=======================================>             (89 + 30) / 119][Stage 121:============================================>        (99 + 20) / 119][Stage 121:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.617871966 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 11 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.339983033 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=====================================>               (82 + 33) / 115][Stage 122:==========================================>          (93 + 22) / 115][Stage 122:===============================================>    (104 + 11) / 115]                                                                                [Stage 123:======================================>              (84 + 32) / 116][Stage 123:============================================>       (100 + 16) / 116][Stage 123:=================================================>   (108 + 8) / 116][Stage 123:===================================================> (112 + 4) / 116][Stage 123:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.764513165 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.400996436 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==========================>                          (60 + 61) / 121][Stage 124:===========================>                         (63 + 58) / 121][Stage 124:==================================>                  (79 + 42) / 121][Stage 124:============================================>       (103 + 18) / 121][Stage 124:===================================================> (117 + 4) / 121]                                                                                [Stage 125:==========================>                          (61 + 61) / 122][Stage 125:============================>                        (65 + 57) / 122][Stage 125:=================================>                   (78 + 44) / 122][Stage 125:==========================================>          (97 + 25) / 122][Stage 125:==================================================>  (117 + 5) / 122][Stage 125:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.396388593 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 21 1 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.38063468 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=================================>                   (72 + 43) / 115][Stage 126:=========================================>           (91 + 24) / 115][Stage 126:==============================================>     (102 + 13) / 115][Stage 126:=================================================>   (108 + 7) / 115][Stage 126:====================================================>(114 + 1) / 115]                                                                                [Stage 127:================================>                    (71 + 45) / 116][Stage 127:=======================================>             (86 + 30) / 116][Stage 127:============================================>        (97 + 19) / 116][Stage 127:===============================================>    (105 + 11) / 116][Stage 127:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.20119324 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.380253979 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 128:================================>                    (72 + 46) / 118][Stage 128:==================================>                  (77 + 41) / 118][Stage 128:====================================>                (81 + 37) / 118][Stage 128:========================================>            (90 + 28) / 118][Stage 128:============================================>       (102 + 16) / 118]                                                                                [Stage 129:=================================>                   (75 + 44) / 119][Stage 129:====================================>                (81 + 38) / 119][Stage 129:=====================================>               (84 + 35) / 119][Stage 129:==========================================>          (96 + 23) / 119][Stage 129:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.54418163 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  124  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 16 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.405648905 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 61) / 121][Stage 130:===========================>                         (63 + 58) / 121][Stage 130:================================>                    (75 + 46) / 121][Stage 130:========================================>            (92 + 29) / 121][Stage 130:=================================================>   (114 + 7) / 121]                                                                                [Stage 131:==========================>                          (61 + 61) / 122][Stage 131:==============================>                      (70 + 52) / 122][Stage 131:=======================================>             (91 + 31) / 122][Stage 131:=================================================>   (115 + 7) / 122][Stage 131:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.411748765 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.388648679 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (59 + 54) / 113][Stage 132:==============================>                      (65 + 48) / 113][Stage 132:=====================================>               (79 + 34) / 113][Stage 132:==============================================>     (101 + 12) / 113][Stage 132:===================================================> (110 + 3) / 113]                                                                                [Stage 133:============================>                        (62 + 52) / 114][Stage 133:====================================>                (78 + 36) / 114][Stage 133:=============================================>       (98 + 16) / 114][Stage 133:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.286695682 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  5  OR  partitionIndex = 6  OR  partitionIndex = 19  OR  partitionIndex = 20 ", 4 ))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 19  OR  partitionIndex = 20 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.401382632 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==========================>                          (60 + 61) / 121][Stage 134:============================>                        (64 + 57) / 121][Stage 134:================================>                    (74 + 47) / 121][Stage 134:=============================================>      (105 + 16) / 121][Stage 134:====================================================>(119 + 2) / 121]                                                                                [Stage 135:===========================>                         (63 + 59) / 122][Stage 135:=================================>                   (77 + 45) / 122][Stage 135:========================================>            (94 + 28) / 122][Stage 135:=================================================>   (113 + 9) / 122][Stage 135:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.654589654 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  73  OR  partitionIndex = 74  OR  partitionIndex = 87  OR  partitionIndex = 88 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 87  OR  partitionIndex = 88 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.360791803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 136:================================>                    (72 + 46) / 118][Stage 136:=================================>                   (75 + 43) / 118][Stage 136:===================================>                 (80 + 38) / 118][Stage 136:=======================================>             (88 + 30) / 118][Stage 136:============================================>       (101 + 17) / 118][Stage 136:===================================================> (115 + 3) / 118]                                                                                [Stage 137:==================================>                  (77 + 42) / 119][Stage 137:====================================>                (82 + 37) / 119][Stage 137:=======================================>             (89 + 30) / 119][Stage 137:=============================================>      (105 + 14) / 119][Stage 137:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.727707699 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24 ", 4 ))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.337303438 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 138:=====================================>               (82 + 33) / 115][Stage 138:=======================================>             (86 + 29) / 115][Stage 138:=============================================>       (99 + 16) / 115][Stage 138:=================================================>   (108 + 7) / 115]                                                                                [Stage 139:======================================>              (84 + 32) / 116][Stage 139:==========================================>          (93 + 23) / 116][Stage 139:===============================================>    (106 + 10) / 116][Stage 139:==================================================>  (111 + 5) / 116][Stage 139:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.562389668 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.394202069 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (59 + 54) / 113][Stage 140:=================================>                   (72 + 41) / 113][Stage 140:==============================================>     (100 + 13) / 113][Stage 140:==================================================>  (108 + 5) / 113][Stage 140:====================================================>(112 + 1) / 113]                                                                                [Stage 141:===========================>                         (59 + 55) / 114][Stage 141:=============================>                       (64 + 50) / 114][Stage 141:=====================================>               (80 + 34) / 114][Stage 141:==============================================>      (99 + 15) / 114][Stage 141:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.450004598 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20 ", 4 ))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.395245171 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (60 + 60) / 120][Stage 142:=============================>                       (67 + 53) / 120][Stage 142:================================>                    (74 + 46) / 120][Stage 142:===========================================>         (98 + 22) / 120][Stage 142:===================================================> (117 + 3) / 120]                                                                                [Stage 143:==========================>                          (61 + 60) / 121][Stage 143:============================>                        (65 + 56) / 121][Stage 143:===================================>                 (80 + 41) / 121][Stage 143:===========================================>        (101 + 20) / 121][Stage 143:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.319723922 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  39  OR  partitionIndex = 40  OR  partitionIndex = 53  OR  partitionIndex = 54 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 53  OR  partitionIndex = 54 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.464418354 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (62 + 58) / 120][Stage 144:==============================>                      (69 + 51) / 120][Stage 144:=========================================>           (93 + 27) / 120][Stage 144:=================================================>   (111 + 9) / 120]                                                                                [Stage 145:============================>                        (64 + 57) / 121][Stage 145:===============================>                     (73 + 48) / 121][Stage 145:==========================================>          (96 + 25) / 121][Stage 145:===================================================> (118 + 3) / 121][Stage 145:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.304251272 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.396648952 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (61 + 60) / 121][Stage 146:================================>                    (75 + 46) / 121][Stage 146:=========================================>           (95 + 26) / 121][Stage 146:===============================================>    (110 + 11) / 121]                                                                                [Stage 147:============================>                        (65 + 57) / 122][Stage 147:================================>                    (74 + 48) / 122][Stage 147:==========================================>         (100 + 22) / 122][Stage 147:=================================================>   (115 + 7) / 122][Stage 147:====================================================>(120 + 2) / 122][Stage 147:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.655279633 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.339707741 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 148:>                                                      (0 + 0) / 115][Stage 148:======================================>              (84 + 31) / 115][Stage 148:=========================================>           (91 + 24) / 115][Stage 148:================================================>    (106 + 9) / 115]                                                                                [Stage 149:======================================>              (84 + 32) / 116][Stage 149:=============================================>       (99 + 17) / 116][Stage 149:=================================================>   (108 + 8) / 116][Stage 149:===================================================> (112 + 4) / 116][Stage 149:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.100099781 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.368199154 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 150:================================>                    (72 + 46) / 118][Stage 150:====================================>                (81 + 37) / 118][Stage 150:============================================>        (99 + 19) / 118][Stage 150:=================================================>   (111 + 7) / 118][Stage 150:====================================================>(117 + 1) / 118]                                                                                [Stage 151:================================>                    (73 + 46) / 119][Stage 151:===================================>                 (80 + 39) / 119][Stage 151:===========================================>         (97 + 22) / 119][Stage 151:=================================================>   (111 + 8) / 119][Stage 151:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.252972506 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 23 4 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.354253157 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 152:======================================>              (83 + 30) / 113][Stage 152:===========================================>         (93 + 20) / 113][Stage 152:==============================================>     (102 + 11) / 113][Stage 152:==================================================>  (107 + 6) / 113][Stage 152:====================================================>(112 + 1) / 113]                                                                                [Stage 153:=====================================>               (81 + 33) / 114][Stage 153:==========================================>          (91 + 23) / 114][Stage 153:==============================================>     (102 + 12) / 114][Stage 153:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.068032229 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  35  OR  partitionIndex = 36  OR  partitionIndex = 49  OR  partitionIndex = 50 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 49  OR  partitionIndex = 50 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.380676526 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 154:=============================>                       (63 + 50) / 113][Stage 154:=================================>                   (72 + 41) / 113][Stage 154:===========================================>         (92 + 21) / 113][Stage 154:===============================================>    (103 + 10) / 113][Stage 154:====================================================>(112 + 1) / 113]                                                                                [Stage 155:===========================>                         (59 + 55) / 114][Stage 155:===============================>                     (68 + 46) / 114][Stage 155:=======================================>             (84 + 30) / 114][Stage 155:==============================================>     (102 + 12) / 114][Stage 155:===================================================> (110 + 4) / 114][Stage 155:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.772905602 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 17 0 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.385855458 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==========================>                          (61 + 59) / 120][Stage 156:==============================>                      (70 + 50) / 120][Stage 156:=======================================>             (89 + 31) / 120][Stage 156:===============================================>    (109 + 11) / 120][Stage 156:====================================================>(119 + 1) / 120]                                                                                [Stage 157:==========================>                          (61 + 60) / 121][Stage 157:==============================>                      (69 + 52) / 121][Stage 157:========================================>            (92 + 29) / 121][Stage 157:===============================================>    (111 + 10) / 121][Stage 157:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.31761021 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  184  OR  partitionIndex = 185  OR  partitionIndex = 227  OR  partitionIndex = 22 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 227  OR  partitionIndex = 228 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.35286397 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==================================>                  (74 + 39) / 113][Stage 158:=========================================>           (89 + 24) / 113][Stage 158:==============================================>      (99 + 14) / 113][Stage 158:===================================================> (109 + 4) / 113]                                                                                [Stage 159:=======================================>             (86 + 28) / 114][Stage 159:==========================================>          (91 + 23) / 114][Stage 159:==============================================>     (103 + 11) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.060321404 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 16 2 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.403003041 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (60 + 60) / 120][Stage 160:============================>                        (65 + 55) / 120][Stage 160:==================================>                  (79 + 41) / 120][Stage 160:===========================================>        (100 + 20) / 120][Stage 160:===================================================> (117 + 3) / 120]                                                                                [Stage 161:==========================>                          (61 + 60) / 121][Stage 161:=============================>                       (67 + 54) / 121][Stage 161:=======================================>             (90 + 31) / 121][Stage 161:=================================================>   (113 + 8) / 121][Stage 161:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.470702235 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  160  OR  partitionIndex = 161  OR  partitionIndex = 174  OR  partitionIndex = 17 5 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 174  OR  partitionIndex = 175 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.35348757 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==================================>                  (74 + 39) / 113][Stage 162:=========================================>           (88 + 25) / 113][Stage 162:=============================================>       (96 + 17) / 113][Stage 162:================================================>    (104 + 9) / 113][Stage 162:====================================================>(112 + 1) / 113]                                                                                [Stage 163:==================================>                  (74 + 40) / 114][Stage 163:=========================================>           (89 + 25) / 114][Stage 163:==============================================>      (99 + 15) / 114][Stage 163:==================================================>  (109 + 5) / 114][Stage 163:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.972169235 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 21 0 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398920828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (63 + 57) / 120][Stage 164:=================================>                   (75 + 45) / 120][Stage 164:==========================================>          (97 + 23) / 120][Stage 164:===============================================>    (109 + 11) / 120][Stage 164:====================================================>(119 + 1) / 120]                                                                                [Stage 165:===========================>                         (62 + 59) / 121][Stage 165:==============================>                      (70 + 51) / 121][Stage 165:=====================================>               (86 + 35) / 121][Stage 165:=============================================>      (107 + 14) / 121][Stage 165:===================================================> (118 + 3) / 121][Stage 165:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.634674347 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 17 4 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.328687823 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 166:=======================================>             (85 + 30) / 115][Stage 166:=============================================>      (100 + 15) / 115][Stage 166:===================================================> (111 + 4) / 115]                                                                                [Stage 167:======================================>              (84 + 32) / 116][Stage 167:=============================================>       (99 + 17) / 116][Stage 167:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.61029119 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 17 4 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.38088894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (59 + 54) / 113][Stage 168:==============================>                      (66 + 47) / 113][Stage 168:=======================================>             (84 + 29) / 113][Stage 168:=================================================>   (105 + 8) / 113]                                                                                [Stage 169:============================>                        (61 + 53) / 114][Stage 169:=================================>                   (71 + 43) / 114][Stage 169:==========================================>          (92 + 22) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.631503541 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110  ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.407888249 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (62 + 58) / 120][Stage 170:===============================>                     (71 + 49) / 120][Stage 170:=====================================>               (86 + 34) / 120][Stage 170:===============================================>    (109 + 11) / 120]                                                                                [Stage 171:===========================>                         (63 + 58) / 121][Stage 171:===============================>                     (71 + 50) / 121][Stage 171:========================================>            (92 + 29) / 121][Stage 171:=================================================>   (113 + 8) / 121][Stage 171:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.308992386 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  192  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 23 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.466596581 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (59 + 54) / 113][Stage 172:==============================>                      (65 + 48) / 113][Stage 172:====================================>                (78 + 35) / 113][Stage 172:==========================================>          (91 + 22) / 113][Stage 172:================================================>    (104 + 9) / 113]                                                                                [Stage 173:============================>                        (61 + 53) / 114][Stage 173:================================>                    (69 + 45) / 114][Stage 173:========================================>            (87 + 27) / 114][Stage 173:================================================>    (105 + 9) / 114][Stage 173:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.355357598 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 17 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 178 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.391082923 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (58 + 55) / 113][Stage 174:==============================>                      (65 + 48) / 113][Stage 174:==================================>                  (73 + 40) / 113][Stage 174:==========================================>          (90 + 23) / 113][Stage 174:==================================================>  (107 + 6) / 113]                                                                                [Stage 175:===========================>                         (60 + 54) / 114][Stage 175:==============================>                      (66 + 48) / 114][Stage 175:==========================================>          (91 + 23) / 114][Stage 175:==================================================>  (108 + 6) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.363734771 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  152  OR  partitionIndex = 153  OR  partitionIndex = 166  OR  partitionIndex = 16 7 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 166  OR  partitionIndex = 167 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.330184282 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=======================================>             (86 + 29) / 115][Stage 176:==========================================>          (93 + 22) / 115][Stage 176:===================================================> (111 + 4) / 115][Stage 176:====================================================>(114 + 1) / 115]                                                                                [Stage 177:======================================>              (84 + 32) / 116][Stage 177:========================================>            (88 + 28) / 116][Stage 177:===============================================>    (105 + 11) / 116][Stage 177:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.710115436 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.380923014 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (59 + 54) / 113][Stage 178:=================================>                   (71 + 42) / 113][Stage 178:==========================================>          (91 + 22) / 113][Stage 178:==================================================>  (107 + 6) / 113][Stage 178:====================================================>(112 + 1) / 113]                                                                                [Stage 179:===========================>                         (60 + 54) / 114][Stage 179:==============================>                      (66 + 48) / 114][Stage 179:=================================>                   (71 + 43) / 114][Stage 179:=======================================>             (84 + 30) / 114][Stage 179:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.475398325 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  104  OR  partitionIndex = 105  OR  partitionIndex = 118  OR  partitionIndex = 11 9 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 118  OR  partitionIndex = 119 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.35325392 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=================================>                   (72 + 41) / 113][Stage 180:=========================================>           (89 + 24) / 113][Stage 180:==============================================>      (99 + 14) / 113][Stage 180:=================================================>   (106 + 7) / 113][Stage 180:====================================================>(111 + 2) / 113]                                                                                [Stage 181:=======================================>             (85 + 29) / 114][Stage 181:============================================>        (95 + 19) / 114][Stage 181:==============================================>     (103 + 11) / 114][Stage 181:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.07780418 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  36  OR  partitionIndex = 37  OR  partitionIndex = 50  OR  partitionIndex = 51 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 50  OR  partitionIndex = 51 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.369524062 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 182:=======================================>             (85 + 30) / 115][Stage 182:===========================================>         (95 + 20) / 115][Stage 182:=================================================>   (107 + 8) / 115][Stage 182:===================================================> (111 + 4) / 115][Stage 182:====================================================>(114 + 1) / 115]                                                                                [Stage 183:========================================>            (88 + 28) / 116][Stage 183:===========================================>         (96 + 20) / 116][Stage 183:===============================================>    (106 + 10) / 116][Stage 183:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.234084861 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 20 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.378295144 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=================================>                   (72 + 43) / 115][Stage 184:=========================================>           (90 + 25) / 115][Stage 184:===============================================>    (104 + 11) / 115][Stage 184:===================================================> (111 + 4) / 115]                                                                                [Stage 185:================================>                    (72 + 44) / 116][Stage 185:=========================================>           (90 + 26) / 116][Stage 185:===================================================> (113 + 3) / 116][Stage 185:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.962942284 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 21 4 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.333552867 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 186:=======================================>             (85 + 30) / 115][Stage 186:============================================>        (96 + 19) / 115][Stage 186:================================================>    (106 + 9) / 115][Stage 186:====================================================>(114 + 1) / 115]                                                                                [Stage 187:=====================================>               (83 + 33) / 116][Stage 187:==========================================>          (92 + 24) / 116][Stage 187:==============================================>     (103 + 13) / 116][Stage 187:===================================================> (113 + 3) / 116][Stage 187:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.828954809 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  192  OR  partitionIndex = 193  OR  partitionIndex = 235  OR  partitionIndex = 23 6 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 235  OR  partitionIndex = 236 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398325014 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (59 + 54) / 113][Stage 188:==============================>                      (64 + 49) / 113][Stage 188:======================================>              (82 + 31) / 113][Stage 188:===============================================>    (103 + 10) / 113][Stage 188:===================================================> (110 + 3) / 113]                                                                                [Stage 189:===========================>                         (59 + 55) / 114][Stage 189:==============================>                      (66 + 48) / 114][Stage 189:======================================>              (82 + 32) / 114][Stage 189:==============================================>     (102 + 12) / 114][Stage 189:===================================================> (111 + 3) / 114][Stage 189:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.387471351 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34 ",  4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.374940293 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==============================>                      (67 + 48) / 115][Stage 190:==================================>                  (75 + 40) / 115][Stage 190:============================================>        (97 + 18) / 115][Stage 190:==================================================>  (109 + 6) / 115][Stage 190:====================================================>(113 + 2) / 115]                                                                                [Stage 191:================================>                    (72 + 44) / 116][Stage 191:======================================>              (85 + 31) / 116][Stage 191:==========================================>          (94 + 22) / 116][Stage 191:===============================================>    (106 + 10) / 116][Stage 191:===================================================> (113 + 3) / 116][Stage 191:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.64880155 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 23 2 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.364562725 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 192:================================>                    (72 + 46) / 118][Stage 192:==================================>                  (77 + 41) / 118][Stage 192:======================================>              (85 + 33) / 118][Stage 192:=============================================>      (103 + 15) / 118][Stage 192:===================================================> (114 + 4) / 118]                                                                                [Stage 193:==================================>                  (77 + 42) / 119][Stage 193:=====================================>               (85 + 34) / 119][Stage 193:===========================================>        (100 + 19) / 119][Stage 193:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.401538267 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 18 0 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.478507818 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 60) / 120][Stage 194:===========================>                         (63 + 57) / 120][Stage 194:=================================>                   (75 + 45) / 120][Stage 194:===========================================>        (101 + 19) / 120][Stage 194:===================================================> (117 + 3) / 120]                                                                                [Stage 195:==========================>                          (61 + 60) / 121][Stage 195:=============================>                       (67 + 54) / 121][Stage 195:=================================>                   (77 + 44) / 121][Stage 195:===========================================>        (102 + 19) / 121][Stage 195:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.279524102 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 20 3 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.372983384 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (59 + 54) / 113][Stage 196:===============================>                     (67 + 46) / 113][Stage 196:========================================>            (86 + 27) / 113][Stage 196:=================================================>   (105 + 8) / 113]                                                                                [Stage 197:============================>                        (61 + 53) / 114][Stage 197:===============================>                     (68 + 46) / 114][Stage 197:=========================================>           (89 + 25) / 114][Stage 197:===============================================>    (104 + 10) / 114][Stage 197:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.242194097 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  96  OR  partitionIndex = 97  OR  partitionIndex = 110  OR  partitionIndex = 111  ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 110  OR  partitionIndex = 111 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.34463117 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=====================================>               (82 + 33) / 115][Stage 198:=========================================>           (89 + 26) / 115][Stage 198:=============================================>      (101 + 14) / 115][Stage 198:===================================================> (111 + 4) / 115]                                                                                [Stage 199:======================================>              (84 + 32) / 116][Stage 199:==========================================>          (92 + 24) / 116][Stage 199:=================================================>   (109 + 7) / 116][Stage 199:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.839315209 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex =  124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 16 8 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 168 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.370080715 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=============================>                       (64 + 51) / 115][Stage 200:================================>                    (71 + 44) / 115][Stage 200:======================================>              (84 + 31) / 115][Stage 200:===============================================>    (104 + 11) / 115]                                                                                [Stage 201:=================================>                   (74 + 42) / 116][Stage 201:========================================>            (89 + 27) / 116][Stage 201:============================================>       (100 + 16) / 116][Stage 201:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.664256692 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/25 00:52:55 ERROR scheduler.LiveListenerBus: SparkListenerBus has already stopped! Dropping event SparkListenerExecutorMetricsUpdate(11,WrappedArray())
17/05/25 00:52:55 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.34:47224) dropped. RpcEnv already stopped.
17/05/25 00:52:55 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.36:49850) dropped. RpcEnv already stopped.
17/05/25 00:52:55 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.34:47224) dropped. RpcEnv already stopped.

real	10m18.317s
user	11m54.756s
sys	0m52.584s
