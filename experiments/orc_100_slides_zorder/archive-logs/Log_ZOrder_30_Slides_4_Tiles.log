Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 18:54:36 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:54:51 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:54:51 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:54:51 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 18:54:53 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:55:04 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524185453-0582).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.415161285 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:================>                                      (34 + 81) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:=====================================>                 (79 + 36) / 115][Stage 0:============================================>          (92 + 23) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:=====================================================> (111 + 4) / 115][Stage 0:=====================================================> (112 + 3) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:===============================>                       (66 + 50) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:=======================================>               (84 + 32) / 116][Stage 1:=============================================>         (97 + 19) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.666163028 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=233", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=233,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.877175483 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:>                                                        (0 + 0) / 120][Stage 2:==========================>                            (57 + 63) / 120][Stage 2:==========================>                            (58 + 62) / 120][Stage 2:============================>                          (62 + 58) / 120][Stage 2:=============================>                         (65 + 55) / 120][Stage 2:===================================>                   (78 + 42) / 120][Stage 2:================================================>     (107 + 13) / 120][Stage 2:======================================================>(118 + 2) / 120]                                                                                [Stage 3:==========================>                            (59 + 62) / 121][Stage 3:===========================>                           (61 + 60) / 121][Stage 3:============================>                          (63 + 58) / 121][Stage 3:==============================>                        (66 + 55) / 121][Stage 3:===================================>                   (77 + 44) / 121][Stage 3:==========================================>            (94 + 27) / 121][Stage 3:====================================================>  (115 + 6) / 121][Stage 3:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.797449931 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.753925902 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (60 + 61) / 121][Stage 4:===========================>                           (61 + 60) / 121][Stage 4:==============================>                        (66 + 55) / 121][Stage 4:=================================>                     (73 + 48) / 121][Stage 4:========================================>              (88 + 33) / 121][Stage 4:==============================================>       (104 + 17) / 121][Stage 4:====================================================>  (115 + 6) / 121][Stage 4:======================================================>(120 + 1) / 121]                                                                                [Stage 5:===========================>                           (60 + 62) / 122][Stage 5:===========================>                           (62 + 60) / 122][Stage 5:================================>                      (71 + 51) / 122][Stage 5:===================================>                   (79 + 43) / 122][Stage 5:===========================================>           (97 + 25) / 122][Stage 5:================================================>     (110 + 12) / 122][Stage 5:======================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.754382265 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=66", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=66,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.667704263 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (56 + 57) / 113][Stage 6:============================>                          (58 + 55) / 113][Stage 6:==================================>                    (70 + 43) / 113][Stage 6:======================================>                (80 + 33) / 113][Stage 6:==========================================>            (87 + 26) / 113][Stage 6:===================================================>   (106 + 7) / 113]                                                                                [Stage 7:============================>                          (60 + 54) / 114][Stage 7:==============================>                        (64 + 50) / 114][Stage 7:====================================>                  (76 + 38) / 114][Stage 7:============================================>          (92 + 22) / 114][Stage 7:===============================================>      (101 + 13) / 114][Stage 7:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.119435177 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=143", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=143,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.795309705 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (60 + 61) / 121][Stage 8:============================>                          (62 + 59) / 121][Stage 8:==================================>                    (75 + 46) / 121][Stage 8:======================================>                (85 + 36) / 121][Stage 8:==============================================>       (104 + 17) / 121][Stage 8:===================================================>   (114 + 7) / 121][Stage 8:======================================================>(120 + 1) / 121]                                                                                [Stage 9:===========================>                           (62 + 60) / 122][Stage 9:=================================>                     (74 + 48) / 122][Stage 9:========================================>              (90 + 32) / 122][Stage 9:==============================================>       (104 + 18) / 122][Stage 9:====================================================>  (116 + 6) / 122][Stage 9:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.395764468 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.622685638 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (58 + 55) / 113][Stage 10:==============================>                       (63 + 50) / 113][Stage 10:=====================================>                (78 + 35) / 113][Stage 10:===========================================>          (91 + 22) / 113][Stage 10:==================================================>   (105 + 8) / 113]                                                                                [Stage 11:============================>                         (61 + 53) / 114][Stage 11:==================================>                   (72 + 42) / 114][Stage 11:=========================================>            (88 + 26) / 114][Stage 11:================================================>    (104 + 10) / 114][Stage 11:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.853592267 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=183,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.536797488 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:>                                                       (0 + 0) / 115][Stage 12:==============================>                       (66 + 49) / 115][Stage 12:================================>                     (69 + 46) / 115][Stage 12:==========================================>           (91 + 24) / 115][Stage 12:==============================================>      (101 + 14) / 115][Stage 12:====================================================> (111 + 4) / 115][Stage 12:=====================================================>(114 + 1) / 115]                                                                                [Stage 13:===============================>                      (67 + 49) / 116][Stage 13:=====================================>                (81 + 35) / 116][Stage 13:===========================================>          (94 + 22) / 116][Stage 13:===============================================>     (103 + 13) / 116][Stage 13:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.344842707 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=16", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=16,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443912416 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===================================>                  (76 + 39) / 115][Stage 14:======================================>               (82 + 33) / 115][Stage 14:=========================================>            (89 + 26) / 115][Stage 14:==============================================>       (98 + 17) / 115][Stage 14:==============================================>      (101 + 14) / 115][Stage 14:================================================>    (105 + 10) / 115][Stage 14:====================================================> (111 + 4) / 115]                                                                                [Stage 15:======================================>               (82 + 34) / 116][Stage 15:=========================================>            (89 + 27) / 116][Stage 15:==============================================>       (99 + 17) / 116][Stage 15:===============================================>     (103 + 13) / 116][Stage 15:===============================================>     (105 + 11) / 116][Stage 15:==================================================>   (109 + 7) / 116][Stage 15:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.626056744 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=105", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=105,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.514788957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:============================>                         (59 + 54) / 113][Stage 16:=================================>                    (70 + 43) / 113][Stage 16:======================================>               (81 + 32) / 113][Stage 16:================================================>    (103 + 10) / 113][Stage 16:====================================================> (110 + 3) / 113]                                                                                [Stage 17:============================>                         (60 + 54) / 114][Stage 17:=================================>                    (70 + 44) / 114][Stage 17:============================================>         (93 + 21) / 114][Stage 17:==============================================>      (101 + 13) / 114][Stage 17:==================================================>   (107 + 7) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.860316787 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=11", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=11,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.574650038 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (60 + 60) / 120][Stage 18:===============================>                      (71 + 49) / 120][Stage 18:========================================>             (89 + 31) / 120][Stage 18:==============================================>      (106 + 14) / 120][Stage 18:=====================================================>(119 + 1) / 120]                                                                                [Stage 19:===========================>                          (61 + 60) / 121][Stage 19:============================>                         (63 + 58) / 121][Stage 19:===================================>                  (79 + 42) / 121][Stage 19:=========================================>            (94 + 27) / 121][Stage 19:==============================================>      (106 + 15) / 121][Stage 19:====================================================> (117 + 4) / 121][Stage 19:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.727637077 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=131", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=131,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.54139779 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:============================>                         (59 + 54) / 113][Stage 20:==============================>                       (63 + 50) / 113][Stage 20:=======================================>              (83 + 30) / 113][Stage 20:=============================================>        (95 + 18) / 113][Stage 20:==================================================>   (105 + 8) / 113][Stage 20:===================================================>  (108 + 5) / 113][Stage 20:=====================================================>(111 + 2) / 113]                                                                                [Stage 21:===========================>                          (59 + 55) / 114][Stage 21:=============================>                        (62 + 52) / 114][Stage 21:=======================================>              (84 + 30) / 114][Stage 21:=============================================>        (97 + 17) / 114][Stage 21:==================================================>   (106 + 8) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.237516889 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499202602 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:============================>                         (59 + 54) / 113][Stage 22:================================>                     (67 + 46) / 113][Stage 22:========================================>             (84 + 29) / 113][Stage 22:==============================================>       (97 + 16) / 113][Stage 22:==================================================>   (106 + 7) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:=============================>                        (62 + 52) / 114][Stage 23:==================================>                   (73 + 41) / 114][Stage 23:=========================================>            (88 + 26) / 114][Stage 23:==============================================>       (99 + 15) / 114][Stage 23:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.969264554 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.500519849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (57 + 56) / 113][Stage 24:==============================>                       (64 + 49) / 113][Stage 24:===================================>                  (75 + 38) / 113][Stage 24:=========================================>            (87 + 26) / 113][Stage 24:===============================================>     (102 + 11) / 113][Stage 24:===================================================>  (108 + 5) / 113][Stage 24:=====================================================>(112 + 1) / 113]                                                                                [Stage 25:============================>                         (60 + 54) / 114][Stage 25:================================>                     (68 + 46) / 114][Stage 25:====================================>                 (78 + 36) / 114][Stage 25:=============================================>        (96 + 18) / 114][Stage 25:====================================================> (111 + 3) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.009792631 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=191", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=191,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438595723 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:==================================>                   (73 + 40) / 113][Stage 26:=========================================>            (86 + 27) / 113][Stage 26:===========================================>          (92 + 21) / 113][Stage 26:===============================================>      (99 + 14) / 113][Stage 26:==================================================>   (105 + 8) / 113][Stage 26:====================================================> (110 + 3) / 113][Stage 26:=====================================================>(112 + 1) / 113]                                                                                [Stage 27:=====================================>                (80 + 34) / 114][Stage 27:===========================================>          (92 + 22) / 114][Stage 27:===============================================>     (103 + 11) / 114][Stage 27:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.697147863 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433771796 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:======================================>               (81 + 34) / 115][Stage 28:======================================>               (83 + 32) / 115][Stage 28:==========================================>           (90 + 25) / 115][Stage 28:==============================================>       (99 + 16) / 115][Stage 28:=================================================>    (106 + 9) / 115][Stage 28:===================================================>  (110 + 5) / 115][Stage 28:====================================================> (112 + 3) / 115]                                                                                [Stage 29:=====================================>                (81 + 35) / 116][Stage 29:========================================>             (88 + 28) / 116][Stage 29:==============================================>      (101 + 15) / 116][Stage 29:==================================================>   (109 + 7) / 116][Stage 29:====================================================> (112 + 4) / 116][Stage 29:====================================================> (113 + 3) / 116][Stage 29:=====================================================>(114 + 2) / 116][Stage 29:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.017143643 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.525880086 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:=============================>                        (66 + 55) / 121][Stage 30:=====================================>                (83 + 38) / 121][Stage 30:=============================================>       (104 + 17) / 121][Stage 30:================================================>    (111 + 10) / 121]                                                                                [Stage 31:===========================>                          (61 + 61) / 122][Stage 31:=================================>                    (75 + 47) / 122][Stage 31:=========================================>            (94 + 28) / 122][Stage 31:==================================================>   (115 + 7) / 122][Stage 31:=====================================================>(120 + 2) / 122][Stage 31:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.892256587 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=106", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=106,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427669174 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:====================================>                 (77 + 36) / 113][Stage 32:===========================================>          (90 + 23) / 113][Stage 32:===============================================>     (102 + 11) / 113][Stage 32:===================================================>  (108 + 5) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:====================================>                 (76 + 38) / 114][Stage 33:========================================>             (86 + 28) / 114][Stage 33:=============================================>        (96 + 18) / 114][Stage 33:==================================================>   (106 + 8) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.100005806 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=94", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=94,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.545019933 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=============================>                        (62 + 51) / 113][Stage 34:==================================>                   (72 + 41) / 113][Stage 34:==========================================>           (89 + 24) / 113][Stage 34:==================================================>   (105 + 8) / 113][Stage 34:===================================================>  (108 + 5) / 113][Stage 34:====================================================> (110 + 3) / 113]                                                                                [Stage 35:=============================>                        (62 + 52) / 114][Stage 35:======================================>               (81 + 33) / 114][Stage 35:=============================================>        (95 + 19) / 114][Stage 35:==================================================>   (107 + 7) / 114][Stage 35:====================================================> (110 + 4) / 114][Stage 35:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.532986426 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.577290299 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===================================>                  (76 + 39) / 115][Stage 36:===========================================>          (92 + 23) / 115][Stage 36:================================================>    (105 + 10) / 115][Stage 36:====================================================> (112 + 3) / 115]                                                                                [Stage 37:===============================>                      (68 + 48) / 116][Stage 37:======================================>               (83 + 33) / 116][Stage 37:==============================================>      (102 + 14) / 116][Stage 37:===================================================>  (110 + 6) / 116][Stage 37:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.922557016 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460563521 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (72 + 46) / 118][Stage 38:===================================>                  (77 + 41) / 118][Stage 38:=========================================>            (91 + 27) / 118][Stage 38:==================================================>   (111 + 7) / 118][Stage 38:=====================================================>(117 + 1) / 118]                                                                                [Stage 39:=================================>                    (74 + 45) / 119][Stage 39:====================================>                 (81 + 38) / 119][Stage 39:==========================================>           (93 + 26) / 119][Stage 39:==================================================>   (111 + 8) / 119][Stage 39:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.725517567 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=175,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.470912651 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:============================>                         (59 + 54) / 113][Stage 40:=============================>                        (61 + 52) / 113][Stage 40:======================================>               (80 + 33) / 113][Stage 40:================================================>    (103 + 10) / 113][Stage 40:====================================================> (110 + 3) / 113]                                                                                [Stage 41:===========================>                          (59 + 55) / 114][Stage 41:==============================>                       (65 + 49) / 114][Stage 41:=======================================>              (84 + 30) / 114][Stage 41:============================================>         (94 + 20) / 114][Stage 41:===============================================>     (103 + 11) / 114][Stage 41:==================================================>   (106 + 8) / 114][Stage 41:===================================================>  (109 + 5) / 114][Stage 41:====================================================> (110 + 4) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.948677175 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.537858191 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:============================>                         (59 + 54) / 113][Stage 42:================================>                     (68 + 45) / 113][Stage 42:=========================================>            (86 + 27) / 113][Stage 42:================================================>    (103 + 10) / 113][Stage 42:===================================================>  (107 + 6) / 113]                                                                                [Stage 43:===========================>                          (59 + 55) / 114][Stage 43:================================>                     (69 + 45) / 114][Stage 43:=========================================>            (87 + 27) / 114][Stage 43:==============================================>      (100 + 14) / 114][Stage 43:====================================================> (110 + 4) / 114][Stage 43:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.822082537 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454258434 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (58 + 55) / 113][Stage 44:==============================>                       (64 + 49) / 113][Stage 44:====================================>                 (77 + 36) / 113][Stage 44:==============================================>       (98 + 15) / 113][Stage 44:====================================================> (110 + 3) / 113]                                                                                [Stage 45:============================>                         (61 + 53) / 114][Stage 45:====================================>                 (76 + 38) / 114][Stage 45:==============================================>      (100 + 14) / 114][Stage 45:==================================================>   (107 + 7) / 114][Stage 45:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.430617904 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456894694 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==========================>                           (59 + 61) / 120][Stage 46:============================>                         (64 + 56) / 120][Stage 46:====================================>                 (81 + 39) / 120][Stage 46:================================================>    (110 + 10) / 120][Stage 46:=====================================================>(118 + 2) / 120]                                                                                [Stage 47:============================>                         (64 + 57) / 121][Stage 47:==================================>                   (77 + 44) / 121][Stage 47:============================================>        (101 + 20) / 121][Stage 47:====================================================> (117 + 4) / 121][Stage 47:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.403116093 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=190,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.508817198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:======================================>               (83 + 32) / 115][Stage 48:==========================================>           (90 + 25) / 115][Stage 48:==================================================>   (108 + 7) / 115][Stage 48:====================================================> (111 + 4) / 115][Stage 48:=====================================================>(114 + 1) / 115]                                                                                [Stage 49:=====================================>                (80 + 36) / 116][Stage 49:=========================================>            (89 + 27) / 116][Stage 49:==============================================>      (102 + 14) / 116][Stage 49:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.895915888 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=52", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=52,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429017198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:=====================================>                (79 + 34) / 113][Stage 50:============================================>         (93 + 20) / 113][Stage 50:===============================================>     (102 + 11) / 113][Stage 50:===================================================>  (107 + 6) / 113][Stage 50:=====================================================>(112 + 1) / 113]                                                                                [Stage 51:===================================>                  (74 + 40) / 114][Stage 51:========================================>             (86 + 28) / 114][Stage 51:=============================================>        (95 + 19) / 114][Stage 51:==============================================>      (101 + 13) / 114][Stage 51:====================================================> (111 + 3) / 114][Stage 51:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.842220439 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=97", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=97,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421617426 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===============================>                      (68 + 47) / 115][Stage 52:========================================>             (86 + 29) / 115][Stage 52:================================================>    (105 + 10) / 115][Stage 52:====================================================> (111 + 4) / 115]                                                                                [Stage 53:===================================>                  (76 + 40) / 116][Stage 53:==========================================>           (91 + 25) / 116][Stage 53:================================================>    (106 + 10) / 116][Stage 53:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.91145514 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=68", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=68,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44129964 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===============================>                      (68 + 47) / 115][Stage 54:==========================================>           (90 + 25) / 115][Stage 54:===============================================>     (104 + 11) / 115][Stage 54:===================================================>  (109 + 6) / 115][Stage 54:=====================================================>(114 + 1) / 115]                                                                                [Stage 55:==============================>                       (65 + 51) / 116][Stage 55:=====================================>                (80 + 36) / 116][Stage 55:===========================================>          (94 + 22) / 116][Stage 55:===============================================>     (103 + 13) / 116][Stage 55:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.185368019 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=184,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374246916 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:=====================================>                (80 + 35) / 115][Stage 56:========================================>             (86 + 29) / 115][Stage 56:============================================>         (94 + 21) / 115][Stage 56:==============================================>       (98 + 17) / 115][Stage 56:==================================================>   (108 + 7) / 115]                                                                                [Stage 57:=======================================>              (84 + 32) / 116][Stage 57:=============================================>        (98 + 18) / 116][Stage 57:==============================================>      (102 + 14) / 116][Stage 57:====================================================> (112 + 4) / 116][Stage 57:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.174020897 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=19", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=19,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.489338725 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:==============================>                       (67 + 53) / 120][Stage 58:=========================================>            (93 + 27) / 120][Stage 58:===================================================>  (114 + 6) / 120][Stage 58:=====================================================>(118 + 2) / 120]                                                                                [Stage 59:============================>                         (64 + 57) / 121][Stage 59:=================================>                    (75 + 46) / 121][Stage 59:============================================>        (101 + 20) / 121][Stage 59:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.412292231 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=172", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=172,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406224598 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:==================================>                   (72 + 41) / 113][Stage 60:========================================>             (84 + 29) / 113][Stage 60:===========================================>          (90 + 23) / 113][Stage 60:===============================================>      (99 + 14) / 113][Stage 60:==================================================>   (105 + 8) / 113][Stage 60:===================================================>  (108 + 5) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:==================================>                   (73 + 41) / 114][Stage 61:=======================================>              (83 + 31) / 114][Stage 61:==========================================>           (89 + 25) / 114][Stage 61:==================================================>   (106 + 8) / 114][Stage 61:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.529375396 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=158", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=158,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410830456 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:>                                                       (0 + 0) / 118][Stage 62:================================>                     (72 + 46) / 118][Stage 62:==================================>                   (76 + 42) / 118][Stage 62:========================================>             (89 + 29) / 118][Stage 62:================================================>    (107 + 11) / 118][Stage 62:=====================================================>(116 + 2) / 118]                                                                                [Stage 63:=================================>                    (74 + 45) / 119][Stage 63:====================================>                 (81 + 38) / 119][Stage 63:============================================>         (98 + 21) / 119][Stage 63:================================================>    (109 + 10) / 119][Stage 63:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.647240646 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=226", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=226,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417796776 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:====================================>                 (77 + 38) / 115][Stage 64:=========================================>            (89 + 26) / 115][Stage 64:===============================================>     (104 + 11) / 115][Stage 64:====================================================> (112 + 3) / 115]                                                                                [Stage 65:=====================================>                (80 + 36) / 116][Stage 65:===========================================>          (94 + 22) / 116][Stage 65:===============================================>     (105 + 11) / 116][Stage 65:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.906763084 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=180", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=180,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380818663 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:======================================>               (81 + 34) / 115][Stage 66:==========================================>           (90 + 25) / 115][Stage 66:===============================================>     (103 + 12) / 115][Stage 66:=====================================================>(113 + 2) / 115][Stage 66:=====================================================>(114 + 1) / 115]                                                                                [Stage 67:=======================================>              (85 + 31) / 116][Stage 67:============================================>         (96 + 20) / 116][Stage 67:==============================================>      (102 + 14) / 116][Stage 67:==================================================>   (109 + 7) / 116][Stage 67:====================================================> (113 + 3) / 116][Stage 67:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.507312469 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=117", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=117,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391785679 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:================================>                     (72 + 46) / 118][Stage 68:==================================>                   (75 + 43) / 118][Stage 68:=====================================>                (82 + 36) / 118][Stage 68:==========================================>           (92 + 26) / 118][Stage 68:=============================================>       (102 + 16) / 118][Stage 68:=====================================================>(116 + 2) / 118]                                                                                [Stage 69:=================================>                    (73 + 46) / 119][Stage 69:==================================>                   (77 + 42) / 119][Stage 69:=======================================>              (86 + 33) / 119][Stage 69:==========================================>           (94 + 25) / 119][Stage 69:=============================================>       (103 + 16) / 119][Stage 69:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.601283125 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=204", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=204,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.526432677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:================================>                     (70 + 45) / 115][Stage 70:========================================>             (86 + 29) / 115][Stage 70:==============================================>       (99 + 16) / 115][Stage 70:=====================================================>(113 + 2) / 115]                                                                                [Stage 71:=====================================>                (80 + 36) / 116][Stage 71:============================================>         (95 + 21) / 116][Stage 71:================================================>    (106 + 10) / 116][Stage 71:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.815998918 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=53", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=53,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399166179 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:=====================================>                (78 + 35) / 113][Stage 72:===========================================>          (90 + 23) / 113][Stage 72:===============================================>      (99 + 14) / 113][Stage 72:===================================================>  (108 + 5) / 113][Stage 72:=====================================================>(112 + 1) / 113]                                                                                [Stage 73:====================================>                 (76 + 38) / 114][Stage 73:=======================================>              (84 + 30) / 114][Stage 73:==========================================>           (89 + 25) / 114][Stage 73:==============================================>       (99 + 15) / 114][Stage 73:===================================================>  (108 + 6) / 114][Stage 73:===================================================>  (109 + 5) / 114][Stage 73:====================================================> (111 + 3) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.098251957 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44339115 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==========================>                           (60 + 61) / 121][Stage 74:============================>                         (63 + 58) / 121][Stage 74:====================================>                 (82 + 39) / 121][Stage 74:===========================================>          (97 + 24) / 121][Stage 74:================================================>    (111 + 10) / 121]                                                                                [Stage 75:===========================>                          (61 + 61) / 122][Stage 75:================================>                     (73 + 49) / 122][Stage 75:=======================================>              (90 + 32) / 122][Stage 75:================================================>    (111 + 11) / 122][Stage 75:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.585780349 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=210", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=210,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426162753 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (61 + 60) / 121][Stage 76:===============================>                      (71 + 50) / 121][Stage 76:===========================================>          (97 + 24) / 121][Stage 76:===============================================>     (108 + 13) / 121][Stage 76:=====================================================>(120 + 1) / 121]                                                                                [Stage 77:===========================>                          (61 + 61) / 122][Stage 77:=============================>                        (66 + 56) / 122][Stage 77:======================================>               (86 + 36) / 122][Stage 77:===========================================>         (101 + 21) / 122][Stage 77:====================================================> (119 + 3) / 122][Stage 77:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.387256194 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=166", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=166,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440253895 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (63 + 58) / 121][Stage 78:===============================>                      (71 + 50) / 121][Stage 78:=========================================>            (92 + 29) / 121][Stage 78:==================================================>   (113 + 8) / 121][Stage 78:=====================================================>(120 + 1) / 121]                                                                                [Stage 79:===========================>                          (61 + 61) / 122][Stage 79:===========================>                          (63 + 59) / 122][Stage 79:==================================>                   (79 + 43) / 122][Stage 79:===========================================>         (100 + 22) / 122][Stage 79:==================================================>   (114 + 8) / 122][Stage 79:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.558706157 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=215,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.495724646 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (62 + 58) / 120][Stage 80:===================================>                  (79 + 41) / 120][Stage 80:===========================================>          (97 + 23) / 120][Stage 80:===================================================>  (114 + 6) / 120]                                                                                [Stage 81:============================>                         (63 + 58) / 121][Stage 81:=================================>                    (75 + 46) / 121][Stage 81:============================================>        (101 + 20) / 121][Stage 81:=================================================>    (112 + 9) / 121][Stage 81:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.391182645 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=186", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=186,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391636458 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==============================>                       (66 + 49) / 115][Stage 82:=====================================>                (79 + 36) / 115][Stage 82:============================================>         (94 + 21) / 115][Stage 82:====================================================> (112 + 3) / 115][Stage 82:=====================================================>(114 + 1) / 115]                                                                                [Stage 83:=====================================>                (81 + 35) / 116][Stage 83:============================================>         (96 + 20) / 116][Stage 83:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.912230392 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=147", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=147,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399272643 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==============================>                       (66 + 49) / 115][Stage 84:======================================>               (82 + 33) / 115][Stage 84:===========================================>          (92 + 23) / 115][Stage 84:=================================================>    (106 + 9) / 115]                                                                                [Stage 85:===================================>                  (76 + 40) / 116][Stage 85:===========================================>          (94 + 22) / 116][Stage 85:==================================================>   (108 + 8) / 116][Stage 85:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.69289587 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390334942 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:====================================>                 (76 + 37) / 113][Stage 86:=======================================>              (83 + 30) / 113][Stage 86:=============================================>        (95 + 18) / 113][Stage 86:================================================>    (103 + 10) / 113][Stage 86:====================================================> (110 + 3) / 113]                                                                                [Stage 87:=====================================>                (79 + 35) / 114][Stage 87:=========================================>            (88 + 26) / 114][Stage 87:==============================================>       (99 + 15) / 114][Stage 87:==================================================>   (107 + 7) / 114][Stage 87:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.367172011 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=159", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=159,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406509403 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (58 + 55) / 113][Stage 88:=============================>                        (62 + 51) / 113][Stage 88:=====================================>                (78 + 35) / 113][Stage 88:=============================================>        (95 + 18) / 113][Stage 88:=====================================================>(112 + 1) / 113]                                                                                [Stage 89:============================>                         (60 + 54) / 114][Stage 89:===================================>                  (75 + 39) / 114][Stage 89:=============================================>        (96 + 18) / 114][Stage 89:==================================================>   (107 + 7) / 114][Stage 89:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.371333266 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=160", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=160,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423366849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (62 + 58) / 120][Stage 90:==============================>                       (68 + 52) / 120][Stage 90:====================================>                 (81 + 39) / 120][Stage 90:=============================================>       (103 + 17) / 120][Stage 90:====================================================> (117 + 3) / 120]                                                                                [Stage 91:===========================>                          (61 + 60) / 121][Stage 91:===============================>                      (71 + 50) / 121][Stage 91:=======================================>              (88 + 33) / 121][Stage 91:==================================================>   (114 + 7) / 121][Stage 91:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.412772471 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=27", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=27,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374426093 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:======================================>               (80 + 33) / 113][Stage 92:==========================================>           (88 + 25) / 113][Stage 92:==============================================>       (97 + 16) / 113][Stage 92:===================================================>  (107 + 6) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:======================================>               (82 + 32) / 114][Stage 93:==========================================>           (90 + 24) / 114][Stage 93:==============================================>      (100 + 14) / 114][Stage 93:==================================================>   (106 + 8) / 114][Stage 93:====================================================> (110 + 4) / 114][Stage 93:====================================================> (111 + 3) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.675479817 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422485275 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (60 + 60) / 120][Stage 94:===============================>                      (70 + 50) / 120][Stage 94:========================================>             (90 + 30) / 120][Stage 94:================================================>    (110 + 10) / 120][Stage 94:=====================================================>(118 + 2) / 120]                                                                                [Stage 95:============================>                         (63 + 58) / 121][Stage 95:==================================>                   (77 + 44) / 121][Stage 95:============================================>        (102 + 19) / 121][Stage 95:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.465968968 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=108", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=108,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381008006 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=================================>                    (72 + 43) / 115][Stage 96:=======================================>              (85 + 30) / 115][Stage 96:===================================================>  (109 + 6) / 115][Stage 96:====================================================> (112 + 3) / 115]                                                                                [Stage 97:=================================>                    (73 + 43) / 116][Stage 97:========================================>             (88 + 28) / 116][Stage 97:=============================================>        (97 + 19) / 116][Stage 97:===================================================>  (110 + 6) / 116][Stage 97:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.170022994 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=118", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=118,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382489356 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:================================>                     (70 + 45) / 115][Stage 98:======================================>               (82 + 33) / 115][Stage 98:==============================================>       (99 + 16) / 115][Stage 98:====================================================> (111 + 4) / 115][Stage 98:=====================================================>(114 + 1) / 115]                                                                                [Stage 99:=================================>                    (71 + 45) / 116][Stage 99:========================================>             (87 + 29) / 116][Stage 99:==============================================>      (102 + 14) / 116][Stage 99:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.111641599 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=246", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=246,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368203128 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (72 + 46) / 118][Stage 100:===================================>                 (78 + 40) / 118][Stage 100:=======================================>             (88 + 30) / 118][Stage 100:=============================================>      (103 + 15) / 118][Stage 100:===================================================> (114 + 4) / 118]                                                                                [Stage 101:================================>                    (73 + 46) / 119][Stage 101:====================================>                (81 + 38) / 119][Stage 101:===========================================>         (98 + 21) / 119][Stage 101:==============================================>     (107 + 12) / 119][Stage 101:===================================================> (116 + 3) / 119][Stage 101:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.474814042 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=92", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=92,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424567023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 61) / 121][Stage 102:===========================>                         (62 + 59) / 121][Stage 102:===============================>                     (72 + 49) / 121][Stage 102:========================================>            (93 + 28) / 121][Stage 102:==============================================>     (109 + 12) / 121][Stage 102:====================================================>(120 + 1) / 121]                                                                                [Stage 103:===========================>                         (64 + 58) / 122][Stage 103:==================================>                  (80 + 42) / 122][Stage 103:===========================================>        (101 + 21) / 122][Stage 103:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.414395367 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363154599 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:======================================>              (83 + 32) / 115][Stage 104:==========================================>          (93 + 22) / 115][Stage 104:===============================================>    (105 + 10) / 115][Stage 104:====================================================>(114 + 1) / 115]                                                                                [Stage 105:======================================>              (84 + 32) / 116][Stage 105:=========================================>           (90 + 26) / 116][Stage 105:=============================================>      (102 + 14) / 116][Stage 105:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.673328141 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=245", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=245,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396614732 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (59 + 54) / 113][Stage 106:==============================>                      (65 + 48) / 113][Stage 106:========================================>            (86 + 27) / 113][Stage 106:==============================================>     (100 + 13) / 113][Stage 106:====================================================>(111 + 2) / 113]                                                                                [Stage 107:============================>                        (61 + 53) / 114][Stage 107:=============================>                       (64 + 50) / 114][Stage 107:===================================>                 (76 + 38) / 114][Stage 107:===========================================>         (93 + 21) / 114][Stage 107:================================================>    (105 + 9) / 114][Stage 107:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.393877546 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=242", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=242,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372081173 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=================================>                   (71 + 42) / 113][Stage 108:======================================>              (82 + 31) / 113][Stage 108:==========================================>          (91 + 22) / 113][Stage 108:==============================================>     (100 + 13) / 113][Stage 108:==================================================>  (108 + 5) / 113]                                                                                [Stage 109:===================================>                 (77 + 37) / 114][Stage 109:=======================================>             (86 + 28) / 114][Stage 109:============================================>        (95 + 19) / 114][Stage 109:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.047984064 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=110", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=110,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416279039 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (61 + 59) / 120][Stage 110:================================>                    (73 + 47) / 120][Stage 110:======================================>              (87 + 33) / 120][Stage 110:===============================================>    (109 + 11) / 120][Stage 110:====================================================>(118 + 2) / 120]                                                                                [Stage 111:============================>                        (64 + 57) / 121][Stage 111:===============================>                     (73 + 48) / 121][Stage 111:=========================================>           (94 + 27) / 121][Stage 111:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.343642523 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364045698 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:================================>                    (73 + 45) / 118][Stage 112:====================================>                (82 + 36) / 118][Stage 112:==========================================>          (94 + 24) / 118][Stage 112:===============================================>    (108 + 10) / 118][Stage 112:====================================================>(117 + 1) / 118]                                                                                [Stage 113:================================>                    (73 + 46) / 119][Stage 113:==================================>                  (78 + 41) / 119][Stage 113:=======================================>             (88 + 31) / 119][Stage 113:=============================================>      (104 + 15) / 119][Stage 113:=================================================>   (112 + 7) / 119][Stage 113:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.580498162 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=198", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=198,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393482254 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==========================>                          (60 + 61) / 121][Stage 114:===========================>                         (63 + 58) / 121][Stage 114:===================================>                 (81 + 40) / 121][Stage 114:=============================================>      (105 + 16) / 121][Stage 114:==================================================>  (116 + 5) / 121]                                                                                [Stage 115:==========================>                          (61 + 61) / 122][Stage 115:===============================>                     (72 + 50) / 122][Stage 115:=======================================>             (91 + 31) / 122][Stage 115:==================================================>  (116 + 6) / 122][Stage 115:====================================================>(120 + 2) / 122][Stage 115:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.754026741 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=194", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=194,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366850458 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:================================>                    (72 + 46) / 118][Stage 116:==================================>                  (76 + 42) / 118][Stage 116:======================================>              (85 + 33) / 118][Stage 116:============================================>        (98 + 20) / 118][Stage 116:==================================================>  (112 + 6) / 118]                                                                                [Stage 117:================================>                    (74 + 45) / 119][Stage 117:==================================>                  (78 + 41) / 119][Stage 117:====================================>                (83 + 36) / 119][Stage 117:===========================================>         (98 + 21) / 119][Stage 117:==================================================>  (114 + 5) / 119][Stage 117:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.754150757 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402027844 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 60) / 120][Stage 118:=============================>                       (67 + 53) / 120][Stage 118:=====================================>               (84 + 36) / 120][Stage 118:===============================================>    (109 + 11) / 120][Stage 118:====================================================>(119 + 1) / 120]                                                                                [Stage 119:==========================>                          (61 + 60) / 121][Stage 119:============================>                        (65 + 56) / 121][Stage 119:=====================================>               (85 + 36) / 121][Stage 119:==============================================>     (108 + 13) / 121][Stage 119:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.270882918 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=72", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=72,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373064608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:================================>                    (72 + 46) / 118][Stage 120:==================================>                  (76 + 42) / 118][Stage 120:=======================================>             (87 + 31) / 118][Stage 120:===========================================>         (97 + 21) / 118][Stage 120:==================================================>  (112 + 6) / 118]                                                                                [Stage 121:================================>                    (74 + 45) / 119][Stage 121:====================================>                (81 + 38) / 119][Stage 121:============================================>        (99 + 20) / 119][Stage 121:==================================================>  (113 + 6) / 119][Stage 121:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.280360102 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=130", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=130,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383807519 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:============================>                        (60 + 53) / 113][Stage 122:================================>                    (70 + 43) / 113][Stage 122:===========================================>         (93 + 20) / 113][Stage 122:=================================================>   (106 + 7) / 113][Stage 122:====================================================>(112 + 1) / 113]                                                                                [Stage 123:===========================>                         (60 + 54) / 114][Stage 123:================================>                    (70 + 44) / 114][Stage 123:=======================================>             (84 + 30) / 114][Stage 123:=================================================>   (106 + 8) / 114][Stage 123:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.295279472 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=163", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=163,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389416326 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (58 + 55) / 113][Stage 124:============================>                        (60 + 53) / 113][Stage 124:=================================>                   (71 + 42) / 113][Stage 124:=========================================>           (88 + 25) / 113][Stage 124:=================================================>   (105 + 8) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:============================>                        (61 + 53) / 114][Stage 125:==================================>                  (75 + 39) / 114][Stage 125:==============================================>      (99 + 15) / 114][Stage 125:==================================================>  (109 + 5) / 114][Stage 125:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.544234288 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=234", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=234,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396391624 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=============================>                       (62 + 51) / 113][Stage 126:================================>                    (70 + 43) / 113][Stage 126:==========================================>          (90 + 23) / 113][Stage 126:==================================================>  (107 + 6) / 113]                                                                                [Stage 127:===========================>                         (60 + 54) / 114][Stage 127:===============================>                     (67 + 47) / 114][Stage 127:=========================================>           (90 + 24) / 114][Stage 127:===============================================>    (104 + 10) / 114][Stage 127:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.384213228 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=81", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=81,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405164538 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (60 + 60) / 120][Stage 128:============================>                        (65 + 55) / 120][Stage 128:=====================================>               (86 + 34) / 120][Stage 128:=================================================>   (111 + 9) / 120][Stage 128:====================================================>(118 + 2) / 120]                                                                                [Stage 129:==========================>                          (61 + 60) / 121][Stage 129:=============================>                       (68 + 53) / 121][Stage 129:======================================>              (87 + 34) / 121][Stage 129:==============================================>     (108 + 13) / 121]                                                                                Time elapsed: 3.068635212 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=107", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=107,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499876863 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 61) / 121][Stage 130:==========================>                          (61 + 60) / 121][Stage 130:===================================>                 (80 + 41) / 121][Stage 130:===========================================>        (102 + 19) / 121][Stage 130:===================================================> (118 + 3) / 121]                                                                                [Stage 131:==========================>                          (61 + 61) / 122][Stage 131:============================>                        (65 + 57) / 122][Stage 131:====================================>                (85 + 37) / 122][Stage 131:===========================================>         (99 + 23) / 122][Stage 131:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.259537259 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=138", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=138,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404623169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 61) / 121][Stage 132:============================>                        (66 + 55) / 121][Stage 132:==================================>                  (78 + 43) / 121][Stage 132:=================================================>   (114 + 7) / 121][Stage 132:===================================================> (118 + 3) / 121]                                                                                [Stage 133:===========================>                         (63 + 59) / 122][Stage 133:================================>                    (75 + 47) / 122][Stage 133:=========================================>           (96 + 26) / 122][Stage 133:==============================================>     (110 + 12) / 122][Stage 133:====================================================>(120 + 2) / 122][Stage 133:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.652854127 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=6", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=6,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377362529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (58 + 55) / 113][Stage 134:===============================>                     (67 + 46) / 113][Stage 134:============================================>        (94 + 19) / 113][Stage 134:===================================================> (109 + 4) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:===========================>                         (59 + 55) / 114][Stage 135:==============================>                      (66 + 48) / 114][Stage 135:======================================>              (82 + 32) / 114][Stage 135:=============================================>       (98 + 16) / 114][Stage 135:=================================================>   (107 + 7) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.035167955 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=216", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=216,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387972219 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (58 + 55) / 113][Stage 136:=============================>                       (62 + 51) / 113][Stage 136:=====================================>               (79 + 34) / 113][Stage 136:=============================================>       (98 + 15) / 113][Stage 136:===================================================> (110 + 3) / 113]                                                                                [Stage 137:===========================>                         (59 + 55) / 114][Stage 137:======================================>              (83 + 31) / 114][Stage 137:=============================================>      (100 + 14) / 114][Stage 137:==================================================>  (109 + 5) / 114][Stage 137:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.380169506 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=20", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=20,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335443959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:====================================>                (80 + 35) / 115][Stage 138:======================================>              (83 + 32) / 115][Stage 138:===========================================>         (95 + 20) / 115][Stage 138:================================================>    (106 + 9) / 115][Stage 138:====================================================>(114 + 1) / 115]                                                                                [Stage 139:========================================>            (89 + 27) / 116][Stage 139:=============================================>       (99 + 17) / 116][Stage 139:================================================>    (107 + 9) / 116][Stage 139:==================================================>  (110 + 6) / 116][Stage 139:====================================================>(114 + 2) / 116][Stage 139:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.059268111 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448083936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=============================>                       (65 + 50) / 115][Stage 140:===================================>                 (77 + 38) / 115][Stage 140:===========================================>         (95 + 20) / 115][Stage 140:===================================================> (111 + 4) / 115]                                                                                [Stage 141:=================================>                   (73 + 43) / 116][Stage 141:=====================================>               (83 + 33) / 116][Stage 141:===========================================>         (95 + 21) / 116][Stage 141:===============================================>    (105 + 11) / 116][Stage 141:==================================================>  (110 + 6) / 116][Stage 141:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.089256909 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=61", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=61,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33726047 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:======================================>              (83 + 32) / 115][Stage 142:==========================================>          (93 + 22) / 115][Stage 142:==============================================>     (102 + 13) / 115][Stage 142:=================================================>   (107 + 8) / 115][Stage 142:===================================================> (111 + 4) / 115]                                                                                [Stage 143:=====================================>               (83 + 33) / 116][Stage 143:==========================================>          (93 + 23) / 116][Stage 143:================================================>    (107 + 9) / 116][Stage 143:=================================================>   (108 + 8) / 116][Stage 143:====================================================>(114 + 2) / 116][Stage 143:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.958436211 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=36", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=36,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405850003 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 61) / 121][Stage 144:=============================>                       (68 + 53) / 121][Stage 144:====================================>                (83 + 38) / 121][Stage 144:==============================================>     (109 + 12) / 121][Stage 144:====================================================>(120 + 1) / 121]                                                                                [Stage 145:============================>                        (66 + 56) / 122][Stage 145:=================================>                   (76 + 46) / 122][Stage 145:========================================>            (94 + 28) / 122][Stage 145:===================================================> (119 + 3) / 122][Stage 145:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.430896168 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=243", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=243,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376357745 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:=============================>                       (65 + 50) / 115][Stage 146:====================================>                (79 + 36) / 115][Stage 146:=============================================>       (98 + 17) / 115][Stage 146:================================================>    (106 + 9) / 115]                                                                                [Stage 147:==================================>                  (75 + 41) / 116][Stage 147:=========================================>           (90 + 26) / 116][Stage 147:=============================================>      (101 + 15) / 116][Stage 147:===================================================> (113 + 3) / 116][Stage 147:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.848490679 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=70", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=70,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354568873 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:====================================>                (77 + 36) / 113][Stage 148:=========================================>           (88 + 25) / 113][Stage 148:=============================================>       (98 + 15) / 113][Stage 148:===================================================> (109 + 4) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:==================================>                  (75 + 39) / 114][Stage 149:========================================>            (88 + 26) / 114][Stage 149:=============================================>       (97 + 17) / 114][Stage 149:==================================================>  (109 + 5) / 114][Stage 149:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.112332849 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=48", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=48,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376662742 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (59 + 54) / 113][Stage 150:===============================>                     (67 + 46) / 113][Stage 150:========================================>            (87 + 26) / 113][Stage 150:===================================================> (110 + 3) / 113]                                                                                [Stage 151:===========================>                         (60 + 54) / 114][Stage 151:================================>                    (69 + 45) / 114][Stage 151:==========================================>          (91 + 23) / 114][Stage 151:==================================================>  (108 + 6) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.542675856 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=73", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=73,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440779035 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:=====================================>               (81 + 34) / 115][Stage 152:========================================>            (88 + 27) / 115][Stage 152:==============================================>     (102 + 13) / 115][Stage 152:==================================================>  (110 + 5) / 115][Stage 152:====================================================>(113 + 2) / 115]                                                                                [Stage 153:=====================================>               (82 + 34) / 116][Stage 153:========================================>            (88 + 28) / 116][Stage 153:===============================================>    (105 + 11) / 116][Stage 153:==================================================>  (111 + 5) / 116][Stage 153:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.947127762 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=49", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=49,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349502623 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==================================>                  (74 + 39) / 113][Stage 154:=======================================>             (85 + 28) / 113][Stage 154:============================================>        (94 + 19) / 113][Stage 154:==============================================>     (102 + 11) / 113][Stage 154:===================================================> (110 + 3) / 113]                                                                                [Stage 155:===================================>                 (76 + 38) / 114][Stage 155:=======================================>             (85 + 29) / 114][Stage 155:=============================================>       (97 + 17) / 114][Stage 155:==============================================>     (101 + 13) / 114][Stage 155:===================================================> (110 + 4) / 114][Stage 155:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.849993775 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=64", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=64,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357226868 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:=====================================>               (79 + 34) / 113][Stage 156:=======================================>             (85 + 28) / 113][Stage 156:============================================>        (95 + 18) / 113][Stage 156:=================================================>   (106 + 7) / 113][Stage 156:====================================================>(112 + 1) / 113]                                                                                [Stage 157:===================================>                 (77 + 37) / 114][Stage 157:======================================>              (83 + 31) / 114][Stage 157:===========================================>         (94 + 20) / 114][Stage 157:==============================================>     (102 + 12) / 114][Stage 157:===================================================> (111 + 3) / 114][Stage 157:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.64602524 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=127", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=127,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37405425 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:=============================>                       (65 + 50) / 115][Stage 158:===================================>                 (78 + 37) / 115][Stage 158:==========================================>          (93 + 22) / 115][Stage 158:==============================================>     (103 + 12) / 115][Stage 158:====================================================>(113 + 2) / 115]                                                                                [Stage 159:===================================>                 (78 + 38) / 116][Stage 159:========================================>            (89 + 27) / 116][Stage 159:=============================================>      (101 + 15) / 116][Stage 159:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.027534678 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=244", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=241 AND partitionZIndex<=244,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3754011 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===================================>                 (76 + 39) / 115][Stage 160:========================================>            (88 + 27) / 115][Stage 160:==============================================>     (103 + 12) / 115][Stage 160:====================================================>(113 + 2) / 115]                                                                                [Stage 161:===================================>                 (77 + 39) / 116][Stage 161:=========================================>           (91 + 25) / 116][Stage 161:==================================================>  (110 + 6) / 116][Stage 161:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.956297127 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=177", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=177,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346392188 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:======================================>              (84 + 31) / 115][Stage 162:=========================================>           (91 + 24) / 115][Stage 162:=================================================>   (107 + 8) / 115][Stage 162:====================================================>(113 + 2) / 115]                                                                                [Stage 163:========================================>            (88 + 28) / 116][Stage 163:=============================================>       (99 + 17) / 116][Stage 163:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.733069506 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=164", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=164,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389537398 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (59 + 54) / 113][Stage 164:================================>                    (69 + 44) / 113][Stage 164:========================================>            (86 + 27) / 113][Stage 164:=================================================>   (105 + 8) / 113][Stage 164:===================================================> (109 + 4) / 113]                                                                                [Stage 165:=============================>                       (64 + 50) / 114][Stage 165:==================================>                  (75 + 39) / 114][Stage 165:===========================================>         (94 + 20) / 114][Stage 165:=================================================>   (107 + 7) / 114][Stage 165:====================================================>(112 + 2) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.800122785 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386889272 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:>                                                      (0 + 0) / 120][Stage 166:==========================>                          (60 + 60) / 120][Stage 166:==============================>                      (69 + 51) / 120][Stage 166:====================================>                (83 + 37) / 120][Stage 166:=============================================>      (106 + 14) / 120][Stage 166:===================================================> (117 + 3) / 120]                                                                                [Stage 167:============================>                        (66 + 55) / 121][Stage 167:================================>                    (74 + 47) / 121][Stage 167:=============================================>      (105 + 16) / 121][Stage 167:===================================================> (118 + 3) / 121][Stage 167:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.419814313 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=238,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37296455 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:================================>                    (70 + 43) / 113][Stage 168:=====================================>               (79 + 34) / 113][Stage 168:===========================================>         (92 + 21) / 113][Stage 168:==============================================>     (102 + 11) / 113][Stage 168:===================================================> (109 + 4) / 113]                                                                                [Stage 169:=====================================>               (80 + 34) / 114][Stage 169:=========================================>           (89 + 25) / 114][Stage 169:=================================================>   (106 + 8) / 114][Stage 169:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.928484134 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=214,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388033957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:=============================>                       (65 + 50) / 115][Stage 170:====================================>                (80 + 35) / 115][Stage 170:==========================================>          (93 + 22) / 115][Stage 170:===============================================>    (104 + 11) / 115][Stage 170:==================================================>  (110 + 5) / 115][Stage 170:====================================================>(113 + 2) / 115]                                                                                [Stage 171:==============================>                      (67 + 49) / 116][Stage 171:====================================>                (80 + 36) / 116][Stage 171:==========================================>          (92 + 24) / 116][Stage 171:==================================================>  (110 + 6) / 116][Stage 171:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.132401091 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360101935 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:================================>                    (72 + 46) / 118][Stage 172:=================================>                   (74 + 44) / 118][Stage 172:=======================================>             (88 + 30) / 118][Stage 172:================================================>    (109 + 9) / 118][Stage 172:====================================================>(116 + 2) / 118]                                                                                [Stage 173:================================>                    (73 + 46) / 119][Stage 173:=================================>                   (76 + 43) / 119][Stage 173:========================================>            (91 + 28) / 119][Stage 173:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.010711909 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=54", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=54,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390750116 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (62 + 58) / 120][Stage 174:===============================>                     (71 + 49) / 120][Stage 174:=====================================>               (86 + 34) / 120][Stage 174:=============================================>      (106 + 14) / 120][Stage 174:====================================================>(118 + 2) / 120]                                                                                [Stage 175:==========================>                          (61 + 60) / 121][Stage 175:================================>                    (75 + 46) / 121][Stage 175:=========================================>           (95 + 26) / 121][Stage 175:==============================================>     (109 + 12) / 121][Stage 175:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.657667465 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=128", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=128,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455332568 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (59 + 54) / 113][Stage 176:================================>                    (69 + 44) / 113][Stage 176:===========================================>         (92 + 21) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:===========================>                         (59 + 55) / 114][Stage 177:=============================>                       (64 + 50) / 114][Stage 177:=======================================>             (84 + 30) / 114][Stage 177:==============================================>     (101 + 13) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.093358502 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=153", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=153,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389327219 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (60 + 60) / 120][Stage 178:===========================>                         (63 + 57) / 120][Stage 178:===================================>                 (81 + 39) / 120][Stage 178:============================================>       (103 + 17) / 120][Stage 178:====================================================>(118 + 2) / 120]                                                                                [Stage 179:==========================>                          (61 + 60) / 121][Stage 179:==============================>                      (70 + 51) / 121][Stage 179:======================================>              (87 + 34) / 121][Stage 179:=============================================>      (107 + 14) / 121][Stage 179:===================================================> (118 + 3) / 121][Stage 179:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.392238146 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=115", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=115,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389549799 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==========================>                          (61 + 60) / 121][Stage 180:=============================>                       (67 + 54) / 121][Stage 180:======================================>              (89 + 32) / 121][Stage 180:===============================================>    (111 + 10) / 121]                                                                                [Stage 181:==========================>                          (62 + 60) / 122][Stage 181:==============================>                      (70 + 52) / 122][Stage 181:=======================================>             (90 + 32) / 122][Stage 181:=============================================>      (107 + 15) / 122][Stage 181:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.415434865 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421813012 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===============================>                     (69 + 46) / 115][Stage 182:========================================>            (88 + 27) / 115][Stage 182:===============================================>    (105 + 10) / 115][Stage 182:===================================================> (112 + 3) / 115]                                                                                [Stage 183:================================>                    (72 + 44) / 116][Stage 183:=======================================>             (86 + 30) / 116][Stage 183:===============================================>    (106 + 10) / 116][Stage 183:===================================================> (113 + 3) / 116][Stage 183:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.903302119 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381979108 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=================================>                   (73 + 42) / 115][Stage 184:========================================>            (87 + 28) / 115][Stage 184:==================================================>  (109 + 6) / 115][Stage 184:====================================================>(114 + 1) / 115]                                                                                [Stage 185:===============================>                     (70 + 46) / 116][Stage 185:=====================================>               (82 + 34) / 116][Stage 185:=============================================>       (99 + 17) / 116][Stage 185:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.72359652 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=157", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=157,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367827186 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:=================================>                   (73 + 42) / 115][Stage 186:=======================================>             (86 + 29) / 115][Stage 186:=============================================>      (101 + 14) / 115][Stage 186:====================================================>(113 + 2) / 115]                                                                                [Stage 187:=====================================>               (83 + 33) / 116][Stage 187:===========================================>         (96 + 20) / 116][Stage 187:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.703813317 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=205", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=205,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4094692 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 61) / 121][Stage 188:===============================>                     (72 + 49) / 121][Stage 188:========================================>            (93 + 28) / 121][Stage 188:==================================================>  (115 + 6) / 121]                                                                                [Stage 189:==========================>                          (62 + 60) / 122][Stage 189:==============================>                      (70 + 52) / 122][Stage 189:======================================>              (89 + 33) / 122][Stage 189:===============================================>    (111 + 11) / 122][Stage 189:===================================================> (119 + 3) / 122][Stage 189:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.693696499 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=109", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=109,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357579374 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==================================>                  (73 + 40) / 113][Stage 190:========================================>            (86 + 27) / 113][Stage 190:==============================================>      (99 + 14) / 113][Stage 190:==================================================>  (108 + 5) / 113][Stage 190:====================================================>(111 + 2) / 113]                                                                                [Stage 191:=====================================>               (80 + 34) / 114][Stage 191:=========================================>           (90 + 24) / 114][Stage 191:==============================================>     (103 + 11) / 114][Stage 191:==================================================>  (108 + 6) / 114][Stage 191:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.02527297 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=241", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=241,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389026361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (60 + 61) / 121][Stage 192:===========================>                         (63 + 58) / 121][Stage 192:==================================>                  (78 + 43) / 121][Stage 192:===========================================>        (101 + 20) / 121][Stage 192:===================================================> (118 + 3) / 121]                                                                                [Stage 193:===========================>                         (64 + 58) / 122][Stage 193:================================>                    (74 + 48) / 122][Stage 193:==========================================>         (100 + 22) / 122][Stage 193:===================================================> (118 + 4) / 122][Stage 193:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.291935208 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377122096 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:================================>                    (72 + 46) / 118][Stage 194:==================================>                  (76 + 42) / 118][Stage 194:====================================>                (82 + 36) / 118][Stage 194:==========================================>          (95 + 23) / 118][Stage 194:=================================================>   (110 + 8) / 118][Stage 194:====================================================>(117 + 1) / 118]                                                                                [Stage 195:================================>                    (73 + 46) / 119][Stage 195:=================================>                   (76 + 43) / 119][Stage 195:=======================================>             (89 + 30) / 119][Stage 195:=============================================>      (104 + 15) / 119][Stage 195:=================================================>   (112 + 7) / 119][Stage 195:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.744147464 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411436186 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==========================>                          (60 + 61) / 121][Stage 196:==============================>                      (70 + 51) / 121][Stage 196:=========================================>           (95 + 26) / 121][Stage 196:==================================================>  (115 + 6) / 121]                                                                                [Stage 197:===========================>                         (63 + 59) / 122][Stage 197:==================================>                  (80 + 42) / 122][Stage 197:==========================================>          (97 + 25) / 122][Stage 197:==================================================>  (117 + 5) / 122][Stage 197:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.551003516 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=228", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=228,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395617229 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=============================>                       (65 + 50) / 115][Stage 198:===================================>                 (77 + 38) / 115][Stage 198:===========================================>         (94 + 21) / 115][Stage 198:===============================================>    (104 + 11) / 115][Stage 198:====================================================>(113 + 2) / 115]                                                                                [Stage 199:================================>                    (71 + 45) / 116][Stage 199:=====================================>               (83 + 33) / 116][Stage 199:=============================================>      (101 + 15) / 116][Stage 199:===================================================> (112 + 4) / 116][Stage 199:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.854359583 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332603611 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=======================================>             (86 + 29) / 115][Stage 200:===========================================>         (95 + 20) / 115][Stage 200:==================================================>  (109 + 6) / 115][Stage 200:====================================================>(113 + 2) / 115]                                                                                [Stage 201:=====================================>               (83 + 33) / 116][Stage 201:========================================>            (88 + 28) / 116][Stage 201:===============================================>    (106 + 10) / 116][Stage 201:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.61714451 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/24 19:05:09 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.16:52264) dropped. RpcEnv already stopped.
17/05/24 19:05:09 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.16:52264) dropped. RpcEnv already stopped.

real	10m35.237s
user	11m54.228s
sys	0m56.380s
