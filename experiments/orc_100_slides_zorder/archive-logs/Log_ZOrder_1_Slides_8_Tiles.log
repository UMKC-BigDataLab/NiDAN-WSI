Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 15:02:39 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 15:02:54 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 15:02:54 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 15:02:54 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 15:02:56 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 15:03:07 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524150256-0560).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.342309185 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:===========>                                           (25 + 90) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:=======================================>               (82 + 33) / 115][Stage 0:===========================================>           (90 + 25) / 115][Stage 0:=============================================>         (95 + 20) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:====================================================>  (110 + 5) / 115]                                                                                [Stage 1:============================>                          (61 + 55) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:==================================>                    (72 + 44) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:=========================================>             (87 + 29) / 116][Stage 1:==============================================>        (99 + 17) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:====================================================>  (111 + 5) / 116][Stage 1:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 12.444260072 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=13", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=13,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.853553616 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===============>                                       (31 + 82) / 113][Stage 2:=========================>                             (53 + 60) / 113][Stage 2:===========================>                           (56 + 57) / 113][Stage 2:============================>                          (59 + 54) / 113][Stage 2:==============================>                        (63 + 50) / 113][Stage 2:===================================>                   (73 + 40) / 113][Stage 2:===========================================>           (89 + 24) / 113][Stage 2:================================================>      (99 + 14) / 113][Stage 2:=================================================>    (103 + 10) / 113][Stage 2:====================================================>  (107 + 6) / 113][Stage 2:=====================================================> (110 + 3) / 113]                                                                                [Stage 3:===========================>                           (57 + 57) / 114][Stage 3:============================>                          (60 + 54) / 114][Stage 3:===============================>                       (66 + 48) / 114][Stage 3:=====================================>                 (77 + 37) / 114][Stage 3:==========================================>            (89 + 25) / 114][Stage 3:===============================================>       (98 + 16) / 114][Stage 3:===============================================>      (101 + 13) / 114][Stage 3:===================================================>   (107 + 7) / 114][Stage 3:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 8.926912735 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=103", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=103,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.698329912 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (57 + 56) / 113][Stage 4:============================>                          (59 + 54) / 113][Stage 4:==================================>                    (71 + 42) / 113][Stage 4:======================================>                (79 + 34) / 113][Stage 4:============================================>          (91 + 22) / 113][Stage 4:===================================================>   (105 + 8) / 113][Stage 4:======================================================>(111 + 2) / 113]                                                                                [Stage 5:===========================>                           (58 + 56) / 114][Stage 5:=============================>                         (61 + 53) / 114][Stage 5:=================================>                     (69 + 45) / 114][Stage 5:======================================>                (80 + 34) / 114][Stage 5:===========================================>           (91 + 23) / 114][Stage 5:===============================================>       (98 + 16) / 114][Stage 5:====================================================>  (109 + 5) / 114]                                                                                Time elapsed: 4.638672222 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=101", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=101,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.636400746 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (57 + 56) / 113][Stage 6:============================>                          (59 + 54) / 113][Stage 6:=================================>                     (68 + 45) / 113][Stage 6:======================================>                (80 + 33) / 113][Stage 6:===========================================>           (89 + 24) / 113][Stage 6:===================================================>   (106 + 7) / 113]                                                                                [Stage 7:============================>                          (60 + 54) / 114][Stage 7:===============================>                       (66 + 48) / 114][Stage 7:=====================================>                 (77 + 37) / 114][Stage 7:============================================>          (93 + 21) / 114][Stage 7:===============================================>      (100 + 14) / 114]                                                                                Time elapsed: 4.17219107 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=134", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=134,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.617324938 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (57 + 56) / 113][Stage 8:============================>                          (59 + 54) / 113][Stage 8:=================================>                     (68 + 45) / 113][Stage 8:=========================================>             (86 + 27) / 113][Stage 8:================================================>      (99 + 14) / 113][Stage 8:======================================================>(112 + 1) / 113]                                                                                [Stage 9:============================>                          (59 + 55) / 114][Stage 9:=============================>                         (61 + 53) / 114][Stage 9:================================>                      (67 + 47) / 114][Stage 9:========================================>              (84 + 30) / 114][Stage 9:============================================>          (92 + 22) / 114][Stage 9:================================================>     (102 + 12) / 114][Stage 9:=====================================================> (111 + 3) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.717287337 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=35", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=35,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.568011353 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (57 + 56) / 113][Stage 10:===========================>                          (58 + 55) / 113][Stage 10:=============================>                        (62 + 51) / 113][Stage 10:====================================>                 (77 + 36) / 113][Stage 10:============================================>         (93 + 20) / 113][Stage 10:===============================================>      (99 + 14) / 113][Stage 10:====================================================> (110 + 3) / 113]                                                                                [Stage 11:============================>                         (60 + 54) / 114][Stage 11:=============================>                        (62 + 52) / 114][Stage 11:==================================>                   (72 + 42) / 114][Stage 11:=========================================>            (88 + 26) / 114][Stage 11:================================================>    (104 + 10) / 114][Stage 11:===================================================>  (109 + 5) / 114][Stage 11:====================================================> (111 + 3) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.64293625 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=176", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=176,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.541501035 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (57 + 56) / 113][Stage 12:============================>                         (60 + 53) / 113][Stage 12:================================>                     (67 + 46) / 113][Stage 12:===========================================>          (91 + 22) / 113][Stage 12:==================================================>   (105 + 8) / 113][Stage 12:=====================================================>(112 + 1) / 113]                                                                                [Stage 13:============================>                         (60 + 54) / 114][Stage 13:===============================>                      (66 + 48) / 114][Stage 13:=======================================>              (84 + 30) / 114][Stage 13:===============================================>     (103 + 11) / 114][Stage 13:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.047353116 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=200", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=200,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.534002548 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (58 + 55) / 113][Stage 14:============================>                         (60 + 53) / 113][Stage 14:=================================>                    (70 + 43) / 113][Stage 14:===========================================>          (90 + 23) / 113][Stage 14:==================================================>   (105 + 8) / 113][Stage 14:=====================================================>(111 + 2) / 113]                                                                                [Stage 15:=============================>                        (63 + 51) / 114][Stage 15:==================================>                   (73 + 41) / 114][Stage 15:=========================================>            (88 + 26) / 114][Stage 15:==============================================>      (101 + 13) / 114][Stage 15:=====================================================>(112 + 2) / 114][Stage 15:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.406379539 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=60", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=60,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.509003086 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (57 + 56) / 113][Stage 16:============================>                         (60 + 53) / 113][Stage 16:=================================>                    (71 + 42) / 113][Stage 16:==========================================>           (88 + 25) / 113][Stage 16:================================================>    (103 + 10) / 113][Stage 16:=====================================================>(111 + 2) / 113]                                                                                [Stage 17:=============================>                        (62 + 52) / 114][Stage 17:==================================>                   (72 + 42) / 114][Stage 17:==========================================>           (89 + 25) / 114][Stage 17:===================================================>  (108 + 6) / 114][Stage 17:=====================================================>(112 + 2) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.52414739 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=222", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=222,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.539503829 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:============================>                         (60 + 53) / 113][Stage 18:================================>                     (69 + 44) / 113][Stage 18:=========================================>            (86 + 27) / 113][Stage 18:===================================================>  (107 + 6) / 113]                                                                                [Stage 19:============================>                         (60 + 54) / 114][Stage 19:===============================>                      (67 + 47) / 114][Stage 19:======================================>               (82 + 32) / 114][Stage 19:===============================================>     (102 + 12) / 114][Stage 19:====================================================> (110 + 4) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.789905855 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=121", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=121,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.517085191 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (58 + 55) / 113][Stage 20:=============================>                        (61 + 52) / 113][Stage 20:=====================================>                (78 + 35) / 113][Stage 20:===============================================>      (99 + 14) / 113][Stage 20:===================================================>  (107 + 6) / 113][Stage 20:====================================================> (109 + 4) / 113]                                                                                [Stage 21:=============================>                        (62 + 52) / 114][Stage 21:==================================>                   (73 + 41) / 114][Stage 21:=========================================>            (88 + 26) / 114][Stage 21:=================================================>    (105 + 9) / 114][Stage 21:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.967859666 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=133", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=133,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502967176 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:=============================>                        (61 + 52) / 113][Stage 22:==================================>                   (72 + 41) / 113][Stage 22:===========================================>          (92 + 21) / 113][Stage 22:===================================================>  (108 + 5) / 113]                                                                                [Stage 23:============================>                         (60 + 54) / 114][Stage 23:===================================>                  (75 + 39) / 114][Stage 23:============================================>         (94 + 20) / 114][Stage 23:===================================================>  (109 + 5) / 114][Stage 23:=====================================================>(112 + 2) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.223043017 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=29", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=29,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499662844 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (58 + 55) / 113][Stage 24:============================>                         (60 + 53) / 113][Stage 24:===================================>                  (75 + 38) / 113][Stage 24:==============================================>       (97 + 16) / 113][Stage 24:====================================================> (109 + 4) / 113]                                                                                [Stage 25:============================>                         (61 + 53) / 114][Stage 25:================================>                     (69 + 45) / 114][Stage 25:==============================================>      (100 + 14) / 114][Stage 25:==================================================>   (107 + 7) / 114][Stage 25:=====================================================>(112 + 2) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.141146437 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=23", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=23,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488451084 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (58 + 55) / 113][Stage 26:==============================>                       (63 + 50) / 113][Stage 26:=====================================>                (78 + 35) / 113][Stage 26:===============================================>     (101 + 12) / 113][Stage 26:=====================================================>(111 + 2) / 113][Stage 26:=====================================================>(112 + 1) / 113]                                                                                [Stage 27:===========================>                          (59 + 55) / 114][Stage 27:=============================>                        (63 + 51) / 114][Stage 27:=====================================>                (80 + 34) / 114][Stage 27:==============================================>       (98 + 16) / 114][Stage 27:==================================================>   (106 + 8) / 114][Stage 27:====================================================> (110 + 4) / 114][Stage 27:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.174497616 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=41", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=41,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486455729 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:==============================>                       (63 + 50) / 113][Stage 28:====================================>                 (76 + 37) / 113][Stage 28:==============================================>      (100 + 13) / 113][Stage 28:====================================================> (109 + 4) / 113]                                                                                [Stage 29:============================>                         (60 + 54) / 114][Stage 29:=================================>                    (70 + 44) / 114][Stage 29:========================================>             (86 + 28) / 114][Stage 29:==============================================>      (101 + 13) / 114][Stage 29:===================================================>  (109 + 5) / 114][Stage 29:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.359078464 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=215", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=215,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.530942561 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (58 + 55) / 113][Stage 30:============================>                         (59 + 54) / 113][Stage 30:===================================>                  (74 + 39) / 113][Stage 30:==============================================>       (97 + 16) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:===========================>                          (59 + 55) / 114][Stage 31:=============================>                        (63 + 51) / 114][Stage 31:====================================>                 (78 + 36) / 114][Stage 31:==============================================>      (100 + 14) / 114][Stage 31:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.684369467 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=74", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=74,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478201327 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (58 + 55) / 113][Stage 32:==============================>                       (63 + 50) / 113][Stage 32:==================================>                   (73 + 40) / 113][Stage 32:===============================================>      (99 + 14) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:============================>                         (61 + 53) / 114][Stage 33:==================================>                   (72 + 42) / 114][Stage 33:===========================================>          (92 + 22) / 114][Stage 33:================================================>    (104 + 10) / 114][Stage 33:===================================================>  (109 + 5) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.808697948 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=106", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=106,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.555739487 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:>                                                       (0 + 0) / 113][Stage 34:============================>                         (59 + 54) / 113][Stage 34:=============================>                        (62 + 51) / 113][Stage 34:=======================================>              (82 + 31) / 113][Stage 34:===============================================>     (101 + 12) / 113][Stage 34:====================================================> (110 + 3) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:============================>                         (60 + 54) / 114][Stage 35:==============================>                       (65 + 49) / 114][Stage 35:=======================================>              (84 + 30) / 114][Stage 35:==============================================>       (98 + 16) / 114][Stage 35:===================================================>  (109 + 5) / 114][Stage 35:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.019126255 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=220", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=220,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.508599803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:============================>                         (60 + 53) / 113][Stage 36:===================================>                  (75 + 38) / 113][Stage 36:============================================>         (94 + 19) / 113][Stage 36:=====================================================>(111 + 2) / 113]                                                                                [Stage 37:=============================>                        (62 + 52) / 114][Stage 37:==================================>                   (73 + 41) / 114][Stage 37:============================================>         (93 + 21) / 114][Stage 37:==============================================>      (101 + 13) / 114][Stage 37:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.654695783 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=230", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=230,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476872495 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:============================>                         (60 + 53) / 113][Stage 38:===================================>                  (74 + 39) / 113][Stage 38:==========================================>           (88 + 25) / 113][Stage 38:===================================================>  (107 + 6) / 113]                                                                                [Stage 39:===========================>                          (59 + 55) / 114][Stage 39:=================================>                    (71 + 43) / 114][Stage 39:===========================================>          (91 + 23) / 114][Stage 39:==================================================>   (107 + 7) / 114][Stage 39:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.654472818 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=61", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=61,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.469861988 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:============================>                         (59 + 54) / 113][Stage 40:=============================>                        (61 + 52) / 113][Stage 40:=================================>                    (70 + 43) / 113][Stage 40:==============================================>       (98 + 15) / 113][Stage 40:====================================================> (110 + 3) / 113]                                                                                [Stage 41:=============================>                        (63 + 51) / 114][Stage 41:===================================>                  (74 + 40) / 114][Stage 41:============================================>         (93 + 21) / 114][Stage 41:===================================================>  (108 + 6) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.148652604 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=38", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=38,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45702499 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (58 + 55) / 113][Stage 42:============================>                         (59 + 54) / 113][Stage 42:==================================>                   (72 + 41) / 113][Stage 42:=============================================>        (96 + 17) / 113][Stage 42:====================================================> (110 + 3) / 113]                                                                                [Stage 43:============================>                         (61 + 53) / 114][Stage 43:==================================>                   (73 + 41) / 114][Stage 43:==============================================>       (99 + 15) / 114][Stage 43:====================================================> (110 + 4) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.385809676 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=116", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=116,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440261318 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (58 + 55) / 113][Stage 44:===============================>                      (66 + 47) / 113][Stage 44:======================================>               (80 + 33) / 113][Stage 44:==================================================>   (105 + 8) / 113][Stage 44:====================================================> (110 + 3) / 113]                                                                                [Stage 45:==============================>                       (65 + 49) / 114][Stage 45:===================================>                  (75 + 39) / 114][Stage 45:============================================>         (94 + 20) / 114][Stage 45:=================================================>    (105 + 9) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.728470774 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=46", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=46,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.528485604 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:============================>                         (59 + 54) / 113][Stage 46:==============================>                       (64 + 49) / 113][Stage 46:======================================>               (80 + 33) / 113][Stage 46:===============================================>     (102 + 11) / 113]                                                                                [Stage 47:============================>                         (60 + 54) / 114][Stage 47:=================================>                    (70 + 44) / 114][Stage 47:========================================>             (85 + 29) / 114][Stage 47:==================================================>   (107 + 7) / 114][Stage 47:====================================================> (111 + 3) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.047703617 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=170", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=170,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459788732 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:============================>                         (59 + 54) / 113][Stage 48:================================>                     (68 + 45) / 113][Stage 48:==========================================>           (88 + 25) / 113][Stage 48:=================================================>    (104 + 9) / 113][Stage 48:====================================================> (109 + 4) / 113]                                                                                [Stage 49:============================>                         (61 + 53) / 114][Stage 49:================================>                     (69 + 45) / 114][Stage 49:========================================>             (86 + 28) / 114][Stage 49:==================================================>   (107 + 7) / 114][Stage 49:=====================================================>(112 + 2) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.833487904 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=231", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=231,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447337753 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:============================>                         (59 + 54) / 113][Stage 50:==============================>                       (63 + 50) / 113][Stage 50:========================================>             (85 + 28) / 113][Stage 50:================================================>    (103 + 10) / 113][Stage 50:=====================================================>(112 + 1) / 113]                                                                                [Stage 51:===========================>                          (59 + 55) / 114][Stage 51:=================================>                    (71 + 43) / 114][Stage 51:============================================>         (93 + 21) / 114][Stage 51:===================================================>  (109 + 5) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.515986466 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=28", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=28,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429072582 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (58 + 55) / 113][Stage 52:==============================>                       (63 + 50) / 113][Stage 52:===================================>                  (74 + 39) / 113][Stage 52:=============================================>        (96 + 17) / 113][Stage 52:====================================================> (109 + 4) / 113]                                                                                [Stage 53:=============================>                        (62 + 52) / 114][Stage 53:====================================>                 (76 + 38) / 114][Stage 53:=========================================>            (88 + 26) / 114][Stage 53:================================================>    (104 + 10) / 114][Stage 53:====================================================> (111 + 3) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.550674119 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=94", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=94,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467726366 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:============================>                         (60 + 53) / 113][Stage 54:=================================>                    (71 + 42) / 113][Stage 54:=============================================>        (95 + 18) / 113][Stage 54:================================================>    (103 + 10) / 113][Stage 54:=====================================================>(111 + 2) / 113]                                                                                [Stage 55:============================>                         (60 + 54) / 114][Stage 55:==============================>                       (65 + 49) / 114][Stage 55:==========================================>           (90 + 24) / 114][Stage 55:====================================================> (111 + 3) / 114][Stage 55:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.67963649 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=159", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=159,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428714768 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:============================>                         (59 + 54) / 113][Stage 56:===============================>                      (66 + 47) / 113][Stage 56:========================================>             (84 + 29) / 113][Stage 56:================================================>    (103 + 10) / 113]                                                                                [Stage 57:============================>                         (60 + 54) / 114][Stage 57:==============================>                       (65 + 49) / 114][Stage 57:=========================================>            (88 + 26) / 114][Stage 57:==================================================>   (106 + 8) / 114][Stage 57:=====================================================>(112 + 2) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.682365501 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=70", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=70,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444415025 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:============================>                         (59 + 54) / 113][Stage 58:================================>                     (68 + 45) / 113][Stage 58:===================================>                  (75 + 38) / 113][Stage 58:==============================================>       (97 + 16) / 113][Stage 58:====================================================> (110 + 3) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:============================>                         (60 + 54) / 114][Stage 59:===============================>                      (67 + 47) / 114][Stage 59:=========================================>            (87 + 27) / 114][Stage 59:==============================================>       (99 + 15) / 114][Stage 59:=====================================================>(112 + 2) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.904503618 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44940756 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:============================>                         (59 + 54) / 113][Stage 60:================================>                     (67 + 46) / 113][Stage 60:=======================================>              (82 + 31) / 113][Stage 60:==================================================>   (105 + 8) / 113][Stage 60:====================================================> (110 + 3) / 113]                                                                                [Stage 61:===========================>                          (59 + 55) / 114][Stage 61:===============================>                      (66 + 48) / 114][Stage 61:======================================>               (82 + 32) / 114][Stage 61:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.495811452 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=191", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=191,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425289818 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (58 + 55) / 113][Stage 62:===============================>                      (65 + 48) / 113][Stage 62:======================================>               (81 + 32) / 113][Stage 62:=================================================>    (104 + 9) / 113][Stage 62:=====================================================>(111 + 2) / 113]                                                                                [Stage 63:===========================>                          (58 + 56) / 114][Stage 63:==============================>                       (64 + 50) / 114][Stage 63:====================================>                 (77 + 37) / 114][Stage 63:=================================================>    (105 + 9) / 114][Stage 63:=====================================================>(112 + 2) / 114][Stage 63:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.655124286 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=20", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=20,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433844167 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:============================>                         (59 + 54) / 113][Stage 64:================================>                     (67 + 46) / 113][Stage 64:==========================================>           (89 + 24) / 113][Stage 64:===================================================>  (107 + 6) / 113]                                                                                [Stage 65:============================>                         (61 + 53) / 114][Stage 65:=================================>                    (70 + 44) / 114][Stage 65:======================================>               (82 + 32) / 114][Stage 65:==============================================>      (100 + 14) / 114][Stage 65:===================================================>  (109 + 5) / 114][Stage 65:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.198647341 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=82", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=82,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455612236 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=============================>                        (61 + 52) / 113][Stage 66:===================================>                  (75 + 38) / 113][Stage 66:===========================================>          (92 + 21) / 113][Stage 66:====================================================> (109 + 4) / 113][Stage 66:=====================================================>(111 + 2) / 113]                                                                                [Stage 67:===========================>                          (59 + 55) / 114][Stage 67:==============================>                       (65 + 49) / 114][Stage 67:======================================>               (82 + 32) / 114][Stage 67:==============================================>      (101 + 13) / 114][Stage 67:====================================================> (111 + 3) / 114][Stage 67:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.825931022 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=156", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=156,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422310807 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:============================>                         (59 + 54) / 113][Stage 68:================================>                     (67 + 46) / 113][Stage 68:==========================================>           (89 + 24) / 113][Stage 68:====================================================> (109 + 4) / 113]                                                                                [Stage 69:============================>                         (61 + 53) / 114][Stage 69:===============================>                      (67 + 47) / 114][Stage 69:=======================================>              (84 + 30) / 114][Stage 69:==================================================>   (107 + 7) / 114][Stage 69:====================================================> (111 + 3) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.799260138 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=27", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=27,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429501158 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (59 + 54) / 113][Stage 70:==================================>                   (72 + 41) / 113][Stage 70:============================================>         (93 + 20) / 113][Stage 70:==================================================>   (106 + 7) / 113][Stage 70:=====================================================>(112 + 1) / 113]                                                                                [Stage 71:=============================>                        (62 + 52) / 114][Stage 71:=================================>                    (70 + 44) / 114][Stage 71:=======================================>              (84 + 30) / 114][Stage 71:==============================================>      (101 + 13) / 114][Stage 71:=====================================================>(112 + 2) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.709455597 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=19", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=19,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417928418 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:>                                                       (0 + 0) / 113][Stage 72:===========================>                          (58 + 55) / 113][Stage 72:=============================>                        (61 + 52) / 113][Stage 72:========================================>             (84 + 29) / 113][Stage 72:==================================================>   (105 + 8) / 113][Stage 72:====================================================> (109 + 4) / 113]                                                                                [Stage 73:=============================>                        (62 + 52) / 114][Stage 73:================================>                     (69 + 45) / 114][Stage 73:========================================>             (86 + 28) / 114][Stage 73:==================================================>   (106 + 8) / 114][Stage 73:====================================================> (111 + 3) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.611114583 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=43", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=43,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411534069 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:============================>                         (59 + 54) / 113][Stage 74:==============================>                       (64 + 49) / 113][Stage 74:======================================>               (80 + 33) / 113][Stage 74:===============================================>     (102 + 11) / 113][Stage 74:=====================================================>(111 + 2) / 113]                                                                                [Stage 75:===========================>                          (59 + 55) / 114][Stage 75:=============================>                        (63 + 51) / 114][Stage 75:====================================>                 (77 + 37) / 114][Stage 75:==============================================>      (100 + 14) / 114][Stage 75:=====================================================>(112 + 2) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.055305473 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=152", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=152,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409590794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:============================>                         (60 + 53) / 113][Stage 76:================================>                     (68 + 45) / 113][Stage 76:=======================================>              (82 + 31) / 113][Stage 76:==================================================>   (106 + 7) / 113]                                                                                [Stage 77:=============================>                        (62 + 52) / 114][Stage 77:===================================>                  (75 + 39) / 114][Stage 77:=============================================>        (96 + 18) / 114][Stage 77:=================================================>    (105 + 9) / 114][Stage 77:====================================================> (111 + 3) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.671695318 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=224", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=224,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430503245 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (59 + 54) / 113][Stage 78:==============================>                       (63 + 50) / 113][Stage 78:========================================>             (84 + 29) / 113][Stage 78:==================================================>   (105 + 8) / 113][Stage 78:=====================================================>(112 + 1) / 113]                                                                                [Stage 79:============================>                         (60 + 54) / 114][Stage 79:===============================>                      (67 + 47) / 114][Stage 79:=====================================>                (79 + 35) / 114][Stage 79:=================================================>    (105 + 9) / 114][Stage 79:=====================================================>(112 + 2) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.181104103 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=202", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=202,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414320371 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (60 + 53) / 113][Stage 80:================================>                     (69 + 44) / 113][Stage 80:=============================================>        (96 + 17) / 113][Stage 80:===================================================>  (108 + 5) / 113][Stage 80:=====================================================>(111 + 2) / 113]                                                                                [Stage 81:===========================>                          (59 + 55) / 114][Stage 81:=============================>                        (63 + 51) / 114][Stage 81:==================================>                   (73 + 41) / 114][Stage 81:===========================================>          (92 + 22) / 114][Stage 81:==================================================>   (107 + 7) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.933000924 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=142", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=142,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420217024 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===========================>                          (58 + 55) / 113][Stage 82:==============================>                       (63 + 50) / 113][Stage 82:===================================>                  (74 + 39) / 113][Stage 82:============================================>         (93 + 20) / 113][Stage 82:====================================================> (110 + 3) / 113]                                                                                [Stage 83:============================>                         (61 + 53) / 114][Stage 83:=================================>                    (71 + 43) / 114][Stage 83:========================================>             (86 + 28) / 114][Stage 83:===================================================>  (108 + 6) / 114][Stage 83:=====================================================>(112 + 2) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.821533283 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=102", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=102,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415446293 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:============================>                         (60 + 53) / 113][Stage 84:================================>                     (69 + 44) / 113][Stage 84:============================================>         (93 + 20) / 113][Stage 84:==================================================>   (106 + 7) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:=============================>                        (62 + 52) / 114][Stage 85:=================================>                    (71 + 43) / 114][Stage 85:=============================================>        (97 + 17) / 114][Stage 85:==================================================>   (106 + 8) / 114][Stage 85:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.893388954 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=234", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=234,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4119025 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (58 + 55) / 113][Stage 86:=================================>                    (71 + 42) / 113][Stage 86:===========================================>          (90 + 23) / 113][Stage 86:====================================================> (110 + 3) / 113][Stage 86:=====================================================>(112 + 1) / 113]                                                                                [Stage 87:===========================>                          (59 + 55) / 114][Stage 87:===============================>                      (66 + 48) / 114][Stage 87:========================================>             (86 + 28) / 114][Stage 87:=================================================>    (105 + 9) / 114][Stage 87:=====================================================>(112 + 2) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.625471939 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=50", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=50,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415884935 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:===================================>                  (75 + 38) / 113][Stage 88:============================================>         (93 + 20) / 113][Stage 88:====================================================> (109 + 4) / 113]                                                                                [Stage 89:============================>                         (60 + 54) / 114][Stage 89:===============================>                      (66 + 48) / 114][Stage 89:========================================>             (86 + 28) / 114][Stage 89:=================================================>    (105 + 9) / 114][Stage 89:====================================================> (110 + 4) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.044602654 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=84", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=84,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403613835 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:=============================>                        (61 + 52) / 113][Stage 90:==================================>                   (72 + 41) / 113][Stage 90:========================================>             (84 + 29) / 113][Stage 90:===================================================>  (107 + 6) / 113]                                                                                [Stage 91:============================>                         (60 + 54) / 114][Stage 91:================================>                     (68 + 46) / 114][Stage 91:==========================================>           (89 + 25) / 114][Stage 91:==================================================>   (107 + 7) / 114][Stage 91:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.75665502 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=211", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=211,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403043097 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:============================>                         (59 + 54) / 113][Stage 92:================================>                     (67 + 46) / 113][Stage 92:==========================================>           (89 + 24) / 113][Stage 92:================================================>    (103 + 10) / 113][Stage 92:=====================================================>(111 + 2) / 113]                                                                                [Stage 93:=============================>                        (62 + 52) / 114][Stage 93:=================================>                    (71 + 43) / 114][Stage 93:===========================================>          (92 + 22) / 114][Stage 93:=================================================>    (105 + 9) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.671543718 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=130", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=130,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418290036 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:============================>                         (59 + 54) / 113][Stage 94:================================>                     (67 + 46) / 113][Stage 94:=====================================>                (78 + 35) / 113][Stage 94:===============================================>      (99 + 14) / 113][Stage 94:====================================================> (110 + 3) / 113]                                                                                [Stage 95:=============================>                        (63 + 51) / 114][Stage 95:===================================>                  (75 + 39) / 114][Stage 95:===========================================>          (92 + 22) / 114][Stage 95:=================================================>    (105 + 9) / 114][Stage 95:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.74898988 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=194", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=194,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397305228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (58 + 55) / 113][Stage 96:============================>                         (60 + 53) / 113][Stage 96:===================================>                  (75 + 38) / 113][Stage 96:===========================================>          (92 + 21) / 113][Stage 96:====================================================> (110 + 3) / 113]                                                                                [Stage 97:=============================>                        (63 + 51) / 114][Stage 97:====================================>                 (76 + 38) / 114][Stage 97:=============================================>        (96 + 18) / 114][Stage 97:=================================================>    (105 + 9) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.55675137 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=25", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=25,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397570649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:============================>                         (59 + 54) / 113][Stage 98:================================>                     (69 + 44) / 113][Stage 98:=======================================>              (83 + 30) / 113][Stage 98:==================================================>   (105 + 8) / 113][Stage 98:=====================================================>(112 + 1) / 113]                                                                                [Stage 99:============================>                         (60 + 54) / 114][Stage 99:================================>                     (68 + 46) / 114][Stage 99:=========================================>            (87 + 27) / 114][Stage 99:===============================================>     (103 + 11) / 114][Stage 99:=====================================================>(112 + 2) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.116028223 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=67", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=67,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408781175 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:>                                                      (0 + 0) / 113][Stage 100:===========================>                         (59 + 54) / 113][Stage 100:==============================>                      (65 + 48) / 113][Stage 100:=====================================>               (79 + 34) / 113][Stage 100:============================================>        (95 + 18) / 113][Stage 100:====================================================>(112 + 1) / 113]                                                                                [Stage 101:===========================>                         (60 + 54) / 114][Stage 101:==============================>                      (65 + 49) / 114][Stage 101:=======================================>             (85 + 29) / 114][Stage 101:==============================================>     (103 + 11) / 114][Stage 101:====================================================>(112 + 2) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.202518896 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393366199 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (58 + 55) / 113][Stage 102:==============================>                      (65 + 48) / 113][Stage 102:=======================================>             (84 + 29) / 113][Stage 102:===============================================>    (103 + 10) / 113]                                                                                [Stage 103:===========================>                         (60 + 54) / 114][Stage 103:==================================>                  (74 + 40) / 114][Stage 103:============================================>        (96 + 18) / 114][Stage 103:=================================================>   (106 + 8) / 114][Stage 103:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.678491079 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=247", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=247,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387538929 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (58 + 55) / 113][Stage 104:=============================>                       (62 + 51) / 113][Stage 104:=================================>                   (71 + 42) / 113][Stage 104:=============================================>       (96 + 17) / 113][Stage 104:===================================================> (110 + 3) / 113]                                                                                [Stage 105:=============================>                       (63 + 51) / 114][Stage 105:================================>                    (69 + 45) / 114][Stage 105:===========================================>         (94 + 20) / 114][Stage 105:===================================================> (111 + 3) / 114][Stage 105:====================================================>(112 + 2) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.612590486 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=163", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=163,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418382726 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (58 + 55) / 113][Stage 106:=============================>                       (62 + 51) / 113][Stage 106:====================================>                (77 + 36) / 113][Stage 106:===================================================> (109 + 4) / 113][Stage 106:====================================================>(112 + 1) / 113]                                                                                [Stage 107:=============================>                       (63 + 51) / 114][Stage 107:===================================>                 (77 + 37) / 114][Stage 107:===========================================>         (93 + 21) / 114][Stage 107:=================================================>   (106 + 8) / 114][Stage 107:====================================================>(112 + 2) / 114][Stage 107:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.796920019 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=117", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=117,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383167377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (59 + 54) / 113][Stage 108:==============================>                      (64 + 49) / 113][Stage 108:=======================================>             (84 + 29) / 113][Stage 108:==============================================>     (101 + 12) / 113][Stage 108:===================================================> (110 + 3) / 113]                                                                                [Stage 109:=============================>                       (63 + 51) / 114][Stage 109:=================================>                   (72 + 42) / 114][Stage 109:========================================>            (88 + 26) / 114][Stage 109:==============================================>     (102 + 12) / 114][Stage 109:====================================================>(112 + 2) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.727442494 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394296564 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (59 + 54) / 113][Stage 110:=================================>                   (72 + 41) / 113][Stage 110:===========================================>         (93 + 20) / 113][Stage 110:===================================================> (109 + 4) / 113]                                                                                [Stage 111:============================>                        (61 + 53) / 114][Stage 111:=================================>                   (72 + 42) / 114][Stage 111:============================================>        (96 + 18) / 114][Stage 111:===================================================> (111 + 3) / 114][Stage 111:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.429199008 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=68", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=68,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386910095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (58 + 55) / 113][Stage 112:==============================>                      (66 + 47) / 113][Stage 112:======================================>              (83 + 30) / 113][Stage 112:=================================================>   (105 + 8) / 113][Stage 112:====================================================>(111 + 2) / 113]                                                                                [Stage 113:============================>                        (62 + 52) / 114][Stage 113:================================>                    (70 + 44) / 114][Stage 113:==========================================>          (91 + 23) / 114][Stage 113:==================================================>  (108 + 6) / 114][Stage 113:====================================================>(112 + 2) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.135863228 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=26", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=26,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388496955 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (58 + 55) / 113][Stage 114:============================>                        (60 + 53) / 113][Stage 114:=================================>                   (72 + 41) / 113][Stage 114:============================================>        (94 + 19) / 113][Stage 114:==================================================>  (108 + 5) / 113]                                                                                [Stage 115:============================>                        (61 + 53) / 114][Stage 115:==================================>                  (75 + 39) / 114][Stage 115:=============================================>      (100 + 14) / 114][Stage 115:==================================================>  (109 + 5) / 114][Stage 115:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.21035468 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=195", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=195,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391734372 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (59 + 54) / 113][Stage 116:==============================>                      (66 + 47) / 113][Stage 116:=====================================>               (79 + 34) / 113][Stage 116:===============================================>    (103 + 10) / 113][Stage 116:====================================================>(112 + 1) / 113]                                                                                [Stage 117:============================>                        (61 + 53) / 114][Stage 117:=============================>                       (64 + 50) / 114][Stage 117:========================================>            (87 + 27) / 114][Stage 117:=================================================>   (107 + 7) / 114][Stage 117:===================================================> (111 + 3) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.631808585 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=212", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=212,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402160779 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:============================>                        (60 + 53) / 113][Stage 118:=================================>                   (72 + 41) / 113][Stage 118:========================================>            (86 + 27) / 113][Stage 118:==================================================>  (107 + 6) / 113][Stage 118:===================================================> (110 + 3) / 113]                                                                                [Stage 119:===========================>                         (60 + 54) / 114][Stage 119:===============================>                     (67 + 47) / 114][Stage 119:======================================>              (82 + 32) / 114][Stage 119:==============================================>     (102 + 12) / 114][Stage 119:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.60878923 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=138", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=138,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394158431 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (59 + 54) / 113][Stage 120:=============================>                       (63 + 50) / 113][Stage 120:==================================>                  (74 + 39) / 113][Stage 120:=============================================>       (96 + 17) / 113][Stage 120:===================================================> (110 + 3) / 113]                                                                                [Stage 121:===========================>                         (60 + 54) / 114][Stage 121:==============================>                      (66 + 48) / 114][Stage 121:=========================================>           (90 + 24) / 114][Stage 121:================================================>    (105 + 9) / 114][Stage 121:====================================================>(112 + 2) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.017578796 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386298343 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (59 + 54) / 113][Stage 122:===============================>                     (68 + 45) / 113][Stage 122:=====================================>               (81 + 32) / 113][Stage 122:==============================================>      (99 + 14) / 113][Stage 122:====================================================>(112 + 1) / 113]                                                                                [Stage 123:===========================>                         (60 + 54) / 114][Stage 123:=============================>                       (63 + 51) / 114][Stage 123:====================================>                (79 + 35) / 114][Stage 123:=============================================>      (100 + 14) / 114][Stage 123:=================================================>   (107 + 7) / 114][Stage 123:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.116049475 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=232", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=232,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377745797 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (59 + 54) / 113][Stage 124:================================>                    (70 + 43) / 113][Stage 124:=======================================>             (84 + 29) / 113][Stage 124:==================================================>  (107 + 6) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:===========================>                         (59 + 55) / 114][Stage 125:=============================>                       (63 + 51) / 114][Stage 125:====================================>                (78 + 36) / 114][Stage 125:=============================================>      (100 + 14) / 114][Stage 125:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.580179474 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=115", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=115,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387114886 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (58 + 55) / 113][Stage 126:=============================>                       (63 + 50) / 113][Stage 126:=======================================>             (85 + 28) / 113][Stage 126:==============================================>     (100 + 13) / 113][Stage 126:====================================================>(111 + 2) / 113]                                                                                [Stage 127:===========================>                         (59 + 55) / 114][Stage 127:==============================>                      (65 + 49) / 114][Stage 127:==================================>                  (75 + 39) / 114][Stage 127:=============================================>       (97 + 17) / 114][Stage 127:===================================================> (111 + 3) / 114][Stage 127:====================================================>(112 + 2) / 114][Stage 127:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.91857582 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=164", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=164,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389874584 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (59 + 54) / 113][Stage 128:==============================>                      (65 + 48) / 113][Stage 128:=====================================>               (81 + 32) / 113][Stage 128:==============================================>     (102 + 11) / 113]                                                                                [Stage 129:=============================>                       (63 + 51) / 114][Stage 129:==================================>                  (75 + 39) / 114][Stage 129:===========================================>         (93 + 21) / 114][Stage 129:=================================================>   (107 + 7) / 114][Stage 129:====================================================>(112 + 2) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.691346068 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=190", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=190,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383860033 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (59 + 54) / 113][Stage 130:=================================>                   (72 + 41) / 113][Stage 130:========================================>            (86 + 27) / 113][Stage 130:===============================================>    (103 + 10) / 113]                                                                                [Stage 131:============================>                        (61 + 53) / 114][Stage 131:=================================>                   (73 + 41) / 114][Stage 131:=========================================>           (90 + 24) / 114][Stage 131:=================================================>   (106 + 8) / 114][Stage 131:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.443547401 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=243", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=243,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3793199 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (59 + 54) / 113][Stage 132:============================>                        (61 + 52) / 113][Stage 132:=================================>                   (72 + 41) / 113][Stage 132:============================================>        (94 + 19) / 113][Stage 132:====================================================>(111 + 2) / 113]                                                                                [Stage 133:=============================>                       (63 + 51) / 114][Stage 133:===================================>                 (77 + 37) / 114][Stage 133:=============================================>      (100 + 14) / 114][Stage 133:====================================================>(112 + 2) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.692515412 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=168", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=168,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389848408 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (58 + 55) / 113][Stage 134:=============================>                       (63 + 50) / 113][Stage 134:==================================>                  (74 + 39) / 113][Stage 134:===========================================>         (92 + 21) / 113][Stage 134:==================================================>  (108 + 5) / 113]                                                                                [Stage 135:===========================>                         (60 + 54) / 114][Stage 135:================================>                    (70 + 44) / 114][Stage 135:==========================================>          (92 + 22) / 114][Stage 135:=================================================>   (106 + 8) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.031940904 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392748265 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:=============================>                       (62 + 51) / 113][Stage 136:=================================>                   (71 + 42) / 113][Stage 136:=========================================>           (88 + 25) / 113][Stage 136:=================================================>   (106 + 7) / 113]                                                                                [Stage 137:===========================>                         (59 + 55) / 114][Stage 137:===============================>                     (68 + 46) / 114][Stage 137:====================================>                (79 + 35) / 114][Stage 137:=============================================>       (98 + 16) / 114][Stage 137:=================================================>   (107 + 7) / 114][Stage 137:====================================================>(112 + 2) / 114][Stage 137:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.774862088 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=40", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=40,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394680904 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (58 + 55) / 113][Stage 138:=============================>                       (62 + 51) / 113][Stage 138:====================================>                (78 + 35) / 113][Stage 138:==============================================>     (101 + 12) / 113][Stage 138:====================================================>(111 + 2) / 113]                                                                                [Stage 139:===========================>                         (60 + 54) / 114][Stage 139:==============================>                      (66 + 48) / 114][Stage 139:======================================>              (83 + 31) / 114][Stage 139:==============================================>     (101 + 13) / 114][Stage 139:====================================================>(112 + 2) / 114][Stage 139:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.194191295 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=185", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=185,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389478673 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (58 + 55) / 113][Stage 140:==============================>                      (64 + 49) / 113][Stage 140:===================================>                 (75 + 38) / 113][Stage 140:===============================================>    (103 + 10) / 113][Stage 140:====================================================>(111 + 2) / 113][Stage 140:====================================================>(112 + 1) / 113]                                                                                [Stage 141:===========================>                         (60 + 54) / 114][Stage 141:================================>                    (70 + 44) / 114][Stage 141:==========================================>          (92 + 22) / 114][Stage 141:=================================================>   (107 + 7) / 114][Stage 141:====================================================>(112 + 2) / 114][Stage 141:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.860901401 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=180", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=180,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379439608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (59 + 54) / 113][Stage 142:=============================>                       (63 + 50) / 113][Stage 142:=========================================>           (88 + 25) / 113][Stage 142:==================================================>  (107 + 6) / 113][Stage 142:====================================================>(112 + 1) / 113]                                                                                [Stage 143:===========================>                         (60 + 54) / 114][Stage 143:============================>                        (62 + 52) / 114][Stage 143:=====================================>               (81 + 33) / 114][Stage 143:==================================================>  (109 + 5) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.576904678 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=24", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=24,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474556721 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (58 + 55) / 113][Stage 144:============================>                        (61 + 52) / 113][Stage 144:===================================>                 (76 + 37) / 113][Stage 144:==============================================>      (99 + 14) / 113][Stage 144:===================================================> (110 + 3) / 113]                                                                                [Stage 145:============================>                        (61 + 53) / 114][Stage 145:================================>                    (70 + 44) / 114][Stage 145:==========================================>          (92 + 22) / 114][Stage 145:=================================================>   (107 + 7) / 114][Stage 145:====================================================>(112 + 2) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.141866692 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=166", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=166,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384224204 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (59 + 54) / 113][Stage 146:===============================>                     (68 + 45) / 113][Stage 146:======================================>              (82 + 31) / 113][Stage 146:==================================================>  (107 + 6) / 113][Stage 146:===================================================> (110 + 3) / 113]                                                                                [Stage 147:============================>                        (61 + 53) / 114][Stage 147:=================================>                   (71 + 43) / 114][Stage 147:=========================================>           (90 + 24) / 114][Stage 147:=================================================>   (107 + 7) / 114][Stage 147:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.060357978 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=89", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=89,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38104511 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (59 + 54) / 113][Stage 148:=================================>                   (71 + 42) / 113][Stage 148:===========================================>         (92 + 21) / 113][Stage 148:===================================================> (110 + 3) / 113]                                                                                [Stage 149:===========================>                         (60 + 54) / 114][Stage 149:=============================>                       (63 + 51) / 114][Stage 149:=======================================>             (85 + 29) / 114][Stage 149:==============================================>     (103 + 11) / 114][Stage 149:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.312447672 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379071534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (59 + 54) / 113][Stage 150:=================================>                   (71 + 42) / 113][Stage 150:===========================================>         (92 + 21) / 113][Stage 150:==================================================>  (108 + 5) / 113]                                                                                [Stage 151:===========================>                         (60 + 54) / 114][Stage 151:=================================>                   (72 + 42) / 114][Stage 151:==============================================>      (99 + 15) / 114][Stage 151:==================================================>  (108 + 6) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.571973718 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=149", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=149,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385777467 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (59 + 54) / 113][Stage 152:==============================>                      (65 + 48) / 113][Stage 152:======================================>              (82 + 31) / 113][Stage 152:===============================================>    (103 + 10) / 113]                                                                                [Stage 153:===========================>                         (60 + 54) / 114][Stage 153:===============================>                     (68 + 46) / 114][Stage 153:=====================================>               (81 + 33) / 114][Stage 153:==============================================>     (103 + 11) / 114][Stage 153:===================================================> (111 + 3) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.050506475 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=65", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=65,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387188366 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===========================>                         (59 + 54) / 113][Stage 154:============================>                        (61 + 52) / 113][Stage 154:===================================>                 (75 + 38) / 113][Stage 154:==============================================>      (99 + 14) / 113][Stage 154:====================================================>(112 + 1) / 113]                                                                                [Stage 155:=============================>                       (63 + 51) / 114][Stage 155:==================================>                  (75 + 39) / 114][Stage 155:============================================>        (95 + 19) / 114][Stage 155:===================================================> (110 + 4) / 114][Stage 155:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.809779029 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=83", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=83,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382671813 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:===========================>                         (59 + 54) / 113][Stage 156:=================================>                   (71 + 42) / 113][Stage 156:============================================>        (94 + 19) / 113][Stage 156:=================================================>   (106 + 7) / 113]                                                                                [Stage 157:============================>                        (61 + 53) / 114][Stage 157:=================================>                   (73 + 41) / 114][Stage 157:============================================>        (95 + 19) / 114][Stage 157:==================================================>  (109 + 5) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.712211353 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=48", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=48,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385721631 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (59 + 54) / 113][Stage 158:============================>                        (60 + 53) / 113][Stage 158:===================================>                 (76 + 37) / 113][Stage 158:============================================>        (94 + 19) / 113][Stage 158:===================================================> (109 + 4) / 113]                                                                                [Stage 159:===========================>                         (60 + 54) / 114][Stage 159:===============================>                     (68 + 46) / 114][Stage 159:=======================================>             (85 + 29) / 114][Stage 159:==============================================>     (103 + 11) / 114][Stage 159:===================================================> (110 + 4) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.430995618 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=21", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=21,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401430872 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (58 + 55) / 113][Stage 160:============================>                        (61 + 52) / 113][Stage 160:===================================>                 (75 + 38) / 113][Stage 160:============================================>        (94 + 19) / 113][Stage 160:==================================================>  (107 + 6) / 113]                                                                                [Stage 161:===========================>                         (59 + 55) / 114][Stage 161:=============================>                       (63 + 51) / 114][Stage 161:=====================================>               (80 + 34) / 114][Stage 161:==============================================>     (101 + 13) / 114][Stage 161:====================================================>(112 + 2) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.791251824 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=167", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=167,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385924714 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (58 + 55) / 113][Stage 162:==============================>                      (66 + 47) / 113][Stage 162:=========================================>           (88 + 25) / 113][Stage 162:==================================================>  (108 + 5) / 113]                                                                                [Stage 163:===========================>                         (59 + 55) / 114][Stage 163:=============================>                       (64 + 50) / 114][Stage 163:====================================>                (79 + 35) / 114][Stage 163:=============================================>       (97 + 17) / 114][Stage 163:===================================================> (110 + 4) / 114][Stage 163:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.466566479 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=79", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=79,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382976179 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (59 + 54) / 113][Stage 164:=================================>                   (71 + 42) / 113][Stage 164:===========================================>         (93 + 20) / 113][Stage 164:==================================================>  (107 + 6) / 113]                                                                                [Stage 165:=============================>                       (64 + 50) / 114][Stage 165:===================================>                 (76 + 38) / 114][Stage 165:=============================================>       (98 + 16) / 114][Stage 165:===================================================> (110 + 4) / 114][Stage 165:====================================================>(112 + 2) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.599293058 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=100", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=100,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388862393 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (58 + 55) / 113][Stage 166:==============================>                      (64 + 49) / 113][Stage 166:=====================================>               (81 + 32) / 113][Stage 166:===============================================>    (103 + 10) / 113]                                                                                [Stage 167:============================>                        (62 + 52) / 114][Stage 167:===================================>                 (76 + 38) / 114][Stage 167:===========================================>         (93 + 21) / 114][Stage 167:===================================================> (110 + 4) / 114][Stage 167:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.500064002 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=137", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=137,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380713425 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:============================>                        (60 + 53) / 113][Stage 168:================================>                    (70 + 43) / 113][Stage 168:=======================================>             (84 + 29) / 113][Stage 168:===============================================>    (103 + 10) / 113][Stage 168:====================================================>(111 + 2) / 113]                                                                                [Stage 169:===========================>                         (60 + 54) / 114][Stage 169:===============================>                     (68 + 46) / 114][Stage 169:=======================================>             (85 + 29) / 114][Stage 169:=================================================>   (106 + 8) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.026070091 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=228", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=228,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392431111 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (58 + 55) / 113][Stage 170:=============================>                       (63 + 50) / 113][Stage 170:====================================>                (78 + 35) / 113][Stage 170:==============================================>      (99 + 14) / 113][Stage 170:===================================================> (110 + 3) / 113]                                                                                [Stage 171:============================>                        (62 + 52) / 114][Stage 171:=================================>                   (72 + 42) / 114][Stage 171:============================================>        (96 + 18) / 114][Stage 171:===================================================> (111 + 3) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.811588404 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=51", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=51,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379248369 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:============================>                        (61 + 52) / 113][Stage 172:=================================>                   (72 + 41) / 113][Stage 172:==========================================>          (91 + 22) / 113][Stage 172:==================================================>  (107 + 6) / 113][Stage 172:====================================================>(112 + 1) / 113]                                                                                [Stage 173:===========================>                         (60 + 54) / 114][Stage 173:===============================>                     (68 + 46) / 114][Stage 173:======================================>              (83 + 31) / 114][Stage 173:==============================================>      (99 + 15) / 114][Stage 173:===================================================> (111 + 3) / 114][Stage 173:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.280308864 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=160", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=160,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376389175 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:============================>                        (60 + 53) / 113][Stage 174:==============================>                      (65 + 48) / 113][Stage 174:=======================================>             (85 + 28) / 113][Stage 174:==============================================>     (100 + 13) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:==============================>                      (65 + 49) / 114][Stage 175:====================================>                (78 + 36) / 114][Stage 175:==============================================>     (102 + 12) / 114][Stage 175:====================================================>(112 + 2) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.076135697 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=119", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=119,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376052817 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:============================>                        (61 + 52) / 113][Stage 176:===================================>                 (75 + 38) / 113][Stage 176:============================================>        (94 + 19) / 113][Stage 176:===================================================> (110 + 3) / 113]                                                                                [Stage 177:============================>                        (61 + 53) / 114][Stage 177:=================================>                   (73 + 41) / 114][Stage 177:==========================================>          (91 + 23) / 114][Stage 177:==================================================>  (108 + 6) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.735846849 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=226", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=226,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388803222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:============================>                        (60 + 53) / 113][Stage 178:====================================>                (77 + 36) / 113][Stage 178:===========================================>         (92 + 21) / 113][Stage 178:==================================================>  (107 + 6) / 113][Stage 178:====================================================>(112 + 1) / 113]                                                                                [Stage 179:===========================>                         (60 + 54) / 114][Stage 179:=============================>                       (64 + 50) / 114][Stage 179:=======================================>             (85 + 29) / 114][Stage 179:==================================================>  (108 + 6) / 114][Stage 179:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.507036074 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=173", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=173,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393653938 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (59 + 54) / 113][Stage 180:==============================>                      (64 + 49) / 113][Stage 180:========================================>            (86 + 27) / 113][Stage 180:==============================================>      (99 + 14) / 113]                                                                                [Stage 181:===========================>                         (60 + 54) / 114][Stage 181:=================================>                   (73 + 41) / 114][Stage 181:============================================>        (96 + 18) / 114][Stage 181:=================================================>   (107 + 7) / 114][Stage 181:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.712604024 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=208", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=208,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419701506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (59 + 54) / 113][Stage 182:==============================>                      (65 + 48) / 113][Stage 182:=========================================>           (89 + 24) / 113][Stage 182:===================================================> (110 + 3) / 113]                                                                                [Stage 183:===========================>                         (60 + 54) / 114][Stage 183:===============================>                     (67 + 47) / 114][Stage 183:========================================>            (88 + 26) / 114][Stage 183:===============================================>    (104 + 10) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.667351114 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=108", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=108,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40165387 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:============================>                        (60 + 53) / 113][Stage 184:===============================>                     (67 + 46) / 113][Stage 184:=========================================>           (88 + 25) / 113][Stage 184:==================================================>  (108 + 5) / 113][Stage 184:====================================================>(112 + 1) / 113]                                                                                [Stage 185:===========================>                         (59 + 55) / 114][Stage 185:===============================>                     (68 + 46) / 114][Stage 185:=======================================>             (85 + 29) / 114][Stage 185:==============================================>     (101 + 13) / 114][Stage 185:===================================================> (111 + 3) / 114][Stage 185:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.800566699 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=56", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=56,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38678435 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (59 + 54) / 113][Stage 186:======================================>              (83 + 30) / 113][Stage 186:==============================================>     (102 + 11) / 113][Stage 186:====================================================>(111 + 2) / 113]                                                                                [Stage 187:===========================>                         (60 + 54) / 114][Stage 187:=============================>                       (63 + 51) / 114][Stage 187:======================================>              (83 + 31) / 114][Stage 187:=================================================>   (106 + 8) / 114][Stage 187:====================================================>(112 + 2) / 114][Stage 187:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.348842419 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=45", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=45,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410010462 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:============================>                        (60 + 53) / 113][Stage 188:==================================>                  (74 + 39) / 113][Stage 188:============================================>        (94 + 19) / 113][Stage 188:====================================================>(111 + 2) / 113]                                                                                [Stage 189:===========================>                         (60 + 54) / 114][Stage 189:=============================>                       (64 + 50) / 114][Stage 189:=====================================>               (80 + 34) / 114][Stage 189:==============================================>     (101 + 13) / 114][Stage 189:==================================================>  (109 + 5) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.953043955 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=33", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=33,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378528443 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:============================>                        (60 + 53) / 113][Stage 190:=================================>                   (71 + 42) / 113][Stage 190:==============================================>      (99 + 14) / 113][Stage 190:==================================================>  (107 + 6) / 113][Stage 190:====================================================>(112 + 1) / 113]                                                                                [Stage 191:=============================>                       (64 + 50) / 114][Stage 191:=================================>                   (73 + 41) / 114][Stage 191:=============================================>       (97 + 17) / 114][Stage 191:==================================================>  (108 + 6) / 114][Stage 191:===================================================> (111 + 3) / 114][Stage 191:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.366369772 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=59", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=59,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379824803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (58 + 55) / 113][Stage 192:============================>                        (61 + 52) / 113][Stage 192:======================================>              (83 + 30) / 113][Stage 192:============================================>        (95 + 18) / 113][Stage 192:===================================================> (110 + 3) / 113]                                                                                [Stage 193:===========================>                         (59 + 55) / 114][Stage 193:==============================>                      (66 + 48) / 114][Stage 193:=======================================>             (84 + 30) / 114][Stage 193:=============================================>       (97 + 17) / 114][Stage 193:===================================================> (111 + 3) / 114][Stage 193:====================================================>(112 + 2) / 114][Stage 193:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.421205921 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=104", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=104,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39151899 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:============================>                        (60 + 53) / 113][Stage 194:==================================>                  (74 + 39) / 113][Stage 194:===========================================>         (93 + 20) / 113][Stage 194:===================================================> (110 + 3) / 113]                                                                                [Stage 195:============================>                        (61 + 53) / 114][Stage 195:=====================================>               (81 + 33) / 114][Stage 195:==============================================>     (101 + 13) / 114][Stage 195:==================================================>  (109 + 5) / 114][Stage 195:===================================================> (111 + 3) / 114][Stage 195:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.822968745 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=62", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=62,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400599421 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (58 + 55) / 113][Stage 196:==============================>                      (66 + 47) / 113][Stage 196:========================================>            (86 + 27) / 113][Stage 196:=================================================>   (105 + 8) / 113][Stage 196:====================================================>(111 + 2) / 113]                                                                                [Stage 197:============================>                        (62 + 52) / 114][Stage 197:==================================>                  (75 + 39) / 114][Stage 197:===========================================>         (93 + 21) / 114][Stage 197:===================================================> (111 + 3) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.387320977 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=81", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=81,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396515887 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (59 + 54) / 113][Stage 198:===============================>                     (67 + 46) / 113][Stage 198:========================================>            (86 + 27) / 113][Stage 198:================================================>    (104 + 9) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:===========================>                         (59 + 55) / 114][Stage 199:==============================>                      (66 + 48) / 114][Stage 199:=========================================>           (90 + 24) / 114][Stage 199:==============================================>     (101 + 13) / 114][Stage 199:==================================================>  (109 + 5) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.704679422 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=141", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=141,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384337404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:============================>                        (60 + 53) / 113][Stage 200:================================>                    (69 + 44) / 113][Stage 200:========================================>            (86 + 27) / 113][Stage 200:===================================================> (110 + 3) / 113]                                                                                [Stage 201:===========================>                         (60 + 54) / 114][Stage 201:===============================>                     (68 + 46) / 114][Stage 201:=======================================>             (86 + 28) / 114][Stage 201:==============================================>     (101 + 13) / 114][Stage 201:=================================================>   (107 + 7) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.43377583 seconds
res203: Int = 0

scala> 

scala> :quit

real	11m29.897s
user	11m59.180s
sys	1m39.844s
