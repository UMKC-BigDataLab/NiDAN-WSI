Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/25 05:06:30 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 05:06:45 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 05:06:45 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 05:06:45 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/25 05:06:48 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 05:06:58 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170525050647-0640).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.412666611 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIn dex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:============>                                          (27 + 88) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:===================================>                   (75 + 40) / 115][Stage 0:========================================>              (85 + 30) / 115][Stage 0:============================================>          (92 + 23) / 115][Stage 0:==============================================>        (98 + 17) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:===================================================>   (107 + 8) / 115]                                                                                [Stage 1:==========================>                            (56 + 60) / 116][Stage 1:=============================>                         (63 + 53) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:=======================================>               (83 + 33) / 116][Stage 1:=============================================>         (97 + 19) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.605256551 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZInd ex<=65", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=65,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.831454779 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 2:==================>                                    (41 + 79) / 120][Stage 2:=====================>                                 (47 + 73) / 120][Stage 2:========================>                              (54 + 66) / 120][Stage 2:=========================>                             (55 + 65) / 120][Stage 2:===========================>                           (60 + 60) / 120][Stage 2:================================>                      (71 + 49) / 120][Stage 2:======================================>                (83 + 37) / 120][Stage 2:=============================================>        (101 + 19) / 120][Stage 2:====================================================>  (115 + 5) / 120]                                                                                [Stage 3:===========================>                           (61 + 60) / 121][Stage 3:============================>                          (62 + 59) / 121][Stage 3:==============================>                        (68 + 53) / 121][Stage 3:==================================>                    (75 + 46) / 121][Stage 3:=====================================>                 (82 + 39) / 121][Stage 3:=============================================>        (103 + 18) / 121][Stage 3:==================================================>    (112 + 9) / 121][Stage 3:=====================================================> (118 + 3) / 121][Stage 3:======================================================>(119 + 2) / 121][Stage 3:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 6.823513548 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide92"
dataSource: String = /nidan/orc/individualORC/slide92

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIn dex<=143", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=143,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.670294419 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 4:===========================>                           (57 + 56) / 113][Stage 4:============================>                          (58 + 55) / 113][Stage 4:==============================>                        (63 + 50) / 113][Stage 4:================================>                      (67 + 46) / 113][Stage 4:====================================>                  (76 + 37) / 113][Stage 4:============================================>          (91 + 22) / 113][Stage 4:==================================================>    (104 + 9) / 113][Stage 4:=====================================================> (109 + 4) / 113]                                                                                [Stage 5:============================>                          (60 + 54) / 114][Stage 5:=============================>                         (61 + 53) / 114][Stage 5:===================================>                   (74 + 40) / 114][Stage 5:=========================================>             (86 + 28) / 114][Stage 5:=============================================>         (95 + 19) / 114][Stage 5:===================================================>   (107 + 7) / 114]                                                                                Time elapsed: 5.363130497 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIn dex<=214", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=214,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518281181 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 6:======================================>                (80 + 35) / 115][Stage 6:========================================>              (85 + 30) / 115][Stage 6:==========================================>            (89 + 26) / 115][Stage 6:==============================================>        (98 + 17) / 115][Stage 6:===============================================>      (102 + 13) / 115][Stage 6:=====================================================> (112 + 3) / 115][Stage 6:======================================================>(114 + 1) / 115]                                                                                [Stage 7:======================================>                (82 + 34) / 116][Stage 7:==========================================>            (90 + 26) / 116][Stage 7:===============================================>      (101 + 15) / 116][Stage 7:==================================================>    (107 + 9) / 116][Stage 7:=====================================================> (112 + 4) / 116][Stage 7:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.101107438 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIn dex<=134", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=134,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.539795051 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 8:=================================>                     (72 + 46) / 118][Stage 8:==================================>                    (74 + 44) / 118][Stage 8:======================================>                (83 + 35) / 118][Stage 8:============================================>          (95 + 23) / 118][Stage 8:================================================>     (107 + 11) / 118][Stage 8:====================================================>  (113 + 5) / 118]                                                                                [Stage 9:=================================>                     (73 + 46) / 119][Stage 9:====================================>                  (79 + 40) / 119][Stage 9:===========================================>           (94 + 25) / 119][Stage 9:================================================>     (107 + 12) / 119][Stage 9:==================================================>    (110 + 9) / 119][Stage 9:===================================================>   (111 + 8) / 119][Stage 9:======================================================>(117 + 2) / 119][Stage 9:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.881654451 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIn dex<=119", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=119,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.556080818 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 10:===========================>                          (57 + 56) / 113][Stage 10:============================>                         (60 + 53) / 113][Stage 10:===================================>                  (74 + 39) / 113][Stage 10:=========================================>            (86 + 27) / 113][Stage 10:==============================================>       (97 + 16) / 113][Stage 10:=================================================>    (104 + 9) / 113]                                                                                [Stage 11:===========================>                          (59 + 55) / 114][Stage 11:=============================>                        (62 + 52) / 114][Stage 11:==================================>                   (72 + 42) / 114][Stage 11:========================================>             (86 + 28) / 114][Stage 11:==============================================>      (100 + 14) / 114][Stage 11:=====================================================>(112 + 2) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.803755589 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide99"
dataSource: String = /nidan/orc/individualORC/slide99

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZInd ex<=33", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=33,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.618710264 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 12:===========================>                          (58 + 55) / 113][Stage 12:================================>                     (67 + 46) / 113][Stage 12:====================================>                 (77 + 36) / 113][Stage 12:============================================>         (94 + 19) / 113][Stage 12:==================================================>   (105 + 8) / 113]                                                                                [Stage 13:============================>                         (60 + 54) / 114][Stage 13:================================>                     (68 + 46) / 114][Stage 13:====================================>                 (76 + 38) / 114][Stage 13:===========================================>          (91 + 23) / 114][Stage 13:===============================================>     (102 + 12) / 114][Stage 13:===================================================>  (109 + 5) / 114][Stage 13:====================================================> (110 + 4) / 114][Stage 13:=====================================================>(112 + 2) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.053936733 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIn dex<=200", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=200,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.498763337 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 14:================================>                     (72 + 46) / 118][Stage 14:===================================>                  (77 + 41) / 118][Stage 14:========================================>             (89 + 29) / 118][Stage 14:=============================================>        (99 + 19) / 118][Stage 14:==================================================>   (110 + 8) / 118]                                                                                [Stage 15:=================================>                    (74 + 45) / 119][Stage 15:====================================>                 (81 + 38) / 119][Stage 15:==========================================>           (93 + 26) / 119][Stage 15:==============================================>      (104 + 15) / 119][Stage 15:===================================================>  (113 + 6) / 119][Stage 15:=====================================================>(117 + 2) / 119][Stage 15:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.801761367 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIn dex<=239", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486144673 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 16:================================>                     (67 + 46) / 113][Stage 16:=================================>                    (71 + 42) / 113][Stage 16:=====================================>                (78 + 35) / 113][Stage 16:===========================================>          (90 + 23) / 113][Stage 16:==============================================>      (100 + 13) / 113][Stage 16:=================================================>    (104 + 9) / 113][Stage 16:===================================================>  (107 + 6) / 113][Stage 16:====================================================> (109 + 4) / 113]                                                                                [Stage 17:===================================>                  (75 + 39) / 114][Stage 17:=======================================>              (84 + 30) / 114][Stage 17:=============================================>        (97 + 17) / 114][Stage 17:==================================================>   (107 + 7) / 114][Stage 17:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.851774036 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZInd ex<=71", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=71,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479929052 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 18:===================================>                  (74 + 39) / 113][Stage 18:=========================================>            (86 + 27) / 113][Stage 18:===========================================>          (92 + 21) / 113][Stage 18:=================================================>    (104 + 9) / 113][Stage 18:====================================================> (110 + 3) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:====================================>                 (78 + 36) / 114][Stage 19:=========================================>            (88 + 26) / 114][Stage 19:==============================================>       (99 + 15) / 114][Stage 19:====================================================> (111 + 3) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.476736052 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIn dex<=195", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=195,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.485843395 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 20:===================================>                  (74 + 39) / 113][Stage 20:=======================================>              (82 + 31) / 113][Stage 20:==========================================>           (89 + 24) / 113][Stage 20:=============================================>        (95 + 18) / 113][Stage 20:==================================================>   (105 + 8) / 113][Stage 20:=====================================================>(112 + 1) / 113]                                                                                [Stage 21:======================================>               (81 + 33) / 114][Stage 21:============================================>         (93 + 21) / 114][Stage 21:=================================================>    (105 + 9) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.260155669 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIn dex<=161", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=161,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484944655 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 22:===============================>                      (68 + 47) / 115][Stage 22:====================================>                 (78 + 37) / 115][Stage 22:============================================>         (95 + 20) / 115][Stage 22:===============================================>     (104 + 11) / 115][Stage 22:===================================================>  (109 + 6) / 115][Stage 22:====================================================> (111 + 4) / 115][Stage 22:=====================================================>(113 + 2) / 115]                                                                                [Stage 23:==============================>                       (66 + 50) / 116][Stage 23:====================================>                 (78 + 38) / 116][Stage 23:============================================>         (95 + 21) / 116][Stage 23:==================================================>   (109 + 7) / 116][Stage 23:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.551588152 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZInd ex<=20", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=20,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47094481 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 24:=================================>                    (73 + 45) / 118][Stage 24:==================================>                   (75 + 43) / 118][Stage 24:======================================>               (85 + 33) / 118][Stage 24:===========================================>          (95 + 23) / 118][Stage 24:================================================>    (107 + 11) / 118][Stage 24:===================================================>  (112 + 6) / 118][Stage 24:====================================================> (115 + 3) / 118]                                                                                [Stage 25:==================================>                   (75 + 44) / 119][Stage 25:===================================>                  (78 + 41) / 119][Stage 25:========================================>             (89 + 30) / 119][Stage 25:=================================================>    (110 + 9) / 119][Stage 25:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.174031388 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIn dex<=203", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=203,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493762681 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 26:===========================>                          (58 + 55) / 113][Stage 26:===============================>                      (66 + 47) / 113][Stage 26:========================================>             (84 + 29) / 113][Stage 26:============================================>         (94 + 19) / 113][Stage 26:==================================================>   (106 + 7) / 113]                                                                                [Stage 27:============================>                         (60 + 54) / 114][Stage 27:===============================>                      (67 + 47) / 114][Stage 27:=============================================>        (95 + 19) / 114][Stage 27:===============================================>     (103 + 11) / 114][Stage 27:====================================================> (111 + 3) / 114][Stage 27:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.103403346 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide91"
dataSource: String = /nidan/orc/individualORC/slide91

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIn dex<=224", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=224,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.512601548 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 28:==========================>                           (60 + 61) / 121][Stage 28:=============================>                        (67 + 54) / 121][Stage 28:======================================>               (86 + 35) / 121][Stage 28:================================================>    (110 + 11) / 121][Stage 28:====================================================> (117 + 4) / 121][Stage 28:=====================================================>(120 + 1) / 121]                                                                                [Stage 29:===========================>                          (61 + 61) / 122][Stage 29:===========================>                          (63 + 59) / 122][Stage 29:====================================>                 (83 + 39) / 122][Stage 29:===========================================>          (98 + 24) / 122][Stage 29:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 4.409851097 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZInd ex<=36", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=36,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412852249 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 30:======================================>               (83 + 32) / 115][Stage 30:============================================>         (95 + 20) / 115][Stage 30:================================================>    (105 + 10) / 115][Stage 30:=====================================================>(114 + 1) / 115]                                                                                [Stage 31:========================================>             (87 + 29) / 116][Stage 31:============================================>         (96 + 20) / 116][Stage 31:==================================================>   (109 + 7) / 116][Stage 31:====================================================> (113 + 3) / 116][Stage 31:=====================================================>(114 + 2) / 116][Stage 31:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.590038338 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide93"
dataSource: String = /nidan/orc/individualORC/slide93

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZInd ex<=17", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=17,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432717518 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 32:==================================>                   (73 + 40) / 113][Stage 32:=======================================>              (82 + 31) / 113][Stage 32:==========================================>           (88 + 25) / 113][Stage 32:===================================================>  (107 + 6) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:===================================>                  (74 + 40) / 114][Stage 33:====================================>                 (78 + 36) / 114][Stage 33:===========================================>          (92 + 22) / 114][Stage 33:===============================================>     (103 + 11) / 114][Stage 33:==================================================>   (107 + 7) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.493908645 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide94"
dataSource: String = /nidan/orc/individualORC/slide94

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIn dex<=169", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=169,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497029405 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 34:===========================>                          (60 + 60) / 120][Stage 34:================================>                     (73 + 47) / 120][Stage 34:========================================>             (90 + 30) / 120][Stage 34:================================================>    (110 + 10) / 120][Stage 34:=====================================================>(119 + 1) / 120]                                                                                [Stage 35:===========================>                          (61 + 60) / 121][Stage 35:==============================>                       (68 + 53) / 121][Stage 35:=======================================>              (88 + 33) / 121][Stage 35:=============================================>       (103 + 18) / 121][Stage 35:==================================================>   (113 + 8) / 121][Stage 35:====================================================> (118 + 3) / 121][Stage 35:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.956012436 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIn dex<=151", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=151,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401284046 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 36:======================================>               (81 + 34) / 115][Stage 36:==========================================>           (91 + 24) / 115][Stage 36:===============================================>     (104 + 11) / 115][Stage 36:====================================================> (112 + 3) / 115]                                                                                [Stage 37:=========================================>            (89 + 27) / 116][Stage 37:===============================================>     (103 + 13) / 116][Stage 37:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.691705757 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIn dex<=130", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=130,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443163204 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 38:====================================>                 (77 + 36) / 113][Stage 38:==========================================>           (88 + 25) / 113][Stage 38:===============================================>     (101 + 12) / 113][Stage 38:===================================================>  (108 + 5) / 113][Stage 38:=====================================================>(111 + 2) / 113]                                                                                [Stage 39:======================================>               (81 + 33) / 114][Stage 39:=========================================>            (88 + 26) / 114][Stage 39:==============================================>       (98 + 16) / 114][Stage 39:====================================================> (110 + 4) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.074373679 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZInde x<=10", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=10,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415685934 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 40:=================================>                    (70 + 43) / 113][Stage 40:=======================================>              (82 + 31) / 113][Stage 40:===========================================>          (91 + 22) / 113][Stage 40:=================================================>    (104 + 9) / 113][Stage 40:=====================================================>(112 + 1) / 113]                                                                                [Stage 41:==================================>                   (72 + 42) / 114][Stage 41:======================================>               (81 + 33) / 114][Stage 41:============================================>         (94 + 20) / 114][Stage 41:=================================================>    (105 + 9) / 114][Stage 41:==================================================>   (107 + 7) / 114][Stage 41:====================================================> (111 + 3) / 114][Stage 41:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 7.391390128 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZInd ex<=58", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=58,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.443034746 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 42:======================================>               (81 + 34) / 115][Stage 42:========================================>             (87 + 28) / 115][Stage 42:===============================================>     (104 + 11) / 115][Stage 42:=====================================================>(114 + 1) / 115]                                                                                [Stage 43:======================================>               (82 + 34) / 116][Stage 43:============================================>         (96 + 20) / 116][Stage 43:================================================>    (106 + 10) / 116][Stage 43:==================================================>   (109 + 7) / 116][Stage 43:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 6.104021343 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIn dex<=196", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=196,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.473426119 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 44:===========================>                          (58 + 55) / 113][Stage 44:==============================>                       (63 + 50) / 113][Stage 44:===================================>                  (75 + 38) / 113][Stage 44:===============================================>     (101 + 12) / 113]                                                                                [Stage 45:============================>                         (60 + 54) / 114][Stage 45:==================================>                   (72 + 42) / 114][Stage 45:==========================================>           (90 + 24) / 114][Stage 45:================================================>    (104 + 10) / 114][Stage 45:====================================================> (111 + 3) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.689650475 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIn dex<=182", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=182,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430515442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 46:====================================>                 (76 + 37) / 113][Stage 46:=======================================>              (82 + 31) / 113][Stage 46:============================================>         (94 + 19) / 113][Stage 46:=================================================>    (104 + 9) / 113][Stage 46:=====================================================>(111 + 2) / 113]                                                                                [Stage 47:===================================>                  (74 + 40) / 114][Stage 47:========================================>             (85 + 29) / 114][Stage 47:=============================================>        (96 + 18) / 114][Stage 47:=================================================>    (105 + 9) / 114][Stage 47:==================================================>   (107 + 7) / 114][Stage 47:===================================================>  (109 + 5) / 114][Stage 47:=====================================================>(112 + 2) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.94769079 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIn dex<=170", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=170,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393184227 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 48:>                                                       (0 + 0) / 115][Stage 48:======================================>               (82 + 33) / 115][Stage 48:==========================================>           (91 + 24) / 115][Stage 48:=================================================>    (106 + 9) / 115]                                                                                [Stage 49:======================================>               (83 + 33) / 116][Stage 49:==========================================>           (91 + 25) / 116][Stage 49:==============================================>      (102 + 14) / 116][Stage 49:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.719529474 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZInd ex<=60", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=60,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474693982 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 50:======================================>               (81 + 34) / 115][Stage 50:======================================>               (83 + 32) / 115][Stage 50:============================================>         (94 + 21) / 115][Stage 50:===============================================>     (104 + 11) / 115][Stage 50:=================================================>    (106 + 9) / 115][Stage 50:===================================================>  (110 + 5) / 115][Stage 50:====================================================> (112 + 3) / 115][Stage 50:=====================================================>(114 + 1) / 115]                                                                                [Stage 51:======================================>               (82 + 34) / 116][Stage 51:========================================>             (88 + 28) / 116][Stage 51:===============================================>     (103 + 13) / 116][Stage 51:==================================================>   (108 + 8) / 116][Stage 51:====================================================> (112 + 4) / 116][Stage 51:====================================================> (113 + 3) / 116][Stage 51:=====================================================>(114 + 2) / 116][Stage 51:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.370413498 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIn dex<=172", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=172,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409507695 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 52:================================>                     (72 + 46) / 118][Stage 52:=====================================>                (83 + 35) / 118][Stage 52:============================================>        (100 + 18) / 118][Stage 52:===================================================>  (112 + 6) / 118][Stage 52:=====================================================>(116 + 2) / 118][Stage 52:=====================================================>(117 + 1) / 118]                                                                                [Stage 53:==================================>                   (76 + 43) / 119][Stage 53:========================================>             (90 + 29) / 119][Stage 53:=================================================>    (110 + 9) / 119][Stage 53:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.932736162 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZInd ex<=46", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=46,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.473906983 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 54:=================================>                    (71 + 44) / 115][Stage 54:=========================================>            (88 + 27) / 115][Stage 54:==============================================>      (101 + 14) / 115][Stage 54:===================================================>  (110 + 5) / 115][Stage 54:=====================================================>(114 + 1) / 115]                                                                                [Stage 55:==================================>                   (74 + 42) / 116][Stage 55:======================================>               (83 + 33) / 116][Stage 55:============================================>         (95 + 21) / 116][Stage 55:==============================================>       (99 + 17) / 116][Stage 55:===============================================>     (105 + 11) / 116][Stage 55:===================================================>  (110 + 6) / 116][Stage 55:====================================================> (112 + 4) / 116][Stage 55:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 7.942181791 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIn dex<=205", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=205,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420128061 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 56:================================>                     (72 + 46) / 118][Stage 56:==================================>                   (75 + 43) / 118][Stage 56:=====================================>                (83 + 35) / 118][Stage 56:==============================================>      (103 + 15) / 118]                                                                                [Stage 57:==================================>                   (75 + 44) / 119][Stage 57:===================================>                  (79 + 40) / 119][Stage 57:============================================>         (98 + 21) / 119][Stage 57:===================================================>  (114 + 5) / 119][Stage 57:=====================================================>(117 + 2) / 119][Stage 57:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.668536507 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIn dex<=218", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=218,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44964024 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 58:==========================>                           (60 + 61) / 121][Stage 58:============================>                         (64 + 57) / 121][Stage 58:=================================>                    (76 + 45) / 121][Stage 58:===========================================>          (97 + 24) / 121][Stage 58:=====================================================>(119 + 2) / 121]                                                                                [Stage 59:===========================>                          (61 + 61) / 122][Stage 59:=============================>                        (67 + 55) / 122][Stage 59:======================================>               (86 + 36) / 122][Stage 59:============================================>        (103 + 19) / 122][Stage 59:==================================================>   (114 + 8) / 122][Stage 59:=====================================================>(120 + 2) / 122][Stage 59:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.195196712 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIn dex<=187", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=187,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441185853 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 60:============================>                         (59 + 54) / 113][Stage 60:==================================>                   (72 + 41) / 113][Stage 60:=============================================>        (96 + 17) / 113][Stage 60:===================================================>  (108 + 5) / 113][Stage 60:======================================================(113 + 0) / 113]                                                                                [Stage 61:============================>                         (61 + 53) / 114][Stage 61:===============================>                      (66 + 48) / 114][Stage 61:=====================================>                (80 + 34) / 114][Stage 61:=================================================>    (105 + 9) / 114][Stage 61:====================================================> (111 + 3) / 114][Stage 61:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.855443153 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIn dex<=147", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=147,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47167394 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 62:>                                                       (0 + 0) / 120][Stage 62:===========================>                          (60 + 60) / 120][Stage 62:=============================>                        (65 + 55) / 120][Stage 62:====================================>                 (81 + 39) / 120][Stage 62:=============================================>       (104 + 16) / 120][Stage 62:=====================================================>(119 + 1) / 120]                                                                                [Stage 63:===========================>                          (61 + 60) / 121][Stage 63:============================>                         (63 + 58) / 121][Stage 63:=================================>                    (75 + 46) / 121][Stage 63:============================================>        (101 + 20) / 121][Stage 63:====================================================> (117 + 4) / 121][Stage 63:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.45407999 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIn dex<=156", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=156,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427953421 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 64:==============================>                       (64 + 51) / 115][Stage 64:===================================>                  (76 + 39) / 115][Stage 64:=============================================>        (96 + 19) / 115][Stage 64:==================================================>   (107 + 8) / 115][Stage 64:=====================================================>(113 + 2) / 115]                                                                                [Stage 65:===============================>                      (68 + 48) / 116][Stage 65:==========================================>           (92 + 24) / 116][Stage 65:==============================================>      (102 + 14) / 116][Stage 65:===================================================>  (111 + 5) / 116][Stage 65:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.936894279 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide91"
dataSource: String = /nidan/orc/individualORC/slide91

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZInd ex<=40", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=40,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462268372 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 66:==========================>                           (60 + 61) / 121][Stage 66:===========================>                          (61 + 60) / 121][Stage 66:================================>                     (72 + 49) / 121][Stage 66:=========================================>            (94 + 27) / 121][Stage 66:=================================================>    (112 + 9) / 121]                                                                                [Stage 67:===========================>                          (63 + 59) / 122][Stage 67:===============================>                      (72 + 50) / 122][Stage 67:===========================================>          (99 + 23) / 122][Stage 67:====================================================> (118 + 4) / 122][Stage 67:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.550431248 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZInd ex<=22", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=22,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413099849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 68:============================>                         (59 + 54) / 113][Stage 68:==============================>                       (63 + 50) / 113][Stage 68:=====================================>                (78 + 35) / 113][Stage 68:===============================================>      (99 + 14) / 113][Stage 68:=====================================================>(112 + 1) / 113]                                                                                [Stage 69:============================>                         (60 + 54) / 114][Stage 69:==============================>                       (65 + 49) / 114][Stage 69:=======================================>              (83 + 31) / 114][Stage 69:=================================================>    (105 + 9) / 114][Stage 69:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.03099842 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZInd ex<=90", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=90,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408907986 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 70:=================================>                    (73 + 45) / 118][Stage 70:====================================>                 (80 + 38) / 118][Stage 70:========================================>             (89 + 29) / 118][Stage 70:================================================>    (108 + 10) / 118]                                                                                [Stage 71:=================================>                    (73 + 46) / 119][Stage 71:====================================>                 (81 + 38) / 119][Stage 71:=======================================>              (88 + 31) / 119][Stage 71:============================================>        (100 + 19) / 119][Stage 71:===================================================>  (113 + 6) / 119][Stage 71:====================================================> (116 + 3) / 119][Stage 71:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.83781761 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZInd ex<=89", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=89,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437549291 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 72:============================>                         (60 + 53) / 113][Stage 72:=================================>                    (70 + 43) / 113][Stage 72:==========================================>           (88 + 25) / 113][Stage 72:==================================================>   (105 + 8) / 113][Stage 72:=====================================================>(112 + 1) / 113]                                                                                [Stage 73:============================>                         (60 + 54) / 114][Stage 73:================================>                     (69 + 45) / 114][Stage 73:=========================================>            (88 + 26) / 114][Stage 73:===================================================>  (108 + 6) / 114][Stage 73:=====================================================>(112 + 2) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.009166006 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIn dex<=194", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=194,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396887555 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 74:================================>                     (72 + 46) / 118][Stage 74:====================================>                 (80 + 38) / 118][Stage 74:=============================================>       (102 + 16) / 118][Stage 74:====================================================> (114 + 4) / 118]                                                                                [Stage 75:=================================>                    (73 + 46) / 119][Stage 75:====================================>                 (80 + 39) / 119][Stage 75:==============================================>      (105 + 14) / 119][Stage 75:====================================================> (116 + 3) / 119][Stage 75:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.185749468 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIn dex<=157", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=157,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375530676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 76:======================================>               (82 + 33) / 115][Stage 76:========================================>             (87 + 28) / 115][Stage 76:==============================================>      (100 + 15) / 115][Stage 76:===================================================>  (109 + 6) / 115][Stage 76:=====================================================>(114 + 1) / 115]                                                                                [Stage 77:=======================================>              (84 + 32) / 116][Stage 77:========================================>             (87 + 29) / 116][Stage 77:==============================================>      (102 + 14) / 116][Stage 77:====================================================> (113 + 3) / 116][Stage 77:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.014218621 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIn dex<=193", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=193,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371783773 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 78:======================================>               (82 + 33) / 115][Stage 78:==============================================>       (98 + 17) / 115][Stage 78:===================================================>  (110 + 5) / 115]                                                                                [Stage 79:=======================================>              (84 + 32) / 116][Stage 79:===========================================>          (94 + 22) / 116][Stage 79:=================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.589346962 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIn dex<=126", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=126,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42420794 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 80:==========================>                           (60 + 61) / 121][Stage 80:===========================>                          (62 + 59) / 121][Stage 80:================================>                     (72 + 49) / 121][Stage 80:=========================================>            (94 + 27) / 121][Stage 80:================================================>    (111 + 10) / 121]                                                                                [Stage 81:============================>                         (64 + 58) / 122][Stage 81:===============================>                      (72 + 50) / 122][Stage 81:=========================================>            (93 + 29) / 122][Stage 81:==================================================>   (113 + 9) / 122][Stage 81:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.254404877 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIn dex<=152", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=152,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386261106 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 82:================================>                     (72 + 46) / 118][Stage 82:====================================>                 (79 + 39) / 118][Stage 82:============================================>         (97 + 21) / 118][Stage 82:===================================================>  (113 + 5) / 118][Stage 82:=====================================================>(116 + 2) / 118]                                                                                [Stage 83:==================================>                   (75 + 44) / 119][Stage 83:======================================>               (84 + 35) / 119][Stage 83:===========================================>          (96 + 23) / 119][Stage 83:==================================================>   (112 + 7) / 119][Stage 83:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.373363947 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZInd ex<=101", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=101,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407088145 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 84:===============================>                      (67 + 48) / 115][Stage 84:======================================>               (83 + 32) / 115][Stage 84:=============================================>        (96 + 19) / 115][Stage 84:===================================================>  (110 + 5) / 115]                                                                                [Stage 85:====================================>                 (79 + 37) / 116][Stage 85:===========================================>          (93 + 23) / 116][Stage 85:==============================================>      (102 + 14) / 116][Stage 85:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.755311476 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZInd ex<=51", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=51,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415422033 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 86:==========================>                           (60 + 61) / 121][Stage 86:===============================>                      (71 + 50) / 121][Stage 86:========================================>             (90 + 31) / 121][Stage 86:=============================================>       (105 + 16) / 121][Stage 86:=====================================================>(120 + 1) / 121]                                                                                [Stage 87:===========================>                          (61 + 61) / 122][Stage 87:============================>                         (65 + 57) / 122][Stage 87:==================================>                   (77 + 45) / 122][Stage 87:===========================================>         (101 + 21) / 122][Stage 87:==================================================>   (114 + 8) / 122][Stage 87:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.348541711 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide85"
dataSource: String = /nidan/orc/individualORC/slide85

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIn dex<=166", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=166,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418671336 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:================================>                     (69 + 44) / 113][Stage 88:===========================================>          (92 + 21) / 113][Stage 88:====================================================> (109 + 4) / 113]                                                                                [Stage 89:=============================>                        (62 + 52) / 114][Stage 89:===================================>                  (74 + 40) / 114][Stage 89:===========================================>          (92 + 22) / 114][Stage 89:===================================================>  (108 + 6) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.978674961 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZInd ex<=30", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=30,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359062683 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 90:======================================>               (82 + 33) / 115][Stage 90:=======================================>              (85 + 30) / 115][Stage 90:==============================================>       (98 + 17) / 115][Stage 90:===================================================>  (109 + 6) / 115][Stage 90:=====================================================>(114 + 1) / 115]                                                                                [Stage 91:======================================>               (82 + 34) / 116][Stage 91:=========================================>            (89 + 27) / 116][Stage 91:==============================================>      (101 + 15) / 116][Stage 91:===================================================>  (110 + 6) / 116][Stage 91:====================================================> (112 + 4) / 116][Stage 91:====================================================> (113 + 3) / 116][Stage 91:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.490574167 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIn dex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400576942 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 92:===============================>                      (67 + 48) / 115][Stage 92:=====================================>                (79 + 36) / 115][Stage 92:===========================================>          (93 + 22) / 115][Stage 92:====================================================> (112 + 3) / 115]                                                                                [Stage 93:=================================>                    (72 + 44) / 116][Stage 93:=========================================>            (90 + 26) / 116][Stage 93:=================================================>    (107 + 9) / 116][Stage 93:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.702696096 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIn dex<=236", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=236,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429476967 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 94:===========================>                          (60 + 60) / 120][Stage 94:=============================>                        (66 + 54) / 120][Stage 94:===================================>                  (78 + 42) / 120][Stage 94:=============================================>       (103 + 17) / 120][Stage 94:===================================================>  (115 + 5) / 120]                                                                                [Stage 95:===========================>                          (62 + 59) / 121][Stage 95:================================>                     (73 + 48) / 121][Stage 95:===========================================>          (97 + 24) / 121][Stage 95:================================================>    (110 + 11) / 121][Stage 95:=====================================================>(119 + 2) / 121][Stage 95:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.938977073 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIn dex<=228", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=228,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375617039 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 96:=====================================>                (79 + 34) / 113][Stage 96:==========================================>           (88 + 25) / 113][Stage 96:================================================>    (103 + 10) / 113][Stage 96:=====================================================>(112 + 1) / 113]                                                                                [Stage 97:====================================>                 (77 + 37) / 114][Stage 97:========================================>             (85 + 29) / 114][Stage 97:=============================================>        (96 + 18) / 114][Stage 97:=================================================>    (105 + 9) / 114][Stage 97:=====================================================>(112 + 2) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.269668692 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZInd ex<=78", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=78,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400046361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 98:============================>                         (60 + 53) / 113][Stage 98:=================================>                    (70 + 43) / 113][Stage 98:===========================================>          (92 + 21) / 113][Stage 98:=====================================================>(111 + 2) / 113]                                                                                [Stage 99:===========================>                          (59 + 55) / 114][Stage 99:================================>                     (69 + 45) / 114][Stage 99:=========================================>            (87 + 27) / 114][Stage 99:===============================================>     (103 + 11) / 114][Stage 99:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.308059488 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide94"
dataSource: String = /nidan/orc/individualORC/slide94

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZInd ex<=93", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=93,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406251767 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 100:==========================>                          (60 + 60) / 120][Stage 100:===========================>                         (62 + 58) / 120][Stage 100:==================================>                  (78 + 42) / 120][Stage 100:=============================================>      (105 + 15) / 120][Stage 100:===================================================> (117 + 3) / 120]                                                                                [Stage 101:============================>                        (66 + 55) / 121][Stage 101:================================>                    (75 + 46) / 121][Stage 101:==========================================>         (100 + 21) / 121][Stage 101:===================================================> (117 + 4) / 121][Stage 101:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.698943024 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZInd ex<=53", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=53,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341794409 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 102:======================================>              (83 + 32) / 115][Stage 102:=========================================>           (91 + 24) / 115][Stage 102:=============================================>      (100 + 15) / 115][Stage 102:==================================================>  (110 + 5) / 115][Stage 102:===================================================> (111 + 4) / 115][Stage 102:====================================================>(113 + 2) / 115]                                                                                [Stage 103:======================================>              (85 + 31) / 116][Stage 103:==========================================>          (94 + 22) / 116][Stage 103:===============================================>    (106 + 10) / 116][Stage 103:=================================================>   (109 + 7) / 116][Stage 103:===================================================> (112 + 4) / 116][Stage 103:====================================================>(114 + 2) / 116][Stage 103:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.689420278 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIn dex<=181", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=181,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414552135 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 104:==========================>                          (60 + 60) / 120][Stage 104:=============================>                       (66 + 54) / 120][Stage 104:=================================>                   (75 + 45) / 120][Stage 104:===========================================>         (99 + 21) / 120][Stage 104:====================================================>(118 + 2) / 120]                                                                                [Stage 105:===========================>                         (62 + 59) / 121][Stage 105:=============================>                       (67 + 54) / 121][Stage 105:==========================================>          (97 + 24) / 121][Stage 105:=================================================>   (113 + 8) / 121][Stage 105:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.037278557 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZInd ex<=49", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=49,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38663495 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 106:================================>                    (73 + 45) / 118][Stage 106:===================================>                 (79 + 39) / 118][Stage 106:===========================================>         (96 + 22) / 118][Stage 106:===================================================> (115 + 3) / 118]                                                                                [Stage 107:================================>                    (73 + 46) / 119][Stage 107:===================================>                 (80 + 39) / 119][Stage 107:===========================================>         (98 + 21) / 119][Stage 107:=================================================>   (111 + 8) / 119][Stage 107:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.395467457 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIn dex<=186", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=186,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454426212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 108:==========================>                          (61 + 59) / 120][Stage 108:==============================>                      (70 + 50) / 120][Stage 108:===========================================>         (99 + 21) / 120][Stage 108:===================================================> (116 + 4) / 120][Stage 108:====================================================>(119 + 1) / 120]                                                                                [Stage 109:==========================>                          (61 + 60) / 121][Stage 109:===============================>                     (71 + 50) / 121][Stage 109:======================================>              (87 + 34) / 121][Stage 109:===========================================>        (101 + 20) / 121][Stage 109:===================================================> (118 + 3) / 121][Stage 109:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.127164203 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZInd ex<=74", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=74,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375665241 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 110:=================================>                   (74 + 44) / 118][Stage 110:=======================================>             (89 + 29) / 118][Stage 110:=============================================>      (104 + 14) / 118][Stage 110:==================================================>  (112 + 6) / 118][Stage 110:====================================================>(117 + 1) / 118]                                                                                [Stage 111:================================>                    (73 + 46) / 119][Stage 111:==================================>                  (78 + 41) / 119][Stage 111:==========================================>          (95 + 24) / 119][Stage 111:============================================>       (102 + 17) / 119][Stage 111:==================================================>  (113 + 6) / 119][Stage 111:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.854865639 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIn dex<=109", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=109,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361739869 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 112:================================>                    (72 + 46) / 118][Stage 112:================================>                    (73 + 45) / 118][Stage 112:====================================>                (81 + 37) / 118][Stage 112:========================================>            (91 + 27) / 118][Stage 112:==============================================>     (105 + 13) / 118][Stage 112:===================================================> (115 + 3) / 118][Stage 112:====================================================>(117 + 1) / 118]                                                                                [Stage 113:================================>                    (73 + 46) / 119][Stage 113:==================================>                  (78 + 41) / 119][Stage 113:======================================>              (86 + 33) / 119][Stage 113:============================================>       (101 + 18) / 119][Stage 113:==================================================>  (114 + 5) / 119][Stage 113:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.970412375 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZInd ex<=59", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=59,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413054996 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 114:==========================>                          (61 + 60) / 121][Stage 114:==============================>                      (69 + 52) / 121][Stage 114:======================================>              (89 + 32) / 121][Stage 114:=============================================>      (105 + 16) / 121][Stage 114:====================================================>(119 + 2) / 121]                                                                                [Stage 115:===========================>                         (64 + 58) / 122][Stage 115:====================================>                (84 + 38) / 122][Stage 115:==============================================>     (108 + 14) / 122][Stage 115:===================================================> (119 + 3) / 122][Stage 115:====================================================>(120 + 2) / 122][Stage 115:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.585433729 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIn dex<=128", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=128,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375447522 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 116:====================================>                (78 + 35) / 113][Stage 116:=========================================>           (89 + 24) / 113][Stage 116:==============================================>     (100 + 13) / 113][Stage 116:=================================================>   (106 + 7) / 113][Stage 116:====================================================>(111 + 2) / 113]                                                                                [Stage 117:=====================================>               (80 + 34) / 114][Stage 117:=========================================>           (89 + 25) / 114][Stage 117:=============================================>       (97 + 17) / 114][Stage 117:===================================================> (111 + 3) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.327381088 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIn dex<=112", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=112,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38409821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 118:============================>                        (61 + 52) / 113][Stage 118:===============================>                     (68 + 45) / 113][Stage 118:==========================================>          (90 + 23) / 113][Stage 118:==================================================>  (107 + 6) / 113]                                                                                [Stage 119:============================>                        (61 + 53) / 114][Stage 119:================================>                    (69 + 45) / 114][Stage 119:====================================>                (79 + 35) / 114][Stage 119:==============================================>     (103 + 11) / 114][Stage 119:===================================================> (111 + 3) / 114][Stage 119:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.40406269 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIn dex<=127", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=127,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352417561 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 120:>                                                      (0 + 0) / 113][Stage 120:====================================>                (77 + 36) / 113][Stage 120:==========================================>          (90 + 23) / 113][Stage 120:==============================================>     (100 + 13) / 113][Stage 120:=================================================>   (106 + 7) / 113][Stage 120:====================================================>(112 + 1) / 113]                                                                                [Stage 121:==================================>                  (74 + 40) / 114][Stage 121:=======================================>             (85 + 29) / 114][Stage 121:============================================>        (96 + 18) / 114][Stage 121:================================================>    (105 + 9) / 114][Stage 121:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.019178812 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZInd ex<=96", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=96,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352574302 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 122:================================>                    (70 + 43) / 113][Stage 122:======================================>              (83 + 30) / 113][Stage 122:==========================================>          (91 + 22) / 113][Stage 122:================================================>    (104 + 9) / 113][Stage 122:====================================================>(111 + 2) / 113]                                                                                [Stage 123:==================================>                  (75 + 39) / 114][Stage 123:=========================================>           (89 + 25) / 114][Stage 123:==============================================>     (103 + 11) / 114][Stage 123:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.057101447 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide100"
dataSource: String = /nidan/orc/individualORC/slide100

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZInd ex<=73", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=73,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353295682 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 124:===================================>                 (76 + 37) / 113][Stage 124:=========================================>           (89 + 24) / 113][Stage 124:=============================================>       (97 + 16) / 113][Stage 124:==================================================>  (108 + 5) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:===================================>                 (77 + 37) / 114][Stage 125:========================================>            (87 + 27) / 114][Stage 125:=============================================>      (100 + 14) / 114][Stage 125:==================================================>  (108 + 6) / 114][Stage 125:====================================================>(112 + 2) / 114][Stage 125:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.37604616 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIn dex<=234", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=234,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349000218 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 126:=================================>                   (71 + 42) / 113][Stage 126:=====================================>               (80 + 33) / 113][Stage 126:============================================>        (95 + 18) / 113][Stage 126:==================================================>  (107 + 6) / 113]                                                                                [Stage 127:==================================>                  (75 + 39) / 114][Stage 127:========================================>            (87 + 27) / 114][Stage 127:============================================>        (96 + 18) / 114][Stage 127:==================================================>  (109 + 5) / 114][Stage 127:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.964428586 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIn dex<=197", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=197,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409539954 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 128:==========================>                          (61 + 59) / 120][Stage 128:==============================>                      (68 + 52) / 120][Stage 128:======================================>              (87 + 33) / 120][Stage 128:=================================================>   (112 + 8) / 120]                                                                                [Stage 129:============================>                        (64 + 57) / 121][Stage 129:================================>                    (75 + 46) / 121][Stage 129:==========================================>          (96 + 25) / 121][Stage 129:=================================================>   (114 + 7) / 121][Stage 129:====================================================>(119 + 2) / 121][Stage 129:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.23646713 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide99"
dataSource: String = /nidan/orc/individualORC/slide99

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIn dex<=199", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=199,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390863578 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 130:===========================>                         (58 + 55) / 113][Stage 130:=============================>                       (63 + 50) / 113][Stage 130:====================================>                (78 + 35) / 113][Stage 130:========================================>            (87 + 26) / 113][Stage 130:=================================================>   (105 + 8) / 113][Stage 130:=====================================================(113 + 0) / 113]                                                                                [Stage 131:===========================>                         (60 + 54) / 114][Stage 131:===============================>                     (68 + 46) / 114][Stage 131:=======================================>             (84 + 30) / 114][Stage 131:=============================================>      (100 + 14) / 114][Stage 131:===================================================> (110 + 4) / 114][Stage 131:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.863108792 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZInde x<=15", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=15,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385332633 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 132:===========================>                         (58 + 55) / 113][Stage 132:============================>                        (61 + 52) / 113][Stage 132:====================================>                (78 + 35) / 113][Stage 132:==========================================>          (91 + 22) / 113][Stage 132:===================================================> (110 + 3) / 113]                                                                                [Stage 133:===========================>                         (59 + 55) / 114][Stage 133:============================>                        (61 + 53) / 114][Stage 133:=================================>                   (73 + 41) / 114][Stage 133:============================================>        (96 + 18) / 114][Stage 133:================================================>    (105 + 9) / 114][Stage 133:===================================================> (110 + 4) / 114][Stage 133:====================================================>(112 + 2) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.783174308 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide95"
dataSource: String = /nidan/orc/individualORC/slide95

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZInd ex<=82", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=82,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377980726 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 134:=============================>                       (64 + 51) / 115][Stage 134:==================================>                  (74 + 41) / 115][Stage 134:==========================================>          (93 + 22) / 115][Stage 134:==================================================>  (109 + 6) / 115][Stage 134:===================================================> (112 + 3) / 115][Stage 134:====================================================>(114 + 1) / 115]                                                                                [Stage 135:===============================>                     (70 + 46) / 116][Stage 135:======================================>              (85 + 31) / 116][Stage 135:============================================>        (98 + 18) / 116][Stage 135:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.935619488 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide93"
dataSource: String = /nidan/orc/individualORC/slide93

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIn dex<=216", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=216,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353596384 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 136:=================================>                   (71 + 42) / 113][Stage 136:======================================>              (82 + 31) / 113][Stage 136:==========================================>          (90 + 23) / 113][Stage 136:==============================================>     (102 + 11) / 113][Stage 136:====================================================>(111 + 2) / 113]                                                                                [Stage 137:=====================================>               (81 + 33) / 114][Stage 137:==========================================>          (92 + 22) / 114][Stage 137:==============================================>     (103 + 11) / 114][Stage 137:==================================================>  (109 + 5) / 114][Stage 137:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.072898996 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIn dex<=227", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=227,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389694777 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 138:===========================>                         (58 + 55) / 113][Stage 138:==============================>                      (65 + 48) / 113][Stage 138:=====================================>               (79 + 34) / 113][Stage 138:============================================>        (94 + 19) / 113][Stage 138:=================================================>   (106 + 7) / 113][Stage 138:====================================================>(112 + 1) / 113]                                                                                [Stage 139:===========================>                         (59 + 55) / 114][Stage 139:==============================>                      (66 + 48) / 114][Stage 139:====================================>                (79 + 35) / 114][Stage 139:===========================================>         (94 + 20) / 114][Stage 139:==============================================>     (103 + 11) / 114][Stage 139:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.900206017 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZInd ex<=27", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=27,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348088579 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 140:===================================>                 (75 + 38) / 113][Stage 140:======================================>              (82 + 31) / 113][Stage 140:===========================================>         (93 + 20) / 113][Stage 140:==================================================>  (108 + 5) / 113]                                                                                [Stage 141:=====================================>               (81 + 33) / 114][Stage 141:=========================================>           (89 + 25) / 114][Stage 141:============================================>        (96 + 18) / 114][Stage 141:==============================================>     (102 + 12) / 114][Stage 141:==================================================>  (109 + 5) / 114][Stage 141:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 6.834855194 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZInd ex<=57", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=57,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40298703 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 142:============================>                        (64 + 56) / 120][Stage 142:================================>                    (74 + 46) / 120][Stage 142:======================================>              (88 + 32) / 120][Stage 142:=================================================>   (113 + 7) / 120]                                                                                [Stage 143:===========================>                         (63 + 58) / 121][Stage 143:=================================>                   (76 + 45) / 121][Stage 143:=======================================>             (91 + 30) / 121][Stage 143:===============================================>    (110 + 11) / 121][Stage 143:=================================================>   (114 + 7) / 121][Stage 143:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.869116394 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide94"
dataSource: String = /nidan/orc/individualORC/slide94

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIn dex<=235", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=235,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398163846 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 144:==========================>                          (61 + 59) / 120][Stage 144:=============================>                       (67 + 53) / 120][Stage 144:======================================>              (88 + 32) / 120][Stage 144:==============================================>     (108 + 12) / 120]                                                                                [Stage 145:============================>                        (65 + 56) / 121][Stage 145:==================================>                  (78 + 43) / 121][Stage 145:===========================================>        (102 + 19) / 121][Stage 145:====================================================>(119 + 2) / 121][Stage 145:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.760625738 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZInd ex<=61", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=61,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400824489 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 146:==========================>                          (60 + 60) / 120][Stage 146:=============================>                       (67 + 53) / 120][Stage 146:======================================>              (87 + 33) / 120][Stage 146:=================================================>   (113 + 7) / 120]                                                                                [Stage 147:=============================>                       (68 + 53) / 121][Stage 147:=================================>                   (77 + 44) / 121][Stage 147:==========================================>          (97 + 24) / 121][Stage 147:==============================================>     (108 + 13) / 121][Stage 147:==================================================>  (116 + 5) / 121][Stage 147:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.735334038 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIn dex<=120", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=120,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360152171 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 148:================================>                    (72 + 46) / 118][Stage 148:=================================>                   (75 + 43) / 118][Stage 148:===================================>                 (80 + 38) / 118][Stage 148:=======================================>             (89 + 29) / 118][Stage 148:============================================>       (100 + 18) / 118][Stage 148:====================================================>(116 + 2) / 118]                                                                                [Stage 149:=================================>                   (75 + 44) / 119][Stage 149:===================================>                 (80 + 39) / 119][Stage 149:========================================>            (91 + 28) / 119][Stage 149:=============================================>      (103 + 16) / 119][Stage 149:==================================================>  (114 + 5) / 119][Stage 149:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.124660898 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIn dex<=247", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=247,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33630455 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 150:======================================>              (83 + 32) / 115][Stage 150:========================================>            (88 + 27) / 115][Stage 150:=============================================>      (101 + 14) / 115][Stage 150:=================================================>   (108 + 7) / 115][Stage 150:====================================================>(114 + 1) / 115]                                                                                [Stage 151:=====================================>               (83 + 33) / 116][Stage 151:========================================>            (88 + 28) / 116][Stage 151:============================================>       (100 + 16) / 116][Stage 151:===============================================>    (106 + 10) / 116][Stage 151:====================================================>(114 + 2) / 116][Stage 151:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.176930588 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZInd ex<=98", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=98,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398019907 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 152:==========================>                          (60 + 61) / 121][Stage 152:===========================>                         (63 + 58) / 121][Stage 152:==============================>                      (70 + 51) / 121][Stage 152:===========================================>         (99 + 22) / 121][Stage 152:===================================================> (118 + 3) / 121]                                                                                [Stage 153:==========================>                          (61 + 61) / 122][Stage 153:==============================>                      (71 + 51) / 122][Stage 153:====================================>                (84 + 38) / 122][Stage 153:===========================================>         (99 + 23) / 122][Stage 153:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 4.918493876 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZInd ex<=95", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=95,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338826373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 154:====================================>                (80 + 35) / 115][Stage 154:========================================>            (88 + 27) / 115][Stage 154:==================================================>  (109 + 6) / 115][Stage 154:====================================================>(114 + 1) / 115]                                                                                [Stage 155:======================================>              (84 + 32) / 116][Stage 155:=========================================>           (90 + 26) / 116][Stage 155:=================================================>   (108 + 8) / 116][Stage 155:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.669465663 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIn dex<=135", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=135,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375326967 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 156:================================>                    (72 + 46) / 118][Stage 156:==================================>                  (76 + 42) / 118][Stage 156:===========================================>         (97 + 21) / 118][Stage 156:====================================================>(116 + 2) / 118]                                                                                [Stage 157:================================>                    (73 + 46) / 119][Stage 157:==================================>                  (77 + 42) / 119][Stage 157:=======================================>             (89 + 30) / 119][Stage 157:================================================>    (110 + 9) / 119][Stage 157:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.370460652 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIn dex<=209", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=209,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390364881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 158:==========================>                          (60 + 61) / 121][Stage 158:============================>                        (64 + 57) / 121][Stage 158:==================================>                  (79 + 42) / 121][Stage 158:=======================================>             (91 + 30) / 121][Stage 158:=================================================>   (112 + 9) / 121][Stage 158:====================================================>(120 + 1) / 121]                                                                                [Stage 159:==========================>                          (61 + 61) / 122][Stage 159:==============================>                      (71 + 51) / 122][Stage 159:========================================>            (94 + 28) / 122][Stage 159:=================================================>   (113 + 9) / 122][Stage 159:===================================================> (118 + 4) / 122][Stage 159:===================================================> (119 + 3) / 122][Stage 159:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.872931603 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIn dex<=133", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=133,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360263013 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 160:=====================================>               (79 + 34) / 113][Stage 160:==========================================>          (91 + 22) / 113][Stage 160:==============================================>     (100 + 13) / 113][Stage 160:===================================================> (109 + 4) / 113]                                                                                [Stage 161:====================================>                (78 + 36) / 114][Stage 161:=========================================>           (89 + 25) / 114][Stage 161:==============================================>      (99 + 15) / 114]                                                                                Time elapsed: 2.797500167 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide97"
dataSource: String = /nidan/orc/individualORC/slide97

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIn dex<=146", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=146,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340491815 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 162:======================================>              (84 + 31) / 115][Stage 162:==========================================>          (92 + 23) / 115][Stage 162:==============================================>     (103 + 12) / 115][Stage 162:==================================================>  (110 + 5) / 115][Stage 162:====================================================>(113 + 2) / 115]                                                                                [Stage 163:=====================================>               (81 + 35) / 116][Stage 163:=========================================>           (90 + 26) / 116][Stage 163:=============================================>      (101 + 15) / 116][Stage 163:==================================================>  (111 + 5) / 116][Stage 163:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.051698763 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZInd ex<=52", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=52,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369111422 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 164:==================================>                  (75 + 40) / 115][Stage 164:========================================>            (87 + 28) / 115][Stage 164:==============================================>     (102 + 13) / 115][Stage 164:==================================================>  (110 + 5) / 115][Stage 164:====================================================>(114 + 1) / 115]                                                                                [Stage 165:===============================>                     (69 + 47) / 116][Stage 165:====================================>                (80 + 36) / 116][Stage 165:========================================>            (88 + 28) / 116][Stage 165:=============================================>       (99 + 17) / 116][Stage 165:==============================================>     (104 + 12) / 116][Stage 165:=================================================>   (108 + 8) / 116][Stage 165:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 8.942858002 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide93"
dataSource: String = /nidan/orc/individualORC/slide93

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIn dex<=211", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=211,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362593136 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 166:=================================>                   (72 + 41) / 113][Stage 166:=====================================>               (81 + 32) / 113][Stage 166:==========================================>          (91 + 22) / 113][Stage 166:================================================>    (104 + 9) / 113][Stage 166:====================================================>(112 + 1) / 113]                                                                                [Stage 167:==================================>                  (74 + 40) / 114][Stage 167:======================================>              (83 + 31) / 114][Stage 167:===========================================>         (93 + 21) / 114][Stage 167:==============================================>     (101 + 13) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.082860118 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIn dex<=129", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=129,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388924101 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 168:==========================>                          (60 + 60) / 120][Stage 168:===========================>                         (63 + 57) / 120][Stage 168:=================================>                   (75 + 45) / 120][Stage 168:==========================================>          (97 + 23) / 120][Stage 168:=================================================>   (113 + 7) / 120]                                                                                [Stage 169:==========================>                          (61 + 60) / 121][Stage 169:================================>                    (74 + 47) / 121][Stage 169:========================================>            (93 + 28) / 121][Stage 169:=================================================>   (112 + 9) / 121][Stage 169:====================================================>(119 + 2) / 121][Stage 169:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.120351982 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIn dex<=198", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=198,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39937219 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 170:===========================>                         (58 + 55) / 113][Stage 170:============================>                        (61 + 52) / 113][Stage 170:===================================>                 (76 + 37) / 113][Stage 170:=============================================>       (96 + 17) / 113][Stage 170:====================================================>(111 + 2) / 113]                                                                                [Stage 171:===========================>                         (59 + 55) / 114][Stage 171:==============================>                      (66 + 48) / 114][Stage 171:=====================================>               (81 + 33) / 114][Stage 171:=============================================>       (97 + 17) / 114][Stage 171:=================================================>   (107 + 7) / 114][Stage 171:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.572111355 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIn dex<=232", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=232,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394713166 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 172:==========================>                          (60 + 60) / 120][Stage 172:=============================>                       (67 + 53) / 120][Stage 172:===================================>                 (80 + 40) / 120][Stage 172:==============================================>     (107 + 13) / 120][Stage 172:===================================================> (117 + 3) / 120]                                                                                [Stage 173:=============================>                       (68 + 53) / 121][Stage 173:===================================>                 (82 + 39) / 121][Stage 173:==========================================>          (96 + 25) / 121][Stage 173:==================================================>  (116 + 5) / 121][Stage 173:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.152429977 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIn dex<=167", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=167,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39771281 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 174:==========================>                          (60 + 61) / 121][Stage 174:===========================>                         (63 + 58) / 121][Stage 174:==================================>                  (78 + 43) / 121][Stage 174:==========================================>          (96 + 25) / 121][Stage 174:===============================================>    (110 + 11) / 121]                                                                                [Stage 175:===========================>                         (63 + 59) / 122][Stage 175:=================================>                   (76 + 46) / 122][Stage 175:=======================================>             (92 + 30) / 122][Stage 175:=================================================>   (114 + 8) / 122][Stage 175:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.560272809 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZInd ex<=104", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=104,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343002819 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 176:>                                                      (0 + 0) / 113][Stage 176:===================================>                 (76 + 37) / 113][Stage 176:======================================>              (82 + 31) / 113][Stage 176:=============================================>       (96 + 17) / 113][Stage 176:=================================================>   (106 + 7) / 113][Stage 176:===================================================> (110 + 3) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:===================================>                 (77 + 37) / 114][Stage 177:=========================================>           (89 + 25) / 114][Stage 177:=============================================>       (97 + 17) / 114][Stage 177:==================================================>  (109 + 5) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.334730201 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZInd ex<=64", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=64,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362197797 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 178:================================>                    (72 + 46) / 118][Stage 178:===================================>                 (80 + 38) / 118][Stage 178:============================================>       (100 + 18) / 118]                                                                                [Stage 179:=================================>                   (75 + 44) / 119][Stage 179:==================================>                  (78 + 41) / 119][Stage 179:==========================================>          (95 + 24) / 119][Stage 179:==================================================>  (113 + 6) / 119][Stage 179:===================================================> (116 + 3) / 119][Stage 179:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.031593223 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIn dex<=148", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=148,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37569303 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 180:=================================>                   (74 + 44) / 118][Stage 180:===================================>                 (79 + 39) / 118][Stage 180:========================================>            (90 + 28) / 118][Stage 180:============================================>        (99 + 19) / 118][Stage 180:==================================================>  (112 + 6) / 118][Stage 180:====================================================>(117 + 1) / 118]                                                                                [Stage 181:================================>                    (74 + 45) / 119][Stage 181:==================================>                  (77 + 42) / 119][Stage 181:=======================================>             (89 + 30) / 119][Stage 181:============================================>       (102 + 17) / 119][Stage 181:==================================================>  (114 + 5) / 119][Stage 181:====================================================>(117 + 2) / 119][Stage 181:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.47683885 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide93"
dataSource: String = /nidan/orc/individualORC/slide93

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIn dex<=124", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=124,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382997257 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 182:====================================>                (78 + 35) / 113][Stage 182:=========================================>           (89 + 24) / 113][Stage 182:==============================================>     (101 + 12) / 113][Stage 182:====================================================>(111 + 2) / 113][Stage 182:====================================================>(112 + 1) / 113]                                                                                [Stage 183:=====================================>               (80 + 34) / 114][Stage 183:=========================================>           (89 + 25) / 114][Stage 183:=============================================>       (98 + 16) / 114][Stage 183:=================================================>   (106 + 8) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.16605781 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIn dex<=242", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=242,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391533465 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 184:==========================>                          (60 + 60) / 120][Stage 184:================================>                    (74 + 46) / 120][Stage 184:=======================================>             (90 + 30) / 120][Stage 184:===================================================> (116 + 4) / 120]                                                                                [Stage 185:===========================>                         (62 + 59) / 121][Stage 185:==============================>                      (69 + 52) / 121][Stage 185:==========================================>          (96 + 25) / 121][Stage 185:===================================================> (117 + 4) / 121][Stage 185:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.319304628 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIn dex<=150", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=150,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395114069 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 186:==========================>                          (60 + 61) / 121][Stage 186:===========================>                         (63 + 58) / 121][Stage 186:================================>                    (75 + 46) / 121][Stage 186:======================================>              (88 + 33) / 121][Stage 186:============================================>       (103 + 18) / 121][Stage 186:====================================================>(120 + 1) / 121]                                                                                [Stage 187:==========================>                          (61 + 61) / 122][Stage 187:============================>                        (65 + 57) / 122][Stage 187:================================>                    (75 + 47) / 122][Stage 187:========================================>            (93 + 29) / 122][Stage 187:=================================================>   (113 + 9) / 122][Stage 187:====================================================>(120 + 2) / 122][Stage 187:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.664389273 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZInd ex<=42", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=42,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399830753 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 188:===========================>                         (62 + 58) / 120][Stage 188:==============================>                      (70 + 50) / 120][Stage 188:=======================================>             (90 + 30) / 120][Stage 188:===============================================>    (109 + 11) / 120]                                                                                [Stage 189:===========================>                         (62 + 59) / 121][Stage 189:===============================>                     (72 + 49) / 121][Stage 189:========================================>            (92 + 29) / 121][Stage 189:==================================================>  (116 + 5) / 121][Stage 189:====================================================>(119 + 2) / 121][Stage 189:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.242396402 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZInd ex<=75", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=75,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382504697 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 190:===========================>                         (59 + 54) / 113][Stage 190:============================>                        (61 + 52) / 113][Stage 190:===================================>                 (75 + 38) / 113][Stage 190:===========================================>         (92 + 21) / 113][Stage 190:==================================================>  (108 + 5) / 113]                                                                                [Stage 191:=============================>                       (63 + 51) / 114][Stage 191:==================================>                  (74 + 40) / 114][Stage 191:=========================================>           (90 + 24) / 114][Stage 191:=================================================>   (106 + 8) / 114][Stage 191:===================================================> (111 + 3) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.912275057 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIn dex<=230", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=230,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.330718629 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 192:======================================>              (83 + 32) / 115][Stage 192:==========================================>          (93 + 22) / 115][Stage 192:===================================================> (111 + 4) / 115]                                                                                [Stage 193:======================================>              (85 + 31) / 116][Stage 193:=============================================>      (101 + 15) / 116][Stage 193:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.475192254 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZInde x<=9", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=9,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356642553 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 194:===================================>                 (75 + 38) / 113][Stage 194:=======================================>             (84 + 29) / 113][Stage 194:==========================================>          (91 + 22) / 113][Stage 194:==============================================>     (102 + 11) / 113][Stage 194:==================================================>  (108 + 5) / 113][Stage 194:====================================================>(111 + 2) / 113]                                                                                [Stage 195:==================================>                  (74 + 40) / 114][Stage 195:=======================================>             (85 + 29) / 114][Stage 195:=========================================>           (90 + 24) / 114][Stage 195:=============================================>      (100 + 14) / 114][Stage 195:=================================================>   (106 + 8) / 114][Stage 195:===================================================> (110 + 4) / 114][Stage 195:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 8.519802775 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZInd ex<=37", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=37,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37301103 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 196:==================================>                  (74 + 39) / 113][Stage 196:======================================>              (82 + 31) / 113][Stage 196:==========================================>          (90 + 23) / 113][Stage 196:=================================================>   (105 + 8) / 113][Stage 196:===================================================> (110 + 3) / 113]                                                                                [Stage 197:====================================>                (79 + 35) / 114][Stage 197:=======================================>             (86 + 28) / 114][Stage 197:=============================================>       (97 + 17) / 114][Stage 197:==============================================>     (102 + 12) / 114][Stage 197:================================================>    (105 + 9) / 114][Stage 197:=================================================>   (107 + 7) / 114][Stage 197:====================================================>(112 + 2) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.26772401 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide94"
dataSource: String = /nidan/orc/individualORC/slide94

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZInd ex<=39", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=39,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404255559 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 198:==========================>                          (60 + 60) / 120][Stage 198:==============================>                      (68 + 52) / 120][Stage 198:====================================>                (83 + 37) / 120][Stage 198:=============================================>      (104 + 16) / 120]                                                                                [Stage 199:==========================>                          (61 + 60) / 121][Stage 199:=================================>                   (77 + 44) / 121][Stage 199:===========================================>         (99 + 22) / 121][Stage 199:=================================================>   (114 + 7) / 121][Stage 199:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.186232107 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide96"
dataSource: String = /nidan/orc/individualORC/slide96

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZInd ex<=72", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=72,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365633103 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 200:================================>                    (72 + 46) / 118][Stage 200:=================================>                   (74 + 44) / 118][Stage 200:===================================>                 (79 + 39) / 118][Stage 200:======================================>              (85 + 33) / 118][Stage 200:============================================>        (99 + 19) / 118][Stage 200:==================================================>  (113 + 5) / 118][Stage 200:====================================================>(117 + 1) / 118]                                                                                [Stage 201:================================>                    (73 + 46) / 119][Stage 201:================================>                    (74 + 45) / 119][Stage 201:=================================>                   (76 + 43) / 119][Stage 201:====================================>                (82 + 37) / 119][Stage 201:============================================>        (99 + 20) / 119][Stage 201:===============================================>    (109 + 10) / 119][Stage 201:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.222892103 seconds
res203: Int = 0

scala> 

scala> :quit

real	11m55.049s
user	12m9.296s
sys	1m35.280s
