Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 20:19:20 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 20:19:35 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 20:19:35 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 20:19:35 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 20:19:37 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 20:19:48 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524201937-0590).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@158cb50a

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.4845607 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:==========================>                            (55 + 60) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:======================================>                (80 + 35) / 115][Stage 0:==========================================>            (89 + 26) / 115][Stage 0:============================================>          (93 + 22) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:==============================>                        (65 + 51) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.469010055 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=226", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=226,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.685587984 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===============================>                       (67 + 51) / 118][Stage 2:=================================>                     (72 + 46) / 118][Stage 2:==================================>                    (74 + 44) / 118][Stage 2:===================================>                   (76 + 42) / 118][Stage 2:=====================================>                 (80 + 38) / 118][Stage 2:======================================>                (83 + 35) / 118][Stage 2:=========================================>             (90 + 28) / 118][Stage 2:================================================>     (107 + 11) / 118][Stage 2:==================================================>    (109 + 9) / 118][Stage 2:======================================================>(117 + 1) / 118]                                                                                [Stage 3:==============================>                        (65 + 54) / 119][Stage 3:================================>                      (71 + 48) / 119][Stage 3:====================================>                  (78 + 41) / 119][Stage 3:======================================>                (83 + 36) / 119][Stage 3:==========================================>            (91 + 28) / 119][Stage 3:==========================================>            (93 + 26) / 119][Stage 3:=============================================>        (100 + 19) / 119][Stage 3:==================================================>    (110 + 9) / 119][Stage 3:=====================================================> (115 + 4) / 119][Stage 3:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.66122075 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=239", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=239,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.743719173 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=================================>                     (69 + 44) / 113][Stage 4:=====================================>                 (78 + 35) / 113][Stage 4:=======================================>               (81 + 32) / 113][Stage 4:=======================================>               (82 + 31) / 113][Stage 4:=============================================>         (94 + 19) / 113][Stage 4:=================================================>    (103 + 10) / 113][Stage 4:====================================================>  (107 + 6) / 113][Stage 4:=====================================================> (109 + 4) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:=====================================>                 (77 + 37) / 114][Stage 5:=======================================>               (81 + 33) / 114][Stage 5:=========================================>             (86 + 28) / 114][Stage 5:===========================================>           (91 + 23) / 114][Stage 5:===============================================>      (101 + 13) / 114][Stage 5:====================================================>  (108 + 6) / 114]                                                                                Time elapsed: 4.652636454 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.652844033 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==========================>                            (57 + 63) / 120][Stage 6:==========================>                            (58 + 62) / 120][Stage 6:=================================>                     (73 + 47) / 120][Stage 6:===================================>                   (77 + 43) / 120][Stage 6:======================================>                (85 + 35) / 120][Stage 6:===========================================>           (95 + 25) / 120][Stage 6:================================================>     (108 + 12) / 120][Stage 6:======================================================>(118 + 2) / 120]                                                                                [Stage 7:==========================>                            (59 + 62) / 121][Stage 7:============================>                          (62 + 59) / 121][Stage 7:=============================>                         (65 + 56) / 121][Stage 7:======================================>                (84 + 37) / 121][Stage 7:=========================================>             (92 + 29) / 121][Stage 7:===============================================>      (107 + 14) / 121][Stage 7:====================================================>  (116 + 5) / 121][Stage 7:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.408117006 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=181", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=181,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.5403142 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:======================================>                (80 + 35) / 115][Stage 8:========================================>              (85 + 30) / 115][Stage 8:===============================================>       (99 + 16) / 115][Stage 8:===================================================>   (108 + 7) / 115][Stage 8:=====================================================> (112 + 3) / 115][Stage 8:======================================================>(114 + 1) / 115]                                                                                [Stage 9:=======================================>               (83 + 33) / 116][Stage 9:===========================================>           (91 + 25) / 116][Stage 9:==============================================>       (100 + 16) / 116][Stage 9:=================================================>    (106 + 10) / 116][Stage 9:=====================================================> (113 + 3) / 116][Stage 9:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.737366632 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=162", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=162,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.513626363 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:================================>                     (69 + 44) / 113][Stage 10:===================================>                  (75 + 38) / 113][Stage 10:======================================>               (81 + 32) / 113][Stage 10:===========================================>          (91 + 22) / 113][Stage 10:================================================>    (103 + 10) / 113][Stage 10:===================================================>  (107 + 6) / 113][Stage 10:====================================================> (110 + 3) / 113]                                                                                [Stage 11:=================================>                    (71 + 43) / 114][Stage 11:=====================================>                (80 + 34) / 114][Stage 11:=========================================>            (87 + 27) / 114][Stage 11:=============================================>        (95 + 19) / 114][Stage 11:===============================================>     (103 + 11) / 114][Stage 11:=================================================>    (105 + 9) / 114][Stage 11:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.894921159 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=7", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=7,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.789889368 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==========================>                           (59 + 62) / 121][Stage 12:==========================>                           (60 + 61) / 121][Stage 12:==============================>                       (69 + 52) / 121][Stage 12:=====================================>                (85 + 36) / 121][Stage 12:===========================================>         (100 + 21) / 121][Stage 12:=================================================>    (112 + 9) / 121][Stage 12:===================================================>  (116 + 5) / 121][Stage 12:=====================================================>(120 + 1) / 121]                                                                                [Stage 13:===========================>                          (61 + 61) / 122][Stage 13:============================>                         (64 + 58) / 122][Stage 13:===============================>                      (71 + 51) / 122][Stage 13:=========================================>            (93 + 29) / 122][Stage 13:===========================================>         (100 + 22) / 122][Stage 13:================================================>    (112 + 10) / 122][Stage 13:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.387045998 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493015233 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:======================================>               (82 + 33) / 115][Stage 14:=======================================>              (85 + 30) / 115][Stage 14:===========================================>          (93 + 22) / 115][Stage 14:==============================================>      (100 + 15) / 115][Stage 14:================================================>    (105 + 10) / 115][Stage 14:===================================================>  (109 + 6) / 115][Stage 14:=====================================================>(113 + 2) / 115]                                                                                [Stage 15:======================================>               (82 + 34) / 116][Stage 15:===========================================>          (94 + 22) / 116][Stage 15:===============================================>     (103 + 13) / 116][Stage 15:===============================================>     (105 + 11) / 116][Stage 15:==================================================>   (108 + 8) / 116][Stage 15:==================================================>   (109 + 7) / 116][Stage 15:=====================================================>(114 + 2) / 116][Stage 15:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.477596127 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=240", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=240,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.512561404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=================================>                    (70 + 43) / 113][Stage 16:===================================>                  (75 + 38) / 113][Stage 16:=======================================>              (82 + 31) / 113][Stage 16:=========================================>            (86 + 27) / 113][Stage 16:==============================================>       (97 + 16) / 113][Stage 16:==================================================>   (106 + 7) / 113][Stage 16:=====================================================>(111 + 2) / 113]                                                                                [Stage 17:======================================>               (81 + 33) / 114][Stage 17:============================================>         (93 + 21) / 114][Stage 17:==============================================>       (99 + 15) / 114][Stage 17:===============================================>     (103 + 11) / 114][Stage 17:==================================================>   (107 + 7) / 114][Stage 17:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.795054561 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.564673934 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (60 + 60) / 120][Stage 18:=============================>                        (66 + 54) / 120][Stage 18:====================================>                 (82 + 38) / 120][Stage 18:============================================>        (100 + 20) / 120][Stage 18:===================================================>  (114 + 6) / 120][Stage 18:=====================================================>(118 + 2) / 120]                                                                                [Stage 19:==========================>                           (59 + 62) / 121][Stage 19:=================================>                    (75 + 46) / 121][Stage 19:==========================================>           (95 + 26) / 121][Stage 19:===============================================>     (108 + 13) / 121][Stage 19:====================================================> (117 + 4) / 121][Stage 19:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.969322333 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=82", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=82,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.516793653 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:================================>                     (72 + 46) / 118][Stage 20:===================================>                  (78 + 40) / 118][Stage 20:=========================================>            (91 + 27) / 118][Stage 20:================================================>    (108 + 10) / 118][Stage 20:====================================================> (115 + 3) / 118]                                                                                [Stage 21:=================================>                    (73 + 46) / 119][Stage 21:===================================>                  (78 + 41) / 119][Stage 21:===========================================>          (95 + 24) / 119][Stage 21:===================================================>  (114 + 5) / 119][Stage 21:=====================================================>(117 + 2) / 119][Stage 21:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.775728312 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=161", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=161,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.498889212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:======================================>               (81 + 32) / 113][Stage 22:===========================================>          (90 + 23) / 113][Stage 22:==============================================>       (98 + 15) / 113][Stage 22:===============================================>     (102 + 11) / 113][Stage 22:===================================================>  (107 + 6) / 113][Stage 22:===================================================>  (108 + 5) / 113][Stage 22:=====================================================>(111 + 2) / 113]                                                                                [Stage 23:===================================>                  (75 + 39) / 114][Stage 23:========================================>             (86 + 28) / 114][Stage 23:=============================================>        (97 + 17) / 114][Stage 23:====================================================> (110 + 4) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.666987202 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=103", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=103,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.536980609 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (60 + 61) / 121][Stage 24:===========================>                          (61 + 60) / 121][Stage 24:==============================>                       (68 + 53) / 121][Stage 24:========================================>             (91 + 30) / 121][Stage 24:=================================================>    (112 + 9) / 121][Stage 24:=====================================================>(119 + 2) / 121]                                                                                [Stage 25:===========================>                          (61 + 61) / 122][Stage 25:=============================>                        (67 + 55) / 122][Stage 25:==================================>                   (79 + 43) / 122][Stage 25:==========================================>           (95 + 27) / 122][Stage 25:================================================>    (112 + 10) / 122][Stage 25:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.000475004 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518163362 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (60 + 60) / 120][Stage 26:==============================>                       (67 + 53) / 120][Stage 26:=====================================>                (84 + 36) / 120][Stage 26:==============================================>      (105 + 15) / 120][Stage 26:====================================================> (117 + 3) / 120]                                                                                [Stage 27:=============================>                        (65 + 56) / 121][Stage 27:===================================>                  (79 + 42) / 121][Stage 27:===========================================>          (98 + 23) / 121][Stage 27:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.35706394 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=26,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411299304 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:=====================================>                (79 + 36) / 115][Stage 28:======================================>               (83 + 32) / 115][Stage 28:============================================>         (94 + 21) / 115][Stage 28:=====================================================>(113 + 2) / 115]                                                                                [Stage 29:=======================================>              (84 + 32) / 116][Stage 29:=============================================>        (98 + 18) / 116][Stage 29:==================================================>   (109 + 7) / 116][Stage 29:====================================================> (113 + 3) / 116][Stage 29:=====================================================>(114 + 2) / 116][Stage 29:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.669935903 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.619098621 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:>                                                       (0 + 0) / 120][Stage 30:===========================>                          (60 + 60) / 120][Stage 30:==============================>                       (67 + 53) / 120][Stage 30:====================================>                 (80 + 40) / 120][Stage 30:===============================================>     (108 + 12) / 120][Stage 30:===================================================>  (114 + 6) / 120]                                                                                [Stage 31:===========================>                          (61 + 60) / 121][Stage 31:==============================>                       (69 + 52) / 121][Stage 31:======================================>               (87 + 34) / 121][Stage 31:===============================================>     (108 + 13) / 121][Stage 31:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.475832379 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.487192874 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:============================>                         (59 + 54) / 113][Stage 32:===================================>                  (75 + 38) / 113][Stage 32:============================================>         (93 + 20) / 113][Stage 32:===================================================>  (108 + 5) / 113]                                                                                [Stage 33:============================>                         (61 + 53) / 114][Stage 33:==================================>                   (72 + 42) / 114][Stage 33:==========================================>           (89 + 25) / 114][Stage 33:==============================================>      (101 + 13) / 114][Stage 33:===================================================>  (109 + 5) / 114][Stage 33:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.685210566 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.651351738 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:==========================>                           (60 + 61) / 121][Stage 34:===========================>                          (62 + 59) / 121][Stage 34:=============================>                        (67 + 54) / 121][Stage 34:=========================================>            (94 + 27) / 121][Stage 34:=================================================>    (112 + 9) / 121][Stage 34:=====================================================>(120 + 1) / 121]                                                                                [Stage 35:===========================>                          (61 + 61) / 122][Stage 35:===========================>                          (62 + 60) / 122][Stage 35:===============================>                      (71 + 51) / 122][Stage 35:============================================>        (103 + 19) / 122][Stage 35:====================================================> (118 + 4) / 122][Stage 35:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.534157292 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=185", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=185,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433917276 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:=================================>                    (71 + 42) / 113][Stage 36:=======================================>              (83 + 30) / 113][Stage 36:=============================================>        (95 + 18) / 113][Stage 36:===============================================>     (102 + 11) / 113][Stage 36:==================================================>   (106 + 7) / 113][Stage 36:====================================================> (110 + 3) / 113][Stage 36:=====================================================>(111 + 2) / 113]                                                                                [Stage 37:====================================>                 (78 + 36) / 114][Stage 37:==========================================>           (90 + 24) / 114][Stage 37:================================================>    (104 + 10) / 114][Stage 37:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.432357208 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466500876 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (72 + 46) / 118][Stage 38:=================================>                    (74 + 44) / 118][Stage 38:==========================================>           (92 + 26) / 118][Stage 38:===================================================>  (113 + 5) / 118][Stage 38:=====================================================>(116 + 2) / 118]                                                                                [Stage 39:=================================>                    (74 + 45) / 119][Stage 39:=======================================>              (86 + 33) / 119][Stage 39:===============================================>     (106 + 13) / 119][Stage 39:=====================================================>(117 + 2) / 119][Stage 39:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.468076769 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.481713598 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==============================>                       (64 + 51) / 115][Stage 40:==================================>                   (73 + 42) / 115][Stage 40:===========================================>          (93 + 22) / 115][Stage 40:================================================>    (105 + 10) / 115][Stage 40:====================================================> (112 + 3) / 115]                                                                                [Stage 41:===================================>                  (77 + 39) / 116][Stage 41:===========================================>          (93 + 23) / 116][Stage 41:================================================>    (106 + 10) / 116][Stage 41:====================================================> (112 + 4) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.331070451 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.503350363 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (58 + 55) / 113][Stage 42:============================>                         (60 + 53) / 113][Stage 42:=====================================>                (78 + 35) / 113][Stage 42:===========================================>          (90 + 23) / 113][Stage 42:===================================================>  (107 + 6) / 113]                                                                                [Stage 43:============================>                         (61 + 53) / 114][Stage 43:=================================>                    (71 + 43) / 114][Stage 43:========================================>             (85 + 29) / 114][Stage 43:==============================================>      (100 + 14) / 114][Stage 43:===================================================>  (108 + 6) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.83715593 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=105", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=105,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465441989 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:=================================>                    (73 + 45) / 118][Stage 44:=====================================>                (82 + 36) / 118][Stage 44:===========================================>          (95 + 23) / 118][Stage 44:==============================================>      (104 + 14) / 118][Stage 44:====================================================> (115 + 3) / 118][Stage 44:=====================================================>(117 + 1) / 118]                                                                                [Stage 45:=================================>                    (73 + 46) / 119][Stage 45:==================================>                   (77 + 42) / 119][Stage 45:==========================================>           (93 + 26) / 119][Stage 45:================================================>    (109 + 10) / 119][Stage 45:=====================================================>(117 + 2) / 119][Stage 45:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.921541938 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=77", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=77,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.473854585 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:>                                                       (0 + 0) / 121][Stage 46:==========================>                           (60 + 61) / 121][Stage 46:=============================>                        (66 + 55) / 121][Stage 46:=====================================>                (83 + 38) / 121][Stage 46:=============================================>       (104 + 17) / 121][Stage 46:====================================================> (117 + 4) / 121]                                                                                [Stage 47:============================>                         (64 + 58) / 122][Stage 47:================================>                     (74 + 48) / 122][Stage 47:======================================>               (88 + 34) / 122][Stage 47:===============================================>     (110 + 12) / 122]                                                                                Time elapsed: 3.282212721 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434963403 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=================================>                    (70 + 43) / 113][Stage 48:======================================>               (81 + 32) / 113][Stage 48:==========================================>           (88 + 25) / 113][Stage 48:==============================================>      (100 + 13) / 113][Stage 48:====================================================> (110 + 3) / 113][Stage 48:=====================================================>(112 + 1) / 113]                                                                                [Stage 49:=======================================>              (83 + 31) / 114][Stage 49:===========================================>          (91 + 23) / 114][Stage 49:==============================================>      (100 + 14) / 114][Stage 49:==================================================>   (107 + 7) / 114][Stage 49:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.602740977 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.503550325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:============================>                         (60 + 53) / 113][Stage 50:==================================>                   (72 + 41) / 113][Stage 50:==========================================>           (89 + 24) / 113][Stage 50:===================================================>  (107 + 6) / 113]                                                                                [Stage 51:============================>                         (60 + 54) / 114][Stage 51:=================================>                    (70 + 44) / 114][Stage 51:===========================================>          (92 + 22) / 114][Stage 51:==================================================>   (106 + 8) / 114][Stage 51:====================================================> (111 + 3) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.694533794 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=204", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=204,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49698252 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (58 + 55) / 113][Stage 52:==============================>                       (64 + 49) / 113][Stage 52:======================================>               (81 + 32) / 113][Stage 52:==================================================>   (106 + 7) / 113]                                                                                [Stage 53:============================>                         (60 + 54) / 114][Stage 53:===============================>                      (66 + 48) / 114][Stage 53:=========================================>            (88 + 26) / 114][Stage 53:==================================================>   (106 + 8) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.20155952 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=127", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=127,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410276418 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=====================================>                (78 + 35) / 113][Stage 54:==========================================>           (89 + 24) / 113][Stage 54:===============================================>     (101 + 12) / 113][Stage 54:==================================================>   (105 + 8) / 113]                                                                                [Stage 55:=====================================>                (79 + 35) / 114][Stage 55:============================================>         (94 + 20) / 114][Stage 55:==============================================>      (101 + 13) / 114][Stage 55:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.030809233 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=43", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=43,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461714344 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (60 + 60) / 120][Stage 56:=============================>                        (66 + 54) / 120][Stage 56:=====================================>                (84 + 36) / 120][Stage 56:============================================>        (100 + 20) / 120][Stage 56:================================================>    (109 + 11) / 120]                                                                                [Stage 57:============================>                         (64 + 57) / 121][Stage 57:===================================>                  (79 + 42) / 121][Stage 57:=========================================>            (93 + 28) / 121][Stage 57:================================================>    (111 + 10) / 121][Stage 57:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.511012761 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.48344583 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==========================>                           (60 + 61) / 121][Stage 58:=============================>                        (65 + 56) / 121][Stage 58:====================================>                 (81 + 40) / 121][Stage 58:===========================================>          (97 + 24) / 121][Stage 58:==================================================>   (114 + 7) / 121]                                                                                [Stage 59:===========================>                          (61 + 61) / 122][Stage 59:=============================>                        (66 + 56) / 122][Stage 59:=======================================>              (89 + 33) / 122][Stage 59:===============================================>     (109 + 13) / 122][Stage 59:===================================================>  (116 + 6) / 122][Stage 59:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.852549157 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=74", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=74,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433444754 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===============================>                      (68 + 47) / 115][Stage 60:=====================================>                (80 + 35) / 115][Stage 60:==========================================>           (90 + 25) / 115][Stage 60:=================================================>    (106 + 9) / 115][Stage 60:===================================================>  (110 + 5) / 115]                                                                                [Stage 61:================================>                     (70 + 46) / 116][Stage 61:=========================================>            (90 + 26) / 116][Stage 61:===============================================>     (103 + 13) / 116][Stage 61:===================================================>  (111 + 5) / 116][Stage 61:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.247757752 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.475206554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:==========================>                           (60 + 61) / 121][Stage 62:===============================>                      (70 + 51) / 121][Stage 62:=========================================>            (92 + 29) / 121][Stage 62:====================================================> (117 + 4) / 121][Stage 62:=====================================================>(120 + 1) / 121]                                                                                [Stage 63:===========================>                          (61 + 61) / 122][Stage 63:===============================>                      (72 + 50) / 122][Stage 63:======================================>               (88 + 34) / 122][Stage 63:==============================================>      (108 + 14) / 122][Stage 63:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.59403392 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=17", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=17,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410428939 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:================================>                     (72 + 46) / 118][Stage 64:==================================>                   (75 + 43) / 118][Stage 64:==========================================>           (92 + 26) / 118][Stage 64:==================================================>   (110 + 8) / 118]                                                                                [Stage 65:==================================>                   (75 + 44) / 119][Stage 65:====================================>                 (80 + 39) / 119][Stage 65:=========================================>            (92 + 27) / 119][Stage 65:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.143757714 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=48", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=48,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464806004 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==========================>                           (60 + 61) / 121][Stage 66:==============================>                       (69 + 52) / 121][Stage 66:=========================================>            (94 + 27) / 121][Stage 66:==================================================>   (113 + 8) / 121][Stage 66:=====================================================>(120 + 1) / 121]                                                                                [Stage 67:===========================>                          (61 + 61) / 122][Stage 67:============================>                         (65 + 57) / 122][Stage 67:==================================>                   (77 + 45) / 122][Stage 67:==========================================>           (95 + 27) / 122][Stage 67:===================================================>  (116 + 6) / 122][Stage 67:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.67126778 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=41", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=41,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456471068 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:>                                                       (0 + 0) / 121][Stage 68:==========================>                           (60 + 61) / 121][Stage 68:==============================>                       (68 + 53) / 121][Stage 68:==================================>                   (78 + 43) / 121][Stage 68:===========================================>         (100 + 21) / 121][Stage 68:====================================================> (118 + 3) / 121]                                                                                [Stage 69:============================>                         (65 + 57) / 122][Stage 69:================================>                     (73 + 49) / 122][Stage 69:===========================================>          (98 + 24) / 122][Stage 69:==================================================>   (115 + 7) / 122][Stage 69:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.677983845 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=42", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=42,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456150226 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (60 + 60) / 120][Stage 70:==============================>                       (68 + 52) / 120][Stage 70:===========================================>          (96 + 24) / 120][Stage 70:===================================================>  (115 + 5) / 120]                                                                                [Stage 71:============================>                         (63 + 58) / 121][Stage 71:=================================>                    (76 + 45) / 121][Stage 71:============================================>         (99 + 22) / 121][Stage 71:===================================================>  (116 + 5) / 121][Stage 71:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.418172719 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=169", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=169,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453113507 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==========================>                           (60 + 61) / 121][Stage 72:===========================>                          (62 + 59) / 121][Stage 72:===============================>                      (70 + 51) / 121][Stage 72:=========================================>            (93 + 28) / 121][Stage 72:====================================================> (118 + 3) / 121]                                                                                [Stage 73:===========================>                          (61 + 61) / 122][Stage 73:==============================>                       (68 + 54) / 122][Stage 73:==================================>                   (79 + 43) / 122][Stage 73:===========================================>         (100 + 22) / 122][Stage 73:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.234148783 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=189", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=189,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400497593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==============================>                       (65 + 50) / 115][Stage 74:======================================>               (82 + 33) / 115][Stage 74:==============================================>      (100 + 15) / 115][Stage 74:====================================================> (111 + 4) / 115]                                                                                [Stage 75:=====================================>                (80 + 36) / 116][Stage 75:==========================================>           (92 + 24) / 116][Stage 75:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.72801366 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=128", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=128,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448213633 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:======================================>               (82 + 33) / 115][Stage 76:============================================>         (94 + 21) / 115][Stage 76:===================================================>  (110 + 5) / 115]                                                                                [Stage 77:======================================>               (83 + 33) / 116][Stage 77:===========================================>          (94 + 22) / 116][Stage 77:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.452891211 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434787083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (58 + 55) / 113][Stage 78:================================>                     (69 + 44) / 113][Stage 78:===========================================>          (90 + 23) / 113][Stage 78:==================================================>   (105 + 8) / 113][Stage 78:=====================================================>(112 + 1) / 113]                                                                                [Stage 79:===========================>                          (59 + 55) / 114][Stage 79:==============================>                       (64 + 50) / 114][Stage 79:====================================>                 (78 + 36) / 114][Stage 79:============================================>         (94 + 20) / 114][Stage 79:=====================================================>(112 + 2) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.45071186 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=241", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=241,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404080176 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===================================>                  (75 + 40) / 115][Stage 80:==========================================>           (91 + 24) / 115][Stage 80:===============================================>     (103 + 12) / 115][Stage 80:====================================================> (112 + 3) / 115]                                                                                [Stage 81:================================>                     (70 + 46) / 116][Stage 81:=======================================>              (85 + 31) / 116][Stage 81:==================================================>   (108 + 8) / 116][Stage 81:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.781801163 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=66", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=66,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406402193 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:=================================>                    (71 + 44) / 115][Stage 82:==========================================>           (90 + 25) / 115][Stage 82:===============================================>     (102 + 13) / 115][Stage 82:==================================================>   (108 + 7) / 115][Stage 82:=====================================================>(113 + 2) / 115][Stage 82:=====================================================>(114 + 1) / 115]                                                                                [Stage 83:===============================>                      (68 + 48) / 116][Stage 83:=====================================>                (81 + 35) / 116][Stage 83:=============================================>        (98 + 18) / 116][Stage 83:===============================================>     (105 + 11) / 116][Stage 83:===================================================>  (111 + 5) / 116][Stage 83:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.604307973 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384206923 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===================================>                  (74 + 39) / 113][Stage 84:========================================>             (85 + 28) / 113][Stage 84:==============================================>       (97 + 16) / 113][Stage 84:==================================================>   (106 + 7) / 113][Stage 84:=====================================================>(112 + 1) / 113]                                                                                [Stage 85:========================================>             (86 + 28) / 114][Stage 85:============================================>         (94 + 20) / 114][Stage 85:==============================================>      (101 + 13) / 114][Stage 85:==================================================>   (106 + 8) / 114][Stage 85:=====================================================>(112 + 2) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.245151482 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=116,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430346373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==========================>                           (60 + 61) / 121][Stage 86:===========================>                          (62 + 59) / 121][Stage 86:==================================>                   (78 + 43) / 121][Stage 86:==========================================>           (96 + 25) / 121][Stage 86:===================================================>  (116 + 5) / 121]                                                                                [Stage 87:===========================>                          (61 + 61) / 122][Stage 87:=============================>                        (67 + 55) / 122][Stage 87:======================================>               (87 + 35) / 122][Stage 87:=============================================>       (104 + 18) / 122][Stage 87:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.481405587 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378756766 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:=================================>                    (71 + 42) / 113][Stage 88:=======================================>              (83 + 30) / 113][Stage 88:===========================================>          (92 + 21) / 113][Stage 88:===============================================>     (102 + 11) / 113][Stage 88:====================================================> (110 + 3) / 113]                                                                                [Stage 89:===================================>                  (74 + 40) / 114][Stage 89:========================================>             (85 + 29) / 114][Stage 89:============================================>         (93 + 21) / 114][Stage 89:===================================================>  (108 + 6) / 114][Stage 89:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.01765435 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=168", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=168,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411926609 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (58 + 55) / 113][Stage 90:==============================>                       (64 + 49) / 113][Stage 90:=====================================>                (78 + 35) / 113][Stage 90:================================================>    (103 + 10) / 113][Stage 90:=====================================================>(112 + 1) / 113]                                                                                [Stage 91:===========================>                          (59 + 55) / 114][Stage 91:==============================>                       (65 + 49) / 114][Stage 91:======================================>               (81 + 33) / 114][Stage 91:============================================>         (94 + 20) / 114][Stage 91:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.302019382 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396933568 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:================================>                     (72 + 46) / 118][Stage 92:=================================>                    (74 + 44) / 118][Stage 92:=====================================>                (82 + 36) / 118][Stage 92:===========================================>          (94 + 24) / 118][Stage 92:================================================>    (108 + 10) / 118][Stage 92:=====================================================>(116 + 2) / 118]                                                                                [Stage 93:=================================>                    (73 + 46) / 119][Stage 93:==================================>                   (76 + 43) / 119][Stage 93:=====================================>                (83 + 36) / 119][Stage 93:============================================>         (97 + 22) / 119][Stage 93:===============================================>     (107 + 12) / 119][Stage 93:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.92337662 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=9", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=9,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393928609 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:=================================>                    (74 + 44) / 118][Stage 94:===================================>                  (78 + 40) / 118][Stage 94:======================================>               (84 + 34) / 118][Stage 94:=========================================>            (91 + 27) / 118][Stage 94:=============================================>       (102 + 16) / 118][Stage 94:====================================================> (114 + 4) / 118]                                                                                [Stage 95:==================================>                   (77 + 42) / 119][Stage 95:=====================================>                (82 + 37) / 119][Stage 95:==========================================>           (93 + 26) / 119][Stage 95:==============================================>      (105 + 14) / 119]                                                                                Time elapsed: 3.68539548 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=22,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379528072 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:================================>                     (72 + 46) / 118][Stage 96:==================================>                   (76 + 42) / 118][Stage 96:======================================>               (84 + 34) / 118][Stage 96:===========================================>          (96 + 22) / 118][Stage 96:===================================================>  (112 + 6) / 118]                                                                                [Stage 97:=================================>                    (74 + 45) / 119][Stage 97:=====================================>                (83 + 36) / 119][Stage 97:============================================>         (97 + 22) / 119][Stage 97:================================================>    (109 + 10) / 119][Stage 97:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.211337953 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=49", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=49,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382479512 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:================================>                     (72 + 46) / 118][Stage 98:===================================>                  (77 + 41) / 118][Stage 98:======================================>               (85 + 33) / 118][Stage 98:===========================================>          (94 + 24) / 118][Stage 98:====================================================> (114 + 4) / 118]                                                                                [Stage 99:=================================>                    (74 + 45) / 119][Stage 99:====================================>                 (81 + 38) / 119][Stage 99:=======================================>              (87 + 32) / 119][Stage 99:============================================>        (101 + 18) / 119][Stage 99:====================================================> (115 + 4) / 119][Stage 99:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.619493818 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=91", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=91,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378035142 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (72 + 46) / 118][Stage 100:===================================>                 (79 + 39) / 118][Stage 100:===========================================>         (97 + 21) / 118][Stage 100:===================================================> (114 + 4) / 118][Stage 100:====================================================>(117 + 1) / 118]                                                                                [Stage 101:================================>                    (73 + 46) / 119][Stage 101:====================================>                (83 + 36) / 119][Stage 101:============================================>       (102 + 17) / 119][Stage 101:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.252809513 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=192", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=192,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420511747 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 61) / 121][Stage 102:============================>                        (64 + 57) / 121][Stage 102:====================================>                (84 + 37) / 121][Stage 102:==============================================>     (109 + 12) / 121][Stage 102:====================================================>(120 + 1) / 121]                                                                                [Stage 103:===========================>                         (64 + 58) / 122][Stage 103:==================================>                  (80 + 42) / 122][Stage 103:===========================================>         (99 + 23) / 122][Stage 103:==============================================>     (110 + 12) / 122]                                                                                Time elapsed: 3.319683543 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=134", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=134,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383475518 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:>                                                      (0 + 0) / 113][Stage 104:===================================>                 (75 + 38) / 113][Stage 104:=========================================>           (89 + 24) / 113][Stage 104:=============================================>       (98 + 15) / 113][Stage 104:==================================================>  (108 + 5) / 113][Stage 104:====================================================>(111 + 2) / 113]                                                                                [Stage 105:===================================>                 (77 + 37) / 114][Stage 105:=======================================>             (85 + 29) / 114][Stage 105:============================================>        (95 + 19) / 114][Stage 105:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 2.918785327 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=47", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=47,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38080398 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:================================>                    (72 + 46) / 118][Stage 106:==================================>                  (76 + 42) / 118][Stage 106:===================================>                 (80 + 38) / 118][Stage 106:===========================================>         (96 + 22) / 118][Stage 106:=================================================>   (110 + 8) / 118][Stage 106:====================================================>(117 + 1) / 118]                                                                                [Stage 107:==================================>                  (78 + 41) / 119][Stage 107:====================================>                (82 + 37) / 119][Stage 107:========================================>            (92 + 27) / 119][Stage 107:===============================================>    (108 + 11) / 119][Stage 107:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.640573401 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=92", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=92,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461639305 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (60 + 61) / 121][Stage 108:===============================>                     (72 + 49) / 121][Stage 108:====================================>                (83 + 38) / 121][Stage 108:===============================================>    (110 + 11) / 121][Stage 108:====================================================>(120 + 1) / 121]                                                                                [Stage 109:============================>                        (65 + 57) / 122][Stage 109:================================>                    (75 + 47) / 122][Stage 109:==========================================>         (100 + 22) / 122][Stage 109:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.296029204 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=227", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=227,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409370413 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (60 + 61) / 121][Stage 110:=============================>                       (67 + 54) / 121][Stage 110:====================================>                (84 + 37) / 121][Stage 110:=============================================>      (107 + 14) / 121][Stage 110:====================================================>(120 + 1) / 121]                                                                                [Stage 111:==========================>                          (61 + 61) / 122][Stage 111:=============================>                       (67 + 55) / 122][Stage 111:==================================>                  (79 + 43) / 122][Stage 111:============================================>       (104 + 18) / 122][Stage 111:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.352816387 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=59,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409116791 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (60 + 60) / 120][Stage 112:============================>                        (65 + 55) / 120][Stage 112:====================================>                (83 + 37) / 120][Stage 112:============================================>       (103 + 17) / 120][Stage 112:====================================================>(118 + 2) / 120]                                                                                [Stage 113:===========================>                         (62 + 59) / 121][Stage 113:=================================>                   (76 + 45) / 121][Stage 113:==========================================>          (98 + 23) / 121][Stage 113:===============================================>    (110 + 11) / 121][Stage 113:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.591917315 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=13,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384572306 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=================================>                   (73 + 42) / 115][Stage 114:==========================================>          (93 + 22) / 115][Stage 114:==================================================>  (110 + 5) / 115]                                                                                [Stage 115:===============================>                     (70 + 46) / 116][Stage 115:======================================>              (85 + 31) / 116][Stage 115:===========================================>         (96 + 20) / 116][Stage 115:==================================================>  (110 + 6) / 116][Stage 115:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.315853544 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=224", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=224,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363924028 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:=================================>                   (72 + 41) / 113][Stage 116:======================================>              (83 + 30) / 113][Stage 116:==========================================>          (91 + 22) / 113][Stage 116:==============================================>     (101 + 12) / 113][Stage 116:===================================================> (109 + 4) / 113]                                                                                [Stage 117:=====================================>               (81 + 33) / 114][Stage 117:===========================================>         (93 + 21) / 114][Stage 117:==============================================>      (99 + 15) / 114][Stage 117:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.02009113 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409434333 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 60) / 120][Stage 118:============================>                        (65 + 55) / 120][Stage 118:===================================>                 (80 + 40) / 120][Stage 118:===============================================>    (110 + 10) / 120]                                                                                [Stage 119:============================>                        (64 + 57) / 121][Stage 119:=================================>                   (77 + 44) / 121][Stage 119:============================================>       (103 + 18) / 121][Stage 119:==================================================>  (116 + 5) / 121][Stage 119:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.28478481 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=177", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=177,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413148958 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 60) / 120][Stage 120:===========================>                         (63 + 57) / 120][Stage 120:==================================>                  (77 + 43) / 120][Stage 120:=============================================>      (104 + 16) / 120]                                                                                [Stage 121:==========================>                          (61 + 60) / 121][Stage 121:==============================>                      (70 + 51) / 121][Stage 121:=========================================>           (95 + 26) / 121][Stage 121:===================================================> (117 + 4) / 121][Stage 121:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.490496095 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=50", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=50,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347116775 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:>                                                      (0 + 0) / 115][Stage 122:=====================================>               (82 + 33) / 115][Stage 122:=========================================>           (90 + 25) / 115][Stage 122:==============================================>     (102 + 13) / 115][Stage 122:===================================================> (111 + 4) / 115][Stage 122:====================================================>(113 + 2) / 115]                                                                                [Stage 123:=====================================>               (82 + 34) / 116][Stage 123:======================================>              (85 + 31) / 116][Stage 123:===========================================>         (96 + 20) / 116][Stage 123:==================================================>  (110 + 6) / 116][Stage 123:====================================================>(114 + 2) / 116][Stage 123:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.448646559 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=163", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=163,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402783109 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (58 + 55) / 113][Stage 124:============================>                        (61 + 52) / 113][Stage 124:======================================>              (82 + 31) / 113][Stage 124:==============================================>      (99 + 14) / 113][Stage 124:===================================================> (110 + 3) / 113]                                                                                [Stage 125:===========================>                         (59 + 55) / 114][Stage 125:================================>                    (69 + 45) / 114][Stage 125:=======================================>             (84 + 30) / 114][Stage 125:=============================================>       (98 + 16) / 114][Stage 125:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.284059327 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=72", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=72,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382939635 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:================================>                    (72 + 46) / 118][Stage 126:===================================>                 (78 + 40) / 118][Stage 126:========================================>            (90 + 28) / 118][Stage 126:=================================================>   (110 + 8) / 118][Stage 126:====================================================>(117 + 1) / 118]                                                                                [Stage 127:================================>                    (73 + 46) / 119][Stage 127:=======================================>             (89 + 30) / 119][Stage 127:=============================================>      (103 + 16) / 119][Stage 127:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.097655994 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=10", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=10,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414773609 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==============================>                      (67 + 48) / 115][Stage 128:=======================================>             (85 + 30) / 115][Stage 128:==============================================>     (102 + 13) / 115][Stage 128:==================================================>  (110 + 5) / 115][Stage 128:====================================================>(114 + 1) / 115]                                                                                [Stage 129:===============================>                     (70 + 46) / 116][Stage 129:=====================================>               (83 + 33) / 116][Stage 129:============================================>        (97 + 19) / 116][Stage 129:=================================================>   (109 + 7) / 116][Stage 129:===================================================> (113 + 3) / 116][Stage 129:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.080115721 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=99", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=99,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370815974 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:=================================>                   (72 + 41) / 113][Stage 130:======================================>              (82 + 31) / 113][Stage 130:============================================>        (95 + 18) / 113][Stage 130:================================================>    (104 + 9) / 113][Stage 130:====================================================>(111 + 2) / 113]                                                                                [Stage 131:====================================>                (78 + 36) / 114][Stage 131:==========================================>          (91 + 23) / 114][Stage 131:============================================>        (96 + 18) / 114][Stage 131:==================================================>  (109 + 5) / 114][Stage 131:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.937698278 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409937798 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 61) / 121][Stage 132:=============================>                       (68 + 53) / 121][Stage 132:=====================================>               (85 + 36) / 121][Stage 132:===============================================>    (110 + 11) / 121]                                                                                [Stage 133:===========================>                         (63 + 59) / 122][Stage 133:===============================>                     (72 + 50) / 122][Stage 133:=========================================>           (95 + 27) / 122][Stage 133:===============================================>    (112 + 10) / 122][Stage 133:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.49693944 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40736456 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==========================>                          (61 + 60) / 121][Stage 134:==============================>                      (69 + 52) / 121][Stage 134:======================================>              (89 + 32) / 121][Stage 134:===============================================>    (110 + 11) / 121]                                                                                [Stage 135:===========================>                         (64 + 58) / 122][Stage 135:===================================>                 (81 + 41) / 122][Stage 135:===========================================>         (99 + 23) / 122][Stage 135:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.034753132 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=24", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=24,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401108598 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:============================>                        (64 + 56) / 120][Stage 136:===================================>                 (80 + 40) / 120][Stage 136:=========================================>           (94 + 26) / 120][Stage 136:=================================================>   (113 + 7) / 120]                                                                                [Stage 137:===========================>                         (63 + 58) / 121][Stage 137:===============================>                     (72 + 49) / 121][Stage 137:========================================>            (92 + 29) / 121][Stage 137:===========================================>        (102 + 19) / 121][Stage 137:===================================================> (118 + 3) / 121][Stage 137:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.421405412 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=83", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=83,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342392023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:=====================================>               (82 + 33) / 115][Stage 138:=========================================>           (90 + 25) / 115][Stage 138:==============================================>     (102 + 13) / 115][Stage 138:==================================================>  (109 + 6) / 115][Stage 138:====================================================>(114 + 1) / 115]                                                                                [Stage 139:=====================================>               (82 + 34) / 116][Stage 139:=======================================>             (86 + 30) / 116][Stage 139:=============================================>       (99 + 17) / 116][Stage 139:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.940371637 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=151", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=151,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407630122 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 61) / 121][Stage 140:============================>                        (65 + 56) / 121][Stage 140:===================================>                 (82 + 39) / 121][Stage 140:=============================================>      (106 + 15) / 121][Stage 140:====================================================>(120 + 1) / 121]                                                                                [Stage 141:==========================>                          (61 + 61) / 122][Stage 141:=============================>                       (67 + 55) / 122][Stage 141:===================================>                 (82 + 40) / 122][Stage 141:============================================>       (105 + 17) / 122][Stage 141:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.422302859 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=178", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=178,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402804809 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (62 + 58) / 120][Stage 142:==============================>                      (69 + 51) / 120][Stage 142:=======================================>             (90 + 30) / 120][Stage 142:==============================================>     (108 + 12) / 120]                                                                                [Stage 143:============================>                        (65 + 56) / 121][Stage 143:===================================>                 (82 + 39) / 121][Stage 143:============================================>       (103 + 18) / 121][Stage 143:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.553543202 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370739874 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:================================>                    (72 + 46) / 118][Stage 144:====================================>                (82 + 36) / 118][Stage 144:=============================================>      (104 + 14) / 118][Stage 144:==================================================>  (112 + 6) / 118][Stage 144:====================================================>(117 + 1) / 118]                                                                                [Stage 145:================================>                    (74 + 45) / 119][Stage 145:==================================>                  (78 + 41) / 119][Stage 145:===========================================>        (100 + 19) / 119][Stage 145:==================================================>  (114 + 5) / 119][Stage 145:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.322485248 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=5", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=5,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369940529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:================================>                    (72 + 46) / 118][Stage 146:====================================>                (81 + 37) / 118][Stage 146:===========================================>         (96 + 22) / 118][Stage 146:=============================================>      (103 + 15) / 118][Stage 146:===================================================> (114 + 4) / 118]                                                                                [Stage 147:================================>                    (74 + 45) / 119][Stage 147:=====================================>               (84 + 35) / 119][Stage 147:==========================================>          (96 + 23) / 119][Stage 147:===============================================>    (108 + 11) / 119][Stage 147:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.475321097 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=218", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=218,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403732855 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:============================>                        (60 + 53) / 113][Stage 148:===================================>                 (75 + 38) / 113][Stage 148:===========================================>         (92 + 21) / 113][Stage 148:===================================================> (109 + 4) / 113]                                                                                [Stage 149:============================>                        (61 + 53) / 114][Stage 149:=================================>                   (72 + 42) / 114][Stage 149:==========================================>          (91 + 23) / 114][Stage 149:================================================>    (105 + 9) / 114][Stage 149:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.261400519 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=154", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=154,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407392801 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 61) / 121][Stage 150:==============================>                      (69 + 52) / 121][Stage 150:=====================================>               (85 + 36) / 121][Stage 150:=============================================>      (106 + 15) / 121][Stage 150:====================================================>(119 + 2) / 121]                                                                                [Stage 151:==========================>                          (61 + 61) / 122][Stage 151:============================>                        (66 + 56) / 122][Stage 151:===================================>                 (81 + 41) / 122][Stage 151:=============================================>      (107 + 15) / 122][Stage 151:====================================================>(120 + 2) / 122][Stage 151:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.48161214 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=223", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=223,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348578485 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:=======================================>             (85 + 30) / 115][Stage 152:============================================>        (97 + 18) / 115][Stage 152:=================================================>   (108 + 7) / 115][Stage 152:==================================================>  (110 + 5) / 115][Stage 152:===================================================> (112 + 3) / 115][Stage 152:====================================================>(114 + 1) / 115]                                                                                [Stage 153:=======================================>             (87 + 29) / 116][Stage 153:==========================================>          (93 + 23) / 116][Stage 153:=================================================>   (108 + 8) / 116][Stage 153:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.643795691 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=6", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=6,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367938015 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:=================================>                   (75 + 43) / 118][Stage 154:===========================================>         (96 + 22) / 118][Stage 154:===============================================>    (107 + 11) / 118][Stage 154:====================================================>(117 + 1) / 118]                                                                                [Stage 155:================================>                    (73 + 46) / 119][Stage 155:===================================>                 (80 + 39) / 119][Stage 155:===========================================>        (100 + 19) / 119][Stage 155:===============================================>    (108 + 11) / 119]                                                                                Time elapsed: 3.329078394 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=73", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=73,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389127717 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:============================>                        (61 + 52) / 113][Stage 156:==================================>                  (73 + 40) / 113][Stage 156:=============================================>       (96 + 17) / 113]                                                                                [Stage 157:============================>                        (61 + 53) / 114][Stage 157:================================>                    (70 + 44) / 114][Stage 157:========================================>            (88 + 26) / 114][Stage 157:===============================================>    (104 + 10) / 114][Stage 157:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.0890279 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375407685 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:================================>                    (72 + 46) / 118][Stage 158:=================================>                   (75 + 43) / 118][Stage 158:=========================================>           (93 + 25) / 118][Stage 158:=================================================>   (111 + 7) / 118]                                                                                [Stage 159:================================>                    (74 + 45) / 119][Stage 159:====================================>                (81 + 38) / 119][Stage 159:==========================================>          (96 + 23) / 119][Stage 159:===================================================> (115 + 4) / 119][Stage 159:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.097353256 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=61", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=61,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39835274 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (60 + 60) / 120][Stage 160:===========================>                         (62 + 58) / 120][Stage 160:==================================>                  (77 + 43) / 120][Stage 160:=============================================>      (104 + 16) / 120][Stage 160:====================================================>(118 + 2) / 120]                                                                                [Stage 161:==========================>                          (61 + 60) / 121][Stage 161:==============================>                      (70 + 51) / 121][Stage 161:=====================================>               (86 + 35) / 121][Stage 161:=============================================>      (106 + 15) / 121][Stage 161:===================================================> (118 + 3) / 121][Stage 161:====================================================>(119 + 2) / 121][Stage 161:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.794558007 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=46", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=46,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412267454 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (61 + 59) / 120][Stage 162:==============================>                      (69 + 51) / 120][Stage 162:=====================================>               (85 + 35) / 120][Stage 162:==================================================>  (114 + 6) / 120]                                                                                [Stage 163:===========================>                         (62 + 59) / 121][Stage 163:==============================>                      (70 + 51) / 121][Stage 163:===========================================>        (102 + 19) / 121][Stage 163:=================================================>   (114 + 7) / 121][Stage 163:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.502296461 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=38", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=38,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378231344 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:=================================>                   (72 + 43) / 115][Stage 164:=========================================>           (90 + 25) / 115][Stage 164:=============================================>      (101 + 14) / 115][Stage 164:==================================================>  (109 + 6) / 115]                                                                                [Stage 165:==================================>                  (76 + 40) / 116][Stage 165:======================================>              (84 + 32) / 116][Stage 165:============================================>       (100 + 16) / 116][Stage 165:==================================================>  (110 + 6) / 116][Stage 165:===================================================> (113 + 3) / 116][Stage 165:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.729717887 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=16", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=16,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352736753 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==================================>                  (73 + 40) / 113][Stage 166:=========================================>           (89 + 24) / 113][Stage 166:=============================================>       (97 + 16) / 113][Stage 166:==================================================>  (108 + 5) / 113][Stage 166:===================================================> (110 + 3) / 113][Stage 166:====================================================>(111 + 2) / 113]                                                                                [Stage 167:=======================================>             (85 + 29) / 114][Stage 167:=============================================>       (98 + 16) / 114][Stage 167:==============================================>     (102 + 12) / 114][Stage 167:==================================================>  (108 + 6) / 114][Stage 167:===================================================> (111 + 3) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.936202349 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=140", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=140,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402568908 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===============================>                     (68 + 47) / 115][Stage 168:===================================>                 (76 + 39) / 115][Stage 168:==========================================>          (92 + 23) / 115][Stage 168:==================================================>  (109 + 6) / 115][Stage 168:====================================================>(114 + 1) / 115]                                                                                [Stage 169:==============================>                      (67 + 49) / 116][Stage 169:=====================================>               (82 + 34) / 116][Stage 169:==========================================>          (94 + 22) / 116][Stage 169:===============================================>    (106 + 10) / 116][Stage 169:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.036653909 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=243", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=243,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340997354 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:=====================================>               (81 + 34) / 115][Stage 170:========================================>            (88 + 27) / 115][Stage 170:=============================================>      (101 + 14) / 115][Stage 170:===================================================> (111 + 4) / 115][Stage 170:====================================================>(114 + 1) / 115]                                                                                [Stage 171:=====================================>               (83 + 33) / 116][Stage 171:=========================================>           (90 + 26) / 116][Stage 171:===============================================>    (105 + 11) / 116][Stage 171:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.696090079 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=52", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=52,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376666574 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:=============================>                       (65 + 50) / 115][Stage 172:====================================>                (79 + 36) / 115][Stage 172:==========================================>          (92 + 23) / 115][Stage 172:==================================================>  (109 + 6) / 115][Stage 172:====================================================>(114 + 1) / 115]                                                                                [Stage 173:===============================>                     (70 + 46) / 116][Stage 173:======================================>              (85 + 31) / 116][Stage 173:==========================================>          (93 + 23) / 116][Stage 173:===============================================>    (105 + 11) / 116][Stage 173:=================================================>   (109 + 7) / 116][Stage 173:===================================================> (113 + 3) / 116][Stage 173:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 8.043675097 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=211", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=211,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401858624 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (60 + 61) / 121][Stage 174:=============================>                       (68 + 53) / 121][Stage 174:=====================================>               (85 + 36) / 121][Stage 174:===============================================>    (110 + 11) / 121][Stage 174:====================================================>(120 + 1) / 121]                                                                                [Stage 175:===========================>                         (63 + 59) / 122][Stage 175:==============================>                      (71 + 51) / 122][Stage 175:========================================>            (94 + 28) / 122][Stage 175:=================================================>   (114 + 8) / 122][Stage 175:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.646899017 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=160", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=160,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37002811 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=============================>                       (64 + 51) / 115][Stage 176:==================================>                  (74 + 41) / 115][Stage 176:=========================================>           (89 + 26) / 115][Stage 176:===============================================>    (105 + 10) / 115][Stage 176:====================================================>(113 + 2) / 115]                                                                                [Stage 177:==============================>                      (66 + 50) / 116][Stage 177:====================================>                (80 + 36) / 116][Stage 177:==========================================>          (94 + 22) / 116][Stage 177:=================================================>   (108 + 8) / 116][Stage 177:===================================================> (112 + 4) / 116][Stage 177:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.101416866 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=123", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=123,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353958682 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=================================>                   (71 + 42) / 113][Stage 178:=====================================>               (81 + 32) / 113][Stage 178:============================================>        (94 + 19) / 113][Stage 178:==============================================>     (101 + 12) / 113][Stage 178:===================================================> (109 + 4) / 113]                                                                                [Stage 179:=====================================>               (80 + 34) / 114][Stage 179:===========================================>         (94 + 20) / 114][Stage 179:==============================================>     (103 + 11) / 114][Stage 179:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.996421601 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=145", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=145,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355421771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===================================>                 (76 + 37) / 113][Stage 180:=======================================>             (84 + 29) / 113][Stage 180:============================================>        (95 + 18) / 113][Stage 180:=================================================>   (105 + 8) / 113][Stage 180:====================================================>(111 + 2) / 113]                                                                                [Stage 181:======================================>              (83 + 31) / 114][Stage 181:============================================>        (95 + 19) / 114][Stage 181:==============================================>     (103 + 11) / 114][Stage 181:====================================================>(112 + 2) / 114][Stage 181:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.187433586 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=69", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=69,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432987613 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (61 + 59) / 120][Stage 182:===============================>                     (71 + 49) / 120][Stage 182:=========================================>           (93 + 27) / 120][Stage 182:==================================================>  (115 + 5) / 120]                                                                                [Stage 183:===========================>                         (62 + 59) / 121][Stage 183:==================================>                  (78 + 43) / 121][Stage 183:===========================================>         (99 + 22) / 121][Stage 183:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.106931445 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=230", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=230,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408969312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (58 + 55) / 113][Stage 184:===============================>                     (68 + 45) / 113][Stage 184:=====================================>               (81 + 32) / 113][Stage 184:==============================================>     (101 + 12) / 113][Stage 184:====================================================>(112 + 1) / 113]                                                                                [Stage 185:===========================>                         (59 + 55) / 114][Stage 185:==============================>                      (66 + 48) / 114][Stage 185:====================================>                (79 + 35) / 114][Stage 185:=============================================>       (98 + 16) / 114][Stage 185:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.230641638 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=37", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=37,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452187582 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===============================>                     (69 + 46) / 115][Stage 186:=======================================>             (85 + 30) / 115][Stage 186:==============================================>     (102 + 13) / 115][Stage 186:===================================================> (111 + 4) / 115]                                                                                [Stage 187:==================================>                  (75 + 41) / 116][Stage 187:========================================>            (88 + 28) / 116][Stage 187:=============================================>       (99 + 17) / 116][Stage 187:==================================================>  (111 + 5) / 116][Stage 187:===================================================> (113 + 3) / 116][Stage 187:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.347373921 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=159", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=159,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419488402 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 60) / 120][Stage 188:============================>                        (65 + 55) / 120][Stage 188:===================================>                 (81 + 39) / 120][Stage 188:============================================>       (102 + 18) / 120][Stage 188:====================================================>(118 + 2) / 120]                                                                                [Stage 189:==========================>                          (61 + 60) / 121][Stage 189:==============================>                      (69 + 52) / 121][Stage 189:====================================>                (84 + 37) / 121][Stage 189:=============================================>      (105 + 16) / 121][Stage 189:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.407180206 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=109", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=109,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357152423 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==================================>                  (73 + 40) / 113][Stage 190:=====================================>               (81 + 32) / 113][Stage 190:=============================================>       (96 + 17) / 113][Stage 190:=================================================>   (105 + 8) / 113][Stage 190:===================================================> (110 + 3) / 113][Stage 190:====================================================>(112 + 1) / 113]                                                                                [Stage 191:=====================================>               (80 + 34) / 114][Stage 191:==========================================>          (92 + 22) / 114][Stage 191:==================================================>  (109 + 5) / 114][Stage 191:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.135980661 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=11", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=11,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381468887 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (58 + 55) / 113][Stage 192:==============================>                      (65 + 48) / 113][Stage 192:=====================================>               (80 + 33) / 113][Stage 192:=============================================>       (98 + 15) / 113][Stage 192:==================================================>  (107 + 6) / 113]                                                                                [Stage 193:============================>                        (62 + 52) / 114][Stage 193:===================================>                 (77 + 37) / 114][Stage 193:===========================================>         (93 + 21) / 114][Stage 193:=================================================>   (106 + 8) / 114][Stage 193:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.297655558 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386742702 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==================================>                  (75 + 40) / 115][Stage 194:=========================================>           (90 + 25) / 115][Stage 194:=================================================>   (108 + 7) / 115][Stage 194:====================================================>(114 + 1) / 115]                                                                                [Stage 195:===============================>                     (68 + 48) / 116][Stage 195:=====================================>               (83 + 33) / 116][Stage 195:=============================================>      (101 + 15) / 116][Stage 195:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.763389255 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=120", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=120,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364841815 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:======================================>              (83 + 30) / 113][Stage 196:==========================================>          (90 + 23) / 113][Stage 196:==============================================>     (100 + 13) / 113][Stage 196:====================================================>(111 + 2) / 113][Stage 196:====================================================>(112 + 1) / 113]                                                                                [Stage 197:=======================================>             (86 + 28) / 114][Stage 197:===========================================>         (94 + 20) / 114][Stage 197:================================================>    (105 + 9) / 114][Stage 197:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.06567189 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=234", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=234,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420397549 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (58 + 55) / 113][Stage 198:============================>                        (61 + 52) / 113][Stage 198:=================================>                   (71 + 42) / 113][Stage 198:===========================================>         (93 + 20) / 113][Stage 198:=================================================>   (106 + 7) / 113][Stage 198:====================================================>(111 + 2) / 113]                                                                                [Stage 199:===========================>                         (59 + 55) / 114][Stage 199:==============================>                      (65 + 49) / 114][Stage 199:====================================>                (78 + 36) / 114][Stage 199:===========================================>         (93 + 21) / 114][Stage 199:=================================================>   (107 + 7) / 114][Stage 199:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.459779102 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=8", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=8,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401014379 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:>                                                      (0 + 0) / 121][Stage 200:==========================>                          (60 + 61) / 121][Stage 200:============================>                        (66 + 55) / 121][Stage 200:===================================>                 (82 + 39) / 121][Stage 200:==============================================>     (108 + 13) / 121][Stage 200:====================================================>(119 + 2) / 121]                                                                                [Stage 201:==========================>                          (61 + 61) / 122][Stage 201:=============================>                       (67 + 55) / 122][Stage 201:====================================>                (84 + 38) / 122][Stage 201:==========================================>          (98 + 24) / 122][Stage 201:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.440367971 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m41.663s
user	11m49.840s
sys	0m59.428s
