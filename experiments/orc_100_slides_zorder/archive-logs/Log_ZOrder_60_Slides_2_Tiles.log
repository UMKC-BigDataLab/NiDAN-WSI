Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 22:48:04 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 22:48:18 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 22:48:18 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 22:48:19 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 22:48:21 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 22:48:32 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524224821-0604).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 4.35619111 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=======================>                               (50 + 65) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:======================================>                (80 + 35) / 115][Stage 0:========================================>              (84 + 31) / 115][Stage 0:==========================================>            (89 + 26) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:=====================================================> (112 + 3) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:===========================>                           (57 + 59) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:==================================>                    (72 + 44) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:=============================================>         (96 + 20) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.60279974 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 5 AND partitionZIndex<=86", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=86,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.817038629 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===========================>                           (59 + 59) / 118][Stage 2:==============================>                        (65 + 53) / 118][Stage 2:================================>                      (70 + 48) / 118][Stage 2:===================================>                   (76 + 42) / 118][Stage 2:=====================================>                 (81 + 37) / 118][Stage 2:==========================================>            (91 + 27) / 118][Stage 2:===============================================>      (103 + 15) / 118][Stage 2:===================================================>   (110 + 8) / 118][Stage 2:======================================================>(116 + 2) / 118]                                                                                [Stage 3:===============================>                       (69 + 50) / 119][Stage 3:=================================>                     (72 + 47) / 119][Stage 3:===================================>                   (77 + 42) / 119][Stage 3:======================================>                (83 + 36) / 119][Stage 3:=============================================>         (98 + 21) / 119][Stage 3:===============================================>      (105 + 14) / 119][Stage 3:================================================>     (107 + 12) / 119][Stage 3:=====================================================> (115 + 4) / 119]                                                                                Time elapsed: 4.723196177 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 01 AND partitionZIndex<=202", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=202,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.693917618 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==========================>                            (54 + 59) / 113][Stage 4:============================>                          (58 + 55) / 113][Stage 4:============================>                          (59 + 54) / 113][Stage 4:=================================>                     (69 + 44) / 113][Stage 4:=====================================>                 (78 + 35) / 113][Stage 4:=========================================>             (86 + 27) / 113][Stage 4:================================================>     (101 + 12) / 113][Stage 4:===================================================>   (105 + 8) / 113][Stage 4:======================================================>(111 + 2) / 113]                                                                                [Stage 5:===========================>                           (58 + 56) / 114][Stage 5:=============================>                         (61 + 53) / 114][Stage 5:===============================>                       (66 + 48) / 114][Stage 5:===================================>                   (74 + 40) / 114][Stage 5:==========================================>            (89 + 25) / 114][Stage 5:==============================================>        (97 + 17) / 114][Stage 5:===================================================>   (106 + 8) / 114][Stage 5:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.651375604 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 5 AND partitionZIndex<=16", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=16,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.585167824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=================================>                     (71 + 47) / 118][Stage 6:==================================>                    (74 + 44) / 118][Stage 6:======================================>                (82 + 36) / 118][Stage 6:=========================================>             (88 + 30) / 118][Stage 6:=============================================>        (100 + 18) / 118][Stage 6:=====================================================> (114 + 4) / 118]                                                                                [Stage 7:=================================>                     (73 + 46) / 119][Stage 7:====================================>                  (78 + 41) / 119][Stage 7:=========================================>             (89 + 30) / 119][Stage 7:=============================================>        (100 + 19) / 119][Stage 7:==================================================>    (110 + 9) / 119][Stage 7:=====================================================> (116 + 3) / 119]                                                                                Time elapsed: 4.033149467 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 9 AND partitionZIndex<=30", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=30,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.499682474 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 8:======================================>                (80 + 35) / 115][Stage 8:========================================>              (84 + 31) / 115][Stage 8:===========================================>           (91 + 24) / 115][Stage 8:==============================================>        (98 + 17) / 115][Stage 8:==================================================>    (106 + 9) / 115][Stage 8:=====================================================> (111 + 4) / 115]                                                                                [Stage 9:======================================>                (82 + 34) / 116][Stage 9:=========================================>             (87 + 29) / 116][Stage 9:=============================================>         (96 + 20) / 116][Stage 9:===============================================>      (102 + 14) / 116][Stage 9:===================================================>   (108 + 8) / 116][Stage 9:=====================================================> (113 + 3) / 116][Stage 9:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.391152429 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 06 AND partitionZIndex<=107", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.524421798 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=====================================>                (80 + 35) / 115][Stage 10:=========================================>            (89 + 26) / 115][Stage 10:===============================================>     (102 + 13) / 115][Stage 10:=================================================>    (106 + 9) / 115][Stage 10:===================================================>  (110 + 5) / 115][Stage 10:====================================================> (112 + 3) / 115]                                                                                [Stage 11:=======================================>              (85 + 31) / 116][Stage 11:===========================================>          (94 + 22) / 116][Stage 11:==============================================>      (101 + 15) / 116][Stage 11:=================================================>    (107 + 9) / 116][Stage 11:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 3.829129682 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 46 AND partitionZIndex<=147", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=147,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.498409639 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 12:====================================>                 (78 + 37) / 115][Stage 12:======================================>               (83 + 32) / 115][Stage 12:===========================================>          (92 + 23) / 115][Stage 12:===============================================>     (104 + 11) / 115][Stage 12:====================================================> (112 + 3) / 115]                                                                                [Stage 13:=====================================>                (81 + 35) / 116][Stage 13:========================================>             (88 + 28) / 116][Stage 13:=============================================>        (97 + 19) / 116][Stage 13:==============================================>      (102 + 14) / 116][Stage 13:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.035040933 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 6 AND partitionZIndex<=77", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=77,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.541207577 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==============================>                       (65 + 50) / 115][Stage 14:====================================>                 (78 + 37) / 115][Stage 14:===========================================>          (93 + 22) / 115][Stage 14:==============================================>       (99 + 16) / 115][Stage 14:================================================>    (105 + 10) / 115][Stage 14:====================================================> (112 + 3) / 115][Stage 14:=====================================================>(114 + 1) / 115]                                                                                [Stage 15:================================>                     (70 + 46) / 116][Stage 15:===================================>                  (76 + 40) / 116][Stage 15:=======================================>              (84 + 32) / 116][Stage 15:============================================>         (95 + 21) / 116][Stage 15:==============================================>      (102 + 14) / 116][Stage 15:====================================================> (112 + 4) / 116][Stage 15:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.413478541 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 1 AND partitionZIndex<=72", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=72,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.453743649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=====================================>                (80 + 35) / 115][Stage 16:===========================================>          (93 + 22) / 115][Stage 16:==============================================>       (99 + 16) / 115][Stage 16:===============================================>     (104 + 11) / 115][Stage 16:====================================================> (111 + 4) / 115][Stage 16:=====================================================>(113 + 2) / 115]                                                                                [Stage 17:======================================>               (82 + 34) / 116][Stage 17:========================================>             (87 + 29) / 116][Stage 17:==============================================>      (101 + 15) / 116][Stage 17:===============================================>     (105 + 11) / 116][Stage 17:====================================================> (112 + 4) / 116][Stage 17:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.511030869 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 03 AND partitionZIndex<=204", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=204,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.503252016 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (61 + 57) / 118][Stage 18:===============================>                      (68 + 50) / 118][Stage 18:=====================================>                (82 + 36) / 118][Stage 18:=============================================>       (101 + 17) / 118][Stage 18:===============================================>     (106 + 12) / 118][Stage 18:===================================================>  (112 + 6) / 118][Stage 18:=====================================================>(116 + 2) / 118]                                                                                [Stage 19:=================================>                    (73 + 46) / 119][Stage 19:==================================>                   (75 + 44) / 119][Stage 19:======================================>               (84 + 35) / 119][Stage 19:============================================>        (100 + 19) / 119][Stage 19:=================================================>    (110 + 9) / 119][Stage 19:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.78966493 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 3 AND partitionZIndex<=44", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=44,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.492028875 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 20:>                                                       (0 + 0) / 115][Stage 20:===============================>                      (67 + 48) / 115][Stage 20:======================================>               (82 + 33) / 115][Stage 20:============================================>         (95 + 20) / 115][Stage 20:===============================================>     (104 + 11) / 115][Stage 20:====================================================> (112 + 3) / 115]                                                                                [Stage 21:=================================>                    (71 + 45) / 116][Stage 21:=========================================>            (90 + 26) / 116][Stage 21:==============================================>      (102 + 14) / 116][Stage 21:==================================================>   (109 + 7) / 116][Stage 21:====================================================> (112 + 4) / 116][Stage 21:=====================================================>(114 + 2) / 116][Stage 21:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.263379405 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 21 AND partitionZIndex<=222", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=222,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.466331315 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 22:=================================>                    (70 + 43) / 113][Stage 22:=====================================>                (79 + 34) / 113][Stage 22:========================================>             (85 + 28) / 113][Stage 22:============================================>         (93 + 20) / 113][Stage 22:=================================================>    (104 + 9) / 113][Stage 22:===================================================>  (107 + 6) / 113][Stage 22:====================================================> (109 + 4) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:======================================>               (82 + 32) / 114][Stage 23:==========================================>           (90 + 24) / 114][Stage 23:==============================================>       (99 + 15) / 114][Stage 23:=================================================>    (105 + 9) / 114][Stage 23:====================================================> (111 + 3) / 114][Stage 23:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.069664484 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 6 AND partitionZIndex<=97", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=97,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.515663164 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (60 + 60) / 120][Stage 24:============================>                         (64 + 56) / 120][Stage 24:==================================>                   (77 + 43) / 120][Stage 24:===========================================>          (97 + 23) / 120][Stage 24:================================================>    (110 + 10) / 120][Stage 24:===================================================>  (114 + 6) / 120][Stage 24:====================================================> (117 + 3) / 120][Stage 24:=====================================================>(119 + 1) / 120]                                                                                [Stage 25:===========================>                          (62 + 59) / 121][Stage 25:==============================>                       (68 + 53) / 121][Stage 25:==================================>                   (78 + 43) / 121][Stage 25:========================================>             (91 + 30) / 121][Stage 25:================================================>    (110 + 11) / 121][Stage 25:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.996948084 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 8 AND partitionZIndex<=69", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=69,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.540642909 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 26:==========================>                           (60 + 61) / 121][Stage 26:===========================>                          (62 + 59) / 121][Stage 26:=================================>                    (76 + 45) / 121][Stage 26:==========================================>           (95 + 26) / 121][Stage 26:==================================================>   (113 + 8) / 121][Stage 26:====================================================> (117 + 4) / 121][Stage 26:=====================================================>(120 + 1) / 121]                                                                                [Stage 27:===========================>                          (61 + 61) / 122][Stage 27:=============================>                        (66 + 56) / 122][Stage 27:===================================>                  (80 + 42) / 122][Stage 27:==============================================>      (106 + 16) / 122][Stage 27:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.751436236 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 2 AND partitionZIndex<=93", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=93,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.408136124 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 28:======================================>               (81 + 34) / 115][Stage 28:========================================>             (86 + 29) / 115][Stage 28:===============================================>     (104 + 11) / 115][Stage 28:====================================================> (111 + 4) / 115]                                                                                [Stage 29:========================================>             (87 + 29) / 116][Stage 29:==========================================>           (92 + 24) / 116][Stage 29:==================================================>   (109 + 7) / 116][Stage 29:====================================================> (113 + 3) / 116][Stage 29:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.123455042 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 4 AND partitionZIndex<=45", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=45,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.525814913 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (60 + 60) / 120][Stage 30:==============================>                       (67 + 53) / 120][Stage 30:=====================================>                (83 + 37) / 120][Stage 30:===============================================>     (107 + 13) / 120][Stage 30:===================================================>  (115 + 5) / 120]                                                                                [Stage 31:============================>                         (63 + 58) / 121][Stage 31:==================================>                   (77 + 44) / 121][Stage 31:===========================================>         (100 + 21) / 121][Stage 31:===================================================>  (116 + 5) / 121][Stage 31:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.546709675 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 7 AND partitionZIndex<=48", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=48,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.499607753 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 32:==========================>                           (60 + 61) / 121][Stage 32:=============================>                        (65 + 56) / 121][Stage 32:====================================>                 (81 + 40) / 121][Stage 32:=============================================>       (104 + 17) / 121][Stage 32:=====================================================>(119 + 2) / 121]                                                                                [Stage 33:===========================>                          (61 + 61) / 122][Stage 33:==============================>                       (68 + 54) / 122][Stage 33:====================================>                 (83 + 39) / 122][Stage 33:===========================================>         (100 + 22) / 122][Stage 33:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.351812549 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 29 AND partitionZIndex<=230", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=230,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.462009129 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 34:================================>                     (69 + 46) / 115][Stage 34:========================================>             (86 + 29) / 115][Stage 34:==============================================>       (99 + 16) / 115][Stage 34:===================================================>  (110 + 5) / 115][Stage 34:=====================================================>(113 + 2) / 115]                                                                                [Stage 35:==================================>                   (74 + 42) / 116][Stage 35:========================================>             (88 + 28) / 116][Stage 35:===============================================>     (103 + 13) / 116][Stage 35:====================================================> (112 + 4) / 116][Stage 35:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.325108757 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 30 AND partitionZIndex<=231", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=231,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.463271809 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 36:================================>                     (72 + 46) / 118][Stage 36:=======================================>              (86 + 32) / 118][Stage 36:===============================================>     (106 + 12) / 118][Stage 36:=====================================================>(116 + 2) / 118]                                                                                [Stage 37:=================================>                    (74 + 45) / 119][Stage 37:=======================================>              (88 + 31) / 119][Stage 37:================================================>    (108 + 11) / 119][Stage 37:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.145524306 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 22 AND partitionZIndex<=123", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=123,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.457655278 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===================================>                  (74 + 39) / 113][Stage 38:=========================================>            (87 + 26) / 113][Stage 38:==============================================>       (98 + 15) / 113][Stage 38:==================================================>   (106 + 7) / 113][Stage 38:====================================================> (110 + 3) / 113]                                                                                [Stage 39:=========================================>            (87 + 27) / 114][Stage 39:============================================>         (94 + 20) / 114][Stage 39:=================================================>    (105 + 9) / 114][Stage 39:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.061741856 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 93 AND partitionZIndex<=194", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=194,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.394046191 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 40:======================================>               (82 + 33) / 115][Stage 40:===========================================>          (92 + 23) / 115][Stage 40:===================================================>  (109 + 6) / 115][Stage 40:=====================================================>(114 + 1) / 115]                                                                                [Stage 41:=======================================>              (84 + 32) / 116][Stage 41:=============================================>        (97 + 19) / 116][Stage 41:===================================================>  (110 + 6) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.010867737 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 20 AND partitionZIndex<=121", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=121,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.536540426 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==========================>                           (60 + 61) / 121][Stage 42:=============================>                        (65 + 56) / 121][Stage 42:====================================>                 (81 + 40) / 121][Stage 42:==============================================>      (107 + 14) / 121][Stage 42:====================================================> (118 + 3) / 121][Stage 42:=====================================================>(120 + 1) / 121]                                                                                [Stage 43:===========================>                          (61 + 61) / 122][Stage 43:===============================>                      (71 + 51) / 122][Stage 43:=====================================>                (84 + 38) / 122][Stage 43:===========================================>         (101 + 21) / 122][Stage 43:==================================================>   (114 + 8) / 122]                                                                                Time elapsed: 4.102702015 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 4 AND partitionZIndex<=15", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=15,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.437473831 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===================================>                  (75 + 38) / 113][Stage 44:========================================>             (85 + 28) / 113][Stage 44:=============================================>        (95 + 18) / 113][Stage 44:=================================================>    (104 + 9) / 113][Stage 44:====================================================> (110 + 3) / 113]                                                                                [Stage 45:=====================================>                (79 + 35) / 114][Stage 45:==========================================>           (89 + 25) / 114][Stage 45:=============================================>        (97 + 17) / 114][Stage 45:===============================================>     (102 + 12) / 114][Stage 45:====================================================> (110 + 4) / 114][Stage 45:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.084299454 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 13 AND partitionZIndex<=214", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=214,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.461885637 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 46:================================>                     (70 + 45) / 115][Stage 46:==========================================>           (90 + 25) / 115][Stage 46:==============================================>      (100 + 15) / 115][Stage 46:====================================================> (112 + 3) / 115][Stage 46:=====================================================>(114 + 1) / 115]                                                                                [Stage 47:===============================>                      (67 + 49) / 116][Stage 47:=====================================>                (81 + 35) / 116][Stage 47:=============================================>        (97 + 19) / 116][Stage 47:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.027741621 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 39 AND partitionZIndex<=140", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=140,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.480817052 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=================================>                    (71 + 44) / 115][Stage 48:========================================>             (86 + 29) / 115][Stage 48:===============================================>     (103 + 12) / 115]                                                                                [Stage 49:=================================>                    (71 + 45) / 116][Stage 49:======================================>               (83 + 33) / 116][Stage 49:===============================================>     (103 + 13) / 116][Stage 49:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.727227199 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 82 AND partitionZIndex<=183", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=183,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.487055843 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (61 + 60) / 121][Stage 50:==============================>                       (68 + 53) / 121][Stage 50:=========================================>            (93 + 28) / 121][Stage 50:================================================>    (110 + 11) / 121][Stage 50:=====================================================>(119 + 2) / 121]                                                                                [Stage 51:===========================>                          (61 + 61) / 122][Stage 51:============================>                         (65 + 57) / 122][Stage 51:==================================>                   (79 + 43) / 122][Stage 51:==========================================>           (96 + 26) / 122][Stage 51:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.323015055 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 24 AND partitionZIndex<=225", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=225,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.466054395 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===============================>                      (68 + 47) / 115][Stage 52:===========================================>          (93 + 22) / 115][Stage 52:===================================================>  (109 + 6) / 115]                                                                                [Stage 53:===================================>                  (76 + 40) / 116][Stage 53:==========================================>           (92 + 24) / 116][Stage 53:===============================================>     (104 + 12) / 116][Stage 53:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.656542893 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 65 AND partitionZIndex<=166", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=166,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.458236828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 54:============================>                         (60 + 53) / 113][Stage 54:=================================>                    (70 + 43) / 113][Stage 54:============================================>         (94 + 19) / 113][Stage 54:====================================================> (109 + 4) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:===========================>                          (59 + 55) / 114][Stage 55:==============================>                       (65 + 49) / 114][Stage 55:======================================>               (81 + 33) / 114][Stage 55:=================================================>    (105 + 9) / 114][Stage 55:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.17677102 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 12 AND partitionZIndex<=113", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=113,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.444259089 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 56:============================>                         (60 + 53) / 113][Stage 56:================================>                     (68 + 45) / 113][Stage 56:========================================>             (85 + 28) / 113][Stage 56:==================================================>   (106 + 7) / 113][Stage 56:=====================================================>(112 + 1) / 113]                                                                                [Stage 57:===========================>                          (59 + 55) / 114][Stage 57:================================>                     (69 + 45) / 114][Stage 57:========================================>             (85 + 29) / 114][Stage 57:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.313002476 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 00 AND partitionZIndex<=201", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=201,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.459054589 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:===============================>                      (70 + 50) / 120][Stage 58:======================================>               (85 + 35) / 120][Stage 58:=============================================>       (102 + 18) / 120][Stage 58:=====================================================>(119 + 1) / 120]                                                                                [Stage 59:===========================>                          (61 + 60) / 121][Stage 59:==============================>                       (69 + 52) / 121][Stage 59:========================================>             (91 + 30) / 121][Stage 59:================================================>    (111 + 10) / 121][Stage 59:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.126875328 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=101", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=101,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.426004937 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 60:================================>                     (72 + 46) / 118][Stage 60:=================================>                    (73 + 45) / 118][Stage 60:===================================>                  (78 + 40) / 118][Stage 60:========================================>             (89 + 29) / 118][Stage 60:============================================>        (100 + 18) / 118][Stage 60:==================================================>   (111 + 7) / 118][Stage 60:=====================================================>(117 + 1) / 118]                                                                                [Stage 61:==================================>                   (75 + 44) / 119][Stage 61:===================================>                  (79 + 40) / 119][Stage 61:=====================================>                (83 + 36) / 119][Stage 61:=========================================>            (91 + 28) / 119][Stage 61:==============================================>      (105 + 14) / 119]                                                                                Time elapsed: 3.889740157 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 45 AND partitionZIndex<=146", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=145 AND partitionZIndex<=146,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.450158064 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 62:==========================>                           (60 + 61) / 121][Stage 62:==============================>                       (69 + 52) / 121][Stage 62:=====================================>                (83 + 38) / 121][Stage 62:===============================================>     (108 + 13) / 121][Stage 62:====================================================> (118 + 3) / 121]                                                                                [Stage 63:===========================>                          (61 + 61) / 122][Stage 63:============================>                         (65 + 57) / 122][Stage 63:==================================>                   (78 + 44) / 122][Stage 63:==========================================>           (97 + 25) / 122][Stage 63:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.248972974 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 70 AND partitionZIndex<=171", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=171,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.399103837 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 64:=================================>                    (70 + 43) / 113][Stage 64:=======================================>              (83 + 30) / 113][Stage 64:============================================>         (94 + 19) / 113][Stage 64:===============================================>     (102 + 11) / 113][Stage 64:=====================================================>(111 + 2) / 113]                                                                                [Stage 65:====================================>                 (76 + 38) / 114][Stage 65:=========================================>            (88 + 26) / 114][Stage 65:==============================================>       (98 + 16) / 114][Stage 65:==================================================>   (107 + 7) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.876742046 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 11 AND partitionZIndex<=212", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=212,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.484407378 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 66:================================>                     (72 + 46) / 118][Stage 66:===================================>                  (77 + 41) / 118][Stage 66:=======================================>              (86 + 32) / 118][Stage 66:============================================>         (98 + 20) / 118][Stage 66:==================================================>   (111 + 7) / 118]                                                                                [Stage 67:=================================>                    (74 + 45) / 119][Stage 67:====================================>                 (80 + 39) / 119][Stage 67:=======================================>              (88 + 31) / 119][Stage 67:=============================================>       (103 + 16) / 119][Stage 67:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.363175889 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 26 AND partitionZIndex<=127", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=127,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.421369908 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===================================>                  (74 + 39) / 113][Stage 68:========================================>             (84 + 29) / 113][Stage 68:===========================================>          (92 + 21) / 113][Stage 68:==================================================>   (106 + 7) / 113][Stage 68:====================================================> (110 + 3) / 113]                                                                                [Stage 69:=====================================>                (80 + 34) / 114][Stage 69:============================================>         (93 + 21) / 114][Stage 69:==============================================>      (101 + 13) / 114][Stage 69:====================================================> (111 + 3) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.113190569 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 18 AND partitionZIndex<=219", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=219,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.380874426 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 70:=====================================>                (79 + 34) / 113][Stage 70:==========================================>           (88 + 25) / 113][Stage 70:===============================================>     (101 + 12) / 113][Stage 70:===================================================>  (108 + 5) / 113]                                                                                [Stage 71:=====================================>                (79 + 35) / 114][Stage 71:==========================================>           (90 + 24) / 114][Stage 71:==============================================>      (101 + 13) / 114][Stage 71:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.013518717 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 5 AND partitionZIndex<=26", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=26,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.451222669 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 72:>                                                       (0 + 0) / 121][Stage 72:==========================>                           (60 + 61) / 121][Stage 72:============================>                         (63 + 58) / 121][Stage 72:=====================================>                (84 + 37) / 121][Stage 72:=============================================>       (104 + 17) / 121][Stage 72:=====================================================>(119 + 2) / 121]                                                                                [Stage 73:===========================>                          (61 + 61) / 122][Stage 73:============================>                         (65 + 57) / 122][Stage 73:===================================>                  (80 + 42) / 122][Stage 73:===========================================>         (100 + 22) / 122][Stage 73:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.207940953 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 64 AND partitionZIndex<=165", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=165,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.430977538 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (58 + 55) / 113][Stage 74:==============================>                       (64 + 49) / 113][Stage 74:======================================>               (81 + 32) / 113][Stage 74:=================================================>    (104 + 9) / 113][Stage 74:====================================================> (110 + 3) / 113]                                                                                [Stage 75:===========================>                          (59 + 55) / 114][Stage 75:==============================>                       (64 + 50) / 114][Stage 75:====================================>                 (78 + 36) / 114][Stage 75:==============================================>       (99 + 15) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.109927658 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 1 AND partitionZIndex<=32", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=32,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.412403405 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==============================>                       (66 + 49) / 115][Stage 76:====================================>                 (77 + 38) / 115][Stage 76:===============================================>     (103 + 12) / 115][Stage 76:===================================================>  (110 + 5) / 115][Stage 76:=====================================================>(114 + 1) / 115]                                                                                [Stage 77:==============================>                       (65 + 51) / 116][Stage 77:========================================>             (86 + 30) / 116][Stage 77:==============================================>      (101 + 15) / 116][Stage 77:====================================================> (112 + 4) / 116][Stage 77:====================================================> (113 + 3) / 116][Stage 77:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.419423695 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 27 AND partitionZIndex<=228", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=228,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.441542345 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 78:==================================>                   (73 + 42) / 115][Stage 78:==========================================>           (90 + 25) / 115][Stage 78:===============================================>     (104 + 11) / 115][Stage 78:=====================================================>(113 + 2) / 115]                                                                                [Stage 79:===================================>                  (76 + 40) / 116][Stage 79:===========================================>          (93 + 23) / 116][Stage 79:===============================================>     (105 + 11) / 116][Stage 79:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.95470089 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 63 AND partitionZIndex<=164", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=164,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.413748605 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===========================>                          (60 + 60) / 120][Stage 80:============================>                         (64 + 56) / 120][Stage 80:======================================>               (85 + 35) / 120][Stage 80:==================================================>   (112 + 8) / 120]                                                                                [Stage 81:===========================>                          (61 + 60) / 121][Stage 81:================================>                     (73 + 48) / 121][Stage 81:========================================>             (91 + 30) / 121][Stage 81:==================================================>   (114 + 7) / 121][Stage 81:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.027159216 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 4 AND partitionZIndex<=35", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=35,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.406146777 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===========================>                          (58 + 55) / 113][Stage 82:==============================>                       (63 + 50) / 113][Stage 82:=================================>                    (71 + 42) / 113][Stage 82:===============================================>      (99 + 14) / 113][Stage 82:=====================================================>(112 + 1) / 113]                                                                                [Stage 83:============================>                         (60 + 54) / 114][Stage 83:=============================>                        (62 + 52) / 114][Stage 83:====================================>                 (78 + 36) / 114][Stage 83:==============================================>      (101 + 13) / 114][Stage 83:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.074866538 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 50 AND partitionZIndex<=151", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=151,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.432497681 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (60 + 60) / 120][Stage 84:=================================>                    (74 + 46) / 120][Stage 84:============================================>        (100 + 20) / 120][Stage 84:===================================================>  (115 + 5) / 120]                                                                                [Stage 85:===========================>                          (62 + 59) / 121][Stage 85:===============================>                      (71 + 50) / 121][Stage 85:========================================>             (90 + 31) / 121][Stage 85:=====================================================>(119 + 2) / 121][Stage 85:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.197710756 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 9 AND partitionZIndex<=50", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=50,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39851177 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 86:================================>                     (72 + 46) / 118][Stage 86:==================================>                   (76 + 42) / 118][Stage 86:=====================================>                (82 + 36) / 118][Stage 86:============================================>        (100 + 18) / 118][Stage 86:===================================================>  (113 + 5) / 118][Stage 86:=====================================================>(117 + 1) / 118]                                                                                [Stage 87:=================================>                    (73 + 46) / 119][Stage 87:==================================>                   (77 + 42) / 119][Stage 87:=======================================>              (87 + 32) / 119][Stage 87:==================================================>   (111 + 8) / 119][Stage 87:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.299646644 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 58 AND partitionZIndex<=159", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=159,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.374837263 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 88:====================================>                 (76 + 37) / 113][Stage 88:========================================>             (84 + 29) / 113][Stage 88:=============================================>        (95 + 18) / 113][Stage 88:================================================>    (103 + 10) / 113][Stage 88:=====================================================>(111 + 2) / 113]                                                                                [Stage 89:========================================>             (85 + 29) / 114][Stage 89:=============================================>        (95 + 19) / 114][Stage 89:================================================>    (104 + 10) / 114][Stage 89:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.180864615 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 3 AND partitionZIndex<=24", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=24,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.426196753 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (60 + 60) / 120][Stage 90:=================================>                    (74 + 46) / 120][Stage 90:===========================================>          (97 + 23) / 120][Stage 90:====================================================> (116 + 4) / 120]                                                                                [Stage 91:===========================>                          (61 + 60) / 121][Stage 91:============================>                         (64 + 57) / 121][Stage 91:======================================>               (87 + 34) / 121][Stage 91:===============================================>     (108 + 13) / 121][Stage 91:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.984586234 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 61 AND partitionZIndex<=162", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=162,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.383662853 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 92:================================>                     (72 + 46) / 118][Stage 92:===================================>                  (78 + 40) / 118][Stage 92:========================================>             (89 + 29) / 118][Stage 92:===============================================>     (106 + 12) / 118][Stage 92:=====================================================>(117 + 1) / 118]                                                                                [Stage 93:=================================>                    (73 + 46) / 119][Stage 93:=================================>                    (74 + 45) / 119][Stage 93:=======================================>              (88 + 31) / 119][Stage 93:================================================>    (108 + 11) / 119][Stage 93:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.991550792 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 68 AND partitionZIndex<=169", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=169,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.404318045 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 94:============================>                         (60 + 53) / 113][Stage 94:================================>                     (69 + 44) / 113][Stage 94:========================================>             (85 + 28) / 113][Stage 94:===================================================>  (107 + 6) / 113][Stage 94:=====================================================>(111 + 2) / 113]                                                                                [Stage 95:===========================>                          (59 + 55) / 114][Stage 95:===============================>                      (66 + 48) / 114][Stage 95:=======================================>              (84 + 30) / 114][Stage 95:================================================>    (104 + 10) / 114][Stage 95:=====================================================>(112 + 2) / 114][Stage 95:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.261583169 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 7 AND partitionZIndex<=58", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=58,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.350024681 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 96:======================================>               (81 + 34) / 115][Stage 96:=======================================>              (84 + 31) / 115][Stage 96:==============================================>       (98 + 17) / 115][Stage 96:===================================================>  (110 + 5) / 115]                                                                                [Stage 97:========================================>             (88 + 28) / 116][Stage 97:===============================================>     (104 + 12) / 116][Stage 97:=====================================================>(114 + 2) / 116][Stage 97:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.961080048 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 1 AND partitionZIndex<=62", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=62,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.375119548 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 98:================================>                     (72 + 46) / 118][Stage 98:====================================>                 (80 + 38) / 118][Stage 98:===========================================>          (96 + 22) / 118][Stage 98:===============================================>     (106 + 12) / 118][Stage 98:=====================================================>(116 + 2) / 118]                                                                                [Stage 99:==================================>                   (76 + 43) / 119][Stage 99:=========================================>            (91 + 28) / 119][Stage 99:==============================================>      (104 + 15) / 119][Stage 99:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.172328507 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 2 AND partitionZIndex<=63", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=63,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.416175913 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 100:============================>                        (64 + 56) / 120][Stage 100:================================>                    (74 + 46) / 120][Stage 100:=========================================>           (93 + 27) / 120][Stage 100:=================================================>   (111 + 9) / 120]                                                                                [Stage 101:===========================>                         (62 + 59) / 121][Stage 101:==============================>                      (70 + 51) / 121][Stage 101:========================================>            (92 + 29) / 121][Stage 101:=============================================>      (107 + 14) / 121]                                                                                Time elapsed: 3.178902166 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 48 AND partitionZIndex<=149", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=149,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.366141741 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==================================>                  (73 + 40) / 113][Stage 102:=======================================>             (84 + 29) / 113][Stage 102:=============================================>       (96 + 17) / 113][Stage 102:==============================================>     (102 + 11) / 113][Stage 102:====================================================>(111 + 2) / 113]                                                                                [Stage 103:=====================================>               (80 + 34) / 114][Stage 103:=======================================>             (86 + 28) / 114][Stage 103:=============================================>       (98 + 16) / 114][Stage 103:=================================================>   (106 + 8) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.244276205 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 43 AND partitionZIndex<=144", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=144,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.383636898 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 104:================================>                    (72 + 46) / 118][Stage 104:===================================>                 (80 + 38) / 118][Stage 104:==========================================>          (94 + 24) / 118][Stage 104:===============================================>    (107 + 11) / 118]                                                                                [Stage 105:================================>                    (73 + 46) / 119][Stage 105:=====================================>               (85 + 34) / 119][Stage 105:============================================>        (99 + 20) / 119][Stage 105:=================================================>   (112 + 7) / 119][Stage 105:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.103724785 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 3 AND partitionZIndex<=94", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=94,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.351550903 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 106:=====================================>               (81 + 34) / 115][Stage 106:=======================================>             (85 + 30) / 115][Stage 106:============================================>        (97 + 18) / 115][Stage 106:==================================================>  (109 + 6) / 115]                                                                                [Stage 107:=====================================>               (82 + 34) / 116][Stage 107:============================================>       (100 + 16) / 116][Stage 107:==================================================>  (110 + 6) / 116][Stage 107:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.825574429 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 07 AND partitionZIndex<=208", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=208,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.400448418 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===================================>                 (76 + 39) / 115][Stage 108:=========================================>           (91 + 24) / 115][Stage 108:===============================================>    (104 + 11) / 115][Stage 108:===================================================> (111 + 4) / 115]                                                                                [Stage 109:===================================>                 (78 + 38) / 116][Stage 109:=======================================>             (87 + 29) / 116][Stage 109:===========================================>         (95 + 21) / 116][Stage 109:=================================================>   (109 + 7) / 116][Stage 109:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.100536424 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 34 AND partitionZIndex<=235", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=235,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.410286225 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (61 + 59) / 120][Stage 110:=================================>                   (76 + 44) / 120][Stage 110:===========================================>         (99 + 21) / 120][Stage 110:==================================================>  (115 + 5) / 120][Stage 110:====================================================>(119 + 1) / 120]                                                                                [Stage 111:===========================>                         (62 + 59) / 121][Stage 111:============================>                        (65 + 56) / 121][Stage 111:====================================>                (84 + 37) / 121][Stage 111:===========================================>         (99 + 22) / 121][Stage 111:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.232672373 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 92 AND partitionZIndex<=193", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=193,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.394615247 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (58 + 55) / 113][Stage 112:==============================>                      (64 + 49) / 113][Stage 112:========================================>            (87 + 26) / 113][Stage 112:==============================================>     (102 + 11) / 113]                                                                                [Stage 113:===========================>                         (60 + 54) / 114][Stage 113:==============================>                      (65 + 49) / 114][Stage 113:======================================>              (82 + 32) / 114][Stage 113:===============================================>    (104 + 10) / 114][Stage 113:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.043748535 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 5 AND partitionZIndex<=56", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=56,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.396993245 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==========================>                          (61 + 59) / 120][Stage 114:================================>                    (73 + 47) / 120][Stage 114:=======================================>             (89 + 31) / 120][Stage 114:===============================================>    (110 + 10) / 120]                                                                                [Stage 115:===========================>                         (62 + 59) / 121][Stage 115:==================================>                  (78 + 43) / 121][Stage 115:==========================================>          (97 + 24) / 121][Stage 115:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.069919188 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 09 AND partitionZIndex<=110", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=110,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.341125402 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 116:====================================>                (80 + 35) / 115][Stage 116:======================================>              (84 + 31) / 115][Stage 116:==========================================>          (93 + 22) / 115][Stage 116:==================================================>  (110 + 5) / 115][Stage 116:====================================================>(114 + 1) / 115]                                                                                [Stage 117:=====================================>               (81 + 35) / 116][Stage 117:==========================================>          (92 + 24) / 116][Stage 117:=============================================>       (99 + 17) / 116][Stage 117:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.777261488 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 5 AND partitionZIndex<=46", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=46,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.338630566 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 118:=======================================>             (85 + 30) / 115][Stage 118:=========================================>           (90 + 25) / 115][Stage 118:===============================================>    (104 + 11) / 115][Stage 118:===================================================> (111 + 4) / 115]                                                                                [Stage 119:=======================================>             (86 + 30) / 116][Stage 119:===========================================>         (96 + 20) / 116][Stage 119:=============================================>      (102 + 14) / 116][Stage 119:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.181506153 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 0 AND partitionZIndex<=61", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=61,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.480250216 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (59 + 54) / 113][Stage 120:==============================>                      (65 + 48) / 113][Stage 120:======================================>              (82 + 31) / 113][Stage 120:==============================================>      (99 + 14) / 113][Stage 120:===================================================> (110 + 3) / 113]                                                                                [Stage 121:===========================>                         (60 + 54) / 114][Stage 121:=================================>                   (71 + 43) / 114][Stage 121:=========================================>           (89 + 25) / 114][Stage 121:==============================================>     (103 + 11) / 114][Stage 121:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.282644706 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 55 AND partitionZIndex<=156", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=156,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397374809 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 61) / 121][Stage 122:============================>                        (66 + 55) / 121][Stage 122:===================================>                 (80 + 41) / 121][Stage 122:=============================================>      (105 + 16) / 121][Stage 122:====================================================>(119 + 2) / 121]                                                                                [Stage 123:==========================>                          (61 + 61) / 122][Stage 123:============================>                        (65 + 57) / 122][Stage 123:==================================>                  (79 + 43) / 122][Stage 123:============================================>       (104 + 18) / 122][Stage 123:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.137991487 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 42 AND partitionZIndex<=243", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=243,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.334223074 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 124:=====================================>               (82 + 33) / 115][Stage 124:=========================================>           (90 + 25) / 115][Stage 124:==================================================>  (109 + 6) / 115]                                                                                [Stage 125:======================================>              (84 + 32) / 116][Stage 125:===========================================>         (95 + 21) / 116][Stage 125:=================================================>   (109 + 7) / 116][Stage 125:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.558645447 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 7 AND partitionZIndex<=18", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=18,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.339550728 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=====================================>               (82 + 33) / 115][Stage 126:=========================================>           (90 + 25) / 115][Stage 126:==============================================>     (103 + 12) / 115][Stage 126:====================================================>(113 + 2) / 115]                                                                                [Stage 127:=====================================>               (83 + 33) / 116][Stage 127:=========================================>           (91 + 25) / 116][Stage 127:================================================>    (107 + 9) / 116][Stage 127:====================================================>(114 + 2) / 116][Stage 127:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.303062041 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 3 AND partitionZIndex<=34", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=34,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.358859262 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=================================>                   (72 + 41) / 113][Stage 128:=======================================>             (85 + 28) / 113][Stage 128:============================================>        (95 + 18) / 113][Stage 128:==============================================>     (100 + 13) / 113][Stage 128:==================================================>  (107 + 6) / 113]                                                                                [Stage 129:======================================>              (83 + 31) / 114][Stage 129:==========================================>          (91 + 23) / 114][Stage 129:===============================================>    (104 + 10) / 114][Stage 129:===================================================> (111 + 3) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.745982742 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 37 AND partitionZIndex<=138", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=138,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.396249694 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (59 + 54) / 113][Stage 130:================================>                    (69 + 44) / 113][Stage 130:=======================================>             (85 + 28) / 113][Stage 130:==================================================>  (107 + 6) / 113]                                                                                [Stage 131:============================>                        (61 + 53) / 114][Stage 131:==================================>                  (74 + 40) / 114][Stage 131:==========================================>          (91 + 23) / 114][Stage 131:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.082121933 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 9 AND partitionZIndex<=80", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=80,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.390801783 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 132:============================>                        (60 + 53) / 113][Stage 132:==============================>                      (66 + 47) / 113][Stage 132:=======================================>             (84 + 29) / 113][Stage 132:==================================================>  (108 + 5) / 113]                                                                                [Stage 133:=============================>                       (63 + 51) / 114][Stage 133:=================================>                   (73 + 41) / 114][Stage 133:===========================================>         (94 + 20) / 114][Stage 133:=================================================>   (106 + 8) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.132936693 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 51 AND partitionZIndex<=152", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=152,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.362385521 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 134:================================>                    (72 + 46) / 118][Stage 134:====================================>                (82 + 36) / 118][Stage 134:=============================================>      (103 + 15) / 118][Stage 134:==================================================>  (113 + 5) / 118]                                                                                [Stage 135:================================>                    (74 + 45) / 119][Stage 135:===================================>                 (80 + 39) / 119][Stage 135:=============================================>      (105 + 14) / 119][Stage 135:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.150614137 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 02 AND partitionZIndex<=203", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=203,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.343022287 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 136:====================================>                (79 + 36) / 115][Stage 136:======================================>              (83 + 32) / 115][Stage 136:=============================================>      (100 + 15) / 115]                                                                                [Stage 137:=====================================>               (82 + 34) / 116][Stage 137:========================================>            (89 + 27) / 116][Stage 137:==================================================>  (110 + 6) / 116][Stage 137:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.543626145 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 05 AND partitionZIndex<=206", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=206,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.381635597 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (58 + 55) / 113][Stage 138:=============================>                       (62 + 51) / 113][Stage 138:==================================>                  (73 + 40) / 113][Stage 138:=========================================>           (89 + 24) / 113][Stage 138:==================================================>  (107 + 6) / 113]                                                                                [Stage 139:============================>                        (61 + 53) / 114][Stage 139:==================================>                  (75 + 39) / 114][Stage 139:=============================================>       (97 + 17) / 114][Stage 139:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.107028769 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 08 AND partitionZIndex<=109", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=109,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.400014254 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (63 + 57) / 120][Stage 140:==================================>                  (77 + 43) / 120][Stage 140:============================================>       (103 + 17) / 120][Stage 140:===================================================> (117 + 3) / 120]                                                                                [Stage 141:==========================>                          (61 + 60) / 121][Stage 141:============================>                        (66 + 55) / 121][Stage 141:===================================>                 (82 + 39) / 121][Stage 141:=============================================>      (107 + 14) / 121][Stage 141:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.130087766 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 8 AND partitionZIndex<=99", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=99,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.400082995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (60 + 61) / 121][Stage 142:==============================>                      (69 + 52) / 121][Stage 142:===================================>                 (81 + 40) / 121][Stage 142:============================================>       (103 + 18) / 121][Stage 142:====================================================>(120 + 1) / 121]                                                                                [Stage 143:==========================>                          (61 + 61) / 122][Stage 143:===========================>                         (63 + 59) / 122][Stage 143:=================================>                   (78 + 44) / 122][Stage 143:========================================>            (93 + 29) / 122][Stage 143:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.155984119 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 22 AND partitionZIndex<=223", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=223,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.372059512 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==============================>                      (67 + 48) / 115][Stage 144:====================================>                (80 + 35) / 115][Stage 144:============================================>        (97 + 18) / 115][Stage 144:=================================================>   (107 + 8) / 115][Stage 144:====================================================>(114 + 1) / 115]                                                                                [Stage 145:=====================================>               (83 + 33) / 116][Stage 145:============================================>        (97 + 19) / 116][Stage 145:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.854355841 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 23 AND partitionZIndex<=224", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=224,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.379475144 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (58 + 55) / 113][Stage 146:=================================>                   (72 + 41) / 113][Stage 146:=======================================>             (85 + 28) / 113][Stage 146:===============================================>    (103 + 10) / 113][Stage 146:====================================================>(112 + 1) / 113]                                                                                [Stage 147:===========================>                         (59 + 55) / 114][Stage 147:================================>                    (70 + 44) / 114][Stage 147:=========================================>           (89 + 25) / 114][Stage 147:==============================================>     (102 + 12) / 114][Stage 147:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.099719307 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 0 AND partitionZIndex<=31", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=31,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.336312021 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 148:======================================>              (84 + 31) / 115][Stage 148:=============================================>       (99 + 16) / 115][Stage 148:=================================================>   (107 + 8) / 115]                                                                                [Stage 149:========================================>            (88 + 28) / 116][Stage 149:===========================================>         (96 + 20) / 116][Stage 149:==============================================>     (104 + 12) / 116][Stage 149:==================================================>  (111 + 5) / 116][Stage 149:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.072141311 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 08 AND partitionZIndex<=209", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=209,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.38333506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (59 + 54) / 113][Stage 150:==============================>                      (65 + 48) / 113][Stage 150:=========================================>           (89 + 24) / 113][Stage 150:==================================================>  (108 + 5) / 113]                                                                                [Stage 151:==============================>                      (66 + 48) / 114][Stage 151:====================================>                (79 + 35) / 114][Stage 151:=============================================>      (100 + 14) / 114]                                                                                Time elapsed: 2.940691849 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 3 AND partitionZIndex<=54", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=54,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.385241119 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (59 + 54) / 113][Stage 152:=================================>                   (71 + 42) / 113][Stage 152:========================================>            (87 + 26) / 113][Stage 152:==============================================>     (102 + 11) / 113]                                                                                [Stage 153:================================>                    (69 + 45) / 114][Stage 153:=====================================>               (81 + 33) / 114][Stage 153:==============================================>     (101 + 13) / 114][Stage 153:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.042301264 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 25 AND partitionZIndex<=126", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=126,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.357385076 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:==================================>                  (76 + 42) / 118][Stage 154:========================================>            (90 + 28) / 118][Stage 154:==============================================>     (106 + 12) / 118][Stage 154:===================================================> (115 + 3) / 118]                                                                                [Stage 155:================================>                    (74 + 45) / 119][Stage 155:===================================>                 (80 + 39) / 119][Stage 155:========================================>            (91 + 28) / 119][Stage 155:=============================================>      (103 + 16) / 119][Stage 155:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.253239257 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 15 AND partitionZIndex<=216", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=216,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.360799132 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (73 + 45) / 118][Stage 156:==================================>                  (76 + 42) / 118][Stage 156:====================================>                (82 + 36) / 118][Stage 156:=========================================>           (92 + 26) / 118][Stage 156:================================================>    (109 + 9) / 118]                                                                                [Stage 157:=================================>                   (75 + 44) / 119][Stage 157:===================================>                 (80 + 39) / 119][Stage 157:==========================================>          (95 + 24) / 119][Stage 157:================================================>    (110 + 9) / 119][Stage 157:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.344857967 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 6 AND partitionZIndex<=17", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=17,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.403152638 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==========================>                          (60 + 61) / 121][Stage 158:=============================>                       (68 + 53) / 121][Stage 158:======================================>              (89 + 32) / 121][Stage 158:==================================================>  (115 + 6) / 121][Stage 158:==================================================>  (116 + 5) / 121]                                                                                [Stage 159:==========================>                          (61 + 61) / 122][Stage 159:=============================>                       (67 + 55) / 122][Stage 159:==================================>                  (80 + 42) / 122][Stage 159:===========================================>         (99 + 23) / 122][Stage 159:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.169642921 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 4 AND partitionZIndex<=25", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=25,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.378122811 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (58 + 55) / 113][Stage 160:==============================>                      (64 + 49) / 113][Stage 160:====================================>                (77 + 36) / 113][Stage 160:==============================================>      (99 + 14) / 113][Stage 160:===================================================> (110 + 3) / 113]                                                                                [Stage 161:===========================>                         (60 + 54) / 114][Stage 161:=============================>                       (64 + 50) / 114][Stage 161:=======================================>             (86 + 28) / 114][Stage 161:==============================================>     (103 + 11) / 114][Stage 161:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.025683395 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 97 AND partitionZIndex<=198", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=198,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.362885972 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 162:====================================>                (78 + 35) / 113][Stage 162:=========================================>           (89 + 24) / 113][Stage 162:=============================================>       (98 + 15) / 113][Stage 162:================================================>    (104 + 9) / 113][Stage 162:====================================================>(112 + 1) / 113]                                                                                [Stage 163:===================================>                 (77 + 37) / 114][Stage 163:=======================================>             (84 + 30) / 114][Stage 163:==============================================>      (99 + 15) / 114][Stage 163:=================================================>   (106 + 8) / 114][Stage 163:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.109610173 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 8 AND partitionZIndex<=89", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=89,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.41138579 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 61) / 121][Stage 164:===============================>                     (73 + 48) / 121][Stage 164:==========================================>          (98 + 23) / 121][Stage 164:=================================================>   (112 + 9) / 121][Stage 164:===================================================> (118 + 3) / 121]                                                                                [Stage 165:==========================>                          (61 + 61) / 122][Stage 165:=================================>                   (76 + 46) / 122][Stage 165:=========================================>           (95 + 27) / 122][Stage 165:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.194939331 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 62 AND partitionZIndex<=163", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=163,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.393828554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 60) / 120][Stage 166:==============================>                      (68 + 52) / 120][Stage 166:=====================================>               (84 + 36) / 120][Stage 166:=============================================>      (105 + 15) / 120][Stage 166:====================================================>(118 + 2) / 120]                                                                                [Stage 167:==========================>                          (61 + 60) / 121][Stage 167:==============================>                      (70 + 51) / 121][Stage 167:=======================================>             (90 + 31) / 121][Stage 167:===============================================>    (110 + 11) / 121]                                                                                Time elapsed: 2.964593954 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 80 AND partitionZIndex<=181", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=181,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.367469708 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 168:======================================>              (82 + 31) / 113][Stage 168:=========================================>           (88 + 25) / 113][Stage 168:=============================================>       (98 + 15) / 113][Stage 168:=================================================>   (106 + 7) / 113]                                                                                [Stage 169:=======================================>             (85 + 29) / 114][Stage 169:=============================================>       (97 + 17) / 114][Stage 169:===============================================>    (104 + 10) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.899862684 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 49 AND partitionZIndex<=150", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=150,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.401554066 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 61) / 121][Stage 170:============================>                        (65 + 56) / 121][Stage 170:====================================>                (83 + 38) / 121][Stage 170:==============================================>     (108 + 13) / 121]                                                                                [Stage 171:===========================>                         (63 + 59) / 122][Stage 171:==============================>                      (71 + 51) / 122][Stage 171:=======================================>             (92 + 30) / 122][Stage 171:===============================================>    (111 + 11) / 122][Stage 171:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.148953012 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 29 AND partitionZIndex<=130", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=130,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.390546521 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (60 + 60) / 120][Stage 172:==============================>                      (68 + 52) / 120][Stage 172:=====================================>               (84 + 36) / 120][Stage 172:===============================================>    (109 + 11) / 120]                                                                                [Stage 173:==========================>                          (61 + 60) / 121][Stage 173:==============================>                      (70 + 51) / 121][Stage 173:======================================>              (89 + 32) / 121][Stage 173:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.02262354 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 1 AND partitionZIndex<=92", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=92,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.341539685 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 174:=====================================>               (81 + 34) / 115][Stage 174:=======================================>             (86 + 29) / 115][Stage 174:=============================================>       (99 + 16) / 115][Stage 174:=================================================>   (108 + 7) / 115][Stage 174:===================================================> (111 + 4) / 115][Stage 174:====================================================>(114 + 1) / 115]                                                                                [Stage 175:======================================>              (84 + 32) / 116][Stage 175:=============================================>       (99 + 17) / 116][Stage 175:=================================================>   (108 + 8) / 116][Stage 175:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.993136305 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 3 AND partitionZIndex<=64", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=64,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.353104031 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===================================>                 (75 + 38) / 113][Stage 176:=====================================>               (79 + 34) / 113][Stage 176:==========================================>          (90 + 23) / 113][Stage 176:==============================================>     (100 + 13) / 113][Stage 176:==================================================>  (108 + 5) / 113][Stage 176:===================================================> (110 + 3) / 113]                                                                                [Stage 177:====================================>                (79 + 35) / 114][Stage 177:=========================================>           (89 + 25) / 114][Stage 177:=============================================>      (100 + 14) / 114][Stage 177:=================================================>   (106 + 8) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.492486177 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 57 AND partitionZIndex<=158", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=158,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.460508235 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===================================>                 (75 + 38) / 113][Stage 178:=======================================>             (84 + 29) / 113][Stage 178:===========================================>         (93 + 20) / 113][Stage 178:=================================================>   (105 + 8) / 113][Stage 178:====================================================>(111 + 2) / 113]                                                                                [Stage 179:===================================>                 (76 + 38) / 114][Stage 179:=======================================>             (86 + 28) / 114][Stage 179:============================================>        (96 + 18) / 114][Stage 179:=================================================>   (106 + 8) / 114][Stage 179:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.264598215 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 1 AND partitionZIndex<=22", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=22,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.413669635 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==========================>                          (60 + 60) / 120][Stage 180:=============================>                       (66 + 54) / 120][Stage 180:===================================>                 (80 + 40) / 120][Stage 180:============================================>       (103 + 17) / 120][Stage 180:==================================================>  (115 + 5) / 120]                                                                                [Stage 181:===========================>                         (62 + 59) / 121][Stage 181:===============================>                     (72 + 49) / 121][Stage 181:======================================>              (88 + 33) / 121][Stage 181:===============================================>    (110 + 11) / 121][Stage 181:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.189709217 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 37 AND partitionZIndex<=238", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=238,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398910675 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 182:================================>                    (73 + 45) / 118][Stage 182:==================================>                  (77 + 41) / 118][Stage 182:====================================>                (82 + 36) / 118][Stage 182:===========================================>         (96 + 22) / 118][Stage 182:=================================================>   (110 + 8) / 118]                                                                                [Stage 183:================================>                    (73 + 46) / 119][Stage 183:=================================>                   (75 + 44) / 119][Stage 183:===================================>                 (80 + 39) / 119][Stage 183:=======================================>             (88 + 31) / 119][Stage 183:============================================>        (99 + 20) / 119][Stage 183:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.410040827 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 87 AND partitionZIndex<=188", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=188,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.344953324 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=====================================>               (81 + 34) / 115][Stage 184:========================================>            (87 + 28) / 115][Stage 184:============================================>        (97 + 18) / 115][Stage 184:==============================================>     (102 + 13) / 115][Stage 184:====================================================>(114 + 1) / 115]                                                                                [Stage 185:=====================================>               (83 + 33) / 116][Stage 185:==========================================>          (94 + 22) / 116][Stage 185:================================================>    (107 + 9) / 116][Stage 185:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.709838859 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 1 AND partitionZIndex<=12", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=12,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397903018 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 60) / 120][Stage 186:===========================>                         (62 + 58) / 120][Stage 186:==============================>                      (69 + 51) / 120][Stage 186:===========================================>         (98 + 22) / 120][Stage 186:==================================================>  (114 + 6) / 120]                                                                                [Stage 187:============================>                        (65 + 56) / 121][Stage 187:==================================>                  (79 + 42) / 121][Stage 187:==========================================>          (98 + 23) / 121][Stage 187:=================================================>   (114 + 7) / 121][Stage 187:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.5550008 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 11 AND partitionZIndex<=112", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=112,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.331920842 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 188:=======================================>             (85 + 30) / 115][Stage 188:============================================>        (96 + 19) / 115][Stage 188:===============================================>    (104 + 11) / 115][Stage 188:====================================================>(114 + 1) / 115]                                                                                [Stage 189:=====================================>               (82 + 34) / 116][Stage 189:=========================================>           (90 + 26) / 116][Stage 189:============================================>       (100 + 16) / 116][Stage 189:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.736227639 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 4 AND partitionZIndex<=95", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=95,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.40585379 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 60) / 120][Stage 190:=================================>                   (76 + 44) / 120][Stage 190:==========================================>          (97 + 23) / 120][Stage 190:==================================================>  (115 + 5) / 120]                                                                                [Stage 191:==========================>                          (61 + 60) / 121][Stage 191:=============================>                       (68 + 53) / 121][Stage 191:=======================================>             (90 + 31) / 121][Stage 191:=================================================>   (112 + 9) / 121][Stage 191:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.092980736 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 71 AND partitionZIndex<=172", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=172,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.368682578 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==============================>                      (66 + 49) / 115][Stage 192:=====================================>               (82 + 33) / 115][Stage 192:===========================================>         (95 + 20) / 115][Stage 192:==================================================>  (109 + 6) / 115][Stage 192:===================================================> (112 + 3) / 115][Stage 192:====================================================>(114 + 1) / 115]                                                                                [Stage 193:==============================>                      (67 + 49) / 116][Stage 193:=====================================>               (81 + 35) / 116][Stage 193:============================================>        (97 + 19) / 116][Stage 193:=================================================>   (108 + 8) / 116][Stage 193:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.245483513 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 72 AND partitionZIndex<=173", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=173,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.347854225 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 194:======================================>              (83 + 32) / 115][Stage 194:============================================>        (96 + 19) / 115][Stage 194:=================================================>   (108 + 7) / 115][Stage 194:====================================================>(114 + 1) / 115]                                                                                [Stage 195:=====================================>               (83 + 33) / 116][Stage 195:==========================================>          (94 + 22) / 116][Stage 195:==================================================>  (110 + 6) / 116][Stage 195:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.642192195 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 21 AND partitionZIndex<=122", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=122,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.382937821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===============================>                     (69 + 46) / 115][Stage 196:=====================================>               (82 + 33) / 115][Stage 196:===========================================>         (95 + 20) / 115][Stage 196:==================================================>  (110 + 5) / 115]                                                                                [Stage 197:===================================>                 (77 + 39) / 116][Stage 197:============================================>        (98 + 18) / 116][Stage 197:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.555264048 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 89 AND partitionZIndex<=190", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=190,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.351109582 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 198:====================================>                (80 + 35) / 115][Stage 198:=======================================>             (86 + 29) / 115][Stage 198:===========================================>         (94 + 21) / 115][Stage 198:==================================================>  (109 + 6) / 115]                                                                                [Stage 199:=======================================>             (87 + 29) / 116][Stage 199:============================================>        (98 + 18) / 116][Stage 199:===============================================>    (105 + 11) / 116][Stage 199:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.819970144 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 90 AND partitionZIndex<=191", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=191,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.390418414 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 61) / 121][Stage 200:=============================>                       (68 + 53) / 121][Stage 200:==================================>                  (79 + 42) / 121][Stage 200:===========================================>        (101 + 20) / 121][Stage 200:===================================================> (118 + 3) / 121]                                                                                [Stage 201:==========================>                          (61 + 61) / 122][Stage 201:===========================>                         (63 + 59) / 122][Stage 201:==================================>                  (80 + 42) / 122][Stage 201:==========================================>          (98 + 24) / 122][Stage 201:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.034393783 seconds
res203: Int = 0

scala> 

scala> :quit

real	9m57.742s
user	11m18.668s
sys	0m35.180s
