Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 21:23:27 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 21:23:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 21:23:41 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 21:23:42 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 21:23:44 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 21:23:55 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524212344-0596).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 4.399463966 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:==========================>                            (56 + 59) / 115][Stage 0:===========================>                           (57 + 58) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:===================================>                   (75 + 40) / 115][Stage 0:========================================>              (85 + 30) / 115][Stage 0:===========================================>           (91 + 24) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:==========================>                            (56 + 60) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:=======================================>               (84 + 32) / 116][Stage 1:=============================================>         (95 + 21) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:====================================================>  (110 + 6) / 116]                                                                                Time elapsed: 12.771104754 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 45 AND partitionZIndex<=246", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=246,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.782225146 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 2:======================>                                (50 + 70) / 120][Stage 2:==========================>                            (57 + 63) / 120][Stage 2:===========================>                           (61 + 59) / 120][Stage 2:============================>                          (63 + 57) / 120][Stage 2:======================================>                (84 + 36) / 120][Stage 2:============================================>          (97 + 23) / 120][Stage 2:================================================>     (107 + 13) / 120]                                                                                [Stage 3:==========================>                            (59 + 62) / 121][Stage 3:============================>                          (62 + 59) / 121][Stage 3:==============================>                        (67 + 54) / 121][Stage 3:================================>                      (72 + 49) / 121][Stage 3:=====================================>                 (82 + 39) / 121][Stage 3:===========================================>           (95 + 26) / 121][Stage 3:===================================================>   (113 + 8) / 121][Stage 3:======================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.790690871 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 8 AND partitionZIndex<=79", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=79,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.716056513 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 4:========================>                              (51 + 62) / 113][Stage 4:===========================>                           (56 + 57) / 113][Stage 4:============================>                          (59 + 54) / 113][Stage 4:==============================>                        (63 + 50) / 113][Stage 4:====================================>                  (74 + 39) / 113][Stage 4:===========================================>           (89 + 24) / 113][Stage 4:==================================================>    (104 + 9) / 113]                                                                                [Stage 5:============================>                          (60 + 54) / 114][Stage 5:=============================>                         (62 + 52) / 114][Stage 5:==================================>                    (72 + 42) / 114][Stage 5:========================================>              (83 + 31) / 114][Stage 5:================================================>     (102 + 12) / 114][Stage 5:====================================================>  (108 + 6) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.300408099 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 6 AND partitionZIndex<=67", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=67,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.576938119 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===============================>                       (65 + 50) / 115][Stage 6:=================================>                     (70 + 45) / 115][Stage 6:=======================================>               (83 + 32) / 115][Stage 6:============================================>          (93 + 22) / 115][Stage 6:===============================================>      (101 + 14) / 115][Stage 6:===================================================>   (107 + 8) / 115][Stage 6:=====================================================> (111 + 4) / 115]                                                                                [Stage 7:===============================>                       (67 + 49) / 116][Stage 7:====================================>                  (77 + 39) / 116][Stage 7:==========================================>            (89 + 27) / 116][Stage 7:=============================================>         (97 + 19) / 116][Stage 7:==============================================>       (100 + 16) / 116][Stage 7:==================================================>    (107 + 9) / 116][Stage 7:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 4.552619894 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5  AND partitionZIndex<=6", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=6,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.562889371 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=====================================>                 (79 + 36) / 115][Stage 8:=======================================>               (83 + 32) / 115][Stage 8:============================================>          (93 + 22) / 115][Stage 8:================================================>     (103 + 12) / 115][Stage 8:=====================================================> (111 + 4) / 115]                                                                                [Stage 9:======================================>                (81 + 35) / 116][Stage 9:========================================>              (86 + 30) / 116][Stage 9:==============================================>        (99 + 17) / 116][Stage 9:===============================================>      (101 + 15) / 116][Stage 9:==================================================>    (107 + 9) / 116][Stage 9:======================================================>(114 + 2) / 116][Stage 9:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.867432761 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 78 AND partitionZIndex<=179", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=179,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.575853278 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 10:============================>                         (61 + 54) / 115][Stage 10:=================================>                    (71 + 44) / 115][Stage 10:=====================================>                (80 + 35) / 115][Stage 10:===========================================>          (93 + 22) / 115][Stage 10:===============================================>     (102 + 13) / 115][Stage 10:================================================>    (105 + 10) / 115][Stage 10:===================================================>  (110 + 5) / 115][Stage 10:=====================================================>(114 + 1) / 115]                                                                                [Stage 11:==============================>                       (66 + 50) / 116][Stage 11:===================================>                  (77 + 39) / 116][Stage 11:=======================================>              (84 + 32) / 116][Stage 11:=============================================>        (97 + 19) / 116][Stage 11:===============================================>     (103 + 13) / 116][Stage 11:===============================================>     (104 + 12) / 116][Stage 11:=================================================>    (107 + 9) / 116][Stage 11:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.508169305 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 31 AND partitionZIndex<=132", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=132,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.504035804 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 12:======================================>               (82 + 33) / 115][Stage 12:========================================>             (87 + 28) / 115][Stage 12:=============================================>        (96 + 19) / 115][Stage 12:==============================================>       (99 + 16) / 115][Stage 12:===============================================>     (103 + 12) / 115][Stage 12:===================================================>  (109 + 6) / 115][Stage 12:====================================================> (112 + 3) / 115]                                                                                [Stage 13:=======================================>              (84 + 32) / 116][Stage 13:=============================================>        (97 + 19) / 116][Stage 13:==============================================>      (102 + 14) / 116][Stage 13:===============================================>     (105 + 11) / 116][Stage 13:==================================================>   (109 + 7) / 116][Stage 13:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 4.097100347 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 57 AND partitionZIndex<=158", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=158,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.541906881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (56 + 57) / 113][Stage 14:============================>                         (59 + 54) / 113][Stage 14:================================>                     (68 + 45) / 113][Stage 14:====================================>                 (76 + 37) / 113][Stage 14:===========================================>          (92 + 21) / 113][Stage 14:=================================================>    (104 + 9) / 113][Stage 14:=====================================================>(112 + 1) / 113]                                                                                [Stage 15:=============================>                        (63 + 51) / 114][Stage 15:===================================>                  (74 + 40) / 114][Stage 15:===========================================>          (92 + 22) / 114][Stage 15:==============================================>      (100 + 14) / 114][Stage 15:===================================================>  (109 + 5) / 114][Stage 15:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.027466989 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 07 AND partitionZIndex<=108", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=108,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.497450723 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 16:==================================>                   (73 + 40) / 113][Stage 16:=========================================>            (87 + 26) / 113][Stage 16:=============================================>        (96 + 17) / 113][Stage 16:==================================================>   (105 + 8) / 113][Stage 16:===================================================>  (108 + 5) / 113][Stage 16:====================================================> (110 + 3) / 113][Stage 16:=====================================================>(111 + 2) / 113]                                                                                [Stage 17:===================================>                  (75 + 39) / 114][Stage 17:=======================================>              (83 + 31) / 114][Stage 17:============================================>         (93 + 21) / 114][Stage 17:================================================>    (104 + 10) / 114][Stage 17:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.60329084 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 61 AND partitionZIndex<=162", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=162,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.451183918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 18:=================================>                    (70 + 43) / 113][Stage 18:=======================================>              (83 + 30) / 113][Stage 18:===========================================>          (90 + 23) / 113][Stage 18:==============================================>      (100 + 13) / 113][Stage 18:===============================================>     (102 + 11) / 113][Stage 18:==================================================>   (106 + 7) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:===================================>                  (74 + 40) / 114][Stage 19:======================================>               (81 + 33) / 114][Stage 19:============================================>         (93 + 21) / 114][Stage 19:=================================================>    (105 + 9) / 114][Stage 19:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.697034965 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 83 AND partitionZIndex<=184", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=184,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.481477708 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 20:=================================>                    (71 + 42) / 113][Stage 20:========================================>             (84 + 29) / 113][Stage 20:===========================================>          (90 + 23) / 113][Stage 20:==============================================>      (100 + 13) / 113][Stage 20:=====================================================>(111 + 2) / 113]                                                                                [Stage 21:=======================================>              (83 + 31) / 114][Stage 21:============================================>         (94 + 20) / 114][Stage 21:==================================================>   (106 + 8) / 114][Stage 21:====================================================> (110 + 4) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.242255782 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 4 AND partitionZIndex<=85", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=85,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.539263477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (60 + 60) / 120][Stage 22:=============================>                        (66 + 54) / 120][Stage 22:===================================>                  (79 + 41) / 120][Stage 22:========================================>             (91 + 29) / 120][Stage 22:================================================>    (110 + 10) / 120][Stage 22:====================================================> (116 + 4) / 120]                                                                                [Stage 23:===========================>                          (61 + 60) / 121][Stage 23:==============================>                       (69 + 52) / 121][Stage 23:=========================================>            (93 + 28) / 121][Stage 23:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.391091165 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 1 AND partitionZIndex<=72", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=72,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.537778973 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 24:=============================>                        (61 + 52) / 113][Stage 24:==================================>                   (73 + 40) / 113][Stage 24:==========================================>           (88 + 25) / 113][Stage 24:==============================================>       (97 + 16) / 113][Stage 24:===================================================>  (108 + 5) / 113]                                                                                [Stage 25:=============================>                        (62 + 52) / 114][Stage 25:================================>                     (69 + 45) / 114][Stage 25:========================================>             (85 + 29) / 114][Stage 25:==================================================>   (106 + 8) / 114][Stage 25:===================================================>  (108 + 6) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.669139353 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 84 AND partitionZIndex<=185", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=185,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.442760012 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 26:====================================>                 (77 + 36) / 113][Stage 26:==========================================>           (88 + 25) / 113][Stage 26:==============================================>      (100 + 13) / 113][Stage 26:===================================================>  (108 + 5) / 113][Stage 26:=====================================================>(112 + 1) / 113]                                                                                [Stage 27:=====================================>                (79 + 35) / 114][Stage 27:============================================>         (93 + 21) / 114][Stage 27:==============================================>      (100 + 14) / 114][Stage 27:==================================================>   (106 + 8) / 114][Stage 27:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.419360564 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 20 AND partitionZIndex<=121", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=121,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.473414824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (58 + 55) / 113][Stage 28:==============================>                       (64 + 49) / 113][Stage 28:======================================>               (81 + 32) / 113][Stage 28:================================================>    (103 + 10) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:=============================>                        (62 + 52) / 114][Stage 29:=====================================>                (79 + 35) / 114][Stage 29:==============================================>      (100 + 14) / 114][Stage 29:====================================================> (110 + 4) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.419973115 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 97 AND partitionZIndex<=198", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=198,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.619725732 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==========================>                           (60 + 61) / 121][Stage 30:==============================>                       (69 + 52) / 121][Stage 30:========================================>             (90 + 31) / 121][Stage 30:==============================================>      (106 + 15) / 121][Stage 30:=====================================================>(119 + 2) / 121]                                                                                [Stage 31:===========================>                          (61 + 61) / 122][Stage 31:==============================>                       (68 + 54) / 122][Stage 31:===================================>                  (81 + 41) / 122][Stage 31:=========================================>            (94 + 28) / 122][Stage 31:==================================================>   (114 + 8) / 122][Stage 31:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.616996572 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 36 AND partitionZIndex<=237", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=237,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.503479414 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 32:==========================>                           (60 + 61) / 121][Stage 32:==============================>                       (68 + 53) / 121][Stage 32:=====================================>                (85 + 36) / 121][Stage 32:==============================================>      (107 + 14) / 121][Stage 32:====================================================> (117 + 4) / 121]                                                                                [Stage 33:===========================>                          (61 + 61) / 122][Stage 33:==============================>                       (68 + 54) / 122][Stage 33:======================================>               (87 + 35) / 122][Stage 33:==================================================>   (114 + 8) / 122][Stage 33:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.395336063 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 9 AND partitionZIndex<=40", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=40,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.471658382 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 34:>                                                       (0 + 0) / 118][Stage 34:================================>                     (72 + 46) / 118][Stage 34:===================================>                  (77 + 41) / 118][Stage 34:========================================>             (89 + 29) / 118][Stage 34:===============================================>     (105 + 13) / 118][Stage 34:====================================================> (115 + 3) / 118]                                                                                [Stage 35:================================>                     (72 + 47) / 119][Stage 35:=====================================>                (83 + 36) / 119][Stage 35:============================================>         (97 + 22) / 119][Stage 35:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.265188041 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 09 AND partitionZIndex<=210", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=210,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.463173972 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 36:>                                                       (0 + 0) / 118][Stage 36:================================>                     (71 + 47) / 118][Stage 36:===================================>                  (78 + 40) / 118][Stage 36:=========================================>            (91 + 27) / 118][Stage 36:===============================================>     (105 + 13) / 118][Stage 36:=====================================================>(117 + 1) / 118]                                                                                [Stage 37:=================================>                    (73 + 46) / 119][Stage 37:===================================>                  (79 + 40) / 119][Stage 37:==========================================>           (93 + 26) / 119][Stage 37:===============================================>     (106 + 13) / 119][Stage 37:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.108281882 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9  AND partitionZIndex<=10", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=10,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.51774377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==========================>                           (60 + 61) / 121][Stage 38:=============================>                        (67 + 54) / 121][Stage 38:======================================>               (86 + 35) / 121][Stage 38:==============================================>      (107 + 14) / 121][Stage 38:====================================================> (118 + 3) / 121][Stage 38:=====================================================>(120 + 1) / 121]                                                                                [Stage 39:===========================>                          (63 + 59) / 122][Stage 39:=================================>                    (76 + 46) / 122][Stage 39:======================================>               (88 + 34) / 122][Stage 39:===============================================>     (110 + 12) / 122][Stage 39:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.619344376 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8  AND partitionZIndex<=9", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=9,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.442183279 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==================================>                   (73 + 40) / 113][Stage 40:=========================================>            (86 + 27) / 113][Stage 40:=============================================>        (96 + 17) / 113][Stage 40:===============================================>     (102 + 11) / 113][Stage 40:=====================================================>(111 + 2) / 113]                                                                                [Stage 41:=====================================>                (80 + 34) / 114][Stage 41:===========================================>          (91 + 23) / 114][Stage 41:==============================================>       (99 + 15) / 114][Stage 41:===================================================>  (109 + 5) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.638328613 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 9 AND partitionZIndex<=100", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=100,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.423503111 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 42:=====================================>                (78 + 35) / 113][Stage 42:=========================================>            (87 + 26) / 113][Stage 42:=============================================>        (96 + 17) / 113][Stage 42:=================================================>    (104 + 9) / 113][Stage 42:====================================================> (109 + 4) / 113][Stage 42:=====================================================>(111 + 2) / 113]                                                                                [Stage 43:======================================>               (82 + 32) / 114][Stage 43:=========================================>            (88 + 26) / 114][Stage 43:==============================================>       (99 + 15) / 114][Stage 43:==================================================>   (107 + 7) / 114][Stage 43:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.537438278 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 3 AND partitionZIndex<=14", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=14,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.603078723 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (60 + 60) / 120][Stage 44:==================================>                   (76 + 44) / 120][Stage 44:======================================>               (85 + 35) / 120][Stage 44:=================================================>    (111 + 9) / 120][Stage 44:====================================================> (117 + 3) / 120]                                                                                [Stage 45:============================>                         (63 + 58) / 121][Stage 45:================================>                     (73 + 48) / 121][Stage 45:===========================================>          (97 + 24) / 121][Stage 45:===================================================>  (115 + 6) / 121][Stage 45:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.586018463 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 9 AND partitionZIndex<=60", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=60,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.462234314 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (60 + 60) / 120][Stage 46:===========================>                          (62 + 58) / 120][Stage 46:===================================>                  (79 + 41) / 120][Stage 46:============================================>         (99 + 21) / 120][Stage 46:====================================================> (117 + 3) / 120]                                                                                [Stage 47:===========================>                          (62 + 59) / 121][Stage 47:===============================>                      (70 + 51) / 121][Stage 47:==========================================>           (96 + 25) / 121][Stage 47:====================================================> (117 + 4) / 121][Stage 47:=====================================================>(119 + 2) / 121][Stage 47:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.933708991 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 06 AND partitionZIndex<=207", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=207,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.456947376 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (58 + 55) / 113][Stage 48:=================================>                    (71 + 42) / 113][Stage 48:=========================================>            (87 + 26) / 113][Stage 48:=================================================>    (104 + 9) / 113][Stage 48:====================================================> (109 + 4) / 113][Stage 48:=====================================================>(112 + 1) / 113]                                                                                [Stage 49:============================>                         (60 + 54) / 114][Stage 49:==================================>                   (72 + 42) / 114][Stage 49:============================================>         (94 + 20) / 114][Stage 49:===================================================>  (108 + 6) / 114][Stage 49:====================================================> (110 + 4) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.183428907 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 04 AND partitionZIndex<=205", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=205,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.467340475 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 50:================================>                     (72 + 46) / 118][Stage 50:==========================================>           (92 + 26) / 118][Stage 50:================================================>    (108 + 10) / 118][Stage 50:===================================================>  (113 + 5) / 118]                                                                                [Stage 51:==================================>                   (75 + 44) / 119][Stage 51:========================================>             (89 + 30) / 119][Stage 51:===============================================>     (107 + 12) / 119]                                                                                Time elapsed: 2.989390525 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 87 AND partitionZIndex<=188", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=188,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.475337965 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===========================>                          (62 + 58) / 120][Stage 52:===============================>                      (70 + 50) / 120][Stage 52:========================================>             (91 + 29) / 120][Stage 52:===============================================>     (107 + 13) / 120][Stage 52:====================================================> (117 + 3) / 120]                                                                                [Stage 53:===========================>                          (62 + 59) / 121][Stage 53:=================================>                    (74 + 47) / 121][Stage 53:============================================>        (102 + 19) / 121][Stage 53:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.178663259 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 3 AND partitionZIndex<=94", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=94,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.465792071 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (60 + 60) / 120][Stage 54:============================>                         (64 + 56) / 120][Stage 54:======================================>               (86 + 34) / 120][Stage 54:====================================================> (116 + 4) / 120]                                                                                [Stage 55:===========================>                          (61 + 60) / 121][Stage 55:==============================>                       (69 + 52) / 121][Stage 55:======================================>               (86 + 35) / 121][Stage 55:=================================================>    (112 + 9) / 121][Stage 55:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.178819487 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 02 AND partitionZIndex<=203", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=203,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.473623181 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==========================>                           (60 + 61) / 121][Stage 56:=============================>                        (65 + 56) / 121][Stage 56:==================================>                   (77 + 44) / 121][Stage 56:===========================================>          (98 + 23) / 121][Stage 56:===================================================>  (115 + 6) / 121][Stage 56:=====================================================>(120 + 1) / 121]                                                                                [Stage 57:===========================>                          (61 + 61) / 122][Stage 57:=============================>                        (66 + 56) / 122][Stage 57:==================================>                   (77 + 45) / 122][Stage 57:============================================>        (102 + 20) / 122][Stage 57:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.402830588 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 93 AND partitionZIndex<=194", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=194,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.461151697 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:===============================>                      (69 + 51) / 120][Stage 58:=====================================>                (83 + 37) / 120][Stage 58:==============================================>      (106 + 14) / 120]                                                                                [Stage 59:============================>                         (63 + 58) / 121][Stage 59:================================>                     (73 + 48) / 121][Stage 59:===========================================>          (97 + 24) / 121][Stage 59:===================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.214339251 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 4 AND partitionZIndex<=35", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=35,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.455811558 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (58 + 55) / 113][Stage 60:=============================>                        (62 + 51) / 113][Stage 60:================================>                     (68 + 45) / 113][Stage 60:=========================================>            (87 + 26) / 113][Stage 60:=================================================>    (104 + 9) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:===========================>                          (59 + 55) / 114][Stage 61:=============================>                        (62 + 52) / 114][Stage 61:====================================>                 (78 + 36) / 114][Stage 61:==============================================>      (101 + 13) / 114][Stage 61:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.394128792 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 11 AND partitionZIndex<=212", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=212,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.400131676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 62:==================================>                   (72 + 41) / 113][Stage 62:=========================================>            (86 + 27) / 113][Stage 62:===========================================>          (91 + 22) / 113][Stage 62:===============================================>     (101 + 12) / 113][Stage 62:====================================================> (110 + 3) / 113]                                                                                [Stage 63:======================================>               (82 + 32) / 114][Stage 63:===========================================>          (91 + 23) / 114][Stage 63:===============================================>     (103 + 11) / 114][Stage 63:====================================================> (111 + 3) / 114][Stage 63:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.143384406 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 70 AND partitionZIndex<=171", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=171,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.451269844 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (61 + 59) / 120][Stage 64:================================>                     (73 + 47) / 120][Stage 64:============================================>         (98 + 22) / 120][Stage 64:=====================================================>(118 + 2) / 120]                                                                                [Stage 65:===========================>                          (62 + 59) / 121][Stage 65:===============================>                      (70 + 51) / 121][Stage 65:========================================>             (90 + 31) / 121][Stage 65:==================================================>   (114 + 7) / 121][Stage 65:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.182954297 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 35 AND partitionZIndex<=236", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=236,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.404148713 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=================================>                    (71 + 42) / 113][Stage 66:========================================>             (84 + 29) / 113][Stage 66:============================================>         (93 + 20) / 113][Stage 66:==================================================>   (106 + 7) / 113]                                                                                [Stage 67:=====================================>                (79 + 35) / 114][Stage 67:=========================================>            (88 + 26) / 114][Stage 67:==============================================>      (101 + 13) / 114][Stage 67:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.719090613 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 30 AND partitionZIndex<=231", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=231,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.412679505 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 68:================================>                     (72 + 46) / 118][Stage 68:===================================>                  (77 + 41) / 118][Stage 68:=========================================>            (91 + 27) / 118][Stage 68:==============================================>      (104 + 14) / 118][Stage 68:====================================================> (115 + 3) / 118]                                                                                [Stage 69:===================================>                  (79 + 40) / 119][Stage 69:=========================================>            (91 + 28) / 119][Stage 69:==============================================>      (104 + 15) / 119][Stage 69:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.130301879 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 22 AND partitionZIndex<=223", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=223,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.452391771 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (60 + 60) / 120][Stage 70:================================>                     (72 + 48) / 120][Stage 70:=========================================>            (93 + 27) / 120][Stage 70:=================================================>    (111 + 9) / 120]                                                                                [Stage 71:============================>                         (63 + 58) / 121][Stage 71:===================================>                  (80 + 41) / 121][Stage 71:================================================>    (110 + 11) / 121][Stage 71:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.181438972 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 7 AND partitionZIndex<=88", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=88,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.418508688 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 72:================================>                     (72 + 46) / 118][Stage 72:=================================>                    (74 + 44) / 118][Stage 72:=====================================>                (81 + 37) / 118][Stage 72:==========================================>           (92 + 26) / 118][Stage 72:================================================>    (107 + 11) / 118][Stage 72:===================================================>  (113 + 5) / 118]                                                                                [Stage 73:=================================>                    (73 + 46) / 119][Stage 73:===================================>                  (79 + 40) / 119][Stage 73:========================================>             (90 + 29) / 119][Stage 73:===============================================>     (107 + 12) / 119][Stage 73:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.500198883 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 19 AND partitionZIndex<=220", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=220,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.394836622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==============================>                       (65 + 50) / 115][Stage 74:=================================>                    (71 + 44) / 115][Stage 74:============================================>         (94 + 21) / 115][Stage 74:===================================================>  (109 + 6) / 115]                                                                                [Stage 75:==================================>                   (75 + 41) / 116][Stage 75:=========================================>            (90 + 26) / 116][Stage 75:==============================================>      (102 + 14) / 116][Stage 75:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.76097159 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 06 AND partitionZIndex<=107", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398472097 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==================================>                   (73 + 40) / 113][Stage 76:=======================================>              (82 + 31) / 113][Stage 76:==============================================>       (98 + 15) / 113][Stage 76:==================================================>   (106 + 7) / 113][Stage 76:====================================================> (109 + 4) / 113]                                                                                [Stage 77:======================================>               (82 + 32) / 114][Stage 77:=============================================>        (97 + 17) / 114][Stage 77:===============================================>     (103 + 11) / 114][Stage 77:====================================================> (110 + 4) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.168336205 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 36 AND partitionZIndex<=137", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=137,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.550642074 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (61 + 60) / 121][Stage 78:================================>                     (72 + 49) / 121][Stage 78:========================================>             (91 + 30) / 121][Stage 78:================================================>    (110 + 11) / 121][Stage 78:=====================================================>(120 + 1) / 121]                                                                                [Stage 79:===========================>                          (61 + 61) / 122][Stage 79:==============================>                       (69 + 53) / 122][Stage 79:=====================================>                (84 + 38) / 122][Stage 79:=============================================>       (105 + 17) / 122]                                                                                Time elapsed: 3.144918866 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 94 AND partitionZIndex<=195", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=195,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.40454918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (59 + 54) / 113][Stage 80:==============================>                       (64 + 49) / 113][Stage 80:========================================>             (85 + 28) / 113][Stage 80:================================================>    (103 + 10) / 113][Stage 80:====================================================> (110 + 3) / 113]                                                                                [Stage 81:============================>                         (60 + 54) / 114][Stage 81:================================>                     (68 + 46) / 114][Stage 81:=========================================>            (88 + 26) / 114][Stage 81:==================================================>   (106 + 8) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.370198678 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 0 AND partitionZIndex<=51", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=51,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.418287351 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===========================>                          (58 + 55) / 113][Stage 82:================================>                     (69 + 44) / 113][Stage 82:=========================================>            (86 + 27) / 113][Stage 82:================================================>    (103 + 10) / 113][Stage 82:=====================================================>(112 + 1) / 113]                                                                                [Stage 83:===========================>                          (59 + 55) / 114][Stage 83:==============================>                       (65 + 49) / 114][Stage 83:=====================================>                (80 + 34) / 114][Stage 83:=============================================>        (95 + 19) / 114][Stage 83:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.314006819 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 99 AND partitionZIndex<=200", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=200,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.372932946 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 84:======================================>               (80 + 33) / 113][Stage 84:==========================================>           (88 + 25) / 113][Stage 84:===============================================>     (102 + 11) / 113][Stage 84:===================================================>  (108 + 5) / 113][Stage 84:=====================================================>(111 + 2) / 113]                                                                                [Stage 85:=======================================>              (83 + 31) / 114][Stage 85:===========================================>          (92 + 22) / 114][Stage 85:===============================================>     (102 + 12) / 114][Stage 85:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.122102963 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 18 AND partitionZIndex<=219", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=219,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397001756 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 86:================================>                     (69 + 46) / 115][Stage 86:========================================>             (86 + 29) / 115][Stage 86:=============================================>        (97 + 18) / 115][Stage 86:===================================================>  (110 + 5) / 115]                                                                                [Stage 87:==================================>                   (75 + 41) / 116][Stage 87:========================================>             (87 + 29) / 116][Stage 87:==============================================>      (101 + 15) / 116][Stage 87:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.842177882 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 8 AND partitionZIndex<=99", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=99,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.43062654 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (60 + 60) / 120][Stage 88:==============================>                       (67 + 53) / 120][Stage 88:======================================>               (85 + 35) / 120][Stage 88:===============================================>     (107 + 13) / 120][Stage 88:=====================================================>(119 + 1) / 120]                                                                                [Stage 89:=============================>                        (65 + 56) / 121][Stage 89:==================================>                   (77 + 44) / 121][Stage 89:=======================================>              (89 + 32) / 121][Stage 89:================================================>    (110 + 11) / 121][Stage 89:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.300129129 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 5 AND partitionZIndex<=26", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=26,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.502731446 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (60 + 60) / 120][Stage 90:===========================>                          (62 + 58) / 120][Stage 90:================================>                     (73 + 47) / 120][Stage 90:============================================>        (100 + 20) / 120][Stage 90:==================================================>   (113 + 7) / 120]                                                                                [Stage 91:===========================>                          (61 + 60) / 121][Stage 91:================================>                     (72 + 49) / 121][Stage 91:===========================================>          (98 + 23) / 121][Stage 91:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.117045705 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 39 AND partitionZIndex<=240", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=240,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.379850015 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==================================>                   (72 + 41) / 113][Stage 92:======================================>               (81 + 32) / 113][Stage 92:=============================================>        (95 + 18) / 113][Stage 92:==================================================>   (106 + 7) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:==================================>                   (72 + 42) / 114][Stage 93:========================================>             (86 + 28) / 114][Stage 93:==============================================>       (98 + 16) / 114][Stage 93:=================================================>    (105 + 9) / 114][Stage 93:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.245985144 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 10 AND partitionZIndex<=111", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=111,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.387546184 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (58 + 55) / 113][Stage 94:===============================>                      (65 + 48) / 113][Stage 94:======================================>               (80 + 33) / 113][Stage 94:==============================================>       (97 + 16) / 113][Stage 94:=====================================================>(111 + 2) / 113]                                                                                [Stage 95:===========================>                          (59 + 55) / 114][Stage 95:===============================>                      (66 + 48) / 114][Stage 95:===================================>                  (75 + 39) / 114][Stage 95:==========================================>           (90 + 24) / 114][Stage 95:==================================================>   (107 + 7) / 114][Stage 95:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.246317833 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 2 AND partitionZIndex<=33", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=33,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.359875963 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=====================================>                (79 + 34) / 113][Stage 96:==========================================>           (88 + 25) / 113][Stage 96:=============================================>        (95 + 18) / 113][Stage 96:===================================================>  (108 + 5) / 113][Stage 96:====================================================> (110 + 3) / 113]                                                                                [Stage 97:==================================>                   (72 + 42) / 114][Stage 97:=======================================>              (84 + 30) / 114][Stage 97:===========================================>          (92 + 22) / 114][Stage 97:===============================================>     (102 + 12) / 114][Stage 97:====================================================> (110 + 4) / 114][Stage 97:=====================================================>(112 + 2) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.775482986 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 9 AND partitionZIndex<=30", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=30,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.362448294 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 98:======================================>               (80 + 33) / 113][Stage 98:===========================================>          (91 + 22) / 113][Stage 98:==============================================>       (98 + 15) / 113][Stage 98:====================================================> (110 + 3) / 113][Stage 98:=====================================================>(111 + 2) / 113]                                                                                [Stage 99:=====================================>                (80 + 34) / 114][Stage 99:============================================>         (93 + 21) / 114][Stage 99:===============================================>     (102 + 12) / 114][Stage 99:====================================================> (110 + 4) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.745957847 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 26 AND partitionZIndex<=127", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=127,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.359617144 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===================================>                 (76 + 37) / 113][Stage 100:=========================================>           (88 + 25) / 113][Stage 100:==============================================>     (101 + 12) / 113][Stage 100:=================================================>   (106 + 7) / 113][Stage 100:====================================================>(112 + 1) / 113]                                                                                [Stage 101:===================================>                 (76 + 38) / 114][Stage 101:=======================================>             (84 + 30) / 114][Stage 101:==============================================>      (99 + 15) / 114][Stage 101:=================================================>   (107 + 7) / 114][Stage 101:===================================================> (110 + 4) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.216154143 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 41 AND partitionZIndex<=142", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=142,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.381357065 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==================================>                  (73 + 40) / 113][Stage 102:======================================>              (83 + 30) / 113][Stage 102:=============================================>       (96 + 17) / 113][Stage 102:===============================================>    (103 + 10) / 113][Stage 102:==================================================>  (108 + 5) / 113][Stage 102:====================================================>(112 + 1) / 113]                                                                                [Stage 103:=======================================>             (85 + 29) / 114][Stage 103:=============================================>       (97 + 17) / 114][Stage 103:===============================================>    (104 + 10) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.160389985 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 3 AND partitionZIndex<=44", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=44,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.435680686 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (62 + 59) / 121][Stage 104:===============================>                     (71 + 50) / 121][Stage 104:======================================>              (88 + 33) / 121][Stage 104:==================================================>  (115 + 6) / 121][Stage 104:====================================================>(120 + 1) / 121]                                                                                [Stage 105:==========================>                          (61 + 61) / 122][Stage 105:=============================>                       (67 + 55) / 122][Stage 105:====================================>                (83 + 39) / 122][Stage 105:===========================================>        (103 + 19) / 122][Stage 105:====================================================>(120 + 2) / 122][Stage 105:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.443423995 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 60 AND partitionZIndex<=161", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=161,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.363864462 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 106:=================================>                   (71 + 42) / 113][Stage 106:=====================================>               (80 + 33) / 113][Stage 106:============================================>        (95 + 18) / 113][Stage 106:===============================================>    (103 + 10) / 113][Stage 106:==================================================>  (107 + 6) / 113]                                                                                [Stage 107:====================================>                (78 + 36) / 114][Stage 107:=======================================>             (84 + 30) / 114][Stage 107:=============================================>       (97 + 17) / 114][Stage 107:=================================================>   (107 + 7) / 114][Stage 107:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.256752874 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 48 AND partitionZIndex<=149", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=149,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.340805238 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 108:======================================>              (84 + 31) / 115][Stage 108:===========================================>         (95 + 20) / 115][Stage 108:=================================================>   (107 + 8) / 115]                                                                                [Stage 109:======================================>              (85 + 31) / 116][Stage 109:=============================================>       (99 + 17) / 116][Stage 109:=================================================>   (108 + 8) / 116][Stage 109:===================================================> (113 + 3) / 116][Stage 109:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.903158516 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 95 AND partitionZIndex<=196", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=196,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.381692449 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 110:================================>                    (72 + 46) / 118][Stage 110:=================================>                   (75 + 43) / 118][Stage 110:=========================================>           (92 + 26) / 118][Stage 110:===============================================>    (108 + 10) / 118][Stage 110:====================================================>(117 + 1) / 118]                                                                                [Stage 111:================================>                    (73 + 46) / 119][Stage 111:=================================>                   (75 + 44) / 119][Stage 111:==========================================>          (96 + 23) / 119][Stage 111:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 2.957434762 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 5 AND partitionZIndex<=46", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=46,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.40611294 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (63 + 57) / 120][Stage 112:==================================>                  (77 + 43) / 120][Stage 112:===========================================>         (99 + 21) / 120][Stage 112:===================================================> (117 + 3) / 120]                                                                                [Stage 113:==========================>                          (61 + 60) / 121][Stage 113:=============================>                       (68 + 53) / 121][Stage 113:=====================================>               (86 + 35) / 121][Stage 113:=================================================>   (114 + 7) / 121][Stage 113:====================================================>(119 + 2) / 121][Stage 113:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.240584714 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 8 AND partitionZIndex<=69", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=69,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.353835068 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===================================>                 (75 + 38) / 113][Stage 114:========================================>            (86 + 27) / 113][Stage 114:=============================================>       (97 + 16) / 113][Stage 114:=================================================>   (105 + 8) / 113][Stage 114:===================================================> (110 + 3) / 113][Stage 114:====================================================>(111 + 2) / 113]                                                                                [Stage 115:===================================>                 (77 + 37) / 114][Stage 115:========================================>            (87 + 27) / 114][Stage 115:===========================================>         (94 + 20) / 114][Stage 115:================================================>    (105 + 9) / 114][Stage 115:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.218394619 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 40 AND partitionZIndex<=241", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=241,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39479212 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (59 + 54) / 113][Stage 116:=============================>                       (63 + 50) / 113][Stage 116:=====================================>               (80 + 33) / 113][Stage 116:=============================================>       (96 + 17) / 113][Stage 116:===================================================> (110 + 3) / 113]                                                                                [Stage 117:===========================>                         (59 + 55) / 114][Stage 117:==============================>                      (65 + 49) / 114][Stage 117:===================================>                 (76 + 38) / 114][Stage 117:=============================================>       (97 + 17) / 114][Stage 117:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.110249565 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 9 AND partitionZIndex<=80", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=79 AND partitionZIndex<=80,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.413815831 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 61) / 121][Stage 118:=============================>                       (67 + 54) / 121][Stage 118:===================================>                 (82 + 39) / 121][Stage 118:===========================================>        (101 + 20) / 121][Stage 118:====================================================>(120 + 1) / 121]                                                                                [Stage 119:=============================>                       (68 + 54) / 122][Stage 119:==================================>                  (79 + 43) / 122][Stage 119:===========================================>        (102 + 20) / 122][Stage 119:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.121674454 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 2 AND partitionZIndex<=83", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=83,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.393651957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (58 + 55) / 113][Stage 120:============================>                        (60 + 53) / 113][Stage 120:=====================================>               (80 + 33) / 113][Stage 120:=============================================>       (98 + 15) / 113][Stage 120:====================================================>(111 + 2) / 113]                                                                                [Stage 121:=============================>                       (63 + 51) / 114][Stage 121:=======================================>             (84 + 30) / 114][Stage 121:==============================================>     (103 + 11) / 114][Stage 121:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.046375822 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 4 AND partitionZIndex<=45", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=45,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.37524189 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 122:================================>                    (70 + 45) / 115][Stage 122:=====================================>               (81 + 34) / 115][Stage 122:=============================================>       (98 + 17) / 115][Stage 122:=================================================>   (108 + 7) / 115]                                                                                [Stage 123:====================================>                (79 + 37) / 116][Stage 123:========================================>            (89 + 27) / 116][Stage 123:===============================================>    (105 + 11) / 116][Stage 123:===================================================> (112 + 4) / 116][Stage 123:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.439156583 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 9 AND partitionZIndex<=70", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=70,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.411679466 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 124:============================>                        (65 + 56) / 121][Stage 124:=================================>                   (76 + 45) / 121][Stage 124:========================================>            (93 + 28) / 121][Stage 124:=================================================>   (113 + 8) / 121][Stage 124:====================================================>(120 + 1) / 121]                                                                                [Stage 125:==========================>                          (61 + 61) / 122][Stage 125:============================>                        (65 + 57) / 122][Stage 125:====================================>                (85 + 37) / 122][Stage 125:===============================================>    (112 + 10) / 122][Stage 125:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.239616791 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 77 AND partitionZIndex<=178", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=178,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.346634466 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 126:=====================================>               (81 + 34) / 115][Stage 126:===========================================>         (94 + 21) / 115][Stage 126:===============================================>    (105 + 10) / 115][Stage 126:====================================================>(113 + 2) / 115]                                                                                [Stage 127:======================================>              (84 + 32) / 116][Stage 127:===========================================>         (95 + 21) / 116][Stage 127:===============================================>    (105 + 11) / 116]                                                                                Time elapsed: 2.53147469 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 10 AND partitionZIndex<=211", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=211,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.485915403 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (60 + 60) / 120][Stage 128:===========================>                         (62 + 58) / 120][Stage 128:====================================>                (82 + 38) / 120][Stage 128:=========================================>           (94 + 26) / 120][Stage 128:=============================================>      (105 + 15) / 120][Stage 128:====================================================>(119 + 1) / 120]                                                                                [Stage 129:===========================>                         (63 + 58) / 121][Stage 129:=================================>                   (77 + 44) / 121][Stage 129:===========================================>        (101 + 20) / 121][Stage 129:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.24148913 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 6 AND partitionZIndex<=87", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=87,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.384495507 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 130:============================>                        (60 + 53) / 113][Stage 130:==================================>                  (73 + 40) / 113][Stage 130:==============================================>      (99 + 14) / 113][Stage 130:====================================================>(111 + 2) / 113]                                                                                [Stage 131:==============================>                      (65 + 49) / 114][Stage 131:==================================>                  (75 + 39) / 114][Stage 131:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 2.871421343 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 47 AND partitionZIndex<=148", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.392925519 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 60) / 120][Stage 132:============================>                        (65 + 55) / 120][Stage 132:=====================================>               (84 + 36) / 120][Stage 132:=============================================>      (106 + 14) / 120]                                                                                [Stage 133:============================>                        (65 + 56) / 121][Stage 133:=================================>                   (77 + 44) / 121][Stage 133:==========================================>          (97 + 24) / 121][Stage 133:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.008019996 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 05 AND partitionZIndex<=106", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=106,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.467389757 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==========================>                          (60 + 60) / 120][Stage 134:===========================>                         (63 + 57) / 120][Stage 134:====================================>                (82 + 38) / 120][Stage 134:=============================================>      (106 + 14) / 120][Stage 134:====================================================>(119 + 1) / 120]                                                                                [Stage 135:==========================>                          (61 + 60) / 121][Stage 135:===============================>                     (71 + 50) / 121][Stage 135:======================================>              (88 + 33) / 121][Stage 135:=============================================>      (105 + 16) / 121][Stage 135:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.224244785 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 4 AND partitionZIndex<=55", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=55,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.332346956 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 136:=====================================>               (82 + 33) / 115][Stage 136:=========================================>           (90 + 25) / 115][Stage 136:==============================================>     (103 + 12) / 115][Stage 136:===================================================> (112 + 3) / 115]                                                                                [Stage 137:======================================>              (84 + 32) / 116][Stage 137:=========================================>           (90 + 26) / 116][Stage 137:=============================================>      (102 + 14) / 116][Stage 137:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.895808031 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 33 AND partitionZIndex<=234", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=234,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.374856154 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 138:=================================>                   (72 + 43) / 115][Stage 138:======================================>              (84 + 31) / 115][Stage 138:=============================================>      (100 + 15) / 115][Stage 138:===================================================> (112 + 3) / 115]                                                                                [Stage 139:================================>                    (72 + 44) / 116][Stage 139:=======================================>             (86 + 30) / 116][Stage 139:==============================================>     (104 + 12) / 116][Stage 139:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.843302621 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 2 AND partitionZIndex<=13", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=13,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.367333887 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==============================>                      (66 + 49) / 115][Stage 140:==================================>                  (74 + 41) / 115][Stage 140:===========================================>         (94 + 21) / 115][Stage 140:=================================================>   (108 + 7) / 115]                                                                                [Stage 141:==================================>                  (75 + 41) / 116][Stage 141:=======================================>             (87 + 29) / 116][Stage 141:=============================================>       (99 + 17) / 116][Stage 141:===================================================> (112 + 4) / 116][Stage 141:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.261423363 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 04 AND partitionZIndex<=105", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.389906793 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (60 + 60) / 120][Stage 142:============================>                        (65 + 55) / 120][Stage 142:==================================>                  (79 + 41) / 120][Stage 142:==============================================>     (108 + 12) / 120]                                                                                [Stage 143:===========================>                         (62 + 59) / 121][Stage 143:===============================>                     (72 + 49) / 121][Stage 143:=========================================>           (95 + 26) / 121][Stage 143:====================================================>(119 + 2) / 121][Stage 143:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.339521941 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 46 AND partitionZIndex<=247", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=246 AND partitionZIndex<=247,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.347879676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=====================================>               (82 + 33) / 115][Stage 144:========================================>            (88 + 27) / 115][Stage 144:=============================================>       (98 + 17) / 115][Stage 144:=================================================>   (107 + 8) / 115][Stage 144:==================================================>  (110 + 5) / 115]                                                                                [Stage 145:=====================================>               (81 + 35) / 116][Stage 145:=======================================>             (86 + 30) / 116][Stage 145:=============================================>      (102 + 14) / 116][Stage 145:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.920542026 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 16 AND partitionZIndex<=217", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=217,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.359692021 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 146:================================>                    (73 + 45) / 118][Stage 146:=======================================>             (88 + 30) / 118][Stage 146:============================================>       (100 + 18) / 118][Stage 146:===================================================> (114 + 4) / 118]                                                                                [Stage 147:================================>                    (74 + 45) / 119][Stage 147:===================================>                 (80 + 39) / 119][Stage 147:===========================================>         (98 + 21) / 119][Stage 147:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.076969308 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 1 AND partitionZIndex<=22", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=22,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.364606866 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===================================>                 (76 + 37) / 113][Stage 148:========================================>            (86 + 27) / 113][Stage 148:==============================================>     (100 + 13) / 113][Stage 148:==================================================>  (108 + 5) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:=====================================>               (80 + 34) / 114][Stage 149:=========================================>           (90 + 24) / 114][Stage 149:==============================================>     (103 + 11) / 114][Stage 149:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.260022905 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 64 AND partitionZIndex<=165", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=165,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.392711476 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 60) / 120][Stage 150:==============================>                      (69 + 51) / 120][Stage 150:====================================>                (82 + 38) / 120][Stage 150:=============================================>      (106 + 14) / 120][Stage 150:====================================================>(118 + 2) / 120]                                                                                [Stage 151:==========================>                          (61 + 60) / 121][Stage 151:==============================>                      (70 + 51) / 121][Stage 151:=====================================>               (86 + 35) / 121][Stage 151:=============================================>      (105 + 16) / 121][Stage 151:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.075930433 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 17 AND partitionZIndex<=218", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=218,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.355738848 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 152:=====================================>               (79 + 34) / 113][Stage 152:========================================>            (86 + 27) / 113][Stage 152:==============================================>     (100 + 13) / 113][Stage 152:==================================================>  (107 + 6) / 113][Stage 152:====================================================>(112 + 1) / 113]                                                                                [Stage 153:===================================>                 (76 + 38) / 114][Stage 153:======================================>              (83 + 31) / 114][Stage 153:===========================================>         (93 + 21) / 114][Stage 153:===============================================>    (104 + 10) / 114][Stage 153:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.136541457 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 89 AND partitionZIndex<=190", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=190,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.367442031 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==================================>                  (74 + 41) / 115][Stage 154:=========================================>           (91 + 24) / 115][Stage 154:===============================================>    (104 + 11) / 115][Stage 154:=================================================>   (108 + 7) / 115][Stage 154:====================================================>(114 + 1) / 115]                                                                                [Stage 155:=================================>                   (73 + 43) / 116][Stage 155:==========================================>          (92 + 24) / 116][Stage 155:=================================================>   (109 + 7) / 116][Stage 155:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.205869307 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 54 AND partitionZIndex<=155", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=155,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.361161751 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (72 + 46) / 118][Stage 156:=======================================>             (87 + 31) / 118][Stage 156:===============================================>    (107 + 11) / 118][Stage 156:===================================================> (115 + 3) / 118]                                                                                [Stage 157:================================>                    (73 + 46) / 119][Stage 157:=====================================>               (84 + 35) / 119][Stage 157:=========================================>           (94 + 25) / 119][Stage 157:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.01330231 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 3 AND partitionZIndex<=34", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=34,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398406623 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==========================>                          (60 + 60) / 120][Stage 158:===========================>                         (63 + 57) / 120][Stage 158:===================================>                 (81 + 39) / 120][Stage 158:=============================================>      (104 + 16) / 120][Stage 158:====================================================>(118 + 2) / 120]                                                                                [Stage 159:==========================>                          (61 + 60) / 121][Stage 159:===============================>                     (72 + 49) / 121][Stage 159:========================================>            (92 + 29) / 121][Stage 159:==============================================>     (109 + 12) / 121][Stage 159:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.116137149 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 38 AND partitionZIndex<=139", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=139,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.385728841 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (58 + 55) / 113][Stage 160:===============================>                     (68 + 45) / 113][Stage 160:=======================================>             (84 + 29) / 113][Stage 160:==============================================>     (101 + 12) / 113][Stage 160:====================================================>(111 + 2) / 113]                                                                                [Stage 161:============================>                        (62 + 52) / 114][Stage 161:====================================>                (78 + 36) / 114][Stage 161:===============================================>    (104 + 10) / 114][Stage 161:==================================================>  (109 + 5) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.253634019 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 19 AND partitionZIndex<=120", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=120,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.382406622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (59 + 54) / 113][Stage 162:=============================>                       (62 + 51) / 113][Stage 162:====================================>                (78 + 35) / 113][Stage 162:============================================>        (95 + 18) / 113][Stage 162:==================================================>  (108 + 5) / 113]                                                                                [Stage 163:===========================>                         (59 + 55) / 114][Stage 163:==============================>                      (65 + 49) / 114][Stage 163:=======================================>             (85 + 29) / 114][Stage 163:================================================>    (105 + 9) / 114][Stage 163:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.313293968 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 44 AND partitionZIndex<=245", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=245,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.335286691 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 164:====================================>                (80 + 35) / 115][Stage 164:=========================================>           (90 + 25) / 115][Stage 164:=============================================>      (101 + 14) / 115][Stage 164:==================================================>  (110 + 5) / 115][Stage 164:====================================================>(114 + 1) / 115]                                                                                [Stage 165:=====================================>               (82 + 34) / 116][Stage 165:========================================>            (88 + 28) / 116][Stage 165:===============================================>    (105 + 11) / 116][Stage 165:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.858061978 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 03 AND partitionZIndex<=204", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=204,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.366797421 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 166:====================================>                (79 + 36) / 115][Stage 166:=========================================>           (90 + 25) / 115][Stage 166:==============================================>     (102 + 13) / 115][Stage 166:====================================================>(113 + 2) / 115][Stage 166:====================================================>(114 + 1) / 115]                                                                                [Stage 167:==============================>                      (67 + 49) / 116][Stage 167:=====================================>               (83 + 33) / 116][Stage 167:============================================>        (97 + 19) / 116][Stage 167:=================================================>   (108 + 8) / 116][Stage 167:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.136658786 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 53 AND partitionZIndex<=154", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=154,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.332142133 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 168:=====================================>               (81 + 34) / 115][Stage 168:=======================================>             (86 + 29) / 115][Stage 168:============================================>        (96 + 19) / 115][Stage 168:===================================================> (111 + 4) / 115]                                                                                [Stage 169:=====================================>               (82 + 34) / 116][Stage 169:==========================================>          (93 + 23) / 116][Stage 169:==============================================>     (104 + 12) / 116][Stage 169:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.695971935 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 42 AND partitionZIndex<=143", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=142 AND partitionZIndex<=143,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.361113901 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 170:================================>                    (72 + 46) / 118][Stage 170:===================================>                 (79 + 39) / 118][Stage 170:============================================>        (98 + 20) / 118][Stage 170:================================================>    (109 + 9) / 118]                                                                                [Stage 171:================================>                    (74 + 45) / 119][Stage 171:====================================>                (81 + 38) / 119][Stage 171:===========================================>         (97 + 22) / 119][Stage 171:===================================================> (115 + 4) / 119][Stage 171:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.096839999 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 4 AND partitionZIndex<=95", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=95,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.394895093 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (61 + 60) / 121][Stage 172:================================>                    (74 + 47) / 121][Stage 172:=======================================>             (91 + 30) / 121][Stage 172:=================================================>   (113 + 8) / 121][Stage 172:===================================================> (118 + 3) / 121]                                                                                [Stage 173:==========================>                          (61 + 61) / 122][Stage 173:==========================>                          (62 + 60) / 122][Stage 173:=================================>                   (78 + 44) / 122][Stage 173:===========================================>        (101 + 21) / 122]                                                                                Time elapsed: 3.16304693 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 23 AND partitionZIndex<=224", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=224,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.366791366 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 174:================================>                    (71 + 44) / 115][Stage 174:=======================================>             (85 + 30) / 115][Stage 174:=============================================>       (98 + 17) / 115][Stage 174:====================================================>(114 + 1) / 115]                                                                                [Stage 175:====================================>                (79 + 37) / 116][Stage 175:=============================================>      (101 + 15) / 116][Stage 175:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.668855279 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 22 AND partitionZIndex<=123", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=123,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.505097249 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==========================>                          (60 + 61) / 121][Stage 176:===============================>                     (71 + 50) / 121][Stage 176:======================================>              (89 + 32) / 121][Stage 176:=============================================>      (107 + 14) / 121]                                                                                [Stage 177:==========================>                          (62 + 60) / 122][Stage 177:=================================>                   (77 + 45) / 122][Stage 177:============================================>       (104 + 18) / 122][Stage 177:===================================================> (118 + 4) / 122]                                                                                Time elapsed: 2.959351175 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 65 AND partitionZIndex<=166", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=166,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.348529764 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===================================>                 (75 + 38) / 113][Stage 178:=========================================>           (89 + 24) / 113][Stage 178:==============================================>      (99 + 14) / 113][Stage 178:==================================================>  (107 + 6) / 113]                                                                                [Stage 179:====================================>                (78 + 36) / 114][Stage 179:=========================================>           (90 + 24) / 114][Stage 179:=============================================>      (100 + 14) / 114][Stage 179:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.767661789 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 98 AND partitionZIndex<=199", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=199,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.396564479 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==========================>                          (61 + 60) / 121][Stage 180:===============================>                     (72 + 49) / 121][Stage 180:=======================================>             (91 + 30) / 121][Stage 180:==============================================>     (109 + 12) / 121][Stage 180:====================================================>(119 + 2) / 121]                                                                                [Stage 181:==========================>                          (61 + 61) / 122][Stage 181:============================>                        (65 + 57) / 122][Stage 181:====================================>                (84 + 38) / 122][Stage 181:===========================================>        (103 + 19) / 122][Stage 181:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.296364761 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 16 AND partitionZIndex<=117", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=117,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.371001193 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 182:====================================>                (80 + 35) / 115][Stage 182:=======================================>             (85 + 30) / 115][Stage 182:===========================================>         (95 + 20) / 115][Stage 182:=================================================>   (108 + 7) / 115]                                                                                [Stage 183:=====================================>               (82 + 34) / 116][Stage 183:=========================================>           (90 + 26) / 116][Stage 183:===============================================>    (106 + 10) / 116][Stage 183:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.689092648 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 08 AND partitionZIndex<=209", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=209,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.35398173 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 184:======================================>              (83 + 32) / 115][Stage 184:=========================================>           (91 + 24) / 115][Stage 184:==============================================>     (102 + 13) / 115][Stage 184:====================================================>(113 + 2) / 115]                                                                                [Stage 185:=====================================>               (82 + 34) / 116][Stage 185:==========================================>          (94 + 22) / 116][Stage 185:================================================>    (107 + 9) / 116][Stage 185:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.559313356 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 2 AND partitionZIndex<=63", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=63,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.355107452 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 186:================================>                    (72 + 46) / 118][Stage 186:=================================>                   (75 + 43) / 118][Stage 186:=======================================>             (88 + 30) / 118][Stage 186:=============================================>      (104 + 14) / 118][Stage 186:===================================================> (115 + 3) / 118]                                                                                [Stage 187:================================>                    (73 + 46) / 119][Stage 187:====================================>                (82 + 37) / 119][Stage 187:=======================================>             (88 + 31) / 119][Stage 187:===========================================>         (98 + 21) / 119][Stage 187:=================================================>   (111 + 8) / 119][Stage 187:====================================================>(117 + 2) / 119][Stage 187:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.74296138 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 3 AND partitionZIndex<=84", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=84,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.394875166 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 61) / 121][Stage 188:===============================>                     (72 + 49) / 121][Stage 188:=====================================>               (86 + 35) / 121][Stage 188:============================================>       (104 + 17) / 121][Stage 188:====================================================>(120 + 1) / 121]                                                                                [Stage 189:==========================>                          (62 + 60) / 122][Stage 189:============================>                        (66 + 56) / 122][Stage 189:======================================>              (89 + 33) / 122][Stage 189:============================================>       (105 + 17) / 122][Stage 189:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.053039175 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 0 AND partitionZIndex<=21", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=21,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.389772446 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (58 + 55) / 113][Stage 190:============================>                        (60 + 53) / 113][Stage 190:================================>                    (69 + 44) / 113][Stage 190:==========================================>          (91 + 22) / 113][Stage 190:=================================================>   (106 + 7) / 113]                                                                                [Stage 191:===========================>                         (60 + 54) / 114][Stage 191:===============================>                     (67 + 47) / 114][Stage 191:=======================================>             (84 + 30) / 114][Stage 191:===================================================> (111 + 3) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.167846505 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 38 AND partitionZIndex<=239", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=239,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.388641527 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (60 + 60) / 120][Stage 192:===========================>                         (63 + 57) / 120][Stage 192:==================================>                  (79 + 41) / 120][Stage 192:==========================================>          (97 + 23) / 120][Stage 192:=================================================>   (113 + 7) / 120]                                                                                [Stage 193:==========================>                          (61 + 60) / 121][Stage 193:================================>                    (75 + 46) / 121][Stage 193:=======================================>             (91 + 30) / 121][Stage 193:=============================================>      (106 + 15) / 121]                                                                                Time elapsed: 3.178753421 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 43 AND partitionZIndex<=244", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=244,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.406046493 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (61 + 59) / 120][Stage 194:=================================>                   (75 + 45) / 120][Stage 194:=========================================>           (94 + 26) / 120][Stage 194:===================================================> (116 + 4) / 120]                                                                                [Stage 195:==========================>                          (61 + 60) / 121][Stage 195:=============================>                       (68 + 53) / 121][Stage 195:==================================>                  (79 + 42) / 121][Stage 195:=============================================>      (106 + 15) / 121][Stage 195:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.084791623 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 44 AND partitionZIndex<=145", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=145,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39233863 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (59 + 54) / 113][Stage 196:==============================>                      (66 + 47) / 113][Stage 196:======================================>              (83 + 30) / 113][Stage 196:==============================================>     (100 + 13) / 113]                                                                                [Stage 197:============================>                        (61 + 53) / 114][Stage 197:=================================>                   (72 + 42) / 114][Stage 197:========================================>            (88 + 26) / 114][Stage 197:================================================>    (105 + 9) / 114][Stage 197:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.131677411 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 8 AND partitionZIndex<=29", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=29,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.38389641 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 198:================================>                    (73 + 45) / 118][Stage 198:=================================>                   (75 + 43) / 118][Stage 198:=========================================>           (92 + 26) / 118][Stage 198:=============================================>      (103 + 15) / 118][Stage 198:==================================================>  (113 + 5) / 118]                                                                                [Stage 199:================================>                    (73 + 46) / 119][Stage 199:================================>                    (74 + 45) / 119][Stage 199:=====================================>               (84 + 35) / 119][Stage 199:========================================>            (92 + 27) / 119][Stage 199:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.1226462 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 29 AND partitionZIndex<=230", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=230,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.359149183 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=====================================>               (79 + 34) / 113][Stage 200:========================================>            (87 + 26) / 113][Stage 200:==============================================>     (101 + 12) / 113][Stage 200:==================================================>  (108 + 5) / 113][Stage 200:====================================================>(111 + 2) / 113]                                                                                [Stage 201:==================================>                  (74 + 40) / 114][Stage 201:=======================================>             (86 + 28) / 114][Stage 201:===========================================>         (94 + 20) / 114][Stage 201:=================================================>   (106 + 8) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.063664012 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/24 21:33:22 ERROR scheduler.LiveListenerBus: SparkListenerBus has already stopped! Dropping event SparkListenerExecutorMetricsUpdate(6,WrappedArray())

real	9m58.094s
user	11m27.352s
sys	0m36.456s
