Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 17:51:04 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:51:19 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:51:19 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:51:19 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 17:51:21 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:51:32 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524175121-0576).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.475675069 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:========================>                              (52 + 63) / 115][Stage 0:==========================>                            (55 + 60) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:========================================>              (84 + 31) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:====================================================>  (110 + 5) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:=============================>                         (62 + 54) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:========================================>              (85 + 31) / 116][Stage 1:===========================================>           (91 + 25) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:=====================================================> (113 + 3) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 13.083032579 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=39", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=39,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.854200515 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==================>                                    (39 + 74) / 113][Stage 2:======================>                                (47 + 66) / 113][Stage 2:==========================>                            (55 + 58) / 113][Stage 2:============================>                          (58 + 55) / 113][Stage 2:============================>                          (59 + 54) / 113][Stage 2:================================>                      (67 + 46) / 113][Stage 2:========================================>              (84 + 29) / 113][Stage 2:==============================================>        (96 + 17) / 113][Stage 2:=================================================>    (103 + 10) / 113][Stage 2:======================================================>(111 + 2) / 113]                                                                                [Stage 3:===========================>                           (56 + 58) / 114][Stage 3:=============================>                         (61 + 53) / 114][Stage 3:================================>                      (68 + 46) / 114][Stage 3:=======================================>               (81 + 33) / 114][Stage 3:============================================>          (92 + 22) / 114][Stage 3:================================================>     (102 + 12) / 114][Stage 3:==================================================>    (105 + 9) / 114][Stage 3:===================================================>   (107 + 7) / 114][Stage 3:======================================================>(112 + 2) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 6.370797498 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=221", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=221,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.678045172 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=======================>                               (48 + 65) / 113][Stage 4:===========================>                           (57 + 56) / 113][Stage 4:============================>                          (59 + 54) / 113][Stage 4:=================================>                     (69 + 44) / 113][Stage 4:=====================================>                 (78 + 35) / 113][Stage 4:==========================================>            (87 + 26) / 113][Stage 4:==============================================>        (95 + 18) / 113][Stage 4:===================================================>   (105 + 8) / 113]                                                                                [Stage 5:============================>                          (59 + 55) / 114][Stage 5:==============================>                        (63 + 51) / 114][Stage 5:====================================>                  (75 + 39) / 114][Stage 5:===========================================>           (91 + 23) / 114][Stage 5:===============================================>       (99 + 15) / 114][Stage 5:====================================================>  (109 + 5) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.94846648 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=89", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=89,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.597953901 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==============================>                        (63 + 52) / 115][Stage 6:================================>                      (68 + 47) / 115][Stage 6:====================================>                  (77 + 38) / 115][Stage 6:========================================>              (85 + 30) / 115][Stage 6:============================================>          (92 + 23) / 115][Stage 6:===============================================>      (101 + 14) / 115][Stage 6:===================================================>   (107 + 8) / 115][Stage 6:=====================================================> (111 + 4) / 115][Stage 6:======================================================>(114 + 1) / 115]                                                                                [Stage 7:================================>                      (68 + 48) / 116][Stage 7:=====================================>                 (80 + 36) / 116][Stage 7:=======================================>               (84 + 32) / 116][Stage 7:=========================================>             (87 + 29) / 116][Stage 7:=============================================>         (95 + 21) / 116][Stage 7:==================================================>    (107 + 9) / 116][Stage 7:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.555721381 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=130", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=130,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.599650263 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (57 + 56) / 113][Stage 8:============================>                          (59 + 54) / 113][Stage 8:===============================>                       (65 + 48) / 113][Stage 8:=======================================>               (81 + 32) / 113][Stage 8:=========================================>             (86 + 27) / 113][Stage 8:===========================================>           (90 + 23) / 113][Stage 8:================================================>     (102 + 11) / 113]                                                                                [Stage 9:===========================>                           (58 + 56) / 114][Stage 9:===============================>                       (65 + 49) / 114][Stage 9:=======================================>               (82 + 32) / 114][Stage 9:==============================================>        (96 + 18) / 114][Stage 9:===============================================>      (100 + 14) / 114][Stage 9:===================================================>   (106 + 8) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.713405238 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=95", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=95,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.616667405 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:============================>                         (61 + 54) / 115][Stage 10:================================>                     (69 + 46) / 115][Stage 10:=====================================>                (80 + 35) / 115][Stage 10:===========================================>          (92 + 23) / 115][Stage 10:==============================================>       (98 + 17) / 115][Stage 10:==================================================>   (108 + 7) / 115][Stage 10:====================================================> (111 + 4) / 115][Stage 10:=====================================================>(113 + 2) / 115]                                                                                [Stage 11:=================================>                    (72 + 44) / 116][Stage 11:=====================================>                (81 + 35) / 116][Stage 11:=========================================>            (90 + 26) / 116][Stage 11:=============================================>        (97 + 19) / 116][Stage 11:==============================================>      (102 + 14) / 116][Stage 11:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.987571776 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=117", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=117,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493909224 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:================================>                     (69 + 44) / 113][Stage 12:====================================>                 (77 + 36) / 113][Stage 12:==========================================>           (88 + 25) / 113][Stage 12:===========================================>          (90 + 23) / 113][Stage 12:================================================>    (103 + 10) / 113][Stage 12:==================================================>   (106 + 7) / 113][Stage 12:====================================================> (110 + 3) / 113][Stage 12:=====================================================>(112 + 1) / 113]                                                                                [Stage 13:=====================================>                (79 + 35) / 114][Stage 13:========================================>             (86 + 28) / 114][Stage 13:============================================>         (93 + 21) / 114][Stage 13:===============================================>     (102 + 12) / 114][Stage 13:================================================>    (104 + 10) / 114][Stage 13:===================================================>  (109 + 5) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.493150359 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.546780441 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (60 + 61) / 121][Stage 14:===========================>                          (61 + 60) / 121][Stage 14:================================>                     (72 + 49) / 121][Stage 14:===========================================>          (98 + 23) / 121][Stage 14:===================================================>  (115 + 6) / 121][Stage 14:=====================================================>(120 + 1) / 121]                                                                                [Stage 15:===========================>                          (61 + 61) / 122][Stage 15:=============================>                        (66 + 56) / 122][Stage 15:==================================>                   (78 + 44) / 122][Stage 15:===========================================>          (98 + 24) / 122][Stage 15:==============================================>      (106 + 16) / 122][Stage 15:=====================================================>(120 + 2) / 122][Stage 15:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 6.241822306 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=23", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=23,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.509993843 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=====================================>                (80 + 35) / 115][Stage 16:========================================>             (87 + 28) / 115][Stage 16:==============================================>      (100 + 15) / 115][Stage 16:==================================================>   (108 + 7) / 115][Stage 16:====================================================> (111 + 4) / 115]                                                                                [Stage 17:========================================>             (86 + 30) / 116][Stage 17:==============================================>       (99 + 17) / 116][Stage 17:===============================================>     (104 + 12) / 116][Stage 17:==================================================>   (108 + 8) / 116][Stage 17:====================================================> (113 + 3) / 116][Stage 17:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 7.879461329 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=90", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=90,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.517381961 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:============================>                         (59 + 54) / 113][Stage 18:==============================>                       (64 + 49) / 113][Stage 18:========================================>             (85 + 28) / 113][Stage 18:=================================================>    (104 + 9) / 113]                                                                                [Stage 19:===========================>                          (59 + 55) / 114][Stage 19:================================>                     (68 + 46) / 114][Stage 19:======================================>               (82 + 32) / 114][Stage 19:=============================================>        (96 + 18) / 114][Stage 19:====================================================> (110 + 4) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.834372389 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=223", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=223,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.563093918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==========================>                           (60 + 61) / 121][Stage 20:===========================>                          (61 + 60) / 121][Stage 20:=============================>                        (66 + 55) / 121][Stage 20:=========================================>            (92 + 29) / 121][Stage 20:==================================================>   (113 + 8) / 121]                                                                                [Stage 21:===========================>                          (61 + 61) / 122][Stage 21:==============================>                       (69 + 53) / 122][Stage 21:========================================>             (92 + 30) / 122][Stage 21:===============================================>     (110 + 12) / 122][Stage 21:=====================================================>(120 + 2) / 122][Stage 21:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.433457589 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=14", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=14,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.484291813 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:================================>                     (69 + 46) / 115][Stage 22:====================================>                 (78 + 37) / 115][Stage 22:==============================================>       (98 + 17) / 115][Stage 22:===================================================>  (109 + 6) / 115][Stage 22:=====================================================>(113 + 2) / 115]                                                                                [Stage 23:===============================>                      (68 + 48) / 116][Stage 23:=====================================>                (81 + 35) / 116][Stage 23:========================================>             (88 + 28) / 116][Stage 23:=============================================>        (97 + 19) / 116][Stage 23:=================================================>    (107 + 9) / 116][Stage 23:==================================================>   (108 + 8) / 116][Stage 23:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 7.641715862 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=124", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=124,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.605026361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (60 + 61) / 121][Stage 24:============================>                         (63 + 58) / 121][Stage 24:==================================>                   (78 + 43) / 121][Stage 24:============================================>        (101 + 20) / 121][Stage 24:===================================================>  (115 + 6) / 121]                                                                                [Stage 25:===========================>                          (61 + 61) / 122][Stage 25:==============================>                       (68 + 54) / 122][Stage 25:====================================>                 (82 + 40) / 122][Stage 25:============================================>        (102 + 20) / 122][Stage 25:==================================================>   (114 + 8) / 122][Stage 25:====================================================> (118 + 4) / 122][Stage 25:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.322448912 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=144", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=144,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505716644 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (60 + 60) / 120][Stage 26:=============================>                        (65 + 55) / 120][Stage 26:===============================>                      (70 + 50) / 120][Stage 26:=========================================>            (92 + 28) / 120][Stage 26:================================================>    (110 + 10) / 120][Stage 26:=====================================================>(119 + 1) / 120]                                                                                [Stage 27:===========================>                          (61 + 60) / 121][Stage 27:=============================>                        (66 + 55) / 121][Stage 27:=================================>                    (76 + 45) / 121][Stage 27:===========================================>         (100 + 21) / 121][Stage 27:================================================>    (111 + 10) / 121][Stage 27:===================================================>  (115 + 6) / 121][Stage 27:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.34917665 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=164", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=164,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.503937358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:==========================>                           (60 + 61) / 121][Stage 28:============================>                         (63 + 58) / 121][Stage 28:==================================>                   (78 + 43) / 121][Stage 28:============================================>        (101 + 20) / 121][Stage 28:====================================================> (118 + 3) / 121]                                                                                [Stage 29:===========================>                          (61 + 61) / 122][Stage 29:=============================>                        (66 + 56) / 122][Stage 29:=====================================>                (85 + 37) / 122][Stage 29:================================================>    (112 + 10) / 122][Stage 29:====================================================> (119 + 3) / 122][Stage 29:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.80254164 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=198", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=198,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468731607 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:=================================>                    (71 + 44) / 115][Stage 30:=======================================>              (84 + 31) / 115][Stage 30:==============================================>      (101 + 14) / 115][Stage 30:====================================================> (111 + 4) / 115]                                                                                [Stage 31:=====================================>                (81 + 35) / 116][Stage 31:============================================>         (95 + 21) / 116][Stage 31:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.204720983 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=28", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=28,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.508691568 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:==========================>                           (60 + 61) / 121][Stage 32:============================>                         (63 + 58) / 121][Stage 32:=================================>                    (74 + 47) / 121][Stage 32:============================================>        (102 + 19) / 121]                                                                                [Stage 33:===========================>                          (63 + 59) / 122][Stage 33:================================>                     (73 + 49) / 122][Stage 33:==========================================>           (96 + 26) / 122][Stage 33:==============================================>      (106 + 16) / 122][Stage 33:===================================================>  (117 + 5) / 122][Stage 33:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.594575659 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=159", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=159,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472179513 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (58 + 55) / 113][Stage 34:================================>                     (67 + 46) / 113][Stage 34:=======================================>              (83 + 30) / 113][Stage 34:==============================================>       (97 + 16) / 113][Stage 34:====================================================> (110 + 3) / 113]                                                                                [Stage 35:==============================>                       (65 + 49) / 114][Stage 35:====================================>                 (76 + 38) / 114][Stage 35:===========================================>          (91 + 23) / 114][Stage 35:==================================================>   (107 + 7) / 114][Stage 35:====================================================> (111 + 3) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.880786045 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=70", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=70,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.571657587 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==========================>                           (60 + 61) / 121][Stage 36:==============================>                       (68 + 53) / 121][Stage 36:=====================================>                (84 + 37) / 121][Stage 36:===============================================>     (109 + 12) / 121][Stage 36:=====================================================>(120 + 1) / 121]                                                                                [Stage 37:===========================>                          (62 + 60) / 122][Stage 37:=================================>                    (75 + 47) / 122][Stage 37:========================================>             (91 + 31) / 122][Stage 37:=============================================>       (105 + 17) / 122][Stage 37:==================================================>   (114 + 8) / 122][Stage 37:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.916786008 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=138", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=138,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486714868 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (62 + 58) / 120][Stage 38:=================================>                    (74 + 46) / 120][Stage 38:=========================================>            (93 + 27) / 120][Stage 38:===================================================>  (115 + 5) / 120]                                                                                [Stage 39:===========================>                          (61 + 60) / 121][Stage 39:==============================>                       (68 + 53) / 121][Stage 39:======================================>               (86 + 35) / 121][Stage 39:================================================>    (110 + 11) / 121][Stage 39:====================================================> (118 + 3) / 121][Stage 39:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.684355163 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=63,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480963832 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===============================>                      (68 + 47) / 115][Stage 40:====================================>                 (77 + 38) / 115][Stage 40:==========================================>           (91 + 24) / 115][Stage 40:===============================================>     (103 + 12) / 115][Stage 40:====================================================> (111 + 4) / 115][Stage 40:=====================================================>(114 + 1) / 115]                                                                                [Stage 41:===================================>                  (76 + 40) / 116][Stage 41:========================================>             (86 + 30) / 116][Stage 41:==============================================>       (99 + 17) / 116][Stage 41:===================================================>  (110 + 6) / 116][Stage 41:====================================================> (112 + 4) / 116][Stage 41:====================================================> (113 + 3) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 9.253268704 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=49", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=49,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49290968 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==================================>                   (72 + 41) / 113][Stage 42:========================================>             (85 + 28) / 113][Stage 42:============================================>         (94 + 19) / 113][Stage 42:=================================================>    (104 + 9) / 113][Stage 42:====================================================> (110 + 3) / 113]                                                                                [Stage 43:===================================>                  (74 + 40) / 114][Stage 43:======================================>               (82 + 32) / 114][Stage 43:==========================================>           (90 + 24) / 114][Stage 43:=============================================>        (96 + 18) / 114][Stage 43:==================================================>   (107 + 7) / 114][Stage 43:====================================================> (110 + 4) / 114][Stage 43:=====================================================>(112 + 2) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.785158615 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=161", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=161,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.471541204 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:==========================>                           (59 + 62) / 121][Stage 44:===============================>                      (70 + 51) / 121][Stage 44:========================================>             (91 + 30) / 121][Stage 44:=============================================>       (103 + 18) / 121][Stage 44:====================================================> (117 + 4) / 121][Stage 44:=====================================================>(120 + 1) / 121]                                                                                [Stage 45:===========================>                          (61 + 61) / 122][Stage 45:==============================>                       (69 + 53) / 122][Stage 45:==================================>                   (79 + 43) / 122][Stage 45:=============================================>       (104 + 18) / 122][Stage 45:====================================================> (118 + 4) / 122][Stage 45:=====================================================>(120 + 2) / 122][Stage 45:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.620265864 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=99", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=99,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49398482 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:================================>                     (72 + 46) / 118][Stage 46:====================================>                 (80 + 38) / 118][Stage 46:==========================================>           (92 + 26) / 118][Stage 46:==================================================>   (110 + 8) / 118]                                                                                [Stage 47:=================================>                    (73 + 46) / 119][Stage 47:==================================>                   (77 + 42) / 119][Stage 47:============================================>         (97 + 22) / 119][Stage 47:================================================>    (109 + 10) / 119][Stage 47:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.579458466 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=137", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=137,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.487954463 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (61 + 59) / 120][Stage 48:===============================>                      (69 + 51) / 120][Stage 48:=====================================>                (84 + 36) / 120][Stage 48:=============================================>       (104 + 16) / 120][Stage 48:=====================================================>(119 + 1) / 120]                                                                                [Stage 49:===========================>                          (62 + 59) / 121][Stage 49:===============================>                      (70 + 51) / 121][Stage 49:======================================>               (86 + 35) / 121][Stage 49:===============================================>     (109 + 12) / 121][Stage 49:===================================================>  (116 + 5) / 121][Stage 49:====================================================> (118 + 3) / 121][Stage 49:=====================================================>(119 + 2) / 121][Stage 49:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.189363531 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=194", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=194,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464639143 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (60 + 60) / 120][Stage 50:============================>                         (63 + 57) / 120][Stage 50:===============================>                      (71 + 49) / 120][Stage 50:=========================================>            (92 + 28) / 120][Stage 50:===================================================>  (115 + 5) / 120]                                                                                [Stage 51:===========================>                          (62 + 59) / 121][Stage 51:===============================>                      (71 + 50) / 121][Stage 51:========================================>             (91 + 30) / 121][Stage 51:================================================>    (111 + 10) / 121][Stage 51:====================================================> (118 + 3) / 121][Stage 51:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.711380504 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=170", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=170,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417655022 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:===============================>                      (67 + 48) / 115][Stage 52:=====================================>                (79 + 36) / 115][Stage 52:==========================================>           (91 + 24) / 115][Stage 52:===============================================>     (103 + 12) / 115][Stage 52:===================================================>  (110 + 5) / 115][Stage 52:=====================================================>(114 + 1) / 115]                                                                                [Stage 53:================================>                     (69 + 47) / 116][Stage 53:====================================>                 (79 + 37) / 116][Stage 53:==========================================>           (92 + 24) / 116][Stage 53:==================================================>   (109 + 7) / 116][Stage 53:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.134475209 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=142", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=142,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399462495 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:==================================>                   (73 + 40) / 113][Stage 54:=======================================>              (82 + 31) / 113][Stage 54:============================================>         (93 + 20) / 113][Stage 54:==================================================>   (106 + 7) / 113][Stage 54:=====================================================>(111 + 2) / 113]                                                                                [Stage 55:=======================================>              (83 + 31) / 114][Stage 55:===========================================>          (92 + 22) / 114][Stage 55:=================================================>    (105 + 9) / 114][Stage 55:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.998366258 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=169", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=169,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41341877 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==============================>                       (66 + 49) / 115][Stage 56:===================================>                  (75 + 40) / 115][Stage 56:=========================================>            (89 + 26) / 115][Stage 56:================================================>    (105 + 10) / 115][Stage 56:=====================================================>(113 + 2) / 115]                                                                                [Stage 57:===================================>                  (77 + 39) / 116][Stage 57:==========================================>           (91 + 25) / 116][Stage 57:===============================================>     (105 + 11) / 116][Stage 57:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.917624467 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=155", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=155,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397136288 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:================================>                     (72 + 46) / 118][Stage 58:====================================>                 (79 + 39) / 118][Stage 58:========================================>             (89 + 29) / 118][Stage 58:===========================================>          (96 + 22) / 118][Stage 58:=================================================>    (109 + 9) / 118][Stage 58:====================================================> (115 + 3) / 118]                                                                                [Stage 59:=================================>                    (73 + 46) / 119][Stage 59:=================================>                    (74 + 45) / 119][Stage 59:=======================================>              (87 + 32) / 119][Stage 59:===========================================>          (96 + 23) / 119][Stage 59:================================================>    (109 + 10) / 119][Stage 59:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.499092472 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=199", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=199,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.482343723 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (60 + 60) / 120][Stage 60:===========================>                          (62 + 58) / 120][Stage 60:===============================>                      (69 + 51) / 120][Stage 60:==========================================>           (94 + 26) / 120][Stage 60:===================================================>  (114 + 6) / 120]                                                                                [Stage 61:===========================>                          (61 + 60) / 121][Stage 61:=============================>                        (67 + 54) / 121][Stage 61:=========================================>            (93 + 28) / 121][Stage 61:==================================================>   (113 + 8) / 121][Stage 61:=====================================================>(119 + 2) / 121][Stage 61:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.732521765 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=145", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=145,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.470548552 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (60 + 60) / 120][Stage 62:============================>                         (63 + 57) / 120][Stage 62:==============================>                       (68 + 52) / 120][Stage 62:======================================>               (85 + 35) / 120][Stage 62:=============================================>       (104 + 16) / 120][Stage 62:===================================================>  (114 + 6) / 120]                                                                                [Stage 63:============================>                         (63 + 58) / 121][Stage 63:==================================>                   (77 + 44) / 121][Stage 63:=========================================>            (93 + 28) / 121][Stage 63:==================================================>   (113 + 8) / 121][Stage 63:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.144178209 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=237", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=237,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41908554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===================================>                  (76 + 39) / 115][Stage 64:=========================================>            (89 + 26) / 115][Stage 64:=================================================>    (106 + 9) / 115][Stage 64:=====================================================>(114 + 1) / 115]                                                                                [Stage 65:=================================>                    (73 + 43) / 116][Stage 65:=======================================>              (85 + 31) / 116][Stage 65:==================================================>   (108 + 8) / 116][Stage 65:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.723083547 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=31", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=31,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416595653 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:================================>                     (72 + 46) / 118][Stage 66:==================================>                   (76 + 42) / 118][Stage 66:=========================================>            (91 + 27) / 118][Stage 66:================================================>    (107 + 11) / 118][Stage 66:=====================================================>(116 + 2) / 118]                                                                                [Stage 67:=================================>                    (74 + 45) / 119][Stage 67:=======================================>              (88 + 31) / 119][Stage 67:================================================>    (109 + 10) / 119][Stage 67:=====================================================>(117 + 2) / 119][Stage 67:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.547659146 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=17", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=17,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380329621 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==================================>                   (73 + 40) / 113][Stage 68:=======================================>              (83 + 30) / 113][Stage 68:=============================================>        (96 + 17) / 113][Stage 68:==================================================>   (106 + 7) / 113][Stage 68:====================================================> (109 + 4) / 113][Stage 68:=====================================================>(112 + 1) / 113]                                                                                [Stage 69:======================================>               (81 + 33) / 114][Stage 69:=========================================>            (87 + 27) / 114][Stage 69:==============================================>       (98 + 16) / 114][Stage 69:=================================================>    (105 + 9) / 114][Stage 69:====================================================> (111 + 3) / 114][Stage 69:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 7.528989106 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=15", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=15,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413755383 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:======================================>               (82 + 33) / 115][Stage 70:========================================>             (87 + 28) / 115][Stage 70:==============================================>      (101 + 14) / 115][Stage 70:===================================================>  (110 + 5) / 115][Stage 70:=====================================================>(114 + 1) / 115]                                                                                [Stage 71:======================================>               (82 + 34) / 116][Stage 71:=========================================>            (89 + 27) / 116][Stage 71:==============================================>      (101 + 15) / 116][Stage 71:================================================>    (106 + 10) / 116][Stage 71:===================================================>  (111 + 5) / 116][Stage 71:====================================================> (113 + 3) / 116][Stage 71:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.547876768 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=122", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=122,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384630789 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===================================>                  (74 + 39) / 113][Stage 72:===========================================>          (92 + 21) / 113][Stage 72:==============================================>      (100 + 13) / 113][Stage 72:===================================================>  (108 + 5) / 113]                                                                                [Stage 73:======================================>               (81 + 33) / 114][Stage 73:============================================>         (94 + 20) / 114][Stage 73:===============================================>     (102 + 12) / 114][Stage 73:===================================================>  (108 + 6) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.164286888 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=129", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=129,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42904946 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (60 + 60) / 120][Stage 74:===========================>                          (61 + 59) / 120][Stage 74:==============================>                       (68 + 52) / 120][Stage 74:=======================================>              (87 + 33) / 120][Stage 74:===============================================>     (107 + 13) / 120]                                                                                [Stage 75:===========================>                          (61 + 60) / 121][Stage 75:==============================>                       (68 + 53) / 121][Stage 75:========================================>             (90 + 31) / 121][Stage 75:===================================================>  (115 + 6) / 121][Stage 75:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.056589267 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=30", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=23 AND partitionZIndex<=30,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383566305 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:=================================>                    (71 + 42) / 113][Stage 76:=======================================>              (83 + 30) / 113][Stage 76:=============================================>        (95 + 18) / 113][Stage 76:==================================================>   (106 + 7) / 113][Stage 76:=====================================================>(112 + 1) / 113]                                                                                [Stage 77:====================================>                 (77 + 37) / 114][Stage 77:========================================>             (85 + 29) / 114][Stage 77:============================================>         (93 + 21) / 114][Stage 77:==============================================>      (100 + 14) / 114][Stage 77:===================================================>  (109 + 5) / 114][Stage 77:====================================================> (110 + 4) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 9.112780321 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=140", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=140,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.453822039 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:=============================>                        (65 + 56) / 121][Stage 78:=================================>                    (76 + 45) / 121][Stage 78:==========================================>           (95 + 26) / 121][Stage 78:=====================================================>(120 + 1) / 121]                                                                                [Stage 79:===========================>                          (62 + 60) / 122][Stage 79:===============================>                      (72 + 50) / 122][Stage 79:=======================================>              (90 + 32) / 122][Stage 79:===============================================>     (109 + 13) / 122][Stage 79:=====================================================>(120 + 2) / 122][Stage 79:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.564799016 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=244", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=244,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391066021 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:===============================>                      (67 + 48) / 115][Stage 80:=======================================>              (85 + 30) / 115][Stage 80:==============================================>       (99 + 16) / 115][Stage 80:====================================================> (111 + 4) / 115]                                                                                [Stage 81:=================================>                    (73 + 43) / 116][Stage 81:=========================================>            (89 + 27) / 116][Stage 81:=================================================>    (107 + 9) / 116][Stage 81:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.886459136 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=247", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=247,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457579567 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==================================>                   (73 + 42) / 115][Stage 82:===========================================>          (92 + 23) / 115][Stage 82:==================================================>   (107 + 8) / 115][Stage 82:=====================================================>(113 + 2) / 115]                                                                                [Stage 83:================================>                     (69 + 47) / 116][Stage 83:====================================>                 (78 + 38) / 116][Stage 83:===========================================>          (94 + 22) / 116][Stage 83:==================================================>   (109 + 7) / 116][Stage 83:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.844515626 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=112", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=112,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402603588 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:=================================>                    (71 + 44) / 115][Stage 84:===========================================>          (92 + 23) / 115][Stage 84:===============================================>     (104 + 11) / 115]                                                                                [Stage 85:====================================>                 (78 + 38) / 116][Stage 85:==========================================>           (91 + 25) / 116][Stage 85:================================================>    (106 + 10) / 116][Stage 85:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.762566216 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=210", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=210,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387180189 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===============================>                      (67 + 48) / 115][Stage 86:======================================>               (83 + 32) / 115][Stage 86:===============================================>     (104 + 11) / 115][Stage 86:====================================================> (112 + 3) / 115]                                                                                [Stage 87:================================>                     (69 + 47) / 116][Stage 87:=======================================>              (85 + 31) / 116][Stage 87:============================================>         (95 + 21) / 116][Stage 87:==================================================>   (109 + 7) / 116][Stage 87:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.745110487 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=87", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=87,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409429464 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:============================>                         (59 + 54) / 113][Stage 88:=================================>                    (70 + 43) / 113][Stage 88:==============================================>       (98 + 15) / 113][Stage 88:====================================================> (110 + 3) / 113]                                                                                [Stage 89:============================>                         (60 + 54) / 114][Stage 89:=================================>                    (71 + 43) / 114][Stage 89:===========================================>          (92 + 22) / 114][Stage 89:==================================================>   (107 + 7) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.381004893 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=165", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=165,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365820834 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:=====================================>                (80 + 35) / 115][Stage 90:========================================>             (87 + 28) / 115][Stage 90:=============================================>        (97 + 18) / 115][Stage 90:==================================================>   (108 + 7) / 115]                                                                                [Stage 91:========================================>             (86 + 30) / 116][Stage 91:=============================================>        (98 + 18) / 116][Stage 91:===================================================>  (111 + 5) / 116][Stage 91:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.670823052 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=222", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=222,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43662889 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:=========================================>            (87 + 26) / 113][Stage 92:===========================================>          (91 + 22) / 113][Stage 92:==============================================>      (100 + 13) / 113][Stage 92:====================================================> (110 + 3) / 113]                                                                                [Stage 93:=======================================>              (83 + 31) / 114][Stage 93:=============================================>        (95 + 19) / 114][Stage 93:==============================================>      (101 + 13) / 114][Stage 93:===================================================>  (109 + 5) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.105137511 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=116", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=116,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393032121 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:=============================>                        (62 + 51) / 113][Stage 94:================================>                     (69 + 44) / 113][Stage 94:===========================================>          (91 + 22) / 113][Stage 94:==================================================>   (106 + 7) / 113][Stage 94:=====================================================>(112 + 1) / 113]                                                                                [Stage 95:===========================>                          (59 + 55) / 114][Stage 95:===============================>                      (66 + 48) / 114][Stage 95:=======================================>              (83 + 31) / 114][Stage 95:=================================================>    (105 + 9) / 114][Stage 95:====================================================> (110 + 4) / 114][Stage 95:=====================================================>(112 + 2) / 114][Stage 95:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.629392007 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=208", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=208,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369745882 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:================================>                     (72 + 46) / 118][Stage 96:=================================>                    (74 + 44) / 118][Stage 96:======================================>               (84 + 34) / 118][Stage 96:==============================================>      (103 + 15) / 118][Stage 96:==================================================>   (111 + 7) / 118]                                                                                [Stage 97:==================================>                   (75 + 44) / 119][Stage 97:=====================================>                (83 + 36) / 119][Stage 97:=============================================>       (102 + 17) / 119][Stage 97:=====================================================>(117 + 2) / 119][Stage 97:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.667271239 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=228", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=228,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372552988 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:====================================>                 (76 + 37) / 113][Stage 98:========================================>             (84 + 29) / 113][Stage 98:=============================================>        (96 + 17) / 113][Stage 98:===================================================>  (107 + 6) / 113][Stage 98:=====================================================>(111 + 2) / 113]                                                                                [Stage 99:===================================>                  (75 + 39) / 114][Stage 99:========================================>             (85 + 29) / 114][Stage 99:=============================================>        (97 + 17) / 114][Stage 99:==================================================>   (107 + 7) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.000655873 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=172", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=172,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411474984 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (59 + 54) / 113][Stage 100:=================================>                   (72 + 41) / 113][Stage 100:============================================>        (94 + 19) / 113][Stage 100:==================================================>  (108 + 5) / 113][Stage 100:====================================================>(112 + 1) / 113]                                                                                [Stage 101:============================>                        (61 + 53) / 114][Stage 101:====================================>                (78 + 36) / 114][Stage 101:============================================>        (95 + 19) / 114][Stage 101:==================================================>  (109 + 5) / 114][Stage 101:===================================================> (111 + 3) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.952375035 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=71", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=71,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426804062 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 60) / 120][Stage 102:===========================>                         (63 + 57) / 120][Stage 102:==================================>                  (77 + 43) / 120][Stage 102:===========================================>         (99 + 21) / 120][Stage 102:===================================================> (116 + 4) / 120]                                                                                [Stage 103:============================>                        (65 + 56) / 121][Stage 103:====================================>                (83 + 38) / 121][Stage 103:============================================>       (104 + 17) / 121][Stage 103:====================================================>(119 + 2) / 121][Stage 103:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.68822705 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340909828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:=====================================>               (82 + 33) / 115][Stage 104:=========================================>           (90 + 25) / 115][Stage 104:==============================================>     (103 + 12) / 115][Stage 104:===================================================> (111 + 4) / 115]                                                                                [Stage 105:=====================================>               (83 + 33) / 116][Stage 105:============================================>        (97 + 19) / 116][Stage 105:=================================================>   (109 + 7) / 116][Stage 105:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.826126181 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=216", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=216,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411955023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (58 + 55) / 113][Stage 106:==============================>                      (66 + 47) / 113][Stage 106:=======================================>             (84 + 29) / 113][Stage 106:=============================================>       (98 + 15) / 113][Stage 106:====================================================>(112 + 1) / 113]                                                                                [Stage 107:============================>                        (62 + 52) / 114][Stage 107:==================================>                  (75 + 39) / 114][Stage 107:===========================================>         (93 + 21) / 114][Stage 107:==================================================>  (109 + 5) / 114][Stage 107:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.675050463 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=201", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=201,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382270449 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==================================>                  (73 + 40) / 113][Stage 108:========================================>            (86 + 27) / 113][Stage 108:============================================>        (94 + 19) / 113][Stage 108:==================================================>  (107 + 6) / 113][Stage 108:====================================================>(111 + 2) / 113]                                                                                [Stage 109:=====================================>               (81 + 33) / 114][Stage 109:===========================================>         (93 + 21) / 114][Stage 109:===============================================>    (104 + 10) / 114][Stage 109:===================================================> (111 + 3) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.09598686 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=68", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=68,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357045265 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=================================>                   (71 + 42) / 113][Stage 110:=====================================>               (81 + 32) / 113][Stage 110:==========================================>          (91 + 22) / 113][Stage 110:=============================================>       (98 + 15) / 113][Stage 110:==================================================>  (108 + 5) / 113]                                                                                [Stage 111:=====================================>               (81 + 33) / 114][Stage 111:=========================================>           (90 + 24) / 114][Stage 111:==============================================>      (99 + 15) / 114][Stage 111:==================================================>  (108 + 6) / 114][Stage 111:====================================================>(112 + 2) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.524913797 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=147", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=147,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362596719 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:================================>                    (72 + 46) / 118][Stage 112:=================================>                   (75 + 43) / 118][Stage 112:=======================================>             (88 + 30) / 118][Stage 112:============================================>       (101 + 17) / 118][Stage 112:=================================================>   (111 + 7) / 118]                                                                                [Stage 113:================================>                    (73 + 46) / 119][Stage 113:====================================>                (83 + 36) / 119][Stage 113:==========================================>          (95 + 24) / 119][Stage 113:=================================================>   (112 + 7) / 119][Stage 113:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.71462232 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=32", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=32,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39189317 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:============================>                        (61 + 52) / 113][Stage 114:=================================>                   (71 + 42) / 113][Stage 114:=================================================>   (105 + 8) / 113][Stage 114:===================================================> (110 + 3) / 113][Stage 114:====================================================>(112 + 1) / 113]                                                                                [Stage 115:============================>                        (62 + 52) / 114][Stage 115:=================================>                   (73 + 41) / 114][Stage 115:===========================================>         (94 + 20) / 114][Stage 115:=================================================>   (106 + 8) / 114][Stage 115:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.545714629 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=215", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=215,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403804819 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (61 + 59) / 120][Stage 116:==================================>                  (79 + 41) / 120][Stage 116:=========================================>           (93 + 27) / 120][Stage 116:==================================================>  (115 + 5) / 120]                                                                                [Stage 117:===========================>                         (62 + 59) / 121][Stage 117:================================>                    (74 + 47) / 121][Stage 117:=======================================>             (90 + 31) / 121][Stage 117:==============================================>     (108 + 13) / 121][Stage 117:====================================================>(119 + 2) / 121][Stage 117:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.123753235 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=127", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=127,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37614135 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===============================>                     (69 + 46) / 115][Stage 118:=======================================>             (86 + 29) / 115][Stage 118:=============================================>      (101 + 14) / 115][Stage 118:==================================================>  (109 + 6) / 115]                                                                                [Stage 119:=================================>                   (74 + 42) / 116][Stage 119:==========================================>          (94 + 22) / 116][Stage 119:=================================================>   (108 + 8) / 116][Stage 119:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.741025211 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=153", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=153,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389848023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (58 + 55) / 113][Stage 120:====================================>                (77 + 36) / 113][Stage 120:============================================>        (94 + 19) / 113][Stage 120:==================================================>  (108 + 5) / 113]                                                                                [Stage 121:============================>                        (61 + 53) / 114][Stage 121:================================>                    (69 + 45) / 114][Stage 121:===========================================>         (94 + 20) / 114][Stage 121:=================================================>   (106 + 8) / 114][Stage 121:====================================================>(112 + 2) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.936008276 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=123", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=123,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401755031 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 60) / 120][Stage 122:==============================>                      (68 + 52) / 120][Stage 122:=====================================>               (84 + 36) / 120][Stage 122:===========================================>        (100 + 20) / 120][Stage 122:===================================================> (116 + 4) / 120]                                                                                [Stage 123:==========================>                          (61 + 60) / 121][Stage 123:===============================>                     (73 + 48) / 121][Stage 123:=======================================>             (91 + 30) / 121][Stage 123:==============================================>     (108 + 13) / 121][Stage 123:====================================================>(119 + 2) / 121][Stage 123:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.7785563 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=105", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=105,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342812246 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:=====================================>               (82 + 33) / 115][Stage 124:========================================>            (87 + 28) / 115][Stage 124:=============================================>      (101 + 14) / 115][Stage 124:====================================================>(114 + 1) / 115]                                                                                [Stage 125:=====================================>               (83 + 33) / 116][Stage 125:========================================>            (89 + 27) / 116][Stage 125:===============================================>    (105 + 11) / 116][Stage 125:===================================================> (112 + 4) / 116][Stage 125:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.797864876 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=78", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=78,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369488131 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===================================>                 (76 + 37) / 113][Stage 126:=========================================>           (88 + 25) / 113][Stage 126:=============================================>       (98 + 15) / 113][Stage 126:=================================================>   (106 + 7) / 113][Stage 126:====================================================>(111 + 2) / 113]                                                                                [Stage 127:===================================>                 (77 + 37) / 114][Stage 127:=========================================>           (89 + 25) / 114][Stage 127:=============================================>       (97 + 17) / 114][Stage 127:================================================>    (105 + 9) / 114][Stage 127:==================================================>  (108 + 6) / 114][Stage 127:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.263368517 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=55", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=55,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365100499 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=====================================>               (79 + 34) / 113][Stage 128:========================================>            (86 + 27) / 113][Stage 128:==============================================>     (100 + 13) / 113][Stage 128:===================================================> (109 + 4) / 113][Stage 128:====================================================>(111 + 2) / 113]                                                                                [Stage 129:==================================>                  (74 + 40) / 114][Stage 129:=======================================>             (84 + 30) / 114][Stage 129:=======================================>             (86 + 28) / 114][Stage 129:==============================================>      (99 + 15) / 114][Stage 129:===================================================> (110 + 4) / 114][Stage 129:====================================================>(112 + 2) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 8.614319793 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=193", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=193,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41488148 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 60) / 120][Stage 130:============================>                        (65 + 55) / 120][Stage 130:=================================>                   (75 + 45) / 120][Stage 130:=========================================>           (95 + 25) / 120][Stage 130:=================================================>   (113 + 7) / 120]                                                                                [Stage 131:============================>                        (66 + 55) / 121][Stage 131:===================================>                 (80 + 41) / 121][Stage 131:==========================================>          (98 + 23) / 121][Stage 131:===================================================> (118 + 3) / 121][Stage 131:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.870932352 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=207", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=207,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393098185 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 60) / 120][Stage 132:============================>                        (65 + 55) / 120][Stage 132:===================================>                 (81 + 39) / 120][Stage 132:===========================================>         (99 + 21) / 120][Stage 132:====================================================>(118 + 2) / 120]                                                                                [Stage 133:==========================>                          (61 + 60) / 121][Stage 133:============================>                        (66 + 55) / 121][Stage 133:===================================>                 (81 + 40) / 121][Stage 133:=========================================>           (95 + 26) / 121][Stage 133:=============================================>      (105 + 16) / 121][Stage 133:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.190761228 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=241", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=241,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399926681 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==========================>                          (60 + 60) / 120][Stage 134:===========================>                         (62 + 58) / 120][Stage 134:=====================================>               (84 + 36) / 120][Stage 134:===============================================>    (110 + 10) / 120][Stage 134:===================================================> (117 + 3) / 120][Stage 134:====================================================>(119 + 1) / 120]                                                                                [Stage 135:==========================>                          (61 + 60) / 121][Stage 135:============================>                        (65 + 56) / 121][Stage 135:=====================================>               (85 + 36) / 121][Stage 135:==============================================>     (109 + 12) / 121][Stage 135:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.080450429 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=196", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=196,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354041948 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:=======================================>             (85 + 28) / 113][Stage 136:==========================================>          (90 + 23) / 113][Stage 136:==============================================>      (99 + 14) / 113][Stage 136:==================================================>  (108 + 5) / 113][Stage 136:====================================================>(111 + 2) / 113]                                                                                [Stage 137:==================================>                  (75 + 39) / 114][Stage 137:=======================================>             (84 + 30) / 114][Stage 137:============================================>        (95 + 19) / 114][Stage 137:==============================================>      (99 + 15) / 114][Stage 137:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.172385976 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=24", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=24,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370892348 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==============================>                      (66 + 49) / 115][Stage 138:==================================>                  (74 + 41) / 115][Stage 138:=========================================>           (91 + 24) / 115][Stage 138:==============================================>     (102 + 13) / 115][Stage 138:====================================================>(113 + 2) / 115]                                                                                [Stage 139:==================================>                  (75 + 41) / 116][Stage 139:========================================>            (89 + 27) / 116][Stage 139:============================================>        (98 + 18) / 116][Stage 139:================================================>    (107 + 9) / 116][Stage 139:===================================================> (112 + 4) / 116][Stage 139:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 7.048435558 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=108", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=108,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352955007 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===================================>                 (76 + 37) / 113][Stage 140:========================================>            (87 + 26) / 113][Stage 140:==============================================>     (101 + 12) / 113][Stage 140:===================================================> (109 + 4) / 113][Stage 140:====================================================>(112 + 1) / 113]                                                                                [Stage 141:==================================>                  (74 + 40) / 114][Stage 141:=========================================>           (89 + 25) / 114][Stage 141:=============================================>       (97 + 17) / 114][Stage 141:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.880549314 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=85", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=85,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397935125 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (60 + 60) / 120][Stage 142:================================>                    (73 + 47) / 120][Stage 142:========================================>            (92 + 28) / 120][Stage 142:=================================================>   (112 + 8) / 120]                                                                                [Stage 143:==========================>                          (61 + 60) / 121][Stage 143:============================>                        (66 + 55) / 121][Stage 143:=================================>                   (77 + 44) / 121][Stage 143:==========================================>          (96 + 25) / 121][Stage 143:===================================================> (117 + 4) / 121][Stage 143:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.735107464 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=136", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=136,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377914397 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (58 + 55) / 113][Stage 144:==============================>                      (66 + 47) / 113][Stage 144:======================================>              (83 + 30) / 113][Stage 144:==================================================>  (107 + 6) / 113][Stage 144:====================================================>(112 + 1) / 113]                                                                                [Stage 145:============================>                        (61 + 53) / 114][Stage 145:===================================>                 (76 + 38) / 114][Stage 145:===========================================>         (93 + 21) / 114][Stage 145:================================================>    (105 + 9) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.999028831 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=139,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440649649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:=======================================>             (85 + 30) / 115][Stage 146:===========================================>         (95 + 20) / 115][Stage 146:================================================>    (106 + 9) / 115]                                                                                [Stage 147:=======================================>             (86 + 30) / 116][Stage 147:===========================================>         (95 + 21) / 116][Stage 147:==================================================>  (111 + 5) / 116][Stage 147:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.706759162 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=166", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=166,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375204719 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:==================================>                  (75 + 40) / 115][Stage 148:==========================================>          (92 + 23) / 115][Stage 148:===================================================> (111 + 4) / 115][Stage 148:====================================================>(113 + 2) / 115]                                                                                [Stage 149:===============================>                     (69 + 47) / 116][Stage 149:==================================>                  (76 + 40) / 116][Stage 149:============================================>        (98 + 18) / 116][Stage 149:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.742809161 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=76", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=76,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367365175 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===================================>                 (76 + 39) / 115][Stage 150:==========================================>          (92 + 23) / 115][Stage 150:=================================================>   (108 + 7) / 115][Stage 150:====================================================>(114 + 1) / 115]                                                                                [Stage 151:===================================>                 (78 + 38) / 116][Stage 151:===========================================>         (95 + 21) / 116][Stage 151:==================================================>  (111 + 5) / 116][Stage 151:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.873851385 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=180", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=180,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404773352 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==========================>                          (60 + 61) / 121][Stage 152:==============================>                      (70 + 51) / 121][Stage 152:=========================================>           (95 + 26) / 121][Stage 152:==================================================>  (115 + 6) / 121][Stage 152:====================================================>(120 + 1) / 121]                                                                                [Stage 153:==========================>                          (61 + 61) / 122][Stage 153:============================>                        (66 + 56) / 122][Stage 153:===================================>                 (81 + 41) / 122][Stage 153:===========================================>         (99 + 23) / 122][Stage 153:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.83006213 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=189", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=189,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394371974 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==========================>                          (60 + 60) / 120][Stage 154:===========================>                         (62 + 58) / 120][Stage 154:================================>                    (73 + 47) / 120][Stage 154:=========================================>           (95 + 25) / 120][Stage 154:===================================================> (116 + 4) / 120][Stage 154:====================================================>(119 + 1) / 120]                                                                                [Stage 155:==========================>                          (61 + 60) / 121][Stage 155:============================>                        (66 + 55) / 121][Stage 155:=================================>                   (77 + 44) / 121][Stage 155:=========================================>           (94 + 27) / 121][Stage 155:===============================================>    (111 + 10) / 121][Stage 155:====================================================>(119 + 2) / 121][Stage 155:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.944785436 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=175", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=175,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350287058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==================================>                  (74 + 39) / 113][Stage 156:========================================>            (86 + 27) / 113][Stage 156:=============================================>       (98 + 15) / 113][Stage 156:===================================================> (110 + 3) / 113]                                                                                [Stage 157:===================================>                 (77 + 37) / 114][Stage 157:=========================================>           (89 + 25) / 114][Stage 157:=============================================>       (98 + 16) / 114][Stage 157:===================================================> (111 + 3) / 114][Stage 157:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.022299044 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=34", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=34,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359038962 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:=================================>                   (74 + 44) / 118][Stage 158:======================================>              (86 + 32) / 118][Stage 158:============================================>       (101 + 17) / 118][Stage 158:===================================================> (115 + 3) / 118]                                                                                [Stage 159:================================>                    (73 + 46) / 119][Stage 159:=================================>                   (75 + 44) / 119][Stage 159:=======================================>             (88 + 31) / 119][Stage 159:============================================>        (99 + 20) / 119][Stage 159:==================================================>  (114 + 5) / 119][Stage 159:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.540792933 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=50", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=50,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347183398 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (70 + 43) / 113][Stage 160:======================================>              (83 + 30) / 113][Stage 160:============================================>        (95 + 18) / 113][Stage 160:=================================================>   (106 + 7) / 113][Stage 160:====================================================>(111 + 2) / 113]                                                                                [Stage 161:======================================>              (82 + 32) / 114][Stage 161:========================================>            (88 + 26) / 114][Stage 161:==========================================>          (92 + 22) / 114][Stage 161:=============================================>       (97 + 17) / 114][Stage 161:==================================================>  (108 + 6) / 114][Stage 161:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 6.694120067 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=43", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=43,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366631697 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:================================>                    (72 + 46) / 118][Stage 162:=================================>                   (75 + 43) / 118][Stage 162:===================================>                 (80 + 38) / 118][Stage 162:============================================>       (100 + 18) / 118][Stage 162:==================================================>  (113 + 5) / 118]                                                                                [Stage 163:================================>                    (74 + 45) / 119][Stage 163:====================================>                (81 + 38) / 119][Stage 163:========================================>            (90 + 29) / 119][Stage 163:==============================================>     (106 + 13) / 119][Stage 163:===================================================> (116 + 3) / 119][Stage 163:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.1772326 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=150", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=150,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339622653 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:======================================>              (83 + 32) / 115][Stage 164:==========================================>          (92 + 23) / 115][Stage 164:=================================================>   (107 + 8) / 115]                                                                                [Stage 165:=====================================>               (82 + 34) / 116][Stage 165:==========================================>          (92 + 24) / 116][Stage 165:============================================>       (100 + 16) / 116][Stage 165:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.69730067 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=66", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=66,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385199591 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (58 + 55) / 113][Stage 166:============================>                        (61 + 52) / 113][Stage 166:=================================>                   (72 + 41) / 113][Stage 166:=============================================>       (98 + 15) / 113][Stage 166:==================================================>  (108 + 5) / 113][Stage 166:====================================================>(112 + 1) / 113]                                                                                [Stage 167:============================>                        (61 + 53) / 114][Stage 167:=============================>                       (63 + 51) / 114][Stage 167:====================================>                (78 + 36) / 114][Stage 167:==============================================>     (101 + 13) / 114][Stage 167:===================================================> (110 + 4) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.086865859 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=40", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=40,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395215842 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==============================>                      (66 + 49) / 115][Stage 168:==================================>                  (75 + 40) / 115][Stage 168:=========================================>           (89 + 26) / 115][Stage 168:==============================================>     (102 + 13) / 115][Stage 168:===================================================> (112 + 3) / 115][Stage 168:====================================================>(114 + 1) / 115]                                                                                [Stage 169:====================================>                (79 + 37) / 116][Stage 169:==========================================>          (92 + 24) / 116][Stage 169:============================================>        (98 + 18) / 116][Stage 169:==============================================>     (103 + 13) / 116][Stage 169:================================================>    (107 + 9) / 116][Stage 169:=================================================>   (108 + 8) / 116][Stage 169:=================================================>   (109 + 7) / 116][Stage 169:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 9.4849207 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=94", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=94,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412313686 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:>                                                      (0 + 0) / 121][Stage 170:==========================>                          (60 + 61) / 121][Stage 170:============================>                        (65 + 56) / 121][Stage 170:===================================>                 (82 + 39) / 121][Stage 170:=============================================>      (105 + 16) / 121][Stage 170:====================================================>(120 + 1) / 121]                                                                                [Stage 171:==========================>                          (62 + 60) / 122][Stage 171:==============================>                      (70 + 52) / 122][Stage 171:====================================>                (83 + 39) / 122][Stage 171:==============================================>     (108 + 14) / 122][Stage 171:==================================================>  (117 + 5) / 122][Stage 171:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.018183204 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=101", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=101,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383454173 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (58 + 55) / 113][Stage 172:============================>                        (61 + 52) / 113][Stage 172:===================================>                 (76 + 37) / 113][Stage 172:=============================================>       (98 + 15) / 113][Stage 172:====================================================>(112 + 1) / 113]                                                                                [Stage 173:===========================>                         (59 + 55) / 114][Stage 173:===============================>                     (68 + 46) / 114][Stage 173:=======================================>             (84 + 30) / 114][Stage 173:==============================================>     (103 + 11) / 114][Stage 173:====================================================>(112 + 2) / 114][Stage 173:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.492744545 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=135", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=135,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386632367 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (59 + 54) / 113][Stage 174:==============================>                      (64 + 49) / 113][Stage 174:===================================>                 (75 + 38) / 113][Stage 174:================================================>    (104 + 9) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:===========================>                         (60 + 54) / 114][Stage 175:================================>                    (69 + 45) / 114][Stage 175:=======================================>             (86 + 28) / 114][Stage 175:==============================================>      (99 + 15) / 114][Stage 175:===================================================> (111 + 3) / 114][Stage 175:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.147585216 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=141", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=141,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367821006 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==================================>                  (75 + 40) / 115][Stage 176:=========================================>           (91 + 24) / 115][Stage 176:===============================================>    (105 + 10) / 115]                                                                                [Stage 177:================================>                    (71 + 45) / 116][Stage 177:=======================================>             (87 + 29) / 116][Stage 177:===============================================>    (105 + 11) / 116][Stage 177:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.724323521 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=18", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=18,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343911979 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:====================================>                (80 + 35) / 115][Stage 178:=======================================>             (86 + 29) / 115][Stage 178:=============================================>       (98 + 17) / 115][Stage 178:====================================================>(113 + 2) / 115]                                                                                [Stage 179:======================================>              (85 + 31) / 116][Stage 179:==========================================>          (92 + 24) / 116][Stage 179:============================================>       (100 + 16) / 116][Stage 179:===============================================>    (106 + 10) / 116][Stage 179:===================================================> (113 + 3) / 116][Stage 179:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 7.151241767 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=121", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=121,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350819873 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=====================================>               (81 + 34) / 115][Stage 180:========================================>            (87 + 28) / 115][Stage 180:============================================>        (96 + 19) / 115][Stage 180:===============================================>    (105 + 10) / 115][Stage 180:===================================================> (112 + 3) / 115]                                                                                [Stage 181:======================================>              (85 + 31) / 116][Stage 181:==============================================>     (103 + 13) / 116][Stage 181:===================================================> (112 + 4) / 116][Stage 181:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.10284648 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=231", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=231,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410275481 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:=================================>                   (73 + 42) / 115][Stage 182:==========================================>          (92 + 23) / 115][Stage 182:=============================================>      (101 + 14) / 115][Stage 182:==================================================>  (109 + 6) / 115][Stage 182:====================================================>(113 + 2) / 115]                                                                                [Stage 183:=================================>                   (74 + 42) / 116][Stage 183:=========================================>           (90 + 26) / 116][Stage 183:===============================================>    (105 + 11) / 116][Stage 183:==================================================>  (110 + 6) / 116][Stage 183:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.183113783 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=44", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=44,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400004425 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (60 + 60) / 120][Stage 184:=============================>                       (67 + 53) / 120][Stage 184:===================================>                 (81 + 39) / 120][Stage 184:=============================================>      (104 + 16) / 120][Stage 184:====================================================>(119 + 1) / 120]                                                                                [Stage 185:==========================>                          (61 + 60) / 121][Stage 185:=============================>                       (67 + 54) / 121][Stage 185:===================================>                 (82 + 39) / 121][Stage 185:=============================================>      (107 + 14) / 121][Stage 185:==================================================>  (116 + 5) / 121][Stage 185:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.255997194 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=125", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=118 AND partitionZIndex<=125,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430618082 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:=======================================>             (85 + 30) / 115][Stage 186:=============================================>       (99 + 16) / 115][Stage 186:===================================================> (112 + 3) / 115][Stage 186:====================================================>(114 + 1) / 115]                                                                                [Stage 187:=========================================>           (90 + 26) / 116][Stage 187:=============================================>      (102 + 14) / 116][Stage 187:==================================================>  (111 + 5) / 116][Stage 187:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.835437398 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=26", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=26,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368429156 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:================================>                    (72 + 46) / 118][Stage 188:==================================>                  (76 + 42) / 118][Stage 188:=======================================>             (88 + 30) / 118][Stage 188:===============================================>    (107 + 11) / 118][Stage 188:====================================================>(117 + 1) / 118]                                                                                [Stage 189:================================>                    (73 + 46) / 119][Stage 189:===================================>                 (80 + 39) / 119][Stage 189:=======================================>             (89 + 30) / 119][Stage 189:=============================================>      (103 + 16) / 119][Stage 189:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.427600781 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=82", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=82,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374953868 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===================================>                 (76 + 39) / 115][Stage 190:===========================================>         (94 + 21) / 115][Stage 190:=================================================>   (107 + 8) / 115]                                                                                [Stage 191:=================================>                   (74 + 42) / 116][Stage 191:======================================>              (85 + 31) / 116][Stage 191:=================================================>   (109 + 7) / 116][Stage 191:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.733631739 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=190", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=190,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38330151 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:============================>                        (61 + 52) / 113][Stage 192:====================================>                (77 + 36) / 113][Stage 192:=============================================>       (96 + 17) / 113][Stage 192:==================================================>  (108 + 5) / 113]                                                                                [Stage 193:===========================>                         (60 + 54) / 114][Stage 193:=================================>                   (72 + 42) / 114][Stage 193:===========================================>         (93 + 21) / 114][Stage 193:=================================================>   (106 + 8) / 114][Stage 193:===================================================> (110 + 4) / 114][Stage 193:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.898948393 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=103", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=103,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414720751 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 61) / 121][Stage 194:=============================>                       (68 + 53) / 121][Stage 194:=====================================>               (85 + 36) / 121][Stage 194:=============================================>      (105 + 16) / 121][Stage 194:===================================================> (118 + 3) / 121]                                                                                [Stage 195:==========================>                          (61 + 61) / 122][Stage 195:============================>                        (65 + 57) / 122][Stage 195:==================================>                  (80 + 42) / 122][Stage 195:==========================================>          (97 + 25) / 122][Stage 195:==================================================>  (116 + 6) / 122][Stage 195:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.899206493 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=22", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=22,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350016833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:======================================>              (83 + 32) / 115][Stage 196:==========================================>          (92 + 23) / 115][Stage 196:=================================================>   (107 + 8) / 115]                                                                                [Stage 197:======================================>              (84 + 32) / 116][Stage 197:==========================================>          (93 + 23) / 116][Stage 197:=============================================>      (102 + 14) / 116][Stage 197:==================================================>  (110 + 6) / 116][Stage 197:===================================================> (113 + 3) / 116][Stage 197:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.190299479 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=69", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=69,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391423983 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=============================>                       (65 + 50) / 115][Stage 198:===================================>                 (77 + 38) / 115][Stage 198:=============================================>       (99 + 16) / 115][Stage 198:=================================================>   (107 + 8) / 115][Stage 198:=================================================>   (108 + 7) / 115][Stage 198:====================================================>(114 + 1) / 115]                                                                                [Stage 199:==============================>                      (67 + 49) / 116][Stage 199:===================================>                 (77 + 39) / 116][Stage 199:=========================================>           (91 + 25) / 116][Stage 199:===============================================>    (106 + 10) / 116][Stage 199:==================================================>  (110 + 6) / 116][Stage 199:===================================================> (113 + 3) / 116][Stage 199:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.866541162 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=120", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=120,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37763363 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (59 + 54) / 113][Stage 200:================================>                    (70 + 43) / 113][Stage 200:===========================================>         (92 + 21) / 113][Stage 200:=================================================>   (106 + 7) / 113][Stage 200:===================================================> (110 + 3) / 113]                                                                                [Stage 201:===========================>                         (60 + 54) / 114][Stage 201:===============================>                     (67 + 47) / 114][Stage 201:====================================>                (78 + 36) / 114][Stage 201:=============================================>       (98 + 16) / 114][Stage 201:===================================================> (110 + 4) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.871154424 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/24 18:02:52 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.39:52952) dropped. RpcEnv already stopped.
17/05/24 18:02:52 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.10:33330) dropped. RpcEnv already stopped.
17/05/24 18:02:52 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.39:52952) dropped. RpcEnv already stopped.
17/05/24 18:02:52 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.10:33330) dropped. RpcEnv already stopped.

real	11m51.564s
user	12m25.284s
sys	1m31.264s
