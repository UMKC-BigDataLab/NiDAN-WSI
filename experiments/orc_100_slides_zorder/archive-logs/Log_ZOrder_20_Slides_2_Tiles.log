Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 17:09:50 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:10:04 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:10:04 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:10:05 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 17:10:07 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:10:18 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524171007-0572).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.381708123 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:==========================>                            (55 + 60) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:=====================================>                 (78 + 37) / 115][Stage 0:=====================================>                 (79 + 36) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:=====================================================> (111 + 4) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:=========================>                             (53 + 63) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:==================================>                    (72 + 44) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:========================================>              (86 + 30) / 116][Stage 1:============================================>          (94 + 22) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.700767968 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=183", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=183,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.763250293 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===================>                                   (41 + 72) / 113][Stage 2:========================>                              (50 + 63) / 113][Stage 2:=========================>                             (53 + 60) / 113][Stage 2:=============================>                         (60 + 53) / 113][Stage 2:================================>                      (66 + 47) / 113][Stage 2:=======================================>               (81 + 32) / 113][Stage 2:============================================>          (91 + 22) / 113][Stage 2:===============================================>       (98 + 15) / 113][Stage 2:====================================================>  (108 + 5) / 113][Stage 2:=====================================================> (110 + 3) / 113][Stage 2:======================================================>(112 + 1) / 113]                                                                                [Stage 3:==========================>                            (55 + 59) / 114][Stage 3:============================>                          (59 + 55) / 114][Stage 3:===============================>                       (66 + 48) / 114][Stage 3:=================================>                     (69 + 45) / 114][Stage 3:======================================>                (80 + 34) / 114][Stage 3:=============================================>         (94 + 20) / 114][Stage 3:==================================================>    (105 + 9) / 114][Stage 3:====================================================>  (109 + 5) / 114][Stage 3:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.252834549 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=219", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=219,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.689907166 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (60 + 61) / 121][Stage 4:===========================>                           (61 + 60) / 121][Stage 4:==============================>                        (66 + 55) / 121][Stage 4:===================================>                   (78 + 43) / 121][Stage 4:==========================================>            (93 + 28) / 121][Stage 4:===================================================>   (113 + 8) / 121][Stage 4:======================================================>(120 + 1) / 121]                                                                                [Stage 5:===========================>                           (62 + 60) / 122][Stage 5:==============================>                        (68 + 54) / 122][Stage 5:==================================>                    (76 + 46) / 122][Stage 5:=======================================>               (88 + 34) / 122][Stage 5:============================================>         (100 + 22) / 122][Stage 5:====================================================>  (116 + 6) / 122]                                                                                Time elapsed: 4.384365074 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=168", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=168,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.667932164 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:===========================>                           (60 + 61) / 121][Stage 6:=============================>                         (64 + 57) / 121][Stage 6:==================================>                    (75 + 46) / 121][Stage 6:====================================>                  (81 + 40) / 121][Stage 6:============================================>         (100 + 21) / 121][Stage 6:===================================================>   (114 + 7) / 121]                                                                                [Stage 7:===========================>                           (61 + 61) / 122][Stage 7:===========================>                           (62 + 60) / 122][Stage 7:================================>                      (71 + 51) / 122][Stage 7:====================================>                  (80 + 42) / 122][Stage 7:========================================>              (89 + 33) / 122][Stage 7:================================================>     (110 + 12) / 122][Stage 7:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.114867882 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=211", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=211,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.712010523 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==========================>                            (58 + 62) / 120][Stage 8:===========================>                           (59 + 61) / 120][Stage 8:=================================>                     (73 + 47) / 120][Stage 8:=======================================>               (86 + 34) / 120][Stage 8:=============================================>        (102 + 18) / 120][Stage 8:====================================================>  (114 + 6) / 120]                                                                                [Stage 9:===========================>                           (61 + 60) / 121][Stage 9:==============================>                        (68 + 53) / 121][Stage 9:===================================>                   (79 + 42) / 121][Stage 9:============================================>         (100 + 21) / 121][Stage 9:===================================================>   (114 + 7) / 121][Stage 9:=====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.799161351 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=129", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=129,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.515089484 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=================================>                    (70 + 43) / 113][Stage 10:===================================>                  (75 + 38) / 113][Stage 10:========================================>             (84 + 29) / 113][Stage 10:============================================>         (94 + 19) / 113][Stage 10:===============================================>     (101 + 12) / 113][Stage 10:==================================================>   (106 + 7) / 113][Stage 10:====================================================> (109 + 4) / 113][Stage 10:=====================================================>(112 + 1) / 113]                                                                                [Stage 11:==================================>                   (73 + 41) / 114][Stage 11:=========================================>            (88 + 26) / 114][Stage 11:===========================================>          (92 + 22) / 114][Stage 11:===============================================>     (103 + 11) / 114][Stage 11:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.835026398 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=186", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=186,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502011013 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==================================>                   (73 + 40) / 113][Stage 12:========================================>             (85 + 28) / 113][Stage 12:===========================================>          (92 + 21) / 113][Stage 12:=============================================>        (95 + 18) / 113][Stage 12:================================================>    (103 + 10) / 113][Stage 12:==================================================>   (106 + 7) / 113][Stage 12:====================================================> (109 + 4) / 113]                                                                                [Stage 13:====================================>                 (77 + 37) / 114][Stage 13:========================================>             (86 + 28) / 114][Stage 13:==============================================>      (100 + 14) / 114][Stage 13:=================================================>    (105 + 9) / 114][Stage 13:=====================================================>(112 + 2) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.941234489 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=126", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=126,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.520657068 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:================================>                     (70 + 45) / 115][Stage 14:======================================>               (82 + 33) / 115][Stage 14:=============================================>        (97 + 18) / 115][Stage 14:================================================>    (105 + 10) / 115][Stage 14:===================================================>  (109 + 6) / 115][Stage 14:====================================================> (112 + 3) / 115]                                                                                [Stage 15:=================================>                    (71 + 45) / 116][Stage 15:=====================================>                (80 + 36) / 116][Stage 15:========================================>             (86 + 30) / 116][Stage 15:=============================================>        (97 + 19) / 116][Stage 15:===================================================>  (110 + 6) / 116][Stage 15:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.743509206 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=209", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=209,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.568594651 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (60 + 60) / 120][Stage 16:=============================>                        (66 + 54) / 120][Stage 16:====================================>                 (80 + 40) / 120][Stage 16:=============================================>       (103 + 17) / 120][Stage 16:=====================================================>(118 + 2) / 120]                                                                                [Stage 17:============================>                         (63 + 58) / 121][Stage 17:=================================>                    (75 + 46) / 121][Stage 17:======================================>               (86 + 35) / 121][Stage 17:=========================================>            (93 + 28) / 121][Stage 17:=============================================>       (104 + 17) / 121][Stage 17:==================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.800398072 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=13", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=13,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447153122 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:======================================>               (83 + 32) / 115][Stage 18:==========================================>           (90 + 25) / 115][Stage 18:===============================================>     (102 + 13) / 115][Stage 18:====================================================> (111 + 4) / 115][Stage 18:=====================================================>(113 + 2) / 115]                                                                                [Stage 19:======================================>               (82 + 34) / 116][Stage 19:=======================================>              (84 + 32) / 116][Stage 19:==============================================>      (101 + 15) / 116][Stage 19:================================================>    (106 + 10) / 116][Stage 19:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.534454989 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=208", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=208,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.527222452 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:================================>                     (69 + 46) / 115][Stage 20:====================================>                 (77 + 38) / 115][Stage 20:============================================>         (94 + 21) / 115][Stage 20:===============================================>     (104 + 11) / 115][Stage 20:==================================================>   (107 + 8) / 115][Stage 20:===================================================>  (110 + 5) / 115][Stage 20:=====================================================>(113 + 2) / 115][Stage 20:=====================================================>(114 + 1) / 115]                                                                                [Stage 21:===============================>                      (67 + 49) / 116][Stage 21:=====================================>                (81 + 35) / 116][Stage 21:============================================>         (96 + 20) / 116][Stage 21:===============================================>     (103 + 13) / 116][Stage 21:==================================================>   (108 + 8) / 116][Stage 21:====================================================> (113 + 3) / 116][Stage 21:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.193583754 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=122", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=122,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476982347 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:================================>                     (72 + 46) / 118][Stage 22:=================================>                    (73 + 45) / 118][Stage 22:=====================================>                (81 + 37) / 118][Stage 22:============================================>        (100 + 18) / 118][Stage 22:==================================================>   (111 + 7) / 118][Stage 22:=====================================================>(117 + 1) / 118]                                                                                [Stage 23:=================================>                    (73 + 46) / 119][Stage 23:=====================================>                (82 + 37) / 119][Stage 23:============================================>         (98 + 21) / 119][Stage 23:==============================================>      (105 + 14) / 119][Stage 23:=================================================>    (110 + 9) / 119][Stage 23:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.846250658 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=235", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=235,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.51522076 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (59 + 62) / 121][Stage 24:============================>                         (64 + 57) / 121][Stage 24:=================================>                    (76 + 45) / 121][Stage 24:=============================================>       (104 + 17) / 121][Stage 24:=================================================>    (112 + 9) / 121][Stage 24:====================================================> (118 + 3) / 121]                                                                                [Stage 25:===========================>                          (63 + 59) / 122][Stage 25:===================================>                  (80 + 42) / 122][Stage 25:===========================================>         (100 + 22) / 122][Stage 25:==================================================>   (113 + 9) / 122]                                                                                Time elapsed: 3.430696363 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=55", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=55,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.572963751 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:============================>                         (59 + 54) / 113][Stage 26:============================>                         (60 + 53) / 113][Stage 26:================================>                     (69 + 44) / 113][Stage 26:==========================================>           (88 + 25) / 113][Stage 26:===============================================>      (99 + 14) / 113][Stage 26:===================================================>  (107 + 6) / 113][Stage 26:====================================================> (110 + 3) / 113]                                                                                [Stage 27:============================>                         (60 + 54) / 114][Stage 27:===================================>                  (75 + 39) / 114][Stage 27:===========================================>          (92 + 22) / 114][Stage 27:=================================================>    (105 + 9) / 114][Stage 27:==================================================>   (107 + 7) / 114][Stage 27:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.030206033 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=213", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=213,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434106047 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===================================>                  (75 + 38) / 113][Stage 28:==========================================>           (88 + 25) / 113][Stage 28:==============================================>      (100 + 13) / 113][Stage 28:===================================================>  (108 + 5) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:======================================>               (81 + 33) / 114][Stage 29:=========================================>            (87 + 27) / 114][Stage 29:=============================================>        (97 + 17) / 114][Stage 29:==================================================>   (106 + 8) / 114][Stage 29:====================================================> (111 + 3) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.396589863 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=134", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=134,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.489020735 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (58 + 55) / 113][Stage 30:==============================>                       (64 + 49) / 113][Stage 30:======================================>               (80 + 33) / 113][Stage 30:============================================>         (94 + 19) / 113][Stage 30:==================================================>   (105 + 8) / 113][Stage 30:=====================================================>(111 + 2) / 113]                                                                                [Stage 31:===========================>                          (59 + 55) / 114][Stage 31:============================>                         (61 + 53) / 114][Stage 31:======================================>               (82 + 32) / 114][Stage 31:=============================================>        (97 + 17) / 114][Stage 31:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.460943737 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=135", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=135,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.477845444 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (58 + 55) / 113][Stage 32:================================>                     (68 + 45) / 113][Stage 32:==========================================>           (89 + 24) / 113][Stage 32:=================================================>    (104 + 9) / 113][Stage 32:===================================================>  (108 + 5) / 113][Stage 32:=====================================================>(112 + 1) / 113]                                                                                [Stage 33:===========================>                          (59 + 55) / 114][Stage 33:================================>                     (68 + 46) / 114][Stage 33:========================================>             (86 + 28) / 114][Stage 33:=================================================>    (105 + 9) / 114][Stage 33:===================================================>  (109 + 5) / 114][Stage 33:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.733334334 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=124", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=124,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431173022 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:====================================>                 (77 + 36) / 113][Stage 34:========================================>             (85 + 28) / 113][Stage 34:==============================================>       (97 + 16) / 113][Stage 34:==================================================>   (105 + 8) / 113][Stage 34:=====================================================>(111 + 2) / 113]                                                                                [Stage 35:======================================>               (82 + 32) / 114][Stage 35:===========================================>          (91 + 23) / 114][Stage 35:==============================================>      (100 + 14) / 114][Stage 35:===================================================>  (108 + 6) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.468351976 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=74", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=74,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.537881817 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (62 + 59) / 121][Stage 36:=================================>                    (74 + 47) / 121][Stage 36:========================================>             (90 + 31) / 121][Stage 36:================================================>    (111 + 10) / 121][Stage 36:==================================================>   (114 + 7) / 121][Stage 36:====================================================> (118 + 3) / 121]                                                                                [Stage 37:===========================>                          (62 + 60) / 122][Stage 37:================================>                     (74 + 48) / 122][Stage 37:==========================================>           (95 + 27) / 122][Stage 37:===============================================>     (109 + 13) / 122][Stage 37:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.729832242 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=11", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=11,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459135706 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===============================>                      (68 + 47) / 115][Stage 38:======================================>               (83 + 32) / 115][Stage 38:==============================================>      (100 + 15) / 115][Stage 38:==================================================>   (108 + 7) / 115][Stage 38:====================================================> (111 + 4) / 115]                                                                                [Stage 39:=====================================>                (80 + 36) / 116][Stage 39:========================================>             (86 + 30) / 116][Stage 39:===============================================>     (103 + 13) / 116][Stage 39:===================================================>  (111 + 5) / 116][Stage 39:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.647152985 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=116", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=116,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456868864 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===========================>                          (58 + 55) / 113][Stage 40:===============================>                      (65 + 48) / 113][Stage 40:=========================================>            (86 + 27) / 113][Stage 40:==============================================>      (100 + 13) / 113]                                                                                [Stage 41:============================>                         (60 + 54) / 114][Stage 41:================================>                     (68 + 46) / 114][Stage 41:=========================================>            (88 + 26) / 114][Stage 41:==================================================>   (106 + 8) / 114][Stage 41:====================================================> (110 + 4) / 114][Stage 41:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.377606663 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=28", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=28,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468554133 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==================================>                   (72 + 41) / 113][Stage 42:========================================>             (85 + 28) / 113][Stage 42:=============================================>        (95 + 18) / 113][Stage 42:==================================================>   (105 + 8) / 113][Stage 42:=====================================================>(111 + 2) / 113]                                                                                [Stage 43:=======================================>              (83 + 31) / 114][Stage 43:=============================================>        (96 + 18) / 114][Stage 43:==============================================>      (101 + 13) / 114][Stage 43:====================================================> (111 + 3) / 114][Stage 43:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.696815961 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=88", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=88,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404329077 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:======================================>               (82 + 33) / 115][Stage 44:========================================>             (86 + 29) / 115][Stage 44:==============================================>      (100 + 15) / 115]                                                                                [Stage 45:=======================================>              (84 + 32) / 116][Stage 45:=========================================>            (90 + 26) / 116][Stage 45:==============================================>      (101 + 15) / 116][Stage 45:====================================================> (112 + 4) / 116][Stage 45:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.905203858 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=20", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=20,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404579636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==================================>                   (73 + 40) / 113][Stage 46:=========================================>            (86 + 27) / 113][Stage 46:===============================================>      (99 + 14) / 113][Stage 46:===================================================>  (108 + 5) / 113][Stage 46:====================================================> (110 + 3) / 113]                                                                                [Stage 47:===================================>                  (75 + 39) / 114][Stage 47:=========================================>            (87 + 27) / 114][Stage 47:=============================================>        (95 + 19) / 114][Stage 47:================================================>    (104 + 10) / 114][Stage 47:====================================================> (111 + 3) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.949016372 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=195", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=195,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.576453607 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==========================>                           (60 + 61) / 121][Stage 48:=============================>                        (67 + 54) / 121][Stage 48:===================================>                  (79 + 42) / 121][Stage 48:===========================================>         (100 + 21) / 121][Stage 48:====================================================> (118 + 3) / 121]                                                                                [Stage 49:===========================>                          (61 + 61) / 122][Stage 49:============================>                         (65 + 57) / 122][Stage 49:==================================>                   (78 + 44) / 122][Stage 49:============================================>        (103 + 19) / 122][Stage 49:====================================================> (118 + 4) / 122][Stage 49:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.403359589 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=203", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=203,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41033566 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:======================================>               (82 + 33) / 115][Stage 50:=========================================>            (88 + 27) / 115][Stage 50:==============================================>      (101 + 14) / 115][Stage 50:===================================================>  (110 + 5) / 115]                                                                                [Stage 51:========================================>             (88 + 28) / 116][Stage 51:=============================================>        (97 + 19) / 116][Stage 51:==================================================>   (109 + 7) / 116][Stage 51:=====================================================>(114 + 2) / 116][Stage 51:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.961531358 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=223", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=223,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449171614 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:=========================>                            (56 + 64) / 120][Stage 52:============================>                         (63 + 57) / 120][Stage 52:=====================================>                (84 + 36) / 120][Stage 52:==============================================>      (106 + 14) / 120][Stage 52:====================================================> (116 + 4) / 120][Stage 52:=====================================================>(119 + 1) / 120]                                                                                [Stage 53:===========================>                          (62 + 59) / 121][Stage 53:================================>                     (72 + 49) / 121][Stage 53:=====================================>                (84 + 37) / 121][Stage 53:================================================>    (111 + 10) / 121][Stage 53:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.541442983 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=192", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=192,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385399857 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=====================================>                (80 + 35) / 115][Stage 54:=======================================>              (84 + 31) / 115][Stage 54:============================================>         (94 + 21) / 115][Stage 54:====================================================> (111 + 4) / 115][Stage 54:=====================================================>(113 + 2) / 115]                                                                                [Stage 55:======================================>               (82 + 34) / 116][Stage 55:=========================================>            (89 + 27) / 116][Stage 55:===============================================>     (104 + 12) / 116][Stage 55:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.845117849 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=187", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=187,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374419407 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:======================================>               (82 + 33) / 115][Stage 56:===========================================>          (93 + 22) / 115][Stage 56:==============================================>      (100 + 15) / 115][Stage 56:===================================================>  (109 + 6) / 115]                                                                                [Stage 57:=======================================>              (84 + 32) / 116][Stage 57:============================================>         (95 + 21) / 116][Stage 57:=================================================>    (107 + 9) / 116][Stage 57:====================================================> (113 + 3) / 116][Stage 57:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.047359964 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=98", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=98,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395353845 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:====================================>                 (76 + 37) / 113][Stage 58:=======================================>              (82 + 31) / 113][Stage 58:==============================================>       (97 + 16) / 113][Stage 58:====================================================> (110 + 3) / 113][Stage 58:=====================================================>(111 + 2) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:====================================>                 (76 + 38) / 114][Stage 59:========================================>             (85 + 29) / 114][Stage 59:=============================================>        (96 + 18) / 114][Stage 59:=================================================>    (105 + 9) / 114][Stage 59:=====================================================>(112 + 2) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.467446507 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=12", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=12,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407233236 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:================================>                     (72 + 46) / 118][Stage 60:=======================================>              (86 + 32) / 118][Stage 60:============================================>         (98 + 20) / 118][Stage 60:===================================================>  (112 + 6) / 118]                                                                                [Stage 61:==================================>                   (76 + 43) / 119][Stage 61:=======================================>              (87 + 32) / 119][Stage 61:============================================>         (97 + 22) / 119][Stage 61:===============================================>     (107 + 12) / 119][Stage 61:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.353651184 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=125", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=125,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428754394 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:============================>                         (59 + 54) / 113][Stage 62:================================>                     (69 + 44) / 113][Stage 62:==============================================>       (97 + 16) / 113][Stage 62:====================================================> (110 + 3) / 113][Stage 62:=====================================================>(112 + 1) / 113]                                                                                [Stage 63:===========================>                          (59 + 55) / 114][Stage 63:================================>                     (69 + 45) / 114][Stage 63:=======================================>              (83 + 31) / 114][Stage 63:==============================================>      (101 + 13) / 114]                                                                                Time elapsed: 3.108049987 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=67", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=67,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403755612 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==================================>                   (73 + 40) / 113][Stage 64:==========================================>           (88 + 25) / 113][Stage 64:============================================>         (94 + 19) / 113][Stage 64:=================================================>    (104 + 9) / 113][Stage 64:====================================================> (109 + 4) / 113]                                                                                [Stage 65:========================================>             (85 + 29) / 114][Stage 65:=============================================>        (96 + 18) / 114][Stage 65:==================================================>   (106 + 8) / 114][Stage 65:=====================================================>(112 + 2) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.229109229 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=100", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=100,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409174955 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:================================>                     (72 + 46) / 118][Stage 66:=================================>                    (74 + 44) / 118][Stage 66:=======================================>              (86 + 32) / 118][Stage 66:=============================================>       (102 + 16) / 118][Stage 66:====================================================> (115 + 3) / 118]                                                                                [Stage 67:=================================>                    (73 + 46) / 119][Stage 67:==================================>                   (75 + 44) / 119][Stage 67:=======================================>              (87 + 32) / 119][Stage 67:============================================>         (99 + 20) / 119][Stage 67:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.240552755 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=188", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=188,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386390575 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==================================>                   (72 + 41) / 113][Stage 68:========================================>             (84 + 29) / 113][Stage 68:=============================================>        (95 + 18) / 113][Stage 68:===============================================>     (102 + 11) / 113][Stage 68:====================================================> (109 + 4) / 113]                                                                                [Stage 69:======================================>               (82 + 32) / 114][Stage 69:=========================================>            (88 + 26) / 114][Stage 69:==============================================>       (99 + 15) / 114][Stage 69:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.016453237 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=76", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=76,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397280965 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:=====================================>                (80 + 35) / 115][Stage 70:======================================>               (81 + 34) / 115][Stage 70:=============================================>        (96 + 19) / 115][Stage 70:=================================================>    (106 + 9) / 115][Stage 70:=====================================================>(113 + 2) / 115]                                                                                [Stage 71:=========================================>            (89 + 27) / 116][Stage 71:==============================================>      (102 + 14) / 116][Stage 71:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.836353318 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=132", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=132,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480139636 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==========================>                           (60 + 61) / 121][Stage 72:============================>                         (64 + 57) / 121][Stage 72:======================================>               (86 + 35) / 121][Stage 72:==============================================>      (106 + 15) / 121][Stage 72:====================================================> (118 + 3) / 121]                                                                                [Stage 73:===========================>                          (62 + 60) / 122][Stage 73:=================================>                    (75 + 47) / 122][Stage 73:==========================================>           (96 + 26) / 122][Stage 73:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.243295828 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=94", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=94,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391789659 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:====================================>                 (76 + 37) / 113][Stage 74:=========================================>            (87 + 26) / 113][Stage 74:=============================================>        (95 + 18) / 113][Stage 74:=================================================>    (104 + 9) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:====================================>                 (76 + 38) / 114][Stage 75:=========================================>            (88 + 26) / 114][Stage 75:=============================================>        (97 + 17) / 114][Stage 75:====================================================> (110 + 4) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.996735431 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=41", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=41,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434370375 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:============================>                         (60 + 53) / 113][Stage 76:=================================>                    (70 + 43) / 113][Stage 76:==========================================>           (89 + 24) / 113][Stage 76:=================================================>    (104 + 9) / 113][Stage 76:=====================================================>(112 + 1) / 113]                                                                                [Stage 77:============================>                         (60 + 54) / 114][Stage 77:================================>                     (69 + 45) / 114][Stage 77:========================================>             (85 + 29) / 114][Stage 77:==============================================>      (100 + 14) / 114][Stage 77:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.326435953 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=214", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=214,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412088615 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:================================>                     (69 + 46) / 115][Stage 78:====================================>                 (77 + 38) / 115][Stage 78:=============================================>        (97 + 18) / 115][Stage 78:==================================================>   (107 + 8) / 115][Stage 78:====================================================> (111 + 4) / 115][Stage 78:=====================================================>(114 + 1) / 115]                                                                                [Stage 79:================================>                     (70 + 46) / 116][Stage 79:=========================================>            (89 + 27) / 116][Stage 79:==============================================>      (102 + 14) / 116][Stage 79:================================================>    (106 + 10) / 116][Stage 79:=====================================================>(114 + 2) / 116][Stage 79:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.520723197 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=75", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=75,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35924519 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:======================================>               (82 + 33) / 115][Stage 80:===========================================>          (92 + 23) / 115][Stage 80:===============================================>     (102 + 13) / 115][Stage 80:=====================================================>(114 + 1) / 115]                                                                                [Stage 81:======================================>               (83 + 33) / 116][Stage 81:=========================================>            (89 + 27) / 116][Stage 81:==============================================>      (102 + 14) / 116][Stage 81:===================================================>  (111 + 5) / 116][Stage 81:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.801742574 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=184", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=184,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358956069 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:======================================>               (81 + 34) / 115][Stage 82:=======================================>              (85 + 30) / 115][Stage 82:============================================>         (95 + 20) / 115][Stage 82:===================================================>  (109 + 6) / 115][Stage 82:=====================================================>(114 + 1) / 115]                                                                                [Stage 83:========================================>             (87 + 29) / 116][Stage 83:==============================================>      (101 + 15) / 116][Stage 83:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.733524893 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=138", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=138,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375024123 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:====================================>                 (77 + 36) / 113][Stage 84:===========================================>          (90 + 23) / 113][Stage 84:==============================================>      (100 + 13) / 113][Stage 84:==================================================>   (105 + 8) / 113][Stage 84:====================================================> (110 + 3) / 113]                                                                                [Stage 85:======================================>               (82 + 32) / 114][Stage 85:==========================================>           (90 + 24) / 114][Stage 85:==============================================>      (100 + 14) / 114][Stage 85:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.195982428 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=59", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=59,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41871634 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==========================>                           (60 + 61) / 121][Stage 86:============================>                         (63 + 58) / 121][Stage 86:=================================>                    (74 + 47) / 121][Stage 86:============================================>        (101 + 20) / 121][Stage 86:====================================================> (117 + 4) / 121][Stage 86:=====================================================>(120 + 1) / 121]                                                                                [Stage 87:===========================>                          (61 + 61) / 122][Stage 87:=============================>                        (66 + 56) / 122][Stage 87:===================================>                  (81 + 41) / 122][Stage 87:============================================>        (103 + 19) / 122][Stage 87:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.287898503 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=236", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=236,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385465231 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:================================>                     (72 + 46) / 118][Stage 88:===================================>                  (78 + 40) / 118][Stage 88:==========================================>           (92 + 26) / 118][Stage 88:==================================================>   (111 + 7) / 118]                                                                                [Stage 89:=================================>                    (74 + 45) / 119][Stage 89:=======================================>              (87 + 32) / 119][Stage 89:=============================================>       (102 + 17) / 119][Stage 89:==================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.010495982 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=185", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=185,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413473554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (58 + 55) / 113][Stage 90:=============================>                        (62 + 51) / 113][Stage 90:====================================>                 (77 + 36) / 113][Stage 90:=================================================>    (104 + 9) / 113]                                                                                [Stage 91:===========================>                          (59 + 55) / 114][Stage 91:================================>                     (68 + 46) / 114][Stage 91:==========================================>           (90 + 24) / 114][Stage 91:===================================================>  (108 + 6) / 114][Stage 91:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.063436665 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=115", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=115,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35040386 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:======================================>               (82 + 33) / 115][Stage 92:==========================================>           (91 + 24) / 115][Stage 92:===================================================>  (109 + 6) / 115]                                                                                [Stage 93:========================================>             (87 + 29) / 116][Stage 93:==============================================>       (99 + 17) / 116][Stage 93:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.468232492 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=114", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=113 AND partitionZIndex<=114,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356242004 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:=======================================>              (84 + 31) / 115][Stage 94:==========================================>           (90 + 25) / 115][Stage 94:==================================================>   (107 + 8) / 115][Stage 94:=====================================================>(114 + 1) / 115]                                                                                [Stage 95:=======================================>              (85 + 31) / 116][Stage 95:============================================>         (95 + 21) / 116][Stage 95:==================================================>   (109 + 7) / 116][Stage 95:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.83170466 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=220", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=220,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365402813 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=====================================>                (80 + 35) / 115][Stage 96:========================================>             (87 + 28) / 115][Stage 96:==============================================>       (98 + 17) / 115][Stage 96:===================================================>  (109 + 6) / 115]                                                                                [Stage 97:=======================================>              (84 + 32) / 116][Stage 97:============================================>         (95 + 21) / 116][Stage 97:==================================================>   (109 + 7) / 116][Stage 97:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.844452488 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=87", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=87,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357359305 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=======================================>              (84 + 31) / 115][Stage 98:============================================>         (94 + 21) / 115][Stage 98:===============================================>     (104 + 11) / 115]                                                                                [Stage 99:=======================================>              (85 + 31) / 116][Stage 99:=============================================>        (98 + 18) / 116][Stage 99:===============================================>     (105 + 11) / 116][Stage 99:===================================================>  (110 + 6) / 116][Stage 99:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.793080523 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=227", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=227,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416888795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (60 + 60) / 120][Stage 100:===========================>                         (63 + 57) / 120][Stage 100:==============================>                      (70 + 50) / 120][Stage 100:==========================================>          (96 + 24) / 120][Stage 100:==================================================>  (114 + 6) / 120]                                                                                [Stage 101:===========================>                         (63 + 58) / 121][Stage 101:===============================>                     (72 + 49) / 121][Stage 101:===================================>                 (81 + 40) / 121][Stage 101:==============================================>     (109 + 12) / 121][Stage 101:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.259287277 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=47", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=46 AND partitionZIndex<=47,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371901477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:================================>                    (72 + 46) / 118][Stage 102:================================>                    (73 + 45) / 118][Stage 102:=====================================>               (84 + 34) / 118][Stage 102:===========================================>         (96 + 22) / 118][Stage 102:================================================>    (109 + 9) / 118][Stage 102:====================================================>(117 + 1) / 118]                                                                                [Stage 103:================================>                    (73 + 46) / 119][Stage 103:====================================>                (81 + 38) / 119][Stage 103:=========================================>           (94 + 25) / 119][Stage 103:=================================================>   (112 + 7) / 119][Stage 103:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.319305765 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=172", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=172,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38812515 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==============================>                      (66 + 49) / 115][Stage 104:=====================================>               (81 + 34) / 115][Stage 104:=============================================>       (98 + 17) / 115][Stage 104:==================================================>  (110 + 5) / 115][Stage 104:====================================================>(113 + 2) / 115]                                                                                [Stage 105:===============================>                     (68 + 48) / 116][Stage 105:====================================>                (80 + 36) / 116][Stage 105:==============================================>     (103 + 13) / 116][Stage 105:=================================================>   (108 + 8) / 116][Stage 105:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.18823675 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=108", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=108,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447078459 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 60) / 120][Stage 106:==========================>                          (61 + 59) / 120][Stage 106:=================================>                   (75 + 45) / 120][Stage 106:=========================================>           (94 + 26) / 120][Stage 106:====================================================>(119 + 1) / 120]                                                                                [Stage 107:==========================>                          (61 + 60) / 121][Stage 107:==============================>                      (70 + 51) / 121][Stage 107:=======================================>             (91 + 30) / 121][Stage 107:==============================================>     (109 + 12) / 121][Stage 107:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.157760841 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=77", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=77,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400073899 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (58 + 55) / 113][Stage 108:===============================>                     (68 + 45) / 113][Stage 108:==========================================>          (91 + 22) / 113][Stage 108:===============================================>    (103 + 10) / 113][Stage 108:====================================================>(111 + 2) / 113]                                                                                [Stage 109:=============================>                       (64 + 50) / 114][Stage 109:====================================>                (79 + 35) / 114][Stage 109:=============================================>      (100 + 14) / 114][Stage 109:==================================================>  (109 + 5) / 114][Stage 109:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.349949041 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=91", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=91,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404451103 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===============================>                     (68 + 47) / 115][Stage 110:===================================>                 (78 + 37) / 115][Stage 110:=============================================>       (98 + 17) / 115][Stage 110:==================================================>  (109 + 6) / 115][Stage 110:====================================================>(114 + 1) / 115]                                                                                [Stage 111:===============================>                     (70 + 46) / 116][Stage 111:=====================================>               (82 + 34) / 116][Stage 111:============================================>        (98 + 18) / 116][Stage 111:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.851407676 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=207", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=207,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398813437 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (59 + 54) / 113][Stage 112:===============================>                     (67 + 46) / 113][Stage 112:=======================================>             (84 + 29) / 113][Stage 112:==================================================>  (108 + 5) / 113]                                                                                [Stage 113:===========================>                         (60 + 54) / 114][Stage 113:===============================>                     (67 + 47) / 114][Stage 113:=======================================>             (84 + 30) / 114][Stage 113:==============================================>     (102 + 12) / 114][Stage 113:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.048468059 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=81", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=81,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396494675 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:============================>                        (60 + 53) / 113][Stage 114:==================================>                  (73 + 40) / 113][Stage 114:==========================================>          (90 + 23) / 113][Stage 114:=================================================>   (105 + 8) / 113]                                                                                [Stage 115:===========================>                         (60 + 54) / 114][Stage 115:=================================>                   (73 + 41) / 114][Stage 115:=========================================>           (89 + 25) / 114][Stage 115:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 2.940165664 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=43", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=43,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431696764 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===================================>                 (75 + 38) / 113][Stage 116:=======================================>             (85 + 28) / 113][Stage 116:==========================================>          (91 + 22) / 113][Stage 116:==============================================>     (102 + 11) / 113][Stage 116:===================================================> (110 + 3) / 113][Stage 116:====================================================>(112 + 1) / 113]                                                                                [Stage 117:=====================================>               (81 + 33) / 114][Stage 117:===========================================>         (93 + 21) / 114][Stage 117:=============================================>      (100 + 14) / 114][Stage 117:==================================================>  (108 + 6) / 114][Stage 117:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.676281623 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=175", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=175,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394861793 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 60) / 120][Stage 118:==============================>                      (70 + 50) / 120][Stage 118:=====================================>               (85 + 35) / 120][Stage 118:=============================================>      (105 + 15) / 120]                                                                                [Stage 119:===========================>                         (62 + 59) / 121][Stage 119:================================>                    (75 + 46) / 121][Stage 119:========================================>            (93 + 28) / 121][Stage 119:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 2.936388896 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=177", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=177,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397092394 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 60) / 120][Stage 120:============================>                        (65 + 55) / 120][Stage 120:================================>                    (74 + 46) / 120][Stage 120:=========================================>           (93 + 27) / 120][Stage 120:==================================================>  (114 + 6) / 120]                                                                                [Stage 121:===========================>                         (62 + 59) / 121][Stage 121:================================>                    (74 + 47) / 121][Stage 121:=====================================>               (86 + 35) / 121][Stage 121:=============================================>      (107 + 14) / 121][Stage 121:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.397881541 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=169", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=169,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460037307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (58 + 55) / 113][Stage 122:=============================>                       (62 + 51) / 113][Stage 122:=================================>                   (72 + 41) / 113][Stage 122:==============================================>     (102 + 11) / 113][Stage 122:====================================================>(111 + 2) / 113]                                                                                [Stage 123:============================>                        (62 + 52) / 114][Stage 123:=====================================>               (81 + 33) / 114][Stage 123:=============================================>       (97 + 17) / 114][Stage 123:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.191282684 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=86", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=86,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383471963 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (58 + 55) / 113][Stage 124:===================================>                 (76 + 37) / 113][Stage 124:============================================>        (94 + 19) / 113][Stage 124:==================================================>  (108 + 5) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:===========================>                         (60 + 54) / 114][Stage 125:===============================>                     (68 + 46) / 114][Stage 125:=======================================>             (85 + 29) / 114][Stage 125:===============================================>    (104 + 10) / 114][Stage 125:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.091595997 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=46", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=46,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359150461 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:====================================>                (78 + 35) / 113][Stage 126:===========================================>         (93 + 20) / 113][Stage 126:==============================================>     (102 + 11) / 113][Stage 126:==================================================>  (107 + 6) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:==================================>                  (74 + 40) / 114][Stage 127:=======================================>             (86 + 28) / 114][Stage 127:============================================>        (96 + 18) / 114][Stage 127:==============================================>     (102 + 12) / 114][Stage 127:==================================================>  (108 + 6) / 114][Stage 127:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.442274088 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=164", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=164,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468337552 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:================================>                    (71 + 44) / 115][Stage 128:=======================================>             (86 + 29) / 115][Stage 128:================================================>    (106 + 9) / 115][Stage 128:====================================================>(113 + 2) / 115]                                                                                [Stage 129:==================================>                  (76 + 40) / 116][Stage 129:========================================>            (88 + 28) / 116][Stage 129:==============================================>     (104 + 12) / 116][Stage 129:===================================================> (113 + 3) / 116][Stage 129:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.980389837 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=7", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=7,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344525309 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:>                                                      (0 + 0) / 115][Stage 130:=====================================>               (81 + 34) / 115][Stage 130:=========================================>           (91 + 24) / 115][Stage 130:==============================================>     (102 + 13) / 115][Stage 130:====================================================>(114 + 1) / 115]                                                                                [Stage 131:=====================================>               (83 + 33) / 116][Stage 131:==========================================>          (94 + 22) / 116][Stage 131:==============================================>     (103 + 13) / 116][Stage 131:==================================================>  (111 + 5) / 116][Stage 131:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.229550383 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=153", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=153,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35805006 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:=================================>                   (72 + 41) / 113][Stage 132:======================================>              (83 + 30) / 113][Stage 132:==========================================>          (90 + 23) / 113][Stage 132:==============================================>      (99 + 14) / 113][Stage 132:================================================>    (104 + 9) / 113]                                                                                [Stage 133:=====================================>               (81 + 33) / 114][Stage 133:=========================================>           (89 + 25) / 114][Stage 133:==============================================>     (101 + 13) / 114][Stage 133:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.01429196 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=136", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=136,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369679249 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:================================>                    (72 + 46) / 118][Stage 134:===================================>                 (78 + 40) / 118][Stage 134:========================================>            (90 + 28) / 118][Stage 134:=============================================>      (104 + 14) / 118][Stage 134:====================================================>(117 + 1) / 118]                                                                                [Stage 135:================================>                    (73 + 46) / 119][Stage 135:=================================>                   (75 + 44) / 119][Stage 135:========================================>            (90 + 29) / 119][Stage 135:==============================================>     (107 + 12) / 119][Stage 135:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.143791065 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=210", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=210,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368808547 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:================================>                    (72 + 46) / 118][Stage 136:==================================>                  (77 + 41) / 118][Stage 136:==========================================>          (95 + 23) / 118][Stage 136:==============================================>     (105 + 13) / 118][Stage 136:===================================================> (115 + 3) / 118]                                                                                [Stage 137:================================>                    (73 + 46) / 119][Stage 137:==================================>                  (78 + 41) / 119][Stage 137:=======================================>             (89 + 30) / 119][Stage 137:=============================================>      (105 + 14) / 119][Stage 137:==================================================>  (114 + 5) / 119][Stage 137:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.406539042 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=8", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=8,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378512376 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:==============================>                      (66 + 49) / 115][Stage 138:===================================>                 (77 + 38) / 115][Stage 138:==========================================>          (92 + 23) / 115][Stage 138:=============================================>      (101 + 14) / 115][Stage 138:==================================================>  (110 + 5) / 115][Stage 138:====================================================>(113 + 2) / 115]                                                                                [Stage 139:==============================>                      (66 + 50) / 116][Stage 139:===================================>                 (78 + 38) / 116][Stage 139:=========================================>           (91 + 25) / 116][Stage 139:===============================================>    (105 + 11) / 116][Stage 139:==================================================>  (111 + 5) / 116][Stage 139:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.509433064 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=90", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=90,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.339179942 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=====================================>               (82 + 33) / 115][Stage 140:=========================================>           (89 + 26) / 115][Stage 140:==============================================>     (102 + 13) / 115][Stage 140:==================================================>  (110 + 5) / 115][Stage 140:====================================================>(114 + 1) / 115]                                                                                [Stage 141:======================================>              (84 + 32) / 116][Stage 141:========================================>            (88 + 28) / 116][Stage 141:===========================================>         (95 + 21) / 116][Stage 141:=================================================>   (109 + 7) / 116][Stage 141:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.045911235 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=233", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=233,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382472138 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (59 + 54) / 113][Stage 142:==============================>                      (66 + 47) / 113][Stage 142:========================================>            (87 + 26) / 113][Stage 142:==============================================>     (102 + 11) / 113][Stage 142:====================================================>(112 + 1) / 113]                                                                                [Stage 143:===========================>                         (59 + 55) / 114][Stage 143:================================>                    (69 + 45) / 114][Stage 143:========================================>            (88 + 26) / 114][Stage 143:================================================>    (105 + 9) / 114][Stage 143:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.205017084 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=193", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=193,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373407651 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==============================>                      (67 + 48) / 115][Stage 144:====================================>                (79 + 36) / 115][Stage 144:===========================================>         (95 + 20) / 115][Stage 144:===============================================>    (105 + 10) / 115][Stage 144:====================================================>(114 + 1) / 115]                                                                                [Stage 145:=================================>                   (74 + 42) / 116][Stage 145:=========================================>           (91 + 25) / 116][Stage 145:=============================================>       (99 + 17) / 116][Stage 145:==================================================>  (111 + 5) / 116][Stage 145:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.259662406 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357268096 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:================================>                    (72 + 46) / 118][Stage 146:===================================>                 (79 + 39) / 118][Stage 146:=======================================>             (89 + 29) / 118][Stage 146:==============================================>     (105 + 13) / 118][Stage 146:====================================================>(117 + 1) / 118]                                                                                [Stage 147:================================>                    (73 + 46) / 119][Stage 147:===================================>                 (79 + 40) / 119][Stage 147:======================================>              (86 + 33) / 119][Stage 147:============================================>       (102 + 17) / 119][Stage 147:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.24443853 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=31", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=31,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351648052 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:================================>                    (70 + 43) / 113][Stage 148:===================================>                 (75 + 38) / 113][Stage 148:========================================>            (86 + 27) / 113][Stage 148:=============================================>       (98 + 15) / 113][Stage 148:==================================================>  (108 + 5) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:=================================>                   (71 + 43) / 114][Stage 149:=========================================>           (89 + 25) / 114][Stage 149:===========================================>         (93 + 21) / 114][Stage 149:===================================================> (110 + 4) / 114][Stage 149:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.393145171 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=199", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=199,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371503768 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==================================>                  (75 + 40) / 115][Stage 150:=========================================>           (90 + 25) / 115][Stage 150:=================================================>   (107 + 8) / 115][Stage 150:====================================================>(114 + 1) / 115]                                                                                [Stage 151:==================================>                  (76 + 40) / 116][Stage 151:===========================================>         (96 + 20) / 116][Stage 151:=================================================>   (108 + 8) / 116][Stage 151:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.889662971 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=51", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=51,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340751542 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:====================================>                (80 + 35) / 115][Stage 152:======================================>              (83 + 32) / 115][Stage 152:============================================>        (96 + 19) / 115][Stage 152:===================================================> (111 + 4) / 115]                                                                                [Stage 153:======================================>              (84 + 32) / 116][Stage 153:==========================================>          (92 + 24) / 116][Stage 153:================================================>    (107 + 9) / 116][Stage 153:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.991907113 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=42", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=42,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36237962 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (73 + 45) / 118][Stage 154:===================================>                 (78 + 40) / 118][Stage 154:============================================>        (98 + 20) / 118][Stage 154:===================================================> (115 + 3) / 118]                                                                                [Stage 155:===================================>                 (79 + 40) / 119][Stage 155:========================================>            (92 + 27) / 119][Stage 155:=============================================>      (105 + 14) / 119][Stage 155:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 2.985894305 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=6", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=6,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338368959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:=====================================>               (82 + 33) / 115][Stage 156:==========================================>          (92 + 23) / 115][Stage 156:================================================>    (106 + 9) / 115][Stage 156:===================================================> (112 + 3) / 115][Stage 156:====================================================>(114 + 1) / 115]                                                                                [Stage 157:======================================>              (84 + 32) / 116][Stage 157:==========================================>          (94 + 22) / 116][Stage 157:=============================================>      (102 + 14) / 116][Stage 157:===================================================> (113 + 3) / 116][Stage 157:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.171720416 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=222", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=222,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373324068 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:================================>                    (72 + 46) / 118][Stage 158:=================================>                   (75 + 43) / 118][Stage 158:==========================================>          (94 + 24) / 118][Stage 158:===============================================>    (108 + 10) / 118]                                                                                [Stage 159:================================>                    (73 + 46) / 119][Stage 159:=====================================>               (84 + 35) / 119][Stage 159:===========================================>         (98 + 21) / 119][Stage 159:=================================================>   (111 + 8) / 119][Stage 159:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.099005593 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=22", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=22,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36425326 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (72 + 46) / 118][Stage 160:=================================>                   (75 + 43) / 118][Stage 160:=====================================>               (83 + 35) / 118][Stage 160:============================================>        (99 + 19) / 118][Stage 160:=================================================>   (111 + 7) / 118]                                                                                [Stage 161:================================>                    (74 + 45) / 119][Stage 161:====================================>                (82 + 37) / 119][Stage 161:=========================================>           (93 + 26) / 119][Stage 161:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.139344983 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=140", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=140,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405354454 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 60) / 120][Stage 162:===========================>                         (63 + 57) / 120][Stage 162:===============================>                     (71 + 49) / 120][Stage 162:========================================>            (91 + 29) / 120][Stage 162:=================================================>   (113 + 7) / 120]                                                                                [Stage 163:===========================>                         (62 + 59) / 121][Stage 163:================================>                    (74 + 47) / 121][Stage 163:===========================================>        (101 + 20) / 121][Stage 163:=================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.108123594 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=63", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=63,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364047979 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:================================>                    (72 + 46) / 118][Stage 164:==================================>                  (76 + 42) / 118][Stage 164:======================================>              (85 + 33) / 118][Stage 164:================================================>    (109 + 9) / 118][Stage 164:===================================================> (115 + 3) / 118][Stage 164:====================================================>(117 + 1) / 118]                                                                                [Stage 165:================================>                    (73 + 46) / 119][Stage 165:==================================>                  (78 + 41) / 119][Stage 165:=======================================>             (89 + 30) / 119][Stage 165:===================================================> (115 + 4) / 119][Stage 165:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.407650097 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=142", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=142,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370503944 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:================================>                    (72 + 46) / 118][Stage 166:=================================>                   (74 + 44) / 118][Stage 166:=====================================>               (84 + 34) / 118][Stage 166:============================================>       (101 + 17) / 118][Stage 166:=================================================>   (110 + 8) / 118][Stage 166:====================================================>(117 + 1) / 118]                                                                                [Stage 167:================================>                    (74 + 45) / 119][Stage 167:===================================>                 (80 + 39) / 119][Stage 167:=======================================>             (89 + 30) / 119][Stage 167:=============================================>      (105 + 14) / 119][Stage 167:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.601890313 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=198", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=198,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381375013 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:============================>                        (61 + 52) / 113][Stage 168:================================>                    (69 + 44) / 113][Stage 168:===========================================>         (93 + 20) / 113][Stage 168:================================================>    (104 + 9) / 113]                                                                                [Stage 169:===========================>                         (60 + 54) / 114][Stage 169:=================================>                   (71 + 43) / 114][Stage 169:=========================================>           (90 + 24) / 114][Stage 169:==============================================>     (102 + 12) / 114][Stage 169:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.171139616 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=44", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=44,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385675196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==============================>                      (66 + 49) / 115][Stage 170:========================================>            (87 + 28) / 115][Stage 170:=================================================>   (107 + 8) / 115][Stage 170:===================================================> (111 + 4) / 115]                                                                                [Stage 171:===================================>                 (77 + 39) / 116][Stage 171:========================================>            (89 + 27) / 116][Stage 171:=============================================>      (102 + 14) / 116][Stage 171:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.066664908 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=179", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=179,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488115879 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (60 + 61) / 121][Stage 172:===============================>                     (72 + 49) / 121][Stage 172:=====================================>               (85 + 36) / 121][Stage 172:==============================================>     (109 + 12) / 121]                                                                                [Stage 173:==========================>                          (61 + 61) / 122][Stage 173:===============================>                     (72 + 50) / 122][Stage 173:====================================>                (85 + 37) / 122][Stage 173:============================================>       (104 + 18) / 122][Stage 173:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.172045152 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=89", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=89,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372314124 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==============================>                      (67 + 48) / 115][Stage 174:=====================================>               (82 + 33) / 115][Stage 174:===========================================>         (95 + 20) / 115][Stage 174:================================================>    (106 + 9) / 115][Stage 174:===================================================> (111 + 4) / 115]                                                                                [Stage 175:==================================>                  (76 + 40) / 116][Stage 175:=========================================>           (90 + 26) / 116][Stage 175:===============================================>    (106 + 10) / 116][Stage 175:==================================================>  (111 + 5) / 116][Stage 175:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.124024249 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=18", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=18,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369744961 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (72 + 46) / 118][Stage 176:==================================>                  (76 + 42) / 118][Stage 176:=========================================>           (93 + 25) / 118][Stage 176:============================================>       (102 + 16) / 118][Stage 176:====================================================>(116 + 2) / 118]                                                                                [Stage 177:===================================>                 (79 + 40) / 119][Stage 177:========================================>            (90 + 29) / 119][Stage 177:===============================================>    (108 + 11) / 119][Stage 177:===================================================> (116 + 3) / 119][Stage 177:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.176750049 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=84", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=84,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359025112 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:================================>                    (72 + 46) / 118][Stage 178:===================================>                 (78 + 40) / 118][Stage 178:=====================================>               (84 + 34) / 118][Stage 178:============================================>       (100 + 18) / 118][Stage 178:==================================================>  (112 + 6) / 118][Stage 178:====================================================>(117 + 1) / 118]                                                                                [Stage 179:================================>                    (73 + 46) / 119][Stage 179:====================================>                (82 + 37) / 119][Stage 179:===========================================>         (97 + 22) / 119][Stage 179:=================================================>   (112 + 7) / 119][Stage 179:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.1697134 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=82", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=82,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399940045 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==========================>                          (60 + 60) / 120][Stage 180:==============================>                      (69 + 51) / 120][Stage 180:===================================>                 (80 + 40) / 120][Stage 180:===========================================>        (100 + 20) / 120][Stage 180:===================================================> (116 + 4) / 120]                                                                                [Stage 181:============================>                        (64 + 57) / 121][Stage 181:===============================>                     (72 + 49) / 121][Stage 181:========================================>            (92 + 29) / 121][Stage 181:=============================================>      (105 + 16) / 121][Stage 181:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.238705853 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=71", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=71,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40639781 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==================================>                  (75 + 40) / 115][Stage 182:=======================================>             (86 + 29) / 115][Stage 182:=============================================>       (98 + 17) / 115][Stage 182:=================================================>   (107 + 8) / 115]                                                                                [Stage 183:==================================>                  (76 + 40) / 116][Stage 183:=========================================>           (90 + 26) / 116][Stage 183:===============================================>    (105 + 11) / 116][Stage 183:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.799854294 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=204", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=204,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362550675 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=====================================>               (81 + 34) / 115][Stage 184:=========================================>           (91 + 24) / 115][Stage 184:================================================>    (106 + 9) / 115][Stage 184:===================================================> (112 + 3) / 115][Stage 184:====================================================>(114 + 1) / 115]                                                                                [Stage 185:======================================>              (84 + 32) / 116][Stage 185:=========================================>           (90 + 26) / 116][Stage 185:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.629616454 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=148,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382704411 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:============================>                        (60 + 53) / 113][Stage 186:=================================>                   (72 + 41) / 113][Stage 186:==========================================>          (91 + 22) / 113][Stage 186:==================================================>  (108 + 5) / 113]                                                                                [Stage 187:===========================>                         (60 + 54) / 114][Stage 187:==================================>                  (75 + 39) / 114][Stage 187:=============================================>       (97 + 17) / 114][Stage 187:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.016775605 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=121", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=121,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468981459 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:============================>                        (60 + 53) / 113][Stage 188:=================================>                   (71 + 42) / 113][Stage 188:==========================================>          (90 + 23) / 113][Stage 188:==================================================>  (108 + 5) / 113]                                                                                [Stage 189:============================>                        (62 + 52) / 114][Stage 189:==================================>                  (75 + 39) / 114][Stage 189:=============================================>       (97 + 17) / 114][Stage 189:===================================================> (110 + 4) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.179966554 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=57", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=57,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403840846 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (60 + 61) / 121][Stage 190:============================>                        (66 + 55) / 121][Stage 190:====================================>                (84 + 37) / 121][Stage 190:=============================================>      (107 + 14) / 121]                                                                                [Stage 191:===========================>                         (64 + 58) / 122][Stage 191:===============================>                     (73 + 49) / 122][Stage 191:==========================================>          (97 + 25) / 122][Stage 191:==================================================>  (116 + 6) / 122][Stage 191:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.04307656 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=70", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=70,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357428769 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:=================================>                   (74 + 44) / 118][Stage 192:======================================>              (86 + 32) / 118][Stage 192:=============================================>      (103 + 15) / 118][Stage 192:===================================================> (115 + 3) / 118]                                                                                [Stage 193:=================================>                   (76 + 43) / 119][Stage 193:========================================>            (91 + 28) / 119][Stage 193:=============================================>      (105 + 14) / 119][Stage 193:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 2.991515436 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=66", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=66,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393841278 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (60 + 61) / 121][Stage 194:===========================>                         (63 + 58) / 121][Stage 194:====================================>                (83 + 38) / 121][Stage 194:============================================>       (104 + 17) / 121][Stage 194:====================================================>(120 + 1) / 121]                                                                                [Stage 195:==========================>                          (61 + 61) / 122][Stage 195:===============================>                     (72 + 50) / 122][Stage 195:======================================>              (89 + 33) / 122][Stage 195:=============================================>      (107 + 15) / 122][Stage 195:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.421921941 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=243", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=243,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401763664 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (58 + 55) / 113][Stage 196:=============================>                       (62 + 51) / 113][Stage 196:=================================>                   (71 + 42) / 113][Stage 196:==========================================>          (91 + 22) / 113][Stage 196:====================================================>(111 + 2) / 113]                                                                                [Stage 197:==========================>                          (58 + 56) / 114][Stage 197:==============================>                      (65 + 49) / 114][Stage 197:====================================>                (79 + 35) / 114][Stage 197:==============================================>     (103 + 11) / 114][Stage 197:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.107228063 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=117", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=117,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373399801 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=====================================>               (81 + 34) / 115][Stage 198:========================================>            (88 + 27) / 115][Stage 198:===========================================>         (95 + 20) / 115][Stage 198:=================================================>   (108 + 7) / 115][Stage 198:====================================================>(114 + 1) / 115]                                                                                [Stage 199:=====================================>               (83 + 33) / 116][Stage 199:==========================================>          (94 + 22) / 116][Stage 199:===============================================>    (105 + 11) / 116][Stage 199:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.699828733 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=68", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=68,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403030724 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 60) / 120][Stage 200:=============================>                       (67 + 53) / 120][Stage 200:=================================>                   (76 + 44) / 120][Stage 200:=============================================>      (106 + 14) / 120][Stage 200:====================================================>(119 + 1) / 120]                                                                                [Stage 201:==========================>                          (61 + 60) / 121][Stage 201:============================>                        (64 + 57) / 121][Stage 201:==================================>                  (78 + 43) / 121][Stage 201:============================================>       (104 + 17) / 121]                                                                                Time elapsed: 2.88590078 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/24 17:19:48 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.36:38990) dropped. RpcEnv already stopped.
17/05/24 17:19:48 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.16:41454) dropped. RpcEnv already stopped.
17/05/24 17:19:48 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.36:38990) dropped. RpcEnv already stopped.
17/05/24 17:19:48 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.16:41454) dropped. RpcEnv already stopped.
17/05/24 17:19:48 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.43:54576) dropped. RpcEnv already stopped.
17/05/24 17:19:48 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.43:54576) dropped. RpcEnv already stopped.

real	10m0.850s
user	11m27.664s
sys	0m36.224s
