Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 18:34:32 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:34:47 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:34:47 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:34:47 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 18:34:50 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:35:00 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524183449-0580).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.473554623 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:=============>                                         (29 + 86) / 115][Stage 0:============================>                          (60 + 55) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:======================================>                (81 + 34) / 115][Stage 0:===========================================>           (91 + 24) / 115][Stage 0:=============================================>         (95 + 20) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:=====================================================> (112 + 3) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:=========================>                             (53 + 63) / 116][Stage 1:===========================>                           (59 + 57) / 116][Stage 1:============================>                          (61 + 55) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:========================================>              (85 + 31) / 116][Stage 1:============================================>          (94 + 22) / 116][Stage 1:===============================================>      (102 + 14) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:====================================================>  (111 + 5) / 116][Stage 1:=====================================================> (113 + 3) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 13.194973568 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=168", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=168,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.656917921 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=================================>                     (70 + 45) / 115][Stage 2:=====================================>                 (79 + 36) / 115][Stage 2:======================================>                (81 + 34) / 115][Stage 2:=======================================>               (82 + 33) / 115][Stage 2:==========================================>            (88 + 27) / 115][Stage 2:=============================================>         (95 + 20) / 115][Stage 2:=================================================>    (105 + 10) / 115][Stage 2:=====================================================> (111 + 4) / 115]                                                                                [Stage 3:======================================>                (81 + 35) / 116][Stage 3:=======================================>               (84 + 32) / 116][Stage 3:=========================================>             (87 + 29) / 116][Stage 3:===========================================>           (92 + 24) / 116][Stage 3:=============================================>         (95 + 21) / 116][Stage 3:=====================================================> (112 + 4) / 116][Stage 3:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.363543463 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=85", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=85,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.7808868 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=========================>                             (56 + 65) / 121][Stage 4:==========================>                            (59 + 62) / 121][Stage 4:==============================>                        (66 + 55) / 121][Stage 4:===============================>                       (70 + 51) / 121][Stage 4:====================================>                  (80 + 41) / 121][Stage 4:============================================>          (98 + 23) / 121][Stage 4:=================================================>    (111 + 10) / 121][Stage 4:======================================================>(120 + 1) / 121]                                                                                [Stage 5:===========================>                           (61 + 61) / 122][Stage 5:============================>                          (64 + 58) / 122][Stage 5:==================================>                    (76 + 46) / 122][Stage 5:=======================================>               (87 + 35) / 122][Stage 5:============================================>          (98 + 24) / 122][Stage 5:===================================================>   (114 + 8) / 122][Stage 5:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.537425112 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=48", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=48,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.701539702 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:============================>                          (58 + 55) / 113][Stage 6:=============================>                         (60 + 53) / 113][Stage 6:================================>                      (67 + 46) / 113][Stage 6:=======================================>               (81 + 32) / 113][Stage 6:============================================>          (91 + 22) / 113][Stage 6:==================================================>    (104 + 9) / 113][Stage 6:======================================================>(111 + 2) / 113]                                                                                [Stage 7:============================>                          (59 + 55) / 114][Stage 7:============================>                          (60 + 54) / 114][Stage 7:=================================>                     (69 + 45) / 114][Stage 7:=========================================>             (85 + 29) / 114][Stage 7:==============================================>        (97 + 17) / 114][Stage 7:====================================================>  (108 + 6) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.255189053 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=86", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=86,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.65105172 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (59 + 61) / 120][Stage 8:=============================>                         (65 + 55) / 120][Stage 8:==================================>                    (75 + 45) / 120][Stage 8:==============================================>       (103 + 17) / 120][Stage 8:===================================================>   (113 + 7) / 120][Stage 8:======================================================>(119 + 1) / 120]                                                                                [Stage 9:===========================>                           (61 + 60) / 121][Stage 9:===============================>                       (70 + 51) / 121][Stage 9:===================================>                   (77 + 44) / 121][Stage 9:============================================>          (98 + 23) / 121][Stage 9:===============================================>      (106 + 15) / 121][Stage 9:======================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.945780573 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=201", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=201,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.547240968 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=============================>                        (62 + 53) / 115][Stage 10:================================>                     (70 + 45) / 115][Stage 10:=======================================>              (84 + 31) / 115][Stage 10:==========================================>           (90 + 25) / 115][Stage 10:=============================================>        (96 + 19) / 115][Stage 10:===============================================>     (102 + 13) / 115][Stage 10:=====================================================>(114 + 1) / 115]                                                                                [Stage 11:==============================>                       (66 + 50) / 116][Stage 11:====================================>                 (79 + 37) / 116][Stage 11:========================================>             (86 + 30) / 116][Stage 11:============================================>         (95 + 21) / 116][Stage 11:===============================================>     (104 + 12) / 116][Stage 11:===================================================>  (110 + 6) / 116][Stage 11:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.819750878 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=27", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=27,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.603926731 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:==========================>                           (59 + 61) / 120][Stage 12:===========================>                          (60 + 60) / 120][Stage 12:==============================>                       (67 + 53) / 120][Stage 12:======================================>               (85 + 35) / 120][Stage 12:============================================>        (101 + 19) / 120][Stage 12:================================================>    (109 + 11) / 120][Stage 12:===================================================>  (115 + 5) / 120][Stage 12:=====================================================>(119 + 1) / 120]                                                                                [Stage 13:===========================>                          (61 + 60) / 121][Stage 13:=============================>                        (66 + 55) / 121][Stage 13:==================================>                   (77 + 44) / 121][Stage 13:===========================================>          (97 + 24) / 121][Stage 13:==============================================>      (106 + 15) / 121][Stage 13:==================================================>   (114 + 7) / 121][Stage 13:====================================================> (117 + 4) / 121][Stage 13:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.235450243 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=173", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=173,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.618161295 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:============================>                         (59 + 54) / 113][Stage 14:=============================>                        (62 + 51) / 113][Stage 14:======================================>               (81 + 32) / 113][Stage 14:===============================================>     (101 + 12) / 113][Stage 14:=====================================================>(112 + 1) / 113]                                                                                [Stage 15:===========================>                          (58 + 56) / 114][Stage 15:==============================>                       (64 + 50) / 114][Stage 15:==================================>                   (73 + 41) / 114][Stage 15:==========================================>           (90 + 24) / 114][Stage 15:==============================================>       (99 + 15) / 114][Stage 15:===================================================>  (108 + 6) / 114][Stage 15:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.834437582 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=4", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=4,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.574722667 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:==========================>                           (60 + 61) / 121][Stage 16:==============================>                       (69 + 52) / 121][Stage 16:==========================================>           (95 + 26) / 121][Stage 16:==================================================>   (113 + 8) / 121][Stage 16:=====================================================>(119 + 2) / 121]                                                                                [Stage 17:===========================>                          (62 + 60) / 122][Stage 17:===============================>                      (71 + 51) / 122][Stage 17:====================================>                 (83 + 39) / 122][Stage 17:==========================================>           (97 + 25) / 122][Stage 17:==================================================>   (114 + 8) / 122][Stage 17:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.803970798 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=56", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=56,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.538676316 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (57 + 56) / 113][Stage 18:=============================>                        (61 + 52) / 113][Stage 18:=====================================>                (78 + 35) / 113][Stage 18:==============================================>       (97 + 16) / 113]                                                                                [Stage 19:===========================>                          (59 + 55) / 114][Stage 19:==============================>                       (65 + 49) / 114][Stage 19:=====================================>                (80 + 34) / 114][Stage 19:=============================================>        (96 + 18) / 114][Stage 19:===============================================>     (103 + 11) / 114][Stage 19:===================================================>  (109 + 5) / 114][Stage 19:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.530873444 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=232", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=232,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.522074716 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:============================>                         (59 + 54) / 113][Stage 20:==============================>                       (63 + 50) / 113][Stage 20:====================================>                 (77 + 36) / 113][Stage 20:============================================>         (93 + 20) / 113][Stage 20:==================================================>   (105 + 8) / 113]                                                                                [Stage 21:============================>                         (61 + 53) / 114][Stage 21:===================================>                  (74 + 40) / 114][Stage 21:============================================>         (93 + 21) / 114][Stage 21:====================================================> (110 + 4) / 114][Stage 21:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.435775103 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=176", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=176,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.50410765 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:==============================>                       (63 + 50) / 113][Stage 22:======================================>               (81 + 32) / 113][Stage 22:===============================================>      (99 + 14) / 113][Stage 22:==================================================>   (105 + 8) / 113][Stage 22:==================================================>   (106 + 7) / 113][Stage 22:=====================================================>(111 + 2) / 113]                                                                                [Stage 23:===========================>                          (59 + 55) / 114][Stage 23:=============================>                        (63 + 51) / 114][Stage 23:=================================>                    (70 + 44) / 114][Stage 23:=============================================>        (97 + 17) / 114][Stage 23:==================================================>   (107 + 7) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.859048077 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=106", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=106,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.524927464 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (62 + 58) / 120][Stage 24:=============================>                        (66 + 54) / 120][Stage 24:=====================================>                (84 + 36) / 120][Stage 24:===============================================>     (107 + 13) / 120]                                                                                [Stage 25:===========================>                          (62 + 59) / 121][Stage 25:================================>                     (72 + 49) / 121][Stage 25:=====================================>                (84 + 37) / 121][Stage 25:============================================>        (102 + 19) / 121][Stage 25:==================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.360698858 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=96", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=96,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.463208074 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (72 + 46) / 118][Stage 26:==================================>                   (76 + 42) / 118][Stage 26:=========================================>            (90 + 28) / 118][Stage 26:================================================>    (107 + 11) / 118][Stage 26:=====================================================>(116 + 2) / 118]                                                                                [Stage 27:=================================>                    (73 + 46) / 119][Stage 27:==================================>                   (76 + 43) / 119][Stage 27:========================================>             (89 + 30) / 119][Stage 27:===============================================>     (106 + 13) / 119][Stage 27:===================================================>  (114 + 5) / 119][Stage 27:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.477367184 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=44", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=44,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47782894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:============================>                         (59 + 54) / 113][Stage 28:===============================>                      (66 + 47) / 113][Stage 28:======================================>               (80 + 33) / 113][Stage 28:=============================================>        (96 + 17) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:===========================>                          (59 + 55) / 114][Stage 29:=============================>                        (63 + 51) / 114][Stage 29:=======================================>              (84 + 30) / 114][Stage 29:=============================================>        (96 + 18) / 114][Stage 29:====================================================> (110 + 4) / 114][Stage 29:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.386694926 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=93", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=93,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448258821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:====================================>                 (76 + 37) / 113][Stage 30:==========================================>           (88 + 25) / 113][Stage 30:==============================================>       (97 + 16) / 113][Stage 30:================================================>    (103 + 10) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:==================================>                   (73 + 41) / 114][Stage 31:=======================================>              (84 + 30) / 114][Stage 31:=============================================>        (95 + 19) / 114][Stage 31:==================================================>   (106 + 8) / 114][Stage 31:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.189817037 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=178", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=178,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.503489314 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:==========================>                           (60 + 61) / 121][Stage 32:============================>                         (63 + 58) / 121][Stage 32:==================================>                   (78 + 43) / 121][Stage 32:=============================================>       (104 + 17) / 121][Stage 32:=================================================>    (112 + 9) / 121][Stage 32:===================================================>  (116 + 5) / 121]                                                                                [Stage 33:===========================>                          (61 + 61) / 122][Stage 33:===========================>                          (63 + 59) / 122][Stage 33:=====================================>                (84 + 38) / 122][Stage 33:==============================================>      (106 + 16) / 122][Stage 33:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.578520442 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=62", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=62,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.473279392 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (57 + 56) / 113][Stage 34:=============================>                        (62 + 51) / 113][Stage 34:====================================>                 (77 + 36) / 113][Stage 34:============================================>         (93 + 20) / 113][Stage 34:=================================================>    (104 + 9) / 113][Stage 34:====================================================> (110 + 3) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:============================>                         (60 + 54) / 114][Stage 35:===============================>                      (66 + 48) / 114][Stage 35:=======================================>              (83 + 31) / 114][Stage 35:==============================================>      (101 + 13) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.583947491 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=10", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=10,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408882751 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:======================================>               (83 + 32) / 115][Stage 36:===========================================>          (92 + 23) / 115][Stage 36:==============================================>      (101 + 14) / 115][Stage 36:===================================================>  (109 + 6) / 115]                                                                                [Stage 37:=======================================>              (85 + 31) / 116][Stage 37:============================================>         (95 + 21) / 116][Stage 37:=============================================>       (100 + 16) / 116][Stage 37:===============================================>     (105 + 11) / 116]                                                                                Time elapsed: 3.194882234 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=206", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=206,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.509082453 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==============================>                       (66 + 49) / 115][Stage 38:=====================================>                (79 + 36) / 115][Stage 38:=============================================>        (96 + 19) / 115][Stage 38:===================================================>  (110 + 5) / 115]                                                                                [Stage 39:=================================>                    (73 + 43) / 116][Stage 39:=======================================>              (84 + 32) / 116][Stage 39:=============================================>       (100 + 16) / 116]                                                                                Time elapsed: 2.720220207 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=102", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=102,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404293287 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:=====================================>                (80 + 35) / 115][Stage 40:======================================>               (83 + 32) / 115][Stage 40:============================================>         (94 + 21) / 115][Stage 40:===================================================>  (109 + 6) / 115][Stage 40:=====================================================>(113 + 2) / 115]                                                                                [Stage 41:======================================>               (82 + 34) / 116][Stage 41:=======================================>              (85 + 31) / 116][Stage 41:=============================================>       (100 + 16) / 116][Stage 41:===================================================>  (111 + 5) / 116][Stage 41:====================================================> (113 + 3) / 116][Stage 41:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.203171125 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=138", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=138,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.48343417 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (58 + 55) / 113][Stage 42:=============================>                        (62 + 51) / 113][Stage 42:=====================================>                (79 + 34) / 113][Stage 42:=============================================>        (95 + 18) / 113][Stage 42:====================================================> (110 + 3) / 113][Stage 42:=====================================================>(112 + 1) / 113]                                                                                [Stage 43:=============================>                        (62 + 52) / 114][Stage 43:=====================================>                (79 + 35) / 114][Stage 43:==============================================>       (99 + 15) / 114][Stage 43:===================================================>  (109 + 5) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.453682245 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=190", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=190,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.461142485 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:==========================>                           (60 + 61) / 121][Stage 44:=============================>                        (66 + 55) / 121][Stage 44:======================================>               (87 + 34) / 121][Stage 44:===============================================>     (108 + 13) / 121][Stage 44:=====================================================>(120 + 1) / 121]                                                                                [Stage 45:===========================>                          (61 + 61) / 122][Stage 45:=============================>                        (66 + 56) / 122][Stage 45:====================================>                 (83 + 39) / 122][Stage 45:==============================================>      (108 + 14) / 122][Stage 45:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.210396667 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=211", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=211,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437738635 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==================================>                   (73 + 42) / 115][Stage 46:========================================>             (86 + 29) / 115][Stage 46:==================================================>   (108 + 7) / 115]                                                                                [Stage 47:=================================>                    (72 + 44) / 116][Stage 47:========================================>             (87 + 29) / 116][Stage 47:===============================================>     (105 + 11) / 116][Stage 47:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.850474998 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=193", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=193,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501937009 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===============================>                      (68 + 47) / 115][Stage 48:======================================>               (83 + 32) / 115][Stage 48:=============================================>        (97 + 18) / 115][Stage 48:==================================================>   (107 + 8) / 115]                                                                                [Stage 49:================================>                     (70 + 46) / 116][Stage 49:========================================>             (87 + 29) / 116][Stage 49:=============================================>        (97 + 19) / 116][Stage 49:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.867023402 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=181", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=181,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429064491 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:================================>                     (70 + 45) / 115][Stage 50:==========================================>           (91 + 24) / 115][Stage 50:==============================================>      (100 + 15) / 115][Stage 50:=====================================================>(113 + 2) / 115]                                                                                [Stage 51:===================================>                  (77 + 39) / 116][Stage 51:========================================>             (87 + 29) / 116][Stage 51:===============================================>     (105 + 11) / 116][Stage 51:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.791445182 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=213", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=213,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408698316 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:================================>                     (72 + 46) / 118][Stage 52:=================================>                    (74 + 44) / 118][Stage 52:========================================>             (88 + 30) / 118][Stage 52:==============================================>      (104 + 14) / 118][Stage 52:====================================================> (115 + 3) / 118]                                                                                [Stage 53:=================================>                    (73 + 46) / 119][Stage 53:=====================================>                (83 + 36) / 119][Stage 53:===========================================>          (95 + 24) / 119][Stage 53:==================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.084152774 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=141", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=141,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450482526 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (60 + 60) / 120][Stage 54:=============================>                        (65 + 55) / 120][Stage 54:====================================>                 (80 + 40) / 120][Stage 54:============================================>        (101 + 19) / 120][Stage 54:====================================================> (117 + 3) / 120]                                                                                [Stage 55:===========================>                          (61 + 60) / 121][Stage 55:===================================>                  (80 + 41) / 121][Stage 55:==========================================>           (96 + 25) / 121][Stage 55:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.18651655 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=110", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=110,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468632448 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==========================>                           (60 + 61) / 121][Stage 56:===========================>                          (62 + 59) / 121][Stage 56:================================>                     (73 + 48) / 121][Stage 56:=========================================>            (93 + 28) / 121][Stage 56:===============================================>     (108 + 13) / 121]                                                                                [Stage 57:===========================>                          (61 + 61) / 122][Stage 57:===============================>                      (72 + 50) / 122][Stage 57:=======================================>              (89 + 33) / 122][Stage 57:================================================>    (111 + 11) / 122][Stage 57:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.330465175 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=158", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=158,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392846838 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:>                                                       (0 + 0) / 113][Stage 58:====================================>                 (76 + 37) / 113][Stage 58:===========================================>          (90 + 23) / 113][Stage 58:==============================================>       (97 + 16) / 113][Stage 58:==================================================>   (106 + 7) / 113][Stage 58:=====================================================>(112 + 1) / 113]                                                                                [Stage 59:====================================>                 (76 + 38) / 114][Stage 59:========================================>             (86 + 28) / 114][Stage 59:==============================================>       (99 + 15) / 114][Stage 59:==================================================>   (106 + 8) / 114][Stage 59:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.004291548 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=39", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=39,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381574265 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:======================================>               (81 + 34) / 115][Stage 60:========================================>             (87 + 28) / 115][Stage 60:================================================>    (105 + 10) / 115][Stage 60:====================================================> (111 + 4) / 115]                                                                                [Stage 61:======================================>               (82 + 34) / 116][Stage 61:==========================================>           (92 + 24) / 116][Stage 61:===================================================>  (110 + 6) / 116][Stage 61:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.505746447 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=73", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=73,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425967847 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:=================================>                    (73 + 45) / 118][Stage 62:=================================>                    (74 + 44) / 118][Stage 62:=========================================>            (91 + 27) / 118][Stage 62:===============================================>     (106 + 12) / 118][Stage 62:=====================================================>(117 + 1) / 118]                                                                                [Stage 63:=================================>                    (73 + 46) / 119][Stage 63:====================================>                 (80 + 39) / 119][Stage 63:=========================================>            (92 + 27) / 119][Stage 63:===============================================>     (107 + 12) / 119][Stage 63:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.174613099 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=205", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=205,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414010769 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:=================================>                    (72 + 43) / 115][Stage 64:==========================================>           (90 + 25) / 115][Stage 64:==============================================>      (101 + 14) / 115][Stage 64:===================================================>  (110 + 5) / 115]                                                                                [Stage 65:====================================>                 (78 + 38) / 116][Stage 65:===========================================>          (94 + 22) / 116][Stage 65:=================================================>    (107 + 9) / 116][Stage 65:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.829635712 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=78", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=78,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41003115 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=================================>                    (73 + 45) / 118][Stage 66:====================================>                 (79 + 39) / 118][Stage 66:===========================================>          (95 + 23) / 118][Stage 66:=================================================>    (109 + 9) / 118][Stage 66:=====================================================>(117 + 1) / 118]                                                                                [Stage 67:=================================>                    (73 + 46) / 119][Stage 67:====================================>                 (80 + 39) / 119][Stage 67:==========================================>           (93 + 26) / 119][Stage 67:===============================================>     (106 + 13) / 119][Stage 67:=====================================================>(117 + 2) / 119][Stage 67:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.414380006 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=129", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=129,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441881774 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:============================>                         (60 + 53) / 113][Stage 68:==================================>                   (72 + 41) / 113][Stage 68:========================================>             (84 + 29) / 113][Stage 68:==============================================>      (100 + 13) / 113][Stage 68:=====================================================>(112 + 1) / 113]                                                                                [Stage 69:===========================>                          (59 + 55) / 114][Stage 69:===============================>                      (66 + 48) / 114][Stage 69:===========================================>          (91 + 23) / 114][Stage 69:===================================================>  (109 + 5) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.138684815 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=45", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=45,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418808606 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:================================>                     (72 + 46) / 118][Stage 70:==================================>                   (76 + 42) / 118][Stage 70:=====================================>                (81 + 37) / 118][Stage 70:===========================================>          (95 + 23) / 118][Stage 70:==================================================>   (111 + 7) / 118][Stage 70:=====================================================>(117 + 1) / 118]                                                                                [Stage 71:=================================>                    (73 + 46) / 119][Stage 71:==================================>                   (77 + 42) / 119][Stage 71:====================================>                 (80 + 39) / 119][Stage 71:==========================================>           (93 + 26) / 119][Stage 71:===============================================>     (106 + 13) / 119][Stage 71:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.700715858 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=157", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=157,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456230854 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:===========================>                          (60 + 60) / 120][Stage 72:===============================>                      (69 + 51) / 120][Stage 72:=====================================>                (83 + 37) / 120][Stage 72:==============================================>      (106 + 14) / 120][Stage 72:====================================================> (117 + 3) / 120]                                                                                [Stage 73:============================>                         (63 + 58) / 121][Stage 73:==================================>                   (77 + 44) / 121][Stage 73:===========================================>          (98 + 23) / 121][Stage 73:=================================================>    (112 + 9) / 121]                                                                                Time elapsed: 3.212859004 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=139", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=139,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374920563 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:======================================>               (80 + 33) / 113][Stage 74:===========================================>          (90 + 23) / 113][Stage 74:===============================================>     (102 + 11) / 113][Stage 74:=====================================================>(111 + 2) / 113]                                                                                [Stage 75:=======================================>              (83 + 31) / 114][Stage 75:============================================>         (93 + 21) / 114][Stage 75:================================================>    (104 + 10) / 114][Stage 75:===================================================>  (108 + 6) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.131329421 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=199", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=199,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393010403 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==================================>                   (73 + 40) / 113][Stage 76:========================================>             (85 + 28) / 113][Stage 76:==============================================>       (97 + 16) / 113][Stage 76:====================================================> (109 + 4) / 113][Stage 76:=====================================================>(112 + 1) / 113]                                                                                [Stage 77:====================================>                 (76 + 38) / 114][Stage 77:=========================================>            (88 + 26) / 114][Stage 77:==============================================>       (98 + 16) / 114][Stage 77:===================================================>  (108 + 6) / 114][Stage 77:=====================================================>(112 + 2) / 114][Stage 77:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.186944019 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=147", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=147,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474740013 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (60 + 60) / 120][Stage 78:=============================>                        (66 + 54) / 120][Stage 78:===================================>                  (79 + 41) / 120][Stage 78:============================================>         (99 + 21) / 120][Stage 78:====================================================> (116 + 4) / 120]                                                                                [Stage 79:============================>                         (63 + 58) / 121][Stage 79:==============================>                       (69 + 52) / 121][Stage 79:=========================================>            (93 + 28) / 121][Stage 79:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.200995709 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=233", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=233,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404424833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (59 + 54) / 113][Stage 80:================================>                     (69 + 44) / 113][Stage 80:==========================================>           (88 + 25) / 113][Stage 80:====================================================> (110 + 3) / 113]                                                                                [Stage 81:============================>                         (60 + 54) / 114][Stage 81:==================================>                   (72 + 42) / 114][Stage 81:===========================================>          (92 + 22) / 114][Stage 81:=================================================>    (105 + 9) / 114][Stage 81:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.14026326 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=41", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=41,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416702046 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===========================>                          (58 + 55) / 113][Stage 82:==============================>                       (63 + 50) / 113][Stage 82:======================================>               (80 + 33) / 113][Stage 82:=================================================>    (104 + 9) / 113][Stage 82:=====================================================>(111 + 2) / 113]                                                                                [Stage 83:===========================>                          (59 + 55) / 114][Stage 83:==============================>                       (65 + 49) / 114][Stage 83:==================================>                   (73 + 41) / 114][Stage 83:==============================================>       (99 + 15) / 114]                                                                                Time elapsed: 3.050935464 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=87", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=87,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431279191 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==========================>                           (60 + 61) / 121][Stage 84:==============================>                       (69 + 52) / 121][Stage 84:=====================================>                (83 + 38) / 121][Stage 84:=================================================>    (112 + 9) / 121][Stage 84:=====================================================>(120 + 1) / 121]                                                                                [Stage 85:============================>                         (64 + 58) / 122][Stage 85:==================================>                   (77 + 45) / 122][Stage 85:============================================>        (102 + 20) / 122][Stage 85:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.087233195 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=63", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=63,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.513385359 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (63 + 57) / 120][Stage 86:================================>                     (72 + 48) / 120][Stage 86:========================================>             (91 + 29) / 120][Stage 86:================================================>    (109 + 11) / 120][Stage 86:=====================================================>(119 + 1) / 120]                                                                                [Stage 87:=============================>                        (66 + 55) / 121][Stage 87:=====================================>                (85 + 36) / 121][Stage 87:===========================================>         (100 + 21) / 121][Stage 87:=================================================>    (112 + 9) / 121]                                                                                Time elapsed: 3.35050789 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=142", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=142,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424831677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (60 + 60) / 120][Stage 88:============================>                         (64 + 56) / 120][Stage 88:================================>                     (72 + 48) / 120][Stage 88:======================================>               (85 + 35) / 120][Stage 88:=================================================>    (111 + 9) / 120]                                                                                [Stage 89:=============================>                        (66 + 55) / 121][Stage 89:====================================>                 (82 + 39) / 121][Stage 89:=========================================>            (94 + 27) / 121][Stage 89:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.104234505 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=132", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=131 AND partitionZIndex<=132,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356036226 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:=======================================>              (84 + 31) / 115][Stage 90:==============================================>       (98 + 17) / 115][Stage 90:===============================================>     (104 + 11) / 115][Stage 90:====================================================> (112 + 3) / 115]                                                                                [Stage 91:========================================>             (87 + 29) / 116][Stage 91:==============================================>       (99 + 17) / 116][Stage 91:==================================================>   (108 + 8) / 116][Stage 91:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.972597159 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=124", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=124,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402659054 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==============================>                       (66 + 49) / 115][Stage 92:====================================>                 (78 + 37) / 115][Stage 92:============================================>         (94 + 21) / 115][Stage 92:==================================================>   (107 + 8) / 115]                                                                                [Stage 93:=================================>                    (71 + 45) / 116][Stage 93:========================================>             (86 + 30) / 116][Stage 93:==============================================>      (101 + 15) / 116][Stage 93:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.798390402 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=219", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=219,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364499861 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:=====================================>                (79 + 34) / 113][Stage 94:=========================================>            (86 + 27) / 113][Stage 94:===============================================>      (99 + 14) / 113][Stage 94:===================================================>  (107 + 6) / 113]                                                                                [Stage 95:========================================>             (85 + 29) / 114][Stage 95:=============================================>        (97 + 17) / 114][Stage 95:================================================>    (104 + 10) / 114][Stage 95:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.785356493 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=137", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=137,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377327297 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:================================>                     (72 + 46) / 118][Stage 96:===================================>                  (77 + 41) / 118][Stage 96:========================================>             (88 + 30) / 118][Stage 96:=============================================>       (101 + 17) / 118][Stage 96:====================================================> (114 + 4) / 118]                                                                                [Stage 97:=================================>                    (73 + 46) / 119][Stage 97:=======================================>              (87 + 32) / 119][Stage 97:===========================================>          (95 + 24) / 119][Stage 97:================================================>    (108 + 11) / 119]                                                                                Time elapsed: 3.110314983 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=12", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=12,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400864241 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=============================>                        (61 + 52) / 113][Stage 98:===================================>                  (74 + 39) / 113][Stage 98:==============================================>       (98 + 15) / 113][Stage 98:====================================================> (110 + 3) / 113]                                                                                [Stage 99:============================>                         (61 + 53) / 114][Stage 99:====================================>                 (76 + 38) / 114][Stage 99:=============================================>        (96 + 18) / 114][Stage 99:==================================================>   (107 + 7) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.541627547 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=161", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=161,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395350855 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (72 + 46) / 118][Stage 100:===================================>                 (80 + 38) / 118][Stage 100:==========================================>          (95 + 23) / 118][Stage 100:===================================================> (115 + 3) / 118]                                                                                [Stage 101:==================================>                  (78 + 41) / 119][Stage 101:======================================>              (87 + 32) / 119][Stage 101:=============================================>      (103 + 16) / 119][Stage 101:=================================================>   (112 + 7) / 119][Stage 101:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.106819661 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=238", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=238,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379390001 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:================================>                    (72 + 46) / 118][Stage 102:====================================>                (82 + 36) / 118][Stage 102:========================================>            (91 + 27) / 118][Stage 102:==================================================>  (112 + 6) / 118]                                                                                [Stage 103:================================>                    (73 + 46) / 119][Stage 103:=================================>                   (76 + 43) / 119][Stage 103:====================================>                (81 + 38) / 119][Stage 103:===========================================>        (100 + 19) / 119][Stage 103:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.04239666 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=53", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=53,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346917774 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:=====================================>               (81 + 34) / 115][Stage 104:=======================================>             (85 + 30) / 115][Stage 104:============================================>        (96 + 19) / 115][Stage 104:===============================================>    (104 + 11) / 115][Stage 104:=================================================>   (108 + 7) / 115]                                                                                [Stage 105:=====================================>               (83 + 33) / 116][Stage 105:==========================================>          (94 + 22) / 116][Stage 105:==============================================>     (104 + 12) / 116][Stage 105:==================================================>  (110 + 6) / 116][Stage 105:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.472735254 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=163", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=163,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388387379 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===============================>                     (68 + 47) / 115][Stage 106:===================================>                 (78 + 37) / 115][Stage 106:===========================================>         (94 + 21) / 115][Stage 106:==================================================>  (110 + 5) / 115]                                                                                [Stage 107:================================>                    (71 + 45) / 116][Stage 107:=========================================>           (90 + 26) / 116][Stage 107:===============================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.687683266 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=35", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=35,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419629936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (60 + 61) / 121][Stage 108:===========================>                         (62 + 59) / 121][Stage 108:================================>                    (74 + 47) / 121][Stage 108:==========================================>         (100 + 21) / 121][Stage 108:====================================================>(120 + 1) / 121]                                                                                [Stage 109:==========================>                          (61 + 61) / 122][Stage 109:==========================>                          (62 + 60) / 122][Stage 109:=================================>                   (76 + 46) / 122][Stage 109:==========================================>         (100 + 22) / 122][Stage 109:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.043593427 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=105,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357521217 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===================================>                 (75 + 38) / 113][Stage 110:=====================================>               (81 + 32) / 113][Stage 110:=============================================>       (98 + 15) / 113][Stage 110:=================================================>   (106 + 7) / 113][Stage 110:====================================================>(111 + 2) / 113][Stage 110:====================================================>(112 + 1) / 113]                                                                                [Stage 111:==================================>                  (74 + 40) / 114][Stage 111:=======================================>             (86 + 28) / 114][Stage 111:==============================================>      (99 + 15) / 114][Stage 111:===================================================> (111 + 3) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.33827503 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=185", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=185,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341856926 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:=====================================>               (82 + 33) / 115][Stage 112:=========================================>           (89 + 26) / 115][Stage 112:==============================================>     (103 + 12) / 115][Stage 112:===================================================> (111 + 4) / 115][Stage 112:====================================================>(114 + 1) / 115]                                                                                [Stage 113:=====================================>               (83 + 33) / 116][Stage 113:=========================================>           (91 + 25) / 116][Stage 113:===============================================>    (106 + 10) / 116][Stage 113:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.894122115 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=14", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=14,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407248416 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==========================>                          (61 + 59) / 120][Stage 114:===============================>                     (71 + 49) / 120][Stage 114:=========================================>           (93 + 27) / 120][Stage 114:==================================================>  (115 + 5) / 120]                                                                                [Stage 115:==========================>                          (61 + 60) / 121][Stage 115:=============================>                       (68 + 53) / 121][Stage 115:========================================>            (92 + 29) / 121][Stage 115:==============================================>     (109 + 12) / 121]                                                                                Time elapsed: 3.708511493 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=88", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=88,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404644083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:>                                                      (0 + 0) / 121][Stage 116:==========================>                          (60 + 61) / 121][Stage 116:============================>                        (66 + 55) / 121][Stage 116:=====================================>               (86 + 35) / 121][Stage 116:==================================================>  (115 + 6) / 121][Stage 116:====================================================>(120 + 1) / 121]                                                                                [Stage 117:==========================>                          (61 + 61) / 122][Stage 117:=============================>                       (67 + 55) / 122][Stage 117:=====================================>               (86 + 36) / 122][Stage 117:==============================================>     (110 + 12) / 122][Stage 117:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.151619477 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=127", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=127,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381597319 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (58 + 55) / 113][Stage 118:=============================>                       (62 + 51) / 113][Stage 118:==================================>                  (73 + 40) / 113][Stage 118:============================================>        (94 + 19) / 113][Stage 118:===================================================> (110 + 3) / 113][Stage 118:====================================================>(111 + 2) / 113]                                                                                [Stage 119:===========================>                         (59 + 55) / 114][Stage 119:==============================>                      (66 + 48) / 114][Stage 119:======================================>              (83 + 31) / 114][Stage 119:================================================>    (105 + 9) / 114][Stage 119:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.289619398 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=18", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=18,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358137133 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:>                                                      (0 + 0) / 113][Stage 120:===================================>                 (76 + 37) / 113][Stage 120:=======================================>             (84 + 29) / 113][Stage 120:===========================================>         (93 + 20) / 113][Stage 120:==============================================>     (101 + 12) / 113][Stage 120:===================================================> (109 + 4) / 113]                                                                                [Stage 121:======================================>              (83 + 31) / 114][Stage 121:==========================================>          (91 + 23) / 114][Stage 121:=============================================>      (100 + 14) / 114][Stage 121:=================================================>   (106 + 8) / 114][Stage 121:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.506075247 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=135", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=135,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397182105 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 61) / 121][Stage 122:============================>                        (66 + 55) / 121][Stage 122:======================================>              (89 + 32) / 121][Stage 122:=============================================>      (106 + 15) / 121][Stage 122:=====================================================(121 + 0) / 121]                                                                                [Stage 123:==========================>                          (61 + 61) / 122][Stage 123:===============================>                     (72 + 50) / 122][Stage 123:==========================================>          (98 + 24) / 122][Stage 123:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 2.994452679 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=215", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=215,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362449649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:=====================================>               (80 + 33) / 113][Stage 124:==========================================>          (91 + 22) / 113][Stage 124:==============================================>      (99 + 14) / 113][Stage 124:====================================================>(111 + 2) / 113]                                                                                [Stage 125:===================================>                 (76 + 38) / 114][Stage 125:=========================================>           (89 + 25) / 114][Stage 125:=============================================>       (97 + 17) / 114][Stage 125:=================================================>   (107 + 7) / 114][Stage 125:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.154315757 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=203", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=203,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380979229 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:================================>                    (73 + 45) / 118][Stage 126:===================================>                 (79 + 39) / 118][Stage 126:==========================================>          (95 + 23) / 118][Stage 126:============================================>       (101 + 17) / 118][Stage 126:================================================>    (109 + 9) / 118]                                                                                [Stage 127:=================================>                   (76 + 43) / 119][Stage 127:=====================================>               (84 + 35) / 119][Stage 127:========================================>            (91 + 28) / 119][Stage 127:===============================================>    (109 + 10) / 119][Stage 127:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.43535991 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=218", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=218,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41285831 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (58 + 55) / 113][Stage 128:============================>                        (60 + 53) / 113][Stage 128:=====================================>               (79 + 34) / 113][Stage 128:============================================>        (94 + 19) / 113]                                                                                [Stage 129:===========================>                         (60 + 54) / 114][Stage 129:===============================>                     (67 + 47) / 114][Stage 129:=========================================>           (89 + 25) / 114][Stage 129:=================================================>   (106 + 8) / 114][Stage 129:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.107564804 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=79", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=78 AND partitionZIndex<=79,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384904304 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:===========================>                         (59 + 54) / 113][Stage 130:============================>                        (61 + 52) / 113][Stage 130:===================================>                 (75 + 38) / 113][Stage 130:============================================>        (94 + 19) / 113][Stage 130:==============================================>     (102 + 11) / 113]                                                                                [Stage 131:============================>                        (61 + 53) / 114][Stage 131:=================================>                   (71 + 43) / 114][Stage 131:======================================>              (83 + 31) / 114][Stage 131:==============================================>     (101 + 13) / 114][Stage 131:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.2722192 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=194", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=194,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403891566 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 61) / 121][Stage 132:==============================>                      (70 + 51) / 121][Stage 132:==========================================>          (96 + 25) / 121][Stage 132:===================================================> (117 + 4) / 121]                                                                                [Stage 133:==========================>                          (62 + 60) / 122][Stage 133:==============================>                      (70 + 52) / 122][Stage 133:=======================================>             (91 + 31) / 122][Stage 133:=================================================>   (113 + 9) / 122]                                                                                Time elapsed: 3.112833862 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=125", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=125,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359025027 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=================================>                   (74 + 44) / 118][Stage 134:=====================================>               (84 + 34) / 118][Stage 134:=========================================>           (93 + 25) / 118][Stage 134:===============================================>    (108 + 10) / 118]                                                                                [Stage 135:================================>                    (74 + 45) / 119][Stage 135:=====================================>               (85 + 34) / 119][Stage 135:============================================>       (101 + 18) / 119][Stage 135:=================================================>   (112 + 7) / 119][Stage 135:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.124590941 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=151", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=151,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386738268 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (59 + 54) / 113][Stage 136:=================================>                   (71 + 42) / 113][Stage 136:=======================================>             (84 + 29) / 113][Stage 136:==============================================>     (102 + 11) / 113][Stage 136:====================================================>(112 + 1) / 113]                                                                                [Stage 137:===========================>                         (59 + 55) / 114][Stage 137:==============================>                      (66 + 48) / 114][Stage 137:=======================================>             (85 + 29) / 114][Stage 137:==============================================>     (103 + 11) / 114][Stage 137:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.245614883 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=50", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=50,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39220481 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:============================>                        (61 + 52) / 113][Stage 138:================================>                    (69 + 44) / 113][Stage 138:========================================>            (86 + 27) / 113][Stage 138:=============================================>       (97 + 16) / 113]                                                                                [Stage 139:===========================>                         (59 + 55) / 114][Stage 139:==============================>                      (66 + 48) / 114][Stage 139:=====================================>               (80 + 34) / 114][Stage 139:=============================================>       (98 + 16) / 114][Stage 139:===================================================> (111 + 3) / 114][Stage 139:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.335219364 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=186", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=186,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335690419 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:======================================>              (84 + 31) / 115][Stage 140:==========================================>          (93 + 22) / 115][Stage 140:==============================================>     (103 + 12) / 115][Stage 140:==================================================>  (110 + 5) / 115]                                                                                [Stage 141:======================================>              (85 + 31) / 116][Stage 141:===========================================>         (95 + 21) / 116][Stage 141:==================================================>  (110 + 6) / 116][Stage 141:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.870347323 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=175", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=174 AND partitionZIndex<=175,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400843165 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (63 + 58) / 121][Stage 142:=================================>                   (76 + 45) / 121][Stage 142:========================================>            (92 + 29) / 121][Stage 142:=================================================>   (114 + 7) / 121]                                                                                [Stage 143:==========================>                          (62 + 60) / 122][Stage 143:===================================>                 (81 + 41) / 122][Stage 143:=========================================>           (96 + 26) / 122][Stage 143:==================================================>  (117 + 5) / 122][Stage 143:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.136437883 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=37", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=37,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401162744 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 61) / 121][Stage 144:==========================>                          (61 + 60) / 121][Stage 144:================================>                    (75 + 46) / 121][Stage 144:==========================================>          (97 + 24) / 121][Stage 144:==================================================>  (115 + 6) / 121]                                                                                [Stage 145:===========================>                         (64 + 58) / 122][Stage 145:==================================>                  (80 + 42) / 122][Stage 145:===========================================>        (102 + 20) / 122][Stage 145:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.076441187 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=196", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=196,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396571082 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 60) / 120][Stage 146:============================>                        (64 + 56) / 120][Stage 146:===================================>                 (80 + 40) / 120][Stage 146:===========================================>        (100 + 20) / 120][Stage 146:===================================================> (117 + 3) / 120]                                                                                [Stage 147:==========================>                          (61 + 60) / 121][Stage 147:============================>                        (66 + 55) / 121][Stage 147:======================================>              (89 + 32) / 121][Stage 147:==============================================>     (109 + 12) / 121][Stage 147:==================================================>  (115 + 6) / 121][Stage 147:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.402352166 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=101", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=101,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400240137 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:=============================>                       (63 + 50) / 113][Stage 148:===================================>                 (76 + 37) / 113][Stage 148:========================================>            (86 + 27) / 113][Stage 148:==============================================>     (102 + 11) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:===========================>                         (59 + 55) / 114][Stage 149:==============================>                      (65 + 49) / 114][Stage 149:========================================>            (88 + 26) / 114][Stage 149:================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.092510092 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=220", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=220,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381814835 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (59 + 54) / 113][Stage 150:==================================>                  (73 + 40) / 113][Stage 150:=============================================>       (96 + 17) / 113][Stage 150:====================================================>(111 + 2) / 113][Stage 150:====================================================>(112 + 1) / 113]                                                                                [Stage 151:===========================>                         (59 + 55) / 114][Stage 151:============================>                        (61 + 53) / 114][Stage 151:======================================>              (83 + 31) / 114][Stage 151:================================================>    (105 + 9) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.146427496 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=51", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=51,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385758711 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===============================>                     (69 + 46) / 115][Stage 152:====================================>                (80 + 35) / 115][Stage 152:=============================================>       (98 + 17) / 115][Stage 152:=================================================>   (107 + 8) / 115][Stage 152:====================================================>(114 + 1) / 115]                                                                                [Stage 153:===============================>                     (69 + 47) / 116][Stage 153:======================================>              (85 + 31) / 116][Stage 153:============================================>        (98 + 18) / 116][Stage 153:===============================================>    (106 + 10) / 116][Stage 153:===================================================> (113 + 3) / 116][Stage 153:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.825327997 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=8", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=7 AND partitionZIndex<=8,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361180522 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:====================================>                (77 + 36) / 113][Stage 154:===========================================>         (92 + 21) / 113][Stage 154:==============================================>     (101 + 12) / 113][Stage 154:=================================================>   (106 + 7) / 113][Stage 154:====================================================>(111 + 2) / 113]                                                                                [Stage 155:=================================>                   (72 + 42) / 114][Stage 155:=======================================>             (85 + 29) / 114][Stage 155:============================================>        (95 + 19) / 114][Stage 155:=================================================>   (106 + 8) / 114][Stage 155:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.429049726 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=33", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=33,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465626237 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:============================>                        (61 + 52) / 113][Stage 156:===================================>                 (75 + 38) / 113][Stage 156:==========================================>          (90 + 23) / 113][Stage 156:===================================================> (110 + 3) / 113]                                                                                [Stage 157:===========================>                         (59 + 55) / 114][Stage 157:==============================>                      (65 + 49) / 114][Stage 157:========================================>            (87 + 27) / 114][Stage 157:==============================================>     (103 + 11) / 114][Stage 157:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.100681616 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=134", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=134,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361275539 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:================================>                    (72 + 46) / 118][Stage 158:==================================>                  (76 + 42) / 118][Stage 158:=======================================>             (89 + 29) / 118][Stage 158:============================================>       (101 + 17) / 118][Stage 158:==================================================>  (112 + 6) / 118]                                                                                [Stage 159:=================================>                   (75 + 44) / 119][Stage 159:========================================>            (91 + 28) / 119][Stage 159:============================================>       (101 + 18) / 119][Stage 159:=================================================>   (112 + 7) / 119][Stage 159:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.197284886 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=20", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=20,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333752117 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:=======================================>             (86 + 29) / 115][Stage 160:============================================>        (96 + 19) / 115][Stage 160:==============================================>     (102 + 13) / 115][Stage 160:=================================================>   (108 + 7) / 115]                                                                                [Stage 161:======================================>              (84 + 32) / 116][Stage 161:==========================================>          (92 + 24) / 116][Stage 161:=============================================>      (101 + 15) / 116][Stage 161:=================================================>   (109 + 7) / 116][Stage 161:===================================================> (113 + 3) / 116][Stage 161:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.651442935 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=66", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=66,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433817273 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:=======================================>             (86 + 29) / 115][Stage 162:=============================================>       (98 + 17) / 115][Stage 162:=================================================>   (107 + 8) / 115][Stage 162:===================================================> (111 + 4) / 115]                                                                                [Stage 163:======================================>              (85 + 31) / 116][Stage 163:==========================================>          (93 + 23) / 116][Stage 163:==============================================>     (104 + 12) / 116][Stage 163:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.996046723 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=130", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=130,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396085486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 61) / 121][Stage 164:==============================>                      (70 + 51) / 121][Stage 164:====================================>                (83 + 38) / 121][Stage 164:==========================================>          (96 + 25) / 121][Stage 164:=================================================>   (112 + 9) / 121]                                                                                [Stage 165:==========================>                          (62 + 60) / 122][Stage 165:==============================>                      (71 + 51) / 122][Stage 165:=======================================>             (91 + 31) / 122][Stage 165:==============================================>     (109 + 13) / 122][Stage 165:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.378138975 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=126", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=125 AND partitionZIndex<=126,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392813411 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 61) / 121][Stage 166:===========================>                         (62 + 59) / 121][Stage 166:===============================>                     (73 + 48) / 121][Stage 166:========================================>            (93 + 28) / 121][Stage 166:=================================================>   (112 + 9) / 121]                                                                                [Stage 167:============================>                        (65 + 57) / 122][Stage 167:==================================>                  (79 + 43) / 122][Stage 167:==========================================>          (98 + 24) / 122][Stage 167:===================================================> (119 + 3) / 122][Stage 167:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.228802552 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=214", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=214,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396396064 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==============================>                      (67 + 48) / 115][Stage 168:=====================================>               (81 + 34) / 115][Stage 168:============================================>        (96 + 19) / 115][Stage 168:===================================================> (111 + 4) / 115][Stage 168:====================================================>(114 + 1) / 115]                                                                                [Stage 169:================================>                    (71 + 45) / 116][Stage 169:=========================================>           (90 + 26) / 116][Stage 169:==============================================>     (103 + 13) / 116][Stage 169:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.73442393 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=191", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=191,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417861896 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==========================>                          (60 + 61) / 121][Stage 170:============================>                        (64 + 57) / 121][Stage 170:================================>                    (75 + 46) / 121][Stage 170:=========================================>           (94 + 27) / 121][Stage 170:==================================================>  (116 + 5) / 121]                                                                                [Stage 171:==========================>                          (61 + 61) / 122][Stage 171:==============================>                      (70 + 52) / 122][Stage 171:=====================================>               (87 + 35) / 122][Stage 171:=============================================>      (107 + 15) / 122][Stage 171:====================================================>(120 + 2) / 122][Stage 171:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.241497442 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=81", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=81,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392976086 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (60 + 61) / 121][Stage 172:=============================>                       (68 + 53) / 121][Stage 172:====================================>                (83 + 38) / 121][Stage 172:=============================================>      (107 + 14) / 121][Stage 172:====================================================>(120 + 1) / 121]                                                                                [Stage 173:==========================>                          (61 + 61) / 122][Stage 173:=============================>                       (69 + 53) / 122][Stage 173:====================================>                (83 + 39) / 122][Stage 173:============================================>       (105 + 17) / 122][Stage 173:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.153124545 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=82", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=82,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352277208 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==================================>                  (74 + 39) / 113][Stage 174:======================================>              (82 + 31) / 113][Stage 174:============================================>        (94 + 19) / 113][Stage 174:==================================================>  (107 + 6) / 113][Stage 174:====================================================>(111 + 2) / 113]                                                                                [Stage 175:========================================>            (87 + 27) / 114][Stage 175:============================================>        (96 + 18) / 114][Stage 175:=================================================>   (106 + 8) / 114][Stage 175:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.029356056 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=36", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=36,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351434204 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (72 + 46) / 118][Stage 176:=================================>                   (75 + 43) / 118][Stage 176:======================================>              (85 + 33) / 118][Stage 176:===========================================>         (97 + 21) / 118][Stage 176:=================================================>   (110 + 8) / 118]                                                                                [Stage 177:=================================>                   (76 + 43) / 119][Stage 177:===================================>                 (80 + 39) / 119][Stage 177:=========================================>           (93 + 26) / 119][Stage 177:=============================================>      (104 + 15) / 119][Stage 177:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.317267832 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=15", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=15,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367946193 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==============================>                      (66 + 49) / 115][Stage 178:===================================>                 (76 + 39) / 115][Stage 178:=========================================>           (91 + 24) / 115][Stage 178:===============================================>    (105 + 10) / 115][Stage 178:====================================================>(113 + 2) / 115]                                                                                [Stage 179:====================================>                (79 + 37) / 116][Stage 179:===========================================>         (95 + 21) / 116][Stage 179:==================================================>  (110 + 6) / 116][Stage 179:====================================================>(114 + 2) / 116][Stage 179:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.966288287 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=9", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=9,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402912783 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:============================>                        (64 + 56) / 120][Stage 180:================================>                    (74 + 46) / 120][Stage 180:========================================>            (92 + 28) / 120][Stage 180:=================================================>   (111 + 9) / 120]                                                                                [Stage 181:===========================>                         (63 + 58) / 121][Stage 181:===============================>                     (73 + 48) / 121][Stage 181:=========================================>           (95 + 26) / 121][Stage 181:=================================================>   (112 + 9) / 121]                                                                                Time elapsed: 3.302430179 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=217", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=217,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.489842897 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:====================================>                (79 + 36) / 115][Stage 182:=========================================>           (91 + 24) / 115][Stage 182:=============================================>      (100 + 15) / 115][Stage 182:===================================================> (112 + 3) / 115]                                                                                [Stage 183:===============================>                     (68 + 48) / 116][Stage 183:=====================================>               (82 + 34) / 116][Stage 183:============================================>        (97 + 19) / 116][Stage 183:=================================================>   (109 + 7) / 116][Stage 183:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.925581458 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=43", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=43,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348326064 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:======================================>              (84 + 31) / 115][Stage 184:=========================================>           (89 + 26) / 115][Stage 184:=============================================>      (101 + 14) / 115][Stage 184:===============================================>    (105 + 10) / 115][Stage 184:===================================================> (111 + 4) / 115]                                                                                [Stage 185:======================================>              (85 + 31) / 116][Stage 185:==========================================>          (93 + 23) / 116][Stage 185:===============================================>    (105 + 11) / 116][Stage 185:=================================================>   (109 + 7) / 116][Stage 185:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.474419716 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=97", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=97,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35010711 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:=====================================>               (80 + 33) / 113][Stage 186:==========================================>          (91 + 22) / 113][Stage 186:==============================================>     (102 + 11) / 113][Stage 186:==================================================>  (107 + 6) / 113]                                                                                [Stage 187:======================================>              (83 + 31) / 114][Stage 187:==========================================>          (91 + 23) / 114][Stage 187:==============================================>      (99 + 15) / 114][Stage 187:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.948472633 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=99", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=99,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377024585 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (58 + 55) / 113][Stage 188:===============================>                     (68 + 45) / 113][Stage 188:=========================================>           (88 + 25) / 113][Stage 188:==============================================>     (102 + 11) / 113][Stage 188:====================================================>(112 + 1) / 113]                                                                                [Stage 189:===========================>                         (59 + 55) / 114][Stage 189:==============================>                      (65 + 49) / 114][Stage 189:=======================================>             (85 + 29) / 114][Stage 189:==============================================>     (103 + 11) / 114][Stage 189:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.208069361 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=156", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=156,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357124398 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:================================>                    (73 + 45) / 118][Stage 190:=======================================>             (89 + 29) / 118][Stage 190:============================================>       (102 + 16) / 118][Stage 190:=================================================>   (110 + 8) / 118][Stage 190:====================================================>(117 + 1) / 118]                                                                                [Stage 191:================================>                    (73 + 46) / 119][Stage 191:====================================>                (82 + 37) / 119][Stage 191:========================================>            (92 + 27) / 119][Stage 191:=============================================>      (105 + 14) / 119][Stage 191:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.318253663 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=23", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=23,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3906703 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (62 + 59) / 121][Stage 192:===============================>                     (72 + 49) / 121][Stage 192:=========================================>           (95 + 26) / 121][Stage 192:=================================================>   (112 + 9) / 121][Stage 192:====================================================>(120 + 1) / 121]                                                                                [Stage 193:==========================>                          (61 + 61) / 122][Stage 193:=============================>                       (67 + 55) / 122][Stage 193:=====================================>               (86 + 36) / 122][Stage 193:==============================================>     (109 + 13) / 122][Stage 193:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.284263903 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=208", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=208,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409330199 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (58 + 55) / 113][Stage 194:=============================>                       (62 + 51) / 113][Stage 194:=====================================>               (80 + 33) / 113][Stage 194:============================================>        (95 + 18) / 113][Stage 194:==================================================>  (107 + 6) / 113]                                                                                [Stage 195:===========================>                         (60 + 54) / 114][Stage 195:===================================>                 (77 + 37) / 114][Stage 195:=============================================>       (98 + 16) / 114][Stage 195:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.048319117 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=198", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=198,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381260598 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:==============================>                      (67 + 48) / 115][Stage 196:======================================>              (83 + 32) / 115][Stage 196:=============================================>      (101 + 14) / 115][Stage 196:===================================================> (111 + 4) / 115]                                                                                [Stage 197:=====================================>               (81 + 35) / 116][Stage 197:=============================================>       (99 + 17) / 116][Stage 197:================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.745627226 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=29", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=29,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424770183 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (59 + 54) / 113][Stage 198:=============================>                       (63 + 50) / 113][Stage 198:=====================================>               (79 + 34) / 113][Stage 198:==============================================>     (101 + 12) / 113][Stage 198:===================================================> (110 + 3) / 113]                                                                                [Stage 199:=============================>                       (64 + 50) / 114][Stage 199:==================================>                  (74 + 40) / 114][Stage 199:=========================================>           (89 + 25) / 114][Stage 199:================================================>    (105 + 9) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.862023823 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=71", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=71,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352777652 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=====================================>               (81 + 32) / 113][Stage 200:==========================================>          (90 + 23) / 113][Stage 200:===============================================>    (103 + 10) / 113][Stage 200:==================================================>  (108 + 5) / 113]                                                                                [Stage 201:=====================================>               (81 + 33) / 114][Stage 201:===========================================>         (94 + 20) / 114][Stage 201:=============================================>      (100 + 14) / 114][Stage 201:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.009106433 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m3.304s
user	11m38.072s
sys	0m38.316s
