Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 21:03:44 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 21:03:59 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 21:03:59 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 21:04:00 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 21:04:02 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 21:04:12 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524210401-0594).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 4.381730632 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:=======================>                               (49 + 66) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:=======================================>               (82 + 33) / 115][Stage 0:==============================================>        (97 + 18) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:====================================================>  (110 + 5) / 115]                                                                                [Stage 1:==========================>                            (55 + 61) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:===================================>                   (74 + 42) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:=======================================>               (84 + 32) / 116][Stage 1:===========================================>           (92 + 24) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:====================================================>  (111 + 5) / 116]                                                                                Time elapsed: 12.645852802 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 38 AND partitionZIndex<=138", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.782011211 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 2:======================>                                (46 + 67) / 113][Stage 2:=========================>                             (52 + 61) / 113][Stage 2:============================>                          (58 + 55) / 113][Stage 2:=============================>                         (61 + 52) / 113][Stage 2:==============================>                        (63 + 50) / 113][Stage 2:=====================================>                 (77 + 36) / 113][Stage 2:============================================>          (92 + 21) / 113][Stage 2:================================================>      (99 + 14) / 113][Stage 2:=====================================================> (109 + 4) / 113]                                                                                [Stage 3:===========================>                           (57 + 57) / 114][Stage 3:============================>                          (59 + 55) / 114][Stage 3:================================>                      (67 + 47) / 114][Stage 3:=====================================>                 (77 + 37) / 114][Stage 3:==========================================>            (88 + 26) / 114][Stage 3:===============================================>      (101 + 13) / 114][Stage 3:=====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.604738218 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 6 AND partitionZIndex<=56", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=56 AND partitionZIndex<=56,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.704284544 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 4:================================>                      (70 + 48) / 118][Stage 4:==================================>                    (74 + 44) / 118][Stage 4:======================================>                (82 + 36) / 118][Stage 4:=========================================>             (89 + 29) / 118][Stage 4:==============================================>        (99 + 19) / 118][Stage 4:==============================================>       (102 + 16) / 118][Stage 4:=====================================================> (114 + 4) / 118]                                                                                [Stage 5:=================================>                     (73 + 46) / 119][Stage 5:===================================>                   (77 + 42) / 119][Stage 5:=======================================>               (85 + 34) / 119][Stage 5:============================================>          (96 + 23) / 119][Stage 5:==============================================>       (103 + 16) / 119][Stage 5:==================================================>    (110 + 9) / 119][Stage 5:======================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.359849174 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 4 AND partitionZIndex<=74", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=74,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.661812222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=========================>                             (53 + 60) / 113][Stage 6:============================>                          (58 + 55) / 113][Stage 6:============================>                          (59 + 54) / 113][Stage 6:=================================>                     (69 + 44) / 113][Stage 6:======================================>                (79 + 34) / 113][Stage 6:============================================>          (92 + 21) / 113][Stage 6:================================================>     (102 + 11) / 113][Stage 6:=====================================================> (110 + 3) / 113][Stage 6:======================================================>(112 + 1) / 113]                                                                                [Stage 7:============================>                          (60 + 54) / 114][Stage 7:=============================>                         (61 + 53) / 114][Stage 7:==================================>                    (72 + 42) / 114][Stage 7:==========================================>            (89 + 25) / 114][Stage 7:===============================================>      (101 + 13) / 114][Stage 7:====================================================>  (109 + 5) / 114][Stage 7:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.264083929 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 21 AND partitionZIndex<=221", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=221,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.641507424 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (60 + 61) / 121][Stage 8:==============================>                        (66 + 55) / 121][Stage 8:===================================>                   (78 + 43) / 121][Stage 8:=============================================>        (101 + 20) / 121][Stage 8:=================================================>    (110 + 11) / 121][Stage 8:=====================================================> (117 + 4) / 121]                                                                                [Stage 9:===========================>                           (61 + 61) / 122][Stage 9:=============================>                         (65 + 57) / 122][Stage 9:=================================>                     (75 + 47) / 122][Stage 9:=========================================>             (92 + 30) / 122][Stage 9:==================================================>    (113 + 9) / 122][Stage 9:======================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.95518747 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 4 AND partitionZIndex<=84", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=84,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.547761168 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==============================>                       (66 + 49) / 115][Stage 10:=================================>                    (72 + 43) / 115][Stage 10:=======================================>              (85 + 30) / 115][Stage 10:============================================>         (94 + 21) / 115][Stage 10:==============================================>      (100 + 15) / 115][Stage 10:===================================================>  (109 + 6) / 115][Stage 10:=====================================================>(114 + 1) / 115]                                                                                [Stage 11:==============================>                       (66 + 50) / 116][Stage 11:==================================>                   (74 + 42) / 116][Stage 11:==========================================>           (92 + 24) / 116][Stage 11:==============================================>      (102 + 14) / 116][Stage 11:=================================================>    (107 + 9) / 116][Stage 11:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.733567967 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 33 AND partitionZIndex<=133", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=133,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.44991534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 12:====================================>                 (78 + 37) / 115][Stage 12:======================================>               (83 + 32) / 115][Stage 12:=============================================>        (96 + 19) / 115][Stage 12:================================================>    (105 + 10) / 115][Stage 12:===================================================>  (110 + 5) / 115][Stage 12:====================================================> (111 + 4) / 115][Stage 12:====================================================> (112 + 3) / 115]                                                                                [Stage 13:======================================>               (82 + 34) / 116][Stage 13:===========================================>          (93 + 23) / 116][Stage 13:==================================================>   (108 + 8) / 116][Stage 13:====================================================> (113 + 3) / 116][Stage 13:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.082506461 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 01 AND partitionZIndex<=101", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=101,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.532540047 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===============================>                      (69 + 49) / 118][Stage 14:=================================>                    (74 + 44) / 118][Stage 14:===================================>                  (77 + 41) / 118][Stage 14:====================================>                 (80 + 38) / 118][Stage 14:========================================>             (89 + 29) / 118][Stage 14:=============================================>       (101 + 17) / 118][Stage 14:================================================>    (107 + 11) / 118][Stage 14:====================================================> (114 + 4) / 118][Stage 14:=====================================================>(117 + 1) / 118]                                                                                [Stage 15:================================>                     (71 + 48) / 119][Stage 15:==================================>                   (75 + 44) / 119][Stage 15:====================================>                 (81 + 38) / 119][Stage 15:=======================================>              (86 + 33) / 119][Stage 15:============================================>        (100 + 19) / 119][Stage 15:==============================================>      (105 + 14) / 119][Stage 15:==================================================>   (112 + 7) / 119][Stage 15:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 4.757640411 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 05 AND partitionZIndex<=105", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=105,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.554443255 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (57 + 56) / 113][Stage 16:============================>                         (60 + 53) / 113][Stage 16:=================================>                    (71 + 42) / 113][Stage 16:==========================================>           (89 + 24) / 113][Stage 16:==============================================>       (97 + 16) / 113][Stage 16:===================================================>  (108 + 5) / 113]                                                                                [Stage 17:============================>                         (60 + 54) / 114][Stage 17:================================>                     (69 + 45) / 114][Stage 17:========================================>             (85 + 29) / 114][Stage 17:==============================================>      (100 + 14) / 114][Stage 17:==================================================>   (107 + 7) / 114][Stage 17:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.731414665 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 00 AND partitionZIndex<=200", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=200,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.54203942 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (60 + 60) / 120][Stage 18:===========================>                          (61 + 59) / 120][Stage 18:===============================>                      (71 + 49) / 120][Stage 18:=========================================>            (92 + 28) / 120][Stage 18:==================================================>   (113 + 7) / 120][Stage 18:=====================================================>(118 + 2) / 120]                                                                                [Stage 19:===========================>                          (62 + 59) / 121][Stage 19:===============================>                      (70 + 51) / 121][Stage 19:=====================================>                (85 + 36) / 121][Stage 19:=============================================>       (105 + 16) / 121][Stage 19:====================================================> (118 + 3) / 121][Stage 19:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.759280502 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 02 AND partitionZIndex<=102", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=102,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.468356041 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 20:======================================>               (83 + 32) / 115][Stage 20:===========================================>          (93 + 22) / 115][Stage 20:==================================================>   (107 + 8) / 115]                                                                                [Stage 21:=======================================>              (84 + 32) / 116][Stage 21:============================================>         (96 + 20) / 116][Stage 21:===============================================>     (105 + 11) / 116][Stage 21:===================================================>  (111 + 5) / 116][Stage 21:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.990677313 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 16 AND partitionZIndex<=116", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.419959998 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 22:======================================>               (81 + 34) / 115][Stage 22:==========================================>           (90 + 25) / 115][Stage 22:===============================================>     (103 + 12) / 115][Stage 22:===================================================>  (110 + 5) / 115][Stage 22:=====================================================>(113 + 2) / 115]                                                                                [Stage 23:=======================================>              (84 + 32) / 116][Stage 23:==========================================>           (92 + 24) / 116][Stage 23:===============================================>     (105 + 11) / 116][Stage 23:===================================================>  (110 + 6) / 116][Stage 23:===================================================>  (111 + 5) / 116][Stage 23:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 4.210876101 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 97 AND partitionZIndex<=197", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=197,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.541335944 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (60 + 61) / 121][Stage 24:==============================>                       (69 + 52) / 121][Stage 24:=====================================>                (83 + 38) / 121][Stage 24:=================================================>    (112 + 9) / 121][Stage 24:=====================================================>(119 + 2) / 121]                                                                                [Stage 25:===========================>                          (62 + 60) / 122][Stage 25:==============================>                       (69 + 53) / 122][Stage 25:======================================>               (87 + 35) / 122][Stage 25:==============================================>      (108 + 14) / 122][Stage 25:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.524495277 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 19 AND partitionZIndex<=219", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=219,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.503906273 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (60 + 60) / 120][Stage 26:==============================>                       (67 + 53) / 120][Stage 26:==================================>                   (77 + 43) / 120][Stage 26:=============================================>       (104 + 16) / 120][Stage 26:===================================================>  (115 + 5) / 120]                                                                                [Stage 27:===========================>                          (61 + 60) / 121][Stage 27:===========================>                          (62 + 59) / 121][Stage 27:================================>                     (72 + 49) / 121][Stage 27:=========================================>            (92 + 29) / 121][Stage 27:===================================================>  (116 + 5) / 121][Stage 27:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.473129954 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 15 AND partitionZIndex<=215", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=215,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.499191361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (60 + 60) / 120][Stage 28:============================>                         (63 + 57) / 120][Stage 28:===================================>                  (79 + 41) / 120][Stage 28:=============================================>       (102 + 18) / 120][Stage 28:==================================================>   (113 + 7) / 120][Stage 28:====================================================> (116 + 4) / 120]                                                                                [Stage 29:============================>                         (63 + 58) / 121][Stage 29:=================================>                    (76 + 45) / 121][Stage 29:============================================>         (99 + 22) / 121][Stage 29:===================================================>  (115 + 6) / 121][Stage 29:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.584770802 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8  AND partitionZIndex<=8", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=8,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.486500404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (58 + 55) / 113][Stage 30:=============================>                        (61 + 52) / 113][Stage 30:===================================>                  (75 + 38) / 113][Stage 30:=============================================>        (95 + 18) / 113][Stage 30:==================================================>   (106 + 7) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:===========================>                          (59 + 55) / 114][Stage 31:=============================>                        (63 + 51) / 114][Stage 31:==================================>                   (73 + 41) / 114][Stage 31:==========================================>           (89 + 25) / 114][Stage 31:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.399079234 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 2 AND partitionZIndex<=12", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=12,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.496747356 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (60 + 60) / 120][Stage 32:===========================>                          (62 + 58) / 120][Stage 32:=====================================>                (83 + 37) / 120][Stage 32:===============================================>     (108 + 12) / 120][Stage 32:=====================================================>(118 + 2) / 120]                                                                                [Stage 33:============================>                         (64 + 57) / 121][Stage 33:==============================>                       (69 + 52) / 121][Stage 33:==========================================>           (96 + 25) / 121][Stage 33:==================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.353129007 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 13 AND partitionZIndex<=213", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=213,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.518312424 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (58 + 55) / 113][Stage 34:===============================>                      (65 + 48) / 113][Stage 34:=====================================>                (78 + 35) / 113][Stage 34:================================================>    (103 + 10) / 113][Stage 34:====================================================> (110 + 3) / 113]                                                                                [Stage 35:============================>                         (60 + 54) / 114][Stage 35:================================>                     (69 + 45) / 114][Stage 35:=========================================>            (88 + 26) / 114][Stage 35:================================================>    (104 + 10) / 114]                                                                                Time elapsed: 3.155879242 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 21 AND partitionZIndex<=121", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=121,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.495770197 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (60 + 60) / 120][Stage 36:=============================>                        (65 + 55) / 120][Stage 36:====================================>                 (81 + 39) / 120][Stage 36:========================================>             (89 + 31) / 120][Stage 36:================================================>    (109 + 11) / 120][Stage 36:=====================================================>(118 + 2) / 120]                                                                                [Stage 37:=============================>                        (65 + 56) / 121][Stage 37:=================================>                    (74 + 47) / 121][Stage 37:=======================================>              (89 + 32) / 121][Stage 37:=============================================>       (105 + 16) / 121][Stage 37:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.412273547 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6  AND partitionZIndex<=6", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=6,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.434298092 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==================================>                   (73 + 40) / 113][Stage 38:========================================>             (85 + 28) / 113][Stage 38:==============================================>       (97 + 16) / 113][Stage 38:===================================================>  (107 + 6) / 113][Stage 38:=====================================================>(112 + 1) / 113]                                                                                [Stage 39:======================================>               (81 + 33) / 114][Stage 39:=========================================>            (88 + 26) / 114][Stage 39:==============================================>      (100 + 14) / 114][Stage 39:====================================================> (110 + 4) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.722068755 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 5 AND partitionZIndex<=25", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.490904445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==========================>                           (60 + 61) / 121][Stage 40:=============================>                        (65 + 56) / 121][Stage 40:======================================>               (87 + 34) / 121][Stage 40:================================================>    (110 + 11) / 121][Stage 40:=====================================================>(120 + 1) / 121]                                                                                [Stage 41:===========================>                          (61 + 61) / 122][Stage 41:=============================>                        (66 + 56) / 122][Stage 41:======================================>               (87 + 35) / 122][Stage 41:===============================================>     (110 + 12) / 122][Stage 41:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.172278863 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 1 AND partitionZIndex<=11", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=11,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.477777887 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==============================>                       (65 + 50) / 115][Stage 42:=====================================>                (79 + 36) / 115][Stage 42:==========================================>           (90 + 25) / 115][Stage 42:==============================================>      (101 + 14) / 115][Stage 42:=====================================================>(113 + 2) / 115]                                                                                [Stage 43:===============================>                      (67 + 49) / 116][Stage 43:====================================>                 (78 + 38) / 116][Stage 43:============================================>         (96 + 20) / 116][Stage 43:===============================================>     (103 + 13) / 116][Stage 43:===================================================>  (110 + 6) / 116][Stage 43:====================================================> (112 + 4) / 116][Stage 43:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.710885765 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 51 AND partitionZIndex<=151", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=151,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.411606628 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 44:================================>                     (72 + 46) / 118][Stage 44:=====================================>                (82 + 36) / 118][Stage 44:============================================>         (98 + 20) / 118][Stage 44:==================================================>   (111 + 7) / 118][Stage 44:=====================================================>(117 + 1) / 118]                                                                                [Stage 45:=================================>                    (73 + 46) / 119][Stage 45:==================================>                   (77 + 42) / 119][Stage 45:=========================================>            (91 + 28) / 119][Stage 45:===============================================>     (107 + 12) / 119][Stage 45:=====================================================>(117 + 2) / 119][Stage 45:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.340158013 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 92 AND partitionZIndex<=192", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=192,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.390797286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 46:======================================>               (82 + 33) / 115][Stage 46:===========================================>          (93 + 22) / 115][Stage 46:==============================================>       (99 + 16) / 115][Stage 46:===================================================>  (110 + 5) / 115][Stage 46:=====================================================>(114 + 1) / 115]                                                                                [Stage 47:========================================>             (86 + 30) / 116][Stage 47:=============================================>        (98 + 18) / 116][Stage 47:==================================================>   (109 + 7) / 116][Stage 47:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.00649127 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 24 AND partitionZIndex<=124", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=124,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.416602786 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=====================================>                (78 + 35) / 113][Stage 48:==========================================>           (88 + 25) / 113][Stage 48:=============================================>        (96 + 17) / 113][Stage 48:=================================================>    (104 + 9) / 113][Stage 48:=====================================================>(111 + 2) / 113]                                                                                [Stage 49:=======================================>              (83 + 31) / 114][Stage 49:=========================================>            (88 + 26) / 114][Stage 49:==============================================>       (99 + 15) / 114][Stage 49:====================================================> (110 + 4) / 114][Stage 49:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.236804158 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 93 AND partitionZIndex<=193", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=193 AND partitionZIndex<=193,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.414760742 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 50:=================================>                    (71 + 42) / 113][Stage 50:=====================================>                (78 + 35) / 113][Stage 50:==========================================>           (88 + 25) / 113][Stage 50:===============================================>     (102 + 11) / 113][Stage 50:===================================================>  (108 + 5) / 113]                                                                                [Stage 51:=======================================>              (83 + 31) / 114][Stage 51:============================================>         (93 + 21) / 114][Stage 51:================================================>    (104 + 10) / 114][Stage 51:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.069100218 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 62 AND partitionZIndex<=162", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=162,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.472855019 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==========================>                           (60 + 61) / 121][Stage 52:==============================>                       (69 + 52) / 121][Stage 52:==================================>                   (78 + 43) / 121][Stage 52:=============================================>       (103 + 18) / 121][Stage 52:=====================================================>(119 + 2) / 121]                                                                                [Stage 53:===========================>                          (62 + 60) / 122][Stage 53:===============================>                      (72 + 50) / 122][Stage 53:======================================>               (86 + 36) / 122][Stage 53:==============================================>      (106 + 16) / 122][Stage 53:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.235444634 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 7 AND partitionZIndex<=37", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=37,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.440267402 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 54:>                                                       (0 + 0) / 113][Stage 54:============================>                         (59 + 54) / 113][Stage 54:===============================>                      (66 + 47) / 113][Stage 54:=====================================>                (78 + 35) / 113][Stage 54:=========================================>            (87 + 26) / 113][Stage 54:==================================================>   (105 + 8) / 113]                                                                                [Stage 55:==============================>                       (64 + 50) / 114][Stage 55:=================================>                    (71 + 43) / 114][Stage 55:=========================================>            (87 + 27) / 114][Stage 55:===============================================>     (102 + 12) / 114][Stage 55:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.354040465 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 2 AND partitionZIndex<=32", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=32 AND partitionZIndex<=32,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397228172 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 56:====================================>                 (77 + 36) / 113][Stage 56:===========================================>          (90 + 23) / 113][Stage 56:===============================================>     (101 + 12) / 113][Stage 56:===================================================>  (108 + 5) / 113][Stage 56:=====================================================>(111 + 2) / 113][Stage 56:=====================================================>(112 + 1) / 113]                                                                                [Stage 57:===================================>                  (75 + 39) / 114][Stage 57:========================================>             (85 + 29) / 114][Stage 57:==============================================>       (98 + 16) / 114][Stage 57:===================================================>  (108 + 6) / 114][Stage 57:====================================================> (111 + 3) / 114][Stage 57:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.576366335 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5  AND partitionZIndex<=5", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=5,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.453339364 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:============================>                         (63 + 57) / 120][Stage 58:===================================>                  (79 + 41) / 120][Stage 58:=============================================>       (103 + 17) / 120]                                                                                [Stage 59:==========================>                           (60 + 61) / 121][Stage 59:=================================>                    (74 + 47) / 121][Stage 59:=======================================>              (88 + 33) / 121][Stage 59:=============================================>       (105 + 16) / 121]                                                                                Time elapsed: 3.045375184 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 7 AND partitionZIndex<=67", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=67,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.388550148 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 60:=====================================>                (79 + 36) / 115][Stage 60:=======================================>              (85 + 30) / 115][Stage 60:==============================================>       (98 + 17) / 115][Stage 60:==================================================>   (108 + 7) / 115][Stage 60:====================================================> (111 + 4) / 115]                                                                                [Stage 61:=======================================>              (85 + 31) / 116][Stage 61:==========================================>           (92 + 24) / 116][Stage 61:===============================================>     (104 + 12) / 116][Stage 61:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.891873422 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 7 AND partitionZIndex<=57", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=57,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.47429161 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 62:=========================>                            (57 + 64) / 121][Stage 62:=============================>                        (65 + 56) / 121][Stage 62:==================================>                   (78 + 43) / 121][Stage 62:===========================================>          (98 + 23) / 121][Stage 62:===================================================>  (115 + 6) / 121][Stage 62:=====================================================>(120 + 1) / 121]                                                                                [Stage 63:===========================>                          (62 + 60) / 122][Stage 63:==============================>                       (70 + 52) / 122][Stage 63:===================================>                  (81 + 41) / 122][Stage 63:===============================================>     (110 + 12) / 122]                                                                                Time elapsed: 3.180253094 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 45 AND partitionZIndex<=245", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398602021 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 64:====================================>                 (77 + 36) / 113][Stage 64:========================================>             (85 + 28) / 113][Stage 64:==============================================>       (97 + 16) / 113][Stage 64:==================================================>   (105 + 8) / 113][Stage 64:====================================================> (110 + 3) / 113]                                                                                [Stage 65:====================================>                 (76 + 38) / 114][Stage 65:=========================================>            (88 + 26) / 114][Stage 65:==============================================>       (98 + 16) / 114][Stage 65:===================================================>  (108 + 6) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.997878764 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 40 AND partitionZIndex<=140", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=140 AND partitionZIndex<=140,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.423083957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 66:================================>                     (72 + 46) / 118][Stage 66:===================================>                  (77 + 41) / 118][Stage 66:========================================>             (89 + 29) / 118][Stage 66:============================================>        (100 + 18) / 118][Stage 66:=================================================>    (109 + 9) / 118][Stage 66:=====================================================>(117 + 1) / 118]                                                                                [Stage 67:=================================>                    (73 + 46) / 119][Stage 67:===================================>                  (78 + 41) / 119][Stage 67:==========================================>           (94 + 25) / 119][Stage 67:==============================================>      (105 + 14) / 119][Stage 67:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.25485878 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 2 AND partitionZIndex<=52", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=52,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.461140955 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 68:===========================>                          (62 + 58) / 120][Stage 68:===================================>                  (78 + 42) / 120][Stage 68:===========================================>          (96 + 24) / 120][Stage 68:=====================================================>(119 + 1) / 120]                                                                                [Stage 69:=============================>                        (65 + 56) / 121][Stage 69:=================================>                    (75 + 46) / 121][Stage 69:============================================>         (99 + 22) / 121][Stage 69:==================================================>   (113 + 8) / 121]                                                                                Time elapsed: 2.999547327 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 3 AND partitionZIndex<=73", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=73,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.469441561 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (59 + 54) / 113][Stage 70:===============================>                      (65 + 48) / 113][Stage 70:=======================================>              (82 + 31) / 113][Stage 70:===============================================>     (102 + 11) / 113][Stage 70:=====================================================>(111 + 2) / 113]                                                                                [Stage 71:===========================>                          (59 + 55) / 114][Stage 71:==============================>                       (65 + 49) / 114][Stage 71:=====================================>                (80 + 34) / 114][Stage 71:==============================================>      (100 + 14) / 114][Stage 71:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.069162189 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 64 AND partitionZIndex<=164", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=164,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.388356994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==================================>                   (72 + 41) / 113][Stage 72:========================================>             (85 + 28) / 113][Stage 72:=============================================>        (96 + 17) / 113][Stage 72:=================================================>    (104 + 9) / 113][Stage 72:=====================================================>(111 + 2) / 113]                                                                                [Stage 73:====================================>                 (76 + 38) / 114][Stage 73:==========================================>           (89 + 25) / 114][Stage 73:=============================================>        (96 + 18) / 114][Stage 73:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 2.888717523 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 63 AND partitionZIndex<=163", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=163,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.424825527 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (62 + 58) / 120][Stage 74:================================>                     (72 + 48) / 120][Stage 74:=========================================>            (93 + 27) / 120][Stage 74:==================================================>   (112 + 8) / 120]                                                                                [Stage 75:=============================>                        (65 + 56) / 121][Stage 75:=================================>                    (76 + 45) / 121][Stage 75:======================================>               (86 + 35) / 121][Stage 75:=============================================>       (105 + 16) / 121][Stage 75:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.148913852 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 3 AND partitionZIndex<=63", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=63,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.38973292 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 76:================================>                     (72 + 46) / 118][Stage 76:===================================>                  (78 + 40) / 118][Stage 76:=========================================>            (90 + 28) / 118][Stage 76:===================================================>  (113 + 5) / 118]                                                                                [Stage 77:=================================>                    (74 + 45) / 119][Stage 77:======================================>               (84 + 35) / 119][Stage 77:===========================================>          (95 + 24) / 119][Stage 77:==================================================>   (111 + 8) / 119][Stage 77:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.089968879 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 6 AND partitionZIndex<=96", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=96,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.436847466 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (64 + 56) / 120][Stage 78:=================================>                    (75 + 45) / 120][Stage 78:=========================================>            (92 + 28) / 120][Stage 78:==================================================>   (112 + 8) / 120]                                                                                [Stage 79:===========================>                          (62 + 59) / 121][Stage 79:=================================>                    (75 + 46) / 121][Stage 79:=========================================>            (92 + 29) / 121][Stage 79:================================================>    (110 + 11) / 121][Stage 79:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.19428507 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 39 AND partitionZIndex<=139", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=139,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.367277433 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 80:=====================================>                (78 + 35) / 113][Stage 80:===========================================>          (92 + 21) / 113][Stage 80:===============================================>      (99 + 14) / 113][Stage 80:====================================================> (109 + 4) / 113]                                                                                [Stage 81:====================================>                 (76 + 38) / 114][Stage 81:============================================>         (93 + 21) / 114][Stage 81:===============================================>     (102 + 12) / 114][Stage 81:====================================================> (110 + 4) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.207019779 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 3 AND partitionZIndex<=13", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=13,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.35314171 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 82:=====================================>                (80 + 35) / 115][Stage 82:========================================>             (86 + 29) / 115][Stage 82:==============================================>       (98 + 17) / 115][Stage 82:===================================================>  (110 + 5) / 115]                                                                                [Stage 83:======================================>               (82 + 34) / 116][Stage 83:========================================>             (88 + 28) / 116][Stage 83:===============================================>     (103 + 13) / 116][Stage 83:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.811807406 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 54 AND partitionZIndex<=154", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=154,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.394563979 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 84:================================>                     (69 + 46) / 115][Stage 84:=======================================>              (84 + 31) / 115][Stage 84:=============================================>        (97 + 18) / 115][Stage 84:===================================================>  (109 + 6) / 115]                                                                                [Stage 85:==================================>                   (75 + 41) / 116][Stage 85:========================================>             (87 + 29) / 116][Stage 85:===============================================>     (104 + 12) / 116][Stage 85:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.806712499 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 7 AND partitionZIndex<=17", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=17,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.399273975 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 86:=================================>                    (73 + 45) / 118][Stage 86:===================================>                  (77 + 41) / 118][Stage 86:===========================================>          (94 + 24) / 118][Stage 86:==================================================>   (110 + 8) / 118]                                                                                [Stage 87:==================================>                   (76 + 43) / 119][Stage 87:======================================>               (85 + 34) / 119][Stage 87:===============================================>     (106 + 13) / 119][Stage 87:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.842349376 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 66 AND partitionZIndex<=166", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=166,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.423410811 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 88:==========================>                           (60 + 61) / 121][Stage 88:=============================>                        (66 + 55) / 121][Stage 88:====================================>                 (82 + 39) / 121][Stage 88:==============================================>      (107 + 14) / 121][Stage 88:=====================================================>(120 + 1) / 121]                                                                                [Stage 89:===========================>                          (61 + 61) / 122][Stage 89:==============================>                       (70 + 52) / 122][Stage 89:======================================>               (87 + 35) / 122][Stage 89:===============================================>     (110 + 12) / 122]                                                                                Time elapsed: 2.956487578 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 43 AND partitionZIndex<=243", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=243,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397273991 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 90:====================================>                 (77 + 36) / 113][Stage 90:=========================================>            (86 + 27) / 113][Stage 90:===============================================>     (102 + 11) / 113][Stage 90:==================================================>   (105 + 8) / 113][Stage 90:=====================================================>(112 + 1) / 113]                                                                                [Stage 91:=====================================>                (79 + 35) / 114][Stage 91:===========================================>          (91 + 23) / 114][Stage 91:==============================================>       (99 + 15) / 114][Stage 91:====================================================> (110 + 4) / 114][Stage 91:=====================================================>(112 + 2) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.392779738 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 0 AND partitionZIndex<=10", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=10,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.381014382 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 92:=======================================>              (82 + 31) / 113][Stage 92:===========================================>          (92 + 21) / 113][Stage 92:==================================================>   (105 + 8) / 113][Stage 92:=====================================================>(111 + 2) / 113]                                                                                [Stage 93:=====================================>                (79 + 35) / 114][Stage 93:==========================================>           (90 + 24) / 114][Stage 93:===============================================>     (103 + 11) / 114][Stage 93:====================================================> (110 + 4) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.330845156 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 06 AND partitionZIndex<=206", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=206,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.418423559 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (60 + 60) / 120][Stage 94:============================>                         (64 + 56) / 120][Stage 94:======================================>               (85 + 35) / 120][Stage 94:===============================================>     (107 + 13) / 120][Stage 94:=====================================================>(119 + 1) / 120]                                                                                [Stage 95:===========================>                          (61 + 60) / 121][Stage 95:==============================>                       (69 + 52) / 121][Stage 95:====================================>                 (81 + 40) / 121][Stage 95:================================================>    (110 + 11) / 121][Stage 95:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.147730537 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 38 AND partitionZIndex<=238", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=238,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.391128255 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 96:==============================>                       (65 + 50) / 115][Stage 96:=======================================>              (84 + 31) / 115][Stage 96:=============================================>        (96 + 19) / 115][Stage 96:==================================================>   (107 + 8) / 115][Stage 96:====================================================> (111 + 4) / 115]                                                                                [Stage 97:=================================>                    (73 + 43) / 116][Stage 97:==========================================>           (92 + 24) / 116][Stage 97:==============================================>      (101 + 15) / 116][Stage 97:=================================================>    (107 + 9) / 116][Stage 97:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.192234545 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 34 AND partitionZIndex<=234", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=234,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.387084904 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 98:================================>                     (70 + 45) / 115][Stage 98:========================================>             (86 + 29) / 115][Stage 98:===============================================>     (103 + 12) / 115][Stage 98:====================================================> (111 + 4) / 115]                                                                                [Stage 99:==================================>                   (75 + 41) / 116][Stage 99:==========================================>           (92 + 24) / 116][Stage 99:===============================================>     (105 + 11) / 116][Stage 99:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.827193858 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 4 AND partitionZIndex<=44", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=44,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.404132398 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (59 + 54) / 113][Stage 100:===============================>                     (67 + 46) / 113][Stage 100:========================================>            (87 + 26) / 113][Stage 100:==============================================>     (101 + 12) / 113][Stage 100:===================================================> (109 + 4) / 113]                                                                                [Stage 101:============================>                        (61 + 53) / 114][Stage 101:====================================>                (79 + 35) / 114][Stage 101:===========================================>         (94 + 20) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.056111619 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 9 AND partitionZIndex<=19", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=19,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.417513661 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (61 + 59) / 120][Stage 102:===============================>                     (71 + 49) / 120][Stage 102:======================================>              (88 + 32) / 120][Stage 102:=================================================>   (111 + 9) / 120]                                                                                [Stage 103:==========================>                          (61 + 60) / 121][Stage 103:=================================>                   (76 + 45) / 121][Stage 103:==========================================>          (97 + 24) / 121][Stage 103:==================================================>  (116 + 5) / 121]                                                                                Time elapsed: 2.941657171 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 27 AND partitionZIndex<=127", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=127,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.389714936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 104:=================================>                   (73 + 42) / 115][Stage 104:=====================================>               (82 + 33) / 115][Stage 104:=============================================>       (99 + 16) / 115]                                                                                [Stage 105:================================>                    (71 + 45) / 116][Stage 105:=======================================>             (86 + 30) / 116][Stage 105:============================================>        (98 + 18) / 116][Stage 105:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.617146146 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 30 AND partitionZIndex<=130", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=130,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.363358935 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===================================>                 (75 + 38) / 113][Stage 106:========================================>            (87 + 26) / 113][Stage 106:==============================================>      (99 + 14) / 113][Stage 106:==================================================>  (108 + 5) / 113][Stage 106:====================================================>(111 + 2) / 113]                                                                                [Stage 107:======================================>              (83 + 31) / 114][Stage 107:=============================================>       (97 + 17) / 114][Stage 107:=================================================>   (106 + 8) / 114][Stage 107:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.114224884 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 47 AND partitionZIndex<=247", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=247 AND partitionZIndex<=247,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.404506124 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===========================>                         (59 + 54) / 113][Stage 108:==============================>                      (65 + 48) / 113][Stage 108:=====================================>               (80 + 33) / 113][Stage 108:=============================================>       (96 + 17) / 113][Stage 108:===================================================> (110 + 3) / 113]                                                                                [Stage 109:===========================>                         (59 + 55) / 114][Stage 109:============================>                        (62 + 52) / 114][Stage 109:==================================>                  (75 + 39) / 114][Stage 109:===========================================>         (94 + 20) / 114][Stage 109:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.001966802 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 8 AND partitionZIndex<=38", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=38,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.387767393 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=================================>                   (73 + 42) / 115][Stage 110:=========================================>           (89 + 26) / 115][Stage 110:==============================================>     (103 + 12) / 115][Stage 110:====================================================>(114 + 1) / 115]                                                                                [Stage 111:==================================>                  (76 + 40) / 116][Stage 111:========================================>            (89 + 27) / 116][Stage 111:==============================================>     (103 + 13) / 116][Stage 111:===================================================> (112 + 4) / 116][Stage 111:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.196037517 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 23 AND partitionZIndex<=123", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=123,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.407013054 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (60 + 61) / 121][Stage 112:===========================>                         (63 + 58) / 121][Stage 112:====================================>                (84 + 37) / 121][Stage 112:============================================>       (104 + 17) / 121][Stage 112:====================================================>(120 + 1) / 121]                                                                                [Stage 113:==========================>                          (61 + 61) / 122][Stage 113:===========================>                         (63 + 59) / 122][Stage 113:===============================>                     (72 + 50) / 122][Stage 113:=========================================>           (95 + 27) / 122][Stage 113:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.121727295 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 86 AND partitionZIndex<=186", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=186,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.349470395 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 114:=================================>                   (72 + 41) / 113][Stage 114:======================================>              (82 + 31) / 113][Stage 114:==========================================>          (91 + 22) / 113][Stage 114:=================================================>   (105 + 8) / 113][Stage 114:===================================================> (109 + 4) / 113]                                                                                [Stage 115:=====================================>               (81 + 33) / 114][Stage 115:=========================================>           (90 + 24) / 114][Stage 115:==============================================>      (99 + 15) / 114][Stage 115:=================================================>   (107 + 7) / 114][Stage 115:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.129528427 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 26 AND partitionZIndex<=126", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=126,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.340296927 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 116:====================================>                (80 + 35) / 115][Stage 116:=======================================>             (85 + 30) / 115][Stage 116:============================================>        (96 + 19) / 115][Stage 116:===================================================> (112 + 3) / 115][Stage 116:====================================================>(114 + 1) / 115]                                                                                [Stage 117:=====================================>               (83 + 33) / 116][Stage 117:=========================================>           (91 + 25) / 116][Stage 117:================================================>    (107 + 9) / 116][Stage 117:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.793946363 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 19 AND partitionZIndex<=119", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=119 AND partitionZIndex<=119,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.49733948 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==================================>                  (73 + 40) / 113][Stage 118:=====================================>               (81 + 32) / 113][Stage 118:==========================================>          (90 + 23) / 113][Stage 118:==============================================>     (100 + 13) / 113][Stage 118:==================================================>  (108 + 5) / 113][Stage 118:====================================================>(112 + 1) / 113]                                                                                [Stage 119:===================================>                 (76 + 38) / 114][Stage 119:=======================================>             (86 + 28) / 114][Stage 119:============================================>        (96 + 18) / 114][Stage 119:==============================================>     (102 + 12) / 114][Stage 119:==================================================>  (109 + 5) / 114][Stage 119:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.2872677 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 3 AND partitionZIndex<=33", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=33,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398374231 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 60) / 120][Stage 120:===========================>                         (62 + 58) / 120][Stage 120:=================================>                   (75 + 45) / 120][Stage 120:==========================================>          (97 + 23) / 120][Stage 120:===================================================> (116 + 4) / 120]                                                                                [Stage 121:==========================>                          (61 + 60) / 121][Stage 121:==================================>                  (78 + 43) / 121][Stage 121:===========================================>        (101 + 20) / 121][Stage 121:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.027683533 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 43 AND partitionZIndex<=143", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=143,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.405723255 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 60) / 120][Stage 122:============================>                        (65 + 55) / 120][Stage 122:=================================>                   (76 + 44) / 120][Stage 122:==========================================>          (96 + 24) / 120][Stage 122:==================================================>  (114 + 6) / 120]                                                                                [Stage 123:============================>                        (65 + 56) / 121][Stage 123:===================================>                 (82 + 39) / 121][Stage 123:==============================================>     (108 + 13) / 121][Stage 123:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.023089366 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 61 AND partitionZIndex<=161", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=161,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.335078534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 124:======================================>              (83 + 32) / 115][Stage 124:============================================>        (96 + 19) / 115][Stage 124:==================================================>  (109 + 6) / 115]                                                                                [Stage 125:=======================================>             (86 + 30) / 116][Stage 125:=============================================>       (99 + 17) / 116][Stage 125:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.492258443 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 8 AND partitionZIndex<=88", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.373551256 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===================================>                 (76 + 37) / 113][Stage 126:========================================>            (87 + 26) / 113][Stage 126:=============================================>       (97 + 16) / 113][Stage 126:==================================================>  (108 + 5) / 113][Stage 126:===================================================> (110 + 3) / 113][Stage 126:====================================================>(112 + 1) / 113]                                                                                [Stage 127:========================================>            (87 + 27) / 114][Stage 127:==============================================>      (99 + 15) / 114][Stage 127:=================================================>   (106 + 8) / 114][Stage 127:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.178812293 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 11 AND partitionZIndex<=211", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=211,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398667516 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==============================>                      (67 + 48) / 115][Stage 128:==================================>                  (75 + 40) / 115][Stage 128:===========================================>         (94 + 21) / 115][Stage 128:==================================================>  (109 + 6) / 115][Stage 128:====================================================>(114 + 1) / 115]                                                                                [Stage 129:==============================>                      (67 + 49) / 116][Stage 129:=================================>                   (74 + 42) / 116][Stage 129:=========================================>           (91 + 25) / 116][Stage 129:===============================================>    (106 + 10) / 116][Stage 129:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.85825475 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 0 AND partitionZIndex<=60", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=60,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.419658223 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 60) / 120][Stage 130:===========================>                         (62 + 58) / 120][Stage 130:===================================>                 (81 + 39) / 120][Stage 130:=============================================>      (105 + 15) / 120][Stage 130:====================================================>(119 + 1) / 120]                                                                                [Stage 131:==========================>                          (61 + 60) / 121][Stage 131:============================>                        (65 + 56) / 121][Stage 131:=================================>                   (76 + 45) / 121][Stage 131:=============================================>      (105 + 16) / 121]                                                                                Time elapsed: 2.902653158 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9  AND partitionZIndex<=9", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=9,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.384754114 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (58 + 55) / 113][Stage 132:============================>                        (61 + 52) / 113][Stage 132:===================================>                 (75 + 38) / 113][Stage 132:=============================================>       (97 + 16) / 113][Stage 132:=================================================>   (106 + 7) / 113]                                                                                [Stage 133:===========================>                         (60 + 54) / 114][Stage 133:================================>                    (69 + 45) / 114][Stage 133:=========================================>           (90 + 24) / 114][Stage 133:==================================================>  (108 + 6) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.236620741 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 7 AND partitionZIndex<=97", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=97,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.334571637 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 134:======================================>              (83 + 32) / 115][Stage 134:=========================================>           (90 + 25) / 115][Stage 134:===============================================>    (104 + 11) / 115][Stage 134:====================================================>(114 + 1) / 115]                                                                                [Stage 135:=====================================>               (83 + 33) / 116][Stage 135:=========================================>           (91 + 25) / 116][Stage 135:=============================================>      (101 + 15) / 116][Stage 135:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.737554391 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 87 AND partitionZIndex<=187", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=187,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.365156574 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 136:================================>                    (72 + 46) / 118][Stage 136:=================================>                   (75 + 43) / 118][Stage 136:======================================>              (85 + 33) / 118][Stage 136:============================================>       (100 + 18) / 118][Stage 136:==================================================>  (113 + 5) / 118][Stage 136:====================================================>(117 + 1) / 118]                                                                                [Stage 137:================================>                    (73 + 46) / 119][Stage 137:=================================>                   (75 + 44) / 119][Stage 137:====================================>                (81 + 38) / 119][Stage 137:========================================>            (91 + 28) / 119][Stage 137:=================================================>   (111 + 8) / 119][Stage 137:===================================================> (116 + 3) / 119][Stage 137:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.665323134 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 1 AND partitionZIndex<=31", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=31,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.399939805 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 138:>                                                      (0 + 0) / 120][Stage 138:==========================>                          (60 + 60) / 120][Stage 138:=============================>                       (66 + 54) / 120][Stage 138:=======================================>             (89 + 31) / 120][Stage 138:==================================================>  (114 + 6) / 120]                                                                                [Stage 139:===========================>                         (63 + 58) / 121][Stage 139:==================================>                  (79 + 42) / 121][Stage 139:========================================>            (93 + 28) / 121][Stage 139:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.01009387 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 12 AND partitionZIndex<=212", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=212 AND partitionZIndex<=212,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.339921796 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=====================================>               (82 + 33) / 115][Stage 140:============================================>        (96 + 19) / 115][Stage 140:===================================================> (111 + 4) / 115]                                                                                [Stage 141:=======================================>             (87 + 29) / 116][Stage 141:============================================>        (98 + 18) / 116][Stage 141:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.563893984 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 20 AND partitionZIndex<=120", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=120,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397264459 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (61 + 59) / 120][Stage 142:==============================>                      (68 + 52) / 120][Stage 142:======================================>              (87 + 33) / 120][Stage 142:===============================================>    (109 + 11) / 120]                                                                                [Stage 143:==========================>                          (61 + 60) / 121][Stage 143:==============================>                      (69 + 52) / 121][Stage 143:=======================================>             (90 + 31) / 121][Stage 143:===============================================>    (111 + 10) / 121][Stage 143:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.954378628 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 79 AND partitionZIndex<=179", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=179,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.406073608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (63 + 58) / 121][Stage 144:===============================>                     (72 + 49) / 121][Stage 144:===========================================>        (102 + 19) / 121][Stage 144:===================================================> (117 + 4) / 121][Stage 144:====================================================>(120 + 1) / 121]                                                                                [Stage 145:==========================>                          (62 + 60) / 122][Stage 145:=============================>                       (67 + 55) / 122][Stage 145:====================================>                (83 + 39) / 122][Stage 145:=============================================>      (107 + 15) / 122][Stage 145:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.249850374 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 11 AND partitionZIndex<=111", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=111,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.392691607 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 60) / 120][Stage 146:============================>                        (65 + 55) / 120][Stage 146:=====================================>               (84 + 36) / 120][Stage 146:===============================================>    (110 + 10) / 120][Stage 146:====================================================>(119 + 1) / 120]                                                                                [Stage 147:==========================>                          (61 + 60) / 121][Stage 147:=============================>                       (68 + 53) / 121][Stage 147:======================================>              (87 + 34) / 121][Stage 147:=============================================>      (105 + 16) / 121][Stage 147:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 2.996716139 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 27 AND partitionZIndex<=227", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=227,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.353237343 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 148:========================================>            (86 + 27) / 113][Stage 148:==========================================>          (91 + 22) / 113][Stage 148:==============================================>     (101 + 12) / 113][Stage 148:====================================================>(111 + 2) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:=================================>                   (71 + 43) / 114][Stage 149:======================================>              (82 + 32) / 114][Stage 149:===========================================>         (93 + 21) / 114][Stage 149:=============================================>       (98 + 16) / 114][Stage 149:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.241776526 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 0 AND partitionZIndex<=80", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=80,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.340298162 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 150:======================================>              (83 + 32) / 115][Stage 150:=========================================>           (89 + 26) / 115][Stage 150:================================================>    (106 + 9) / 115][Stage 150:====================================================>(114 + 1) / 115]                                                                                [Stage 151:======================================>              (84 + 32) / 116][Stage 151:==========================================>          (93 + 23) / 116][Stage 151:=============================================>      (102 + 14) / 116]                                                                                Time elapsed: 2.546411401 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 6 AND partitionZIndex<=36", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=36,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.396106261 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==========================>                          (60 + 60) / 120][Stage 152:===========================>                         (62 + 58) / 120][Stage 152:====================================>                (83 + 37) / 120][Stage 152:===============================================>    (110 + 10) / 120]                                                                                [Stage 153:==========================>                          (61 + 60) / 121][Stage 153:==============================>                      (69 + 52) / 121][Stage 153:=======================================>             (91 + 30) / 121][Stage 153:=================================================>   (112 + 9) / 121]                                                                                Time elapsed: 2.920794681 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 42 AND partitionZIndex<=242", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=242,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.37034778 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 154:==============================>                      (67 + 48) / 115][Stage 154:====================================>                (80 + 35) / 115][Stage 154:=============================================>       (99 + 16) / 115][Stage 154:=================================================>   (108 + 7) / 115]                                                                                [Stage 155:===================================>                 (77 + 39) / 116][Stage 155:===========================================>         (96 + 20) / 116][Stage 155:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.524849706 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 8 AND partitionZIndex<=58", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=58,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.393712335 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==========================>                          (60 + 61) / 121][Stage 156:============================>                        (64 + 57) / 121][Stage 156:===============================>                     (73 + 48) / 121][Stage 156:=====================================>               (85 + 36) / 121][Stage 156:==============================================>     (109 + 12) / 121][Stage 156:====================================================>(120 + 1) / 121]                                                                                [Stage 157:===========================>                         (63 + 59) / 122][Stage 157:=====================================>               (87 + 35) / 122][Stage 157:=============================================>      (106 + 16) / 122][Stage 157:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.196497194 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 99 AND partitionZIndex<=199", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=199,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.392792753 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 158:==========================>                          (60 + 61) / 121][Stage 158:============================>                        (66 + 55) / 121][Stage 158:================================>                    (75 + 46) / 121][Stage 158:========================================>            (92 + 29) / 121][Stage 158:===================================================> (118 + 3) / 121]                                                                                [Stage 159:==========================>                          (61 + 61) / 122][Stage 159:=============================>                       (68 + 54) / 122][Stage 159:=====================================>               (86 + 36) / 122][Stage 159:==================================================>  (116 + 6) / 122][Stage 159:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.0640364 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 07 AND partitionZIndex<=107", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=107,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39477204 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (60 + 60) / 120][Stage 160:===========================>                         (62 + 58) / 120][Stage 160:================================>                    (74 + 46) / 120][Stage 160:=========================================>           (93 + 27) / 120][Stage 160:===================================================> (116 + 4) / 120]                                                                                [Stage 161:============================>                        (64 + 57) / 121][Stage 161:==================================>                  (78 + 43) / 121][Stage 161:============================================>       (104 + 17) / 121]                                                                                Time elapsed: 2.919574986 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 8 AND partitionZIndex<=48", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.416933612 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (61 + 60) / 121][Stage 162:===============================>                     (71 + 50) / 121][Stage 162:=======================================>             (90 + 31) / 121][Stage 162:=================================================>   (113 + 8) / 121]                                                                                [Stage 163:=============================>                       (67 + 55) / 122][Stage 163:====================================>                (84 + 38) / 122][Stage 163:===============================================>    (112 + 10) / 122][Stage 163:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 2.869614654 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 0 AND partitionZIndex<=20", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=20,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.395545285 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 61) / 121][Stage 164:==============================>                      (70 + 51) / 121][Stage 164:======================================>              (89 + 32) / 121][Stage 164:=================================================>   (112 + 9) / 121][Stage 164:====================================================>(120 + 1) / 121]                                                                                [Stage 165:==========================>                          (61 + 61) / 122][Stage 165:============================>                        (66 + 56) / 122][Stage 165:===================================>                 (81 + 41) / 122][Stage 165:==============================================>     (110 + 12) / 122][Stage 165:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.085915233 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 5 AND partitionZIndex<=55", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=55,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.384949812 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 166:============================>                        (60 + 53) / 113][Stage 166:==============================>                      (65 + 48) / 113][Stage 166:========================================>            (86 + 27) / 113][Stage 166:================================================>    (104 + 9) / 113]                                                                                [Stage 167:===========================>                         (60 + 54) / 114][Stage 167:=================================>                   (71 + 43) / 114][Stage 167:=============================================>       (97 + 17) / 114][Stage 167:==================================================>  (108 + 6) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.06952373 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 75 AND partitionZIndex<=175", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=175,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.367507718 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 168:================================>                    (72 + 46) / 118][Stage 168:=================================>                   (75 + 43) / 118][Stage 168:====================================>                (82 + 36) / 118][Stage 168:===========================================>         (96 + 22) / 118][Stage 168:===============================================>    (108 + 10) / 118][Stage 168:==================================================>  (113 + 5) / 118]                                                                                [Stage 169:================================>                    (73 + 46) / 119][Stage 169:==================================>                  (78 + 41) / 119][Stage 169:======================================>              (86 + 33) / 119][Stage 169:=============================================>      (103 + 16) / 119][Stage 169:==================================================>  (113 + 6) / 119][Stage 169:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.725871482 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 44 AND partitionZIndex<=244", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=244,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.518580342 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 170:==============================>                      (67 + 48) / 115][Stage 170:====================================>                (80 + 35) / 115][Stage 170:=============================================>       (98 + 17) / 115][Stage 170:===================================================> (111 + 4) / 115]                                                                                [Stage 171:===============================>                     (69 + 47) / 116][Stage 171:=====================================>               (83 + 33) / 116][Stage 171:============================================>        (97 + 19) / 116][Stage 171:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.553519371 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 07 AND partitionZIndex<=207", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=207,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.395402269 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (60 + 60) / 120][Stage 172:===========================>                         (62 + 58) / 120][Stage 172:==================================>                  (78 + 42) / 120][Stage 172:===========================================>         (99 + 21) / 120][Stage 172:==================================================>  (115 + 5) / 120]                                                                                [Stage 173:==========================>                          (61 + 60) / 121][Stage 173:============================>                        (64 + 57) / 121][Stage 173:=================================>                   (76 + 45) / 121][Stage 173:=============================================>      (106 + 15) / 121]                                                                                Time elapsed: 2.900363031 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 40 AND partitionZIndex<=240", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=240,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.351112288 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==================================>                  (74 + 39) / 113][Stage 174:=======================================>             (85 + 28) / 113][Stage 174:===========================================>         (92 + 21) / 113][Stage 174:====================================================>(111 + 2) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:==================================>                  (75 + 39) / 114][Stage 175:========================================>            (87 + 27) / 114][Stage 175:============================================>        (95 + 19) / 114][Stage 175:================================================>    (105 + 9) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.985263372 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 6 AND partitionZIndex<=86", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=86,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.382399029 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 176:============================>                        (60 + 53) / 113][Stage 176:===================================>                 (76 + 37) / 113][Stage 176:==============================================>     (100 + 13) / 113]                                                                                [Stage 177:===========================>                         (60 + 54) / 114][Stage 177:================================>                    (70 + 44) / 114][Stage 177:======================================>              (83 + 31) / 114][Stage 177:==============================================>     (103 + 11) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.931667286 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 1 AND partitionZIndex<=51", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=51,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.390705076 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (61 + 60) / 121][Stage 178:===============================>                     (73 + 48) / 121][Stage 178:==========================================>         (100 + 21) / 121][Stage 178:==================================================>  (116 + 5) / 121]                                                                                [Stage 179:==========================>                          (61 + 61) / 122][Stage 179:===========================>                         (64 + 58) / 122][Stage 179:================================>                    (75 + 47) / 122][Stage 179:========================================>            (94 + 28) / 122][Stage 179:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 2.978955446 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 22 AND partitionZIndex<=122", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=122,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.361646704 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 180:================================>                    (72 + 46) / 118][Stage 180:================================>                    (73 + 45) / 118][Stage 180:========================================>            (91 + 27) / 118][Stage 180:===============================================>    (107 + 11) / 118]                                                                                [Stage 181:================================>                    (73 + 46) / 119][Stage 181:====================================>                (82 + 37) / 119][Stage 181:==========================================>          (96 + 23) / 119][Stage 181:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 2.877685447 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 3 AND partitionZIndex<=93", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=93,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.403000918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 182:=================================>                   (73 + 42) / 115][Stage 182:=======================================>             (86 + 29) / 115][Stage 182:==============================================>     (102 + 13) / 115][Stage 182:==================================================>  (109 + 6) / 115][Stage 182:====================================================>(113 + 2) / 115]                                                                                [Stage 183:================================>                    (72 + 44) / 116][Stage 183:========================================>            (89 + 27) / 116][Stage 183:============================================>        (98 + 18) / 116][Stage 183:==================================================>  (110 + 6) / 116][Stage 183:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.34132905 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 73 AND partitionZIndex<=173", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.400325071 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==========================>                          (60 + 60) / 120][Stage 184:==========================>                          (61 + 59) / 120][Stage 184:==================================>                  (78 + 42) / 120][Stage 184:==============================================>     (108 + 12) / 120][Stage 184:===================================================> (117 + 3) / 120]                                                                                [Stage 185:==========================>                          (61 + 60) / 121][Stage 185:=============================>                       (68 + 53) / 121][Stage 185:======================================>              (87 + 34) / 121][Stage 185:=============================================>      (106 + 15) / 121][Stage 185:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 2.98215738 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 32 AND partitionZIndex<=132", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=132,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.355292126 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 186:================================>                    (72 + 46) / 118][Stage 186:==================================>                  (76 + 42) / 118][Stage 186:======================================>              (85 + 33) / 118][Stage 186:============================================>        (98 + 20) / 118][Stage 186:====================================================>(116 + 2) / 118]                                                                                [Stage 187:================================>                    (73 + 46) / 119][Stage 187:================================>                    (74 + 45) / 119][Stage 187:====================================>                (83 + 36) / 119][Stage 187:=========================================>           (93 + 26) / 119][Stage 187:=============================================>      (103 + 16) / 119][Stage 187:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.236376609 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 77 AND partitionZIndex<=177", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=177,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.406141312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 61) / 121][Stage 188:===========================>                         (62 + 59) / 121][Stage 188:==================================>                  (79 + 42) / 121][Stage 188:===========================================>        (101 + 20) / 121][Stage 188:==================================================>  (116 + 5) / 121]                                                                                [Stage 189:==========================>                          (61 + 61) / 122][Stage 189:===========================>                         (63 + 59) / 122][Stage 189:==================================>                  (79 + 43) / 122][Stage 189:==========================================>          (98 + 24) / 122][Stage 189:=================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.096216104 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 3 AND partitionZIndex<=43", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=43,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.407584758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 190:============================>                        (64 + 57) / 121][Stage 190:==================================>                  (78 + 43) / 121][Stage 190:==========================================>          (98 + 23) / 121][Stage 190:=================================================>   (114 + 7) / 121]                                                                                [Stage 191:==========================>                          (62 + 60) / 122][Stage 191:==================================>                  (79 + 43) / 122][Stage 191:===========================================>         (99 + 23) / 122][Stage 191:=================================================>   (113 + 9) / 122][Stage 191:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.146275434 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 14 AND partitionZIndex<=214", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=214,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.329941988 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 192:======================================>              (84 + 31) / 115][Stage 192:==========================================>          (92 + 23) / 115][Stage 192:================================================>    (106 + 9) / 115][Stage 192:====================================================>(114 + 1) / 115]                                                                                [Stage 193:=====================================>               (83 + 33) / 116][Stage 193:==========================================>          (92 + 24) / 116][Stage 193:===============================================>    (106 + 10) / 116][Stage 193:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.768420459 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 6 AND partitionZIndex<=66", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.390633785 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (59 + 54) / 113][Stage 194:=================================>                   (72 + 41) / 113][Stage 194:===========================================>         (92 + 21) / 113][Stage 194:===================================================> (109 + 4) / 113]                                                                                [Stage 195:============================>                        (62 + 52) / 114][Stage 195:===================================>                 (76 + 38) / 114][Stage 195:=============================================>       (97 + 17) / 114][Stage 195:====================================================>(112 + 2) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.126960148 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 05 AND partitionZIndex<=205", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.390330505 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (62 + 58) / 120][Stage 196:===================================>                 (80 + 40) / 120][Stage 196:===========================================>         (99 + 21) / 120][Stage 196:===================================================> (116 + 4) / 120]                                                                                [Stage 197:===========================>                         (62 + 59) / 121][Stage 197:================================>                    (75 + 46) / 121][Stage 197:==========================================>          (97 + 24) / 121][Stage 197:==================================================>  (115 + 6) / 121][Stage 197:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.112362508 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 59 AND partitionZIndex<=159", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=159,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.390843187 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 198:================================>                    (72 + 46) / 118][Stage 198:===================================>                 (79 + 39) / 118][Stage 198:==========================================>          (94 + 24) / 118][Stage 198:==================================================>  (112 + 6) / 118]                                                                                [Stage 199:================================>                    (73 + 46) / 119][Stage 199:====================================>                (82 + 37) / 119][Stage 199:============================================>        (99 + 20) / 119][Stage 199:=================================================>   (112 + 7) / 119][Stage 199:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.095654882 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 69 AND partitionZIndex<=169", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.360091489 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 200:================================>                    (72 + 46) / 118][Stage 200:================================>                    (73 + 45) / 118][Stage 200:=================================>                   (75 + 43) / 118][Stage 200:======================================>              (86 + 32) / 118][Stage 200:=============================================>      (103 + 15) / 118][Stage 200:=================================================>   (110 + 8) / 118][Stage 200:====================================================>(117 + 1) / 118]                                                                                [Stage 201:================================>                    (74 + 45) / 119][Stage 201:==================================>                  (77 + 42) / 119][Stage 201:=======================================>             (89 + 30) / 119][Stage 201:=========================================>           (94 + 25) / 119][Stage 201:===============================================>    (108 + 11) / 119][Stage 201:===================================================> (115 + 4) / 119][Stage 201:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.896368631 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/24 21:13:36 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.39:55740) dropped. RpcEnv already stopped.
17/05/24 21:13:36 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.39:55740) dropped. RpcEnv already stopped.

real	9m54.103s
user	11m27.064s
sys	0m28.728s
