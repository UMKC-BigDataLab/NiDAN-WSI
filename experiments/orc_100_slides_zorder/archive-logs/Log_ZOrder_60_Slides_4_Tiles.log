Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 23:08:00 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 23:08:15 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 23:08:15 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 23:08:16 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 23:08:18 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 23:08:28 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524230818-0606).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 4.354303515 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:>                                                      (1 + 114) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:=======================================>               (82 + 33) / 115][Stage 0:==========================================>            (88 + 27) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:====================================================>  (109 + 6) / 115]                                                                                [Stage 1:============================>                          (60 + 56) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:=================================>                     (71 + 45) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:=======================================>               (83 + 33) / 116][Stage 1:==============================================>        (98 + 18) / 116][Stage 1:===============================================>      (102 + 14) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:=====================================================> (112 + 4) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.393384496 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 3 AND partitionZIndex<=66", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=63 AND partitionZIndex<=66,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.808772202 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 2:======================>                                (48 + 72) / 120][Stage 2:=======================>                               (51 + 69) / 120][Stage 2:===========================>                           (61 + 59) / 120][Stage 2:============================>                          (63 + 57) / 120][Stage 2:=============================>                         (65 + 55) / 120][Stage 2:====================================>                  (79 + 41) / 120][Stage 2:=============================================>         (99 + 21) / 120][Stage 2:=================================================>    (109 + 11) / 120][Stage 2:======================================================>(119 + 1) / 120]                                                                                [Stage 3:===========================>                           (60 + 61) / 121][Stage 3:===========================>                           (61 + 60) / 121][Stage 3:==============================>                        (67 + 54) / 121][Stage 3:================================>                      (72 + 49) / 121][Stage 3:==================================>                    (75 + 46) / 121][Stage 3:=========================================>             (91 + 30) / 121][Stage 3:=================================================>    (111 + 10) / 121][Stage 3:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.288570963 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 3 AND partitionZIndex<=36", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=36,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.714709096 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (60 + 60) / 120][Stage 4:=============================>                         (65 + 55) / 120][Stage 4:================================>                      (70 + 50) / 120][Stage 4:=========================================>             (91 + 29) / 120][Stage 4:==================================================>    (111 + 9) / 120][Stage 4:======================================================>(119 + 1) / 120]                                                                                [Stage 5:===========================>                           (60 + 61) / 121][Stage 5:================================>                      (71 + 50) / 121][Stage 5:===================================>                   (79 + 42) / 121][Stage 5:=========================================>             (92 + 29) / 121][Stage 5:===============================================>      (107 + 14) / 121][Stage 5:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.774796733 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 5 AND partitionZIndex<=28", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=28,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.619435529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==============================>                        (63 + 52) / 115][Stage 6:=================================>                     (71 + 44) / 115][Stage 6:=====================================>                 (79 + 36) / 115][Stage 6:==========================================>            (89 + 26) / 115][Stage 6:==============================================>       (100 + 15) / 115][Stage 6:==================================================>    (106 + 9) / 115][Stage 6:======================================================>(114 + 1) / 115]                                                                                [Stage 7:===============================>                       (66 + 50) / 116][Stage 7:=================================>                     (70 + 46) / 116][Stage 7:==================================>                    (73 + 43) / 116][Stage 7:===========================================>           (92 + 24) / 116][Stage 7:==============================================>        (98 + 18) / 116][Stage 7:====================================================>  (110 + 6) / 116][Stage 7:=====================================================> (112 + 4) / 116][Stage 7:=====================================================> (113 + 3) / 116][Stage 7:======================================================>(114 + 2) / 116][Stage 7:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.164607172 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 24 AND partitionZIndex<=127", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=127,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.694317619 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==========================>                            (59 + 62) / 121][Stage 8:============================>                          (62 + 59) / 121][Stage 8:=================================>                     (73 + 48) / 121][Stage 8:====================================>                  (80 + 41) / 121][Stage 8:=========================================>             (92 + 29) / 121][Stage 8:=============================================>        (102 + 19) / 121][Stage 8:=====================================================> (117 + 4) / 121][Stage 8:======================================================>(120 + 1) / 121]                                                                                [Stage 9:===========================>                           (61 + 61) / 122][Stage 9:=============================>                         (66 + 56) / 122][Stage 9:==================================>                    (76 + 46) / 122][Stage 9:=========================================>             (93 + 29) / 122][Stage 9:==============================================>       (104 + 18) / 122][Stage 9:===================================================>   (115 + 7) / 122][Stage 9:======================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.713291545 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 9 AND partitionZIndex<=32", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.52673594 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 10:================================>                     (72 + 46) / 118][Stage 10:==================================>                   (76 + 42) / 118][Stage 10:=========================================>            (90 + 28) / 118][Stage 10:============================================>        (100 + 18) / 118][Stage 10:================================================>    (107 + 11) / 118][Stage 10:====================================================> (115 + 3) / 118][Stage 10:=====================================================>(117 + 1) / 118]                                                                                [Stage 11:================================>                     (72 + 47) / 119][Stage 11:==================================>                   (76 + 43) / 119][Stage 11:=======================================>              (86 + 33) / 119][Stage 11:=========================================>            (91 + 28) / 119][Stage 11:============================================>        (101 + 18) / 119][Stage 11:=============================================>       (103 + 16) / 119][Stage 11:================================================>    (108 + 11) / 119][Stage 11:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.710099522 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 6 AND partitionZIndex<=79", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=79,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.479532306 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 12:=====================================>                (80 + 35) / 115][Stage 12:======================================>               (83 + 32) / 115][Stage 12:===========================================>          (93 + 22) / 115][Stage 12:==================================================>   (107 + 8) / 115][Stage 12:====================================================> (111 + 4) / 115][Stage 12:====================================================> (112 + 3) / 115][Stage 12:=====================================================>(113 + 2) / 115]                                                                                [Stage 13:=======================================>              (85 + 31) / 116][Stage 13:========================================>             (88 + 28) / 116][Stage 13:==============================================>       (99 + 17) / 116][Stage 13:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.478566836 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 70 AND partitionZIndex<=173", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=173,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.544995066 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (58 + 55) / 113][Stage 14:=============================>                        (61 + 52) / 113][Stage 14:=====================================>                (78 + 35) / 113][Stage 14:============================================>         (94 + 19) / 113][Stage 14:===============================================>     (101 + 12) / 113][Stage 14:====================================================> (109 + 4) / 113][Stage 14:=====================================================>(112 + 1) / 113]                                                                                [Stage 15:============================>                         (60 + 54) / 114][Stage 15:=================================>                    (71 + 43) / 114][Stage 15:=========================================>            (87 + 27) / 114][Stage 15:==============================================>      (101 + 13) / 114][Stage 15:================================================>    (104 + 10) / 114][Stage 15:===================================================>  (108 + 6) / 114][Stage 15:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.373083163 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 5 AND partitionZIndex<=18", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=15 AND partitionZIndex<=18,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.565474468 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:============================>                         (59 + 54) / 113][Stage 16:================================>                     (67 + 46) / 113][Stage 16:========================================>             (84 + 29) / 113][Stage 16:=================================================>    (104 + 9) / 113][Stage 16:=====================================================>(112 + 1) / 113]                                                                                [Stage 17:===========================>                          (58 + 56) / 114][Stage 17:=============================>                        (62 + 52) / 114][Stage 17:==================================>                   (73 + 41) / 114][Stage 17:========================================>             (86 + 28) / 114][Stage 17:================================================>    (104 + 10) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.718774889 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 0 AND partitionZIndex<=43", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=40 AND partitionZIndex<=43,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.553670141 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 18:==========================>                           (59 + 61) / 120][Stage 18:===========================>                          (62 + 58) / 120][Stage 18:================================>                     (72 + 48) / 120][Stage 18:===========================================>          (96 + 24) / 120][Stage 18:=================================================>    (111 + 9) / 120][Stage 18:=====================================================>(118 + 2) / 120]                                                                                [Stage 19:===========================>                          (61 + 60) / 121][Stage 19:============================>                         (64 + 57) / 121][Stage 19:====================================>                 (81 + 40) / 121][Stage 19:=============================================>       (105 + 16) / 121][Stage 19:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.562851963 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 07 AND partitionZIndex<=110", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=110,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.520365713 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (60 + 60) / 120][Stage 20:==============================>                       (68 + 52) / 120][Stage 20:==================================>                   (77 + 43) / 120][Stage 20:===========================================>          (96 + 24) / 120][Stage 20:===================================================>  (114 + 6) / 120]                                                                                [Stage 21:===========================>                          (62 + 59) / 121][Stage 21:================================>                     (73 + 48) / 121][Stage 21:======================================>               (87 + 34) / 121][Stage 21:==============================================>      (107 + 14) / 121][Stage 21:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.666296295 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 95 AND partitionZIndex<=198", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=198,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.446066884 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 22:=====================================>                (79 + 34) / 113][Stage 22:==========================================>           (88 + 25) / 113][Stage 22:==============================================>      (100 + 13) / 113][Stage 22:==================================================>   (106 + 7) / 113][Stage 22:====================================================> (110 + 3) / 113]                                                                                [Stage 23:=====================================>                (79 + 35) / 114][Stage 23:========================================>             (86 + 28) / 114][Stage 23:============================================>         (94 + 20) / 114][Stage 23:===================================================>  (108 + 6) / 114][Stage 23:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.583350702 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 1 AND partitionZIndex<=54", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=54,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.45232864 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==================================>                   (73 + 40) / 113][Stage 24:========================================>             (84 + 29) / 113][Stage 24:===============================================>      (99 + 14) / 113][Stage 24:==================================================>   (106 + 7) / 113][Stage 24:====================================================> (110 + 3) / 113][Stage 24:=====================================================>(111 + 2) / 113]                                                                                [Stage 25:====================================>                 (76 + 38) / 114][Stage 25:=========================================>            (88 + 26) / 114][Stage 25:=============================================>        (97 + 17) / 114][Stage 25:==============================================>      (101 + 13) / 114][Stage 25:=================================================>    (105 + 9) / 114][Stage 25:====================================================> (110 + 4) / 114][Stage 25:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.45782815 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 8 AND partitionZIndex<=61", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=61,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.458009675 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 26:================================>                     (72 + 46) / 118][Stage 26:====================================>                 (79 + 39) / 118][Stage 26:===========================================>          (95 + 23) / 118][Stage 26:================================================>    (108 + 10) / 118][Stage 26:=====================================================>(117 + 1) / 118]                                                                                [Stage 27:==================================>                   (75 + 44) / 119][Stage 27:=======================================>              (87 + 32) / 119][Stage 27:============================================>        (101 + 18) / 119][Stage 27:================================================>    (108 + 11) / 119][Stage 27:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.811761589 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 08 AND partitionZIndex<=211", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=211,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.512557246 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 28:===========================>                          (60 + 60) / 120][Stage 28:=============================>                        (65 + 55) / 120][Stage 28:=====================================>                (83 + 37) / 120][Stage 28:=============================================>       (103 + 17) / 120][Stage 28:==================================================>   (113 + 7) / 120][Stage 28:====================================================> (116 + 4) / 120][Stage 28:====================================================> (117 + 3) / 120]                                                                                [Stage 29:===========================>                          (62 + 59) / 121][Stage 29:===============================>                      (71 + 50) / 121][Stage 29:=========================================>            (92 + 29) / 121][Stage 29:============================================>        (102 + 19) / 121][Stage 29:================================================>    (111 + 10) / 121][Stage 29:===================================================>  (116 + 5) / 121][Stage 29:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.386975727 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 16 AND partitionZIndex<=219", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=216 AND partitionZIndex<=219,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.413338178 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 30:======================================>               (81 + 34) / 115][Stage 30:=========================================>            (88 + 27) / 115][Stage 30:===============================================>     (102 + 13) / 115][Stage 30:====================================================> (112 + 3) / 115][Stage 30:=====================================================>(113 + 2) / 115]                                                                                [Stage 31:=======================================>              (85 + 31) / 116][Stage 31:===========================================>          (93 + 23) / 116][Stage 31:===============================================>     (103 + 13) / 116][Stage 31:===================================================>  (111 + 5) / 116][Stage 31:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.13637659 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 17 AND partitionZIndex<=220", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=220,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.534716148 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 32:================================>                     (72 + 46) / 118][Stage 32:===================================>                  (78 + 40) / 118][Stage 32:============================================>         (98 + 20) / 118][Stage 32:==================================================>   (110 + 8) / 118][Stage 32:=====================================================>(117 + 1) / 118]                                                                                [Stage 33:===============================>                      (69 + 50) / 119][Stage 33:===================================>                  (79 + 40) / 119][Stage 33:==========================================>           (94 + 25) / 119][Stage 33:==============================================>      (105 + 14) / 119][Stage 33:===================================================>  (114 + 5) / 119][Stage 33:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.541511104 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 85 AND partitionZIndex<=188", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=185 AND partitionZIndex<=188,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.519468503 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 34:==========================>                           (60 + 61) / 121][Stage 34:=============================>                        (66 + 55) / 121][Stage 34:=====================================>                (83 + 38) / 121][Stage 34:==============================================>      (107 + 14) / 121][Stage 34:=====================================================>(120 + 1) / 121]                                                                                [Stage 35:===========================>                          (63 + 59) / 122][Stage 35:==================================>                   (77 + 45) / 122][Stage 35:=========================================>            (93 + 29) / 122][Stage 35:================================================>    (111 + 11) / 122][Stage 35:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.537606175 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 33 AND partitionZIndex<=136", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.452341166 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 36:================================>                     (72 + 46) / 118][Stage 36:=================================>                    (74 + 44) / 118][Stage 36:====================================>                 (80 + 38) / 118][Stage 36:=======================================>              (86 + 32) / 118][Stage 36:===========================================>          (96 + 22) / 118][Stage 36:===================================================>  (113 + 5) / 118]                                                                                [Stage 37:================================>                     (72 + 47) / 119][Stage 37:====================================>                 (80 + 39) / 119][Stage 37:==========================================>           (94 + 25) / 119][Stage 37:============================================>        (101 + 18) / 119][Stage 37:===================================================>  (113 + 6) / 119][Stage 37:===================================================>  (114 + 5) / 119][Stage 37:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.610639243 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 4 AND partitionZIndex<=57", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=57,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.421653655 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 38:======================================>               (82 + 33) / 115][Stage 38:=======================================>              (85 + 30) / 115][Stage 38:=============================================>        (97 + 18) / 115][Stage 38:=================================================>    (106 + 9) / 115][Stage 38:====================================================> (112 + 3) / 115]                                                                                [Stage 39:========================================>             (88 + 28) / 116][Stage 39:===========================================>          (93 + 23) / 116][Stage 39:===============================================>     (104 + 12) / 116][Stage 39:====================================================> (112 + 4) / 116][Stage 39:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.875014325 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 0 AND partitionZIndex<=73", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=73,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.512768953 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 40:==========================>                           (60 + 61) / 121][Stage 40:==============================>                       (68 + 53) / 121][Stage 40:=======================================>              (88 + 33) / 121][Stage 40:===============================================>     (109 + 12) / 121]                                                                                [Stage 41:===========================>                          (61 + 61) / 122][Stage 41:==============================>                       (70 + 52) / 122][Stage 41:=======================================>              (89 + 33) / 122][Stage 41:============================================>        (102 + 20) / 122][Stage 41:====================================================> (118 + 4) / 122][Stage 41:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.61697579 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 5 AND partitionZIndex<=48", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=48,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.497276209 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==================================>                   (73 + 42) / 115][Stage 42:=========================================>            (88 + 27) / 115][Stage 42:================================================>    (105 + 10) / 115]                                                                                [Stage 43:===================================>                  (76 + 40) / 116][Stage 43:==========================================>           (92 + 24) / 116][Stage 43:===============================================>     (105 + 11) / 116][Stage 43:===================================================>  (111 + 5) / 116][Stage 43:====================================================> (113 + 3) / 116][Stage 43:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.57321747 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 4 AND partitionZIndex<=47", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=47,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.427498613 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 44:======================================>               (81 + 34) / 115][Stage 44:=========================================>            (88 + 27) / 115][Stage 44:==============================================>      (101 + 14) / 115][Stage 44:====================================================> (112 + 3) / 115][Stage 44:=====================================================>(113 + 2) / 115][Stage 44:=====================================================>(114 + 1) / 115]                                                                                [Stage 45:=======================================>              (84 + 32) / 116][Stage 45:=========================================>            (90 + 26) / 116][Stage 45:==============================================>      (101 + 15) / 116][Stage 45:====================================================> (112 + 4) / 116][Stage 45:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.755058041 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 2 AND partitionZIndex<=75", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=75,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.396185222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==================================>                   (73 + 40) / 113][Stage 46:========================================>             (85 + 28) / 113][Stage 46:=============================================>        (96 + 17) / 113][Stage 46:==================================================>   (105 + 8) / 113][Stage 46:====================================================> (110 + 3) / 113]                                                                                [Stage 47:======================================>               (82 + 32) / 114][Stage 47:==========================================>           (90 + 24) / 114][Stage 47:==============================================>       (98 + 16) / 114][Stage 47:==================================================>   (106 + 8) / 114][Stage 47:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.249625166 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 8 AND partitionZIndex<=21", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=21,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.414355246 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 48:====================================>                 (77 + 36) / 113][Stage 48:==========================================>           (89 + 24) / 113][Stage 48:==============================================>      (100 + 13) / 113][Stage 48:===================================================>  (108 + 5) / 113][Stage 48:=====================================================>(111 + 2) / 113]                                                                                [Stage 49:======================================>               (81 + 33) / 114][Stage 49:==========================================>           (89 + 25) / 114][Stage 49:==============================================>       (99 + 15) / 114][Stage 49:=================================================>    (105 + 9) / 114][Stage 49:=====================================================>(112 + 2) / 114][Stage 49:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.19694536 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3  AND partitionZIndex<=6", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=6,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.380672578 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 50:======================================>               (81 + 34) / 115][Stage 50:=========================================>            (88 + 27) / 115][Stage 50:==============================================>      (101 + 14) / 115][Stage 50:===================================================>  (110 + 5) / 115][Stage 50:=====================================================>(113 + 2) / 115][Stage 50:=====================================================>(114 + 1) / 115]                                                                                [Stage 51:========================================>             (88 + 28) / 116][Stage 51:==============================================>      (101 + 15) / 116][Stage 51:==================================================>   (108 + 8) / 116][Stage 51:===================================================>  (111 + 5) / 116][Stage 51:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.321478462 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 63 AND partitionZIndex<=166", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=166,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.507807145 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==================================>                   (73 + 40) / 113][Stage 52:=======================================>              (83 + 30) / 113][Stage 52:=============================================>        (95 + 18) / 113][Stage 52:=================================================>    (104 + 9) / 113][Stage 52:====================================================> (110 + 3) / 113][Stage 52:=====================================================>(112 + 1) / 113]                                                                                [Stage 53:===================================>                  (74 + 40) / 114][Stage 53:=========================================>            (87 + 27) / 114][Stage 53:==============================================>       (98 + 16) / 114][Stage 53:=================================================>    (105 + 9) / 114][Stage 53:===================================================>  (108 + 6) / 114][Stage 53:====================================================> (110 + 4) / 114][Stage 53:=====================================================>(112 + 2) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.45663387 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 6 AND partitionZIndex<=99", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=96 AND partitionZIndex<=99,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.46945996 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (58 + 55) / 113][Stage 54:===============================>                      (66 + 47) / 113][Stage 54:=======================================>              (83 + 30) / 113][Stage 54:===================================================>  (108 + 5) / 113][Stage 54:=====================================================>(111 + 2) / 113]                                                                                [Stage 55:============================>                         (60 + 54) / 114][Stage 55:=============================>                        (62 + 52) / 114][Stage 55:====================================>                 (78 + 36) / 114][Stage 55:==============================================>      (100 + 14) / 114][Stage 55:===================================================>  (109 + 5) / 114][Stage 55:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.697993638 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 26 AND partitionZIndex<=229", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.417955967 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 56:=================================>                    (73 + 45) / 118][Stage 56:===================================>                  (77 + 41) / 118][Stage 56:===========================================>          (95 + 23) / 118][Stage 56:===============================================>     (106 + 12) / 118][Stage 56:====================================================> (114 + 4) / 118][Stage 56:=====================================================>(117 + 1) / 118]                                                                                [Stage 57:=================================>                    (73 + 46) / 119][Stage 57:===================================>                  (79 + 40) / 119][Stage 57:============================================>        (100 + 19) / 119][Stage 57:==================================================>   (111 + 8) / 119][Stage 57:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.45804214 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 03 AND partitionZIndex<=106", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=106,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.42698778 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 58:=================================>                    (71 + 44) / 115][Stage 58:======================================>               (83 + 32) / 115][Stage 58:==============================================>       (99 + 16) / 115][Stage 58:=====================================================>(114 + 1) / 115]                                                                                [Stage 59:================================>                     (69 + 47) / 116][Stage 59:========================================>             (86 + 30) / 116][Stage 59:==============================================>       (99 + 17) / 116][Stage 59:====================================================> (112 + 4) / 116][Stage 59:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.960801509 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 84 AND partitionZIndex<=187", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.451802659 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===============================>                      (67 + 48) / 115][Stage 60:===================================>                  (75 + 40) / 115][Stage 60:========================================>             (87 + 28) / 115][Stage 60:==================================================>   (108 + 7) / 115]                                                                                [Stage 61:=================================>                    (72 + 44) / 116][Stage 61:==========================================>           (91 + 25) / 116][Stage 61:==================================================>   (109 + 7) / 116][Stage 61:====================================================> (113 + 3) / 116][Stage 61:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.888337639 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 36 AND partitionZIndex<=139", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.470201984 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 62:==========================>                           (60 + 61) / 121][Stage 62:============================>                         (64 + 57) / 121][Stage 62:================================>                     (73 + 48) / 121][Stage 62:============================================>        (101 + 20) / 121][Stage 62:====================================================> (118 + 3) / 121]                                                                                [Stage 63:===========================>                          (62 + 60) / 122][Stage 63:================================>                     (73 + 49) / 122][Stage 63:======================================>               (87 + 35) / 122][Stage 63:===============================================>     (110 + 12) / 122][Stage 63:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.428390567 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 8 AND partitionZIndex<=91", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=91,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.411205057 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 64:================================>                     (72 + 46) / 118][Stage 64:====================================>                 (79 + 39) / 118][Stage 64:==========================================>           (93 + 25) / 118][Stage 64:=================================================>    (109 + 9) / 118][Stage 64:====================================================> (115 + 3) / 118]                                                                                [Stage 65:=================================>                    (74 + 45) / 119][Stage 65:=======================================>              (88 + 31) / 119][Stage 65:==============================================>      (104 + 15) / 119][Stage 65:====================================================> (115 + 4) / 119][Stage 65:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.369040746 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 3 AND partitionZIndex<=56", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=56,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.423472027 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==============================>                       (66 + 49) / 115][Stage 66:==================================>                   (74 + 41) / 115][Stage 66:===========================================>          (92 + 23) / 115][Stage 66:================================================>    (105 + 10) / 115]                                                                                [Stage 67:====================================>                 (78 + 38) / 116][Stage 67:============================================>         (95 + 21) / 116][Stage 67:===============================================>     (105 + 11) / 116][Stage 67:====================================================> (112 + 4) / 116][Stage 67:=====================================================>(114 + 2) / 116][Stage 67:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.600143129 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 03 AND partitionZIndex<=206", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.51242661 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==========================>                           (60 + 61) / 121][Stage 68:===========================>                          (61 + 60) / 121][Stage 68:===================================>                  (79 + 42) / 121][Stage 68:===========================================>          (97 + 24) / 121][Stage 68:===================================================>  (115 + 6) / 121][Stage 68:=====================================================>(120 + 1) / 121]                                                                                [Stage 69:===========================>                          (61 + 61) / 122][Stage 69:============================>                         (65 + 57) / 122][Stage 69:=====================================>                (85 + 37) / 122][Stage 69:==============================================>      (106 + 16) / 122][Stage 69:=====================================================>(120 + 2) / 122][Stage 69:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.008632639 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 1 AND partitionZIndex<=64", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=64,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.383263644 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 70:=======================================>              (84 + 31) / 115][Stage 70:==========================================>           (90 + 25) / 115][Stage 70:==============================================>      (101 + 14) / 115][Stage 70:===================================================>  (109 + 6) / 115]                                                                                [Stage 71:========================================>             (86 + 30) / 116][Stage 71:===========================================>          (93 + 23) / 116][Stage 71:=================================================>    (107 + 9) / 116][Stage 71:===================================================>  (111 + 5) / 116][Stage 71:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.463737266 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 33 AND partitionZIndex<=236", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=236,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.44469529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 72:>                                                       (0 + 0) / 113][Stage 72:===========================>                          (58 + 55) / 113][Stage 72:=================================>                    (70 + 43) / 113][Stage 72:=======================================>              (83 + 30) / 113][Stage 72:==============================================>       (97 + 16) / 113][Stage 72:====================================================> (110 + 3) / 113]                                                                                [Stage 73:=============================>                        (62 + 52) / 114][Stage 73:=================================>                    (70 + 44) / 114][Stage 73:==========================================>           (90 + 24) / 114][Stage 73:==================================================>   (106 + 8) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.391061796 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 29 AND partitionZIndex<=132", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.408487183 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 74:================================>                     (69 + 46) / 115][Stage 74:========================================>             (86 + 29) / 115][Stage 74:===============================================>     (102 + 13) / 115][Stage 74:=====================================================>(114 + 1) / 115]                                                                                [Stage 75:===============================>                      (67 + 49) / 116][Stage 75:====================================>                 (79 + 37) / 116][Stage 75:========================================>             (87 + 29) / 116][Stage 75:==============================================>      (102 + 14) / 116][Stage 75:==================================================>   (109 + 7) / 116][Stage 75:===================================================>  (111 + 5) / 116][Stage 75:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.440961599 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 39 AND partitionZIndex<=142", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.452765286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 76:>                                                       (0 + 0) / 120][Stage 76:===========================>                          (60 + 60) / 120][Stage 76:==============================>                       (67 + 53) / 120][Stage 76:========================================>             (90 + 30) / 120][Stage 76:===================================================>  (114 + 6) / 120]                                                                                [Stage 77:===========================>                          (61 + 60) / 121][Stage 77:=============================>                        (67 + 54) / 121][Stage 77:====================================>                 (82 + 39) / 121][Stage 77:=========================================>            (92 + 29) / 121][Stage 77:==================================================>   (114 + 7) / 121][Stage 77:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.493375141 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 1 AND partitionZIndex<=44", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.424905291 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (60 + 53) / 113][Stage 78:===================================>                  (74 + 39) / 113][Stage 78:============================================>         (94 + 19) / 113][Stage 78:===================================================>  (108 + 5) / 113]                                                                                [Stage 79:============================>                         (61 + 53) / 114][Stage 79:===============================>                      (67 + 47) / 114][Stage 79:=========================================>            (87 + 27) / 114][Stage 79:===================================================>  (109 + 5) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.466718411 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 1 AND partitionZIndex<=34", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=34,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.371589478 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 80:=================================>                    (70 + 43) / 113][Stage 80:=======================================>              (82 + 31) / 113][Stage 80:===========================================>          (90 + 23) / 113][Stage 80:==============================================>       (98 + 15) / 113][Stage 80:==================================================>   (106 + 7) / 113][Stage 80:====================================================> (110 + 3) / 113]                                                                                [Stage 81:==================================>                   (73 + 41) / 114][Stage 81:======================================>               (82 + 32) / 114][Stage 81:==========================================>           (89 + 25) / 114][Stage 81:===============================================>     (103 + 11) / 114][Stage 81:==================================================>   (107 + 7) / 114][Stage 81:====================================================> (110 + 4) / 114][Stage 81:=====================================================>(112 + 2) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.765015975 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 83 AND partitionZIndex<=186", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=186,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.431814187 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==========================>                           (60 + 61) / 121][Stage 82:============================>                         (63 + 58) / 121][Stage 82:=================================>                    (76 + 45) / 121][Stage 82:===========================================>          (97 + 24) / 121][Stage 82:===================================================>  (116 + 5) / 121]                                                                                [Stage 83:===========================>                          (61 + 61) / 122][Stage 83:===============================>                      (72 + 50) / 122][Stage 83:======================================>               (88 + 34) / 122][Stage 83:===============================================>     (109 + 13) / 122][Stage 83:=====================================================>(120 + 2) / 122][Stage 83:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.725864744 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5  AND partitionZIndex<=8", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=8,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.424120475 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===========================>                          (60 + 60) / 120][Stage 84:=================================>                    (75 + 45) / 120][Stage 84:======================================>               (86 + 34) / 120][Stage 84:==============================================>      (106 + 14) / 120]                                                                                [Stage 85:===========================>                          (62 + 59) / 121][Stage 85:================================>                     (73 + 48) / 121][Stage 85:=========================================>            (93 + 28) / 121][Stage 85:==================================================>   (113 + 8) / 121][Stage 85:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.776399868 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8  AND partitionZIndex<=11", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=11,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.354515415 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 86:=====================================>                (79 + 36) / 115][Stage 86:=======================================>              (84 + 31) / 115][Stage 86:==========================================>           (91 + 24) / 115][Stage 86:==============================================>      (101 + 14) / 115][Stage 86:===================================================>  (110 + 5) / 115]                                                                                [Stage 87:=======================================>              (84 + 32) / 116][Stage 87:==========================================>           (91 + 25) / 116][Stage 87:==============================================>      (102 + 14) / 116][Stage 87:================================================>    (106 + 10) / 116][Stage 87:====================================================> (113 + 3) / 116][Stage 87:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.245576213 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 59 AND partitionZIndex<=162", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=162,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.397702298 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 88:================================>                     (72 + 46) / 118][Stage 88:=================================>                    (74 + 44) / 118][Stage 88:========================================>             (89 + 29) / 118][Stage 88:==============================================>      (104 + 14) / 118][Stage 88:==================================================>   (111 + 7) / 118][Stage 88:=====================================================>(117 + 1) / 118]                                                                                [Stage 89:=================================>                    (73 + 46) / 119][Stage 89:===================================>                  (78 + 41) / 119][Stage 89:=========================================>            (92 + 27) / 119][Stage 89:================================================>    (108 + 11) / 119]                                                                                Time elapsed: 3.310323283 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 14 AND partitionZIndex<=117", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=117,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.400225217 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 90:================================>                     (69 + 46) / 115][Stage 90:======================================>               (83 + 32) / 115][Stage 90:===============================================>     (102 + 13) / 115][Stage 90:====================================================> (112 + 3) / 115]                                                                                [Stage 91:==============================>                       (65 + 51) / 116][Stage 91:==================================>                   (74 + 42) / 116][Stage 91:===========================================>          (94 + 22) / 116][Stage 91:===================================================>  (110 + 6) / 116][Stage 91:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.969604741 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 27 AND partitionZIndex<=130", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=127 AND partitionZIndex<=130,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.371785083 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 92:=================================>                    (71 + 42) / 113][Stage 92:=======================================>              (83 + 30) / 113][Stage 92:============================================>         (93 + 20) / 113][Stage 92:=================================================>    (104 + 9) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:==================================>                   (73 + 41) / 114][Stage 93:========================================>             (85 + 29) / 114][Stage 93:=============================================>        (96 + 18) / 114][Stage 93:==================================================>   (107 + 7) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.05915133 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 5 AND partitionZIndex<=98", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=98,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.435517428 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 94:==========================>                           (60 + 61) / 121][Stage 94:===========================>                          (62 + 59) / 121][Stage 94:==================================>                   (78 + 43) / 121][Stage 94:==========================================>           (95 + 26) / 121][Stage 94:==================================================>   (113 + 8) / 121]                                                                                [Stage 95:===========================>                          (61 + 61) / 122][Stage 95:=================================>                    (76 + 46) / 122][Stage 95:=========================================>            (94 + 28) / 122][Stage 95:===================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.18348019 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2  AND partitionZIndex<=5", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=5,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.38792869 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 96:================================>                     (70 + 45) / 115][Stage 96:====================================>                 (78 + 37) / 115][Stage 96:==============================================>       (98 + 17) / 115][Stage 96:===================================================>  (109 + 6) / 115][Stage 96:====================================================> (112 + 3) / 115][Stage 96:=====================================================>(114 + 1) / 115]                                                                                [Stage 97:==============================>                       (66 + 50) / 116][Stage 97:======================================>               (83 + 33) / 116][Stage 97:============================================>         (96 + 20) / 116][Stage 97:==================================================>   (109 + 7) / 116][Stage 97:====================================================> (113 + 3) / 116][Stage 97:=====================================================>(114 + 2) / 116][Stage 97:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.549270728 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 0 AND partitionZIndex<=33", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=33,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.368477568 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=====================================>                (79 + 34) / 113][Stage 98:===========================================>          (91 + 22) / 113][Stage 98:==============================================>      (100 + 13) / 113][Stage 98:===================================================>  (108 + 5) / 113]                                                                                [Stage 99:=====================================>                (79 + 35) / 114][Stage 99:=========================================>            (87 + 27) / 114][Stage 99:==============================================>       (98 + 16) / 114][Stage 99:=================================================>    (105 + 9) / 114][Stage 99:====================================================> (111 + 3) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.293222427 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 77 AND partitionZIndex<=180", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=180,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.376443082 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 100:=====================================>               (79 + 34) / 113][Stage 100:==========================================>          (90 + 23) / 113][Stage 100:=============================================>       (97 + 16) / 113][Stage 100:==================================================>  (108 + 5) / 113][Stage 100:====================================================>(112 + 1) / 113]                                                                                [Stage 101:===================================>                 (77 + 37) / 114][Stage 101:========================================>            (88 + 26) / 114][Stage 101:============================================>        (96 + 18) / 114][Stage 101:===================================================> (110 + 4) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.165296228 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 46 AND partitionZIndex<=149", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=149,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.433735274 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 102:=================================>                   (71 + 42) / 113][Stage 102:=======================================>             (85 + 28) / 113][Stage 102:============================================>        (95 + 18) / 113][Stage 102:=================================================>   (105 + 8) / 113]                                                                                [Stage 103:===================================>                 (76 + 38) / 114][Stage 103:=========================================>           (89 + 25) / 114][Stage 103:==============================================>     (103 + 11) / 114][Stage 103:===================================================> (111 + 3) / 114][Stage 103:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.948713176 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 23 AND partitionZIndex<=126", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=126,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402684401 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (58 + 55) / 113][Stage 104:============================>                        (61 + 52) / 113][Stage 104:====================================>                (77 + 36) / 113][Stage 104:=============================================>       (97 + 16) / 113][Stage 104:===================================================> (110 + 3) / 113]                                                                                [Stage 105:=============================>                       (64 + 50) / 114][Stage 105:====================================>                (79 + 35) / 114][Stage 105:==============================================>     (101 + 13) / 114][Stage 105:===================================================> (110 + 4) / 114][Stage 105:====================================================>(112 + 2) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.553665793 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 2 AND partitionZIndex<=65", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=65,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.44128653 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:=============================>                       (67 + 54) / 121][Stage 106:===================================>                 (80 + 41) / 121][Stage 106:==========================================>          (98 + 23) / 121][Stage 106:===================================================> (118 + 3) / 121]                                                                                [Stage 107:============================>                        (66 + 56) / 122][Stage 107:=================================>                   (78 + 44) / 122][Stage 107:==========================================>          (97 + 25) / 122][Stage 107:=================================================>   (115 + 7) / 122][Stage 107:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.451435926 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 5 AND partitionZIndex<=78", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=78,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.423013466 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (60 + 61) / 121][Stage 108:==============================>                      (70 + 51) / 121][Stage 108:===================================>                 (82 + 39) / 121][Stage 108:==============================================>     (108 + 13) / 121][Stage 108:====================================================>(120 + 1) / 121]                                                                                [Stage 109:==========================>                          (61 + 61) / 122][Stage 109:=============================>                       (68 + 54) / 122][Stage 109:=====================================>               (86 + 36) / 122][Stage 109:=============================================>      (107 + 15) / 122][Stage 109:====================================================>(120 + 2) / 122][Stage 109:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.457069428 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 0 AND partitionZIndex<=63", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=63,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.422721006 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (58 + 55) / 113][Stage 110:=============================>                       (62 + 51) / 113][Stage 110:===================================>                 (75 + 38) / 113][Stage 110:=============================================>       (96 + 17) / 113][Stage 110:=================================================>   (106 + 7) / 113]                                                                                [Stage 111:===========================>                         (60 + 54) / 114][Stage 111:=================================>                   (73 + 41) / 114][Stage 111:=============================================>      (100 + 14) / 114][Stage 111:==================================================>  (109 + 5) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.456970455 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=103", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=103,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.38330658 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (59 + 54) / 113][Stage 112:=============================>                       (62 + 51) / 113][Stage 112:===================================>                 (75 + 38) / 113][Stage 112:================================================>    (104 + 9) / 113]                                                                                [Stage 113:============================>                        (62 + 52) / 114][Stage 113:===============================>                     (68 + 46) / 114][Stage 113:=========================================>           (89 + 25) / 114][Stage 113:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.027723659 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 32 AND partitionZIndex<=135", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=135,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.403461344 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (62 + 59) / 121][Stage 114:================================>                    (75 + 46) / 121][Stage 114:========================================>            (92 + 29) / 121][Stage 114:===================================================> (118 + 3) / 121]                                                                                [Stage 115:==========================>                          (62 + 60) / 122][Stage 115:=================================>                   (77 + 45) / 122][Stage 115:==========================================>          (97 + 25) / 122][Stage 115:==================================================>  (116 + 6) / 122][Stage 115:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.535516763 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 6 AND partitionZIndex<=19", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=16 AND partitionZIndex<=19,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.392033555 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (58 + 55) / 113][Stage 116:================================>                    (69 + 44) / 113][Stage 116:===========================================>         (92 + 21) / 113][Stage 116:===================================================> (110 + 3) / 113]                                                                                [Stage 117:============================>                        (61 + 53) / 114][Stage 117:=================================>                   (73 + 41) / 114][Stage 117:==========================================>          (91 + 23) / 114][Stage 117:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.187176478 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 22 AND partitionZIndex<=125", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=122 AND partitionZIndex<=125,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.339797198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 118:======================================>              (83 + 32) / 115][Stage 118:===========================================>         (95 + 20) / 115][Stage 118:===================================================> (112 + 3) / 115]                                                                                [Stage 119:=======================================>             (86 + 30) / 116][Stage 119:==========================================>          (94 + 22) / 116][Stage 119:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.539821659 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 2 AND partitionZIndex<=55", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=52 AND partitionZIndex<=55,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.361900741 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 120:=====================================>               (80 + 33) / 113][Stage 120:=========================================>           (88 + 25) / 113][Stage 120:=============================================>       (98 + 15) / 113][Stage 120:==================================================>  (107 + 6) / 113][Stage 120:====================================================>(112 + 1) / 113]                                                                                [Stage 121:======================================>              (83 + 31) / 114][Stage 121:=========================================>           (89 + 25) / 114][Stage 121:=============================================>       (98 + 16) / 114][Stage 121:===================================================> (110 + 4) / 114][Stage 121:====================================================>(112 + 2) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.769981663 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 7 AND partitionZIndex<=60", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=60,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.408229004 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 60) / 120][Stage 122:=============================>                       (67 + 53) / 120][Stage 122:=====================================>               (85 + 35) / 120][Stage 122:=============================================>      (106 + 14) / 120][Stage 122:====================================================>(119 + 1) / 120]                                                                                [Stage 123:===========================>                         (62 + 59) / 121][Stage 123:==============================>                      (70 + 51) / 121][Stage 123:===================================>                 (81 + 40) / 121][Stage 123:=============================================>      (106 + 15) / 121][Stage 123:===================================================> (118 + 3) / 121][Stage 123:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.564718106 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 0 AND partitionZIndex<=93", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=93,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.375936671 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==============================>                      (66 + 49) / 115][Stage 124:=====================================>               (81 + 34) / 115][Stage 124:============================================>        (97 + 18) / 115][Stage 124:==============================================>     (103 + 12) / 115][Stage 124:===================================================> (112 + 3) / 115][Stage 124:====================================================>(114 + 1) / 115]                                                                                [Stage 125:===============================>                     (70 + 46) / 116][Stage 125:=========================================>           (91 + 25) / 116][Stage 125:==============================================>     (103 + 13) / 116]                                                                                Time elapsed: 2.839067329 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 25 AND partitionZIndex<=228", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=228,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.390956119 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 126:===========================>                         (58 + 55) / 113][Stage 126:================================>                    (69 + 44) / 113][Stage 126:=====================================>               (80 + 33) / 113][Stage 126:=============================================>       (97 + 16) / 113][Stage 126:===================================================> (110 + 3) / 113]                                                                                [Stage 127:============================>                        (62 + 52) / 114][Stage 127:=================================>                   (73 + 41) / 114][Stage 127:============================================>        (95 + 19) / 114][Stage 127:===================================================> (111 + 3) / 114][Stage 127:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.412687643 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 43 AND partitionZIndex<=146", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=143 AND partitionZIndex<=146,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.376472532 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===============================>                     (68 + 47) / 115][Stage 128:=====================================>               (82 + 33) / 115][Stage 128:=============================================>       (98 + 17) / 115][Stage 128:==================================================>  (110 + 5) / 115]                                                                                [Stage 129:=================================>                   (74 + 42) / 116][Stage 129:==========================================>          (92 + 24) / 116][Stage 129:==============================================>     (103 + 13) / 116][Stage 129:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.685198704 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 48 AND partitionZIndex<=151", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=151,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.346835836 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 130:=====================================>               (82 + 33) / 115][Stage 130:==========================================>          (92 + 23) / 115][Stage 130:==============================================>     (102 + 13) / 115][Stage 130:===================================================> (112 + 3) / 115]                                                                                [Stage 131:=====================================>               (81 + 35) / 116][Stage 131:======================================>              (85 + 31) / 116][Stage 131:===========================================>         (96 + 20) / 116][Stage 131:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.747913417 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 8 AND partitionZIndex<=71", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=71,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.396180137 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (60 + 60) / 120][Stage 132:==============================>                      (68 + 52) / 120][Stage 132:=====================================>               (85 + 35) / 120][Stage 132:============================================>       (103 + 17) / 120][Stage 132:===================================================> (117 + 3) / 120]                                                                                [Stage 133:==========================>                          (61 + 60) / 121][Stage 133:=============================>                       (68 + 53) / 121][Stage 133:=================================>                   (76 + 45) / 121][Stage 133:=========================================>           (94 + 27) / 121][Stage 133:=================================================>   (114 + 7) / 121][Stage 133:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.475302271 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 64 AND partitionZIndex<=167", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=167,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.33262381 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=====================================>               (81 + 34) / 115][Stage 134:=========================================>           (91 + 24) / 115][Stage 134:===============================================>    (105 + 10) / 115][Stage 134:===================================================> (112 + 3) / 115][Stage 134:====================================================>(113 + 2) / 115]                                                                                [Stage 135:=======================================>             (86 + 30) / 116][Stage 135:============================================>        (98 + 18) / 116][Stage 135:=================================================>   (109 + 7) / 116][Stage 135:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.970032148 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 1 AND partitionZIndex<=14", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.386376607 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (59 + 54) / 113][Stage 136:============================>                        (61 + 52) / 113][Stage 136:==================================>                  (74 + 39) / 113][Stage 136:==========================================>          (91 + 22) / 113][Stage 136:===============================================>    (103 + 10) / 113][Stage 136:====================================================>(112 + 1) / 113]                                                                                [Stage 137:============================>                        (61 + 53) / 114][Stage 137:==================================>                  (75 + 39) / 114][Stage 137:=========================================>           (89 + 25) / 114][Stage 137:==================================================>  (108 + 6) / 114][Stage 137:==================================================>  (109 + 5) / 114][Stage 137:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.029267925 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 8 AND partitionZIndex<=101", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=101,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.392735782 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (59 + 54) / 113][Stage 138:==============================>                      (66 + 47) / 113][Stage 138:======================================>              (83 + 30) / 113][Stage 138:=================================================>   (105 + 8) / 113]                                                                                [Stage 139:============================>                        (61 + 53) / 114][Stage 139:=================================>                   (73 + 41) / 114][Stage 139:===========================================>         (94 + 20) / 114][Stage 139:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.151700353 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 4 AND partitionZIndex<=67", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=67,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.360350869 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===============================>                     (71 + 47) / 118][Stage 140:===================================>                 (80 + 38) / 118][Stage 140:=========================================>           (93 + 25) / 118][Stage 140:==================================================>  (112 + 6) / 118]                                                                                [Stage 141:================================>                    (73 + 46) / 119][Stage 141:=====================================>               (84 + 35) / 119][Stage 141:============================================>       (102 + 17) / 119][Stage 141:====================================================>(117 + 2) / 119][Stage 141:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.107051735 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 15 AND partitionZIndex<=218", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=218,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.366933084 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==============================>                      (67 + 48) / 115][Stage 142:===================================>                 (77 + 38) / 115][Stage 142:==========================================>          (92 + 23) / 115][Stage 142:=================================================>   (107 + 8) / 115][Stage 142:==================================================>  (110 + 5) / 115][Stage 142:====================================================>(113 + 2) / 115]                                                                                [Stage 143:==================================>                  (75 + 41) / 116][Stage 143:============================================>        (97 + 19) / 116][Stage 143:=================================================>   (109 + 7) / 116][Stage 143:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.1819177 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 38 AND partitionZIndex<=241", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=241,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.370070903 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==============================>                      (67 + 48) / 115][Stage 144:=================================>                   (73 + 42) / 115][Stage 144:=========================================>           (90 + 25) / 115][Stage 144:=================================================>   (107 + 8) / 115][Stage 144:====================================================>(114 + 1) / 115]                                                                                [Stage 145:===============================>                     (70 + 46) / 116][Stage 145:=======================================>             (86 + 30) / 116][Stage 145:==============================================>     (103 + 13) / 116][Stage 145:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.692529798 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 08 AND partitionZIndex<=111", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.396698082 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (59 + 54) / 113][Stage 146:=================================>                   (72 + 41) / 113][Stage 146:============================================>        (95 + 18) / 113][Stage 146:===================================================> (109 + 4) / 113]                                                                                [Stage 147:===========================>                         (59 + 55) / 114][Stage 147:=============================>                       (64 + 50) / 114][Stage 147:======================================>              (82 + 32) / 114][Stage 147:===============================================>    (104 + 10) / 114][Stage 147:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.243419982 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 57 AND partitionZIndex<=160", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=160,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.348650441 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 148:=====================================>               (81 + 32) / 113][Stage 148:==========================================>          (91 + 22) / 113][Stage 148:==============================================>     (102 + 11) / 113][Stage 148:===================================================> (110 + 3) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:==================================>                  (74 + 40) / 114][Stage 149:========================================>            (87 + 27) / 114][Stage 149:=============================================>       (98 + 16) / 114][Stage 149:==================================================>  (109 + 5) / 114][Stage 149:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.984823034 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 4 AND partitionZIndex<=97", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=97,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.349163241 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 150:====================================>                (77 + 36) / 113][Stage 150:=========================================>           (88 + 25) / 113][Stage 150:=============================================>       (98 + 15) / 113][Stage 150:==================================================>  (107 + 6) / 113][Stage 150:====================================================>(111 + 2) / 113]                                                                                [Stage 151:====================================>                (79 + 35) / 114][Stage 151:=======================================>             (85 + 29) / 114][Stage 151:============================================>        (95 + 19) / 114][Stage 151:================================================>    (105 + 9) / 114][Stage 151:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.021855909 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 61 AND partitionZIndex<=164", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=164,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.403558618 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (58 + 55) / 113][Stage 152:==================================>                  (73 + 40) / 113][Stage 152:=========================================>           (89 + 24) / 113][Stage 152:================================================>    (104 + 9) / 113][Stage 152:====================================================>(111 + 2) / 113]                                                                                [Stage 153:============================>                        (62 + 52) / 114][Stage 153:=================================>                   (73 + 41) / 114][Stage 153:==========================================>          (91 + 23) / 114][Stage 153:=================================================>   (106 + 8) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.621711338 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 43 AND partitionZIndex<=246", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=246,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.346516424 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 154:=====================================>               (79 + 34) / 113][Stage 154:==========================================>          (90 + 23) / 113][Stage 154:=============================================>       (96 + 17) / 113][Stage 154:===================================================> (110 + 3) / 113]                                                                                [Stage 155:=====================================>               (80 + 34) / 114][Stage 155:===========================================>         (93 + 21) / 114][Stage 155:==============================================>     (101 + 13) / 114][Stage 155:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.818950001 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 2 AND partitionZIndex<=45", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=45,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.366973569 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (70 + 45) / 115][Stage 156:=========================================>           (89 + 26) / 115][Stage 156:=============================================>       (99 + 16) / 115][Stage 156:==================================================>  (110 + 5) / 115]                                                                                [Stage 157:================================>                    (71 + 45) / 116][Stage 157:========================================>            (89 + 27) / 116][Stage 157:==============================================>     (103 + 13) / 116][Stage 157:===================================================> (112 + 4) / 116][Stage 157:====================================================>(114 + 2) / 116][Stage 157:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.285419605 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 36 AND partitionZIndex<=239", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=239,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.387550254 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===========================>                         (59 + 54) / 113][Stage 158:=============================>                       (63 + 50) / 113][Stage 158:==================================>                  (73 + 40) / 113][Stage 158:===========================================>         (92 + 21) / 113][Stage 158:===================================================> (109 + 4) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:===========================>                         (59 + 55) / 114][Stage 159:==============================>                      (66 + 48) / 114][Stage 159:=====================================>               (81 + 33) / 114][Stage 159:==============================================>     (101 + 13) / 114][Stage 159:===================================================> (110 + 4) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.534200087 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 7 AND partitionZIndex<=80", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=80,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.394486729 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==========================>                          (60 + 60) / 120][Stage 160:==============================>                      (69 + 51) / 120][Stage 160:=====================================>               (86 + 34) / 120][Stage 160:==============================================>     (108 + 12) / 120][Stage 160:====================================================>(119 + 1) / 120]                                                                                [Stage 161:==========================>                          (61 + 60) / 121][Stage 161:==============================>                      (69 + 52) / 121][Stage 161:===================================>                 (81 + 40) / 121][Stage 161:==========================================>         (100 + 21) / 121][Stage 161:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.144477821 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 7 AND partitionZIndex<=40", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.399198966 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 60) / 120][Stage 162:============================>                        (64 + 56) / 120][Stage 162:====================================>                (82 + 38) / 120][Stage 162:===============================================>    (109 + 11) / 120]                                                                                [Stage 163:===========================>                         (63 + 58) / 121][Stage 163:===============================>                     (71 + 50) / 121][Stage 163:======================================>              (87 + 34) / 121][Stage 163:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.119730546 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 52 AND partitionZIndex<=155", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=155,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.355312241 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 164:================================>                    (72 + 46) / 118][Stage 164:=================================>                   (75 + 43) / 118][Stage 164:======================================>              (85 + 33) / 118][Stage 164:=============================================>      (104 + 14) / 118][Stage 164:===================================================> (114 + 4) / 118]                                                                                [Stage 165:=================================>                   (76 + 43) / 119][Stage 165:=======================================>             (88 + 31) / 119][Stage 165:================================================>    (110 + 9) / 119][Stage 165:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.192203494 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 14 AND partitionZIndex<=217", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=217,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.37025231 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==================================>                  (75 + 40) / 115][Stage 166:=========================================>           (89 + 26) / 115][Stage 166:===============================================>    (104 + 11) / 115][Stage 166:====================================================>(114 + 1) / 115]                                                                                [Stage 167:=================================>                   (73 + 43) / 116][Stage 167:=========================================>           (91 + 25) / 116][Stage 167:===============================================>    (106 + 10) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.8858546 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 9 AND partitionZIndex<=72", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=72,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.364278935 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==============================>                      (67 + 48) / 115][Stage 168:=====================================>               (81 + 34) / 115][Stage 168:===========================================>         (95 + 20) / 115][Stage 168:==================================================>  (110 + 5) / 115][Stage 168:====================================================>(113 + 2) / 115]                                                                                [Stage 169:================================>                    (72 + 44) / 116][Stage 169:=========================================>           (91 + 25) / 116][Stage 169:=============================================>       (99 + 17) / 116][Stage 169:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.039452245 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 42 AND partitionZIndex<=245", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=245,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.35890554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 170:====================================>                (78 + 35) / 113][Stage 170:==========================================>          (90 + 23) / 113][Stage 170:==============================================>     (101 + 12) / 113][Stage 170:===================================================> (110 + 3) / 113]                                                                                [Stage 171:=======================================>             (84 + 30) / 114][Stage 171:===========================================>         (93 + 21) / 114][Stage 171:==================================================>  (109 + 5) / 114][Stage 171:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.928565336 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 6 AND partitionZIndex<=89", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=89,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.332711681 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 172:====================================>                (80 + 35) / 115][Stage 172:=======================================>             (86 + 29) / 115][Stage 172:==============================================>     (103 + 12) / 115][Stage 172:==================================================>  (109 + 6) / 115][Stage 172:====================================================>(113 + 2) / 115][Stage 172:====================================================>(114 + 1) / 115]                                                                                [Stage 173:======================================>              (85 + 31) / 116][Stage 173:===========================================>         (95 + 21) / 116][Stage 173:==================================================>  (110 + 6) / 116][Stage 173:===================================================> (112 + 4) / 116][Stage 173:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.105160004 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 01 AND partitionZIndex<=204", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=204,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.381811483 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 174:============================>                        (60 + 53) / 113][Stage 174:==============================>                      (66 + 47) / 113][Stage 174:======================================>              (83 + 30) / 113][Stage 174:===============================================>    (103 + 10) / 113][Stage 174:====================================================>(112 + 1) / 113]                                                                                [Stage 175:===========================>                         (59 + 55) / 114][Stage 175:=============================>                       (64 + 50) / 114][Stage 175:===================================>                 (77 + 37) / 114][Stage 175:=============================================>      (100 + 14) / 114][Stage 175:====================================================>(112 + 2) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.821386914 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 37 AND partitionZIndex<=140", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=140,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.386142381 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==========================>                          (60 + 60) / 120][Stage 176:============================>                        (64 + 56) / 120][Stage 176:==================================>                  (79 + 41) / 120][Stage 176:===============================================>    (109 + 11) / 120]                                                                                [Stage 177:=============================>                       (67 + 54) / 121][Stage 177:==================================>                  (79 + 42) / 121][Stage 177:=======================================>             (91 + 30) / 121][Stage 177:=================================================>   (112 + 9) / 121][Stage 177:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.083809532 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 44 AND partitionZIndex<=147", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=147,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.388571639 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (60 + 61) / 121][Stage 178:===========================>                         (63 + 58) / 121][Stage 178:========================================>            (92 + 29) / 121][Stage 178:===============================================>    (110 + 11) / 121][Stage 178:====================================================>(120 + 1) / 121]                                                                                [Stage 179:==========================>                          (61 + 61) / 122][Stage 179:=============================>                       (67 + 55) / 122][Stage 179:====================================>                (84 + 38) / 122][Stage 179:===========================================>        (103 + 19) / 122][Stage 179:=================================================>   (114 + 8) / 122][Stage 179:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.928623045 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 27 AND partitionZIndex<=230", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=230,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.347110172 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=====================================>               (81 + 32) / 113][Stage 180:=========================================>           (88 + 25) / 113][Stage 180:=============================================>       (98 + 15) / 113][Stage 180:===================================================> (110 + 3) / 113]                                                                                [Stage 181:=======================================>             (86 + 28) / 114][Stage 181:=============================================>       (97 + 17) / 114][Stage 181:==================================================>  (108 + 6) / 114][Stage 181:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.803168 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 02 AND partitionZIndex<=205", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=205,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.412713563 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (58 + 55) / 113][Stage 182:============================>                        (61 + 52) / 113][Stage 182:====================================>                (77 + 36) / 113][Stage 182:=============================================>       (97 + 16) / 113][Stage 182:====================================================>(111 + 2) / 113]                                                                                [Stage 183:===========================>                         (59 + 55) / 114][Stage 183:==============================>                      (66 + 48) / 114][Stage 183:========================================>            (87 + 27) / 114][Stage 183:=================================================>   (107 + 7) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.156275873 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 8 AND partitionZIndex<=41", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=41,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.469469839 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (59 + 54) / 113][Stage 184:==============================>                      (66 + 47) / 113][Stage 184:====================================>                (78 + 35) / 113][Stage 184:=============================================>       (98 + 15) / 113][Stage 184:===================================================> (109 + 4) / 113]                                                                                [Stage 185:===========================>                         (59 + 55) / 114][Stage 185:=============================>                       (64 + 50) / 114][Stage 185:=======================================>             (86 + 28) / 114][Stage 185:==============================================>     (102 + 12) / 114][Stage 185:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.312350459 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 99 AND partitionZIndex<=202", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=202,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.389097722 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (62 + 59) / 121][Stage 186:==============================>                      (69 + 52) / 121][Stage 186:======================================>              (89 + 32) / 121][Stage 186:============================================>       (103 + 18) / 121][Stage 186:====================================================>(119 + 2) / 121]                                                                                [Stage 187:==========================>                          (61 + 61) / 122][Stage 187:===============================>                     (72 + 50) / 122][Stage 187:======================================>              (89 + 33) / 122][Stage 187:===============================================>    (112 + 10) / 122][Stage 187:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.541154649 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 75 AND partitionZIndex<=178", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=178,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.382998407 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 61) / 121][Stage 188:============================>                        (65 + 56) / 121][Stage 188:=================================>                   (76 + 45) / 121][Stage 188:===========================================>        (102 + 19) / 121][Stage 188:==================================================>  (116 + 5) / 121]                                                                                [Stage 189:==========================>                          (62 + 60) / 122][Stage 189:==============================>                      (71 + 51) / 122][Stage 189:==========================================>         (100 + 22) / 122][Stage 189:=================================================>   (115 + 7) / 122][Stage 189:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.505617324 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 9 AND partitionZIndex<=102", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=102,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.426208856 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 190:====================================>                (77 + 36) / 113][Stage 190:========================================>            (87 + 26) / 113][Stage 190:============================================>        (95 + 18) / 113][Stage 190:================================================>    (104 + 9) / 113][Stage 190:====================================================>(111 + 2) / 113]                                                                                [Stage 191:==================================>                  (75 + 39) / 114][Stage 191:=========================================>           (90 + 24) / 114][Stage 191:=============================================>      (100 + 14) / 114][Stage 191:==================================================>  (108 + 6) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.03346441 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 65 AND partitionZIndex<=168", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=168,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.345012253 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==================================>                  (73 + 40) / 113][Stage 192:=========================================>           (89 + 24) / 113][Stage 192:============================================>        (94 + 19) / 113][Stage 192:================================================>    (104 + 9) / 113][Stage 192:====================================================>(111 + 2) / 113]                                                                                [Stage 193:===================================>                 (76 + 38) / 114][Stage 193:=========================================>           (89 + 25) / 114][Stage 193:==============================================>      (99 + 15) / 114][Stage 193:================================================>    (105 + 9) / 114][Stage 193:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.96548142 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 23 AND partitionZIndex<=226", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=226,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.357261682 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=================================>                   (71 + 42) / 113][Stage 194:=====================================>               (81 + 32) / 113][Stage 194:===========================================>         (92 + 21) / 113][Stage 194:================================================>    (104 + 9) / 113][Stage 194:====================================================>(111 + 2) / 113]                                                                                [Stage 195:========================================>            (87 + 27) / 114][Stage 195:============================================>        (95 + 19) / 114][Stage 195:=================================================>   (107 + 7) / 114][Stage 195:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.927273842 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 71 AND partitionZIndex<=174", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=174,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402313643 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===========================>                         (59 + 54) / 113][Stage 196:==============================>                      (64 + 49) / 113][Stage 196:======================================>              (83 + 30) / 113][Stage 196:===============================================>    (103 + 10) / 113][Stage 196:====================================================>(111 + 2) / 113][Stage 196:====================================================>(112 + 1) / 113]                                                                                [Stage 197:===========================>                         (59 + 55) / 114][Stage 197:===============================>                     (67 + 47) / 114][Stage 197:=========================================>           (90 + 24) / 114][Stage 197:=================================================>   (107 + 7) / 114][Stage 197:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.401855703 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 1 AND partitionZIndex<=74", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=74,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.342207271 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=====================================>               (82 + 33) / 115][Stage 198:========================================>            (88 + 27) / 115][Stage 198:===============================================>    (105 + 10) / 115][Stage 198:====================================================>(113 + 2) / 115]                                                                                [Stage 199:=====================================>               (82 + 34) / 116][Stage 199:=========================================>           (90 + 26) / 116][Stage 199:===============================================>    (106 + 10) / 116][Stage 199:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.493907424 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 7 AND partitionZIndex<=70", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=70,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.33200343 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 200:=======================================>             (86 + 29) / 115][Stage 200:============================================>        (96 + 19) / 115][Stage 200:===================================================> (111 + 4) / 115][Stage 200:====================================================>(113 + 2) / 115]                                                                                [Stage 201:=======================================>             (86 + 30) / 116][Stage 201:==========================================>          (94 + 22) / 116][Stage 201:=================================================>   (108 + 8) / 116][Stage 201:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.81941963 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m37.033s
user	11m57.244s
sys	0m57.208s
