Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 18:02:56 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:03:11 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:03:11 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:03:11 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 18:03:14 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 18:03:24 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524180313-0577).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.427231752 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:==========================>                            (56 + 59) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:=====================================>                 (78 + 37) / 115][Stage 0:============================================>          (93 + 22) / 115][Stage 0:=============================================>         (96 + 19) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:====================================================>  (109 + 6) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:==============================>                        (65 + 51) / 116][Stage 1:================================>                      (69 + 47) / 116][Stage 1:===================================>                   (75 + 41) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:=========================================>             (88 + 28) / 116][Stage 1:=============================================>         (96 + 20) / 116][Stage 1:===============================================>      (101 + 15) / 116][Stage 1:====================================================>  (111 + 5) / 116]                                                                                Time elapsed: 12.553977977 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52  OR  partitionIndex = 60  OR  pa rtitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex =  76  OR  partitionIndex = 77 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.752211853 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==================>                                    (37 + 76) / 113][Stage 2:=========================>                             (52 + 61) / 113][Stage 2:===========================>                           (57 + 56) / 113][Stage 2:=============================>                         (60 + 53) / 113][Stage 2:================================>                      (67 + 46) / 113][Stage 2:=====================================>                 (77 + 36) / 113][Stage 2:============================================>          (91 + 22) / 113][Stage 2:===============================================>       (98 + 15) / 113][Stage 2:=====================================================> (109 + 4) / 113]                                                                                [Stage 3:===========================>                           (57 + 57) / 114][Stage 3:============================>                          (60 + 54) / 114][Stage 3:================================>                      (67 + 47) / 114][Stage 3:====================================>                  (75 + 39) / 114][Stage 3:=========================================>             (87 + 27) / 114][Stage 3:===============================================>       (98 + 16) / 114][Stage 3:==================================================>    (105 + 9) / 114][Stage 3:====================================================>  (109 + 5) / 114][Stage 3:=====================================================> (110 + 4) / 114]                                                                                Time elapsed: 5.659415992 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR   partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIn dex = 177  OR  partitionIndex = 178 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 177  OR  partitionIndex = 178 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.654486489 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=========================>                             (53 + 60) / 113][Stage 4:============================>                          (58 + 55) / 113][Stage 4:=============================>                         (61 + 52) / 113][Stage 4:================================>                      (66 + 47) / 113][Stage 4:====================================>                  (75 + 38) / 113][Stage 4:=============================================>         (93 + 20) / 113][Stage 4:=================================================>    (103 + 10) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:===========================>                           (57 + 57) / 114][Stage 5:============================>                          (60 + 54) / 114][Stage 5:===============================>                       (65 + 49) / 114][Stage 5:=====================================>                 (78 + 36) / 114][Stage 5:=========================================>             (86 + 28) / 114][Stage 5:==================================================>    (105 + 9) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.57060175 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 14  OR  pa rtitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex =  30  OR  partitionIndex = 42 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.623891929 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=============================>                         (62 + 53) / 115][Stage 6:=================================>                     (70 + 45) / 115][Stage 6:===================================>                   (75 + 40) / 115][Stage 6:=======================================>               (83 + 32) / 115][Stage 6:===========================================>           (90 + 25) / 115][Stage 6:===============================================>       (99 + 16) / 115][Stage 6:===============================================>      (102 + 13) / 115][Stage 6:==================================================>    (106 + 9) / 115][Stage 6:====================================================>  (109 + 6) / 115][Stage 6:=====================================================> (111 + 4) / 115]                                                                                [Stage 7:==================================>                    (72 + 44) / 116][Stage 7:====================================>                  (78 + 38) / 116][Stage 7:==========================================>            (89 + 27) / 116][Stage 7:===========================================>           (92 + 24) / 116][Stage 7:==============================================>       (100 + 16) / 116][Stage 7:================================================>     (105 + 11) / 116][Stage 7:===================================================>   (109 + 7) / 116][Stage 7:====================================================>  (111 + 5) / 116][Stage 7:=====================================================> (113 + 3) / 116][Stage 7:======================================================>(114 + 2) / 116][Stage 7:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 11.976098792 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIn dex = 120  OR  partitionIndex = 121 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.598274209 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:>                                                        (0 + 0) / 113][Stage 8:========================>                              (50 + 63) / 113][Stage 8:==========================>                            (54 + 59) / 113][Stage 8:=============================>                         (61 + 52) / 113][Stage 8:===================================>                   (72 + 41) / 113][Stage 8:=======================================>               (82 + 31) / 113][Stage 8:===============================================>       (97 + 16) / 113][Stage 8:====================================================>  (108 + 5) / 113]                                                                                [Stage 9:============================>                          (59 + 55) / 114][Stage 9:===============================>                       (65 + 49) / 114][Stage 9:========================================>              (83 + 31) / 114][Stage 9:===============================================>       (99 + 15) / 114][Stage 9:====================================================>  (108 + 6) / 114][Stage 9:======================================================>(112 + 2) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.799033222 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  pa rtitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex =  58  OR  partitionIndex = 59 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.53216503 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:==============================>                       (65 + 50) / 115][Stage 10:===================================>                  (76 + 39) / 115][Stage 10:======================================>               (83 + 32) / 115][Stage 10:==============================================>      (100 + 15) / 115][Stage 10:====================================================> (112 + 3) / 115][Stage 10:=====================================================>(114 + 1) / 115]                                                                                [Stage 11:===============================>                      (67 + 49) / 116][Stage 11:==================================>                   (75 + 41) / 116][Stage 11:======================================>               (82 + 34) / 116][Stage 11:=========================================>            (89 + 27) / 116][Stage 11:=============================================>        (98 + 18) / 116][Stage 11:==============================================>      (102 + 14) / 116][Stage 11:==================================================>   (108 + 8) / 116][Stage 11:===================================================>  (110 + 6) / 116][Stage 11:===================================================>  (111 + 5) / 116][Stage 11:====================================================> (113 + 3) / 116][Stage 11:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 9.289246045 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  pa rtitionIndex = 74  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 101  OR  partitionIndex =  115  OR  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.486205692 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:=================================>                    (70 + 43) / 113][Stage 12:========================================>             (85 + 28) / 113][Stage 12:=============================================>        (95 + 18) / 113][Stage 12:================================================>    (103 + 10) / 113][Stage 12:==================================================>   (106 + 7) / 113][Stage 12:====================================================> (109 + 4) / 113][Stage 12:====================================================> (110 + 3) / 113][Stage 12:=====================================================>(112 + 1) / 113]                                                                                [Stage 13:==================================>                   (72 + 42) / 114][Stage 13:=====================================>                (80 + 34) / 114][Stage 13:=========================================>            (88 + 26) / 114][Stage 13:=============================================>        (96 + 18) / 114][Stage 13:==============================================>      (100 + 14) / 114][Stage 13:==================================================>   (107 + 7) / 114][Stage 13:===================================================>  (109 + 5) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.444513301 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  pa rtitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex =  99  OR  partitionIndex = 113 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.550489413 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:==========================>                           (60 + 61) / 121][Stage 14:=============================>                        (66 + 55) / 121][Stage 14:====================================>                 (81 + 40) / 121][Stage 14:===========================================>          (98 + 23) / 121][Stage 14:===============================================>     (108 + 13) / 121][Stage 14:==================================================>   (113 + 8) / 121][Stage 14:=====================================================>(120 + 1) / 121]                                                                                [Stage 15:===========================>                          (61 + 61) / 122][Stage 15:============================>                         (64 + 58) / 122][Stage 15:==================================>                   (77 + 45) / 122][Stage 15:==========================================>           (96 + 26) / 122][Stage 15:==============================================>      (107 + 15) / 122][Stage 15:===================================================>  (116 + 6) / 122][Stage 15:=====================================================>(120 + 2) / 122][Stage 15:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.083630766 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21   OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462506206 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=====================================>                (80 + 35) / 115][Stage 16:========================================>             (87 + 28) / 115][Stage 16:=============================================>        (97 + 18) / 115][Stage 16:===================================================>  (110 + 5) / 115][Stage 16:=====================================================>(114 + 1) / 115]                                                                                [Stage 17:=====================================>                (80 + 36) / 116][Stage 17:=======================================>              (84 + 32) / 116][Stage 17:==========================================>           (91 + 25) / 116][Stage 17:===============================================>     (103 + 13) / 116][Stage 17:==================================================>   (108 + 8) / 116][Stage 17:===================================================>  (111 + 5) / 116][Stage 17:====================================================> (112 + 4) / 116][Stage 17:=====================================================>(114 + 2) / 116][Stage 17:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.559442582 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  pa rtitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex =  42  OR  partitionIndex = 43 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.515602368 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:============================>                         (60 + 53) / 113][Stage 18:====================================>                 (77 + 36) / 113][Stage 18:=============================================>        (95 + 18) / 113][Stage 18:====================================================> (109 + 4) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:============================>                         (60 + 54) / 114][Stage 19:=============================>                        (62 + 52) / 114][Stage 19:===================================>                  (74 + 40) / 114][Stage 19:===========================================>          (91 + 23) / 114][Stage 19:===============================================>     (102 + 12) / 114][Stage 19:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.239941869 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR   partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIn dex = 178  OR  partitionIndex = 179 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.576911652 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:==========================>                           (60 + 61) / 121][Stage 20:=============================>                        (67 + 54) / 121][Stage 20:====================================>                 (81 + 40) / 121][Stage 20:============================================>        (102 + 19) / 121][Stage 20:==================================================>   (114 + 7) / 121]                                                                                [Stage 21:===========================>                          (61 + 61) / 122][Stage 21:==============================>                       (70 + 52) / 122][Stage 21:=======================================>              (89 + 33) / 122][Stage 21:=============================================>       (104 + 18) / 122][Stage 21:====================================================> (119 + 3) / 122][Stage 21:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.616610409 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  pa rtitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex =  45  OR  partitionIndex = 46 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.524979887 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:==============================>                       (66 + 49) / 115][Stage 22:==================================>                   (74 + 41) / 115][Stage 22:========================================>             (86 + 29) / 115][Stage 22:===============================================>     (102 + 13) / 115][Stage 22:===================================================>  (109 + 6) / 115][Stage 22:=====================================================>(113 + 2) / 115][Stage 22:=====================================================>(114 + 1) / 115]                                                                                [Stage 23:===============================>                      (67 + 49) / 116][Stage 23:==================================>                   (75 + 41) / 116][Stage 23:=========================================>            (90 + 26) / 116][Stage 23:============================================>         (96 + 20) / 116][Stage 23:==============================================>       (99 + 17) / 116][Stage 23:==============================================>      (101 + 15) / 116][Stage 23:====================================================> (112 + 4) / 116][Stage 23:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 8.69938696 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  pa rtitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex  = 117  OR  partitionIndex = 118 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518935853 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (60 + 61) / 121][Stage 24:===========================>                          (61 + 60) / 121][Stage 24:====================================>                 (82 + 39) / 121][Stage 24:===========================================>         (100 + 21) / 121][Stage 24:================================================>    (110 + 11) / 121][Stage 24:===================================================>  (116 + 5) / 121][Stage 24:=====================================================>(120 + 1) / 121]                                                                                [Stage 25:===========================>                          (61 + 61) / 122][Stage 25:===============================>                      (71 + 51) / 122][Stage 25:========================================>             (91 + 31) / 122][Stage 25:==================================================>   (113 + 9) / 122][Stage 25:===================================================>  (116 + 6) / 122][Stage 25:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.296456918 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 151  OR   partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIn dex = 167  OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505442001 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (60 + 60) / 120][Stage 26:============================>                         (64 + 56) / 120][Stage 26:==================================>                   (76 + 44) / 120][Stage 26:==========================================>           (95 + 25) / 120][Stage 26:===============================================>     (107 + 13) / 120]                                                                                [Stage 27:===========================>                          (62 + 59) / 121][Stage 27:==============================>                       (68 + 53) / 121][Stage 27:=====================================>                (84 + 37) / 121][Stage 27:===============================================>     (108 + 13) / 121][Stage 27:=====================================================>(119 + 2) / 121][Stage 27:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.776950788 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR   partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIn dex = 195  OR  partitionIndex = 196 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195  OR  partitionIndex = 196 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.507617048 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:==========================>                           (60 + 61) / 121][Stage 28:============================>                         (64 + 57) / 121][Stage 28:=====================================>                (84 + 37) / 121][Stage 28:==========================================>           (96 + 25) / 121][Stage 28:===================================================>  (115 + 6) / 121][Stage 28:=====================================================>(120 + 1) / 121]                                                                                [Stage 29:===========================>                          (61 + 61) / 122][Stage 29:=============================>                        (66 + 56) / 122][Stage 29:===================================>                  (80 + 42) / 122][Stage 29:==========================================>           (97 + 25) / 122][Stage 29:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 4.162204918 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIn dex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465966957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:==============================>                       (65 + 50) / 115][Stage 30:==================================>                   (73 + 42) / 115][Stage 30:=======================================>              (84 + 31) / 115][Stage 30:==============================================>       (98 + 17) / 115][Stage 30:====================================================> (111 + 4) / 115]                                                                                [Stage 31:=================================>                    (73 + 43) / 116][Stage 31:========================================>             (87 + 29) / 116][Stage 31:===============================================>     (105 + 11) / 116][Stage 31:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.944255079 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  part itionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49   OR  partitionIndex = 50 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.498954279 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (61 + 60) / 121][Stage 32:==============================>                       (68 + 53) / 121][Stage 32:=====================================>                (85 + 36) / 121][Stage 32:=============================================>       (103 + 18) / 121][Stage 32:==================================================>   (114 + 7) / 121][Stage 32:====================================================> (117 + 4) / 121]                                                                                [Stage 33:===========================>                          (61 + 61) / 122][Stage 33:==============================>                       (68 + 54) / 122][Stage 33:======================================>               (88 + 34) / 122][Stage 33:=============================================>       (104 + 18) / 122][Stage 33:================================================>    (112 + 10) / 122][Stage 33:====================================================> (118 + 4) / 122][Stage 33:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.630755958 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 154  OR   partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIn dex = 170  OR  partitionIndex = 171 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.492274943 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (58 + 55) / 113][Stage 34:===============================>                      (65 + 48) / 113][Stage 34:=======================================>              (83 + 30) / 113][Stage 34:===============================================>     (102 + 11) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:===========================>                          (59 + 55) / 114][Stage 35:===============================>                      (67 + 47) / 114][Stage 35:========================================>             (86 + 28) / 114][Stage 35:===============================================>     (102 + 12) / 114][Stage 35:===================================================>  (109 + 5) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.780029948 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 11 1  OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502850372 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==========================>                           (60 + 61) / 121][Stage 36:===========================>                          (61 + 60) / 121][Stage 36:===============================>                      (71 + 50) / 121][Stage 36:==========================================>           (96 + 25) / 121][Stage 36:===================================================>  (115 + 6) / 121]                                                                                [Stage 37:===========================>                          (61 + 61) / 122][Stage 37:==============================>                       (69 + 53) / 122][Stage 37:======================================>               (88 + 34) / 122][Stage 37:=============================================>       (105 + 17) / 122][Stage 37:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 3.964819477 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR   partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIn dex = 150  OR  partitionIndex = 151 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.492618618 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:===========================>                          (60 + 60) / 120][Stage 38:==============================>                       (68 + 52) / 120][Stage 38:=========================================>            (92 + 28) / 120][Stage 38:==================================================>   (112 + 8) / 120][Stage 38:=====================================================>(118 + 2) / 120]                                                                                [Stage 39:============================>                         (63 + 58) / 121][Stage 39:==================================>                   (78 + 43) / 121][Stage 39:=========================================>            (93 + 28) / 121][Stage 39:===============================================>     (109 + 12) / 121][Stage 39:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.065325636 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  pa rtitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex =  110  OR  partitionIndex = 111 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458634246 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:=================================>                    (71 + 44) / 115][Stage 40:=========================================>            (88 + 27) / 115][Stage 40:================================================>    (105 + 10) / 115][Stage 40:=====================================================>(114 + 1) / 115]                                                                                [Stage 41:================================>                     (70 + 46) / 116][Stage 41:========================================>             (88 + 28) / 116][Stage 41:===============================================>     (104 + 12) / 116][Stage 41:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.919279863 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 91  OR  pa rtitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex  = 107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.451680471 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:=================================>                    (71 + 42) / 113][Stage 42:=======================================>              (82 + 31) / 113][Stage 42:===========================================>          (90 + 23) / 113][Stage 42:=============================================>        (96 + 17) / 113][Stage 42:===================================================>  (108 + 5) / 113]                                                                                [Stage 43:======================================>               (82 + 32) / 114][Stage 43:=============================================>        (96 + 18) / 114][Stage 43:=================================================>    (105 + 9) / 114][Stage 43:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.071885861 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 156  OR   partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIn dex = 172  OR  partitionIndex = 180 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460511972 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:============================>                         (63 + 58) / 121][Stage 44:===============================>                      (71 + 50) / 121][Stage 44:=========================================>            (94 + 27) / 121][Stage 44:==================================================>   (114 + 7) / 121][Stage 44:=====================================================>(120 + 1) / 121]                                                                                [Stage 45:===========================>                          (62 + 60) / 122][Stage 45:============================>                         (65 + 57) / 122][Stage 45:====================================>                 (82 + 40) / 122][Stage 45:==============================================>      (107 + 15) / 122][Stage 45:====================================================> (119 + 3) / 122][Stage 45:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.83615984 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  pa rtitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex =  69  OR  partitionIndex = 83 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423443726 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:=================================>                    (73 + 45) / 118][Stage 46:=====================================>                (83 + 35) / 118][Stage 46:=============================================>        (99 + 19) / 118][Stage 46:================================================>    (108 + 10) / 118][Stage 46:====================================================> (114 + 4) / 118][Stage 46:=====================================================>(117 + 1) / 118]                                                                                [Stage 47:=================================>                    (73 + 46) / 119][Stage 47:==================================>                   (75 + 44) / 119][Stage 47:==========================================>           (93 + 26) / 119][Stage 47:==============================================>      (105 + 14) / 119][Stage 47:===================================================>  (114 + 5) / 119][Stage 47:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.534490025 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 122  OR   partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIn dex = 138  OR  partitionIndex = 150 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493716549 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:===========================>                          (60 + 60) / 120][Stage 48:===========================>                          (62 + 58) / 120][Stage 48:====================================>                 (81 + 39) / 120][Stage 48:============================================>        (101 + 19) / 120][Stage 48:==================================================>   (112 + 8) / 120][Stage 48:====================================================> (117 + 3) / 120]                                                                                [Stage 49:===========================>                          (61 + 60) / 121][Stage 49:=============================>                        (67 + 54) / 121][Stage 49:======================================>               (86 + 35) / 121][Stage 49:===========================================>         (100 + 21) / 121][Stage 49:===================================================>  (115 + 6) / 121][Stage 49:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.798549194 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIn dex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450588333 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (61 + 59) / 120][Stage 50:================================>                     (73 + 47) / 120][Stage 50:==========================================>           (94 + 26) / 120][Stage 50:==================================================>   (113 + 7) / 120]                                                                                [Stage 51:===========================>                          (61 + 60) / 121][Stage 51:=================================>                    (74 + 47) / 121][Stage 51:=========================================>            (93 + 28) / 121][Stage 51:===================================================>  (115 + 6) / 121][Stage 51:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.523567721 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIn dex = 210  OR  partitionIndex = 211 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406832696 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:==================================>                   (73 + 42) / 115][Stage 52:==========================================>           (91 + 24) / 115][Stage 52:===============================================>     (103 + 12) / 115][Stage 52:===================================================>  (109 + 6) / 115][Stage 52:=====================================================>(114 + 1) / 115]                                                                                [Stage 53:===============================>                      (67 + 49) / 116][Stage 53:===================================>                  (77 + 39) / 116][Stage 53:=============================================>        (98 + 18) / 116][Stage 53:================================================>    (106 + 10) / 116][Stage 53:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.199840196 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR   partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIn dex = 165  OR  partitionIndex = 166 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402298852 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=====================================>                (78 + 35) / 113][Stage 54:===========================================>          (90 + 23) / 113][Stage 54:===============================================>     (101 + 12) / 113][Stage 54:==================================================>   (105 + 8) / 113][Stage 54:=====================================================>(112 + 1) / 113]                                                                                [Stage 55:===================================>                  (75 + 39) / 114][Stage 55:=========================================>            (87 + 27) / 114][Stage 55:==============================================>      (101 + 13) / 114][Stage 55:=====================================================>(112 + 2) / 114][Stage 55:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.062725308 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 182  OR   partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIn dex = 198  OR  partitionIndex = 210 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419369834 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:================================>                     (69 + 46) / 115][Stage 56:=====================================>                (80 + 35) / 115][Stage 56:=============================================>        (96 + 19) / 115][Stage 56:===================================================>  (110 + 5) / 115]                                                                                [Stage 57:===================================>                  (76 + 40) / 116][Stage 57:========================================>             (88 + 28) / 116][Stage 57:===============================================>     (104 + 12) / 116][Stage 57:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.902130128 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR   partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIn dex = 155  OR  partitionIndex = 169 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398909532 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:================================>                     (72 + 46) / 118][Stage 58:===================================>                  (77 + 41) / 118][Stage 58:==========================================>           (92 + 26) / 118][Stage 58:=============================================>       (102 + 16) / 118][Stage 58:===================================================>  (113 + 5) / 118]                                                                                [Stage 59:==================================>                   (75 + 44) / 119][Stage 59:===================================>                  (78 + 41) / 119][Stage 59:=========================================>            (91 + 28) / 119][Stage 59:==============================================>      (105 + 14) / 119][Stage 59:===================================================>  (113 + 6) / 119][Stage 59:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.994392454 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIn dex = 145  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467203063 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (60 + 60) / 120][Stage 60:===========================>                          (62 + 58) / 120][Stage 60:==================================>                   (77 + 43) / 120][Stage 60:=============================================>       (102 + 18) / 120][Stage 60:=====================================================>(118 + 2) / 120]                                                                                [Stage 61:===========================>                          (61 + 60) / 121][Stage 61:============================>                         (63 + 58) / 121][Stage 61:===================================>                  (80 + 41) / 121][Stage 61:===============================================>     (109 + 12) / 121][Stage 61:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.511186292 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 151  OR   partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIn dex = 167  OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476479606 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (60 + 60) / 120][Stage 62:=============================>                        (65 + 55) / 120][Stage 62:===================================>                  (78 + 42) / 120][Stage 62:============================================>         (99 + 21) / 120][Stage 62:=====================================================>(118 + 2) / 120]                                                                                [Stage 63:=============================>                        (66 + 55) / 121][Stage 63:===================================>                  (80 + 41) / 121][Stage 63:=========================================>            (94 + 27) / 121][Stage 63:=================================================>    (112 + 9) / 121][Stage 63:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.614506015 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR   partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIn dex = 233  OR  partitionIndex = 234 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 233  OR  partitionIndex = 234 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417482515 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:==============================>                       (65 + 50) / 115][Stage 64:====================================>                 (77 + 38) / 115][Stage 64:==========================================>           (90 + 25) / 115][Stage 64:===================================================>  (109 + 6) / 115]                                                                                [Stage 65:=================================>                    (73 + 43) / 116][Stage 65:=======================================>              (84 + 32) / 116][Stage 65:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.645996277 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  pa rtitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex =  50  OR  partitionIndex = 51 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427903664 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:================================>                     (72 + 46) / 118][Stage 66:==================================>                   (76 + 42) / 118][Stage 66:=========================================>            (91 + 27) / 118][Stage 66:===============================================>     (105 + 13) / 118][Stage 66:=====================================================>(116 + 2) / 118]                                                                                [Stage 67:==================================>                   (76 + 43) / 119][Stage 67:=======================================>              (88 + 31) / 119][Stage 67:===============================================>     (106 + 13) / 119][Stage 67:==================================================>   (112 + 7) / 119][Stage 67:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.689957107 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 31  OR  par titionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 4 7  OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391360544 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:=================================>                    (70 + 43) / 113][Stage 68:======================================>               (81 + 32) / 113][Stage 68:==========================================>           (89 + 24) / 113][Stage 68:===============================================>     (102 + 11) / 113][Stage 68:====================================================> (110 + 3) / 113][Stage 68:=====================================================>(112 + 1) / 113]                                                                                [Stage 69:===================================>                  (75 + 39) / 114][Stage 69:==========================================>           (89 + 25) / 114][Stage 69:=============================================>        (95 + 19) / 114][Stage 69:===============================================>     (102 + 12) / 114][Stage 69:===================================================>  (109 + 5) / 114][Stage 69:=====================================================>(112 + 2) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 8.047382886 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  pa rtitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex =  46  OR  partitionIndex = 47 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396444585 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:======================================>               (82 + 33) / 115][Stage 70:==========================================>           (91 + 24) / 115][Stage 70:=================================================>    (106 + 9) / 115]                                                                                [Stage 71:========================================>             (87 + 29) / 116][Stage 71:============================================>         (95 + 21) / 116][Stage 71:===============================================>     (103 + 13) / 116][Stage 71:===============================================>     (105 + 11) / 116][Stage 71:====================================================> (113 + 3) / 116][Stage 71:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 6.933445768 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  pa rtitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex =  102  OR  partitionIndex = 103 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376847307 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:======================================>               (80 + 33) / 113][Stage 72:===========================================>          (90 + 23) / 113][Stage 72:=============================================>        (96 + 17) / 113][Stage 72:===============================================>     (102 + 11) / 113][Stage 72:=====================================================>(111 + 2) / 113]                                                                                [Stage 73:=====================================>                (80 + 34) / 114][Stage 73:===========================================>          (91 + 23) / 114][Stage 73:==============================================>       (98 + 16) / 114][Stage 73:====================================================> (111 + 3) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.346437219 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 104  OR   partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIn dex = 120  partitionIndex = 120 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422274465 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
org.apache.spark.sql.catalyst.parser.ParseException:
extraneous input 'partitionIndex' expecting {<EOF>, '.', '[', 'GROUP', 'ORDER', 'HAVING', 'LIMIT', 'OR', 'AND', 'IN', NOT, 'BETWEEN', 'LIKE', RLIKE, 'IS', 'WINDOW', 'UNION', 'EXCEPT', 'MINUS', 'INTERSECT', EQ, '<=>', '<>', '!=', '<', LTE, '>', GTE, '+', '-', '*', '/', '%', 'DIV', '&', '|', '^', 'SORT', 'CLUSTER', 'DISTRIBUTE'}(line 1, pos 213)

== SQL ==
SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------^^^

  at org.apache.spark.sql.catalyst.parser.ParseException.withCommand(ParseDriver.scala:197)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parse(ParseDriver.scala:99)
  at org.apache.spark.sql.execution.SparkSqlParser.parse(SparkSqlParser.scala:45)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parsePlan(ParseDriver.scala:53)
  at org.apache.spark.sql.SparkSession.sql(SparkSession.scala:592)
  at org.apache.spark.sql.SQLContext.sql(SQLContext.scala:699)
  at $anonfun$1.apply$mcI$sp(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  pa rtitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex =  49  OR  partitionIndex = 50 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36551097 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:=====================================>                (78 + 35) / 113][Stage 74:==========================================>           (88 + 25) / 113][Stage 74:=============================================>        (96 + 17) / 113][Stage 74:===================================================>  (108 + 5) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:======================================>               (81 + 33) / 114][Stage 75:========================================>             (85 + 29) / 114][Stage 75:============================================>         (94 + 20) / 114][Stage 75:==============================================>       (98 + 16) / 114][Stage 75:=================================================>    (105 + 9) / 114][Stage 75:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 7.452931335 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR   partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIn dex = 165  OR  partitionIndex = 166 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.447766544 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:==========================>                           (60 + 61) / 121][Stage 76:==============================>                       (68 + 53) / 121][Stage 76:======================================>               (86 + 35) / 121][Stage 76:===============================================>     (108 + 13) / 121][Stage 76:=====================================================>(120 + 1) / 121]                                                                                [Stage 77:===========================>                          (61 + 61) / 122][Stage 77:============================>                         (64 + 58) / 122][Stage 77:===================================>                  (80 + 42) / 122][Stage 77:===========================================>         (101 + 21) / 122][Stage 77:===================================================>  (116 + 6) / 122][Stage 77:====================================================> (119 + 3) / 122][Stage 77:=====================================================>(120 + 2) / 122][Stage 77:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.042120994 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR   partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIn dex = 235  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384835497 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:================================>                     (69 + 46) / 115][Stage 78:======================================>               (83 + 32) / 115][Stage 78:==============================================>       (98 + 17) / 115][Stage 78:=================================================>    (106 + 9) / 115][Stage 78:=====================================================>(114 + 1) / 115]                                                                                [Stage 79:=================================>                    (72 + 44) / 116][Stage 79:========================================>             (86 + 30) / 116][Stage 79:===============================================>     (103 + 13) / 116][Stage 79:===================================================>  (111 + 5) / 116][Stage 79:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.256930971 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR   partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIn dex = 209  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 209  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399410746 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:================================>                     (69 + 46) / 115][Stage 80:===================================>                  (76 + 39) / 115][Stage 80:============================================>         (94 + 21) / 115][Stage 80:===================================================>  (109 + 6) / 115]                                                                                [Stage 81:================================>                     (70 + 46) / 116][Stage 81:=======================================>              (84 + 32) / 116][Stage 81:============================================>         (96 + 20) / 116][Stage 81:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.825548118 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  pa rtitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionInde x = 115  OR  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404206227 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:===============================>                      (67 + 48) / 115][Stage 82:======================================>               (81 + 34) / 115][Stage 82:=============================================>        (97 + 18) / 115][Stage 82:===================================================>  (109 + 6) / 115]                                                                                [Stage 83:=================================>                    (72 + 44) / 116][Stage 83:=======================================>              (85 + 31) / 116][Stage 83:=============================================>        (98 + 18) / 116][Stage 83:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.780368968 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIn dex = 175  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395861225 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:================================>                     (69 + 46) / 115][Stage 84:=======================================>              (84 + 31) / 115][Stage 84:==============================================>       (98 + 17) / 115][Stage 84:====================================================> (111 + 4) / 115][Stage 84:=====================================================>(114 + 1) / 115]                                                                                [Stage 85:================================>                     (69 + 47) / 116][Stage 85:=====================================>                (80 + 36) / 116][Stage 85:=============================================>        (98 + 18) / 116][Stage 85:===================================================>  (110 + 6) / 116][Stage 85:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.048825327 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  pa rtitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex =  29  OR  partitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441507523 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===========================>                          (58 + 55) / 113][Stage 86:============================>                         (59 + 54) / 113][Stage 86:=================================>                    (70 + 43) / 113][Stage 86:=========================================>            (86 + 27) / 113][Stage 86:==================================================>   (105 + 8) / 113]                                                                                [Stage 87:============================>                         (60 + 54) / 114][Stage 87:==============================>                       (64 + 50) / 114][Stage 87:======================================>               (81 + 33) / 114][Stage 87:==============================================>      (101 + 13) / 114][Stage 87:===================================================>  (108 + 6) / 114][Stage 87:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.515923041 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR   partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIn dex = 195  OR  partitionIndex = 196 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 195  OR  partitionIndex = 196 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370122417 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:======================================>               (82 + 33) / 115][Stage 88:========================================>             (87 + 28) / 115][Stage 88:============================================>         (95 + 20) / 115][Stage 88:==================================================>   (108 + 7) / 115][Stage 88:====================================================> (112 + 3) / 115]                                                                                [Stage 89:========================================>             (86 + 30) / 116][Stage 89:============================================>         (96 + 20) / 116][Stage 89:================================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.827180351 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR   partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIn dex = 177  OR  partitionIndex = 178 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 178 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366699239 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:==================================>                   (73 + 40) / 113][Stage 90:=======================================>              (83 + 30) / 113][Stage 90:==============================================>       (97 + 16) / 113][Stage 90:===================================================>  (107 + 6) / 113][Stage 90:=====================================================>(111 + 2) / 113]                                                                                [Stage 91:=====================================>                (80 + 34) / 114][Stage 91:============================================>         (93 + 21) / 114][Stage 91:===============================================>     (102 + 12) / 114][Stage 91:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.054111287 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  pa rtitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex  = 115  OR  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399500595 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (58 + 55) / 113][Stage 92:==============================>                       (63 + 50) / 113][Stage 92:===================================>                  (75 + 38) / 113][Stage 92:===============================================>     (102 + 11) / 113]                                                                                [Stage 93:============================>                         (61 + 53) / 114][Stage 93:=================================>                    (71 + 43) / 114][Stage 93:==========================================>           (90 + 24) / 114][Stage 93:==================================================>   (106 + 8) / 114][Stage 93:====================================================> (111 + 3) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.991179521 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR   partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIn dex = 175  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381986649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:================================>                     (72 + 46) / 118][Stage 94:==================================>                   (75 + 43) / 118][Stage 94:=======================================>              (87 + 31) / 118][Stage 94:================================================>    (107 + 11) / 118][Stage 94:====================================================> (115 + 3) / 118]                                                                                [Stage 95:=================================>                    (73 + 46) / 119][Stage 95:=====================================>                (83 + 36) / 119][Stage 95:============================================>        (101 + 18) / 119][Stage 95:====================================================> (115 + 4) / 119][Stage 95:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.642709153 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR   partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIn dex = 203  OR  partitionIndex = 204 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370299971 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:====================================>                 (77 + 36) / 113][Stage 96:========================================>             (85 + 28) / 113][Stage 96:=============================================>        (96 + 17) / 113][Stage 96:===================================================>  (108 + 5) / 113][Stage 96:=====================================================>(112 + 1) / 113]                                                                                [Stage 97:=========================================>            (87 + 27) / 114][Stage 97:============================================>         (93 + 21) / 114][Stage 97:===============================================>     (102 + 12) / 114][Stage 97:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.140704615 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIn dex = 225  OR  partitionIndex = 226 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225  OR  partitionIndex = 226 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403423208 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (58 + 55) / 113][Stage 98:==============================>                       (63 + 50) / 113][Stage 98:========================================>             (84 + 29) / 113][Stage 98:=============================================>        (96 + 17) / 113][Stage 98:===================================================>  (108 + 5) / 113]                                                                                [Stage 99:============================>                         (61 + 53) / 114][Stage 99:==================================>                   (72 + 42) / 114][Stage 99:=========================================>            (88 + 26) / 114][Stage 99:==============================================>      (101 + 13) / 114][Stage 99:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.552113145 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 25   OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.428161523 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:==========================>                          (61 + 59) / 120][Stage 100:=============================>                       (67 + 53) / 120][Stage 100:========================================>            (92 + 28) / 120][Stage 100:===============================================>    (110 + 10) / 120]                                                                                [Stage 101:===========================>                         (63 + 58) / 121][Stage 101:===============================>                     (72 + 49) / 121][Stage 101:=======================================>             (90 + 31) / 121][Stage 101:=================================================>   (112 + 9) / 121][Stage 101:====================================================>(119 + 2) / 121][Stage 101:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.221911721 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR   partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIn dex = 235  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347538817 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:=======================================>             (85 + 30) / 115][Stage 102:===========================================>         (94 + 21) / 115][Stage 102:==================================================>  (109 + 6) / 115][Stage 102:====================================================>(114 + 1) / 115]                                                                                [Stage 103:=====================================>               (83 + 33) / 116][Stage 103:=========================================>           (91 + 25) / 116][Stage 103:=============================================>      (102 + 14) / 116][Stage 103:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.781504336 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIn dex = 149  OR  partitionIndex = 150 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 150 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418302553 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (58 + 55) / 113][Stage 104:============================>                        (60 + 53) / 113][Stage 104:==================================>                  (73 + 40) / 113][Stage 104:============================================>        (95 + 18) / 113][Stage 104:===================================================> (109 + 4) / 113]                                                                                [Stage 105:===========================>                         (60 + 54) / 114][Stage 105:==================================>                  (74 + 40) / 114][Stage 105:=========================================>           (90 + 24) / 114][Stage 105:==============================================>     (103 + 11) / 114][Stage 105:====================================================>(112 + 2) / 114][Stage 105:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.345196987 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 130  OR   partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIn dex = 146  OR  partitionIndex = 158 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375129165 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:=====================================>               (80 + 33) / 113][Stage 106:==========================================>          (91 + 22) / 113][Stage 106:==============================================>      (99 + 14) / 113][Stage 106:=================================================>   (106 + 7) / 113]                                                                                [Stage 107:======================================>              (82 + 32) / 114][Stage 107:========================================>            (88 + 26) / 114][Stage 107:=============================================>       (97 + 17) / 114][Stage 107:==================================================>  (108 + 6) / 114][Stage 107:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.066755004 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 11 1  OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458442619 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:=================================>                   (72 + 41) / 113][Stage 108:======================================>              (82 + 31) / 113][Stage 108:==========================================>          (90 + 23) / 113][Stage 108:==============================================>     (101 + 12) / 113][Stage 108:==================================================>  (107 + 6) / 113][Stage 108:====================================================>(111 + 2) / 113]                                                                                [Stage 109:=====================================>               (80 + 34) / 114][Stage 109:==========================================>          (91 + 23) / 114][Stage 109:==============================================>     (102 + 12) / 114][Stage 109:==================================================>  (108 + 6) / 114][Stage 109:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.205322958 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR   partitionIndex = 139  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 166  OR  partitionIn dex = 167  OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 166  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366408019 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:================================>                    (72 + 46) / 118][Stage 110:=====================================>               (83 + 35) / 118][Stage 110:========================================>            (91 + 27) / 118][Stage 110:==============================================>     (106 + 12) / 118][Stage 110:====================================================>(116 + 2) / 118]                                                                                [Stage 111:================================>                    (73 + 46) / 119][Stage 111:===================================>                 (80 + 39) / 119][Stage 111:=========================================>           (93 + 26) / 119][Stage 111:=================================================>   (111 + 8) / 119][Stage 111:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.335634353 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  pa rtitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex =  51  OR  partitionIndex = 52 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex = 52 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381617669 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (59 + 54) / 113][Stage 112:============================>                        (60 + 53) / 113][Stage 112:====================================>                (77 + 36) / 113][Stage 112:============================================>        (94 + 19) / 113][Stage 112:==================================================>  (107 + 6) / 113]                                                                                [Stage 113:============================>                        (62 + 52) / 114][Stage 113:================================>                    (70 + 44) / 114][Stage 113:=============================================>       (97 + 17) / 114][Stage 113:===================================================> (110 + 4) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.815962338 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIn dex = 149  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499969507 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==========================>                          (60 + 60) / 120][Stage 114:============================>                        (64 + 56) / 120][Stage 114:=================================>                   (76 + 44) / 120][Stage 114:========================================>            (92 + 28) / 120][Stage 114:=================================================>   (113 + 7) / 120][Stage 114:====================================================>(119 + 1) / 120]                                                                                [Stage 115:===========================>                         (62 + 59) / 121][Stage 115:==============================>                      (70 + 51) / 121][Stage 115:=====================================>               (85 + 36) / 121][Stage 115:===========================================>        (102 + 19) / 121][Stage 115:==================================================>  (116 + 5) / 121][Stage 115:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.453603054 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  p artitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionInd ex = 118  OR  partitionIndex = 119 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383641674 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==============================>                      (66 + 49) / 115][Stage 116:====================================>                (80 + 35) / 115][Stage 116:=============================================>       (99 + 16) / 115][Stage 116:==================================================>  (109 + 6) / 115][Stage 116:====================================================>(113 + 2) / 115]                                                                                [Stage 117:===============================>                     (69 + 47) / 116][Stage 117:======================================>              (84 + 32) / 116][Stage 117:============================================>       (100 + 16) / 116][Stage 117:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.865511084 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125  OR  partitionIndex = 126  OR   partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIn dex = 142  OR  partitionIndex = 154 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382772128 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (58 + 55) / 113][Stage 118:============================>                        (61 + 52) / 113][Stage 118:======================================>              (82 + 31) / 113][Stage 118:==============================================>     (101 + 12) / 113][Stage 118:====================================================>(111 + 2) / 113]                                                                                [Stage 119:===========================>                         (59 + 55) / 114][Stage 119:=============================>                       (63 + 51) / 114][Stage 119:=================================>                   (72 + 42) / 114][Stage 119:=============================================>       (97 + 17) / 114][Stage 119:===================================================> (110 + 4) / 114][Stage 119:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.576988491 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  pa rtitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex =  103  OR  partitionIndex = 117 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407133622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 60) / 120][Stage 120:=============================>                       (67 + 53) / 120][Stage 120:==================================>                  (79 + 41) / 120][Stage 120:==========================================>          (97 + 23) / 120][Stage 120:====================================================>(118 + 2) / 120]                                                                                [Stage 121:============================>                        (64 + 57) / 121][Stage 121:===============================>                     (73 + 48) / 121][Stage 121:======================================>              (88 + 33) / 121][Stage 121:==============================================>     (109 + 12) / 121][Stage 121:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 5.598237884 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 70  OR  pa rtitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex =  86  OR  partitionIndex = 98 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.338798536 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:=====================================>               (82 + 33) / 115][Stage 122:=========================================>           (89 + 26) / 115][Stage 122:==============================================>     (102 + 13) / 115][Stage 122:===================================================> (111 + 4) / 115]                                                                                [Stage 123:=======================================>             (86 + 30) / 116][Stage 123:=============================================>      (101 + 15) / 116][Stage 123:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.612122126 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  pa rtitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex =  53  OR  partitionIndex = 54 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362109446 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:=====================================>               (79 + 34) / 113][Stage 124:===========================================>         (93 + 20) / 113][Stage 124:=============================================>       (97 + 16) / 113][Stage 124:=================================================>   (106 + 7) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:=================================>                   (73 + 41) / 114][Stage 125:======================================>              (83 + 31) / 114][Stage 125:==========================================>          (92 + 22) / 114][Stage 125:==============================================>     (103 + 11) / 114][Stage 125:===================================================> (110 + 4) / 114][Stage 125:===================================================> (111 + 3) / 114][Stage 125:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.452753506 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  pa rtitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex =  81  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374726962 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:================================>                    (70 + 43) / 113][Stage 126:===================================>                 (76 + 37) / 113][Stage 126:===========================================>         (93 + 20) / 113][Stage 126:==============================================>     (102 + 11) / 113][Stage 126:==================================================>  (108 + 5) / 113]                                                                                [Stage 127:=====================================>               (81 + 33) / 114][Stage 127:==========================================>          (92 + 22) / 114][Stage 127:===============================================>    (104 + 10) / 114][Stage 127:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.074104665 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 215  OR   partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIn dex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394803714 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==========================>                          (60 + 60) / 120][Stage 128:=============================>                       (66 + 54) / 120][Stage 128:=================================>                   (76 + 44) / 120][Stage 128:===========================================>        (101 + 19) / 120][Stage 128:===================================================> (116 + 4) / 120]                                                                                [Stage 129:===========================>                         (63 + 58) / 121][Stage 129:===============================>                     (72 + 49) / 121][Stage 129:====================================>                (83 + 38) / 121][Stage 129:==========================================>          (96 + 25) / 121][Stage 129:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.64297416 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR   partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIn dex = 174  OR  partitionIndex = 175 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393558506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (61 + 59) / 120][Stage 130:===============================>                     (71 + 49) / 120][Stage 130:======================================>              (87 + 33) / 120][Stage 130:=============================================>      (106 + 14) / 120][Stage 130:====================================================>(118 + 2) / 120]                                                                                [Stage 131:==========================>                          (61 + 60) / 121][Stage 131:==============================>                      (70 + 51) / 121][Stage 131:====================================>                (84 + 37) / 121][Stage 131:===========================================>        (102 + 19) / 121][Stage 131:=================================================>   (112 + 9) / 121][Stage 131:====================================================>(119 + 2) / 121][Stage 131:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.290672538 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 219  OR   partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIn dex = 235  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395834575 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:==========================>                          (61 + 59) / 120][Stage 132:===============================>                     (72 + 48) / 120][Stage 132:=========================================>           (93 + 27) / 120][Stage 132:=================================================>   (113 + 7) / 120]                                                                                [Stage 133:===========================>                         (63 + 58) / 121][Stage 133:===============================>                     (73 + 48) / 121][Stage 133:======================================>              (88 + 33) / 121][Stage 133:=============================================>      (105 + 16) / 121][Stage 133:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.499863512 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIn dex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356318828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:=====================================>               (81 + 32) / 113][Stage 134:=========================================>           (88 + 25) / 113][Stage 134:==============================================>      (99 + 14) / 113][Stage 134:===================================================> (109 + 4) / 113]                                                                                [Stage 135:=======================================>             (84 + 30) / 114][Stage 135:==========================================>          (92 + 22) / 114][Stage 135:==============================================>     (101 + 13) / 114][Stage 135:==================================================>  (108 + 6) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.047931401 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21   OR  partitionIndex = 22 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374511051 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:=============================>                       (65 + 50) / 115][Stage 136:===================================>                 (77 + 38) / 115][Stage 136:===========================================>         (94 + 21) / 115][Stage 136:===============================================>    (105 + 10) / 115][Stage 136:===================================================> (111 + 4) / 115]                                                                                [Stage 137:==============================>                      (67 + 49) / 116][Stage 137:==================================>                  (75 + 41) / 116][Stage 137:========================================>            (89 + 27) / 116][Stage 137:===========================================>         (96 + 20) / 116][Stage 137:================================================>    (107 + 9) / 116][Stage 137:===================================================> (112 + 4) / 116][Stage 137:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 7.076527407 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  pa rtitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex =  113  OR  partitionIndex = 114 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113  OR  partitionIndex = 114 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349729973 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:>                                                      (0 + 0) / 113][Stage 138:====================================>                (77 + 36) / 113][Stage 138:=========================================>           (88 + 25) / 113][Stage 138:=============================================>       (98 + 15) / 113][Stage 138:=================================================>   (105 + 8) / 113][Stage 138:====================================================>(111 + 2) / 113]                                                                                [Stage 139:==================================>                  (74 + 40) / 114][Stage 139:=========================================>           (89 + 25) / 114][Stage 139:===========================================>         (93 + 21) / 114][Stage 139:=================================================>   (107 + 7) / 114][Stage 139:===================================================> (111 + 3) / 114][Stage 139:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.148658131 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  pa rtitionIndex = 14  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 41  OR  partitionIndex =  55  OR  partitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 41  OR  partitionIndex = 55  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391273285 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:==========================>                          (60 + 60) / 120][Stage 140:=============================>                       (67 + 53) / 120][Stage 140:==================================>                  (79 + 41) / 120][Stage 140:==========================================>          (96 + 24) / 120][Stage 140:==================================================>  (115 + 5) / 120]                                                                                [Stage 141:===========================>                         (62 + 59) / 121][Stage 141:===============================>                     (72 + 49) / 121][Stage 141:======================================>              (89 + 32) / 121][Stage 141:=============================================>      (107 + 14) / 121][Stage 141:=================================================>   (114 + 7) / 121][Stage 141:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.626134502 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR   partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIn dex = 137  OR  partitionIndex = 138 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388086648 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (58 + 55) / 113][Stage 142:==============================>                      (66 + 47) / 113][Stage 142:=====================================>               (80 + 33) / 113][Stage 142:=============================================>       (96 + 17) / 113][Stage 142:====================================================>(112 + 1) / 113]                                                                                [Stage 143:============================>                        (61 + 53) / 114][Stage 143:==================================>                  (75 + 39) / 114][Stage 143:============================================>        (95 + 19) / 114][Stage 143:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.515859828 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR   partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIn dex = 151  OR  partitionIndex = 165 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.340593225 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:========================================>            (87 + 28) / 115][Stage 144:==========================================>          (92 + 23) / 115][Stage 144:=================================================>   (107 + 8) / 115][Stage 144:==================================================>  (109 + 6) / 115][Stage 144:====================================================>(114 + 1) / 115]                                                                                [Stage 145:=====================================>               (83 + 33) / 116][Stage 145:=========================================>           (90 + 26) / 116][Stage 145:=============================================>      (101 + 15) / 116][Stage 145:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.820595459 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR   partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIn dex = 195  OR  partitionIndex = 196 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378946142 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==============================>                      (66 + 49) / 115][Stage 146:=====================================>               (81 + 34) / 115][Stage 146:============================================>        (96 + 19) / 115][Stage 146:=================================================>   (108 + 7) / 115]                                                                                [Stage 147:==================================>                  (75 + 41) / 116][Stage 147:=======================================>             (87 + 29) / 116][Stage 147:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.579373988 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  pa rtitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex =  53  OR  partitionIndex = 54 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366868864 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:=================================>                   (72 + 43) / 115][Stage 148:=========================================>           (90 + 25) / 115][Stage 148:==================================================>  (109 + 6) / 115][Stage 148:===================================================> (112 + 3) / 115]                                                                                [Stage 149:==================================>                  (75 + 41) / 116][Stage 149:=======================================>             (87 + 29) / 116][Stage 149:=============================================>      (101 + 15) / 116][Stage 149:===============================================>    (106 + 10) / 116][Stage 149:==================================================>  (110 + 6) / 116][Stage 149:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 7.366105229 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIn dex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398024866 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 61) / 121][Stage 150:============================>                        (64 + 57) / 121][Stage 150:===================================>                 (80 + 41) / 121][Stage 150:===========================================>        (102 + 19) / 121][Stage 150:=================================================>   (113 + 8) / 121]                                                                                [Stage 151:==========================>                          (61 + 61) / 122][Stage 151:==============================>                      (71 + 51) / 122][Stage 151:=======================================>             (92 + 30) / 122][Stage 151:==============================================>     (109 + 13) / 122][Stage 151:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.883180036 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR   partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIn dex = 229  OR  partitionIndex = 230 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 229  OR  partitionIndex = 230 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399077969 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:==========================>                          (60 + 60) / 120][Stage 152:=============================>                       (67 + 53) / 120][Stage 152:==================================>                  (78 + 42) / 120][Stage 152:============================================>       (103 + 17) / 120][Stage 152:===================================================> (116 + 4) / 120]                                                                                [Stage 153:==========================>                          (61 + 60) / 121][Stage 153:=============================>                       (67 + 54) / 121][Stage 153:===============================>                     (73 + 48) / 121][Stage 153:=======================================>             (91 + 30) / 121][Stage 153:=================================================>   (113 + 8) / 121]                                                                                Time elapsed: 3.791660651 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR   partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIn dex = 226  OR  partitionIndex = 227 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 227 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351759887 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:======================================>              (82 + 31) / 113][Stage 154:==========================================>          (90 + 23) / 113][Stage 154:==============================================>     (102 + 11) / 113][Stage 154:===================================================> (110 + 3) / 113]                                                                                [Stage 155:==================================>                  (75 + 39) / 114][Stage 155:=======================================>             (84 + 30) / 114][Stage 155:============================================>        (96 + 18) / 114][Stage 155:=================================================>   (106 + 8) / 114][Stage 155:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.843411589 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  pa rtitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex =  60  OR  partitionIndex = 61 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361231249 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (72 + 46) / 118][Stage 156:=================================>                   (75 + 43) / 118][Stage 156:========================================>            (90 + 28) / 118][Stage 156:==============================================>     (105 + 13) / 118][Stage 156:===================================================> (115 + 3) / 118][Stage 156:====================================================>(117 + 1) / 118]                                                                                [Stage 157:================================>                    (73 + 46) / 119][Stage 157:==================================>                  (77 + 42) / 119][Stage 157:========================================>            (91 + 28) / 119][Stage 157:==============================================>     (106 + 13) / 119][Stage 157:===================================================> (115 + 4) / 119][Stage 157:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.678270814 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  pa rtitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex  = 107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355520121 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:=====================================>               (79 + 34) / 113][Stage 158:===========================================>         (92 + 21) / 113][Stage 158:==============================================>     (100 + 13) / 113][Stage 158:=================================================>   (106 + 7) / 113][Stage 158:====================================================>(111 + 2) / 113]                                                                                [Stage 159:========================================>            (87 + 27) / 114][Stage 159:==============================================>      (99 + 15) / 114][Stage 159:=================================================>   (106 + 8) / 114][Stage 159:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.141229318 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  pa rtitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex =  91  OR  partitionIndex = 105 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361432988 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:================================>                    (72 + 46) / 118][Stage 160:==================================>                  (76 + 42) / 118][Stage 160:=======================================>             (89 + 29) / 118][Stage 160:==============================================>     (106 + 12) / 118][Stage 160:====================================================>(116 + 2) / 118]                                                                                [Stage 161:================================>                    (73 + 46) / 119][Stage 161:==================================>                  (78 + 41) / 119][Stage 161:======================================>              (86 + 33) / 119][Stage 161:============================================>        (99 + 20) / 119][Stage 161:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 4.01024657 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR   partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIn dex = 167  OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336495971 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:=====================================>               (81 + 34) / 115][Stage 162:=======================================>             (86 + 29) / 115][Stage 162:==============================================>     (102 + 13) / 115][Stage 162:==================================================>  (109 + 6) / 115][Stage 162:====================================================>(114 + 1) / 115]                                                                                [Stage 163:======================================>              (84 + 32) / 116][Stage 163:=========================================>           (90 + 26) / 116][Stage 163:============================================>       (100 + 16) / 116][Stage 163:=================================================>   (109 + 7) / 116][Stage 163:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.988791767 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex =  111  OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38001561 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (59 + 54) / 113][Stage 164:=================================>                   (72 + 41) / 113][Stage 164:===========================================>         (92 + 21) / 113][Stage 164:==================================================>  (108 + 5) / 113]                                                                                [Stage 165:===========================>                         (60 + 54) / 114][Stage 165:=================================>                   (72 + 42) / 114][Stage 165:===========================================>         (93 + 21) / 114][Stage 165:================================================>    (105 + 9) / 114][Stage 165:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.039330787 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  pa rtitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex =  77  OR  partitionIndex = 78 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369878941 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==================================>                  (74 + 41) / 115][Stage 166:=========================================>           (91 + 24) / 115][Stage 166:=============================================>      (100 + 15) / 115][Stage 166:===============================================>    (104 + 11) / 115][Stage 166:===================================================> (112 + 3) / 115]                                                                                [Stage 167:==================================>                  (76 + 40) / 116][Stage 167:=======================================>             (86 + 30) / 116][Stage 167:=============================================>      (101 + 15) / 116][Stage 167:=================================================>   (108 + 8) / 116][Stage 167:==================================================>  (111 + 5) / 116][Stage 167:===================================================> (113 + 3) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.244939745 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  pa rtitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex =  57  OR  partitionIndex = 58 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405395442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 61) / 121][Stage 168:================================>                    (74 + 47) / 121][Stage 168:======================================>              (88 + 33) / 121][Stage 168:=============================================>      (105 + 16) / 121][Stage 168:===================================================> (118 + 3) / 121]                                                                                [Stage 169:===========================>                         (64 + 58) / 122][Stage 169:================================>                    (74 + 48) / 122][Stage 169:==========================================>          (98 + 24) / 122][Stage 169:=================================================>   (114 + 8) / 122][Stage 169:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.771237389 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  pa rtitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex =  83  OR  partitionIndex = 84 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 83  OR  partitionIndex = 84 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387815639 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===========================>                         (58 + 55) / 113][Stage 170:=============================>                       (63 + 50) / 113][Stage 170:========================================>            (87 + 26) / 113][Stage 170:=================================================>   (106 + 7) / 113][Stage 170:====================================================>(111 + 2) / 113]                                                                                [Stage 171:===========================>                         (60 + 54) / 114][Stage 171:==============================>                      (66 + 48) / 114][Stage 171:=======================================>             (84 + 30) / 114][Stage 171:===============================================>    (104 + 10) / 114][Stage 171:==================================================>  (109 + 5) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.465401851 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR   partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIn dex = 136  OR  partitionIndex = 137 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381749649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:============================>                        (60 + 53) / 113][Stage 172:================================>                    (69 + 44) / 113][Stage 172:=======================================>             (85 + 28) / 113][Stage 172:=================================================>   (105 + 8) / 113][Stage 172:===================================================> (110 + 3) / 113]                                                                                [Stage 173:===========================>                         (59 + 55) / 114][Stage 173:==============================>                      (65 + 49) / 114][Stage 173:=======================================>             (86 + 28) / 114][Stage 173:=============================================>      (100 + 14) / 114]                                                                                Time elapsed: 3.371392559 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR   partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIn dex = 165  OR  partitionIndex = 166 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 165  OR  partitionIndex = 166 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369614652 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==================================>                  (74 + 41) / 115][Stage 174:======================================>              (84 + 31) / 115][Stage 174:==============================================>     (102 + 13) / 115][Stage 174:=================================================>   (107 + 8) / 115][Stage 174:====================================================>(113 + 2) / 115]                                                                                [Stage 175:===============================>                     (69 + 47) / 116][Stage 175:===================================>                 (77 + 39) / 116][Stage 175:==========================================>          (92 + 24) / 116][Stage 175:==============================================>     (103 + 13) / 116][Stage 175:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.099281959 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47   OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335983556 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:======================================>              (83 + 32) / 115][Stage 176:=========================================>           (90 + 25) / 115][Stage 176:==============================================>     (103 + 12) / 115][Stage 176:====================================================>(113 + 2) / 115][Stage 176:====================================================>(114 + 1) / 115]                                                                                [Stage 177:=====================================>               (82 + 34) / 116][Stage 177:=========================================>           (91 + 25) / 116][Stage 177:============================================>        (98 + 18) / 116][Stage 177:=============================================>      (102 + 14) / 116][Stage 177:==============================================>     (103 + 13) / 116][Stage 177:=================================================>   (109 + 7) / 116][Stage 177:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 7.298333707 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  pa rtitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex =  90  OR  partitionIndex = 102 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.332144957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=====================================>               (82 + 33) / 115][Stage 178:=========================================>           (89 + 26) / 115][Stage 178:=============================================>       (99 + 16) / 115][Stage 178:==================================================>  (110 + 5) / 115][Stage 178:====================================================>(114 + 1) / 115]                                                                                [Stage 179:=====================================>               (82 + 34) / 116][Stage 179:=========================================>           (91 + 25) / 116][Stage 179:=============================================>      (101 + 15) / 116][Stage 179:==================================================>  (110 + 6) / 116][Stage 179:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.973422188 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR   partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIn dex = 204  OR  partitionIndex = 205 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 205 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429014496 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=================================>                   (72 + 43) / 115][Stage 180:=========================================>           (90 + 25) / 115][Stage 180:==============================================>     (102 + 13) / 115][Stage 180:=================================================>   (108 + 7) / 115][Stage 180:====================================================>(114 + 1) / 115]                                                                                [Stage 181:===============================>                     (70 + 46) / 116][Stage 181:======================================>              (85 + 31) / 116][Stage 181:==============================================>     (103 + 13) / 116][Stage 181:=================================================>   (109 + 7) / 116][Stage 181:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.065142114 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  pa rtitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex =  105  OR  partitionIndex = 106 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395714323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==========================>                          (60 + 60) / 120][Stage 182:=============================>                       (67 + 53) / 120][Stage 182:=====================================>               (84 + 36) / 120][Stage 182:===========================================>         (98 + 22) / 120][Stage 182:===================================================> (117 + 3) / 120]                                                                                [Stage 183:==========================>                          (61 + 60) / 121][Stage 183:=============================>                       (67 + 54) / 121][Stage 183:===================================>                 (82 + 39) / 121][Stage 183:=============================================>      (106 + 15) / 121][Stage 183:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.684566781 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  pa rtitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex  = 117  OR  partitionIndex = 118 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 117  OR  partitionIndex = 118 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337270535 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=====================================>               (81 + 34) / 115][Stage 184:=======================================>             (86 + 29) / 115][Stage 184:============================================>        (97 + 18) / 115][Stage 184:====================================================>(113 + 2) / 115]                                                                                [Stage 185:=====================================>               (81 + 35) / 116][Stage 185:=======================================>             (87 + 29) / 116][Stage 185:=============================================>      (102 + 14) / 116][Stage 185:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.664156722 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  part itionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34   OR  partitionIndex = 35 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355620958 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:================================>                    (72 + 46) / 118][Stage 186:===================================>                 (79 + 39) / 118][Stage 186:=========================================>           (93 + 25) / 118][Stage 186:==============================================>     (105 + 13) / 118]                                                                                [Stage 187:================================>                    (73 + 46) / 119][Stage 187:====================================>                (82 + 37) / 119][Stage 187:===========================================>        (100 + 19) / 119][Stage 187:==================================================>  (114 + 5) / 119][Stage 187:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.57033971 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  pa rtitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex =  55  OR  partitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 55  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472298306 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:====================================>                (79 + 36) / 115][Stage 188:========================================>            (88 + 27) / 115][Stage 188:=============================================>      (101 + 14) / 115][Stage 188:===================================================> (111 + 4) / 115]                                                                                [Stage 189:====================================>                (79 + 37) / 116][Stage 189:=======================================>             (87 + 29) / 116][Stage 189:=============================================>      (101 + 15) / 116][Stage 189:=================================================>   (109 + 7) / 116][Stage 189:==================================================>  (110 + 6) / 116][Stage 189:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 7.036880986 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202  OR   partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIn dex = 229  OR  partitionIndex = 230 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377543812 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:============================>                        (61 + 52) / 113][Stage 190:==================================>                  (74 + 39) / 113][Stage 190:=======================================>             (85 + 28) / 113][Stage 190:===================================================> (109 + 4) / 113]                                                                                [Stage 191:=============================>                       (63 + 51) / 114][Stage 191:==================================>                  (74 + 40) / 114][Stage 191:===========================================>         (94 + 20) / 114][Stage 191:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.541628653 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  pa rtitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex =  84  OR  partitionIndex = 85 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 85 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385708708 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (60 + 61) / 121][Stage 192:===============================>                     (73 + 48) / 121][Stage 192:====================================>                (83 + 38) / 121][Stage 192:============================================>       (103 + 18) / 121][Stage 192:====================================================>(120 + 1) / 121]                                                                                [Stage 193:==========================>                          (62 + 60) / 122][Stage 193:==============================>                      (71 + 51) / 122][Stage 193:=======================================>             (90 + 32) / 122][Stage 193:==============================================>     (109 + 13) / 122][Stage 193:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.418302818 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 47   OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348258696 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:======================================>              (83 + 32) / 115][Stage 194:==========================================>          (92 + 23) / 115][Stage 194:=============================================>      (101 + 14) / 115][Stage 194:=================================================>   (108 + 7) / 115]                                                                                [Stage 195:======================================>              (85 + 31) / 116][Stage 195:==========================================>          (93 + 23) / 116][Stage 195:=============================================>      (102 + 14) / 116][Stage 195:====================================================>(114 + 2) / 116][Stage 195:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.312577468 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 10  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 97  OR  partitionIndex = 11 1  OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368650285 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=============================>                       (64 + 51) / 115][Stage 196:===================================>                 (77 + 38) / 115][Stage 196:=========================================>           (90 + 25) / 115][Stage 196:===============================================>    (105 + 10) / 115][Stage 196:===================================================> (111 + 4) / 115][Stage 196:====================================================>(114 + 1) / 115]                                                                                [Stage 197:===============================>                     (68 + 48) / 116][Stage 197:===================================>                 (78 + 38) / 116][Stage 197:==========================================>          (94 + 22) / 116][Stage 197:===============================================>    (106 + 10) / 116][Stage 197:====================================================>(114 + 2) / 116][Stage 197:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.931458869 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  pa rtitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex =  89  OR  partitionIndex = 90 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381454622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (58 + 55) / 113][Stage 198:==============================>                      (66 + 47) / 113][Stage 198:=====================================>               (81 + 32) / 113][Stage 198:================================================>    (104 + 9) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:=============================>                       (63 + 51) / 114][Stage 199:=====================================>               (80 + 34) / 114][Stage 199:===========================================>         (94 + 20) / 114][Stage 199:=================================================>   (106 + 8) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.795136197 seconds
res203: Int = 0

scala> 

scala> :quit

real	11m54.739s
user	12m20.604s
sys	1m39.484s
