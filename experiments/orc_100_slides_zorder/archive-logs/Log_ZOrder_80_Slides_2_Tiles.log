Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/25 01:36:39 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 01:36:53 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 01:36:53 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 01:36:54 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/25 01:36:56 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 01:37:07 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170525013656-0620).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 4.402663185 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:======================>                                (46 + 69) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:==================================>                    (73 + 42) / 115][Stage 0:=====================================>                 (79 + 36) / 115][Stage 0:=======================================>               (82 + 33) / 115][Stage 0:============================================>          (94 + 21) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:================================================>     (104 + 11) / 115][Stage 0:=====================================================> (111 + 4) / 115][Stage 0:=====================================================> (112 + 3) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:======================>                                (47 + 69) / 116][Stage 1:===========================>                           (57 + 59) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:======================================>                (82 + 34) / 116][Stage 1:=============================================>         (95 + 21) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 12.539660076 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 62 AND partitionZIndex<=163", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=163,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.655303352 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===========================>                           (57 + 58) / 115][Stage 2:==============================>                        (64 + 51) / 115][Stage 2:======================================>                (81 + 34) / 115][Stage 2:========================================>              (84 + 31) / 115][Stage 2:==========================================>            (88 + 27) / 115][Stage 2:==============================================>        (97 + 18) / 115][Stage 2:================================================>     (103 + 12) / 115][Stage 2:====================================================>  (110 + 5) / 115]                                                                                [Stage 3:=======================================>               (83 + 33) / 116][Stage 3:========================================>              (86 + 30) / 116][Stage 3:============================================>          (93 + 23) / 116][Stage 3:===============================================>      (102 + 14) / 116][Stage 3:===================================================>   (109 + 7) / 116]                                                                                Time elapsed: 4.338237441 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 3 AND partitionZIndex<=74", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=73 AND partitionZIndex<=74,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.713837731 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=========================>                             (56 + 64) / 120][Stage 4:===========================>                           (59 + 61) / 120][Stage 4:=============================>                         (64 + 56) / 120][Stage 4:===============================>                       (68 + 52) / 120][Stage 4:==================================>                    (76 + 44) / 120][Stage 4:=========================================>             (90 + 30) / 120][Stage 4:===============================================>      (106 + 14) / 120][Stage 4:====================================================>  (114 + 6) / 120][Stage 4:======================================================>(119 + 1) / 120]                                                                                [Stage 5:===========================>                           (61 + 60) / 121][Stage 5:============================>                          (63 + 58) / 121][Stage 5:===============================>                       (69 + 52) / 121][Stage 5:=====================================>                 (83 + 38) / 121][Stage 5:===========================================>           (95 + 26) / 121][Stage 5:===============================================>      (107 + 14) / 121][Stage 5:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.597068025 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIn dex<=104", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=104,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.697910169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 6:===========================>                           (60 + 61) / 121][Stage 6:===========================>                           (61 + 60) / 121][Stage 6:==============================>                        (66 + 55) / 121][Stage 6:===================================>                   (77 + 44) / 121][Stage 6:===========================================>           (95 + 26) / 121][Stage 6:===============================================>      (107 + 14) / 121]                                                                                [Stage 7:===========================>                           (60 + 62) / 122][Stage 7:============================>                          (64 + 58) / 122][Stage 7:=================================>                     (75 + 47) / 122][Stage 7:=========================================>             (93 + 29) / 122][Stage 7:==============================================>       (104 + 18) / 122][Stage 7:=====================================================> (118 + 4) / 122]                                                                                Time elapsed: 4.008290203 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZInd ex<=73", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=73,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.517227696 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 8:==================================>                    (70 + 43) / 113][Stage 8:====================================>                  (76 + 37) / 113][Stage 8:=========================================>             (85 + 28) / 113][Stage 8:===============================================>      (100 + 13) / 113][Stage 8:====================================================>  (108 + 5) / 113][Stage 8:======================================================>(111 + 2) / 113]                                                                                [Stage 9:=====================================>                 (78 + 36) / 114][Stage 9:=========================================>             (85 + 29) / 114][Stage 9:===============================================>       (98 + 16) / 114][Stage 9:===================================================>   (106 + 8) / 114][Stage 9:====================================================>  (109 + 5) / 114][Stage 9:======================================================>(112 + 2) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.237866579 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIn dex<=221", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=221,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.587143381 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 10:===========================>                          (60 + 60) / 120][Stage 10:=============================>                        (66 + 54) / 120][Stage 10:=================================>                    (74 + 46) / 120][Stage 10:===========================================>          (97 + 23) / 120][Stage 10:=============================================>       (104 + 16) / 120][Stage 10:==================================================>   (112 + 8) / 120]                                                                                [Stage 11:===========================>                          (61 + 60) / 121][Stage 11:=============================>                        (66 + 55) / 121][Stage 11:====================================>                 (82 + 39) / 121][Stage 11:=========================================>            (92 + 29) / 121][Stage 11:=================================================>    (112 + 9) / 121][Stage 11:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.997587052 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIn dex<=164", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=164,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.62092684 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 12:===========================>                          (57 + 56) / 113][Stage 12:=============================>                        (61 + 52) / 113][Stage 12:====================================>                 (77 + 36) / 113][Stage 12:==========================================>           (88 + 25) / 113][Stage 12:===============================================>     (102 + 11) / 113][Stage 12:===================================================>  (107 + 6) / 113][Stage 12:====================================================> (109 + 4) / 113]                                                                                [Stage 13:============================>                         (60 + 54) / 114][Stage 13:===============================>                      (67 + 47) / 114][Stage 13:=======================================>              (84 + 30) / 114][Stage 13:==============================================>      (100 + 14) / 114][Stage 13:====================================================> (111 + 3) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.024749265 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIn dex<=172", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=171 AND partitionZIndex<=172,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.554346239 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 14:===========================>                          (60 + 60) / 120][Stage 14:===========================>                          (61 + 59) / 120][Stage 14:==================================>                   (76 + 44) / 120][Stage 14:============================================>        (100 + 20) / 120][Stage 14:====================================================> (116 + 4) / 120][Stage 14:=====================================================>(118 + 2) / 120]                                                                                [Stage 15:===========================>                          (61 + 60) / 121][Stage 15:============================>                         (64 + 57) / 121][Stage 15:===================================>                  (79 + 42) / 121][Stage 15:============================================>         (99 + 22) / 121][Stage 15:================================================>    (111 + 10) / 121][Stage 15:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.723409257 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZInd ex<=13", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=13,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45008959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 16:======================================>               (81 + 34) / 115][Stage 16:========================================>             (87 + 28) / 115][Stage 16:==============================================>      (100 + 15) / 115][Stage 16:===================================================>  (109 + 6) / 115][Stage 16:====================================================> (112 + 3) / 115]                                                                                [Stage 17:======================================>               (83 + 33) / 116][Stage 17:=========================================>            (90 + 26) / 116][Stage 17:===============================================>     (103 + 13) / 116][Stage 17:===================================================>  (110 + 6) / 116][Stage 17:===================================================>  (111 + 5) / 116][Stage 17:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.812728858 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZInd ex<=35", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=35,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.519458134 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 18:==============================>                       (66 + 49) / 115][Stage 18:======================================>               (81 + 34) / 115][Stage 18:=============================================>        (96 + 19) / 115][Stage 18:==================================================>   (107 + 8) / 115][Stage 18:====================================================> (111 + 4) / 115][Stage 18:=====================================================>(114 + 1) / 115]                                                                                [Stage 19:==============================>                       (66 + 50) / 116][Stage 19:==================================>                   (75 + 41) / 116][Stage 19:==========================================>           (91 + 25) / 116][Stage 19:=============================================>        (97 + 19) / 116][Stage 19:==================================================>   (109 + 7) / 116][Stage 19:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.904587167 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIn dex<=211", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=211,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47224758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 20:===================================>                  (74 + 39) / 113][Stage 20:========================================>             (85 + 28) / 113][Stage 20:=============================================>        (96 + 17) / 113][Stage 20:==================================================>   (105 + 8) / 113][Stage 20:====================================================> (109 + 4) / 113]                                                                                [Stage 21:====================================>                 (76 + 38) / 114][Stage 21:=========================================>            (87 + 27) / 114][Stage 21:==============================================>       (98 + 16) / 114][Stage 21:================================================>    (104 + 10) / 114][Stage 21:==================================================>   (106 + 8) / 114][Stage 21:===================================================>  (109 + 5) / 114][Stage 21:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.052815046 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIn dex<=171", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=171,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.491826865 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 22:================================>                     (72 + 46) / 118][Stage 22:=================================>                    (74 + 44) / 118][Stage 22:=======================================>              (86 + 32) / 118][Stage 22:============================================>        (100 + 18) / 118][Stage 22:==================================================>   (110 + 8) / 118][Stage 22:====================================================> (114 + 4) / 118][Stage 22:=====================================================>(116 + 2) / 118]                                                                                [Stage 23:==============================>                       (67 + 52) / 119][Stage 23:===================================>                  (78 + 41) / 119][Stage 23:=========================================>            (92 + 27) / 119][Stage 23:==============================================>      (104 + 15) / 119][Stage 23:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.933352852 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIn dex<=218", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=218,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423641422 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 24:=======================================>              (84 + 31) / 115][Stage 24:=============================================>        (96 + 19) / 115][Stage 24:==================================================>   (108 + 7) / 115][Stage 24:=====================================================>(114 + 1) / 115]                                                                                [Stage 25:========================================>             (88 + 28) / 116][Stage 25:===============================================>     (103 + 13) / 116][Stage 25:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.768682909 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZInd ex<=69", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=69,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.633914439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 26:===========================>                          (58 + 55) / 113][Stage 26:=============================>                        (61 + 52) / 113][Stage 26:=====================================>                (78 + 35) / 113][Stage 26:==========================================>           (88 + 25) / 113][Stage 26:===============================================>     (102 + 11) / 113][Stage 26:=====================================================>(112 + 1) / 113]                                                                                [Stage 27:============================>                         (60 + 54) / 114][Stage 27:===============================>                      (67 + 47) / 114][Stage 27:======================================>               (81 + 33) / 114][Stage 27:===============================================>     (102 + 12) / 114]                                                                                Time elapsed: 3.16545832 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIn dex<=118", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=117 AND partitionZIndex<=118,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.43628371 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 28:=================================>                    (71 + 42) / 113][Stage 28:======================================>               (81 + 32) / 113][Stage 28:===========================================>          (92 + 21) / 113][Stage 28:==================================================>   (106 + 7) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:=====================================>                (79 + 35) / 114][Stage 29:=========================================>            (87 + 27) / 114][Stage 29:=============================================>        (95 + 19) / 114][Stage 29:====================================================> (110 + 4) / 114][Stage 29:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.295519139 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZInd ex<=67", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=67,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.546589089 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 30:===========================>                          (62 + 58) / 120][Stage 30:===============================>                      (70 + 50) / 120][Stage 30:========================================>             (90 + 30) / 120][Stage 30:=============================================>       (102 + 18) / 120][Stage 30:===================================================>  (115 + 5) / 120]                                                                                [Stage 31:============================>                         (63 + 58) / 121][Stage 31:=================================>                    (74 + 47) / 121][Stage 31:==========================================>           (95 + 26) / 121][Stage 31:==============================================>      (106 + 15) / 121][Stage 31:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 3.463203966 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIn dex<=205", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=205,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454279711 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 32:================================>                     (72 + 46) / 118][Stage 32:==================================>                   (75 + 43) / 118][Stage 32:=========================================>            (91 + 27) / 118][Stage 32:==============================================>      (104 + 14) / 118][Stage 32:=====================================================>(117 + 1) / 118]                                                                                [Stage 33:=================================>                    (73 + 46) / 119][Stage 33:====================================>                 (81 + 38) / 119][Stage 33:==========================================>           (94 + 25) / 119][Stage 33:===============================================>     (106 + 13) / 119][Stage 33:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.206627293 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIn dex<=239", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=238 AND partitionZIndex<=239,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.508730097 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 34:===========================>                          (60 + 60) / 120][Stage 34:============================>                         (63 + 57) / 120][Stage 34:====================================>                 (82 + 38) / 120][Stage 34:=============================================>       (103 + 17) / 120]                                                                                [Stage 35:============================>                         (64 + 57) / 121][Stage 35:=================================>                    (76 + 45) / 121][Stage 35:==========================================>           (95 + 26) / 121][Stage 35:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.003715808 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZInd ex<=12", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=12,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.500478757 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 36:===========================>                          (60 + 60) / 120][Stage 36:================================>                     (73 + 47) / 120][Stage 36:=========================================>            (93 + 27) / 120][Stage 36:=================================================>    (111 + 9) / 120]                                                                                [Stage 37:===========================>                          (62 + 59) / 121][Stage 37:===============================>                      (71 + 50) / 121][Stage 37:=======================================>              (88 + 33) / 121][Stage 37:================================================>    (111 + 10) / 121][Stage 37:====================================================> (117 + 4) / 121][Stage 37:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.604543273 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIn dex<=117", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=117,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462767668 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 38:=====================================>                (79 + 34) / 113][Stage 38:==========================================>           (89 + 24) / 113][Stage 38:==============================================>       (98 + 15) / 113][Stage 38:====================================================> (110 + 3) / 113][Stage 38:=====================================================>(111 + 2) / 113]                                                                                [Stage 39:=================================>                    (71 + 43) / 114][Stage 39:=====================================>                (80 + 34) / 114][Stage 39:=========================================>            (88 + 26) / 114][Stage 39:=================================================>    (105 + 9) / 114][Stage 39:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.196641806 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZInd ex<=21", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=21,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.504023443 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 40:==========================>                           (60 + 61) / 121][Stage 40:=============================>                        (67 + 54) / 121][Stage 40:=====================================>                (83 + 38) / 121][Stage 40:=================================================>    (112 + 9) / 121]                                                                                [Stage 41:===========================>                          (61 + 61) / 122][Stage 41:==============================>                       (70 + 52) / 122][Stage 41:=====================================>                (84 + 38) / 122][Stage 41:=============================================>       (104 + 18) / 122][Stage 41:===================================================>  (116 + 6) / 122][Stage 41:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.44838013 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZInd ex<=49", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=49,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474361572 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 42:=================================>                    (71 + 42) / 113][Stage 42:=====================================>                (79 + 34) / 113][Stage 42:===========================================>          (91 + 22) / 113][Stage 42:===============================================>      (99 + 14) / 113][Stage 42:===================================================>  (108 + 5) / 113][Stage 42:=====================================================>(112 + 1) / 113]                                                                                [Stage 43:==================================>                   (73 + 41) / 114][Stage 43:=======================================>              (84 + 30) / 114][Stage 43:=============================================>        (96 + 18) / 114][Stage 43:===================================================>  (109 + 5) / 114][Stage 43:====================================================> (110 + 4) / 114][Stage 43:====================================================> (111 + 3) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.578581728 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIn dex<=202", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=202,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.463370365 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 44:===========================>                          (60 + 60) / 120][Stage 44:===============================>                      (71 + 49) / 120][Stage 44:=====================================>                (83 + 37) / 120][Stage 44:=================================================>    (111 + 9) / 120]                                                                                [Stage 45:===========================>                          (62 + 59) / 121][Stage 45:================================>                     (72 + 49) / 121][Stage 45:========================================>             (90 + 31) / 121][Stage 45:==============================================>      (106 + 15) / 121][Stage 45:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.357372758 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZInd ex<=63", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=63,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407763234 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 46:====================================>                 (77 + 36) / 113][Stage 46:=========================================>            (86 + 27) / 113][Stage 46:===============================================>      (99 + 14) / 113][Stage 46:===================================================>  (107 + 6) / 113][Stage 46:====================================================> (109 + 4) / 113][Stage 46:=====================================================>(112 + 1) / 113]                                                                                [Stage 47:===================================>                  (75 + 39) / 114][Stage 47:=======================================>              (84 + 30) / 114][Stage 47:=============================================>        (95 + 19) / 114][Stage 47:================================================>    (104 + 10) / 114][Stage 47:===================================================>  (109 + 5) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.707696609 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide73"
dataSource: String = /nidan/orc/individualORC/slide73

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIn dex<=241", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=241,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458135931 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 48:===========================>                          (61 + 59) / 120][Stage 48:================================>                     (73 + 47) / 120][Stage 48:========================================>             (90 + 30) / 120][Stage 48:==============================================>      (105 + 15) / 120][Stage 48:=====================================================>(118 + 2) / 120]                                                                                [Stage 49:=============================>                        (66 + 55) / 121][Stage 49:=====================================>                (83 + 38) / 121][Stage 49:============================================>        (102 + 19) / 121][Stage 49:==================================================>   (114 + 7) / 121][Stage 49:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.522709827 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIn dex<=184", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=183 AND partitionZIndex<=184,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431160867 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 50:====================================>                 (76 + 37) / 113][Stage 50:===========================================>          (91 + 22) / 113][Stage 50:===============================================>     (102 + 11) / 113][Stage 50:=====================================================>(111 + 2) / 113]                                                                                [Stage 51:=======================================>              (83 + 31) / 114][Stage 51:===========================================>          (91 + 23) / 114][Stage 51:==================================================>   (106 + 8) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.03859075 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZInd ex<=40", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=39 AND partitionZIndex<=40,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464300242 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 52:===========================>                          (60 + 60) / 120][Stage 52:===============================>                      (70 + 50) / 120][Stage 52:======================================>               (86 + 34) / 120][Stage 52:=================================================>    (111 + 9) / 120][Stage 52:======================================================(120 + 0) / 120]                                                                                [Stage 53:===========================>                          (61 + 60) / 121][Stage 53:=============================>                        (67 + 54) / 121][Stage 53:=====================================>                (85 + 36) / 121][Stage 53:================================================>    (111 + 10) / 121]                                                                                Time elapsed: 3.050622411 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZInd ex<=36", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=36,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417886434 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 54:=================================>                    (74 + 44) / 118][Stage 54:=====================================>                (82 + 36) / 118][Stage 54:=========================================>            (91 + 27) / 118][Stage 54:=============================================>        (99 + 19) / 118][Stage 54:====================================================> (114 + 4) / 118]                                                                                [Stage 55:==================================>                   (75 + 44) / 119][Stage 55:======================================>               (85 + 34) / 119][Stage 55:===========================================>          (96 + 23) / 119][Stage 55:==============================================>      (105 + 14) / 119][Stage 55:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.432211672 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZInde x<=6", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=6,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37810412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 56:======================================>               (81 + 34) / 115][Stage 56:=========================================>            (88 + 27) / 115][Stage 56:===============================================>     (103 + 12) / 115][Stage 56:====================================================> (111 + 4) / 115][Stage 56:=====================================================>(114 + 1) / 115]                                                                                [Stage 57:======================================>               (83 + 33) / 116][Stage 57:========================================>             (88 + 28) / 116][Stage 57:==============================================>      (101 + 15) / 116][Stage 57:================================================>    (106 + 10) / 116][Stage 57:====================================================> (113 + 3) / 116][Stage 57:=====================================================>(114 + 2) / 116][Stage 57:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.638811465 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZInd ex<=11", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=11,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458283666 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:================================>                     (72 + 48) / 120][Stage 58:========================================>             (90 + 30) / 120][Stage 58:================================================>    (109 + 11) / 120][Stage 58:=====================================================>(119 + 1) / 120]                                                                                [Stage 59:===========================>                          (61 + 60) / 121][Stage 59:=============================>                        (67 + 54) / 121][Stage 59:=======================================>              (88 + 33) / 121][Stage 59:=============================================>       (105 + 16) / 121][Stage 59:====================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.483547956 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIn dex<=181", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=180 AND partitionZIndex<=181,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459919228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 60:===========================>                          (58 + 55) / 113][Stage 60:================================>                     (67 + 46) / 113][Stage 60:========================================>             (84 + 29) / 113][Stage 60:===============================================>     (102 + 11) / 113][Stage 60:=====================================================>(112 + 1) / 113]                                                                                [Stage 61:===========================>                          (59 + 55) / 114][Stage 61:==============================>                       (65 + 49) / 114][Stage 61:=======================================>              (84 + 30) / 114][Stage 61:================================================>    (104 + 10) / 114][Stage 61:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.13994171 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIn dex<=180", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=180,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441178164 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 62:================================>                     (69 + 46) / 115][Stage 62:======================================>               (82 + 33) / 115][Stage 62:==============================================>       (99 + 16) / 115][Stage 62:===================================================>  (109 + 6) / 115]                                                                                [Stage 63:=================================>                    (71 + 45) / 116][Stage 63:========================================>             (86 + 30) / 116][Stage 63:===============================================>     (104 + 12) / 116][Stage 63:===================================================>  (111 + 5) / 116][Stage 63:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.03069673 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIn dex<=173", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=172 AND partitionZIndex<=173,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466818442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 64:==========================>                           (60 + 61) / 121][Stage 64:============================>                         (64 + 57) / 121][Stage 64:================================>                     (73 + 48) / 121][Stage 64:=========================================>            (93 + 28) / 121][Stage 64:===================================================>  (115 + 6) / 121]                                                                                [Stage 65:===========================>                          (63 + 59) / 122][Stage 65:================================>                     (74 + 48) / 122][Stage 65:=========================================>            (93 + 29) / 122][Stage 65:==================================================>   (115 + 7) / 122]                                                                                Time elapsed: 3.307094724 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIn dex<=179", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=178 AND partitionZIndex<=179,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.458784982 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 66:===========================>                          (60 + 60) / 120][Stage 66:============================>                         (63 + 57) / 120][Stage 66:================================>                     (73 + 47) / 120][Stage 66:==========================================>           (95 + 25) / 120][Stage 66:===================================================>  (114 + 6) / 120]                                                                                [Stage 67:===========================>                          (61 + 60) / 121][Stage 67:===============================>                      (70 + 51) / 121][Stage 67:======================================>               (87 + 34) / 121][Stage 67:==============================================>      (107 + 14) / 121]                                                                                Time elapsed: 3.125817777 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZInd ex<=43", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=43,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.46225019 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 68:===========================>                          (60 + 60) / 120][Stage 68:===========================>                          (61 + 59) / 120][Stage 68:====================================>                 (80 + 40) / 120][Stage 68:=============================================>       (103 + 17) / 120][Stage 68:===================================================>  (115 + 5) / 120][Stage 68:=====================================================>(119 + 1) / 120]                                                                                [Stage 69:===========================>                          (61 + 60) / 121][Stage 69:=============================>                        (66 + 55) / 121][Stage 69:=================================>                    (74 + 47) / 121][Stage 69:==============================================>      (107 + 14) / 121][Stage 69:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.36840567 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZInd ex<=86", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=86,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.470203327 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 70:===========================>                          (62 + 58) / 120][Stage 70:=================================>                    (74 + 46) / 120][Stage 70:==========================================>           (94 + 26) / 120][Stage 70:===============================================>     (107 + 13) / 120][Stage 70:=====================================================>(119 + 1) / 120]                                                                                [Stage 71:===========================>                          (61 + 60) / 121][Stage 71:===============================>                      (71 + 50) / 121][Stage 71:=========================================>            (93 + 28) / 121][Stage 71:================================================>    (110 + 11) / 121][Stage 71:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.178664804 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZInd ex<=48", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=48,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416946663 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 72:================================>                     (72 + 46) / 118][Stage 72:==================================>                   (76 + 42) / 118][Stage 72:====================================>                 (79 + 39) / 118][Stage 72:========================================>             (88 + 30) / 118][Stage 72:============================================>         (97 + 21) / 118][Stage 72:================================================>    (108 + 10) / 118][Stage 72:=====================================================>(117 + 1) / 118]                                                                                [Stage 73:=================================>                    (73 + 46) / 119][Stage 73:==================================>                   (75 + 44) / 119][Stage 73:===================================>                  (79 + 40) / 119][Stage 73:======================================>               (84 + 35) / 119][Stage 73:==========================================>           (94 + 25) / 119][Stage 73:=================================================>    (110 + 9) / 119][Stage 73:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.819081295 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIn dex<=193", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=193,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433000419 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 74:===========================>                          (58 + 55) / 113][Stage 74:============================>                         (59 + 54) / 113][Stage 74:=====================================>                (78 + 35) / 113][Stage 74:===========================================>          (91 + 22) / 113][Stage 74:==============================================>       (98 + 15) / 113][Stage 74:====================================================> (109 + 4) / 113]                                                                                [Stage 75:=============================>                        (62 + 52) / 114][Stage 75:====================================>                 (76 + 38) / 114][Stage 75:=========================================>            (88 + 26) / 114][Stage 75:==============================================>      (101 + 13) / 114][Stage 75:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.41758588 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIn dex<=139", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=139,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405748555 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 76:================================>                     (72 + 46) / 118][Stage 76:==================================>                   (75 + 43) / 118][Stage 76:======================================>               (84 + 34) / 118][Stage 76:===========================================>          (95 + 23) / 118][Stage 76:==================================================>   (110 + 8) / 118][Stage 76:====================================================> (115 + 3) / 118]                                                                                [Stage 77:=================================>                    (73 + 46) / 119][Stage 77:====================================>                 (81 + 38) / 119][Stage 77:===========================================>          (96 + 23) / 119][Stage 77:===============================================>     (107 + 12) / 119][Stage 77:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.472188099 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIn dex<=142", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=142,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448639173 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 78:===========================>                          (61 + 60) / 121][Stage 78:==============================>                       (69 + 52) / 121][Stage 78:======================================>               (86 + 35) / 121][Stage 78:==============================================>      (107 + 14) / 121][Stage 78:=====================================================>(119 + 2) / 121]                                                                                [Stage 79:===========================>                          (61 + 61) / 122][Stage 79:=============================>                        (67 + 55) / 122][Stage 79:=================================>                    (76 + 46) / 122][Stage 79:=============================================>       (104 + 18) / 122][Stage 79:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.075669598 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIn dex<=244", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=244,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408248559 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 80:===========================>                          (58 + 55) / 113][Stage 80:=============================>                        (61 + 52) / 113][Stage 80:========================================>             (84 + 29) / 113][Stage 80:==================================================>   (106 + 7) / 113]                                                                                [Stage 81:============================>                         (60 + 54) / 114][Stage 81:====================================>                 (78 + 36) / 114][Stage 81:===========================================>          (91 + 23) / 114][Stage 81:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.006062732 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZInde x<=4", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=3 AND partitionZIndex<=4,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394775667 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 82:=================================>                    (74 + 44) / 118][Stage 82:===================================>                  (78 + 40) / 118][Stage 82:=============================================>        (99 + 19) / 118][Stage 82:=====================================================>(116 + 2) / 118]                                                                                [Stage 83:=================================>                    (74 + 45) / 119][Stage 83:=======================================>              (87 + 32) / 119][Stage 83:============================================>        (100 + 19) / 119][Stage 83:==================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.069784352 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZInd ex<=22", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=22,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423871594 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 84:============================>                         (59 + 54) / 113][Stage 84:==============================>                       (63 + 50) / 113][Stage 84:===================================>                  (75 + 38) / 113][Stage 84:============================================>         (94 + 19) / 113][Stage 84:===================================================>  (108 + 5) / 113]                                                                                [Stage 85:============================>                         (61 + 53) / 114][Stage 85:====================================>                 (76 + 38) / 114][Stage 85:===========================================>          (92 + 22) / 114][Stage 85:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.210918229 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIn dex<=169", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=169,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391363818 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 86:================================>                     (72 + 46) / 118][Stage 86:====================================>                 (80 + 38) / 118][Stage 86:===========================================>          (96 + 22) / 118][Stage 86:=================================================>    (109 + 9) / 118][Stage 86:====================================================> (115 + 3) / 118]                                                                                [Stage 87:==================================>                   (76 + 43) / 119][Stage 87:=======================================>              (87 + 32) / 119][Stage 87:============================================>        (100 + 19) / 119][Stage 87:===================================================>  (114 + 5) / 119][Stage 87:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.29701102 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIn dex<=153", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=153,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411615823 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 88:===========================>                          (58 + 55) / 113][Stage 88:=============================>                        (61 + 52) / 113][Stage 88:=====================================>                (79 + 34) / 113][Stage 88:===============================================>      (99 + 14) / 113][Stage 88:===================================================>  (108 + 5) / 113]                                                                                [Stage 89:============================>                         (60 + 54) / 114][Stage 89:===================================>                  (75 + 39) / 114][Stage 89:==============================================>       (98 + 16) / 114][Stage 89:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.13869059 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIn dex<=237", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=236 AND partitionZIndex<=237,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.432885671 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 90:==========================>                           (60 + 61) / 121][Stage 90:===========================>                          (62 + 59) / 121][Stage 90:================================>                     (72 + 49) / 121][Stage 90:=====================================>                (84 + 37) / 121][Stage 90:===============================================>     (109 + 12) / 121][Stage 90:====================================================> (118 + 3) / 121]                                                                                [Stage 91:===========================>                          (61 + 61) / 122][Stage 91:============================>                         (65 + 57) / 122][Stage 91:===================================>                  (80 + 42) / 122][Stage 91:============================================>        (103 + 19) / 122][Stage 91:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.202423969 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZInd ex<=76", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=76,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.440468087 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 92:==========================>                           (60 + 61) / 121][Stage 92:============================>                         (63 + 58) / 121][Stage 92:=================================>                    (76 + 45) / 121][Stage 92:=======================================>              (89 + 32) / 121][Stage 92:===============================================>     (108 + 13) / 121][Stage 92:=====================================================>(119 + 2) / 121]                                                                                [Stage 93:===========================>                          (61 + 61) / 122][Stage 93:=============================>                        (67 + 55) / 122][Stage 93:====================================>                 (83 + 39) / 122][Stage 93:=============================================>       (105 + 17) / 122][Stage 93:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.207171712 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZInd ex<=27", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=26 AND partitionZIndex<=27,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409448476 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 94:===========================>                          (58 + 55) / 113][Stage 94:=============================>                        (62 + 51) / 113][Stage 94:====================================>                 (77 + 36) / 113][Stage 94:=============================================>        (95 + 18) / 113][Stage 94:====================================================> (110 + 3) / 113][Stage 94:=====================================================>(112 + 1) / 113]                                                                                [Stage 95:===========================>                          (59 + 55) / 114][Stage 95:=================================>                    (70 + 44) / 114][Stage 95:========================================>             (85 + 29) / 114][Stage 95:==============================================>      (101 + 13) / 114][Stage 95:====================================================> (110 + 4) / 114][Stage 95:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.613769694 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIn dex<=158", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=158,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382416693 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 96:================================>                     (72 + 46) / 118][Stage 96:==================================>                   (76 + 42) / 118][Stage 96:======================================>               (84 + 34) / 118][Stage 96:===========================================>          (96 + 22) / 118][Stage 96:===================================================>  (112 + 6) / 118]                                                                                [Stage 97:=================================>                    (73 + 46) / 119][Stage 97:====================================>                 (81 + 38) / 119][Stage 97:=========================================>            (91 + 28) / 119][Stage 97:==============================================>      (104 + 15) / 119][Stage 97:===================================================>  (113 + 6) / 119][Stage 97:=====================================================>(117 + 2) / 119][Stage 97:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.851578628 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZInd ex<=84", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=83 AND partitionZIndex<=84,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425078529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 98:==========================>                           (60 + 61) / 121][Stage 98:===========================>                          (61 + 60) / 121][Stage 98:=================================>                    (76 + 45) / 121][Stage 98:===========================================>          (98 + 23) / 121][Stage 98:==================================================>   (114 + 7) / 121][Stage 98:=====================================================>(120 + 1) / 121]                                                                                [Stage 99:===========================>                          (61 + 61) / 122][Stage 99:==============================>                       (70 + 52) / 122][Stage 99:======================================>               (87 + 35) / 122][Stage 99:===============================================>     (109 + 13) / 122]                                                                                Time elapsed: 3.161558387 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIn dex<=140", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=140,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405082662 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 100:===========================>                         (59 + 54) / 113][Stage 100:==============================>                      (66 + 47) / 113][Stage 100:======================================>              (83 + 30) / 113][Stage 100:==============================================>     (100 + 13) / 113][Stage 100:====================================================>(112 + 1) / 113]                                                                                [Stage 101:===========================>                         (60 + 54) / 114][Stage 101:==============================>                      (66 + 48) / 114][Stage 101:===================================>                 (76 + 38) / 114][Stage 101:============================================>        (96 + 18) / 114][Stage 101:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.167977154 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide75"
dataSource: String = /nidan/orc/individualORC/slide75

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZInd ex<=29", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=29,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389147546 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 102:================================>                    (72 + 46) / 118][Stage 102:=================================>                   (74 + 44) / 118][Stage 102:=========================================>           (92 + 26) / 118][Stage 102:===============================================>    (108 + 10) / 118][Stage 102:====================================================>(117 + 1) / 118]                                                                                [Stage 103:================================>                    (73 + 46) / 119][Stage 103:=================================>                   (75 + 44) / 119][Stage 103:====================================>                (81 + 38) / 119][Stage 103:=================================================>   (111 + 8) / 119][Stage 103:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 2.974617548 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIn dex<=196", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=195 AND partitionZIndex<=196,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37348565 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 104:======================================>              (82 + 31) / 113][Stage 104:==========================================>          (91 + 22) / 113][Stage 104:===================================================> (109 + 4) / 113]                                                                                [Stage 105:====================================>                (79 + 35) / 114][Stage 105:=========================================>           (90 + 24) / 114][Stage 105:==============================================>     (101 + 13) / 114][Stage 105:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.712385186 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIn dex<=200", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=199 AND partitionZIndex<=200,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417141008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:==============================>                      (69 + 52) / 121][Stage 106:=====================================>               (86 + 35) / 121][Stage 106:==============================================>     (109 + 12) / 121][Stage 106:====================================================>(120 + 1) / 121]                                                                                [Stage 107:===========================>                         (64 + 58) / 122][Stage 107:==================================>                  (79 + 43) / 122][Stage 107:===========================================>        (103 + 19) / 122][Stage 107:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.191522429 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIn dex<=197", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=197,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367349374 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 108:====================================>                (79 + 36) / 115][Stage 108:=======================================>             (86 + 29) / 115][Stage 108:=============================================>       (98 + 17) / 115][Stage 108:===================================================> (111 + 4) / 115][Stage 108:===================================================> (112 + 3) / 115]                                                                                [Stage 109:=====================================>               (81 + 35) / 116][Stage 109:========================================>            (88 + 28) / 116][Stage 109:=============================================>      (102 + 14) / 116][Stage 109:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.745071469 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIn dex<=156", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=155 AND partitionZIndex<=156,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35724441 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 110:=====================================>               (81 + 34) / 115][Stage 110:========================================>            (88 + 27) / 115][Stage 110:==============================================>     (102 + 13) / 115][Stage 110:==================================================>  (110 + 5) / 115][Stage 110:====================================================>(113 + 2) / 115]                                                                                [Stage 111:======================================>              (85 + 31) / 116][Stage 111:=============================================>      (101 + 15) / 116][Stage 111:=================================================>   (109 + 7) / 116][Stage 111:====================================================>(114 + 2) / 116][Stage 111:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.137232193 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIn dex<=147", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=146 AND partitionZIndex<=147,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403615495 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 112:==========================>                          (61 + 59) / 120][Stage 112:==============================>                      (68 + 52) / 120][Stage 112:========================================>            (91 + 29) / 120][Stage 112:=================================================>   (111 + 9) / 120][Stage 112:====================================================>(119 + 1) / 120]                                                                                [Stage 113:==========================>                          (61 + 60) / 121][Stage 113:==============================>                      (69 + 52) / 121][Stage 113:=====================================>               (85 + 36) / 121][Stage 113:==============================================>     (108 + 13) / 121][Stage 113:====================================================>(119 + 2) / 121][Stage 113:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.393125586 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZInd ex<=25", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=25,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380867602 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 114:==============================>                      (67 + 48) / 115][Stage 114:=======================================>             (85 + 30) / 115][Stage 114:============================================>        (96 + 19) / 115][Stage 114:===================================================> (111 + 4) / 115][Stage 114:====================================================>(114 + 1) / 115]                                                                                [Stage 115:==============================>                      (67 + 49) / 116][Stage 115:======================================>              (84 + 32) / 116][Stage 115:=============================================>      (102 + 14) / 116][Stage 115:===================================================> (112 + 4) / 116][Stage 115:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.439404963 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIn dex<=207", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=207,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391714506 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 116:===============================>                     (68 + 47) / 115][Stage 116:=====================================>               (81 + 34) / 115][Stage 116:===========================================>         (94 + 21) / 115][Stage 116:===================================================> (112 + 3) / 115]                                                                                [Stage 117:====================================>                (79 + 37) / 116][Stage 117:==========================================>          (94 + 22) / 116][Stage 117:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.667822912 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZInd ex<=55", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=55,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361240216 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 118:=====================================>               (79 + 34) / 113][Stage 118:===========================================>         (92 + 21) / 113][Stage 118:============================================>        (95 + 18) / 113][Stage 118:=================================================>   (105 + 8) / 113][Stage 118:====================================================>(112 + 1) / 113]                                                                                [Stage 119:=======================================>             (84 + 30) / 114][Stage 119:=============================================>       (97 + 17) / 114][Stage 119:==============================================>     (103 + 11) / 114][Stage 119:===================================================> (111 + 3) / 114][Stage 119:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.571402827 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIn dex<=234", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=234,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.38534045 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 120:==============================>                      (67 + 48) / 115][Stage 120:====================================>                (80 + 35) / 115][Stage 120:===============================================>    (104 + 11) / 115][Stage 120:===================================================> (111 + 4) / 115][Stage 120:====================================================>(114 + 1) / 115]                                                                                [Stage 121:===============================>                     (68 + 48) / 116][Stage 121:====================================>                (79 + 37) / 116][Stage 121:============================================>        (97 + 19) / 116][Stage 121:==================================================>  (111 + 5) / 116][Stage 121:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.138142002 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIn dex<=150", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=149 AND partitionZIndex<=150,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37257524 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 122:================================>                    (72 + 46) / 118][Stage 122:=================================>                   (74 + 44) / 118][Stage 122:======================================>              (86 + 32) / 118][Stage 122:=============================================>      (104 + 14) / 118][Stage 122:===================================================> (115 + 3) / 118]                                                                                [Stage 123:================================>                    (73 + 46) / 119][Stage 123:===================================>                 (80 + 39) / 119][Stage 123:=========================================>           (93 + 26) / 119][Stage 123:================================================>    (110 + 9) / 119][Stage 123:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.406753181 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIn dex<=223", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=223,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389130177 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 124:=================================>                   (73 + 42) / 115][Stage 124:============================================>        (97 + 18) / 115][Stage 124:================================================>    (106 + 9) / 115][Stage 124:====================================================>(114 + 1) / 115]                                                                                [Stage 125:===============================>                     (70 + 46) / 116][Stage 125:======================================>              (84 + 32) / 116][Stage 125:============================================>        (97 + 19) / 116][Stage 125:=================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.750546996 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIn dex<=182", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=182,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384485225 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 126:================================>                    (73 + 45) / 118][Stage 126:==================================>                  (77 + 41) / 118][Stage 126:======================================>              (85 + 33) / 118][Stage 126:============================================>        (98 + 20) / 118][Stage 126:================================================>    (109 + 9) / 118][Stage 126:====================================================>(117 + 1) / 118]                                                                                [Stage 127:================================>                    (73 + 46) / 119][Stage 127:==================================>                  (78 + 41) / 119][Stage 127:====================================>                (83 + 36) / 119][Stage 127:==========================================>          (96 + 23) / 119][Stage 127:=================================================>   (112 + 7) / 119][Stage 127:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.564620382 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZInd ex<=23", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=23,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40903106 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 128:==========================>                          (60 + 60) / 120][Stage 128:============================>                        (64 + 56) / 120][Stage 128:=================================>                   (76 + 44) / 120][Stage 128:==========================================>          (96 + 24) / 120][Stage 128:====================================================>(118 + 2) / 120]                                                                                [Stage 129:==========================>                          (61 + 60) / 121][Stage 129:==============================>                      (70 + 51) / 121][Stage 129:======================================>              (88 + 33) / 121][Stage 129:=============================================>      (107 + 14) / 121][Stage 129:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.071503166 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZInd ex<=65", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=65,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39164204 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 130:===========================>                         (58 + 55) / 113][Stage 130:=============================>                       (62 + 51) / 113][Stage 130:===================================>                 (76 + 37) / 113][Stage 130:=============================================>       (96 + 17) / 113][Stage 130:==================================================>  (108 + 5) / 113][Stage 130:====================================================>(111 + 2) / 113]                                                                                [Stage 131:===========================>                         (60 + 54) / 114][Stage 131:================================>                    (70 + 44) / 114][Stage 131:=======================================>             (86 + 28) / 114][Stage 131:==============================================>     (102 + 12) / 114][Stage 131:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.238595295 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIn dex<=161", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=161,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497249517 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 132:============================>                        (61 + 52) / 113][Stage 132:==================================>                  (73 + 40) / 113][Stage 132:=======================================>             (85 + 28) / 113][Stage 132:==============================================>      (99 + 14) / 113][Stage 132:==================================================>  (108 + 5) / 113]                                                                                [Stage 133:===========================>                         (59 + 55) / 114][Stage 133:================================>                    (69 + 45) / 114][Stage 133:========================================>            (87 + 27) / 114][Stage 133:=============================================>       (97 + 17) / 114][Stage 133:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.308974346 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZInd ex<=89", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=89,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366058921 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 134:======================================>              (83 + 30) / 113][Stage 134:===========================================>         (93 + 20) / 113][Stage 134:=================================================>   (105 + 8) / 113][Stage 134:===================================================> (109 + 4) / 113]                                                                                [Stage 135:===================================>                 (77 + 37) / 114][Stage 135:========================================>            (87 + 27) / 114][Stage 135:=============================================>       (97 + 17) / 114][Stage 135:=================================================>   (107 + 7) / 114][Stage 135:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.955273286 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIn dex<=135", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=134 AND partitionZIndex<=135,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344658292 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 136:======================================>              (84 + 31) / 115][Stage 136:=============================================>       (98 + 17) / 115][Stage 136:===================================================> (111 + 4) / 115]                                                                                [Stage 137:=======================================>             (86 + 30) / 116][Stage 137:============================================>        (98 + 18) / 116][Stage 137:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.55741701 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIn dex<=133", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=132 AND partitionZIndex<=133,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406320829 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 138:==========================>                          (60 + 60) / 120][Stage 138:=============================>                       (66 + 54) / 120][Stage 138:=====================================>               (84 + 36) / 120][Stage 138:============================================>       (103 + 17) / 120][Stage 138:===================================================> (117 + 3) / 120]                                                                                [Stage 139:============================>                        (65 + 56) / 121][Stage 139:=================================>                   (77 + 44) / 121][Stage 139:==========================================>          (97 + 24) / 121][Stage 139:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.107013815 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZInd ex<=34", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=34,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413103004 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 140:==========================>                          (60 + 61) / 121][Stage 140:===========================>                         (63 + 58) / 121][Stage 140:=================================>                   (76 + 45) / 121][Stage 140:===========================================>        (101 + 20) / 121][Stage 140:==================================================>  (115 + 6) / 121]                                                                                [Stage 141:===========================>                         (63 + 59) / 122][Stage 141:================================>                    (75 + 47) / 122][Stage 141:=========================================>           (96 + 26) / 122][Stage 141:=================================================>   (115 + 7) / 122][Stage 141:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.278761752 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZInd ex<=98", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=98,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383884299 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 142:==============================>                      (66 + 49) / 115][Stage 142:===================================>                 (78 + 37) / 115][Stage 142:============================================>        (96 + 19) / 115][Stage 142:==================================================>  (110 + 5) / 115][Stage 142:===================================================> (112 + 3) / 115][Stage 142:====================================================>(114 + 1) / 115]                                                                                [Stage 143:=================================>                   (73 + 43) / 116][Stage 143:=======================================>             (86 + 30) / 116][Stage 143:=============================================>      (102 + 14) / 116][Stage 143:=================================================>   (109 + 7) / 116][Stage 143:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.140829977 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIn dex<=232", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=231 AND partitionZIndex<=232,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404335383 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 144:==========================>                          (60 + 60) / 120][Stage 144:=============================>                       (67 + 53) / 120][Stage 144:======================================>              (88 + 32) / 120][Stage 144:===============================================>    (110 + 10) / 120]                                                                                [Stage 145:============================>                        (64 + 57) / 121][Stage 145:==================================>                  (79 + 42) / 121][Stage 145:=============================================>      (105 + 16) / 121][Stage 145:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 2.981852376 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIn dex<=198", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=198,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346004312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 146:=====================================>               (82 + 33) / 115][Stage 146:=========================================>           (91 + 24) / 115][Stage 146:=============================================>      (100 + 15) / 115]                                                                                [Stage 147:======================================>              (85 + 31) / 116][Stage 147:==========================================>          (93 + 23) / 116][Stage 147:==============================================>     (104 + 12) / 116][Stage 147:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.562257515 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIn dex<=229", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=229,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402376937 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 148:============================>                        (60 + 53) / 113][Stage 148:=================================>                   (71 + 42) / 113][Stage 148:===========================================>         (93 + 20) / 113][Stage 148:==============================================>     (102 + 11) / 113]                                                                                [Stage 149:============================>                        (61 + 53) / 114][Stage 149:=================================>                   (71 + 43) / 114][Stage 149:========================================>            (87 + 27) / 114][Stage 149:=============================================>       (98 + 16) / 114][Stage 149:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.126333646 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZInd ex<=99", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=99,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358627198 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 150:=====================================>               (80 + 33) / 113][Stage 150:========================================>            (87 + 26) / 113][Stage 150:=============================================>       (98 + 15) / 113][Stage 150:===================================================> (109 + 4) / 113][Stage 150:====================================================>(111 + 2) / 113]                                                                                [Stage 151:===================================>                 (76 + 38) / 114][Stage 151:========================================>            (88 + 26) / 114][Stage 151:=============================================>      (100 + 14) / 114][Stage 151:=================================================>   (107 + 7) / 114][Stage 151:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.090634821 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZInd ex<=26", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=26,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384637556 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 152:================================>                    (70 + 45) / 115][Stage 152:======================================>              (83 + 32) / 115][Stage 152:==============================================>     (102 + 13) / 115][Stage 152:====================================================>(113 + 2) / 115]                                                                                [Stage 153:=================================>                   (73 + 43) / 116][Stage 153:=========================================>           (90 + 26) / 116][Stage 153:================================================>    (107 + 9) / 116][Stage 153:===================================================> (113 + 3) / 116][Stage 153:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.951828953 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZInd ex<=42", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=42,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405162461 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 154:==========================>                          (60 + 60) / 120][Stage 154:===============================>                     (71 + 49) / 120][Stage 154:===================================>                 (81 + 39) / 120][Stage 154:==================================================>  (115 + 5) / 120]                                                                                [Stage 155:============================>                        (66 + 55) / 121][Stage 155:===================================>                 (80 + 41) / 121][Stage 155:============================================>       (104 + 17) / 121][Stage 155:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.048429652 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIn dex<=122", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=121 AND partitionZIndex<=122,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376703957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 156:=================================>                   (74 + 44) / 118][Stage 156:======================================>              (86 + 32) / 118][Stage 156:============================================>       (101 + 17) / 118][Stage 156:====================================================>(116 + 2) / 118]                                                                                [Stage 157:==================================>                  (77 + 42) / 119][Stage 157:=======================================>             (88 + 31) / 119][Stage 157:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 2.843719653 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZInd ex<=72", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=71 AND partitionZIndex<=72,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387902921 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 158:===========================>                         (59 + 54) / 113][Stage 158:==============================>                      (65 + 48) / 113][Stage 158:========================================>            (86 + 27) / 113][Stage 158:===============================================>    (103 + 10) / 113][Stage 158:===================================================> (109 + 4) / 113]                                                                                [Stage 159:===========================>                         (60 + 54) / 114][Stage 159:=================================>                   (72 + 42) / 114][Stage 159:=======================================>             (86 + 28) / 114][Stage 159:==============================================>     (103 + 11) / 114][Stage 159:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.213918908 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIn dex<=129", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=129,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368198936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 160:================================>                    (72 + 46) / 118][Stage 160:==================================>                  (77 + 41) / 118][Stage 160:=======================================>             (88 + 30) / 118][Stage 160:============================================>        (98 + 20) / 118][Stage 160:===================================================> (114 + 4) / 118]                                                                                [Stage 161:================================>                    (74 + 45) / 119][Stage 161:===================================>                 (79 + 40) / 119][Stage 161:========================================>            (91 + 28) / 119][Stage 161:===========================================>        (100 + 19) / 119][Stage 161:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.373121654 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIn dex<=121", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=121,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.348751433 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 162:=====================================>               (81 + 34) / 115][Stage 162:=======================================>             (86 + 29) / 115][Stage 162:=============================================>       (99 + 16) / 115][Stage 162:===================================================> (111 + 4) / 115]                                                                                [Stage 163:======================================>              (84 + 32) / 116][Stage 163:================================================>    (107 + 9) / 116][Stage 163:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.497552869 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIn dex<=240", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=240,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402934412 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 164:==========================>                          (61 + 59) / 120][Stage 164:================================>                    (74 + 46) / 120][Stage 164:========================================>            (91 + 29) / 120][Stage 164:====================================================>(118 + 2) / 120]                                                                                [Stage 165:============================>                        (65 + 56) / 121][Stage 165:=====================================>               (85 + 36) / 121][Stage 165:==============================================>     (109 + 12) / 121][Stage 165:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.050918389 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZInd ex<=31", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=31,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337776527 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 166:====================================>                (80 + 35) / 115][Stage 166:========================================>            (88 + 27) / 115][Stage 166:=============================================>       (98 + 17) / 115][Stage 166:=================================================>   (107 + 8) / 115]                                                                                [Stage 167:======================================>              (84 + 32) / 116][Stage 167:========================================>            (89 + 27) / 116][Stage 167:==============================================>     (103 + 13) / 116][Stage 167:===================================================> (112 + 4) / 116][Stage 167:===================================================> (113 + 3) / 116][Stage 167:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.36240061 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIn dex<=176", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=176,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396663056 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 168:===========================>                         (59 + 54) / 113][Stage 168:================================>                    (70 + 43) / 113][Stage 168:========================================>            (86 + 27) / 113][Stage 168:==============================================>      (99 + 14) / 113][Stage 168:===================================================> (110 + 3) / 113]                                                                                [Stage 169:===========================>                         (59 + 55) / 114][Stage 169:===============================>                     (68 + 46) / 114][Stage 169:========================================>            (87 + 27) / 114][Stage 169:===============================================>    (104 + 10) / 114][Stage 169:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.128704228 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZInd ex<=70", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=70,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378635616 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 170:================================>                    (72 + 46) / 118][Stage 170:================================>                    (73 + 45) / 118][Stage 170:==================================>                  (77 + 41) / 118][Stage 170:======================================>              (86 + 32) / 118][Stage 170:============================================>       (100 + 18) / 118][Stage 170:===================================================> (115 + 3) / 118]                                                                                [Stage 171:================================>                    (74 + 45) / 119][Stage 171:==================================>                  (77 + 42) / 119][Stage 171:======================================>              (86 + 33) / 119][Stage 171:===========================================>         (98 + 21) / 119][Stage 171:===============================================>    (109 + 10) / 119]                                                                                Time elapsed: 3.555095822 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIn dex<=149", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=149,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407465978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 172:==========================>                          (60 + 61) / 121][Stage 172:==============================>                      (70 + 51) / 121][Stage 172:====================================>                (83 + 38) / 121][Stage 172:============================================>       (103 + 18) / 121][Stage 172:====================================================>(119 + 2) / 121]                                                                                [Stage 173:===========================>                         (63 + 59) / 122][Stage 173:=============================>                       (69 + 53) / 122][Stage 173:========================================>            (94 + 28) / 122][Stage 173:===============================================>    (111 + 11) / 122][Stage 173:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.348532279 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZInd ex<=66", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=66,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.364635263 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 174:================================>                    (72 + 46) / 118][Stage 174:===================================>                 (78 + 40) / 118][Stage 174:===================================>                 (80 + 38) / 118][Stage 174:=======================================>             (88 + 30) / 118][Stage 174:============================================>       (102 + 16) / 118][Stage 174:====================================================>(117 + 1) / 118]                                                                                [Stage 175:================================>                    (73 + 46) / 119][Stage 175:==================================>                  (77 + 42) / 119][Stage 175:====================================>                (82 + 37) / 119][Stage 175:========================================>            (90 + 29) / 119][Stage 175:=============================================>      (103 + 16) / 119][Stage 175:===================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.523827838 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZInd ex<=62", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=62,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385944669 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 176:===========================>                         (58 + 55) / 113][Stage 176:==============================>                      (65 + 48) / 113][Stage 176:=====================================>               (79 + 34) / 113][Stage 176:=============================================>       (97 + 16) / 113]                                                                                [Stage 177:===========================>                         (60 + 54) / 114][Stage 177:===============================>                     (67 + 47) / 114][Stage 177:=====================================>               (81 + 33) / 114][Stage 177:============================================>        (96 + 18) / 114][Stage 177:=================================================>   (106 + 8) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.29639181 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIn dex<=192", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=192,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404494949 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 178:==========================>                          (60 + 60) / 120][Stage 178:============================>                        (64 + 56) / 120][Stage 178:=================================>                   (76 + 44) / 120][Stage 178:==================================================>  (115 + 5) / 120]                                                                                [Stage 179:==========================>                          (61 + 60) / 121][Stage 179:=================================>                   (77 + 44) / 121][Stage 179:==========================================>         (100 + 21) / 121][Stage 179:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 2.94470995 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIn dex<=220", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=219 AND partitionZIndex<=220,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398933416 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 180:==========================>                          (61 + 59) / 120][Stage 180:==============================>                      (68 + 52) / 120][Stage 180:====================================>                (83 + 37) / 120][Stage 180:=============================================>      (106 + 14) / 120][Stage 180:===================================================> (117 + 3) / 120]                                                                                [Stage 181:============================>                        (65 + 56) / 121][Stage 181:=================================>                   (76 + 45) / 121][Stage 181:==========================================>          (98 + 23) / 121][Stage 181:=================================================>   (112 + 9) / 121]                                                                                Time elapsed: 3.30234893 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZInd ex<=71", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=71,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442476351 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 182:==========================>                          (61 + 59) / 120][Stage 182:===============================>                     (71 + 49) / 120][Stage 182:========================================>            (92 + 28) / 120][Stage 182:===============================================>    (109 + 11) / 120]                                                                                [Stage 183:===========================>                         (62 + 59) / 121][Stage 183:==============================>                      (69 + 52) / 121][Stage 183:=======================================>             (90 + 31) / 121][Stage 183:=================================================>   (112 + 9) / 121]                                                                                Time elapsed: 2.982795622 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIn dex<=145", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=145,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406673091 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 184:==========================>                          (60 + 61) / 121][Stage 184:===========================>                         (63 + 58) / 121][Stage 184:==================================>                  (79 + 42) / 121][Stage 184:=============================================>      (106 + 15) / 121][Stage 184:==================================================>  (116 + 5) / 121]                                                                                [Stage 185:==========================>                          (61 + 61) / 122][Stage 185:==============================>                      (70 + 52) / 122][Stage 185:=====================================>               (86 + 36) / 122][Stage 185:==================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.084061498 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIn dex<=214", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=214,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382362777 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 186:===========================>                         (59 + 54) / 113][Stage 186:==============================>                      (64 + 49) / 113][Stage 186:=====================================>               (80 + 33) / 113][Stage 186:=============================================>       (98 + 15) / 113]                                                                                [Stage 187:============================>                        (62 + 52) / 114][Stage 187:===============================>                     (67 + 47) / 114][Stage 187:======================================>              (83 + 31) / 114][Stage 187:==============================================>     (102 + 12) / 114]                                                                                Time elapsed: 3.098762325 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZInd ex<=100", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=100,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39309676 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 188:==========================>                          (60 + 60) / 120][Stage 188:============================>                        (65 + 55) / 120][Stage 188:==================================>                  (79 + 41) / 120][Stage 188:===========================================>         (99 + 21) / 120][Stage 188:===================================================> (116 + 4) / 120]                                                                                [Stage 189:==========================>                          (61 + 60) / 121][Stage 189:===========================>                         (63 + 58) / 121][Stage 189:===================================>                 (82 + 39) / 121][Stage 189:============================================>       (103 + 18) / 121][Stage 189:===================================================> (117 + 4) / 121][Stage 189:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.317481296 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIn dex<=113", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=113,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409835776 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 190:==========================>                          (60 + 60) / 120][Stage 190:============================>                        (65 + 55) / 120][Stage 190:=================================>                   (75 + 45) / 120][Stage 190:========================================>            (92 + 28) / 120][Stage 190:==================================================>  (114 + 6) / 120]                                                                                [Stage 191:===========================>                         (63 + 58) / 121][Stage 191:===================================>                 (80 + 41) / 121][Stage 191:===========================================>        (101 + 20) / 121][Stage 191:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.08844337 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIn dex<=107", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=107,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396951187 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 192:==========================>                          (60 + 60) / 120][Stage 192:============================>                        (65 + 55) / 120][Stage 192:=================================>                   (76 + 44) / 120][Stage 192:=============================================>      (105 + 15) / 120][Stage 192:====================================================>(119 + 1) / 120]                                                                                [Stage 193:==========================>                          (61 + 60) / 121][Stage 193:=============================>                       (68 + 53) / 121][Stage 193:=======================================>             (90 + 31) / 121][Stage 193:==============================================>     (108 + 13) / 121]                                                                                Time elapsed: 2.971634749 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIn dex<=162", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=162,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420407978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 194:==========================>                          (60 + 61) / 121][Stage 194:===============================>                     (72 + 49) / 121][Stage 194:======================================>              (88 + 33) / 121][Stage 194:==============================================>     (108 + 13) / 121][Stage 194:====================================================>(119 + 2) / 121]                                                                                [Stage 195:=============================>                       (68 + 54) / 122][Stage 195:======================================>              (88 + 34) / 122][Stage 195:===========================================>        (103 + 19) / 122][Stage 195:=================================================>   (113 + 9) / 122][Stage 195:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.402844603 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZInd ex<=87", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=87,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4036353 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 196:===========================>                         (58 + 55) / 113][Stage 196:============================>                        (61 + 52) / 113][Stage 196:=================================>                   (72 + 41) / 113][Stage 196:===========================================>         (93 + 20) / 113][Stage 196:=================================================>   (106 + 7) / 113][Stage 196:====================================================>(111 + 2) / 113]                                                                                [Stage 197:===========================>                         (59 + 55) / 114][Stage 197:==============================>                      (65 + 49) / 114][Stage 197:====================================>                (78 + 36) / 114][Stage 197:========================================>            (88 + 26) / 114][Stage 197:==================================================>  (108 + 6) / 114][Stage 197:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.407092245 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIn dex<=201", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=201,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40435306 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 198:================================>                    (71 + 44) / 115][Stage 198:======================================>              (84 + 31) / 115][Stage 198:=============================================>      (101 + 14) / 115][Stage 198:===================================================> (111 + 4) / 115][Stage 198:====================================================>(114 + 1) / 115]                                                                                [Stage 199:================================>                    (72 + 44) / 116][Stage 199:=========================================>           (90 + 26) / 116][Stage 199:============================================>       (100 + 16) / 116][Stage 199:===================================================> (113 + 3) / 116][Stage 199:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.966284119 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZInd ex<=60", 2))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=60,2))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.529166871 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 200:==========================>                          (60 + 61) / 121][Stage 200:============================>                        (66 + 55) / 121][Stage 200:=====================================>               (86 + 35) / 121][Stage 200:===========================================>        (101 + 20) / 121][Stage 200:===================================================> (117 + 4) / 121]                                                                                [Stage 201:==========================>                          (61 + 61) / 122][Stage 201:============================>                        (66 + 56) / 122][Stage 201:==================================>                  (80 + 42) / 122][Stage 201:==========================================>         (100 + 22) / 122][Stage 201:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.184909829 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m8.285s
user	11m32.656s
sys	0m38.648s
