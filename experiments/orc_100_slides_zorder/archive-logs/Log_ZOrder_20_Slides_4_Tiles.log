Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 17:29:49 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:30:04 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:30:04 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:30:04 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 17:30:07 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 17:30:17 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524173006-0574).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.382284282 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:===============>                                       (32 + 83) / 115][Stage 0:==========================>                            (55 + 60) / 115][Stage 0:============================>                          (59 + 56) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:======================================>                (81 + 34) / 115][Stage 0:==========================================>            (88 + 27) / 115][Stage 0:===============================================>       (99 + 16) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:============================>                          (60 + 56) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:====================================>                  (76 + 40) / 116][Stage 1:======================================>                (81 + 35) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:==============================================>        (98 + 18) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:==================================================>    (107 + 9) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.532027236 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=209,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.728070923 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:======================>                                (47 + 68) / 115][Stage 2:=========================>                             (53 + 62) / 115][Stage 2:===============================>                       (66 + 49) / 115][Stage 2:=================================>                     (69 + 46) / 115][Stage 2:=================================>                     (70 + 45) / 115][Stage 2:====================================>                  (76 + 39) / 115][Stage 2:========================================>              (85 + 30) / 115][Stage 2:===========================================>           (91 + 24) / 115][Stage 2:==============================================>        (98 + 17) / 115][Stage 2:===================================================>   (107 + 8) / 115][Stage 2:====================================================>  (109 + 6) / 115][Stage 2:=====================================================> (112 + 3) / 115][Stage 2:======================================================>(114 + 1) / 115]                                                                                [Stage 3:=============================>                         (63 + 53) / 116][Stage 3:=================================>                     (70 + 46) / 116][Stage 3:==================================>                    (73 + 43) / 116][Stage 3:===================================>                   (75 + 41) / 116][Stage 3:======================================>                (81 + 35) / 116][Stage 3:==============================================>        (99 + 17) / 116][Stage 3:=================================================>    (106 + 10) / 116][Stage 3:==================================================>    (107 + 9) / 116][Stage 3:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 5.959120154 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=176", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=176,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.73933373 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:=========================>                             (56 + 64) / 120][Stage 4:===========================>                           (61 + 59) / 120][Stage 4:=============================>                         (64 + 56) / 120][Stage 4:================================>                      (70 + 50) / 120][Stage 4:=====================================>                 (82 + 38) / 120][Stage 4:==========================================>            (92 + 28) / 120][Stage 4:===================================================>   (112 + 8) / 120][Stage 4:======================================================>(119 + 1) / 120]                                                                                [Stage 5:===========================>                           (60 + 61) / 121][Stage 5:=============================>                         (65 + 56) / 121][Stage 5:===============================>                       (70 + 51) / 121][Stage 5:===================================>                   (78 + 43) / 121][Stage 5:==========================================>            (93 + 28) / 121][Stage 5:================================================>     (109 + 12) / 121][Stage 5:======================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.472638181 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=54", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=54,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.586080363 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:==============================>                        (64 + 51) / 115][Stage 6:==================================>                    (72 + 43) / 115][Stage 6:=======================================>               (82 + 33) / 115][Stage 6:=============================================>         (95 + 20) / 115][Stage 6:===============================================>      (101 + 14) / 115][Stage 6:==================================================>    (106 + 9) / 115][Stage 6:====================================================>  (109 + 6) / 115][Stage 6:======================================================>(114 + 1) / 115]                                                                                [Stage 7:===============================>                       (66 + 50) / 116][Stage 7:===================================>                   (75 + 41) / 116][Stage 7:=======================================>               (83 + 33) / 116][Stage 7:==========================================>            (89 + 27) / 116][Stage 7:=============================================>         (97 + 19) / 116][Stage 7:===================================================>   (108 + 8) / 116][Stage 7:=====================================================> (113 + 3) / 116][Stage 7:======================================================>(114 + 2) / 116][Stage 7:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.97793545 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=12,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.608818178 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:===========================>                           (56 + 57) / 113][Stage 8:============================>                          (58 + 55) / 113][Stage 8:==============================>                        (63 + 50) / 113][Stage 8:===================================>                   (73 + 40) / 113][Stage 8:==========================================>            (87 + 26) / 113][Stage 8:============================================>          (92 + 21) / 113][Stage 8:===============================================>      (100 + 13) / 113][Stage 8:===================================================>   (106 + 7) / 113][Stage 8:======================================================>(111 + 2) / 113]                                                                                [Stage 9:===========================>                           (58 + 56) / 114][Stage 9:==============================>                        (63 + 51) / 114][Stage 9:==================================>                    (71 + 43) / 114][Stage 9:========================================>              (83 + 31) / 114][Stage 9:===============================================>       (98 + 16) / 114][Stage 9:================================================>     (102 + 12) / 114][Stage 9:====================================================>  (108 + 6) / 114][Stage 9:=====================================================> (111 + 3) / 114][Stage 9:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.827798239 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=37", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=37,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.669843199 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:============================>                         (59 + 54) / 113][Stage 10:=============================>                        (62 + 51) / 113][Stage 10:====================================>                 (76 + 37) / 113][Stage 10:===========================================>          (90 + 23) / 113][Stage 10:=================================================>    (104 + 9) / 113][Stage 10:==================================================>   (106 + 7) / 113]                                                                                [Stage 11:===========================>                          (59 + 55) / 114][Stage 11:==============================>                       (65 + 49) / 114][Stage 11:====================================>                 (78 + 36) / 114][Stage 11:=============================================>        (95 + 19) / 114][Stage 11:================================================>    (104 + 10) / 114][Stage 11:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.999283719 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=161", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=161,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.562437865 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===============================>                      (67 + 48) / 115][Stage 12:====================================>                 (77 + 38) / 115][Stage 12:========================================>             (87 + 28) / 115][Stage 12:==============================================>      (101 + 14) / 115][Stage 12:===================================================>  (109 + 6) / 115][Stage 12:====================================================> (111 + 4) / 115][Stage 12:=====================================================>(113 + 2) / 115][Stage 12:=====================================================>(114 + 1) / 115]                                                                                [Stage 13:=================================>                    (73 + 43) / 116][Stage 13:=====================================>                (81 + 35) / 116][Stage 13:=========================================>            (89 + 27) / 116][Stage 13:=============================================>        (97 + 19) / 116][Stage 13:==================================================>   (108 + 8) / 116][Stage 13:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.067227821 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=95", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=95,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.549331735 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:=================================>                    (70 + 43) / 113][Stage 14:========================================>             (85 + 28) / 113][Stage 14:===========================================>          (92 + 21) / 113][Stage 14:==============================================>      (100 + 13) / 113][Stage 14:==================================================>   (106 + 7) / 113][Stage 14:===================================================>  (108 + 5) / 113][Stage 14:====================================================> (109 + 4) / 113][Stage 14:=====================================================>(111 + 2) / 113]                                                                                [Stage 15:=======================================>              (84 + 30) / 114][Stage 15:============================================>         (93 + 21) / 114][Stage 15:==============================================>      (100 + 14) / 114][Stage 15:==============================================>      (101 + 13) / 114][Stage 15:================================================>    (104 + 10) / 114][Stage 15:====================================================> (110 + 4) / 114][Stage 15:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.441161492 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=32,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.581153596 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:==========================>                           (59 + 62) / 121][Stage 16:===========================>                          (61 + 60) / 121][Stage 16:=================================>                    (74 + 47) / 121][Stage 16:==========================================>           (95 + 26) / 121][Stage 16:================================================>    (111 + 10) / 121][Stage 16:===================================================>  (115 + 6) / 121][Stage 16:====================================================> (117 + 4) / 121]                                                                                [Stage 17:===========================>                          (63 + 59) / 122][Stage 17:=================================>                    (75 + 47) / 122][Stage 17:========================================>             (91 + 31) / 122][Stage 17:==============================================>      (108 + 14) / 122][Stage 17:===================================================>  (117 + 5) / 122][Stage 17:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.149805509 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=171,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.560957642 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (60 + 60) / 120][Stage 18:=============================>                        (65 + 55) / 120][Stage 18:===================================>                  (78 + 42) / 120][Stage 18:=========================================>            (93 + 27) / 120][Stage 18:==============================================>      (105 + 15) / 120][Stage 18:====================================================> (117 + 3) / 120]                                                                                [Stage 19:===========================>                          (62 + 59) / 121][Stage 19:==================================>                   (77 + 44) / 121][Stage 19:============================================>         (99 + 22) / 121][Stage 19:===================================================>  (115 + 6) / 121][Stage 19:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.748780772 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=58,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.534756604 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (58 + 55) / 113][Stage 20:============================>                         (59 + 54) / 113][Stage 20:================================>                     (68 + 45) / 113][Stage 20:============================================>         (93 + 20) / 113][Stage 20:==================================================>   (106 + 7) / 113]                                                                                [Stage 21:===========================>                          (59 + 55) / 114][Stage 21:==============================>                       (65 + 49) / 114][Stage 21:=====================================>                (79 + 35) / 114][Stage 21:===============================================>     (102 + 12) / 114][Stage 21:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.658810887 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=82 AND partitionZIndex<=85,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.510528087 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:============================>                         (59 + 54) / 113][Stage 22:==============================>                       (63 + 50) / 113][Stage 22:========================================>             (84 + 29) / 113][Stage 22:================================================>    (103 + 10) / 113][Stage 22:=====================================================>(111 + 2) / 113]                                                                                [Stage 23:============================>                         (60 + 54) / 114][Stage 23:================================>                     (68 + 46) / 114][Stage 23:==========================================>           (89 + 25) / 114][Stage 23:================================================>    (104 + 10) / 114][Stage 23:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.649305797 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=144", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=144,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496197897 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (58 + 55) / 113][Stage 24:=============================>                        (62 + 51) / 113][Stage 24:=====================================>                (78 + 35) / 113][Stage 24:============================================>         (93 + 20) / 113][Stage 24:=================================================>    (104 + 9) / 113][Stage 24:====================================================> (109 + 4) / 113]                                                                                [Stage 25:============================>                         (60 + 54) / 114][Stage 25:==============================>                       (64 + 50) / 114][Stage 25:====================================>                 (77 + 37) / 114][Stage 25:==============================================>      (100 + 14) / 114][Stage 25:===================================================>  (108 + 6) / 114][Stage 25:====================================================> (110 + 4) / 114][Stage 25:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.60372256 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=103", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=103,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417516702 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:=====================================>                (79 + 36) / 115][Stage 26:======================================>               (81 + 34) / 115][Stage 26:=============================================>        (97 + 18) / 115][Stage 26:==================================================>   (108 + 7) / 115][Stage 26:=====================================================>(114 + 1) / 115]                                                                                [Stage 27:========================================>             (86 + 30) / 116][Stage 27:============================================>         (95 + 21) / 116][Stage 27:================================================>    (106 + 10) / 116][Stage 27:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.960223584 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=166", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=166,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.481390386 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:============================>                         (59 + 54) / 113][Stage 28:=============================>                        (61 + 52) / 113][Stage 28:==================================>                   (72 + 41) / 113][Stage 28:==============================================>       (98 + 15) / 113][Stage 28:====================================================> (110 + 3) / 113]                                                                                [Stage 29:===========================>                          (59 + 55) / 114][Stage 29:=============================>                        (62 + 52) / 114][Stage 29:====================================>                 (77 + 37) / 114][Stage 29:==============================================>      (101 + 13) / 114][Stage 29:===================================================>  (109 + 5) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.438740624 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=235,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448848323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:======================================>               (81 + 32) / 113][Stage 30:===========================================>          (92 + 21) / 113][Stage 30:===============================================>     (101 + 12) / 113][Stage 30:===================================================>  (108 + 5) / 113][Stage 30:=====================================================>(111 + 2) / 113]                                                                                [Stage 31:===================================>                  (75 + 39) / 114][Stage 31:=========================================>            (87 + 27) / 114][Stage 31:==============================================>       (99 + 15) / 114][Stage 31:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.049970739 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=179", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=179,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.481273364 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (58 + 55) / 113][Stage 32:============================>                         (59 + 54) / 113][Stage 32:=================================>                    (71 + 42) / 113][Stage 32:===========================================>          (92 + 21) / 113][Stage 32:===============================================>     (102 + 11) / 113][Stage 32:=====================================================>(111 + 2) / 113]                                                                                [Stage 33:=============================>                        (62 + 52) / 114][Stage 33:===================================>                  (74 + 40) / 114][Stage 33:===========================================>          (91 + 23) / 114][Stage 33:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.495846998 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=139 AND partitionZIndex<=142,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.503410699 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (60 + 60) / 120][Stage 34:===============================>                      (69 + 51) / 120][Stage 34:======================================>               (86 + 34) / 120][Stage 34:===================================================>  (114 + 6) / 120]                                                                                [Stage 35:===========================>                          (61 + 60) / 121][Stage 35:=============================>                        (65 + 56) / 121][Stage 35:=====================================>                (84 + 37) / 121][Stage 35:=============================================>       (104 + 17) / 121][Stage 35:===================================================>  (115 + 6) / 121][Stage 35:===================================================>  (116 + 5) / 121][Stage 35:====================================================> (117 + 4) / 121][Stage 35:====================================================> (118 + 3) / 121][Stage 35:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.482867259 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=51", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=51,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.436196853 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:======================================>               (83 + 32) / 115][Stage 36:===========================================>          (92 + 23) / 115][Stage 36:=================================================>    (106 + 9) / 115]                                                                                [Stage 37:=======================================>              (85 + 31) / 116][Stage 37:============================================>         (95 + 21) / 116][Stage 37:===============================================>     (103 + 13) / 116][Stage 37:===================================================>  (110 + 6) / 116][Stage 37:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.096770914 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=237", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=234 AND partitionZIndex<=237,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.508777901 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==========================>                           (60 + 61) / 121][Stage 38:===============================>                      (70 + 51) / 121][Stage 38:======================================>               (86 + 35) / 121][Stage 38:============================================>        (102 + 19) / 121][Stage 38:====================================================> (117 + 4) / 121][Stage 38:=====================================================>(120 + 1) / 121]                                                                                [Stage 39:===========================>                          (61 + 61) / 122][Stage 39:============================>                         (64 + 58) / 122][Stage 39:=====================================>                (84 + 38) / 122][Stage 39:===============================================>     (109 + 13) / 122][Stage 39:=====================================================>(120 + 2) / 122][Stage 39:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.817008683 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=213", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=213,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.539691902 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===============================>                      (68 + 47) / 115][Stage 40:======================================>               (81 + 34) / 115][Stage 40:==============================================>      (101 + 14) / 115][Stage 40:===================================================>  (109 + 6) / 115]                                                                                [Stage 41:=====================================>                (81 + 35) / 116][Stage 41:============================================>         (95 + 21) / 116][Stage 41:=================================================>    (107 + 9) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.844787827 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=200", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=200,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456989147 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===============================>                      (67 + 48) / 115][Stage 42:=====================================>                (79 + 36) / 115][Stage 42:============================================>         (95 + 20) / 115][Stage 42:==================================================>   (107 + 8) / 115][Stage 42:====================================================> (111 + 4) / 115][Stage 42:=====================================================>(113 + 2) / 115]                                                                                [Stage 43:===================================>                  (76 + 40) / 116][Stage 43:=========================================>            (89 + 27) / 116][Stage 43:===============================================>     (103 + 13) / 116][Stage 43:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.314357039 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=113", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=113,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478979121 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (60 + 60) / 120][Stage 44:=================================>                    (74 + 46) / 120][Stage 44:============================================>         (99 + 21) / 120][Stage 44:================================================>    (109 + 11) / 120][Stage 44:=====================================================>(118 + 2) / 120]                                                                                [Stage 45:===========================>                          (61 + 60) / 121][Stage 45:=============================>                        (67 + 54) / 121][Stage 45:========================================>             (90 + 31) / 121][Stage 45:================================================>    (111 + 10) / 121][Stage 45:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.652385262 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=57", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=57,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427163345 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:=================================>                    (71 + 44) / 115][Stage 46:========================================>             (86 + 29) / 115][Stage 46:==============================================>      (100 + 15) / 115][Stage 46:====================================================> (111 + 4) / 115]                                                                                [Stage 47:================================>                     (70 + 46) / 116][Stage 47:=======================================>              (85 + 31) / 116][Stage 47:==============================================>       (99 + 17) / 116][Stage 47:===================================================>  (110 + 6) / 116][Stage 47:=====================================================>(114 + 2) / 116][Stage 47:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.351201874 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=129 AND partitionZIndex<=132,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466712851 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=================================>                    (72 + 43) / 115][Stage 48:========================================>             (86 + 29) / 115][Stage 48:==============================================>      (100 + 15) / 115]                                                                                [Stage 49:===================================>                  (77 + 39) / 116][Stage 49:===========================================>          (94 + 22) / 116][Stage 49:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.648488886 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=233", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=233,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433327449 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:================================>                     (72 + 46) / 118][Stage 50:=================================>                    (74 + 44) / 118][Stage 50:=====================================>                (82 + 36) / 118][Stage 50:===========================================>          (95 + 23) / 118][Stage 50:==================================================>   (110 + 8) / 118][Stage 50:=====================================================>(116 + 2) / 118]                                                                                [Stage 51:=================================>                    (73 + 46) / 119][Stage 51:===================================>                  (78 + 41) / 119][Stage 51:======================================>               (85 + 34) / 119][Stage 51:===========================================>          (96 + 23) / 119][Stage 51:==================================================>   (111 + 8) / 119][Stage 51:===================================================>  (114 + 5) / 119][Stage 51:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.14385726 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=12 AND partitionZIndex<=15,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37531399 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:=====================================>                (79 + 36) / 115][Stage 52:======================================>               (83 + 32) / 115][Stage 52:============================================>         (95 + 20) / 115][Stage 52:==============================================>      (101 + 14) / 115][Stage 52:====================================================> (112 + 3) / 115]                                                                                [Stage 53:======================================>               (82 + 34) / 116][Stage 53:=============================================>       (100 + 16) / 116][Stage 53:===================================================>  (111 + 5) / 116][Stage 53:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 4.273538862 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=73", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=73,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455738043 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (60 + 60) / 120][Stage 54:===========================>                          (61 + 59) / 120][Stage 54:====================================>                 (81 + 39) / 120][Stage 54:==============================================>      (105 + 15) / 120]                                                                                [Stage 55:===========================>                          (61 + 60) / 121][Stage 55:==============================>                       (68 + 53) / 121][Stage 55:========================================>             (90 + 31) / 121][Stage 55:================================================>    (111 + 10) / 121]                                                                                Time elapsed: 3.123885195 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=17", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=17,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417499037 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===============================>                      (67 + 48) / 115][Stage 56:======================================>               (82 + 33) / 115][Stage 56:==============================================>      (101 + 14) / 115][Stage 56:=================================================>    (106 + 9) / 115][Stage 56:==================================================>   (108 + 7) / 115]                                                                                [Stage 57:===============================>                      (68 + 48) / 116][Stage 57:=======================================>              (85 + 31) / 116][Stage 57:===========================================>          (94 + 22) / 116][Stage 57:===============================================>     (104 + 12) / 116][Stage 57:==================================================>   (108 + 8) / 116][Stage 57:===================================================>  (111 + 5) / 116][Stage 57:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.05082285 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=203", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=200 AND partitionZIndex<=203,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430402505 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===============================>                      (68 + 47) / 115][Stage 58:====================================>                 (78 + 37) / 115][Stage 58:==========================================>           (91 + 24) / 115][Stage 58:==================================================>   (108 + 7) / 115][Stage 58:====================================================> (112 + 3) / 115]                                                                                [Stage 59:===============================>                      (68 + 48) / 116][Stage 59:=======================================>              (84 + 32) / 116][Stage 59:============================================>         (96 + 20) / 116][Stage 59:==================================================>   (109 + 7) / 116][Stage 59:=====================================================>(114 + 2) / 116][Stage 59:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.273040588 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=160", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=157 AND partitionZIndex<=160,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396501262 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===================================>                  (75 + 38) / 113][Stage 60:==========================================>           (89 + 24) / 113][Stage 60:==============================================>       (97 + 16) / 113][Stage 60:====================================================> (110 + 3) / 113]                                                                                [Stage 61:=====================================>                (79 + 35) / 114][Stage 61:==========================================>           (89 + 25) / 114][Stage 61:==============================================>       (98 + 16) / 114][Stage 61:===================================================>  (109 + 5) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.328341001 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=65", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=65,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42412008 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:=================================>                    (73 + 45) / 118][Stage 62:=====================================>                (81 + 37) / 118][Stage 62:=============================================>        (99 + 19) / 118][Stage 62:=================================================>    (109 + 9) / 118]                                                                                [Stage 63:=================================>                    (73 + 46) / 119][Stage 63:=======================================>              (87 + 32) / 119][Stage 63:============================================>        (100 + 19) / 119][Stage 63:==================================================>   (111 + 8) / 119][Stage 63:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.565939715 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=133", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=130 AND partitionZIndex<=133,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406174908 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:================================>                     (72 + 46) / 118][Stage 64:=================================>                    (74 + 44) / 118][Stage 64:======================================>               (84 + 34) / 118][Stage 64:============================================>         (97 + 21) / 118][Stage 64:===============================================>     (106 + 12) / 118][Stage 64:====================================================> (114 + 4) / 118][Stage 64:=====================================================>(116 + 2) / 118]                                                                                [Stage 65:=================================>                    (73 + 46) / 119][Stage 65:==================================>                   (76 + 43) / 119][Stage 65:=======================================>              (86 + 33) / 119][Stage 65:===========================================>          (95 + 24) / 119][Stage 65:===================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.570613476 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=68", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=68,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.450738717 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===========================>                          (60 + 60) / 120][Stage 66:===========================>                          (62 + 58) / 120][Stage 66:=================================>                    (75 + 45) / 120][Stage 66:=========================================>            (93 + 27) / 120][Stage 66:================================================>    (109 + 11) / 120]                                                                                [Stage 67:===========================>                          (62 + 59) / 121][Stage 67:===================================>                  (79 + 42) / 121][Stage 67:=============================================>       (105 + 16) / 121][Stage 67:====================================================> (117 + 4) / 121][Stage 67:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.287994707 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=141,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39453378 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:================================>                     (72 + 46) / 118][Stage 68:==================================>                   (76 + 42) / 118][Stage 68:=======================================>              (87 + 31) / 118][Stage 68:==========================================>           (93 + 25) / 118][Stage 68:================================================>    (108 + 10) / 118][Stage 68:=====================================================>(117 + 1) / 118]                                                                                [Stage 69:=================================>                    (73 + 46) / 119][Stage 69:==================================>                   (77 + 42) / 119][Stage 69:======================================>               (85 + 34) / 119][Stage 69:============================================>        (101 + 18) / 119][Stage 69:=====================================================>(117 + 2) / 119][Stage 69:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.815266911 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=39", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=39,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42577892 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:================================>                     (72 + 46) / 118][Stage 70:===================================>                  (77 + 41) / 118][Stage 70:========================================>             (88 + 30) / 118][Stage 70:=============================================>       (102 + 16) / 118][Stage 70:====================================================> (114 + 4) / 118][Stage 70:=====================================================>(117 + 1) / 118]                                                                                [Stage 71:=================================>                    (73 + 46) / 119][Stage 71:==================================>                   (75 + 44) / 119][Stage 71:==========================================>           (93 + 26) / 119][Stage 71:==============================================>      (104 + 15) / 119][Stage 71:====================================================> (116 + 3) / 119]                                                                                Time elapsed: 3.483398369 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=165,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393410838 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:================================>                     (72 + 46) / 118][Stage 72:=================================>                    (73 + 45) / 118][Stage 72:=====================================>                (82 + 36) / 118][Stage 72:============================================>         (97 + 21) / 118][Stage 72:====================================================> (115 + 3) / 118]                                                                                [Stage 73:=================================>                    (73 + 46) / 119][Stage 73:==================================>                   (75 + 44) / 119][Stage 73:========================================>             (89 + 30) / 119][Stage 73:============================================>         (99 + 20) / 119][Stage 73:===================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.163992917 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=31,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372504624 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:======================================>               (82 + 33) / 115][Stage 74:==========================================>           (91 + 24) / 115][Stage 74:=================================================>    (106 + 9) / 115][Stage 74:====================================================> (111 + 4) / 115]                                                                                [Stage 75:======================================>               (83 + 33) / 116][Stage 75:============================================>         (95 + 21) / 116][Stage 75:===============================================>     (103 + 13) / 116][Stage 75:===================================================>  (110 + 6) / 116][Stage 75:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.877789402 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=27", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=27,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418611095 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:============================>                         (59 + 54) / 113][Stage 76:================================>                     (67 + 46) / 113][Stage 76:========================================>             (85 + 28) / 113][Stage 76:==================================================>   (105 + 8) / 113][Stage 76:=====================================================>(112 + 1) / 113]                                                                                [Stage 77:===========================>                          (59 + 55) / 114][Stage 77:===============================>                      (66 + 48) / 114][Stage 77:=======================================>              (83 + 31) / 114][Stage 77:===============================================>     (102 + 12) / 114][Stage 77:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.501331752 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=87,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391465857 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:================================>                     (69 + 46) / 115][Stage 78:======================================>               (81 + 34) / 115][Stage 78:==============================================>       (99 + 16) / 115][Stage 78:=====================================================>(114 + 1) / 115]                                                                                [Stage 79:===============================>                      (67 + 49) / 116][Stage 79:======================================>               (83 + 33) / 116][Stage 79:=============================================>        (97 + 19) / 116][Stage 79:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.642842969 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=172", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=172,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405574385 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (59 + 54) / 113][Stage 80:=================================>                    (71 + 42) / 113][Stage 80:=========================================>            (86 + 27) / 113][Stage 80:==============================================>      (100 + 13) / 113][Stage 80:=====================================================>(112 + 1) / 113]                                                                                [Stage 81:===========================>                          (59 + 55) / 114][Stage 81:================================>                     (68 + 46) / 114][Stage 81:==========================================>           (89 + 25) / 114][Stage 81:===============================================>     (103 + 11) / 114][Stage 81:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.252303905 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=192 AND partitionZIndex<=195,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384313671 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:================================>                     (72 + 46) / 118][Stage 82:====================================>                 (80 + 38) / 118][Stage 82:===========================================>          (96 + 22) / 118][Stage 82:================================================>    (108 + 10) / 118]                                                                                [Stage 83:=================================>                    (73 + 46) / 119][Stage 83:====================================>                 (81 + 38) / 119][Stage 83:==========================================>           (94 + 25) / 119][Stage 83:================================================>    (108 + 11) / 119][Stage 83:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.488237936 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=210", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=207 AND partitionZIndex<=210,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410082328 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:===============================>                      (67 + 48) / 115][Stage 84:====================================>                 (77 + 38) / 115][Stage 84:==============================================>       (99 + 16) / 115][Stage 84:==================================================>   (108 + 7) / 115][Stage 84:=====================================================>(114 + 1) / 115]                                                                                [Stage 85:===================================>                  (77 + 39) / 116][Stage 85:=============================================>        (97 + 19) / 116][Stage 85:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.897187588 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=40,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41477047 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==============================>                       (66 + 49) / 115][Stage 86:=====================================>                (80 + 35) / 115][Stage 86:========================================>             (87 + 28) / 115][Stage 86:==============================================>      (101 + 14) / 115][Stage 86:===================================================>  (109 + 6) / 115]                                                                                [Stage 87:================================>                     (70 + 46) / 116][Stage 87:========================================>             (86 + 30) / 116][Stage 87:============================================>         (95 + 21) / 116][Stage 87:===============================================>     (104 + 12) / 116][Stage 87:================================================>    (106 + 10) / 116][Stage 87:==================================================>   (108 + 8) / 116][Stage 87:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.570712426 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=226 AND partitionZIndex<=229,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426734337 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (60 + 60) / 120][Stage 88:===============================>                      (70 + 50) / 120][Stage 88:=====================================>                (83 + 37) / 120][Stage 88:================================================>    (109 + 11) / 120]                                                                                [Stage 89:===========================>                          (61 + 60) / 121][Stage 89:=================================>                    (76 + 45) / 121][Stage 89:============================================>         (99 + 22) / 121][Stage 89:===================================================>  (115 + 6) / 121][Stage 89:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.46171149 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=140", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=137 AND partitionZIndex<=140,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420827473 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (60 + 60) / 120][Stage 90:============================>                         (64 + 56) / 120][Stage 90:====================================>                 (80 + 40) / 120][Stage 90:============================================>         (98 + 22) / 120][Stage 90:=====================================================>(119 + 1) / 120]                                                                                [Stage 91:===========================>                          (62 + 59) / 121][Stage 91:================================>                     (72 + 49) / 121][Stage 91:===============================================>     (108 + 13) / 121]                                                                                Time elapsed: 3.051446721 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=243", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=243,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429946979 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:==========================>                           (60 + 61) / 121][Stage 92:=============================>                        (67 + 54) / 121][Stage 92:====================================>                 (81 + 40) / 121][Stage 92:==============================================>      (106 + 15) / 121][Stage 92:=====================================================>(119 + 2) / 121][Stage 92:=====================================================>(120 + 1) / 121]                                                                                [Stage 93:===========================>                          (61 + 61) / 122][Stage 93:=============================>                        (66 + 56) / 122][Stage 93:===================================>                  (81 + 41) / 122][Stage 93:==============================================>      (107 + 15) / 122][Stage 93:===================================================>  (117 + 5) / 122][Stage 93:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.706615382 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=126", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=126,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375824584 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:================================>                     (72 + 46) / 118][Stage 94:==================================>                   (75 + 43) / 118][Stage 94:=======================================>              (87 + 31) / 118][Stage 94:=============================================>       (101 + 17) / 118][Stage 94:===================================================>  (113 + 5) / 118]                                                                                [Stage 95:=================================>                    (74 + 45) / 119][Stage 95:====================================>                 (80 + 39) / 119][Stage 95:============================================>         (97 + 22) / 119][Stage 95:===================================================>  (113 + 6) / 119][Stage 95:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.564838648 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=97 AND partitionZIndex<=100,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424176574 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=======================================>              (85 + 30) / 115][Stage 96:===========================================>          (92 + 23) / 115][Stage 96:=================================================>    (106 + 9) / 115][Stage 96:=====================================================>(114 + 1) / 115]                                                                                [Stage 97:========================================>             (86 + 30) / 116][Stage 97:=============================================>        (98 + 18) / 116][Stage 97:==================================================>   (109 + 7) / 116][Stage 97:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.877939121 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=157", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=157,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421407072 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:==========================>                           (60 + 61) / 121][Stage 98:=================================>                    (74 + 47) / 121][Stage 98:======================================>               (87 + 34) / 121][Stage 98:================================================>    (110 + 11) / 121][Stage 98:====================================================> (118 + 3) / 121][Stage 98:=====================================================>(119 + 2) / 121][Stage 98:=====================================================>(120 + 1) / 121]                                                                                [Stage 99:===========================>                          (61 + 61) / 122][Stage 99:============================>                         (64 + 58) / 122][Stage 99:===================================>                  (80 + 42) / 122][Stage 99:=============================================>       (104 + 18) / 122][Stage 99:====================================================> (118 + 4) / 122][Stage 99:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.881756467 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=218", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=215 AND partitionZIndex<=218,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376052442 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (72 + 46) / 118][Stage 100:===================================>                 (78 + 40) / 118][Stage 100:========================================>            (91 + 27) / 118][Stage 100:==================================================>  (112 + 6) / 118]                                                                                [Stage 101:================================>                    (74 + 45) / 119][Stage 101:====================================>                (81 + 38) / 119][Stage 101:==========================================>          (96 + 23) / 119][Stage 101:===============================================>    (109 + 10) / 119][Stage 101:====================================================>(117 + 2) / 119][Stage 101:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.450999866 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=131", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=128 AND partitionZIndex<=131,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418388269 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 61) / 121][Stage 102:============================>                        (66 + 55) / 121][Stage 102:===================================>                 (82 + 39) / 121][Stage 102:============================================>       (103 + 18) / 121][Stage 102:====================================================>(119 + 2) / 121]                                                                                [Stage 103:==========================>                          (61 + 61) / 122][Stage 103:===========================>                         (64 + 58) / 122][Stage 103:===============================>                     (73 + 49) / 122][Stage 103:=======================================>             (92 + 30) / 122][Stage 103:=============================================>      (107 + 15) / 122][Stage 103:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.562554075 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=114", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=114,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391491012 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:================================>                    (72 + 46) / 118][Stage 104:===================================>                 (78 + 40) / 118][Stage 104:====================================>                (81 + 37) / 118][Stage 104:===========================================>         (97 + 21) / 118][Stage 104:==================================================>  (113 + 5) / 118]                                                                                [Stage 105:================================>                    (73 + 46) / 119][Stage 105:=====================================>               (84 + 35) / 119][Stage 105:========================================>            (91 + 28) / 119][Stage 105:============================================>       (102 + 17) / 119][Stage 105:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.401766509 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=204", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=204,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434319479 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:===========================>                         (62 + 59) / 121][Stage 106:==================================>                  (78 + 43) / 121][Stage 106:=============================================>      (107 + 14) / 121][Stage 106:====================================================>(120 + 1) / 121]                                                                                [Stage 107:==========================>                          (61 + 61) / 122][Stage 107:============================>                        (66 + 56) / 122][Stage 107:==================================>                  (80 + 42) / 122][Stage 107:==========================================>         (100 + 22) / 122][Stage 107:=================================================>   (115 + 7) / 122][Stage 107:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.637375238 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=44,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413617146 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (61 + 59) / 120][Stage 108:===============================>                     (71 + 49) / 120][Stage 108:==========================================>          (96 + 24) / 120][Stage 108:==================================================>  (114 + 6) / 120]                                                                                [Stage 109:=============================>                       (67 + 54) / 121][Stage 109:===================================>                 (81 + 40) / 121][Stage 109:=============================================>      (105 + 16) / 121][Stage 109:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.185714065 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=61", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=58 AND partitionZIndex<=61,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412975105 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (60 + 61) / 121][Stage 110:=============================>                       (67 + 54) / 121][Stage 110:===================================>                 (80 + 41) / 121][Stage 110:===========================================>        (101 + 20) / 121][Stage 110:====================================================>(119 + 2) / 121]                                                                                [Stage 111:==========================>                          (61 + 61) / 122][Stage 111:=============================>                       (68 + 54) / 122][Stage 111:=================================>                   (78 + 44) / 122][Stage 111:===========================================>        (101 + 21) / 122][Stage 111:===================================================> (119 + 3) / 122][Stage 111:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.598313507 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=70", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=70,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37449638 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:=================================>                   (73 + 42) / 115][Stage 112:========================================>            (88 + 27) / 115][Stage 112:==============================================>     (103 + 12) / 115]                                                                                [Stage 113:================================>                    (72 + 44) / 116][Stage 113:========================================>            (88 + 28) / 116][Stage 113:============================================>        (97 + 19) / 116][Stage 113:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.745278058 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=242", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=242,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35933975 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:================================>                    (72 + 46) / 118][Stage 114:==================================>                  (77 + 41) / 118][Stage 114:=======================================>             (87 + 31) / 118][Stage 114:==========================================>          (95 + 23) / 118][Stage 114:==================================================>  (112 + 6) / 118]                                                                                [Stage 115:================================>                    (73 + 46) / 119][Stage 115:=================================>                   (75 + 44) / 119][Stage 115:====================================>                (82 + 37) / 119][Stage 115:==========================================>          (96 + 23) / 119][Stage 115:=================================================>   (111 + 8) / 119][Stage 115:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.619295335 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=115", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=112 AND partitionZIndex<=115,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373262979 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==============================>                      (66 + 49) / 115][Stage 116:=====================================>               (81 + 34) / 115][Stage 116:===========================================>         (94 + 21) / 115][Stage 116:=================================================>   (108 + 7) / 115]                                                                                [Stage 117:==================================>                  (76 + 40) / 116][Stage 117:==========================================>          (94 + 22) / 116][Stage 117:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.587303313 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=193,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336865795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:=======================================>             (86 + 29) / 115][Stage 118:============================================>        (96 + 19) / 115][Stage 118:================================================>    (106 + 9) / 115][Stage 118:====================================================>(113 + 2) / 115]                                                                                [Stage 119:======================================>              (84 + 32) / 116][Stage 119:========================================>            (89 + 27) / 116][Stage 119:===============================================>    (105 + 11) / 116][Stage 119:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.736439386 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=191", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=191,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381349883 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:================================>                    (71 + 44) / 115][Stage 120:==========================================>          (93 + 22) / 115][Stage 120:===============================================>    (105 + 10) / 115][Stage 120:==================================================>  (109 + 6) / 115][Stage 120:====================================================>(114 + 1) / 115]                                                                                [Stage 121:================================>                    (72 + 44) / 116][Stage 121:=======================================>             (86 + 30) / 116][Stage 121:============================================>        (98 + 18) / 116][Stage 121:==================================================>  (111 + 5) / 116][Stage 121:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.224423816 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=147", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=144 AND partitionZIndex<=147,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335250514 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:====================================>                (80 + 35) / 115][Stage 122:=======================================>             (86 + 29) / 115][Stage 122:=============================================>      (100 + 15) / 115][Stage 122:==================================================>  (109 + 6) / 115]                                                                                [Stage 123:=====================================>               (82 + 34) / 116][Stage 123:=============================================>       (99 + 17) / 116][Stage 123:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.618995068 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=14,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.342157377 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:====================================>                (80 + 35) / 115][Stage 124:========================================>            (87 + 28) / 115][Stage 124:=============================================>      (101 + 14) / 115][Stage 124:==================================================>  (109 + 6) / 115][Stage 124:====================================================>(114 + 1) / 115]                                                                                [Stage 125:=====================================>               (82 + 34) / 116][Stage 125:=======================================>             (87 + 29) / 116][Stage 125:=============================================>       (99 + 17) / 116][Stage 125:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 5.170938909 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=206,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.481087906 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 60) / 120][Stage 126:=============================>                       (66 + 54) / 120][Stage 126:===================================>                 (81 + 39) / 120][Stage 126:=========================================>           (95 + 25) / 120][Stage 126:==================================================>  (114 + 6) / 120]                                                                                [Stage 127:==========================>                          (61 + 60) / 121][Stage 127:================================>                    (75 + 46) / 121][Stage 127:======================================>              (87 + 34) / 121][Stage 127:=============================================>      (107 + 14) / 121][Stage 127:===================================================> (117 + 4) / 121][Stage 127:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.893210413 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=62", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=62,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381695582 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:================================>                    (71 + 44) / 115][Stage 128:========================================>            (87 + 28) / 115][Stage 128:=============================================>       (99 + 16) / 115][Stage 128:===================================================> (111 + 4) / 115]                                                                                [Stage 129:================================>                    (72 + 44) / 116][Stage 129:=========================================>           (91 + 25) / 116][Stage 129:=============================================>      (101 + 15) / 116][Stage 129:=================================================>   (108 + 8) / 116][Stage 129:====================================================>(114 + 2) / 116][Stage 129:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.957673625 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=196 AND partitionZIndex<=199,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403911976 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 60) / 120][Stage 130:============================>                        (64 + 56) / 120][Stage 130:==================================>                  (79 + 41) / 120][Stage 130:===========================================>        (100 + 20) / 120][Stage 130:====================================================>(118 + 2) / 120]                                                                                [Stage 131:==========================>                          (61 + 60) / 121][Stage 131:=============================>                       (68 + 53) / 121][Stage 131:==================================>                  (79 + 42) / 121][Stage 131:==========================================>          (96 + 25) / 121][Stage 131:==================================================>  (115 + 6) / 121]                                                                                Time elapsed: 3.365782532 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=25", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=22 AND partitionZIndex<=25,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350752302 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:=====================================>               (79 + 34) / 113][Stage 132:===========================================>         (92 + 21) / 113][Stage 132:==============================================>     (100 + 13) / 113][Stage 132:====================================================>(112 + 1) / 113]                                                                                [Stage 133:===================================>                 (76 + 38) / 114][Stage 133:=======================================>             (86 + 28) / 114][Stage 133:==============================================>      (99 + 15) / 114][Stage 133:=================================================>   (107 + 7) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.710374172 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=244 AND partitionZIndex<=247,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36373391 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:================================>                    (72 + 46) / 118][Stage 134:==================================>                  (77 + 41) / 118][Stage 134:=====================================>               (83 + 35) / 118][Stage 134:============================================>        (98 + 20) / 118][Stage 134:===================================================> (114 + 4) / 118][Stage 134:====================================================>(117 + 1) / 118]                                                                                [Stage 135:================================>                    (73 + 46) / 119][Stage 135:================================>                    (74 + 45) / 119][Stage 135:====================================>                (83 + 36) / 119][Stage 135:==========================================>          (95 + 24) / 119][Stage 135:=================================================>   (112 + 7) / 119][Stage 135:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.543447338 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=223", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=220 AND partitionZIndex<=223,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391628748 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (60 + 60) / 120][Stage 136:============================>                        (65 + 55) / 120][Stage 136:==================================>                  (78 + 42) / 120][Stage 136:========================================>            (92 + 28) / 120][Stage 136:==================================================>  (114 + 6) / 120]                                                                                [Stage 137:============================>                        (65 + 56) / 121][Stage 137:=================================>                   (76 + 45) / 121][Stage 137:=========================================>           (94 + 27) / 121][Stage 137:===============================================>    (110 + 11) / 121][Stage 137:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.339758247 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=50", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=50,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379845219 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (59 + 54) / 113][Stage 138:===============================>                     (68 + 45) / 113][Stage 138:========================================>            (86 + 27) / 113][Stage 138:==============================================>     (102 + 11) / 113][Stage 138:====================================================>(111 + 2) / 113]                                                                                [Stage 139:===========================>                         (60 + 54) / 114][Stage 139:==================================>                  (75 + 39) / 114][Stage 139:=============================================>       (98 + 16) / 114][Stage 139:===================================================> (110 + 4) / 114][Stage 139:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.540715051 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=207", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=207,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347611239 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:=====================================>               (81 + 34) / 115][Stage 140:========================================>            (88 + 27) / 115][Stage 140:==============================================>     (102 + 13) / 115][Stage 140:===================================================> (112 + 3) / 115]                                                                                [Stage 141:=======================================>             (87 + 29) / 116][Stage 141:=============================================>       (99 + 17) / 116][Stage 141:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.71832481 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=111,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39814217 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (60 + 60) / 120][Stage 142:=============================>                       (66 + 54) / 120][Stage 142:=====================================>               (84 + 36) / 120][Stage 142:=============================================>      (106 + 14) / 120][Stage 142:====================================================>(118 + 2) / 120]                                                                                [Stage 143:==========================>                          (61 + 60) / 121][Stage 143:============================>                        (65 + 56) / 121][Stage 143:===================================>                 (80 + 41) / 121][Stage 143:============================================>       (104 + 17) / 121][Stage 143:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.257653288 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=75", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=75,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336967191 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:=====================================>               (82 + 33) / 115][Stage 144:===========================================>         (94 + 21) / 115][Stage 144:================================================>    (106 + 9) / 115][Stage 144:===================================================> (112 + 3) / 115]                                                                                [Stage 145:======================================>              (84 + 32) / 116][Stage 145:===========================================>         (95 + 21) / 116][Stage 145:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.665942894 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=136,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399664291 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 60) / 120][Stage 146:=============================>                       (66 + 54) / 120][Stage 146:==================================>                  (78 + 42) / 120][Stage 146:===============================================>    (110 + 10) / 120][Stage 146:====================================================>(119 + 1) / 120]                                                                                [Stage 147:==========================>                          (61 + 60) / 121][Stage 147:==============================>                      (70 + 51) / 121][Stage 147:========================================>            (93 + 28) / 121][Stage 147:===================================================> (117 + 4) / 121][Stage 147:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.233327808 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=7", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=4 AND partitionZIndex<=7,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376155856 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:=============================>                       (65 + 50) / 115][Stage 148:====================================>                (79 + 36) / 115][Stage 148:=========================================>           (89 + 26) / 115][Stage 148:===============================================>    (104 + 11) / 115][Stage 148:====================================================>(114 + 1) / 115]                                                                                [Stage 149:===============================>                     (68 + 48) / 116][Stage 149:=====================================>               (83 + 33) / 116][Stage 149:=============================================>      (102 + 14) / 116][Stage 149:=================================================>   (109 + 7) / 116][Stage 149:====================================================>(114 + 2) / 116][Stage 149:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.796118118 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=225", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=225,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355530483 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===================================>                 (76 + 37) / 113][Stage 150:==========================================>          (91 + 22) / 113][Stage 150:==============================================>     (101 + 12) / 113][Stage 150:==================================================>  (107 + 6) / 113][Stage 150:====================================================>(112 + 1) / 113]                                                                                [Stage 151:==================================>                  (74 + 40) / 114][Stage 151:=======================================>             (84 + 30) / 114][Stage 151:============================================>        (96 + 18) / 114][Stage 151:=================================================>   (107 + 7) / 114][Stage 151:====================================================>(112 + 2) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.208845028 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=194", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=194,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357339363 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:======================================>              (82 + 31) / 113][Stage 152:===========================================>         (92 + 21) / 113][Stage 152:================================================>    (104 + 9) / 113][Stage 152:===================================================> (110 + 3) / 113][Stage 152:====================================================>(112 + 1) / 113]                                                                                [Stage 153:=================================>                   (73 + 41) / 114][Stage 153:======================================>              (82 + 32) / 114][Stage 153:=============================================>       (97 + 17) / 114][Stage 153:================================================>    (105 + 9) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.172904763 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=168", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=168,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380444958 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:===========================>                         (59 + 54) / 113][Stage 154:===============================>                     (67 + 46) / 113][Stage 154:========================================>            (87 + 26) / 113][Stage 154:=================================================>   (105 + 8) / 113]                                                                                [Stage 155:============================>                        (61 + 53) / 114][Stage 155:==============================>                      (66 + 48) / 114][Stage 155:=========================================>           (89 + 25) / 114][Stage 155:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.173239901 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=109", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=109,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379397217 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:================================>                    (72 + 46) / 118][Stage 156:=================================>                   (75 + 43) / 118][Stage 156:======================================>              (86 + 32) / 118][Stage 156:==============================================>     (105 + 13) / 118]                                                                                [Stage 157:================================>                    (73 + 46) / 119][Stage 157:=================================>                   (75 + 44) / 119][Stage 157:=========================================>           (93 + 26) / 119][Stage 157:=================================================>   (111 + 8) / 119][Stage 157:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.328466115 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=21", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=21,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349065978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===================================>                 (76 + 37) / 113][Stage 158:==========================================>          (91 + 22) / 113][Stage 158:==============================================>     (100 + 13) / 113][Stage 158:===================================================> (109 + 4) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:====================================>                (78 + 36) / 114][Stage 159:==========================================>          (91 + 23) / 114][Stage 159:=============================================>      (100 + 14) / 114][Stage 159:=================================================>   (106 + 8) / 114][Stage 159:===================================================> (111 + 3) / 114][Stage 159:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.15932885 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=136 AND partitionZIndex<=139,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379546376 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (58 + 55) / 113][Stage 160:=============================>                       (63 + 50) / 113][Stage 160:=======================================>             (85 + 28) / 113][Stage 160:================================================>    (104 + 9) / 113]                                                                                [Stage 161:===========================>                         (59 + 55) / 114][Stage 161:================================>                    (70 + 44) / 114][Stage 161:=======================================>             (84 + 30) / 114][Stage 161:================================================>    (105 + 9) / 114][Stage 161:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.181961659 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=11", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=11,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384333139 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:================================>                    (71 + 44) / 115][Stage 162:==========================================>          (93 + 22) / 115][Stage 162:=================================================>   (108 + 7) / 115][Stage 162:===================================================> (112 + 3) / 115][Stage 162:====================================================>(114 + 1) / 115]                                                                                [Stage 163:================================>                    (71 + 45) / 116][Stage 163:====================================>                (79 + 37) / 116][Stage 163:==========================================>          (92 + 24) / 116][Stage 163:===============================================>    (106 + 10) / 116][Stage 163:==================================================>  (110 + 6) / 116][Stage 163:===================================================> (113 + 3) / 116][Stage 163:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 6.012235994 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=138", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=138,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390929803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:==========================>                          (60 + 60) / 120][Stage 164:============================>                        (64 + 56) / 120][Stage 164:==================================>                  (78 + 42) / 120][Stage 164:=========================================>           (95 + 25) / 120][Stage 164:====================================================>(119 + 1) / 120]                                                                                [Stage 165:==========================>                          (61 + 60) / 121][Stage 165:=================================>                   (77 + 44) / 121][Stage 165:===========================================>        (101 + 20) / 121][Stage 165:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.597947951 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=170", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=170,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397282166 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (58 + 55) / 113][Stage 166:================================>                    (69 + 44) / 113][Stage 166:=========================================>           (89 + 24) / 113][Stage 166:==============================================>     (100 + 13) / 113][Stage 166:===================================================> (110 + 3) / 113]                                                                                [Stage 167:===========================>                         (59 + 55) / 114][Stage 167:===============================>                     (68 + 46) / 114][Stage 167:========================================>            (88 + 26) / 114][Stage 167:=============================================>      (100 + 14) / 114][Stage 167:==================================================>  (108 + 6) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.598395569 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=41", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=41,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393908004 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (58 + 55) / 113][Stage 168:==============================>                      (64 + 49) / 113][Stage 168:=====================================>               (79 + 34) / 113][Stage 168:===========================================>         (93 + 20) / 113][Stage 168:===================================================> (110 + 3) / 113]                                                                                [Stage 169:=============================>                       (63 + 51) / 114][Stage 169:====================================>                (78 + 36) / 114][Stage 169:==========================================>          (92 + 22) / 114][Stage 169:==================================================>  (108 + 6) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.383771073 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=89", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=89,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35629994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:=================================>                   (72 + 41) / 113][Stage 170:=======================================>             (85 + 28) / 113][Stage 170:===========================================>         (92 + 21) / 113][Stage 170:=================================================>   (106 + 7) / 113]                                                                                [Stage 171:=====================================>               (80 + 34) / 114][Stage 171:===========================================>         (93 + 21) / 114][Stage 171:==============================================>      (99 + 15) / 114][Stage 171:===================================================> (111 + 3) / 114][Stage 171:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.905050235 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=52", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=49 AND partitionZIndex<=52,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40465169 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==========================>                          (60 + 60) / 120][Stage 172:===========================>                         (63 + 57) / 120][Stage 172:==================================>                  (77 + 43) / 120][Stage 172:=============================================>      (105 + 15) / 120][Stage 172:==================================================>  (115 + 5) / 120]                                                                                [Stage 173:==========================>                          (61 + 60) / 121][Stage 173:=============================>                       (68 + 53) / 121][Stage 173:=====================================>               (86 + 35) / 121][Stage 173:=================================================>   (112 + 9) / 121][Stage 173:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.492953336 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=164", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=161 AND partitionZIndex<=164,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399424606 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (60 + 61) / 121][Stage 174:===========================>                         (62 + 59) / 121][Stage 174:================================>                    (74 + 47) / 121][Stage 174:===========================================>         (99 + 22) / 121][Stage 174:===================================================> (117 + 4) / 121]                                                                                [Stage 175:==========================>                          (61 + 61) / 122][Stage 175:==============================>                      (70 + 52) / 122][Stage 175:====================================>                (84 + 38) / 122][Stage 175:===============================================>    (112 + 10) / 122][Stage 175:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.484209808 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=221", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=221,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.330491163 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=======================================>             (85 + 30) / 115][Stage 176:==========================================>          (93 + 22) / 115][Stage 176:==================================================>  (109 + 6) / 115]                                                                                [Stage 177:======================================>              (84 + 32) / 116][Stage 177:============================================>        (97 + 19) / 116][Stage 177:=================================================>   (108 + 8) / 116][Stage 177:===================================================> (113 + 3) / 116][Stage 177:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.802744606 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=90", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=90,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.333216745 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:=====================================>               (81 + 34) / 115][Stage 178:=========================================>           (90 + 25) / 115][Stage 178:=================================================>   (107 + 8) / 115][Stage 178:====================================================>(113 + 2) / 115]                                                                                [Stage 179:======================================>              (85 + 31) / 116][Stage 179:============================================>        (97 + 19) / 116][Stage 179:===============================================>    (105 + 11) / 116][Stage 179:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.932547684 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=118", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=118,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394335082 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (58 + 55) / 113][Stage 180:==============================>                      (64 + 49) / 113][Stage 180:=====================================>               (80 + 33) / 113][Stage 180:==============================================>     (101 + 12) / 113][Stage 180:===================================================> (109 + 4) / 113]                                                                                [Stage 181:==============================>                      (65 + 49) / 114][Stage 181:====================================>                (78 + 36) / 114][Stage 181:============================================>        (96 + 18) / 114][Stage 181:=================================================>   (107 + 7) / 114][Stage 181:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.497190309 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=185", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=185,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435933268 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:============================>                        (60 + 53) / 113][Stage 182:=================================>                   (72 + 41) / 113][Stage 182:========================================>            (86 + 27) / 113][Stage 182:==================================================>  (108 + 5) / 113]                                                                                [Stage 183:=============================>                       (63 + 51) / 114][Stage 183:====================================>                (79 + 35) / 114][Stage 183:============================================>        (95 + 19) / 114][Stage 183:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.183013873 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=83", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=83,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39228432 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==============================>                      (67 + 48) / 115][Stage 184:======================================>              (84 + 31) / 115][Stage 184:=============================================>       (98 + 17) / 115][Stage 184:===================================================> (112 + 3) / 115][Stage 184:====================================================>(114 + 1) / 115]                                                                                [Stage 185:=================================>                   (73 + 43) / 116][Stage 185:=======================================>             (86 + 30) / 116][Stage 185:==============================================>     (103 + 13) / 116][Stage 185:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.762754974 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=108", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=105 AND partitionZIndex<=108,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349096754 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==================================>                  (74 + 39) / 113][Stage 186:========================================>            (86 + 27) / 113][Stage 186:============================================>        (95 + 18) / 113][Stage 186:==================================================>  (107 + 6) / 113][Stage 186:====================================================>(112 + 1) / 113]                                                                                [Stage 187:==================================>                  (75 + 39) / 114][Stage 187:=======================================>             (85 + 29) / 114][Stage 187:===========================================>         (94 + 20) / 114][Stage 187:=================================================>   (107 + 7) / 114][Stage 187:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.091063733 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=33", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=33,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345681912 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:=====================================>               (79 + 34) / 113][Stage 188:=========================================>           (88 + 25) / 113][Stage 188:=============================================>       (96 + 17) / 113][Stage 188:===============================================>    (103 + 10) / 113][Stage 188:====================================================>(111 + 2) / 113]                                                                                [Stage 189:=====================================>               (81 + 33) / 114][Stage 189:=========================================>           (89 + 25) / 114][Stage 189:===========================================>         (93 + 21) / 114][Stage 189:==============================================>     (103 + 11) / 114][Stage 189:==================================================>  (108 + 6) / 114][Stage 189:===================================================> (111 + 3) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.75713557 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=47", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=44 AND partitionZIndex<=47,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40948937 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:==========================>                          (61 + 59) / 120][Stage 190:============================>                        (65 + 55) / 120][Stage 190:========================================>            (91 + 29) / 120][Stage 190:=================================================>   (112 + 8) / 120][Stage 190:====================================================>(118 + 2) / 120]                                                                                [Stage 191:==========================>                          (61 + 60) / 121][Stage 191:=============================>                       (68 + 53) / 121][Stage 191:=======================================>             (90 + 31) / 121][Stage 191:==============================================>     (109 + 12) / 121][Stage 191:===================================================> (118 + 3) / 121][Stage 191:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.499893778 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=246", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=243 AND partitionZIndex<=246,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377801351 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===================================>                 (77 + 38) / 115][Stage 192:===========================================>         (95 + 20) / 115][Stage 192:==============================================>     (103 + 12) / 115][Stage 192:====================================================>(114 + 1) / 115]                                                                                [Stage 193:=================================>                   (73 + 43) / 116][Stage 193:========================================>            (89 + 27) / 116][Stage 193:==============================================>     (104 + 12) / 116][Stage 193:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.041943855 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=162", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=162,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397956882 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (61 + 59) / 120][Stage 194:=============================>                       (67 + 53) / 120][Stage 194:========================================>            (91 + 29) / 120][Stage 194:=================================================>   (111 + 9) / 120]                                                                                [Stage 195:==========================>                          (61 + 60) / 121][Stage 195:============================>                        (66 + 55) / 121][Stage 195:======================================>              (88 + 33) / 121][Stage 195:==============================================>     (109 + 12) / 121]                                                                                Time elapsed: 3.165144569 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=117", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=114 AND partitionZIndex<=117,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363621622 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:===================================>                 (76 + 39) / 115][Stage 196:==========================================>          (92 + 23) / 115][Stage 196:===============================================>    (105 + 10) / 115][Stage 196:====================================================>(113 + 2) / 115][Stage 196:====================================================>(114 + 1) / 115]                                                                                [Stage 197:==============================>                      (67 + 49) / 116][Stage 197:====================================>                (79 + 37) / 116][Stage 197:============================================>       (100 + 16) / 116][Stage 197:==================================================>  (110 + 6) / 116][Stage 197:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.085741638 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=205", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=202 AND partitionZIndex<=205,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380755392 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:====================================>                (78 + 35) / 113][Stage 198:==========================================>          (91 + 22) / 113][Stage 198:================================================>    (104 + 9) / 113][Stage 198:===================================================> (109 + 4) / 113]                                                                                [Stage 199:====================================>                (78 + 36) / 114][Stage 199:============================================>        (96 + 18) / 114][Stage 199:=============================================>      (100 + 14) / 114][Stage 199:===================================================> (111 + 3) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.030632043 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187", 4))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=187,4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39421836 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (61 + 60) / 121][Stage 200:===============================>                     (71 + 50) / 121][Stage 200:=====================================>               (85 + 36) / 121][Stage 200:===============================================>    (111 + 10) / 121][Stage 200:====================================================>(120 + 1) / 121]                                                                                [Stage 201:===========================>                         (64 + 58) / 122][Stage 201:==================================>                  (80 + 42) / 122][Stage 201:===========================================>         (99 + 23) / 122][Stage 201:==================================================>  (116 + 6) / 122][Stage 201:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.728995005 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m41.062s
user	12m0.568s
sys	0m57.472s
