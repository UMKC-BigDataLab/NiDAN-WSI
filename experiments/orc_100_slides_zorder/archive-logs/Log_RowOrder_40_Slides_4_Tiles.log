Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 20:30:02 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 20:30:16 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 20:30:16 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 20:30:16 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 20:30:19 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 20:30:29 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524203018-0591).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.337514772 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:===================>                                   (41 + 74) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:=====================================>                 (78 + 37) / 115][Stage 0:=============================================>         (95 + 20) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:==============================>                        (64 + 52) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:=======================================>               (84 + 32) / 116][Stage 1:============================================>          (93 + 23) / 116][Stage 1:================================================>     (104 + 12) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:===================================================>   (109 + 7) / 116][Stage 1:====================================================>  (111 + 5) / 116]                                                                                Time elapsed: 12.595468251 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR   partitionIndex = 188  OR  partitionIndex = 189 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.660531926 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=======================>                               (50 + 68) / 118][Stage 2:=================================>                     (71 + 47) / 118][Stage 2:=================================>                     (72 + 46) / 118][Stage 2:==================================>                    (75 + 43) / 118][Stage 2:====================================>                  (78 + 40) / 118][Stage 2:=========================================>             (89 + 29) / 118][Stage 2:==========================================>            (92 + 26) / 118][Stage 2:==============================================>       (101 + 17) / 118][Stage 2:================================================>     (105 + 13) / 118][Stage 2:====================================================>  (113 + 5) / 118][Stage 2:======================================================>(116 + 2) / 118]                                                                                [Stage 3:=================================>                     (72 + 47) / 119][Stage 3:=================================>                     (73 + 46) / 119][Stage 3:==================================>                    (74 + 45) / 119][Stage 3:===================================>                   (76 + 43) / 119][Stage 3:======================================>                (83 + 36) / 119][Stage 3:===========================================>           (95 + 24) / 119][Stage 3:================================================>     (106 + 13) / 119][Stage 3:====================================================>  (114 + 5) / 119][Stage 3:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 5.421966892 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR   partitionIndex = 234  OR  partitionIndex = 235 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 234  OR  partitionIndex = 235 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.651926888 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:==================================>                    (70 + 43) / 113][Stage 4:====================================>                  (74 + 39) / 113][Stage 4:======================================>                (79 + 34) / 113][Stage 4:========================================>              (83 + 30) / 113][Stage 4:=============================================>         (93 + 20) / 113][Stage 4:==============================================>        (95 + 18) / 113][Stage 4:=================================================>    (103 + 10) / 113][Stage 4:=====================================================> (109 + 4) / 113][Stage 4:=====================================================> (110 + 3) / 113][Stage 4:======================================================>(111 + 2) / 113]                                                                                [Stage 5:====================================>                  (76 + 38) / 114][Stage 5:======================================>                (80 + 34) / 114][Stage 5:========================================>              (84 + 30) / 114][Stage 5:==========================================>            (88 + 26) / 114][Stage 5:=============================================>         (94 + 20) / 114][Stage 5:================================================>     (103 + 11) / 114][Stage 5:=====================================================> (110 + 4) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.209651945 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  pa rtitionIndex = 81  OR  partitionIndex = 82 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.826801365 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=========================>                             (56 + 64) / 120][Stage 6:===========================>                           (59 + 61) / 120][Stage 6:=============================>                         (64 + 56) / 120][Stage 6:==================================>                    (75 + 45) / 120][Stage 6:======================================>                (84 + 36) / 120][Stage 6:==========================================>            (93 + 27) / 120][Stage 6:===================================================>   (113 + 7) / 120][Stage 6:======================================================>(118 + 2) / 120]                                                                                [Stage 7:===========================>                           (61 + 60) / 121][Stage 7:============================>                          (62 + 59) / 121][Stage 7:================================>                      (72 + 49) / 121][Stage 7:======================================>                (84 + 37) / 121][Stage 7:=============================================>        (101 + 20) / 121][Stage 7:=====================================================> (118 + 3) / 121][Stage 7:======================================================>(119 + 2) / 121][Stage 7:======================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.744374894 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185  OR  partitionIndex = 186  OR   partitionIndex = 199  OR  partitionIndex = 200 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 199  OR  partitionIndex = 200 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.543062036 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:=====================================>                 (79 + 36) / 115][Stage 8:========================================>              (84 + 31) / 115][Stage 8:============================================>          (92 + 23) / 115][Stage 8:===============================================>       (99 + 16) / 115][Stage 8:==================================================>    (106 + 9) / 115][Stage 8:=====================================================> (111 + 4) / 115]                                                                                [Stage 9:=======================================>               (83 + 33) / 116][Stage 9:============================================>          (94 + 22) / 116][Stage 9:==============================================>       (100 + 16) / 116][Stage 9:================================================>     (105 + 11) / 116][Stage 9:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.836590604 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR   partitionIndex = 180  OR  partitionIndex = 181 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.540042996 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=================================>                    (70 + 43) / 113][Stage 10:======================================>               (80 + 33) / 113][Stage 10:=========================================>            (87 + 26) / 113][Stage 10:==============================================>       (98 + 15) / 113][Stage 10:==================================================>   (106 + 7) / 113][Stage 10:===================================================>  (108 + 5) / 113][Stage 10:=====================================================>(112 + 1) / 113]                                                                                [Stage 11:===================================>                  (74 + 40) / 114][Stage 11:=======================================>              (84 + 30) / 114][Stage 11:==========================================>           (89 + 25) / 114][Stage 11:============================================>         (93 + 21) / 114][Stage 11:==============================================>       (99 + 15) / 114][Stage 11:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.983800475 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  part itionIndex = 16  OR  partitionIndex = 17 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 16  OR  partitionIndex = 17 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.642959608 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:=========================>                            (58 + 63) / 121][Stage 12:===========================>                          (62 + 59) / 121][Stage 12:==================================>                   (77 + 44) / 121][Stage 12:==========================================>           (96 + 25) / 121][Stage 12:=============================================>       (103 + 18) / 121][Stage 12:================================================>    (110 + 11) / 121][Stage 12:====================================================> (118 + 3) / 121]                                                                                [Stage 13:==========================>                           (59 + 63) / 122][Stage 13:==============================>                       (68 + 54) / 122][Stage 13:==================================>                   (79 + 43) / 122][Stage 13:===========================================>          (98 + 24) / 122][Stage 13:================================================>    (111 + 11) / 122][Stage 13:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 4.777493538 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  pa rtitionIndex = 80  OR  partitionIndex = 81 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 80  OR  partitionIndex = 81 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497313368 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:=====================================>                (79 + 36) / 115][Stage 14:======================================>               (82 + 33) / 115][Stage 14:==========================================>           (90 + 25) / 115][Stage 14:===========================================>          (93 + 22) / 115][Stage 14:==============================================>      (101 + 14) / 115][Stage 14:===================================================>  (109 + 6) / 115][Stage 14:===================================================>  (110 + 5) / 115][Stage 14:====================================================> (112 + 3) / 115]                                                                                [Stage 15:======================================>               (82 + 34) / 116][Stage 15:=========================================>            (90 + 26) / 116][Stage 15:=============================================>        (98 + 18) / 116][Stage 15:===================================================>  (110 + 6) / 116][Stage 15:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.850430819 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR   partitionIndex = 235  OR  partitionIndex = 236 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.501096873 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:================================>                     (69 + 44) / 113][Stage 16:=======================================>              (82 + 31) / 113][Stage 16:===========================================>          (91 + 22) / 113][Stage 16:==============================================>      (100 + 13) / 113][Stage 16:====================================================> (109 + 4) / 113][Stage 16:=====================================================>(112 + 1) / 113]                                                                                [Stage 17:=====================================>                (79 + 35) / 114][Stage 17:========================================>             (86 + 28) / 114][Stage 17:==============================================>       (99 + 15) / 114][Stage 17:=================================================>    (105 + 9) / 114][Stage 17:====================================================> (110 + 4) / 114][Stage 17:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.837108389 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195  OR   partitionIndex = 208  OR  partitionIndex = 209 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 208  OR  partitionIndex = 209 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.564583661 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (60 + 60) / 120][Stage 18:=============================>                        (66 + 54) / 120][Stage 18:=======================================>              (88 + 32) / 120][Stage 18:==============================================>      (106 + 14) / 120][Stage 18:===================================================>  (114 + 6) / 120][Stage 18:====================================================> (116 + 4) / 120]                                                                                [Stage 19:===========================>                          (61 + 60) / 121][Stage 19:==============================>                       (69 + 52) / 121][Stage 19:==========================================>           (95 + 26) / 121][Stage 19:=================================================>    (112 + 9) / 121][Stage 19:====================================================> (117 + 4) / 121][Stage 19:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.994948972 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  pa rtitionIndex = 55  OR  partitionIndex = 56 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 55  OR  partitionIndex = 56 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.495920058 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:================================>                     (72 + 46) / 118][Stage 20:====================================>                 (80 + 38) / 118][Stage 20:===========================================>          (94 + 24) / 118][Stage 20:==================================================>   (110 + 8) / 118][Stage 20:=====================================================>(117 + 1) / 118]                                                                                [Stage 21:=================================>                    (73 + 46) / 119][Stage 21:==================================>                   (77 + 42) / 119][Stage 21:==========================================>           (94 + 25) / 119][Stage 21:===============================================>     (107 + 12) / 119][Stage 21:===================================================>  (113 + 6) / 119][Stage 21:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.63362268 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR   partitionIndex = 172  OR  partitionIndex = 180 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474688616 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:=================================>                    (70 + 43) / 113][Stage 22:======================================>               (80 + 33) / 113][Stage 22:===========================================>          (90 + 23) / 113][Stage 22:=============================================>        (96 + 17) / 113][Stage 22:===================================================>  (107 + 6) / 113][Stage 22:====================================================> (110 + 3) / 113]                                                                                [Stage 23:======================================>               (82 + 32) / 114][Stage 23:============================================>         (94 + 20) / 114][Stage 23:===============================================>     (102 + 12) / 114][Stage 23:===================================================>  (108 + 6) / 114][Stage 23:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.480959473 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  pa rtitionIndex = 84  OR  partitionIndex = 85 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 84  OR  partitionIndex = 85 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.528293856 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==========================>                           (60 + 61) / 121][Stage 24:================================>                     (72 + 49) / 121][Stage 24:==========================================>           (95 + 26) / 121][Stage 24:================================================>    (110 + 11) / 121][Stage 24:=====================================================>(119 + 2) / 121]                                                                                [Stage 25:=========================>                            (58 + 64) / 122][Stage 25:============================>                         (65 + 57) / 122][Stage 25:====================================>                 (83 + 39) / 122][Stage 25:=============================================>       (105 + 17) / 122][Stage 25:==================================================>   (114 + 8) / 122][Stage 25:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.686788859 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR   partitionIndex = 215  OR  partitionIndex = 229 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.528463937 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (60 + 60) / 120][Stage 26:============================>                         (64 + 56) / 120][Stage 26:==================================>                   (77 + 43) / 120][Stage 26:============================================>        (100 + 20) / 120][Stage 26:===================================================>  (115 + 5) / 120][Stage 26:=====================================================>(119 + 1) / 120]                                                                                [Stage 27:===========================>                          (61 + 60) / 121][Stage 27:=============================>                        (66 + 55) / 121][Stage 27:===================================>                  (80 + 41) / 121][Stage 27:===========================================>          (98 + 23) / 121][Stage 27:===============================================>     (108 + 13) / 121]                                                                                Time elapsed: 3.733602435 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  pa rtitionIndex = 34  OR  partitionIndex = 35 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429174929 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:======================================>               (81 + 34) / 115][Stage 28:==========================================>           (91 + 24) / 115][Stage 28:==============================================>      (100 + 15) / 115][Stage 28:===================================================>  (110 + 5) / 115][Stage 28:=====================================================>(114 + 1) / 115]                                                                                [Stage 29:=========================================>            (89 + 27) / 116][Stage 29:=============================================>       (100 + 16) / 116][Stage 29:===================================================>  (110 + 6) / 116][Stage 29:====================================================> (113 + 3) / 116][Stage 29:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.686713731 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR   partitionIndex = 165  OR  partitionIndex = 166 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.503779172 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (60 + 60) / 120][Stage 30:============================>                         (64 + 56) / 120][Stage 30:====================================>                 (81 + 39) / 120][Stage 30:===============================================>     (108 + 12) / 120]                                                                                [Stage 31:===========================>                          (61 + 60) / 121][Stage 31:=============================>                        (65 + 56) / 121][Stage 31:====================================>                 (82 + 39) / 121][Stage 31:===========================================>          (97 + 24) / 121][Stage 31:==================================================>   (114 + 7) / 121][Stage 31:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.77735701 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR   partitionIndex = 173  OR  partitionIndex = 174 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472000697 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:=============================>                        (61 + 52) / 113][Stage 32:================================>                     (68 + 45) / 113][Stage 32:============================================>         (94 + 19) / 113][Stage 32:===================================================>  (107 + 6) / 113]                                                                                [Stage 33:============================>                         (61 + 53) / 114][Stage 33:===================================>                  (74 + 40) / 114][Stage 33:==========================================>           (89 + 25) / 114][Stage 33:==================================================>   (106 + 8) / 114][Stage 33:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.338083673 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  pa rtitionIndex = 51  OR  partitionIndex = 52 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 51  OR  partitionIndex = 52 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.502766005 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:==========================>                           (60 + 61) / 121][Stage 34:===========================>                          (61 + 60) / 121][Stage 34:==================================>                   (77 + 44) / 121][Stage 34:=========================================>            (94 + 27) / 121][Stage 34:==================================================>   (114 + 7) / 121]                                                                                [Stage 35:===========================>                          (61 + 61) / 122][Stage 35:===============================>                      (71 + 51) / 122][Stage 35:=======================================>              (90 + 32) / 122][Stage 35:==============================================>      (107 + 15) / 122][Stage 35:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.588983983 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR   partitionIndex = 202  OR  partitionIndex = 214 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431376564 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:==================================>                   (72 + 41) / 113][Stage 36:=======================================>              (83 + 30) / 113][Stage 36:=============================================>        (95 + 18) / 113][Stage 36:=================================================>    (104 + 9) / 113][Stage 36:=====================================================>(111 + 2) / 113][Stage 36:=====================================================>(112 + 1) / 113]                                                                                [Stage 37:=========================================>            (87 + 27) / 114][Stage 37:============================================>         (94 + 20) / 114][Stage 37:==================================================>   (106 + 8) / 114][Stage 37:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.213333654 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR   partitionIndex = 211  OR  partitionIndex = 225 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452390086 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (71 + 47) / 118][Stage 38:==================================>                   (76 + 42) / 118][Stage 38:===========================================>          (96 + 22) / 118][Stage 38:==================================================>   (110 + 8) / 118][Stage 38:=====================================================>(116 + 2) / 118]                                                                                [Stage 39:=================================>                    (74 + 45) / 119][Stage 39:======================================>               (84 + 35) / 119][Stage 39:==============================================>      (104 + 15) / 119][Stage 39:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.303182299 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  pa rtitionIndex = 110  OR  partitionIndex = 111 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 110  OR  partitionIndex = 111 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456117711 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:===============================>                      (68 + 47) / 115][Stage 40:======================================>               (83 + 32) / 115][Stage 40:==============================================>      (100 + 15) / 115][Stage 40:==================================================>   (108 + 7) / 115][Stage 40:=====================================================>(113 + 2) / 115]                                                                                [Stage 41:===============================>                      (68 + 48) / 116][Stage 41:=====================================>                (81 + 35) / 116][Stage 41:===========================================>          (93 + 23) / 116][Stage 41:==================================================>   (109 + 7) / 116][Stage 41:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 3.064501333 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  pa rtitionIndex = 105  OR  partitionIndex = 106 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105  OR  partitionIndex = 106 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.467235246 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:===========================>                          (58 + 55) / 113][Stage 42:===============================>                      (65 + 48) / 113][Stage 42:========================================>             (84 + 29) / 113][Stage 42:==============================================>      (100 + 13) / 113]                                                                                [Stage 43:===========================>                          (59 + 55) / 114][Stage 43:==============================>                       (65 + 49) / 114][Stage 43:=====================================>                (80 + 34) / 114][Stage 43:===========================================>          (91 + 23) / 114][Stage 43:=================================================>    (105 + 9) / 114][Stage 43:====================================================> (110 + 4) / 114][Stage 43:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.700353094 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIndex = 85  OR  pa rtitionIndex = 86  OR  partitionIndex = 98 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448178217 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:================================>                     (72 + 46) / 118][Stage 44:==================================>                   (75 + 43) / 118][Stage 44:==========================================>           (93 + 25) / 118][Stage 44:===============================================>     (106 + 12) / 118][Stage 44:====================================================> (114 + 4) / 118]                                                                                [Stage 45:=================================>                    (73 + 46) / 119][Stage 45:====================================>                 (80 + 39) / 119][Stage 45:============================================>        (100 + 19) / 119][Stage 45:=================================================>    (110 + 9) / 119][Stage 45:=====================================================>(117 + 2) / 119][Stage 45:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.719544403 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 40  OR  pa rtitionIndex = 53  OR  partitionIndex = 54 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 53  OR  partitionIndex = 54 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.462342833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:==========================>                           (60 + 61) / 121][Stage 46:============================>                         (64 + 57) / 121][Stage 46:=====================================>                (84 + 37) / 121][Stage 46:==============================================>      (106 + 15) / 121][Stage 46:====================================================> (118 + 3) / 121]                                                                                [Stage 47:===========================>                          (63 + 59) / 122][Stage 47:=================================>                    (75 + 47) / 122][Stage 47:==========================================>           (95 + 27) / 122][Stage 47:==============================================>      (107 + 15) / 122][Stage 47:=====================================================>(120 + 2) / 122][Stage 47:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.82898254 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  pa rtitionIndex = 77  OR  partitionIndex = 78 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414740353 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:=======================================>              (83 + 30) / 113][Stage 48:============================================>         (93 + 20) / 113][Stage 48:===============================================>     (101 + 12) / 113][Stage 48:===================================================>  (108 + 5) / 113][Stage 48:=====================================================>(112 + 1) / 113]                                                                                [Stage 49:========================================>             (85 + 29) / 114][Stage 49:============================================>         (93 + 21) / 114][Stage 49:==============================================>      (100 + 14) / 114][Stage 49:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.618198902 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  pa rtitionIndex = 54  OR  partitionIndex = 55 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 54  OR  partitionIndex = 55 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.452525386 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (58 + 55) / 113][Stage 50:=============================>                        (61 + 52) / 113][Stage 50:======================================>               (81 + 32) / 113][Stage 50:===============================================>      (99 + 14) / 113][Stage 50:====================================================> (110 + 3) / 113]                                                                                [Stage 51:===========================>                          (59 + 55) / 114][Stage 51:===============================>                      (66 + 48) / 114][Stage 51:=======================================>              (83 + 31) / 114][Stage 51:==============================================>      (101 + 13) / 114][Stage 51:====================================================> (110 + 4) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.708258888 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR   partitionIndex = 173  OR  partitionIndex = 174 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.493970066 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:============================>                         (59 + 54) / 113][Stage 52:===============================>                      (65 + 48) / 113][Stage 52:=====================================>                (78 + 35) / 113][Stage 52:==============================================>       (97 + 16) / 113]                                                                                [Stage 53:============================>                         (60 + 54) / 114][Stage 53:===============================>                      (66 + 48) / 114][Stage 53:=======================================>              (83 + 31) / 114][Stage 53:==============================================>      (100 + 14) / 114][Stage 53:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.379637636 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 118  OR  partitionIndex = 119 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 118  OR  partitionIndex = 119 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404638984 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===================================>                  (75 + 38) / 113][Stage 54:=========================================>            (86 + 27) / 113][Stage 54:==============================================>       (97 + 16) / 113][Stage 54:=================================================>    (104 + 9) / 113][Stage 54:====================================================> (110 + 3) / 113]                                                                                [Stage 55:=====================================>                (80 + 34) / 114][Stage 55:============================================>         (94 + 20) / 114][Stage 55:===============================================>     (103 + 11) / 114][Stage 55:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.069408507 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  pa rtitionIndex = 91  OR  partitionIndex = 105 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444948316 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (60 + 60) / 120][Stage 56:===========================>                          (62 + 58) / 120][Stage 56:===================================>                  (78 + 42) / 120][Stage 56:=============================================>       (103 + 17) / 120][Stage 56:===================================================>  (114 + 6) / 120]                                                                                [Stage 57:===========================>                          (61 + 60) / 121][Stage 57:================================>                     (73 + 48) / 121][Stage 57:===================================>                  (80 + 41) / 121][Stage 57:=================================================>    (112 + 9) / 121][Stage 57:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.479046426 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR   partitionIndex = 158  OR  partitionIndex = 159 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44997595 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:==========================>                           (60 + 61) / 121][Stage 58:===========================>                          (62 + 59) / 121][Stage 58:=================================>                    (76 + 45) / 121][Stage 58:=============================================>       (104 + 17) / 121][Stage 58:====================================================> (118 + 3) / 121][Stage 58:=====================================================>(120 + 1) / 121]                                                                                [Stage 59:===========================>                          (61 + 61) / 122][Stage 59:===========================>                          (62 + 60) / 122][Stage 59:===============================>                      (72 + 50) / 122][Stage 59:=========================================>            (93 + 29) / 122][Stage 59:==============================================>      (108 + 14) / 122][Stage 59:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.62522017 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  pa rtitionIndex = 38  OR  partitionIndex = 39 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417964015 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:================================>                     (70 + 45) / 115][Stage 60:=======================================>              (85 + 30) / 115][Stage 60:==============================================>       (99 + 16) / 115][Stage 60:====================================================> (112 + 3) / 115]                                                                                [Stage 61:==================================>                   (74 + 42) / 116][Stage 61:========================================>             (87 + 29) / 116][Stage 61:===============================================>     (103 + 13) / 116][Stage 61:===================================================>  (110 + 6) / 116][Stage 61:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 4.950495195 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  pa rtitionIndex = 50  OR  partitionIndex = 51 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 50  OR  partitionIndex = 51 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.468180713 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (61 + 60) / 121][Stage 62:===============================>                      (71 + 50) / 121][Stage 62:======================================>               (87 + 34) / 121][Stage 62:===================================================>  (116 + 5) / 121]                                                                                [Stage 63:===========================>                          (61 + 61) / 122][Stage 63:==============================>                       (69 + 53) / 122][Stage 63:====================================>                 (83 + 39) / 122][Stage 63:==========================================>           (97 + 25) / 122][Stage 63:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 3.195229316 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 33  OR  par titionIndex = 47  OR  partitionIndex = 48 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400812079 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:================================>                     (72 + 46) / 118][Stage 64:===================================>                  (77 + 41) / 118][Stage 64:=======================================>              (86 + 32) / 118][Stage 64:================================================>    (107 + 11) / 118][Stage 64:=====================================================>(116 + 2) / 118][Stage 64:=====================================================>(117 + 1) / 118]                                                                                [Stage 65:=================================>                    (74 + 45) / 119][Stage 65:======================================>               (84 + 35) / 119][Stage 65:===========================================>          (96 + 23) / 119][Stage 65:================================================>    (109 + 10) / 119]                                                                                Time elapsed: 3.201257256 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  pa rtitionIndex = 107  OR  partitionIndex = 108 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.435622193 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:==========================>                           (60 + 61) / 121][Stage 66:===========================>                          (62 + 59) / 121][Stage 66:=================================>                    (74 + 47) / 121][Stage 66:===========================================>          (98 + 23) / 121][Stage 66:===================================================>  (115 + 6) / 121]                                                                                [Stage 67:============================>                         (65 + 57) / 122][Stage 67:==============================>                       (70 + 52) / 122][Stage 67:=========================================>            (93 + 29) / 122][Stage 67:==================================================>   (113 + 9) / 122]                                                                                Time elapsed: 3.349209733 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  pa rtitionIndex = 78  OR  partitionIndex = 90 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442250578 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==========================>                           (60 + 61) / 121][Stage 68:===========================>                          (61 + 60) / 121][Stage 68:==================================>                   (78 + 43) / 121][Stage 68:==========================================>           (96 + 25) / 121][Stage 68:================================================>    (110 + 11) / 121][Stage 68:=====================================================>(120 + 1) / 121]                                                                                [Stage 69:===========================>                          (63 + 59) / 122][Stage 69:==============================>                       (70 + 52) / 122][Stage 69:======================================>               (87 + 35) / 122][Stage 69:================================================>    (112 + 10) / 122]                                                                                Time elapsed: 3.487202263 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  pa rtitionIndex = 90  OR  partitionIndex = 91 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434832508 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (61 + 59) / 120][Stage 70:================================>                     (72 + 48) / 120][Stage 70:=========================================>            (93 + 27) / 120][Stage 70:================================================>    (109 + 11) / 120][Stage 70:=====================================================>(119 + 1) / 120]                                                                                [Stage 71:===========================>                          (61 + 60) / 121][Stage 71:==============================>                       (68 + 53) / 121][Stage 71:======================================>               (86 + 35) / 121][Stage 71:==================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.343226194 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR   partitionIndex = 198  OR  partitionIndex = 210 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.448273339 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:==========================>                           (60 + 61) / 121][Stage 72:=============================>                        (67 + 54) / 121][Stage 72:====================================>                 (82 + 39) / 121][Stage 72:=============================================>       (104 + 17) / 121]                                                                                [Stage 73:===========================>                          (62 + 60) / 122][Stage 73:==============================>                       (69 + 53) / 122][Stage 73:======================================>               (87 + 35) / 122][Stage 73:===============================================>     (109 + 13) / 122]                                                                                Time elapsed: 3.208609787 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 216  OR   partitionIndex = 229  OR  partitionIndex = 230 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 229  OR  partitionIndex = 230 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401810486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:==================================>                   (74 + 41) / 115][Stage 74:===========================================>          (92 + 23) / 115][Stage 74:=================================================>    (106 + 9) / 115][Stage 74:=====================================================>(114 + 1) / 115]                                                                                [Stage 75:=================================>                    (71 + 45) / 116][Stage 75:========================================>             (86 + 30) / 116][Stage 75:===============================================>     (104 + 12) / 116][Stage 75:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.75295016 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR   partitionIndex = 119  OR  partitionIndex = 120 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362611282 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:======================================>               (81 + 34) / 115][Stage 76:==========================================>           (90 + 25) / 115][Stage 76:===============================================>     (102 + 13) / 115][Stage 76:====================================================> (112 + 3) / 115]                                                                                [Stage 77:======================================>               (83 + 33) / 116][Stage 77:========================================>             (87 + 29) / 116][Stage 77:==============================================>      (102 + 14) / 116][Stage 77:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.664960066 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  pa rtitionIndex = 53  OR  partitionIndex = 54 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430590559 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:===========================>                          (58 + 55) / 113][Stage 78:=============================>                        (62 + 51) / 113][Stage 78:=====================================>                (79 + 34) / 113][Stage 78:===========================================>          (92 + 21) / 113][Stage 78:===================================================>  (107 + 6) / 113]                                                                                [Stage 79:============================>                         (60 + 54) / 114][Stage 79:=============================>                        (63 + 51) / 114][Stage 79:======================================>               (82 + 32) / 114][Stage 79:================================================>    (104 + 10) / 114][Stage 79:====================================================> (111 + 3) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.788978496 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 221  OR   partitionIndex = 235  OR  partitionIndex = 236 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391520277 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:================================>                     (70 + 45) / 115][Stage 80:======================================>               (83 + 32) / 115][Stage 80:==============================================>       (99 + 16) / 115][Stage 80:===================================================>  (110 + 5) / 115]                                                                                [Stage 81:===================================>                  (76 + 40) / 116][Stage 81:========================================>             (88 + 28) / 116][Stage 81:===============================================>     (104 + 12) / 116]                                                                                Time elapsed: 2.797446219 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 111  OR  partitionIndex = 112 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 111  OR  partitionIndex = 112 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394189454 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:==============================>                       (65 + 50) / 115][Stage 82:===================================>                  (76 + 39) / 115][Stage 82:============================================>         (94 + 21) / 115][Stage 82:================================================>    (105 + 10) / 115]                                                                                [Stage 83:===============================>                      (68 + 48) / 116][Stage 83:===================================>                  (76 + 40) / 116][Stage 83:===========================================>          (94 + 22) / 116][Stage 83:===============================================>     (105 + 11) / 116][Stage 83:===================================================>  (111 + 5) / 116][Stage 83:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.428748831 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  pa rtitionIndex = 60  OR  partitionIndex = 61 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388373715 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==================================>                   (73 + 40) / 113][Stage 84:=======================================>              (83 + 30) / 113][Stage 84:============================================>         (94 + 19) / 113][Stage 84:=================================================>    (104 + 9) / 113][Stage 84:====================================================> (110 + 3) / 113][Stage 84:=====================================================>(111 + 2) / 113]                                                                                [Stage 85:====================================>                 (77 + 37) / 114][Stage 85:=========================================>            (87 + 27) / 114][Stage 85:=============================================>        (96 + 18) / 114][Stage 85:=================================================>    (105 + 9) / 114][Stage 85:===================================================>  (109 + 5) / 114][Stage 85:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.19476403 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  pa rtitionIndex = 87  OR  partitionIndex = 88 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424453819 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:==========================>                           (60 + 61) / 121][Stage 86:============================>                         (64 + 57) / 121][Stage 86:==================================>                   (77 + 44) / 121][Stage 86:===========================================>          (98 + 23) / 121][Stage 86:==================================================>   (113 + 8) / 121]                                                                                [Stage 87:===========================>                          (61 + 61) / 122][Stage 87:===============================>                      (71 + 51) / 122][Stage 87:======================================>               (86 + 36) / 122][Stage 87:===============================================>     (110 + 12) / 122][Stage 87:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.420290255 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  pa rtitionIndex = 28  OR  partitionIndex = 29 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 28  OR  partitionIndex = 29 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366687009 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===================================>                  (74 + 39) / 113][Stage 88:=======================================>              (83 + 30) / 113][Stage 88:=============================================>        (95 + 18) / 113][Stage 88:=================================================>    (104 + 9) / 113][Stage 88:===================================================>  (108 + 5) / 113]                                                                                [Stage 89:====================================>                 (78 + 36) / 114][Stage 89:==========================================>           (89 + 25) / 114][Stage 89:=============================================>        (97 + 17) / 114][Stage 89:=================================================>    (105 + 9) / 114][Stage 89:====================================================> (110 + 4) / 114][Stage 89:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.005999555 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 197  OR  partitionIndex = 198 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422823688 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:===========================>                          (58 + 55) / 113][Stage 90:=============================>                        (62 + 51) / 113][Stage 90:=====================================>                (78 + 35) / 113][Stage 90:===========================================>          (90 + 23) / 113][Stage 90:====================================================> (109 + 4) / 113]                                                                                [Stage 91:============================>                         (60 + 54) / 114][Stage 91:=================================>                    (71 + 43) / 114][Stage 91:============================================>         (93 + 21) / 114][Stage 91:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.2011495 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  pa rtitionIndex = 45  OR  partitionIndex = 46 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395758825 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:================================>                     (72 + 46) / 118][Stage 92:==================================>                   (76 + 42) / 118][Stage 92:======================================>               (84 + 34) / 118][Stage 92:===========================================>          (94 + 24) / 118][Stage 92:==============================================>      (104 + 14) / 118]                                                                                [Stage 93:==================================>                   (75 + 44) / 119][Stage 93:====================================>                 (80 + 39) / 119][Stage 93:=========================================>            (91 + 28) / 119][Stage 93:==================================================>   (112 + 7) / 119][Stage 93:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.350559487 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  par titionIndex = 18  OR  partitionIndex = 30 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374013719 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:================================>                     (72 + 46) / 118][Stage 94:=================================>                    (73 + 45) / 118][Stage 94:==================================>                   (75 + 43) / 118][Stage 94:=======================================>              (87 + 31) / 118][Stage 94:============================================>         (98 + 20) / 118][Stage 94:==================================================>   (111 + 7) / 118][Stage 94:=====================================================>(117 + 1) / 118]                                                                                [Stage 95:=================================>                    (74 + 45) / 119][Stage 95:===================================>                  (78 + 41) / 119][Stage 95:======================================>               (84 + 35) / 119][Stage 95:========================================>             (90 + 29) / 119][Stage 95:============================================>        (101 + 18) / 119][Stage 95:==================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.790312728 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  part itionIndex = 19  OR  partitionIndex = 20 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376402895 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:================================>                     (72 + 46) / 118][Stage 96:===================================>                  (77 + 41) / 118][Stage 96:=========================================>            (91 + 27) / 118][Stage 96:===============================================>     (105 + 13) / 118][Stage 96:====================================================> (114 + 4) / 118]                                                                                [Stage 97:==================================>                   (76 + 43) / 119][Stage 97:====================================>                 (81 + 38) / 119][Stage 97:========================================>             (89 + 30) / 119][Stage 97:===============================================>     (107 + 12) / 119][Stage 97:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.547060651 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 93  OR  pa rtitionIndex = 107  OR  partitionIndex = 108 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375044406 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:=================================>                    (73 + 45) / 118][Stage 98:===================================>                  (78 + 40) / 118][Stage 98:=========================================>            (90 + 28) / 118][Stage 98:==============================================>      (103 + 15) / 118][Stage 98:====================================================> (115 + 3) / 118]                                                                                [Stage 99:==================================>                   (75 + 44) / 119][Stage 99:=====================================>                (82 + 37) / 119][Stage 99:==========================================>           (93 + 26) / 119][Stage 99:==============================================>      (105 + 14) / 119][Stage 99:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.515239916 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  pa rtitionIndex = 43  OR  partitionIndex = 57 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383721404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:================================>                    (73 + 45) / 118][Stage 100:====================================>                (82 + 36) / 118][Stage 100:============================================>       (100 + 18) / 118][Stage 100:===================================================> (114 + 4) / 118]                                                                                [Stage 101:================================>                    (73 + 46) / 119][Stage 101:==================================>                  (77 + 42) / 119][Stage 101:========================================>            (92 + 27) / 119][Stage 101:===============================================>    (109 + 10) / 119][Stage 101:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.096663138 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR   partitionIndex = 231  OR  partitionIndex = 232 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.424905182 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 61) / 121][Stage 102:===========================>                         (63 + 58) / 121][Stage 102:================================>                    (74 + 47) / 121][Stage 102:===========================================>        (102 + 19) / 121][Stage 102:===================================================> (117 + 4) / 121]                                                                                [Stage 103:==========================>                          (61 + 61) / 122][Stage 103:================================>                    (74 + 48) / 122][Stage 103:========================================>            (94 + 28) / 122][Stage 103:=================================================>   (113 + 9) / 122][Stage 103:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.608737107 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR   partitionIndex = 135  OR  partitionIndex = 136 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36669529 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:=====================================>               (79 + 34) / 113][Stage 104:==========================================>          (91 + 22) / 113][Stage 104:=============================================>       (98 + 15) / 113][Stage 104:==================================================>  (107 + 6) / 113]                                                                                [Stage 105:=====================================>               (80 + 34) / 114][Stage 105:========================================>            (88 + 26) / 114][Stage 105:=============================================>      (100 + 14) / 114][Stage 105:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.00046247 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  pa rtitionIndex = 106  OR  partitionIndex = 107 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 106  OR  partitionIndex = 107 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375119407 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:================================>                    (72 + 46) / 118][Stage 106:==================================>                  (76 + 42) / 118][Stage 106:=====================================>               (83 + 35) / 118][Stage 106:===========================================>         (96 + 22) / 118][Stage 106:=================================================>   (111 + 7) / 118]                                                                                [Stage 107:================================>                    (73 + 46) / 119][Stage 107:=================================>                   (76 + 43) / 119][Stage 107:======================================>              (86 + 33) / 119][Stage 107:===========================================>        (100 + 19) / 119][Stage 107:=================================================>   (112 + 7) / 119]                                                                                Time elapsed: 3.566314202 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43  OR  pa rtitionIndex = 57  OR  partitionIndex = 58 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457049719 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (60 + 61) / 121][Stage 108:=============================>                       (67 + 54) / 121][Stage 108:===================================>                 (81 + 40) / 121][Stage 108:===============================================>    (110 + 11) / 121][Stage 108:====================================================>(119 + 2) / 121]                                                                                [Stage 109:==========================>                          (61 + 61) / 122][Stage 109:============================>                        (66 + 56) / 122][Stage 109:===================================>                 (81 + 41) / 122][Stage 109:==============================================>     (109 + 13) / 122][Stage 109:==================================================>  (117 + 5) / 122][Stage 109:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.444920065 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR   partitionIndex = 189  OR  partitionIndex = 203 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406246016 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:==========================>                          (60 + 61) / 121][Stage 110:==============================>                      (69 + 52) / 121][Stage 110:========================================>            (92 + 29) / 121][Stage 110:=============================================>      (107 + 14) / 121][Stage 110:====================================================>(119 + 2) / 121]                                                                                [Stage 111:============================>                        (65 + 57) / 122][Stage 111:================================>                    (75 + 47) / 122][Stage 111:=========================================>           (95 + 27) / 122][Stage 111:=================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.398058909 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  pa rtitionIndex = 95  OR  partitionIndex = 109 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40224425 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:============================>                        (65 + 55) / 120][Stage 112:==================================>                  (77 + 43) / 120][Stage 112:=========================================>           (94 + 26) / 120][Stage 112:===================================================> (116 + 4) / 120]                                                                                [Stage 113:==========================>                          (61 + 60) / 121][Stage 113:============================>                        (66 + 55) / 121][Stage 113:======================================>              (89 + 32) / 121][Stage 113:=================================================>   (112 + 9) / 121][Stage 113:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.317425066 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 32  OR  pa rtitionIndex = 45  OR  partitionIndex = 46 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 45  OR  partitionIndex = 46 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369314168 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:==============================>                      (67 + 48) / 115][Stage 114:===================================>                 (77 + 38) / 115][Stage 114:=========================================>           (90 + 25) / 115][Stage 114:================================================>    (106 + 9) / 115][Stage 114:==================================================>  (110 + 5) / 115]                                                                                [Stage 115:===============================>                     (68 + 48) / 116][Stage 115:=====================================>               (81 + 35) / 116][Stage 115:===========================================>         (96 + 20) / 116][Stage 115:================================================>    (107 + 9) / 116][Stage 115:=================================================>   (109 + 7) / 116][Stage 115:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 6.013119645 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR   partitionIndex = 179  OR  partitionIndex = 180 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355778716 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:====================================>                (77 + 36) / 113][Stage 116:==========================================>          (90 + 23) / 113][Stage 116:==============================================>      (99 + 14) / 113][Stage 116:=================================================>   (106 + 7) / 113][Stage 116:===================================================> (110 + 3) / 113]                                                                                [Stage 117:===================================>                 (77 + 37) / 114][Stage 117:==========================================>          (92 + 22) / 114][Stage 117:==============================================>     (102 + 12) / 114][Stage 117:==================================================>  (109 + 5) / 114][Stage 117:===================================================> (111 + 3) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.472723813 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR   partitionIndex = 137  OR  partitionIndex = 138 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395856166 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 60) / 120][Stage 118:===========================>                         (63 + 57) / 120][Stage 118:==================================>                  (78 + 42) / 120][Stage 118:==========================================>          (97 + 23) / 120][Stage 118:===================================================> (116 + 4) / 120]                                                                                [Stage 119:============================>                        (64 + 57) / 121][Stage 119:=================================>                   (76 + 45) / 121][Stage 119:===========================================>         (99 + 22) / 121][Stage 119:===============================================>    (111 + 10) / 121][Stage 119:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.615305333 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 213  OR   partitionIndex = 227  OR  partitionIndex = 228 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4779599 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:==========================>                          (60 + 60) / 120][Stage 120:=================================>                   (76 + 44) / 120][Stage 120:==============================================>     (107 + 13) / 120]                                                                                [Stage 121:==========================>                          (61 + 60) / 121][Stage 121:=============================>                       (68 + 53) / 121][Stage 121:======================================>              (87 + 34) / 121][Stage 121:===============================================>    (111 + 10) / 121][Stage 121:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.127093365 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  pa rtitionIndex = 107  OR  partitionIndex = 108 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 107  OR  partitionIndex = 108 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334503994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:======================================>              (83 + 32) / 115][Stage 122:========================================>            (87 + 28) / 115][Stage 122:============================================>        (97 + 18) / 115][Stage 122:==================================================>  (109 + 6) / 115][Stage 122:====================================================>(114 + 1) / 115]                                                                                [Stage 123:=====================================>               (82 + 34) / 116][Stage 123:=======================================>             (86 + 30) / 116][Stage 123:============================================>        (97 + 19) / 116][Stage 123:=================================================>   (108 + 8) / 116][Stage 123:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.218040298 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR   partitionIndex = 181  OR  partitionIndex = 195 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386495524 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:=============================>                       (62 + 51) / 113][Stage 124:==================================>                  (74 + 39) / 113][Stage 124:=============================================>       (97 + 16) / 113][Stage 124:====================================================>(111 + 2) / 113]                                                                                [Stage 125:===========================>                         (60 + 54) / 114][Stage 125:===============================>                     (67 + 47) / 114][Stage 125:=====================================>               (80 + 34) / 114][Stage 125:============================================>        (96 + 18) / 114][Stage 125:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.245441343 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  pa rtitionIndex = 25  OR  partitionIndex = 26 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378953053 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:================================>                    (72 + 46) / 118][Stage 126:==================================>                  (76 + 42) / 118][Stage 126:=====================================>               (83 + 35) / 118][Stage 126:==============================================>     (106 + 12) / 118][Stage 126:====================================================>(116 + 2) / 118]                                                                                [Stage 127:================================>                    (73 + 46) / 119][Stage 127:====================================>                (81 + 38) / 119][Stage 127:========================================>            (91 + 28) / 119][Stage 127:================================================>    (110 + 9) / 119][Stage 127:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.154231889 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  pa rtitionIndex = 30  OR  partitionIndex = 31 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385272996 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:==============================>                      (67 + 48) / 115][Stage 128:=====================================>               (82 + 33) / 115][Stage 128:=============================================>       (99 + 16) / 115][Stage 128:====================================================>(113 + 2) / 115]                                                                                [Stage 129:=================================>                   (74 + 42) / 116][Stage 129:========================================>            (88 + 28) / 116][Stage 129:============================================>        (98 + 18) / 116][Stage 129:===================================================> (112 + 4) / 116][Stage 129:====================================================>(114 + 2) / 116][Stage 129:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.882841554 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  pa rtitionIndex = 69  OR  partitionIndex = 83 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360213587 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:=======================================>             (85 + 28) / 113][Stage 130:===========================================>         (92 + 21) / 113][Stage 130:===============================================>    (103 + 10) / 113][Stage 130:====================================================>(111 + 2) / 113][Stage 130:====================================================>(112 + 1) / 113]                                                                                [Stage 131:========================================>            (87 + 27) / 114][Stage 131:============================================>        (96 + 18) / 114][Stage 131:===============================================>    (104 + 10) / 114][Stage 131:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.301142819 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR   partitionIndex = 151  OR  partitionIndex = 165 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403086536 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (63 + 58) / 121][Stage 132:===============================>                     (72 + 49) / 121][Stage 132:========================================>            (92 + 29) / 121][Stage 132:=================================================>   (112 + 9) / 121]                                                                                [Stage 133:==========================>                          (61 + 61) / 122][Stage 133:=============================>                       (69 + 53) / 122][Stage 133:========================================>            (94 + 28) / 122][Stage 133:===============================================>    (112 + 10) / 122][Stage 133:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.392050092 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 182  OR   partitionIndex = 195  OR  partitionIndex = 196 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 195  OR  partitionIndex = 196 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400567439 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:==========================>                          (60 + 61) / 121][Stage 134:============================>                        (65 + 56) / 121][Stage 134:===================================>                 (82 + 39) / 121][Stage 134:==============================================>     (108 + 13) / 121][Stage 134:====================================================>(119 + 2) / 121]                                                                                [Stage 135:============================>                        (66 + 56) / 122][Stage 135:==================================>                  (79 + 43) / 122][Stage 135:==========================================>         (100 + 22) / 122][Stage 135:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.239103061 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  part itionIndex = 21  OR  partitionIndex = 22 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392723286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:==========================>                          (61 + 59) / 120][Stage 136:=============================>                       (67 + 53) / 120][Stage 136:=====================================>               (85 + 35) / 120][Stage 136:=================================================>   (112 + 8) / 120]                                                                                [Stage 137:===========================>                         (63 + 58) / 121][Stage 137:=================================>                   (76 + 45) / 121][Stage 137:==========================================>          (96 + 25) / 121][Stage 137:=================================================>   (112 + 9) / 121]                                                                                Time elapsed: 3.213675731 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  pa rtitionIndex = 27  OR  partitionIndex = 56 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 56 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336794249 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:======================================>              (83 + 32) / 115][Stage 138:=========================================>           (90 + 25) / 115][Stage 138:=============================================>      (101 + 14) / 115][Stage 138:=================================================>   (107 + 8) / 115]                                                                                [Stage 139:======================================>              (85 + 31) / 116][Stage 139:==========================================>          (93 + 23) / 116][Stage 139:=============================================>       (99 + 17) / 116][Stage 139:===============================================>    (105 + 11) / 116][Stage 139:===================================================> (112 + 4) / 116][Stage 139:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.446643597 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR   partitionIndex = 140  OR  partitionIndex = 141 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 140  OR  partitionIndex = 141 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402366891 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (62 + 59) / 121][Stage 140:=================================>                   (77 + 44) / 121][Stage 140:=========================================>           (95 + 26) / 121][Stage 140:=================================================>   (112 + 9) / 121]                                                                                [Stage 141:==========================>                          (61 + 61) / 122][Stage 141:===============================>                     (73 + 49) / 122][Stage 141:========================================>            (94 + 28) / 122][Stage 141:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.272585648 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 227  OR  partitionIndex = 228 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 227  OR  partitionIndex = 228 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399085289 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:==========================>                          (60 + 60) / 120][Stage 142:============================>                        (64 + 56) / 120][Stage 142:=================================>                   (76 + 44) / 120][Stage 142:==========================================>          (96 + 24) / 120][Stage 142:====================================================>(119 + 1) / 120]                                                                                [Stage 143:==========================>                          (61 + 60) / 121][Stage 143:=============================>                       (67 + 54) / 121][Stage 143:====================================>                (83 + 38) / 121][Stage 143:===============================================>    (110 + 11) / 121]                                                                                Time elapsed: 3.071290852 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 152  OR   partitionIndex = 165  OR  partitionIndex = 166 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 165  OR  partitionIndex = 166 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368815004 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:================================>                    (72 + 46) / 118][Stage 144:==================================>                  (77 + 41) / 118][Stage 144:===========================================>         (96 + 22) / 118][Stage 144:==================================================>  (113 + 5) / 118][Stage 144:====================================================>(117 + 1) / 118]                                                                                [Stage 145:================================>                    (73 + 46) / 119][Stage 145:==================================>                  (77 + 42) / 119][Stage 145:===========================================>         (98 + 21) / 119][Stage 145:=================================================>   (111 + 8) / 119][Stage 145:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.532948863 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1  OR  partitionIndex = 2  OR  part itionIndex = 15  OR  partitionIndex = 16 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1  OR  partitionIndex = 2  OR  partitionIndex = 15  OR  partitionIndex = 16 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359919745 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:=================================>                   (74 + 44) / 118][Stage 146:===================================>                 (80 + 38) / 118][Stage 146:===========================================>         (97 + 21) / 118][Stage 146:===============================================>    (107 + 11) / 118][Stage 146:====================================================>(117 + 1) / 118]                                                                                [Stage 147:================================>                    (73 + 46) / 119][Stage 147:====================================>                (82 + 37) / 119][Stage 147:=========================================>           (93 + 26) / 119][Stage 147:=============================================>      (103 + 16) / 119][Stage 147:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.687822046 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR   partitionIndex = 162  OR  partitionIndex = 163 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389610385 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:============================>                        (60 + 53) / 113][Stage 148:================================>                    (69 + 44) / 113][Stage 148:========================================>            (87 + 26) / 113][Stage 148:================================================>    (104 + 9) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:===========================>                         (60 + 54) / 114][Stage 149:===============================>                     (67 + 47) / 114][Stage 149:=======================================>             (85 + 29) / 114][Stage 149:==============================================>     (102 + 12) / 114][Stage 149:====================================================>(112 + 2) / 114][Stage 149:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.446683022 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR   partitionIndex = 154  OR  partitionIndex = 155 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397828821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (61 + 60) / 121][Stage 150:===============================>                     (73 + 48) / 121][Stage 150:=========================================>           (94 + 27) / 121][Stage 150:===================================================> (117 + 4) / 121][Stage 150:====================================================>(120 + 1) / 121]                                                                                [Stage 151:==========================>                          (61 + 61) / 122][Stage 151:============================>                        (65 + 57) / 122][Stage 151:=================================>                   (77 + 45) / 122][Stage 151:==========================================>          (98 + 24) / 122][Stage 151:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 3.338239732 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR   partitionIndex = 178  OR  partitionIndex = 179 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 178  OR  partitionIndex = 179 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33393685 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:======================================>              (83 + 32) / 115][Stage 152:=======================================>             (86 + 29) / 115][Stage 152:==============================================>     (102 + 13) / 115][Stage 152:====================================================>(114 + 1) / 115]                                                                                [Stage 153:=====================================>               (83 + 33) / 116][Stage 153:==========================================>          (93 + 23) / 116][Stage 153:==============================================>     (103 + 13) / 116][Stage 153:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.542644292 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  part itionIndex = 15  OR  partitionIndex = 16 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 15  OR  partitionIndex = 16 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.359440102 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:=================================>                   (75 + 43) / 118][Stage 154:========================================>            (90 + 28) / 118][Stage 154:===============================================>    (108 + 10) / 118][Stage 154:===================================================> (114 + 4) / 118]                                                                                [Stage 155:================================>                    (74 + 45) / 119][Stage 155:====================================>                (83 + 36) / 119][Stage 155:=============================================>      (103 + 16) / 119][Stage 155:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.224219884 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  pa rtitionIndex = 26  OR  partitionIndex = 38 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378615931 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:============================>                        (60 + 53) / 113][Stage 156:================================>                    (70 + 43) / 113][Stage 156:==========================================>          (91 + 22) / 113][Stage 156:==================================================>  (108 + 5) / 113][Stage 156:====================================================>(111 + 2) / 113]                                                                                [Stage 157:===========================>                         (60 + 54) / 114][Stage 157:================================>                    (70 + 44) / 114][Stage 157:========================================>            (87 + 27) / 114][Stage 157:==================================================>  (108 + 6) / 114][Stage 157:===================================================> (111 + 3) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.566719332 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 14  OR  pa rtitionIndex = 27  OR  partitionIndex = 28 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 27  OR  partitionIndex = 28 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363016466 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:================================>                    (72 + 46) / 118][Stage 158:=================================>                   (75 + 43) / 118][Stage 158:=========================================>           (92 + 26) / 118][Stage 158:==============================================>     (106 + 12) / 118]                                                                                [Stage 159:================================>                    (73 + 46) / 119][Stage 159:==================================>                  (78 + 41) / 119][Stage 159:========================================>            (90 + 29) / 119][Stage 159:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.059611195 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 96  OR  pa rtitionIndex = 109  OR  partitionIndex = 110 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 109  OR  partitionIndex = 110 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387494111 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (62 + 58) / 120][Stage 160:=================================>                   (76 + 44) / 120][Stage 160:===========================================>         (98 + 22) / 120][Stage 160:=================================================>   (112 + 8) / 120]                                                                                [Stage 161:===========================>                         (62 + 59) / 121][Stage 161:==================================>                  (78 + 43) / 121][Stage 161:==========================================>          (97 + 24) / 121][Stage 161:=================================================>   (112 + 9) / 121][Stage 161:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.304579786 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  pa rtitionIndex = 105  OR  partitionIndex = 106 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405755974 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (62 + 58) / 120][Stage 162:================================>                    (74 + 46) / 120][Stage 162:========================================>            (91 + 29) / 120][Stage 162:=================================================>   (113 + 7) / 120]                                                                                [Stage 163:===========================>                         (63 + 58) / 121][Stage 163:===============================>                     (73 + 48) / 121][Stage 163:==========================================>          (96 + 25) / 121][Stage 163:==================================================>  (116 + 5) / 121][Stage 163:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.655182529 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  pa rtitionIndex = 75  OR  partitionIndex = 76 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369929312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:================================>                    (70 + 45) / 115][Stage 164:====================================>                (79 + 36) / 115][Stage 164:============================================>        (97 + 18) / 115][Stage 164:===================================================> (111 + 4) / 115]                                                                                [Stage 165:================================>                    (72 + 44) / 116][Stage 165:=====================================>               (83 + 33) / 116][Stage 165:==========================================>          (92 + 24) / 116][Stage 165:=================================================>   (109 + 7) / 116][Stage 165:===================================================> (113 + 3) / 116][Stage 165:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.343881492 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  pa rtitionIndex = 47  OR  partitionIndex = 48 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416372705 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:=================================>                   (72 + 41) / 113][Stage 166:=======================================>             (85 + 28) / 113][Stage 166:=============================================>       (98 + 15) / 113][Stage 166:=================================================>   (106 + 7) / 113][Stage 166:==================================================>  (108 + 5) / 113][Stage 166:====================================================>(111 + 2) / 113][Stage 166:====================================================>(112 + 1) / 113]                                                                                [Stage 167:=================================>                   (73 + 41) / 114][Stage 167:=========================================>           (90 + 24) / 114][Stage 167:=============================================>       (98 + 16) / 114][Stage 167:===============================================>    (104 + 10) / 114][Stage 167:===================================================> (110 + 4) / 114][Stage 167:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.543501735 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 151  OR   partitionIndex = 165  OR  partitionIndex = 166 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165  OR  partitionIndex = 166 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395011821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:================================>                    (70 + 45) / 115][Stage 168:======================================>              (83 + 32) / 115][Stage 168:===========================================>         (95 + 20) / 115][Stage 168:=================================================>   (107 + 8) / 115][Stage 168:====================================================>(114 + 1) / 115]                                                                                [Stage 169:===============================>                     (68 + 48) / 116][Stage 169:=====================================>               (83 + 33) / 116][Stage 169:===========================================>         (95 + 21) / 116][Stage 169:===============================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.943567615 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR   partitionIndex = 207  OR  partitionIndex = 236 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 236 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.343672655 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:=====================================>               (82 + 33) / 115][Stage 170:=============================================>       (99 + 16) / 115][Stage 170:=================================================>   (108 + 7) / 115][Stage 170:====================================================>(114 + 1) / 115]                                                                                [Stage 171:======================================>              (84 + 32) / 116][Stage 171:==========================================>          (92 + 24) / 116][Stage 171:=============================================>      (101 + 15) / 116][Stage 171:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.656809703 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  pa rtitionIndex = 79  OR  partitionIndex = 80 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.369895453 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==============================>                      (66 + 49) / 115][Stage 172:====================================>                (79 + 36) / 115][Stage 172:============================================>        (97 + 18) / 115][Stage 172:================================================>    (106 + 9) / 115][Stage 172:===================================================> (111 + 4) / 115]                                                                                [Stage 173:==================================>                  (75 + 41) / 116][Stage 173:==========================================>          (92 + 24) / 116][Stage 173:============================================>        (98 + 18) / 116][Stage 173:===================================================> (112 + 4) / 116][Stage 173:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.366857587 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 147  OR  partitionIndex = 176 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 176 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388462718 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:==========================>                          (60 + 61) / 121][Stage 174:==============================>                      (70 + 51) / 121][Stage 174:===========================================>         (99 + 22) / 121][Stage 174:===================================================> (117 + 4) / 121]                                                                                [Stage 175:==========================>                          (61 + 61) / 122][Stage 175:=============================>                       (69 + 53) / 122][Stage 175:======================================>              (88 + 34) / 122][Stage 175:===========================================>        (101 + 21) / 122][Stage 175:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.449023081 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR   partitionIndex = 171  OR  partitionIndex = 172 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 171  OR  partitionIndex = 172 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362658724 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:================================>                    (70 + 45) / 115][Stage 176:=====================================>               (81 + 34) / 115][Stage 176:=========================================>           (90 + 25) / 115][Stage 176:===============================================>    (105 + 10) / 115][Stage 176:==================================================>  (110 + 5) / 115]                                                                                [Stage 177:================================>                    (72 + 44) / 116][Stage 177:=======================================>             (86 + 30) / 116][Stage 177:=============================================>       (99 + 17) / 116][Stage 177:=================================================>   (109 + 7) / 116][Stage 177:===================================================> (112 + 4) / 116][Stage 177:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.44725833 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  p artitionIndex = 103  OR  partitionIndex = 117 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344992365 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==================================>                  (74 + 39) / 113][Stage 178:========================================>            (86 + 27) / 113][Stage 178:============================================>        (94 + 19) / 113][Stage 178:===============================================>    (103 + 10) / 113][Stage 178:====================================================>(111 + 2) / 113]                                                                                [Stage 179:=================================>                   (72 + 42) / 114][Stage 179:========================================>            (87 + 27) / 114][Stage 179:=============================================>       (97 + 17) / 114][Stage 179:================================================>    (105 + 9) / 114][Stage 179:====================================================>(112 + 2) / 114][Stage 179:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.07020463 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 153  OR   partitionIndex = 167  OR  partitionIndex = 168 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346158873 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===================================>                 (75 + 38) / 113][Stage 180:=======================================>             (85 + 28) / 113][Stage 180:=============================================>       (98 + 15) / 113][Stage 180:==================================================>  (107 + 6) / 113][Stage 180:===================================================> (110 + 3) / 113]                                                                                [Stage 181:==================================>                  (74 + 40) / 114][Stage 181:========================================>            (88 + 26) / 114][Stage 181:=============================================>       (98 + 16) / 114][Stage 181:================================================>    (105 + 9) / 114][Stage 181:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.143613885 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 10  OR  par titionIndex = 23  OR  partitionIndex = 24 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 23  OR  partitionIndex = 24 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422484467 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (62 + 58) / 120][Stage 182:================================>                    (73 + 47) / 120][Stage 182:=========================================>           (95 + 25) / 120][Stage 182:==================================================>  (114 + 6) / 120]                                                                                [Stage 183:==========================>                          (61 + 60) / 121][Stage 183:===============================>                     (72 + 49) / 121][Stage 183:==========================================>          (98 + 23) / 121][Stage 183:=================================================>   (114 + 7) / 121]                                                                                Time elapsed: 3.317179974 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR   partitionIndex = 203  OR  partitionIndex = 204 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.416231445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (59 + 54) / 113][Stage 184:================================>                    (69 + 44) / 113][Stage 184:======================================>              (83 + 30) / 113][Stage 184:==================================================>  (107 + 6) / 113][Stage 184:====================================================>(112 + 1) / 113]                                                                                [Stage 185:===========================>                         (59 + 55) / 114][Stage 185:===============================>                     (67 + 47) / 114][Stage 185:========================================>            (88 + 26) / 114][Stage 185:===============================================>    (104 + 10) / 114][Stage 185:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.233971934 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 62  OR  pa rtitionIndex = 75  OR  partitionIndex = 76 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 75  OR  partitionIndex = 76 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36355425 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===============================>                     (69 + 46) / 115][Stage 186:======================================>              (83 + 32) / 115][Stage 186:=============================================>       (98 + 17) / 115][Stage 186:==================================================>  (110 + 5) / 115]                                                                                [Stage 187:================================>                    (71 + 45) / 116][Stage 187:============================================>        (97 + 19) / 116][Stage 187:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.927569969 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR   partitionIndex = 170  OR  partitionIndex = 171 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 170  OR  partitionIndex = 171 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394997742 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (60 + 60) / 120][Stage 188:===========================>                         (63 + 57) / 120][Stage 188:==============================>                      (70 + 50) / 120][Stage 188:==========================================>          (96 + 24) / 120][Stage 188:====================================================>(119 + 1) / 120]                                                                                [Stage 189:==========================>                          (61 + 60) / 121][Stage 189:=============================>                       (67 + 54) / 121][Stage 189:===================================>                 (82 + 39) / 121][Stage 189:===============================================>    (111 + 10) / 121][Stage 189:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.281880337 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 100  OR  p artitionIndex = 113  OR  partitionIndex = 114 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 113  OR  partitionIndex = 114 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355131193 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===================================>                 (75 + 38) / 113][Stage 190:=========================================>           (89 + 24) / 113][Stage 190:=================================================>   (105 + 8) / 113][Stage 190:===================================================> (110 + 3) / 113]                                                                                [Stage 191:===================================>                 (77 + 37) / 114][Stage 191:==========================================>          (91 + 23) / 114][Stage 191:==============================================>      (99 + 15) / 114][Stage 191:===================================================> (111 + 3) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.995500607 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  pa rtitionIndex = 31  OR  partitionIndex = 45 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382148556 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (58 + 55) / 113][Stage 192:================================>                    (69 + 44) / 113][Stage 192:=========================================>           (88 + 25) / 113][Stage 192:================================================>    (104 + 9) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:===========================>                         (60 + 54) / 114][Stage 193:==============================>                      (65 + 49) / 114][Stage 193:======================================>              (83 + 31) / 114][Stage 193:==============================================>     (102 + 12) / 114][Stage 193:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.343304792 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  pa rtitionIndex = 83  OR  partitionIndex = 84 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378699752 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:=================================>                   (73 + 42) / 115][Stage 194:======================================>              (83 + 32) / 115][Stage 194:=============================================>      (100 + 15) / 115][Stage 194:===================================================> (112 + 3) / 115]                                                                                [Stage 195:===============================>                     (68 + 48) / 116][Stage 195:====================================>                (79 + 37) / 116][Stage 195:============================================>        (98 + 18) / 116][Stage 195:==================================================>  (111 + 5) / 116][Stage 195:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.791797555 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  pa rtitionIndex = 89  OR  partitionIndex = 90 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341839403 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:=====================================>               (79 + 34) / 113][Stage 196:==========================================>          (90 + 23) / 113][Stage 196:==============================================>     (101 + 12) / 113][Stage 196:===================================================> (109 + 4) / 113]                                                                                [Stage 197:====================================>                (79 + 35) / 114][Stage 197:==========================================>          (92 + 22) / 114][Stage 197:==============================================>     (103 + 11) / 114][Stage 197:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.960673953 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR   partitionIndex = 218  OR  partitionIndex = 219 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394587499 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:>                                                      (0 + 0) / 113][Stage 198:===========================>                         (58 + 55) / 113][Stage 198:=================================>                   (72 + 41) / 113][Stage 198:======================================>              (83 + 30) / 113][Stage 198:=============================================>       (97 + 16) / 113][Stage 198:=================================================>   (106 + 7) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:===========================>                         (60 + 54) / 114][Stage 199:==============================>                      (65 + 49) / 114][Stage 199:=====================================>               (81 + 33) / 114][Stage 199:==========================================>          (92 + 22) / 114][Stage 199:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.401545764 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  part itionIndex = 17  OR  partitionIndex = 18 ", 4))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18 ",4))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389591286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:==========================>                          (60 + 61) / 121][Stage 200:============================>                        (66 + 55) / 121][Stage 200:==================================>                  (79 + 42) / 121][Stage 200:==========================================>          (98 + 23) / 121][Stage 200:====================================================>(119 + 2) / 121]                                                                                [Stage 201:==========================>                          (61 + 61) / 122][Stage 201:============================>                        (66 + 56) / 122][Stage 201:====================================>                (84 + 38) / 122][Stage 201:===========================================>        (101 + 21) / 122][Stage 201:===================================================> (119 + 3) / 122][Stage 201:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.310047109 seconds
res203: Int = 0

scala> 

scala> :quit

real	10m27.923s
user	11m59.660s
sys	0m57.128s
