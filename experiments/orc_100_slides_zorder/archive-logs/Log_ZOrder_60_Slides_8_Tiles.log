Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 23:29:06 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 23:29:21 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 23:29:21 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 23:29:21 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 23:29:24 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 23:29:34 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524232923-0608).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 4.389392344 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:============>                                          (26 + 89) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:==============================>                        (63 + 52) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:===================================>                   (74 + 41) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:=======================================>               (83 + 32) / 115][Stage 0:===========================================>           (91 + 24) / 115][Stage 0:==============================================>       (100 + 15) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:====================================================>  (109 + 6) / 115][Stage 0:======================================================>(113 + 2) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:===========================>                           (57 + 59) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:=========================================>             (88 + 28) / 116][Stage 1:=============================================>         (95 + 21) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:=====================================================> (112 + 4) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 13.017645055 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 07 AND partitionZIndex<=114", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=107 AND partitionZIndex<=114,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.77214056 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 2:=================>                                     (39 + 81) / 120][Stage 2:========================>                              (54 + 66) / 120][Stage 2:============================>                          (62 + 58) / 120][Stage 2:============================>                          (63 + 57) / 120][Stage 2:==============================>                        (67 + 53) / 120][Stage 2:==================================>                    (76 + 44) / 120][Stage 2:=========================================>             (90 + 30) / 120][Stage 2:==============================================>       (103 + 17) / 120][Stage 2:===================================================>   (112 + 8) / 120][Stage 2:======================================================>(119 + 1) / 120]                                                                                [Stage 3:===========================>                           (60 + 61) / 121][Stage 3:=============================>                         (65 + 56) / 121][Stage 3:==============================>                        (68 + 53) / 121][Stage 3:=================================>                     (73 + 48) / 121][Stage 3:============================================>          (98 + 23) / 121][Stage 3:=================================================>    (111 + 10) / 121][Stage 3:=====================================================> (118 + 3) / 121][Stage 3:======================================================>(119 + 2) / 121]                                                                                Time elapsed: 6.498184824 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 5 AND partitionZIndex<=42", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=42,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.667805602 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 4:============================>                          (58 + 55) / 113][Stage 4:=============================>                         (60 + 53) / 113][Stage 4:=================================>                     (69 + 44) / 113][Stage 4:======================================>                (79 + 34) / 113][Stage 4:============================================>          (91 + 22) / 113][Stage 4:=================================================>    (103 + 10) / 113][Stage 4:======================================================>(111 + 2) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:===========================>                           (57 + 57) / 114][Stage 5:============================>                          (60 + 54) / 114][Stage 5:==============================>                        (63 + 51) / 114][Stage 5:====================================>                  (76 + 38) / 114][Stage 5:==========================================>            (89 + 25) / 114][Stage 5:==============================================>        (97 + 17) / 114][Stage 5:===================================================>   (107 + 7) / 114][Stage 5:====================================================>  (109 + 5) / 114][Stage 5:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.805287502 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 76 AND partitionZIndex<=183", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=183,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.54548517 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=================================>                     (71 + 47) / 118][Stage 6:=================================>                     (72 + 46) / 118][Stage 6:==================================>                    (74 + 44) / 118][Stage 6:=====================================>                 (81 + 37) / 118][Stage 6:==========================================>            (92 + 26) / 118][Stage 6:===============================================>      (103 + 15) / 118][Stage 6:=====================================================> (114 + 4) / 118][Stage 6:======================================================>(117 + 1) / 118]                                                                                [Stage 7:==================================>                    (74 + 45) / 119][Stage 7:=====================================>                 (81 + 38) / 119][Stage 7:===========================================>           (94 + 25) / 119][Stage 7:================================================>     (106 + 13) / 119][Stage 7:=====================================================> (115 + 4) / 119][Stage 7:=====================================================> (116 + 3) / 119][Stage 7:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.72475094 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 29 AND partitionZIndex<=236", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=236,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.504098735 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 8:==================================>                    (70 + 43) / 113][Stage 8:======================================>                (79 + 34) / 113][Stage 8:============================================>          (91 + 22) / 113][Stage 8:===============================================>       (98 + 15) / 113][Stage 8:===================================================>   (105 + 8) / 113][Stage 8:=====================================================> (109 + 4) / 113]                                                                                [Stage 9:====================================>                  (75 + 39) / 114][Stage 9:=======================================>               (81 + 33) / 114][Stage 9:=========================================>             (86 + 28) / 114][Stage 9:===========================================>           (91 + 23) / 114][Stage 9:==================================================>    (105 + 9) / 114][Stage 9:====================================================>  (109 + 5) / 114][Stage 9:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.833172705 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 50 AND partitionZIndex<=157", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=150 AND partitionZIndex<=157,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.602930166 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (60 + 60) / 120][Stage 10:===========================>                          (62 + 58) / 120][Stage 10:===================================>                  (79 + 41) / 120][Stage 10:=========================================>            (92 + 28) / 120][Stage 10:==============================================>      (105 + 15) / 120][Stage 10:===================================================>  (114 + 6) / 120]                                                                                [Stage 11:===========================>                          (62 + 59) / 121][Stage 11:===============================>                      (70 + 51) / 121][Stage 11:======================================>               (87 + 34) / 121][Stage 11:=============================================>       (103 + 18) / 121][Stage 11:================================================>    (110 + 11) / 121][Stage 11:==================================================>   (114 + 7) / 121][Stage 11:=====================================================>(119 + 2) / 121][Stage 11:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.536690594 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 4 AND partitionZIndex<=31", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=24 AND partitionZIndex<=31,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.529418959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 12:================================>                     (72 + 46) / 118][Stage 12:=================================>                    (73 + 45) / 118][Stage 12:====================================>                 (80 + 38) / 118][Stage 12:=============================================>        (99 + 19) / 118][Stage 12:================================================>    (108 + 10) / 118][Stage 12:====================================================> (115 + 3) / 118]                                                                                [Stage 13:=================================>                    (73 + 46) / 119][Stage 13:=================================>                    (74 + 45) / 119][Stage 13:======================================>               (84 + 35) / 119][Stage 13:=============================================>       (103 + 16) / 119][Stage 13:================================================>    (109 + 10) / 119][Stage 13:====================================================> (116 + 3) / 119][Stage 13:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.391899159 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 32 AND partitionZIndex<=239", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=239,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.48968404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 14:================================>                     (72 + 46) / 118][Stage 14:==================================>                   (75 + 43) / 118][Stage 14:=====================================>                (83 + 35) / 118][Stage 14:============================================>         (98 + 20) / 118][Stage 14:==============================================>      (103 + 15) / 118][Stage 14:==================================================>   (110 + 8) / 118][Stage 14:===================================================>  (112 + 6) / 118][Stage 14:=====================================================>(116 + 2) / 118]                                                                                [Stage 15:================================>                     (72 + 47) / 119][Stage 15:===================================>                  (78 + 41) / 119][Stage 15:=====================================>                (82 + 37) / 119][Stage 15:==========================================>           (94 + 25) / 119][Stage 15:=============================================>       (103 + 16) / 119][Stage 15:================================================>    (109 + 10) / 119][Stage 15:=====================================================>(117 + 2) / 119][Stage 15:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.74879185 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 3 AND partitionZIndex<=40", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=33 AND partitionZIndex<=40,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.587651593 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (60 + 60) / 120][Stage 16:=============================>                        (66 + 54) / 120][Stage 16:=======================================>              (87 + 33) / 120][Stage 16:===============================================>     (107 + 13) / 120][Stage 16:=====================================================>(118 + 2) / 120]                                                                                [Stage 17:============================>                         (63 + 58) / 121][Stage 17:===============================>                      (71 + 50) / 121][Stage 17:=====================================>                (84 + 37) / 121][Stage 17:============================================>         (99 + 22) / 121][Stage 17:==================================================>   (113 + 8) / 121][Stage 17:===================================================>  (116 + 5) / 121][Stage 17:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.837882268 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 65 AND partitionZIndex<=172", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=165 AND partitionZIndex<=172,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.437313881 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 18:======================================>               (83 + 32) / 115][Stage 18:==========================================>           (90 + 25) / 115][Stage 18:================================================>    (105 + 10) / 115][Stage 18:===================================================>  (110 + 5) / 115][Stage 18:=====================================================>(113 + 2) / 115]                                                                                [Stage 19:=======================================>              (85 + 31) / 116][Stage 19:============================================>         (96 + 20) / 116][Stage 19:================================================>    (106 + 10) / 116][Stage 19:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.193602533 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 1 AND partitionZIndex<=68", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=61 AND partitionZIndex<=68,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.512533889 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 20:=================================>                    (71 + 44) / 115][Stage 20:=======================================>              (84 + 31) / 115][Stage 20:=============================================>        (97 + 18) / 115][Stage 20:===================================================>  (110 + 5) / 115]                                                                                [Stage 21:===============================>                      (68 + 48) / 116][Stage 21:====================================>                 (78 + 38) / 116][Stage 21:========================================>             (88 + 28) / 116][Stage 21:===============================================>     (105 + 11) / 116][Stage 21:===================================================>  (111 + 5) / 116][Stage 21:====================================================> (113 + 3) / 116][Stage 21:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.989888442 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 91 AND partitionZIndex<=198", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=191 AND partitionZIndex<=198,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.461762806 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 22:====================================>                 (77 + 36) / 113][Stage 22:===========================================>          (90 + 23) / 113][Stage 22:===============================================>     (101 + 12) / 113][Stage 22:===================================================>  (108 + 5) / 113][Stage 22:=====================================================>(112 + 1) / 113]                                                                                [Stage 23:==================================>                   (73 + 41) / 114][Stage 23:=========================================>            (87 + 27) / 114][Stage 23:===========================================>          (92 + 22) / 114][Stage 23:================================================>    (104 + 10) / 114][Stage 23:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.187209855 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=3 6 AND partitionZIndex<=43", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=36 AND partitionZIndex<=43,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.507054219 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 24:==============================>                       (66 + 49) / 115][Stage 24:================================>                     (70 + 45) / 115][Stage 24:=======================================>              (85 + 30) / 115][Stage 24:==============================================>       (98 + 17) / 115][Stage 24:====================================================> (111 + 4) / 115]                                                                                [Stage 25:==================================>                   (75 + 41) / 116][Stage 25:=========================================>            (90 + 26) / 116][Stage 25:==============================================>      (101 + 15) / 116][Stage 25:================================================>    (106 + 10) / 116][Stage 25:==================================================>   (109 + 7) / 116][Stage 25:====================================================> (112 + 4) / 116][Stage 25:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 8.919350133 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 7 AND partitionZIndex<=54", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=54,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.551440855 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 26:==========================>                           (60 + 61) / 121][Stage 26:==============================>                       (68 + 53) / 121][Stage 26:=====================================>                (83 + 38) / 121][Stage 26:==============================================>      (106 + 15) / 121][Stage 26:====================================================> (117 + 4) / 121]                                                                                [Stage 27:==========================>                           (59 + 63) / 122][Stage 27:===============================>                      (72 + 50) / 122][Stage 27:========================================>             (92 + 30) / 122][Stage 27:==============================================>      (107 + 15) / 122][Stage 27:==================================================>   (114 + 8) / 122][Stage 27:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.483093454 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 7 AND partitionZIndex<=74", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=74,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402454799 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 28:=====================================>                (79 + 36) / 115][Stage 28:======================================>               (83 + 32) / 115][Stage 28:==========================================>           (91 + 24) / 115][Stage 28:==================================================>   (107 + 8) / 115][Stage 28:====================================================> (112 + 3) / 115]                                                                                [Stage 29:========================================>             (88 + 28) / 116][Stage 29:==========================================>           (91 + 25) / 116][Stage 29:================================================>    (106 + 10) / 116][Stage 29:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.95204381 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 64 AND partitionZIndex<=171", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=171,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.47548739 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===============================>                      (68 + 47) / 115][Stage 30:==========================================>           (90 + 25) / 115][Stage 30:================================================>    (105 + 10) / 115][Stage 30:====================================================> (111 + 4) / 115][Stage 30:=====================================================>(114 + 1) / 115]                                                                                [Stage 31:=================================>                    (71 + 45) / 116][Stage 31:====================================>                 (79 + 37) / 116][Stage 31:============================================>         (95 + 21) / 116][Stage 31:==================================================>   (109 + 7) / 116]                                                                                Time elapsed: 2.997242948 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 30 AND partitionZIndex<=237", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=230 AND partitionZIndex<=237,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.440447023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 32:================================>                     (72 + 46) / 118][Stage 32:=====================================>                (81 + 37) / 118][Stage 32:============================================>         (97 + 21) / 118][Stage 32:===================================================>  (112 + 6) / 118]                                                                                [Stage 33:=================================>                    (74 + 45) / 119][Stage 33:====================================>                 (81 + 38) / 119][Stage 33:=========================================>            (91 + 28) / 119][Stage 33:==================================================>   (112 + 7) / 119][Stage 33:=====================================================>(117 + 2) / 119][Stage 33:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.131356743 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 4 AND partitionZIndex<=21", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=14 AND partitionZIndex<=21,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.517792569 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 34:============================>                         (59 + 54) / 113][Stage 34:================================>                     (69 + 44) / 113][Stage 34:===========================================>          (90 + 23) / 113][Stage 34:===============================================>     (102 + 11) / 113][Stage 34:====================================================> (110 + 3) / 113][Stage 34:=====================================================>(111 + 2) / 113]                                                                                [Stage 35:============================>                         (61 + 53) / 114][Stage 35:=================================>                    (71 + 43) / 114][Stage 35:============================================>         (93 + 21) / 114][Stage 35:====================================================> (111 + 3) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.734294414 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 98 AND partitionZIndex<=205", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=205,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.457609719 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 36:=================================>                    (74 + 44) / 118][Stage 36:=====================================>                (82 + 36) / 118][Stage 36:========================================>             (88 + 30) / 118][Stage 36:================================================>    (108 + 10) / 118][Stage 36:====================================================> (114 + 4) / 118]                                                                                [Stage 37:==================================>                   (75 + 44) / 119][Stage 37:========================================>             (89 + 30) / 119][Stage 37:===========================================>          (96 + 23) / 119][Stage 37:================================================>    (109 + 10) / 119][Stage 37:====================================================> (116 + 3) / 119][Stage 37:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.182676924 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 94 AND partitionZIndex<=201", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=201,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.537375183 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 38:==========================>                           (60 + 61) / 121][Stage 38:============================>                         (64 + 57) / 121][Stage 38:===================================>                  (80 + 41) / 121][Stage 38:===========================================>         (100 + 21) / 121][Stage 38:===================================================>  (115 + 6) / 121]                                                                                [Stage 39:===========================>                          (63 + 59) / 122][Stage 39:================================>                     (73 + 49) / 122][Stage 39:===================================>                  (80 + 42) / 122][Stage 39:==============================================>      (107 + 15) / 122][Stage 39:=====================================================>(120 + 2) / 122][Stage 39:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.18403095 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 9 AND partitionZIndex<=96", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=96,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.469244064 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 40:=================================>                    (71 + 44) / 115][Stage 40:========================================>             (87 + 28) / 115][Stage 40:================================================>    (105 + 10) / 115][Stage 40:=====================================================>(114 + 1) / 115]                                                                                [Stage 41:================================>                     (69 + 47) / 116][Stage 41:======================================>               (83 + 33) / 116][Stage 41:=============================================>        (97 + 19) / 116][Stage 41:==================================================>   (109 + 7) / 116][Stage 41:====================================================> (112 + 4) / 116][Stage 41:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.992011968 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 28 AND partitionZIndex<=235", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=228 AND partitionZIndex<=235,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.449064715 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 42:=================================>                    (70 + 43) / 113][Stage 42:=========================================>            (86 + 27) / 113][Stage 42:==============================================>       (98 + 15) / 113][Stage 42:===================================================>  (107 + 6) / 113][Stage 42:=====================================================>(112 + 1) / 113]                                                                                [Stage 43:===================================>                  (75 + 39) / 114][Stage 43:===========================================>          (91 + 23) / 114][Stage 43:=============================================>        (97 + 17) / 114][Stage 43:====================================================> (110 + 4) / 114][Stage 43:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.174300302 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 10 AND partitionZIndex<=217", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=217,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.416068304 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 44:======================================>               (82 + 33) / 115][Stage 44:=========================================>            (89 + 26) / 115][Stage 44:=================================================>    (106 + 9) / 115][Stage 44:===================================================>  (110 + 5) / 115]                                                                                [Stage 45:========================================>             (87 + 29) / 116][Stage 45:=============================================>        (97 + 19) / 116][Stage 45:================================================>    (106 + 10) / 116][Stage 45:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.948181062 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 90 AND partitionZIndex<=197", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=197,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.542056719 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 46:===========================>                          (58 + 55) / 113][Stage 46:============================>                         (60 + 53) / 113][Stage 46:=================================>                    (70 + 43) / 113][Stage 46:==========================================>           (89 + 24) / 113][Stage 46:===================================================>  (108 + 5) / 113]                                                                                [Stage 47:============================>                         (61 + 53) / 114][Stage 47:===================================>                  (74 + 40) / 114][Stage 47:==============================================>       (98 + 16) / 114][Stage 47:==================================================>   (106 + 8) / 114][Stage 47:====================================================> (111 + 3) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.992408225 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 58 AND partitionZIndex<=165", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=165,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.484170286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==========================>                           (60 + 61) / 121][Stage 48:===========================>                          (62 + 59) / 121][Stage 48:=================================>                    (74 + 47) / 121][Stage 48:===========================================>          (97 + 24) / 121][Stage 48:====================================================> (118 + 3) / 121]                                                                                [Stage 49:===========================>                          (62 + 60) / 122][Stage 49:=================================>                    (75 + 47) / 122][Stage 49:==========================================>           (95 + 27) / 122][Stage 49:==================================================>   (113 + 9) / 122][Stage 49:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.051913886 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 02 AND partitionZIndex<=109", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=102 AND partitionZIndex<=109,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.516802819 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (61 + 59) / 120][Stage 50:==============================>                       (68 + 52) / 120][Stage 50:=====================================>                (83 + 37) / 120][Stage 50:=============================================>       (104 + 16) / 120][Stage 50:====================================================> (117 + 3) / 120]                                                                                [Stage 51:=============================>                        (65 + 56) / 121][Stage 51:===================================>                  (79 + 42) / 121][Stage 51:=============================================>       (103 + 18) / 121][Stage 51:====================================================> (118 + 3) / 121][Stage 51:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.553579797 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 9 AND partitionZIndex<=36", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=29 AND partitionZIndex<=36,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.386095052 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 52:======================================>               (81 + 34) / 115][Stage 52:=======================================>              (85 + 30) / 115][Stage 52:============================================>         (94 + 21) / 115][Stage 52:==================================================>   (108 + 7) / 115][Stage 52:=====================================================>(114 + 1) / 115]                                                                                [Stage 53:=====================================>                (81 + 35) / 116][Stage 53:========================================>             (88 + 28) / 116][Stage 53:==============================================>      (101 + 15) / 116][Stage 53:=================================================>    (107 + 9) / 116][Stage 53:===================================================>  (110 + 6) / 116][Stage 53:=====================================================>(114 + 2) / 116][Stage 53:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.51086363 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 68 AND partitionZIndex<=175", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=175,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.411050416 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 54:=====================================>                (78 + 35) / 113][Stage 54:========================================>             (85 + 28) / 113][Stage 54:==============================================>       (98 + 15) / 113][Stage 54:===================================================>  (108 + 5) / 113]                                                                                [Stage 55:=======================================>              (83 + 31) / 114][Stage 55:===========================================>          (91 + 23) / 114][Stage 55:==================================================>   (106 + 8) / 114][Stage 55:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.010159443 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 4 AND partitionZIndex<=61", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=54 AND partitionZIndex<=61,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398578995 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===================================>                  (75 + 38) / 113][Stage 56:==========================================>           (89 + 24) / 113][Stage 56:==============================================>       (97 + 16) / 113][Stage 56:===================================================>  (108 + 5) / 113][Stage 56:=====================================================>(112 + 1) / 113]                                                                                [Stage 57:====================================>                 (77 + 37) / 114][Stage 57:=============================================>        (95 + 19) / 114][Stage 57:==============================================>      (101 + 13) / 114][Stage 57:================================================>    (104 + 10) / 114][Stage 57:====================================================> (110 + 4) / 114][Stage 57:====================================================> (111 + 3) / 114][Stage 57:=====================================================>(112 + 2) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.200737231 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 04 AND partitionZIndex<=211", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=204 AND partitionZIndex<=211,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.449491222 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 58:===========================>                          (60 + 60) / 120][Stage 58:==============================>                       (67 + 53) / 120][Stage 58:===================================>                  (78 + 42) / 120][Stage 58:=============================================>       (102 + 18) / 120][Stage 58:=====================================================>(118 + 2) / 120]                                                                                [Stage 59:=============================>                        (65 + 56) / 121][Stage 59:=================================>                    (75 + 46) / 121][Stage 59:=========================================>            (92 + 29) / 121][Stage 59:==================================================>   (113 + 8) / 121][Stage 59:=====================================================>(119 + 2) / 121][Stage 59:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.518870072 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 1 AND partitionZIndex<=48", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=41 AND partitionZIndex<=48,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.411968578 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 60:=======================================>              (85 + 30) / 115][Stage 60:===========================================>          (93 + 22) / 115][Stage 60:=================================================>    (106 + 9) / 115][Stage 60:====================================================> (111 + 4) / 115]                                                                                [Stage 61:========================================>             (86 + 30) / 116][Stage 61:==========================================>           (91 + 25) / 116][Stage 61:=============================================>        (98 + 18) / 116][Stage 61:================================================>    (106 + 10) / 116][Stage 61:===================================================>  (111 + 5) / 116][Stage 61:====================================================> (113 + 3) / 116][Stage 61:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 6.182872413 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 9 AND partitionZIndex<=26", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=26,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.364545568 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 62:========================================>             (86 + 29) / 115][Stage 62:===========================================>          (92 + 23) / 115][Stage 62:==================================================>   (107 + 8) / 115][Stage 62:=====================================================>(114 + 1) / 115]                                                                                [Stage 63:======================================>               (83 + 33) / 116][Stage 63:=========================================>            (89 + 27) / 116][Stage 63:==============================================>      (102 + 14) / 116][Stage 63:==================================================>   (109 + 7) / 116][Stage 63:====================================================> (112 + 4) / 116][Stage 63:====================================================> (113 + 3) / 116][Stage 63:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.433120607 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 3 AND partitionZIndex<=20", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=13 AND partitionZIndex<=20,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.509659358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (58 + 55) / 113][Stage 64:=================================>                    (70 + 43) / 113][Stage 64:=======================================>              (83 + 30) / 113][Stage 64:==============================================>       (98 + 15) / 113][Stage 64:=====================================================>(112 + 1) / 113]                                                                                [Stage 65:============================>                         (60 + 54) / 114][Stage 65:===================================>                  (74 + 40) / 114][Stage 65:==============================================>       (98 + 16) / 114][Stage 65:====================================================> (110 + 4) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.09528223 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 56 AND partitionZIndex<=163", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=163,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.398245542 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 66:===================================>                  (75 + 38) / 113][Stage 66:=========================================>            (86 + 27) / 113][Stage 66:===============================================>      (99 + 14) / 113][Stage 66:===================================================>  (108 + 5) / 113][Stage 66:=====================================================>(112 + 1) / 113]                                                                                [Stage 67:====================================>                 (77 + 37) / 114][Stage 67:========================================>             (85 + 29) / 114][Stage 67:=================================================>    (105 + 9) / 114][Stage 67:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.322062955 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 73 AND partitionZIndex<=180", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=180,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.411984762 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 68:==============================>                       (65 + 50) / 115][Stage 68:====================================>                 (77 + 38) / 115][Stage 68:============================================>         (95 + 20) / 115][Stage 68:==================================================>   (108 + 7) / 115][Stage 68:====================================================> (112 + 3) / 115]                                                                                [Stage 69:=====================================>                (81 + 35) / 116][Stage 69:=============================================>        (97 + 19) / 116][Stage 69:================================================>    (106 + 10) / 116][Stage 69:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.907429842 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 03 AND partitionZIndex<=210", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=210,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.439463883 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (60 + 60) / 120][Stage 70:==============================>                       (67 + 53) / 120][Stage 70:=======================================>              (87 + 33) / 120][Stage 70:================================================>    (109 + 11) / 120]                                                                                [Stage 71:===========================>                          (61 + 60) / 121][Stage 71:==============================>                       (68 + 53) / 121][Stage 71:=====================================>                (84 + 37) / 121][Stage 71:=============================================>       (105 + 16) / 121][Stage 71:====================================================> (118 + 3) / 121][Stage 71:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.304639343 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 54 AND partitionZIndex<=161", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=154 AND partitionZIndex<=161,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.436648708 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 72:=================================>                    (70 + 43) / 113][Stage 72:=======================================>              (83 + 30) / 113][Stage 72:===========================================>          (91 + 22) / 113][Stage 72:===============================================>     (101 + 12) / 113][Stage 72:==================================================>   (106 + 7) / 113]                                                                                [Stage 73:=======================================>              (84 + 30) / 114][Stage 73:==========================================>           (90 + 24) / 114][Stage 73:==============================================>      (100 + 14) / 114][Stage 73:===================================================>  (108 + 6) / 114][Stage 73:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.285653666 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 0 AND partitionZIndex<=67", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=60 AND partitionZIndex<=67,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.384116345 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 74:=================================>                    (70 + 43) / 113][Stage 74:======================================>               (81 + 32) / 113][Stage 74:=============================================>        (95 + 18) / 113][Stage 74:================================================>    (103 + 10) / 113][Stage 74:===================================================>  (108 + 5) / 113][Stage 74:====================================================> (110 + 3) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:=====================================>                (79 + 35) / 114][Stage 75:============================================>         (94 + 20) / 114][Stage 75:===============================================>     (102 + 12) / 114][Stage 75:==================================================>   (106 + 8) / 114][Stage 75:===================================================>  (108 + 6) / 114][Stage 75:=====================================================>(112 + 2) / 114][Stage 75:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.172125525 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 1 AND partitionZIndex<=18", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=11 AND partitionZIndex<=18,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.439454286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 76:============================>                         (60 + 53) / 113][Stage 76:==================================>                   (72 + 41) / 113][Stage 76:============================================>         (93 + 20) / 113][Stage 76:=================================================>    (104 + 9) / 113][Stage 76:=====================================================>(112 + 1) / 113]                                                                                [Stage 77:=============================>                        (62 + 52) / 114][Stage 77:====================================>                 (78 + 36) / 114][Stage 77:===========================================>          (92 + 22) / 114][Stage 77:==================================================>   (107 + 7) / 114][Stage 77:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 6.008569291 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 41 AND partitionZIndex<=148", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=148,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.421919292 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (59 + 54) / 113][Stage 78:===================================>                  (74 + 39) / 113][Stage 78:============================================>         (94 + 19) / 113][Stage 78:====================================================> (109 + 4) / 113]                                                                                [Stage 79:=============================>                        (62 + 52) / 114][Stage 79:====================================>                 (78 + 36) / 114][Stage 79:=============================================>        (97 + 17) / 114][Stage 79:====================================================> (111 + 3) / 114][Stage 79:=====================================================>(112 + 2) / 114][Stage 79:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.238978034 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 48 AND partitionZIndex<=155", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=148 AND partitionZIndex<=155,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.379052895 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 80:================================>                     (72 + 46) / 118][Stage 80:==================================>                   (75 + 43) / 118][Stage 80:========================================>             (89 + 29) / 118][Stage 80:===============================================>     (106 + 12) / 118][Stage 80:===================================================>  (113 + 5) / 118]                                                                                [Stage 81:=================================>                    (73 + 46) / 119][Stage 81:====================================>                 (80 + 39) / 119][Stage 81:============================================>         (99 + 20) / 119][Stage 81:==================================================>   (111 + 8) / 119][Stage 81:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.266465382 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 63 AND partitionZIndex<=170", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=163 AND partitionZIndex<=170,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402636761 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 82:=================================>                    (72 + 43) / 115][Stage 82:===========================================>          (92 + 23) / 115][Stage 82:=================================================>    (106 + 9) / 115]                                                                                [Stage 83:=================================>                    (72 + 44) / 116][Stage 83:=======================================>              (85 + 31) / 116][Stage 83:===============================================>     (105 + 11) / 116][Stage 83:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.771320838 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 20 AND partitionZIndex<=127", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=120 AND partitionZIndex<=127,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.38315661 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 84:>                                                       (0 + 0) / 118][Stage 84:================================>                     (72 + 46) / 118][Stage 84:====================================>                 (79 + 39) / 118][Stage 84:============================================>        (100 + 18) / 118][Stage 84:==================================================>   (111 + 7) / 118]                                                                                [Stage 85:=================================>                    (74 + 45) / 119][Stage 85:=====================================>                (83 + 36) / 119][Stage 85:============================================>        (100 + 19) / 119][Stage 85:===================================================>  (114 + 5) / 119][Stage 85:=====================================================>(117 + 2) / 119][Stage 85:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.664807 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 35 AND partitionZIndex<=242", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=242,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.395688512 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 86:===============================>                      (68 + 47) / 115][Stage 86:=====================================>                (80 + 35) / 115][Stage 86:=============================================>        (96 + 19) / 115][Stage 86:====================================================> (112 + 3) / 115]                                                                                [Stage 87:====================================>                 (79 + 37) / 116][Stage 87:===========================================>          (94 + 22) / 116][Stage 87:=================================================>    (107 + 9) / 116][Stage 87:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.753757912 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 23 AND partitionZIndex<=230", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=223 AND partitionZIndex<=230,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.429494044 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (60 + 60) / 120][Stage 88:==============================>                       (68 + 52) / 120][Stage 88:========================================>             (90 + 30) / 120][Stage 88:==============================================>      (106 + 14) / 120]                                                                                [Stage 89:===========================>                          (61 + 60) / 121][Stage 89:===============================>                      (71 + 50) / 121][Stage 89:========================================>             (91 + 30) / 121][Stage 89:================================================>    (110 + 11) / 121][Stage 89:=====================================================>(119 + 2) / 121][Stage 89:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.291694794 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 7 AND partitionZIndex<=94", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=94,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.353564275 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 90:======================================>               (81 + 34) / 115][Stage 90:==========================================>           (91 + 24) / 115][Stage 90:==============================================>      (100 + 15) / 115][Stage 90:=====================================================>(113 + 2) / 115]                                                                                [Stage 91:=======================================>              (84 + 32) / 116][Stage 91:===========================================>          (93 + 23) / 116][Stage 91:=================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.464089515 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 39 AND partitionZIndex<=246", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=239 AND partitionZIndex<=246,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.376750021 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 92:=====================================>                (79 + 34) / 113][Stage 92:===========================================>          (90 + 23) / 113][Stage 92:===============================================>     (102 + 11) / 113][Stage 92:==================================================>   (106 + 7) / 113][Stage 92:===================================================>  (108 + 5) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:====================================>                 (76 + 38) / 114][Stage 93:=========================================>            (87 + 27) / 114][Stage 93:==============================================>       (99 + 15) / 114][Stage 93:==================================================>   (106 + 8) / 114][Stage 93:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.224839832 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 06 AND partitionZIndex<=113", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=113,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.36404968 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 94:=====================================>                (79 + 34) / 113][Stage 94:==========================================>           (88 + 25) / 113][Stage 94:================================================>    (103 + 10) / 113][Stage 94:====================================================> (110 + 3) / 113]                                                                                [Stage 95:====================================>                 (76 + 38) / 114][Stage 95:========================================>             (86 + 28) / 114][Stage 95:==============================================>       (99 + 15) / 114][Stage 95:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.955444902 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 35 AND partitionZIndex<=142", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=135 AND partitionZIndex<=142,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.359076128 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 96:=======================================>              (84 + 31) / 115][Stage 96:=========================================>            (88 + 27) / 115][Stage 96:==============================================>      (101 + 14) / 115][Stage 96:=====================================================>(113 + 2) / 115]                                                                                [Stage 97:=======================================>              (84 + 32) / 116][Stage 97:========================================>             (87 + 29) / 116][Stage 97:==============================================>      (101 + 15) / 116][Stage 97:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 2.734433641 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 21 AND partitionZIndex<=228", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=221 AND partitionZIndex<=228,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.346050767 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 98:======================================>               (82 + 33) / 115][Stage 98:============================================>         (94 + 21) / 115][Stage 98:==================================================>   (107 + 8) / 115][Stage 98:====================================================> (112 + 3) / 115][Stage 98:=====================================================>(114 + 1) / 115]                                                                                [Stage 99:=======================================>              (84 + 32) / 116][Stage 99:==========================================>           (92 + 24) / 116][Stage 99:===============================================>     (105 + 11) / 116][Stage 99:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.796686595 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 5 AND partitionZIndex<=92", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=92,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.35853759 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===================================>                 (75 + 38) / 113][Stage 100:======================================>              (82 + 31) / 113][Stage 100:==========================================>          (91 + 22) / 113][Stage 100:=================================================>   (105 + 8) / 113][Stage 100:====================================================>(111 + 2) / 113]                                                                                [Stage 101:====================================>                (78 + 36) / 114][Stage 101:=======================================>             (86 + 28) / 114][Stage 101:============================================>        (96 + 18) / 114][Stage 101:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.044282867 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 26 AND partitionZIndex<=133", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=126 AND partitionZIndex<=133,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.40799546 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 60) / 120][Stage 102:==============================>                      (70 + 50) / 120][Stage 102:=====================================>               (86 + 34) / 120][Stage 102:==============================================>     (107 + 13) / 120][Stage 102:====================================================>(119 + 1) / 120]                                                                                [Stage 103:==========================>                          (61 + 60) / 121][Stage 103:=============================>                       (68 + 53) / 121][Stage 103:====================================>                (84 + 37) / 121][Stage 103:==============================================>     (108 + 13) / 121][Stage 103:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.679430329 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 0 AND partitionZIndex<=87", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=87,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.38043258 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 104:==============================>                      (66 + 49) / 115][Stage 104:====================================>                (79 + 36) / 115][Stage 104:=========================================>           (90 + 25) / 115][Stage 104:=============================================>       (99 + 16) / 115][Stage 104:===================================================> (111 + 4) / 115]                                                                                [Stage 105:====================================>                (80 + 36) / 116][Stage 105:=========================================>           (91 + 25) / 116][Stage 105:==============================================>     (104 + 12) / 116][Stage 105:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.994975567 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 47 AND partitionZIndex<=154", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=147 AND partitionZIndex<=154,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.489267486 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 106:==================================>                  (75 + 40) / 115][Stage 106:=========================================>           (89 + 26) / 115][Stage 106:===============================================>    (104 + 11) / 115][Stage 106:===================================================> (111 + 4) / 115]                                                                                [Stage 107:===============================>                     (68 + 48) / 116][Stage 107:===================================>                 (78 + 38) / 116][Stage 107:===========================================>         (95 + 21) / 116][Stage 107:================================================>    (107 + 9) / 116]                                                                                Time elapsed: 2.80577554 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 8 AND partitionZIndex<=95", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=95,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.434647184 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 108:==========================>                          (60 + 61) / 121][Stage 108:===========================>                         (62 + 59) / 121][Stage 108:===================================>                 (81 + 40) / 121][Stage 108:==============================================>     (108 + 13) / 121][Stage 108:====================================================>(120 + 1) / 121]                                                                                [Stage 109:==========================>                          (61 + 61) / 122][Stage 109:==========================>                          (62 + 60) / 122][Stage 109:==================================>                  (79 + 43) / 122][Stage 109:==========================================>          (98 + 24) / 122][Stage 109:=================================================>   (115 + 7) / 122][Stage 109:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.688002523 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 00 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.399636709 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (59 + 54) / 113][Stage 110:==============================>                      (65 + 48) / 113][Stage 110:=====================================>               (80 + 33) / 113][Stage 110:==============================================>     (102 + 11) / 113][Stage 110:====================================================>(111 + 2) / 113]                                                                                [Stage 111:===========================>                         (59 + 55) / 114][Stage 111:=============================>                       (63 + 51) / 114][Stage 111:=====================================>               (81 + 33) / 114][Stage 111:=============================================>       (98 + 16) / 114][Stage 111:===================================================> (110 + 4) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.750010492 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 1 AND partitionZIndex<=28", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=28,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.376977133 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 112:================================>                    (72 + 46) / 118][Stage 112:==================================>                  (77 + 41) / 118][Stage 112:====================================>                (81 + 37) / 118][Stage 112:===========================================>         (97 + 21) / 118][Stage 112:=================================================>   (111 + 7) / 118][Stage 112:====================================================>(116 + 2) / 118]                                                                                [Stage 113:================================>                    (73 + 46) / 119][Stage 113:=================================>                   (75 + 44) / 119][Stage 113:====================================>                (82 + 37) / 119][Stage 113:======================================>              (87 + 32) / 119][Stage 113:===============================================>    (108 + 11) / 119][Stage 113:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.832036699 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 89 AND partitionZIndex<=196", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=196,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.417285046 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (62 + 58) / 120][Stage 114:==============================>                      (70 + 50) / 120][Stage 114:===========================================>        (100 + 20) / 120][Stage 114:===================================================> (116 + 4) / 120]                                                                                [Stage 115:==========================>                          (61 + 60) / 121][Stage 115:=============================>                       (68 + 53) / 121][Stage 115:====================================>                (84 + 37) / 121][Stage 115:=============================================>      (107 + 14) / 121][Stage 115:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.057677479 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 37 AND partitionZIndex<=244", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=237 AND partitionZIndex<=244,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.343544559 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 116:====================================>                (80 + 35) / 115][Stage 116:========================================>            (87 + 28) / 115][Stage 116:==============================================>     (102 + 13) / 115][Stage 116:====================================================>(114 + 1) / 115]                                                                                [Stage 117:======================================>              (84 + 32) / 116][Stage 117:=========================================>           (91 + 25) / 116][Stage 117:==============================================>     (104 + 12) / 116]                                                                                Time elapsed: 2.446632445 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 51 AND partitionZIndex<=158", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=151 AND partitionZIndex<=158,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.351895557 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 118:=====================================>               (80 + 33) / 113][Stage 118:==========================================>          (90 + 23) / 113][Stage 118:================================================>    (104 + 9) / 113][Stage 118:====================================================>(111 + 2) / 113]                                                                                [Stage 119:==================================>                  (75 + 39) / 114][Stage 119:=========================================>           (89 + 25) / 114][Stage 119:=============================================>       (97 + 17) / 114][Stage 119:==================================================>  (109 + 5) / 114][Stage 119:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.893745806 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 66 AND partitionZIndex<=173", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=166 AND partitionZIndex<=173,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.346344339 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 120:=======================================>             (86 + 29) / 115][Stage 120:============================================>        (96 + 19) / 115][Stage 120:================================================>    (106 + 9) / 115][Stage 120:====================================================>(113 + 2) / 115]                                                                                [Stage 121:=====================================>               (83 + 33) / 116][Stage 121:==========================================>          (94 + 22) / 116][Stage 121:===============================================>    (106 + 10) / 116][Stage 121:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.994311968 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 33 AND partitionZIndex<=240", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=240,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.413733846 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 61) / 121][Stage 122:============================>                        (66 + 55) / 121][Stage 122:=================================>                   (77 + 44) / 121][Stage 122:==========================================>         (100 + 21) / 121]                                                                                [Stage 123:==========================>                          (61 + 61) / 122][Stage 123:=============================>                       (68 + 54) / 122][Stage 123:========================================>            (93 + 29) / 122][Stage 123:==============================================>     (110 + 12) / 122][Stage 123:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.757135912 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 1 AND partitionZIndex<=98", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=91 AND partitionZIndex<=98,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.369408814 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 124:==============================>                      (66 + 49) / 115][Stage 124:=====================================>               (81 + 34) / 115][Stage 124:============================================>        (97 + 18) / 115][Stage 124:=================================================>   (107 + 8) / 115][Stage 124:====================================================>(113 + 2) / 115]                                                                                [Stage 125:===============================>                     (68 + 48) / 116][Stage 125:=====================================>               (81 + 35) / 116][Stage 125:============================================>        (97 + 19) / 116][Stage 125:==================================================>  (111 + 5) / 116][Stage 125:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.992497409 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 69 AND partitionZIndex<=176", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=176,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39806043 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 61) / 121][Stage 126:===============================>                     (72 + 49) / 121][Stage 126:=======================================>             (90 + 31) / 121][Stage 126:=================================================>   (112 + 9) / 121]                                                                                [Stage 127:==========================>                          (61 + 61) / 122][Stage 127:==============================>                      (71 + 51) / 122][Stage 127:===================================>                 (82 + 40) / 122][Stage 127:============================================>       (105 + 17) / 122][Stage 127:====================================================>(120 + 2) / 122][Stage 127:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.915020164 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 03 AND partitionZIndex<=110", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=103 AND partitionZIndex<=110,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.378168953 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 128:=============================>                       (63 + 50) / 113][Stage 128:====================================>                (77 + 36) / 113][Stage 128:=============================================>       (97 + 16) / 113][Stage 128:====================================================>(112 + 1) / 113]                                                                                [Stage 129:===========================>                         (59 + 55) / 114][Stage 129:==============================>                      (66 + 48) / 114][Stage 129:=========================================>           (89 + 25) / 114][Stage 129:================================================>    (105 + 9) / 114][Stage 129:===================================================> (111 + 3) / 114][Stage 129:====================================================>(112 + 2) / 114][Stage 129:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.527065156 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 25 AND partitionZIndex<=232", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=225 AND partitionZIndex<=232,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.372233554 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 130:================================>                    (72 + 46) / 118][Stage 130:=================================>                   (75 + 43) / 118][Stage 130:=======================================>             (88 + 30) / 118][Stage 130:==============================================>     (105 + 13) / 118][Stage 130:====================================================>(116 + 2) / 118]                                                                                [Stage 131:================================>                    (74 + 45) / 119][Stage 131:=====================================>               (84 + 35) / 119][Stage 131:===========================================>        (100 + 19) / 119][Stage 131:==================================================>  (113 + 6) / 119]                                                                                Time elapsed: 3.414325193 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 24 AND partitionZIndex<=131", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=131,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402309589 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (59 + 54) / 113][Stage 132:===============================>                     (68 + 45) / 113][Stage 132:============================================>        (94 + 19) / 113][Stage 132:=================================================>   (106 + 7) / 113][Stage 132:====================================================>(112 + 1) / 113]                                                                                [Stage 133:===========================>                         (59 + 55) / 114][Stage 133:==============================>                      (66 + 48) / 114][Stage 133:======================================>              (82 + 32) / 114][Stage 133:==============================================>     (103 + 11) / 114][Stage 133:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.560888627 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 0 AND partitionZIndex<=97", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=90 AND partitionZIndex<=97,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.393501591 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (58 + 55) / 113][Stage 134:==============================>                      (64 + 49) / 113][Stage 134:=====================================>               (80 + 33) / 113][Stage 134:==============================================>     (101 + 12) / 113][Stage 134:===================================================> (109 + 4) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:===========================>                         (60 + 54) / 114][Stage 135:==============================>                      (65 + 49) / 114][Stage 135:=====================================>               (80 + 34) / 114][Stage 135:=============================================>      (100 + 14) / 114][Stage 135:===================================================> (110 + 4) / 114][Stage 135:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.042959442 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 3 AND partitionZIndex<=60", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=53 AND partitionZIndex<=60,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.351973877 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 136:====================================>                (78 + 35) / 113][Stage 136:========================================>            (87 + 26) / 113][Stage 136:=============================================>       (96 + 17) / 113][Stage 136:=================================================>   (105 + 8) / 113][Stage 136:====================================================>(111 + 2) / 113][Stage 136:====================================================>(112 + 1) / 113]                                                                                [Stage 137:====================================>                (78 + 36) / 114][Stage 137:=========================================>           (90 + 24) / 114][Stage 137:============================================>        (96 + 18) / 114][Stage 137:===============================================>    (104 + 10) / 114][Stage 137:===================================================> (111 + 3) / 114][Stage 137:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.280373246 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 87 AND partitionZIndex<=194", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=187 AND partitionZIndex<=194,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.377956713 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 138:=============================>                       (64 + 51) / 115][Stage 138:=====================================>               (81 + 34) / 115][Stage 138:============================================>        (96 + 19) / 115][Stage 138:===================================================> (111 + 4) / 115][Stage 138:====================================================>(114 + 1) / 115]                                                                                [Stage 139:===============================>                     (68 + 48) / 116][Stage 139:=====================================>               (82 + 34) / 116][Stage 139:==============================================>     (103 + 13) / 116][Stage 139:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.772581467 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 5 AND partitionZIndex<=62", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=55 AND partitionZIndex<=62,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.333010661 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 140:====================================>                (79 + 36) / 115][Stage 140:======================================>              (84 + 31) / 115][Stage 140:=========================================>           (91 + 24) / 115][Stage 140:===============================================>    (104 + 11) / 115][Stage 140:==================================================>  (109 + 6) / 115]                                                                                [Stage 141:=====================================>               (82 + 34) / 116][Stage 141:========================================>            (89 + 27) / 116][Stage 141:==============================================>     (103 + 13) / 116][Stage 141:=================================================>   (109 + 7) / 116][Stage 141:===================================================> (113 + 3) / 116][Stage 141:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.62297204 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 52 AND partitionZIndex<=159", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=159,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.382863252 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 142:===========================>                         (59 + 54) / 113][Stage 142:==============================>                      (64 + 49) / 113][Stage 142:======================================>              (82 + 31) / 113][Stage 142:=================================================>   (105 + 8) / 113]                                                                                [Stage 143:===========================>                         (59 + 55) / 114][Stage 143:==============================>                      (66 + 48) / 114][Stage 143:=========================================>           (89 + 25) / 114][Stage 143:==============================================>     (103 + 11) / 114][Stage 143:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.727467197 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 86 AND partitionZIndex<=193", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=186 AND partitionZIndex<=193,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39411757 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 144:==========================>                          (60 + 60) / 120][Stage 144:===========================>                         (62 + 58) / 120][Stage 144:===================================>                 (81 + 39) / 120][Stage 144:=============================================>      (104 + 16) / 120]                                                                                [Stage 145:==========================>                          (61 + 60) / 121][Stage 145:================================>                    (74 + 47) / 121][Stage 145:========================================>            (93 + 28) / 121][Stage 145:=================================================>   (112 + 9) / 121][Stage 145:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.394754017 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 23 AND partitionZIndex<=130", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=130,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.3345736 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 146:=====================================>               (81 + 34) / 115][Stage 146:=========================================>           (91 + 24) / 115][Stage 146:===============================================>    (105 + 10) / 115][Stage 146:==================================================>  (109 + 6) / 115][Stage 146:====================================================>(113 + 2) / 115]                                                                                [Stage 147:========================================>            (88 + 28) / 116][Stage 147:=============================================>      (101 + 15) / 116][Stage 147:==================================================>  (110 + 6) / 116][Stage 147:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.055944916 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8  AND partitionZIndex<=15", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=15,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.359561416 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 148:================================>                    (72 + 46) / 118][Stage 148:===================================>                 (78 + 40) / 118][Stage 148:=======================================>             (88 + 30) / 118][Stage 148:============================================>       (100 + 18) / 118][Stage 148:=================================================>   (110 + 8) / 118]                                                                                [Stage 149:================================>                    (74 + 45) / 119][Stage 149:====================================>                (81 + 38) / 119][Stage 149:==========================================>          (95 + 24) / 119][Stage 149:==============================================>     (107 + 12) / 119][Stage 149:==================================================>  (114 + 5) / 119][Stage 149:====================================================>(117 + 2) / 119][Stage 149:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.989721913 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 79 AND partitionZIndex<=186", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=179 AND partitionZIndex<=186,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.401961088 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 150:==========================>                          (60 + 60) / 120][Stage 150:============================>                        (64 + 56) / 120][Stage 150:==================================>                  (79 + 41) / 120][Stage 150:===========================================>         (98 + 22) / 120][Stage 150:====================================================>(118 + 2) / 120]                                                                                [Stage 151:===========================>                         (63 + 58) / 121][Stage 151:================================>                    (74 + 47) / 121][Stage 151:==========================================>         (100 + 21) / 121][Stage 151:=================================================>   (114 + 7) / 121][Stage 151:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.856768754 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 08 AND partitionZIndex<=115", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=108 AND partitionZIndex<=115,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.374592693 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 152:================================>                    (72 + 46) / 118][Stage 152:===================================>                 (79 + 39) / 118][Stage 152:==========================================>          (94 + 24) / 118][Stage 152:================================================>    (109 + 9) / 118][Stage 152:===================================================> (115 + 3) / 118]                                                                                [Stage 153:================================>                    (74 + 45) / 119][Stage 153:===================================>                 (80 + 39) / 119][Stage 153:========================================>            (91 + 28) / 119][Stage 153:==============================================>     (107 + 12) / 119][Stage 153:===================================================> (116 + 3) / 119][Stage 153:====================================================>(117 + 2) / 119][Stage 153:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.125900627 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 4 AND partitionZIndex<=71", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=64 AND partitionZIndex<=71,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.373811613 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 154:================================>                    (72 + 46) / 118][Stage 154:================================>                    (73 + 45) / 118][Stage 154:==================================>                  (77 + 41) / 118][Stage 154:=====================================>               (84 + 34) / 118][Stage 154:==========================================>          (94 + 24) / 118][Stage 154:===================================================> (114 + 4) / 118]                                                                                [Stage 155:================================>                    (73 + 46) / 119][Stage 155:=================================>                   (75 + 44) / 119][Stage 155:==================================>                  (77 + 42) / 119][Stage 155:=====================================>               (85 + 34) / 119][Stage 155:============================================>       (101 + 18) / 119][Stage 155:=================================================>   (112 + 7) / 119][Stage 155:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.841702017 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 09 AND partitionZIndex<=116", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=109 AND partitionZIndex<=116,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39503209 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 156:==========================>                          (60 + 60) / 120][Stage 156:=============================>                       (67 + 53) / 120][Stage 156:==================================>                  (79 + 41) / 120][Stage 156:=========================================>           (95 + 25) / 120][Stage 156:=================================================>   (113 + 7) / 120]                                                                                [Stage 157:===========================>                         (63 + 58) / 121][Stage 157:===============================>                     (72 + 49) / 121][Stage 157:========================================>            (93 + 28) / 121][Stage 157:=================================================>   (112 + 9) / 121][Stage 157:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.884734809 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 9 AND partitionZIndex<=106", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=106,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.368462254 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 158:===============================>                     (69 + 46) / 115][Stage 158:=======================================>             (86 + 29) / 115][Stage 158:=============================================>       (98 + 17) / 115][Stage 158:====================================================>(113 + 2) / 115]                                                                                [Stage 159:====================================>                (79 + 37) / 116][Stage 159:========================================>            (88 + 28) / 116][Stage 159:==============================================>     (104 + 12) / 116][Stage 159:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.887893867 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 05 AND partitionZIndex<=212", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=212,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.362032915 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 160:==================================>                  (76 + 42) / 118][Stage 160:=====================================>               (84 + 34) / 118][Stage 160:=============================================>      (104 + 14) / 118][Stage 160:====================================================>(116 + 2) / 118]                                                                                [Stage 161:================================>                    (73 + 46) / 119][Stage 161:===================================>                 (80 + 39) / 119][Stage 161:===========================================>         (97 + 22) / 119][Stage 161:==================================================>  (113 + 6) / 119][Stage 161:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.54414315 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=4 3 AND partitionZIndex<=50", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=50,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.400170489 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==========================>                          (60 + 61) / 121][Stage 162:============================>                        (65 + 56) / 121][Stage 162:===================================>                 (80 + 41) / 121][Stage 162:=============================================>      (105 + 16) / 121][Stage 162:====================================================>(119 + 2) / 121]                                                                                [Stage 163:==========================>                          (61 + 61) / 122][Stage 163:============================>                        (65 + 57) / 122][Stage 163:======================================>              (89 + 33) / 122][Stage 163:=============================================>      (107 + 15) / 122][Stage 163:==================================================>  (117 + 5) / 122][Stage 163:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.072931115 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 06 AND partitionZIndex<=213", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=206 AND partitionZIndex<=213,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.345262119 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 164:=======================================>             (85 + 30) / 115][Stage 164:===========================================>         (95 + 20) / 115][Stage 164:===================================================> (111 + 4) / 115]                                                                                [Stage 165:======================================>              (85 + 31) / 116][Stage 165:=============================================>       (99 + 17) / 116][Stage 165:===================================================> (112 + 4) / 116][Stage 165:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.738514213 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 1 AND partitionZIndex<=88", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=81 AND partitionZIndex<=88,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.389587451 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 166:==========================>                          (60 + 60) / 120][Stage 166:=============================>                       (67 + 53) / 120][Stage 166:========================================>            (91 + 29) / 120][Stage 166:===================================================> (117 + 3) / 120]                                                                                [Stage 167:==========================>                          (61 + 60) / 121][Stage 167:============================>                        (64 + 57) / 121][Stage 167:================================>                    (75 + 46) / 121][Stage 167:========================================>            (92 + 29) / 121][Stage 167:===================================================> (117 + 4) / 121][Stage 167:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.398626276 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 8 AND partitionZIndex<=105", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=98 AND partitionZIndex<=105,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39534061 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 168:==========================>                          (60 + 60) / 120][Stage 168:===========================>                         (63 + 57) / 120][Stage 168:================================>                    (73 + 47) / 120][Stage 168:===========================================>         (98 + 22) / 120][Stage 168:===================================================> (117 + 3) / 120]                                                                                [Stage 169:==========================>                          (61 + 60) / 121][Stage 169:============================>                        (66 + 55) / 121][Stage 169:==================================>                  (78 + 43) / 121][Stage 169:===========================================>        (102 + 19) / 121][Stage 169:=================================================>   (113 + 8) / 121][Stage 169:====================================================>(119 + 2) / 121][Stage 169:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.383338821 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide18"
dataSource: String = /nidan/orc/individualORC/slide18

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 53 AND partitionZIndex<=160", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=153 AND partitionZIndex<=160,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.387319071 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 170:===============================>                     (69 + 46) / 115][Stage 170:=====================================>               (82 + 33) / 115][Stage 170:==============================================>     (103 + 12) / 115][Stage 170:=================================================>   (107 + 8) / 115][Stage 170:====================================================>(114 + 1) / 115]                                                                                [Stage 171:==============================>                      (67 + 49) / 116][Stage 171:=====================================>               (81 + 35) / 116][Stage 171:==========================================>          (92 + 24) / 116][Stage 171:==================================================>  (111 + 5) / 116][Stage 171:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.940848877 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 04 AND partitionZIndex<=111", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=104 AND partitionZIndex<=111,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.348017958 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===================================>                 (75 + 38) / 113][Stage 172:=========================================>           (88 + 25) / 113][Stage 172:==============================================>     (102 + 11) / 113][Stage 172:====================================================>(111 + 2) / 113][Stage 172:====================================================>(112 + 1) / 113]                                                                                [Stage 173:====================================>                (78 + 36) / 114][Stage 173:=========================================>           (89 + 25) / 114][Stage 173:=============================================>       (97 + 17) / 114][Stage 173:==================================================>  (108 + 6) / 114][Stage 173:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.076537332 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 0 AND partitionZIndex<=27", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=27,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.385663872 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (58 + 55) / 113][Stage 174:=============================>                       (63 + 50) / 113][Stage 174:===================================>                 (75 + 38) / 113][Stage 174:============================================>        (95 + 18) / 113][Stage 174:===================================================> (109 + 4) / 113]                                                                                [Stage 175:===========================>                         (59 + 55) / 114][Stage 175:=================================>                   (72 + 42) / 114][Stage 175:===========================================>         (93 + 21) / 114][Stage 175:===================================================> (110 + 4) / 114][Stage 175:===================================================> (111 + 3) / 114][Stage 175:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.351248246 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 2 AND partitionZIndex<=99", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=99,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.374822334 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 176:=============================>                       (65 + 50) / 115][Stage 176:===================================>                 (78 + 37) / 115][Stage 176:============================================>        (96 + 19) / 115][Stage 176:===============================================>    (105 + 10) / 115][Stage 176:====================================================>(113 + 2) / 115]                                                                                [Stage 177:=================================>                   (74 + 42) / 116][Stage 177:==========================================>          (94 + 22) / 116][Stage 177:===============================================>    (105 + 11) / 116][Stage 177:====================================================>(114 + 2) / 116][Stage 177:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.168710836 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 14 AND partitionZIndex<=221", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=214 AND partitionZIndex<=221,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.395701629 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (60 + 61) / 121][Stage 178:==============================>                      (69 + 52) / 121][Stage 178:=====================================>               (86 + 35) / 121][Stage 178:=============================================>      (106 + 15) / 121][Stage 178:====================================================>(120 + 1) / 121]                                                                                [Stage 179:==========================>                          (61 + 61) / 122][Stage 179:=============================>                       (67 + 55) / 122][Stage 179:==================================>                  (79 + 43) / 122][Stage 179:===========================================>        (103 + 19) / 122][Stage 179:=================================================>   (115 + 7) / 122][Stage 179:====================================================>(120 + 2) / 122][Stage 179:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.985275752 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 0 AND partitionZIndex<=17", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=17,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.402126708 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 180:==========================>                          (60 + 60) / 120][Stage 180:=============================>                       (66 + 54) / 120][Stage 180:===================================>                 (81 + 39) / 120][Stage 180:==========================================>          (96 + 24) / 120][Stage 180:==================================================>  (114 + 6) / 120]                                                                                [Stage 181:===========================>                         (62 + 59) / 121][Stage 181:================================>                    (75 + 46) / 121][Stage 181:======================================>              (88 + 33) / 121][Stage 181:===============================================>    (111 + 10) / 121][Stage 181:=================================================>   (112 + 9) / 121][Stage 181:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 7.042900648 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=7 0 AND partitionZIndex<=77", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=70 AND partitionZIndex<=77,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.409223128 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===============================>                     (68 + 47) / 115][Stage 182:=======================================>             (85 + 30) / 115][Stage 182:===============================================>    (105 + 10) / 115][Stage 182:====================================================>(113 + 2) / 115]                                                                                [Stage 183:===============================>                     (69 + 47) / 116][Stage 183:=====================================>               (83 + 33) / 116][Stage 183:==========================================>          (93 + 23) / 116][Stage 183:================================================>    (107 + 9) / 116][Stage 183:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.814250559 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 2 AND partitionZIndex<=69", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=62 AND partitionZIndex<=69,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39116643 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 184:==============================>                      (67 + 48) / 115][Stage 184:====================================>                (80 + 35) / 115][Stage 184:============================================>        (96 + 19) / 115][Stage 184:===================================================> (111 + 4) / 115]                                                                                [Stage 185:====================================>                (79 + 37) / 116][Stage 185:========================================>            (89 + 27) / 116][Stage 185:================================================>    (107 + 9) / 116][Stage 185:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.132080323 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 0 AND partitionZIndex<=57", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=50 AND partitionZIndex<=57,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.333515361 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 186:=====================================>               (82 + 33) / 115][Stage 186:=========================================>           (89 + 26) / 115][Stage 186:===============================================>    (104 + 11) / 115][Stage 186:===================================================> (112 + 3) / 115]                                                                                [Stage 187:======================================>              (84 + 32) / 116][Stage 187:==========================================>          (93 + 23) / 116][Stage 187:==============================================>     (103 + 13) / 116][Stage 187:================================================>    (107 + 9) / 116][Stage 187:===================================================> (113 + 3) / 116][Stage 187:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 5.984227476 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 67 AND partitionZIndex<=174", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=174,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.414263426 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 188:==========================>                          (61 + 60) / 121][Stage 188:================================>                    (75 + 46) / 121][Stage 188:==========================================>         (100 + 21) / 121][Stage 188:=================================================>   (114 + 7) / 121]                                                                                [Stage 189:==========================>                          (62 + 60) / 122][Stage 189:==================================>                  (79 + 43) / 122][Stage 189:============================================>       (105 + 17) / 122][Stage 189:===================================================> (118 + 4) / 122][Stage 189:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.624950395 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 11 AND partitionZIndex<=218", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=211 AND partitionZIndex<=218,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.383818372 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (58 + 55) / 113][Stage 190:============================>                        (61 + 52) / 113][Stage 190:======================================>              (83 + 30) / 113][Stage 190:=============================================>       (97 + 16) / 113][Stage 190:====================================================>(111 + 2) / 113]                                                                                [Stage 191:===========================>                         (59 + 55) / 114][Stage 191:==============================>                      (66 + 48) / 114][Stage 191:======================================>              (82 + 32) / 114][Stage 191:================================================>    (105 + 9) / 114][Stage 191:===================================================> (111 + 3) / 114][Stage 191:====================================================>(112 + 2) / 114][Stage 191:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.849035695 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 81 AND partitionZIndex<=188", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=181 AND partitionZIndex<=188,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.355032656 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 192:=================================>                   (74 + 44) / 118][Stage 192:===================================>                 (80 + 38) / 118][Stage 192:========================================>            (90 + 28) / 118][Stage 192:=============================================>      (104 + 14) / 118][Stage 192:====================================================>(116 + 2) / 118]                                                                                [Stage 193:=================================>                   (76 + 43) / 119][Stage 193:=====================================>               (85 + 34) / 119][Stage 193:===========================================>         (98 + 21) / 119][Stage 193:===============================================>    (109 + 10) / 119][Stage 193:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.899223566 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 7 AND partitionZIndex<=34", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=27 AND partitionZIndex<=34,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.353857637 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 194:======================================>              (82 + 31) / 113][Stage 194:=========================================>           (88 + 25) / 113][Stage 194:==============================================>      (99 + 14) / 113][Stage 194:=================================================>   (106 + 7) / 113][Stage 194:====================================================>(111 + 2) / 113]                                                                                [Stage 195:===================================>                 (76 + 38) / 114][Stage 195:=======================================>             (84 + 30) / 114][Stage 195:===========================================>         (93 + 21) / 114][Stage 195:==============================================>     (102 + 12) / 114][Stage 195:=================================================>   (107 + 7) / 114][Stage 195:==================================================>  (109 + 5) / 114][Stage 195:===================================================> (110 + 4) / 114][Stage 195:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 7.210847418 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 4 AND partitionZIndex<=91", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=84 AND partitionZIndex<=91,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.3367125 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 196:====================================>                (79 + 36) / 115][Stage 196:======================================>              (83 + 32) / 115][Stage 196:==========================================>          (93 + 22) / 115][Stage 196:=============================================>      (100 + 15) / 115][Stage 196:===================================================> (112 + 3) / 115]                                                                                [Stage 197:=======================================>             (86 + 30) / 116][Stage 197:===========================================>         (96 + 20) / 116][Stage 197:=============================================>      (102 + 14) / 116][Stage 197:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.025317882 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 6 AND partitionZIndex<=93", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=86 AND partitionZIndex<=93,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.358602057 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 198:=====================================>               (81 + 32) / 113][Stage 198:===========================================>         (92 + 21) / 113][Stage 198:==============================================>     (100 + 13) / 113][Stage 198:==================================================>  (107 + 6) / 113][Stage 198:===================================================> (110 + 3) / 113]                                                                                [Stage 199:==================================>                  (74 + 40) / 114][Stage 199:======================================>              (82 + 32) / 114][Stage 199:============================================>        (95 + 19) / 114][Stage 199:=================================================>   (106 + 8) / 114][Stage 199:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.132103983 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=1 7 AND partitionZIndex<=24", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=17 AND partitionZIndex<=24,8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data ")}
Time elapsed: 0.39369921 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rd d.zipWithIndex.map{case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.c ollect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (62 + 58) / 120][Stage 200:==============================>                      (70 + 50) / 120][Stage 200:======================================>              (87 + 33) / 120][Stage 200:=============================================>      (104 + 16) / 120][Stage 200:====================================================>(118 + 2) / 120]                                                                                [Stage 201:============================>                        (64 + 57) / 121][Stage 201:================================>                    (74 + 47) / 121][Stage 201:=======================================>             (91 + 30) / 121][Stage 201:==============================================>     (108 + 13) / 121][Stage 201:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.460177406 seconds
res203: Int = 0

scala> 

scala> :quit

real	11m29.778s
user	11m54.840s
sys	1m25.092s
