Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/25 03:54:18 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 03:54:33 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 03:54:33 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 03:54:33 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/25 03:54:35 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 03:54:46 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170525035435-0633).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.47975138 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIn dex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 0:>                                                      (0 + 112) / 115][Stage 0:===================>                                   (40 + 75) / 115][Stage 0:==========================>                            (56 + 59) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:===============================>                       (66 + 49) / 115][Stage 0:================================>                      (68 + 47) / 115][Stage 0:=================================>                     (71 + 44) / 115][Stage 0:===================================>                   (75 + 40) / 115][Stage 0:=======================================>               (82 + 33) / 115][Stage 0:===========================================>           (91 + 24) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:==================================================>    (106 + 9) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:==========================>                            (55 + 61) / 116][Stage 1:==============================>                        (65 + 51) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:=================================>                     (71 + 45) / 116][Stage 1:=====================================>                 (79 + 37) / 116][Stage 1:=========================================>             (87 + 29) / 116][Stage 1:=============================================>         (95 + 21) / 116][Stage 1:===============================================>      (103 + 13) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 12.432160113 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIn dex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionI ndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.733042404 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 2:==========================>                            (56 + 59) / 115][Stage 2:============================>                          (59 + 56) / 115][Stage 2:================================>                      (67 + 48) / 115][Stage 2:=================================>                     (70 + 45) / 115][Stage 2:====================================>                  (77 + 38) / 115][Stage 2:=========================================>             (87 + 28) / 115][Stage 2:===============================================>       (99 + 16) / 115][Stage 2:================================================>     (103 + 12) / 115][Stage 2:=====================================================> (112 + 3) / 115]                                                                                [Stage 3:============================>                          (60 + 56) / 116][Stage 3:=================================>                     (70 + 46) / 116][Stage 3:=================================>                     (71 + 45) / 116][Stage 3:======================================>                (81 + 35) / 116][Stage 3:============================================>          (94 + 22) / 116][Stage 3:================================================>     (104 + 12) / 116][Stage 3:==================================================>    (107 + 9) / 116][Stage 3:===================================================>   (109 + 7) / 116][Stage 3:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.115239576 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide57"
dataSource: String = /nidan/orc/individualORC/slide57

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionI ndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  parti tionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.732717984 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
org.apache.spark.sql.catalyst.parser.ParseException:
extraneous input 'partitionIndex' expecting {<EOF>, '.', '[', 'GROUP', 'ORDER', 'HAVING', 'LIMIT', 'OR', 'AND', 'IN', NOT, 'BETWEEN', 'LIKE', RLIKE, 'IS', 'WINDOW', 'UNION', 'EXCEPT', 'MINUS', 'INTERSECT', EQ, '<=>', '<>', '!=', '<', LTE, '>', GTE, '+', '-', '*', '/', '%', 'DIV', '&', '|', '^', 'SORT', 'CLUSTER', 'DISTRIBUTE'}(line 1, pos 213)

== SQL ==
SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------^^^

  at org.apache.spark.sql.catalyst.parser.ParseException.withCommand(ParseDriver.scala:197)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parse(ParseDriver.scala:99)
  at org.apache.spark.sql.execution.SparkSqlParser.parse(SparkSqlParser.scala:45)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parsePlan(ParseDriver.scala:53)
  at org.apache.spark.sql.SparkSession.sql(SparkSession.scala:592)
  at org.apache.spark.sql.SQLContext.sql(SQLContext.scala:699)
  at $anonfun$1.apply$mcI$sp(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide33"
dataSource: String = /nidan/orc/individualORC/slide33

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionI ndex = 183  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  parti tionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.601438867 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 4:=========================>                             (55 + 63) / 118][Stage 4:=============================>                         (63 + 55) / 118][Stage 4:==================================>                    (74 + 44) / 118][Stage 4:====================================>                  (79 + 39) / 118][Stage 4:======================================>                (83 + 35) / 118][Stage 4:==========================================>            (91 + 27) / 118][Stage 4:================================================>     (106 + 12) / 118][Stage 4:=====================================================> (115 + 3) / 118]                                                                                [Stage 5:=================================>                     (73 + 46) / 119][Stage 5:====================================>                  (78 + 41) / 119][Stage 5:=========================================>             (89 + 30) / 119][Stage 5:=============================================>         (98 + 21) / 119][Stage 5:================================================>     (106 + 13) / 119][Stage 5:======================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.850431121 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIn dex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionI ndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.571505599 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 6:============================>                          (58 + 55) / 113][Stage 6:============================>                          (59 + 54) / 113][Stage 6:===============================>                       (64 + 49) / 113][Stage 6:====================================>                  (75 + 38) / 113][Stage 6:=============================================>         (93 + 20) / 113][Stage 6:===================================================>   (106 + 7) / 113][Stage 6:======================================================>(112 + 1) / 113]                                                                                [Stage 7:============================>                          (60 + 54) / 114][Stage 7:=============================>                         (62 + 52) / 114][Stage 7:===================================>                   (73 + 41) / 114][Stage 7:=========================================>             (86 + 28) / 114][Stage 7:==============================================>        (97 + 17) / 114][Stage 7:==================================================>    (105 + 9) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.335202213 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIn dex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partition Index = 106  OR  partitionIndex = 107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465800739 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 8:=======================================>               (83 + 32) / 115][Stage 8:===========================================>           (91 + 24) / 115][Stage 8:==============================================>       (100 + 15) / 115][Stage 8:=====================================================> (111 + 4) / 115]                                                                                [Stage 9:=======================================>               (83 + 33) / 116][Stage 9:=============================================>         (97 + 19) / 116][Stage 9:=================================================>    (106 + 10) / 116][Stage 9:====================================================>  (110 + 6) / 116][Stage 9:=====================================================> (112 + 4) / 116][Stage 9:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.794315828 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionI ndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  parti tionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.626682685 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 10:==========================>                           (60 + 61) / 121][Stage 10:==============================>                       (69 + 52) / 121][Stage 10:===================================>                  (79 + 42) / 121][Stage 10:=============================================>       (104 + 17) / 121][Stage 10:====================================================> (117 + 4) / 121][Stage 10:=====================================================>(120 + 1) / 121]                                                                                [Stage 11:===========================>                          (61 + 61) / 122][Stage 11:===========================>                          (63 + 59) / 122][Stage 11:==============================>                       (69 + 53) / 122][Stage 11:===================================>                  (80 + 42) / 122][Stage 11:=======================================>              (89 + 33) / 122][Stage 11:===========================================>          (99 + 23) / 122][Stage 11:==============================================>      (106 + 16) / 122][Stage 11:====================================================> (119 + 3) / 122][Stage 11:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.755649852 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIn dex = 65  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partition Index = 106  OR  partitionIndex = 107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.554744862 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 12:==========================>                           (60 + 61) / 121][Stage 12:=============================>                        (65 + 56) / 121][Stage 12:===================================>                  (79 + 42) / 121][Stage 12:============================================>         (99 + 22) / 121][Stage 12:===============================================>     (108 + 13) / 121][Stage 12:===================================================>  (115 + 6) / 121][Stage 12:=====================================================>(120 + 1) / 121]                                                                                [Stage 13:===========================>                          (61 + 61) / 122][Stage 13:===========================>                          (62 + 60) / 122][Stage 13:===============================>                      (71 + 51) / 122][Stage 13:======================================>               (87 + 35) / 122][Stage 13:===========================================>         (100 + 22) / 122][Stage 13:==================================================>   (113 + 9) / 122][Stage 13:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 6.219667872 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIn dex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionI ndex = 88  OR  partitionIndex = 115  OR  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.570825899 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 14:===========================>                          (60 + 60) / 120][Stage 14:==============================>                       (67 + 53) / 120][Stage 14:=====================================>                (83 + 37) / 120][Stage 14:==============================================>      (106 + 14) / 120][Stage 14:====================================================> (117 + 3) / 120]                                                                                [Stage 15:===========================>                          (61 + 60) / 121][Stage 15:=============================>                        (67 + 54) / 121][Stage 15:==================================>                   (77 + 44) / 121][Stage 15:============================================>         (99 + 22) / 121][Stage 15:================================================>    (111 + 10) / 121][Stage 15:====================================================> (118 + 3) / 121][Stage 15:=====================================================>(119 + 2) / 121][Stage 15:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.87177015 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionI ndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  parti tionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.560668117 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 16:==========================>                           (60 + 61) / 121][Stage 16:=============================>                        (66 + 55) / 121][Stage 16:===================================>                  (80 + 41) / 121][Stage 16:==============================================>      (106 + 15) / 121][Stage 16:==================================================>   (113 + 8) / 121][Stage 16:=====================================================>(120 + 1) / 121]                                                                                [Stage 17:============================>                         (64 + 58) / 122][Stage 17:===============================>                      (72 + 50) / 122][Stage 17:=======================================>              (89 + 33) / 122][Stage 17:==============================================>      (108 + 14) / 122][Stage 17:===================================================>  (117 + 5) / 122][Stage 17:=====================================================>(120 + 2) / 122][Stage 17:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 5.187839953 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionI ndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  parti tionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442058507 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 18:=====================================>                (80 + 35) / 115][Stage 18:========================================>             (86 + 29) / 115][Stage 18:==============================================>      (101 + 14) / 115][Stage 18:====================================================> (112 + 3) / 115][Stage 18:=====================================================>(114 + 1) / 115]                                                                                [Stage 19:======================================>               (83 + 33) / 116][Stage 19:========================================>             (88 + 28) / 116][Stage 19:=============================================>       (100 + 16) / 116][Stage 19:====================================================> (112 + 4) / 116][Stage 19:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.10824512 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIn dex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionI ndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.500964541 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 20:===========================>                          (58 + 55) / 113][Stage 20:===============================>                      (66 + 47) / 113][Stage 20:======================================>               (81 + 32) / 113][Stage 20:===============================================>     (101 + 12) / 113][Stage 20:=====================================================>(111 + 2) / 113]                                                                                [Stage 21:============================>                         (60 + 54) / 114][Stage 21:===================================>                  (75 + 39) / 114][Stage 21:=============================================>        (97 + 17) / 114][Stage 21:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.91497148 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide89"
dataSource: String = /nidan/orc/individualORC/slide89

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIn dex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionI ndex = 40  OR  partitionIndex = 53  OR  partitionIndex = 54 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 53  OR  partitionIndex = 54 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.521364388 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 22:================================>                     (72 + 46) / 118][Stage 22:=================================>                    (73 + 45) / 118][Stage 22:====================================>                 (80 + 38) / 118][Stage 22:==========================================>           (93 + 25) / 118][Stage 22:==================================================>   (110 + 8) / 118][Stage 22:=====================================================>(117 + 1) / 118]                                                                                [Stage 23:=================================>                    (73 + 46) / 119][Stage 23:====================================>                 (80 + 39) / 119][Stage 23:========================================>             (90 + 29) / 119][Stage 23:=============================================>       (103 + 16) / 119][Stage 23:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.803670189 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIn dex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionI ndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.48274436 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 24:===========================>                          (58 + 55) / 113][Stage 24:==============================>                       (63 + 50) / 113][Stage 24:======================================>               (81 + 32) / 113][Stage 24:===============================================>     (101 + 12) / 113][Stage 24:===================================================>  (108 + 5) / 113]                                                                                [Stage 25:============================>                         (60 + 54) / 114][Stage 25:===============================>                      (67 + 47) / 114][Stage 25:=====================================>                (79 + 35) / 114][Stage 25:==============================================>       (98 + 16) / 114][Stage 25:===============================================>     (103 + 11) / 114][Stage 25:===================================================>  (109 + 5) / 114][Stage 25:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.550727555 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide56"
dataSource: String = /nidan/orc/individualORC/slide56

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionI ndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  parti tionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.506448715 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 26:==========================>                           (60 + 61) / 121][Stage 26:=============================>                        (67 + 54) / 121][Stage 26:======================================>               (87 + 34) / 121][Stage 26:==============================================>      (106 + 15) / 121][Stage 26:===================================================>  (116 + 5) / 121]                                                                                [Stage 27:===========================>                          (61 + 61) / 122][Stage 27:============================>                         (65 + 57) / 122][Stage 27:===================================>                  (81 + 41) / 122][Stage 27:===========================================>          (99 + 23) / 122][Stage 27:==================================================>   (114 + 8) / 122][Stage 27:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.600257631 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide17"
dataSource: String = /nidan/orc/individualORC/slide17

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionI ndex = 135  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  parti tionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.518104762 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 28:===========================>                          (60 + 60) / 120][Stage 28:===========================>                          (62 + 58) / 120][Stage 28:===============================>                      (70 + 50) / 120][Stage 28:=========================================>            (93 + 27) / 120][Stage 28:===============================================>     (108 + 12) / 120][Stage 28:=====================================================>(119 + 1) / 120]                                                                                [Stage 29:===========================>                          (61 + 60) / 121][Stage 29:=============================>                        (66 + 55) / 121][Stage 29:====================================>                 (81 + 40) / 121][Stage 29:============================================>        (101 + 20) / 121][Stage 29:===================================================>  (115 + 6) / 121][Stage 29:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.230459811 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide60"
dataSource: String = /nidan/orc/individualORC/slide60

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionI ndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  parti tionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 205 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 205 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.481215398 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 30:===============================>                      (67 + 48) / 115][Stage 30:=================================>                    (71 + 44) / 115][Stage 30:===========================================>          (92 + 23) / 115][Stage 30:===============================================>     (104 + 11) / 115][Stage 30:====================================================> (111 + 4) / 115][Stage 30:=====================================================>(113 + 2) / 115]                                                                                [Stage 31:===============================>                      (68 + 48) / 116][Stage 31:====================================>                 (79 + 37) / 116][Stage 31:==============================================>       (99 + 17) / 116][Stage 31:==================================================>   (108 + 8) / 116]                                                                                Time elapsed: 3.14184769 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIn dex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionI ndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457549664 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 32:=================================>                    (72 + 43) / 115][Stage 32:======================================>               (83 + 32) / 115][Stage 32:==============================================>       (99 + 16) / 115][Stage 32:==================================================>   (108 + 7) / 115][Stage 32:===================================================>  (109 + 6) / 115][Stage 32:====================================================> (111 + 4) / 115]                                                                                [Stage 33:======================================>               (82 + 34) / 116][Stage 33:==========================================>           (92 + 24) / 116][Stage 33:===============================================>     (104 + 12) / 116][Stage 33:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.372768619 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionI ndex = 133  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  parti tionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.553330684 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 34:============================>                         (59 + 54) / 113][Stage 34:==============================>                       (63 + 50) / 113][Stage 34:========================================>             (84 + 29) / 113][Stage 34:==============================================>      (100 + 13) / 113]                                                                                [Stage 35:============================>                         (60 + 54) / 114][Stage 35:================================>                     (68 + 46) / 114][Stage 35:=======================================>              (84 + 30) / 114][Stage 35:===============================================>     (102 + 12) / 114][Stage 35:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.579780613 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionI ndex = 165  OR  partitionIndex = 178  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  parti tionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 178  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406478068 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 36:======================================>               (81 + 34) / 115][Stage 36:======================================>               (83 + 32) / 115][Stage 36:=============================================>        (96 + 19) / 115][Stage 36:==================================================>   (107 + 8) / 115]                                                                                [Stage 37:=======================================>              (85 + 31) / 116][Stage 37:=============================================>        (97 + 19) / 116][Stage 37:====================================================> (113 + 3) / 116][Stage 37:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.848469065 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIn dex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionI ndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.499662721 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 38:===========================>                          (58 + 55) / 113][Stage 38:===============================>                      (65 + 48) / 113][Stage 38:=====================================>                (78 + 35) / 113][Stage 38:==============================================>       (97 + 16) / 113][Stage 38:===================================================>  (107 + 6) / 113][Stage 38:===================================================>  (108 + 5) / 113][Stage 38:=====================================================>(112 + 1) / 113]                                                                                [Stage 39:============================>                         (60 + 54) / 114][Stage 39:==============================>                       (64 + 50) / 114][Stage 39:=====================================>                (80 + 34) / 114][Stage 39:=============================================>        (96 + 18) / 114][Stage 39:===================================================>  (108 + 6) / 114][Stage 39:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.570941881 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionI ndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  parti tionIndex = 164  OR  partitionIndex = 177  OR  partitionIndex = 178 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 177  OR  partitionIndex = 178 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.497599157 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 40:============================>                         (59 + 54) / 113][Stage 40:===============================>                      (65 + 48) / 113][Stage 40:====================================>                 (77 + 36) / 113][Stage 40:==============================================>      (100 + 13) / 113][Stage 40:=====================================================>(111 + 2) / 113]                                                                                [Stage 41:============================>                         (61 + 53) / 114][Stage 41:================================>                     (69 + 45) / 114][Stage 41:=========================================>            (88 + 26) / 114][Stage 41:==================================================>   (106 + 8) / 114]                                                                                Time elapsed: 3.596244578 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIn dex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionI ndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380024009 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 42:======================================>               (82 + 33) / 115][Stage 42:=============================================>        (96 + 19) / 115][Stage 42:=================================================>    (106 + 9) / 115]                                                                                [Stage 43:======================================>               (83 + 33) / 116][Stage 43:============================================>         (96 + 20) / 116][Stage 43:================================================>    (106 + 10) / 116][Stage 43:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.993650482 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionI ndex = 129  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  parti tionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423567808 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 44:==============================>                       (64 + 51) / 115][Stage 44:=====================================>                (80 + 35) / 115][Stage 44:===========================================>          (92 + 23) / 115][Stage 44:===============================================>     (104 + 11) / 115][Stage 44:=====================================================>(113 + 2) / 115][Stage 44:=====================================================>(114 + 1) / 115]                                                                                [Stage 45:=================================>                    (71 + 45) / 116][Stage 45:========================================>             (86 + 30) / 116][Stage 45:==============================================>       (99 + 17) / 116][Stage 45:==================================================>   (108 + 8) / 116][Stage 45:===================================================>  (111 + 5) / 116][Stage 45:====================================================> (112 + 4) / 116][Stage 45:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.701998623 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionInd ex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIn dex = 32  OR  partitionIndex = 45  OR  partitionIndex = 46 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 45  OR  partitionIndex = 46 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478975715 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 46:===========================>                          (58 + 55) / 113][Stage 46:=============================>                        (61 + 52) / 113][Stage 46:=================================>                    (70 + 43) / 113][Stage 46:======================================>               (81 + 32) / 113][Stage 46:=============================================>        (95 + 18) / 113][Stage 46:====================================================> (110 + 3) / 113]                                                                                [Stage 47:===========================>                          (59 + 55) / 114][Stage 47:===============================>                      (66 + 48) / 114][Stage 47:=====================================>                (79 + 35) / 114][Stage 47:===========================================>          (91 + 23) / 114][Stage 47:==================================================>   (107 + 7) / 114][Stage 47:=====================================================>(112 + 2) / 114][Stage 47:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.987419919 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionInd ex = 9  OR  partitionIndex = 23  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionInd ex = 110  OR  partitionIndex = 111  OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407393111 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 48:======================================>               (83 + 32) / 115][Stage 48:===========================================>          (93 + 22) / 115][Stage 48:===============================================>     (104 + 11) / 115][Stage 48:===================================================>  (109 + 6) / 115][Stage 48:===================================================>  (110 + 5) / 115]                                                                                [Stage 49:======================================>               (83 + 33) / 116][Stage 49:===========================================>          (94 + 22) / 116][Stage 49:==================================================>   (109 + 7) / 116][Stage 49:====================================================> (112 + 4) / 116][Stage 49:====================================================> (113 + 3) / 116][Stage 49:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.373511144 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIn dex = 99  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partiti onIndex = 114  OR  partitionIndex = 115  OR  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401121177 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 50:==================================>                   (73 + 40) / 113][Stage 50:======================================>               (80 + 33) / 113][Stage 50:===========================================>          (90 + 23) / 113][Stage 50:================================================>    (103 + 10) / 113][Stage 50:====================================================> (110 + 3) / 113]                                                                                [Stage 51:====================================>                 (78 + 36) / 114][Stage 51:=========================================>            (88 + 26) / 114][Stage 51:==============================================>       (99 + 15) / 114][Stage 51:===================================================>  (108 + 6) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.097559967 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionI ndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  parti tionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433306852 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 52:===========================>                          (58 + 55) / 113][Stage 52:==============================>                       (64 + 49) / 113][Stage 52:=====================================>                (78 + 35) / 113][Stage 52:===============================================>     (101 + 12) / 113][Stage 52:===================================================>  (107 + 6) / 113][Stage 52:=====================================================>(111 + 2) / 113]                                                                                [Stage 53:============================>                         (60 + 54) / 114][Stage 53:================================>                     (69 + 45) / 114][Stage 53:========================================>             (85 + 29) / 114][Stage 53:===================================================>  (109 + 5) / 114][Stage 53:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.280467157 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionI ndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 152  OR  parti tionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44561994 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 54:===========================>                          (60 + 60) / 120][Stage 54:============================>                         (63 + 57) / 120][Stage 54:====================================>                 (82 + 38) / 120][Stage 54:=============================================>       (102 + 18) / 120][Stage 54:===================================================>  (115 + 5) / 120][Stage 54:=====================================================>(118 + 2) / 120]                                                                                [Stage 55:===========================>                          (61 + 60) / 121][Stage 55:=============================>                        (66 + 55) / 121][Stage 55:=================================>                    (75 + 46) / 121][Stage 55:==========================================>           (95 + 26) / 121][Stage 55:===============================================>     (109 + 12) / 121][Stage 55:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.500068842 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionI ndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  parti tionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233  OR  partitionIndex = 234 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414243709 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 56:====================================>                 (76 + 37) / 113][Stage 56:=========================================>            (86 + 27) / 113][Stage 56:===============================================>      (99 + 14) / 113][Stage 56:====================================================> (109 + 4) / 113]                                                                                [Stage 57:====================================>                 (77 + 37) / 114][Stage 57:=========================================>            (88 + 26) / 114][Stage 57:==============================================>      (100 + 14) / 114][Stage 57:===================================================>  (109 + 5) / 114][Stage 57:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.011391116 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide30"
dataSource: String = /nidan/orc/individualORC/slide30

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionI ndex = 157  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  parti tionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381689234 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 58:==================================>                   (72 + 41) / 113][Stage 58:=======================================>              (82 + 31) / 113][Stage 58:==========================================>           (88 + 25) / 113][Stage 58:===============================================>     (101 + 12) / 113][Stage 58:===================================================>  (108 + 5) / 113][Stage 58:====================================================> (109 + 4) / 113]                                                                                [Stage 59:======================================>               (81 + 33) / 114][Stage 59:==========================================>           (89 + 25) / 114][Stage 59:==============================================>      (101 + 13) / 114][Stage 59:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.291158799 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIn dex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionI ndex = 96  OR  partitionIndex = 109  OR  partitionIndex = 110 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 109  OR  partitionIndex = 110 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456668447 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 60:>                                                       (0 + 0) / 113][Stage 60:============================>                         (59 + 54) / 113][Stage 60:=============================>                        (61 + 52) / 113][Stage 60:====================================>                 (76 + 37) / 113][Stage 60:==============================================>       (97 + 16) / 113][Stage 60:====================================================> (109 + 4) / 113]                                                                                [Stage 61:============================>                         (61 + 53) / 114][Stage 61:==================================>                   (73 + 41) / 114][Stage 61:===========================================>          (92 + 22) / 114][Stage 61:================================================>    (104 + 10) / 114][Stage 61:====================================================> (110 + 4) / 114][Stage 61:=====================================================>(112 + 2) / 114][Stage 61:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.467364156 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionI ndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  parti tionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417410656 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 62:================================>                     (72 + 46) / 118][Stage 62:==================================>                   (75 + 43) / 118][Stage 62:======================================>               (85 + 33) / 118][Stage 62:===========================================>          (94 + 24) / 118][Stage 62:=================================================>    (109 + 9) / 118][Stage 62:=====================================================>(117 + 1) / 118]                                                                                [Stage 63:=================================>                    (73 + 46) / 119][Stage 63:==================================>                   (77 + 42) / 119][Stage 63:========================================>             (89 + 30) / 119][Stage 63:=============================================>       (103 + 16) / 119][Stage 63:====================================================> (115 + 4) / 119][Stage 63:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.753323082 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIn dex = 65  OR  partitionIndex = 66  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionI ndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.44946801 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 64:===========================>                          (58 + 55) / 113][Stage 64:============================>                         (59 + 54) / 113][Stage 64:================================>                     (67 + 46) / 113][Stage 64:=========================================>            (87 + 26) / 113][Stage 64:==============================================>       (98 + 15) / 113][Stage 64:===================================================>  (108 + 5) / 113]                                                                                [Stage 65:============================>                         (60 + 54) / 114][Stage 65:===================================>                  (74 + 40) / 114][Stage 65:=======================================>              (83 + 31) / 114][Stage 65:================================================>    (104 + 10) / 114][Stage 65:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.818620534 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionI ndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  parti tionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.3926762 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 66:================================>                     (71 + 47) / 118][Stage 66:==================================>                   (75 + 43) / 118][Stage 66:=======================================>              (86 + 32) / 118][Stage 66:=============================================>       (101 + 17) / 118][Stage 66:====================================================> (115 + 3) / 118]                                                                                [Stage 67:==================================>                   (75 + 44) / 119][Stage 67:=======================================>              (88 + 31) / 119][Stage 67:==============================================>      (104 + 15) / 119][Stage 67:===================================================>  (113 + 6) / 119][Stage 67:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.538480074 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionI ndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  parti tionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.464668306 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 68:==========================>                           (60 + 61) / 121][Stage 68:=============================>                        (67 + 54) / 121][Stage 68:=======================================>              (89 + 32) / 121][Stage 68:===============================================>     (109 + 12) / 121][Stage 68:====================================================> (118 + 3) / 121]                                                                                [Stage 69:=============================>                        (67 + 55) / 122][Stage 69:=================================>                    (76 + 46) / 122][Stage 69:==========================================>           (97 + 25) / 122][Stage 69:================================================>    (111 + 11) / 122][Stage 69:===================================================>  (117 + 5) / 122][Stage 69:====================================================> (119 + 3) / 122][Stage 69:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.97914 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIn dex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 100  OR  partition Index = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390910837 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 70:====================================>                 (76 + 37) / 113][Stage 70:=========================================>            (86 + 27) / 113][Stage 70:==============================================>       (97 + 16) / 113][Stage 70:==================================================>   (105 + 8) / 113][Stage 70:====================================================> (110 + 3) / 113]                                                                                [Stage 71:=======================================>              (83 + 31) / 114][Stage 71:==============================================>       (98 + 16) / 114][Stage 71:==================================================>   (106 + 8) / 114][Stage 71:===================================================>  (109 + 5) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.207612919 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIn dex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionI ndex = 46  OR  partitionIndex = 47  OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362989273 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 72:======================================>               (81 + 34) / 115][Stage 72:=========================================>            (89 + 26) / 115][Stage 72:==============================================>      (101 + 14) / 115][Stage 72:=====================================================>(114 + 1) / 115]                                                                                [Stage 73:======================================>               (82 + 34) / 116][Stage 73:========================================>             (86 + 30) / 116][Stage 73:==============================================>      (102 + 14) / 116][Stage 73:=================================================>    (107 + 9) / 116][Stage 73:====================================================> (113 + 3) / 116][Stage 73:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 7.310198217 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionI ndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  parti tionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 227 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 227 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354854735 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 74:======================================>               (81 + 34) / 115][Stage 74:=========================================>            (89 + 26) / 115][Stage 74:=================================================>    (106 + 9) / 115]                                                                                [Stage 75:=======================================>              (84 + 32) / 116][Stage 75:=========================================>            (90 + 26) / 116][Stage 75:================================================>    (106 + 10) / 116]                                                                                Time elapsed: 2.508467159 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionI ndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  parti tionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 167 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 167 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36599628 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 76:======================================>               (81 + 34) / 115][Stage 76:=======================================>              (84 + 31) / 115][Stage 76:===============================================>     (104 + 11) / 115][Stage 76:==================================================>   (108 + 7) / 115][Stage 76:=====================================================>(113 + 2) / 115]                                                                                [Stage 77:========================================>             (86 + 30) / 116][Stage 77:============================================>         (96 + 20) / 116][Stage 77:====================================================> (112 + 4) / 116][Stage 77:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.931193351 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionI ndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  parti tionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357640822 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 78:========================================>             (86 + 29) / 115][Stage 78:============================================>         (95 + 20) / 115][Stage 78:==================================================>   (108 + 7) / 115]                                                                                [Stage 79:========================================>             (87 + 29) / 116][Stage 79:==============================================>      (101 + 15) / 116][Stage 79:===================================================>  (110 + 6) / 116]                                                                                Time elapsed: 2.58200039 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide82"
dataSource: String = /nidan/orc/individualORC/slide82

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionI ndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  parti tionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397758553 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 80:================================>                     (72 + 46) / 118][Stage 80:==================================>                   (75 + 43) / 118][Stage 80:==========================================>           (93 + 25) / 118][Stage 80:=================================================>    (109 + 9) / 118][Stage 80:====================================================> (115 + 3) / 118]                                                                                [Stage 81:=================================>                    (73 + 46) / 119][Stage 81:========================================>             (89 + 30) / 119][Stage 81:===============================================>     (106 + 13) / 119][Stage 81:====================================================> (115 + 4) / 119][Stage 81:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.394369095 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide63"
dataSource: String = /nidan/orc/individualORC/slide63

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionI ndex = 191  OR  partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  parti tionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425323418 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 82:==========================>                           (60 + 61) / 121][Stage 82:============================>                         (64 + 57) / 121][Stage 82:======================================>               (86 + 35) / 121][Stage 82:=============================================>       (103 + 18) / 121][Stage 82:=====================================================>(119 + 2) / 121]                                                                                [Stage 83:=============================>                        (66 + 56) / 122][Stage 83:================================>                     (73 + 49) / 122][Stage 83:=======================================>              (89 + 33) / 122][Stage 83:===============================================>     (109 + 13) / 122][Stage 83:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.230539781 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide82"
dataSource: String = /nidan/orc/individualORC/slide82

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIn dex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partition Index = 103  OR  partitionIndex = 117  OR  partitionIndex = 118 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.407204756 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 84:================================>                     (72 + 46) / 118][Stage 84:=================================>                    (74 + 44) / 118][Stage 84:======================================>               (85 + 33) / 118][Stage 84:==================================================>   (111 + 7) / 118]                                                                                [Stage 85:=================================>                    (73 + 46) / 119][Stage 85:===================================>                  (79 + 40) / 119][Stage 85:============================================>        (100 + 19) / 119][Stage 85:===================================================>  (114 + 5) / 119][Stage 85:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.031116445 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide84"
dataSource: String = /nidan/orc/individualORC/slide84

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIn dex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 92  OR  partitionI ndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415587356 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 86:==========================>                           (60 + 61) / 121][Stage 86:============================>                         (63 + 58) / 121][Stage 86:=================================>                    (75 + 46) / 121][Stage 86:=========================================>            (92 + 29) / 121][Stage 86:==================================================>   (113 + 8) / 121]                                                                                [Stage 87:===========================>                          (63 + 59) / 122][Stage 87:===============================>                      (72 + 50) / 122][Stage 87:==========================================>           (95 + 27) / 122][Stage 87:==================================================>   (113 + 9) / 122]                                                                                Time elapsed: 3.678759257 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIn dex = 13  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionI ndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397348914 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 88:=================================>                    (73 + 45) / 118][Stage 88:==================================>                   (76 + 42) / 118][Stage 88:=======================================>              (86 + 32) / 118][Stage 88:============================================>         (97 + 21) / 118][Stage 88:================================================>    (108 + 10) / 118][Stage 88:====================================================> (115 + 3) / 118]                                                                                [Stage 89:=================================>                    (73 + 46) / 119][Stage 89:===================================>                  (78 + 41) / 119][Stage 89:=====================================>                (82 + 37) / 119][Stage 89:===========================================>          (96 + 23) / 119][Stage 89:==============================================>      (104 + 15) / 119][Stage 89:===================================================>  (113 + 6) / 119][Stage 89:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.232446813 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionI ndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  parti tionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393296285 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 90:==================================>                   (73 + 42) / 115][Stage 90:=========================================>            (88 + 27) / 115][Stage 90:==============================================>       (98 + 17) / 115][Stage 90:==================================================>   (107 + 8) / 115][Stage 90:=====================================================>(114 + 1) / 115]                                                                                [Stage 91:=================================>                    (72 + 44) / 116][Stage 91:=========================================>            (89 + 27) / 116][Stage 91:==============================================>       (99 + 17) / 116][Stage 91:=================================================>    (107 + 9) / 116][Stage 91:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.335486653 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide37"
dataSource: String = /nidan/orc/individualORC/slide37

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionI ndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  parti tionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229  OR  partitionIndex = 230 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375796084 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 92:====================================>                 (76 + 37) / 113][Stage 92:========================================>             (85 + 28) / 113][Stage 92:============================================>         (93 + 20) / 113][Stage 92:================================================>    (103 + 10) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:====================================>                 (76 + 38) / 114][Stage 93:==========================================>           (89 + 25) / 114][Stage 93:==============================================>      (100 + 14) / 114][Stage 93:===================================================>  (109 + 5) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.19464577 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionI ndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  parti tionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347348379 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 94:=====================================>                (79 + 36) / 115][Stage 94:======================================>               (82 + 33) / 115][Stage 94:============================================>         (95 + 20) / 115][Stage 94:====================================================> (111 + 4) / 115][Stage 94:=====================================================>(114 + 1) / 115]                                                                                [Stage 95:======================================>               (83 + 33) / 116][Stage 95:=========================================>            (90 + 26) / 116][Stage 95:==============================================>      (102 + 14) / 116][Stage 95:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.832633339 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIn dex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionI ndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379098492 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 96:==============================>                       (66 + 49) / 115][Stage 96:====================================>                 (78 + 37) / 115][Stage 96:===========================================>          (92 + 23) / 115][Stage 96:==================================================>   (107 + 8) / 115][Stage 96:====================================================> (112 + 3) / 115]                                                                                [Stage 97:==============================>                       (66 + 50) / 116][Stage 97:======================================>               (83 + 33) / 116][Stage 97:=========================================>            (90 + 26) / 116][Stage 97:==============================================>      (102 + 14) / 116][Stage 97:===================================================>  (111 + 5) / 116][Stage 97:====================================================> (112 + 4) / 116][Stage 97:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 6.822909406 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionInd ex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionInd ex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386922851 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 98:=================================>                    (71 + 44) / 115][Stage 98:=========================================>            (88 + 27) / 115][Stage 98:===============================================>     (103 + 12) / 115][Stage 98:===================================================>  (110 + 5) / 115][Stage 98:=====================================================>(114 + 1) / 115]                                                                                [Stage 99:===============================>                      (67 + 49) / 116][Stage 99:=======================================>              (84 + 32) / 116][Stage 99:============================================>         (96 + 20) / 116][Stage 99:==============================================>      (102 + 14) / 116][Stage 99:=================================================>    (107 + 9) / 116][Stage 99:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 7.839947895 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionI ndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 220  OR  parti tionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384210425 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 100:================================>                    (72 + 46) / 118][Stage 100:==================================>                  (76 + 42) / 118][Stage 100:========================================>            (90 + 28) / 118][Stage 100:=================================================>   (110 + 8) / 118]                                                                                [Stage 101:================================>                    (74 + 45) / 119][Stage 101:====================================>                (81 + 38) / 119][Stage 101:==========================================>          (96 + 23) / 119][Stage 101:===================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.389201928 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionInd ex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIn dex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421828592 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 102:==========================>                          (60 + 60) / 120][Stage 102:================================>                    (74 + 46) / 120][Stage 102:========================================>            (91 + 29) / 120][Stage 102:===============================================>    (110 + 10) / 120][Stage 102:====================================================>(119 + 1) / 120]                                                                                [Stage 103:==========================>                          (61 + 60) / 121][Stage 103:=============================>                       (67 + 54) / 121][Stage 103:===================================>                 (81 + 40) / 121][Stage 103:===========================================>        (102 + 19) / 121][Stage 103:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.967953063 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionInd ex = 3  OR  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partitionInd ex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397223215 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 104:==============================>                      (66 + 49) / 115][Stage 104:==================================>                  (75 + 40) / 115][Stage 104:=========================================>           (90 + 25) / 115][Stage 104:=================================================>   (108 + 7) / 115][Stage 104:====================================================>(114 + 1) / 115]                                                                                [Stage 105:===============================>                     (70 + 46) / 116][Stage 105:======================================>              (85 + 31) / 116][Stage 105:=============================================>      (101 + 15) / 116][Stage 105:===============================================>    (106 + 10) / 116][Stage 105:================================================>    (107 + 9) / 116][Stage 105:=================================================>   (109 + 7) / 116][Stage 105:===================================================> (113 + 3) / 116][Stage 105:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.919596715 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionI ndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  parti tionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37297476 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 106:=======================================>             (85 + 30) / 115][Stage 106:============================================>        (96 + 19) / 115][Stage 106:==============================================>     (103 + 12) / 115][Stage 106:====================================================>(114 + 1) / 115]                                                                                [Stage 107:======================================>              (85 + 31) / 116][Stage 107:=============================================>      (101 + 15) / 116][Stage 107:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.655712177 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionInd ex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 32  OR  partitionInd ex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344320889 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 108:====================================>                (80 + 35) / 115][Stage 108:======================================>              (84 + 31) / 115][Stage 108:===========================================>         (94 + 21) / 115][Stage 108:=================================================>   (108 + 7) / 115][Stage 108:====================================================>(114 + 1) / 115]                                                                                [Stage 109:=====================================>               (83 + 33) / 116][Stage 109:========================================>            (88 + 28) / 116][Stage 109:============================================>       (100 + 16) / 116][Stage 109:================================================>    (107 + 9) / 116][Stage 109:=================================================>   (109 + 7) / 116][Stage 109:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 7.250064258 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide87"
dataSource: String = /nidan/orc/individualORC/slide87

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionI ndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 160  OR  parti tionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417811987 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 110:==========================>                          (60 + 60) / 120][Stage 110:=============================>                       (66 + 54) / 120][Stage 110:===================================>                 (81 + 39) / 120][Stage 110:============================================>       (103 + 17) / 120][Stage 110:====================================================>(118 + 2) / 120][Stage 110:====================================================>(119 + 1) / 120]                                                                                [Stage 111:==========================>                          (61 + 60) / 121][Stage 111:=============================>                       (68 + 53) / 121][Stage 111:====================================>                (83 + 38) / 121][Stage 111:=================================================>   (114 + 7) / 121][Stage 111:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.090479082 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide83"
dataSource: String = /nidan/orc/individualORC/slide83

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionI ndex = 125  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  parti tionIndex = 166  OR  partitionIndex = 167  OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.346409651 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 112:====================================>                (80 + 35) / 115][Stage 112:=========================================>           (89 + 26) / 115][Stage 112:=================================================>   (107 + 8) / 115][Stage 112:==================================================>  (110 + 5) / 115]                                                                                [Stage 113:=======================================>             (86 + 30) / 116][Stage 113:=========================================>           (90 + 26) / 116][Stage 113:===============================================>    (105 + 11) / 116][Stage 113:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.883860022 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIn dex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionI ndex = 80  OR  partitionIndex = 81  OR  partitionIndex = 82 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionIndex = 82 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.336443664 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 114:=====================================>               (81 + 34) / 115][Stage 114:=========================================>           (91 + 24) / 115][Stage 114:===============================================>    (104 + 11) / 115][Stage 114:===================================================> (112 + 3) / 115]                                                                                [Stage 115:=====================================>               (82 + 34) / 116][Stage 115:========================================>            (88 + 28) / 116][Stage 115:=============================================>       (99 + 17) / 116][Stage 115:===================================================> (112 + 4) / 116][Stage 115:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.933162005 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide11"
dataSource: String = /nidan/orc/individualORC/slide11

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIn dex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionI ndex = 92  OR  partitionIndex = 105  OR  partitionIndex = 106 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 105  OR  partitionIndex = 106 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373864294 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 116:===============================>                     (69 + 46) / 115][Stage 116:=======================================>             (85 + 30) / 115][Stage 116:=============================================>      (101 + 14) / 115][Stage 116:====================================================>(114 + 1) / 115]                                                                                [Stage 117:===============================>                     (69 + 47) / 116][Stage 117:=====================================>               (81 + 35) / 116][Stage 117:============================================>        (98 + 18) / 116][Stage 117:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.763794516 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIn dex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionI ndex = 80  OR  partitionIndex = 107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.401685097 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 118:==========================>                          (61 + 60) / 121][Stage 118:==================================>                  (78 + 43) / 121][Stage 118:===========================================>        (102 + 19) / 121][Stage 118:=================================================>   (114 + 7) / 121]                                                                                [Stage 119:==========================>                          (61 + 61) / 122][Stage 119:==============================>                      (71 + 51) / 122][Stage 119:========================================>            (93 + 29) / 122][Stage 119:=================================================>   (113 + 9) / 122][Stage 119:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.513606972 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionI ndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  parti tionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353178759 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 120:==================================>                  (74 + 39) / 113][Stage 120:=======================================>             (84 + 29) / 113][Stage 120:==========================================>          (91 + 22) / 113][Stage 120:==============================================>     (100 + 13) / 113][Stage 120:==================================================>  (108 + 5) / 113]                                                                                [Stage 121:=====================================>               (80 + 34) / 114][Stage 121:========================================>            (88 + 26) / 114][Stage 121:==============================================>      (99 + 15) / 114][Stage 121:==================================================>  (109 + 5) / 114][Stage 121:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.163223481 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIn dex = 94  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionI ndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367478391 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 122:================================>                    (73 + 45) / 118][Stage 122:===================================>                 (80 + 38) / 118][Stage 122:=======================================>             (89 + 29) / 118][Stage 122:============================================>       (100 + 18) / 118][Stage 122:====================================================>(116 + 2) / 118][Stage 122:====================================================>(117 + 1) / 118]                                                                                [Stage 123:================================>                    (73 + 46) / 119][Stage 123:==================================>                  (78 + 41) / 119][Stage 123:====================================>                (82 + 37) / 119][Stage 123:===========================================>         (98 + 21) / 119][Stage 123:=================================================>   (112 + 7) / 119][Stage 123:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.136671017 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionI ndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  parti tionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135  OR  partitionIndex = 136 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373887536 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 124:===============================>                     (68 + 47) / 115][Stage 124:========================================>            (87 + 28) / 115][Stage 124:=============================================>      (100 + 15) / 115][Stage 124:====================================================>(113 + 2) / 115]                                                                                [Stage 125:==================================>                  (76 + 40) / 116][Stage 125:==========================================>          (94 + 22) / 116][Stage 125:=================================================>   (108 + 8) / 116][Stage 125:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.839536515 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide82"
dataSource: String = /nidan/orc/individualORC/slide82

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionI ndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  parti tionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362873968 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 126:===============================>                     (71 + 47) / 118][Stage 126:=================================>                   (75 + 43) / 118][Stage 126:======================================>              (86 + 32) / 118][Stage 126:=================================================>   (111 + 7) / 118]                                                                                [Stage 127:================================>                    (73 + 46) / 119][Stage 127:===================================>                 (80 + 39) / 119][Stage 127:============================================>        (99 + 20) / 119][Stage 127:==================================================>  (114 + 5) / 119][Stage 127:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.478273606 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIn dex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionI ndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341224811 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 128:=====================================>               (81 + 34) / 115][Stage 128:======================================>              (84 + 31) / 115][Stage 128:=============================================>      (100 + 15) / 115][Stage 128:=================================================>   (107 + 8) / 115][Stage 128:===================================================> (112 + 3) / 115]                                                                                [Stage 129:=====================================>               (82 + 34) / 116][Stage 129:==========================================>          (93 + 23) / 116][Stage 129:==============================================>     (103 + 13) / 116][Stage 129:==================================================>  (110 + 6) / 116][Stage 129:===================================================> (112 + 4) / 116][Stage 129:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 4.847910945 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide22"
dataSource: String = /nidan/orc/individualORC/slide22

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionInd ex = 5  OR  partitionIndex = 6  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionInde x = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406595285 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 130:===========================>                         (58 + 55) / 113][Stage 130:==============================>                      (65 + 48) / 113][Stage 130:====================================>                (77 + 36) / 113][Stage 130:==============================================>     (102 + 11) / 113][Stage 130:====================================================>(111 + 2) / 113]                                                                                [Stage 131:============================>                        (62 + 52) / 114][Stage 131:================================>                    (69 + 45) / 114][Stage 131:========================================>            (87 + 27) / 114][Stage 131:=================================================>   (106 + 8) / 114][Stage 131:===================================================> (110 + 4) / 114][Stage 131:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 5.549604797 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionI ndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  parti tionIndex = 216  OR  partitionIndex = 229  OR  partitionIndex = 230 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 229  OR  partitionIndex = 230 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33695323 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 132:=====================================>               (81 + 34) / 115][Stage 132:========================================>            (87 + 28) / 115][Stage 132:=============================================>       (98 + 17) / 115][Stage 132:==================================================>  (110 + 5) / 115][Stage 132:====================================================>(114 + 1) / 115]                                                                                [Stage 133:=====================================>               (82 + 34) / 116][Stage 133:========================================>            (88 + 28) / 116][Stage 133:==============================================>     (103 + 13) / 116][Stage 133:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.835900132 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionI ndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  parti tionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 153  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347758459 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 134:====================================>                (77 + 36) / 113][Stage 134:=========================================>           (89 + 24) / 113][Stage 134:=============================================>       (96 + 17) / 113][Stage 134:==================================================>  (108 + 5) / 113]                                                                                [Stage 135:===================================>                 (76 + 38) / 114][Stage 135:=======================================>             (85 + 29) / 114][Stage 135:===========================================>         (94 + 20) / 114][Stage 135:=================================================>   (107 + 7) / 114][Stage 135:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.051135509 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionI ndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  parti tionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.487308312 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 136:==========================>                          (60 + 60) / 120][Stage 136:===============================>                     (72 + 48) / 120][Stage 136:=======================================>             (89 + 31) / 120][Stage 136:=============================================>      (105 + 15) / 120][Stage 136:===================================================> (117 + 3) / 120]                                                                                [Stage 137:==========================>                          (61 + 60) / 121][Stage 137:=============================>                       (67 + 54) / 121][Stage 137:===================================>                 (80 + 41) / 121][Stage 137:=============================================>      (106 + 15) / 121][Stage 137:==================================================>  (115 + 6) / 121][Stage 137:===================================================> (118 + 3) / 121][Stage 137:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.014587435 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionInd ex = 5  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionInd ex = 46  OR  partitionIndex = 47  OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394686398 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 138:==========================>                          (61 + 59) / 120][Stage 138:================================>                    (73 + 47) / 120][Stage 138:==========================================>          (97 + 23) / 120][Stage 138:==================================================>  (114 + 6) / 120]                                                                                [Stage 139:===========================>                         (62 + 59) / 121][Stage 139:=================================>                   (76 + 45) / 121][Stage 139:===========================================>        (102 + 19) / 121][Stage 139:=================================================>   (113 + 8) / 121][Stage 139:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.742916478 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide65"
dataSource: String = /nidan/orc/individualORC/slide65

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionInd ex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIn dex = 36  OR  partitionIndex = 49  OR  partitionIndex = 50 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 49  OR  partitionIndex = 50 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356681828 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 140:==================================>                  (73 + 40) / 113][Stage 140:=======================================>             (85 + 28) / 113][Stage 140:==============================================>     (101 + 12) / 113][Stage 140:===================================================> (109 + 4) / 113][Stage 140:====================================================>(111 + 2) / 113][Stage 140:====================================================>(112 + 1) / 113]                                                                                [Stage 141:=================================>                   (72 + 42) / 114][Stage 141:=======================================>             (84 + 30) / 114][Stage 141:==========================================>          (91 + 23) / 114][Stage 141:=============================================>       (97 + 17) / 114][Stage 141:=============================================>       (98 + 16) / 114][Stage 141:==================================================>  (109 + 5) / 114][Stage 141:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 7.518182601 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIn dex = 11  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionI ndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353498886 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 142:====================================>                (78 + 35) / 113][Stage 142:========================================>            (87 + 26) / 113][Stage 142:=============================================>       (98 + 15) / 113][Stage 142:=================================================>   (105 + 8) / 113][Stage 142:====================================================>(112 + 1) / 113]                                                                                [Stage 143:======================================>              (82 + 32) / 114][Stage 143:=========================================>           (90 + 24) / 114][Stage 143:==============================================>     (102 + 12) / 114][Stage 143:================================================>    (105 + 9) / 114][Stage 143:=================================================>   (107 + 7) / 114][Stage 143:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 7.416019999 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionI ndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  parti tionIndex = 160  OR  partitionIndex = 173  OR  partitionIndex = 174 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 173  OR  partitionIndex = 174 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402828748 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 144:==========================>                          (60 + 61) / 121][Stage 144:===========================>                         (62 + 59) / 121][Stage 144:=============================>                       (67 + 54) / 121][Stage 144:===================================>                 (82 + 39) / 121][Stage 144:============================================>       (104 + 17) / 121]                                                                                [Stage 145:==========================>                          (61 + 61) / 122][Stage 145:===============================>                     (72 + 50) / 122][Stage 145:=====================================>               (87 + 35) / 122][Stage 145:==============================================>     (108 + 14) / 122][Stage 145:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 3.792337887 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide81"
dataSource: String = /nidan/orc/individualORC/slide81

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionI ndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  parti tionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431209431 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 146:==============================>                      (67 + 48) / 115][Stage 146:====================================>                (79 + 36) / 115][Stage 146:==========================================>          (92 + 23) / 115][Stage 146:=================================================>   (108 + 7) / 115][Stage 146:====================================================>(113 + 2) / 115]                                                                                [Stage 147:===============================>                     (68 + 48) / 116][Stage 147:======================================>              (85 + 31) / 116][Stage 147:=============================================>       (99 + 17) / 116][Stage 147:=================================================>   (108 + 8) / 116][Stage 147:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.934491573 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionI ndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  parti tionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349038845 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 148:=================================>                   (72 + 41) / 113][Stage 148:==========================================>          (90 + 23) / 113][Stage 148:=============================================>       (97 + 16) / 113][Stage 148:=================================================>   (105 + 8) / 113][Stage 148:====================================================>(111 + 2) / 113]                                                                                [Stage 149:=======================================>             (84 + 30) / 114][Stage 149:============================================>        (96 + 18) / 114][Stage 149:================================================>    (105 + 9) / 114][Stage 149:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.085546261 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide47"
dataSource: String = /nidan/orc/individualORC/slide47

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionI ndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  parti tionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.365247539 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 150:================================>                    (72 + 46) / 118][Stage 150:==================================>                  (77 + 41) / 118][Stage 150:=======================================>             (89 + 29) / 118][Stage 150:=============================================>      (104 + 14) / 118][Stage 150:====================================================>(116 + 2) / 118]                                                                                [Stage 151:================================>                    (73 + 46) / 119][Stage 151:=================================>                   (76 + 43) / 119][Stage 151:======================================>              (87 + 32) / 119][Stage 151:==========================================>          (96 + 23) / 119][Stage 151:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.516702879 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide32"
dataSource: String = /nidan/orc/individualORC/slide32

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionI ndex = 131  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  parti tionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368058801 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 152:==================================>                  (74 + 41) / 115][Stage 152:=========================================>           (90 + 25) / 115][Stage 152:===============================================>    (104 + 11) / 115][Stage 152:==================================================>  (110 + 5) / 115][Stage 152:====================================================>(113 + 2) / 115]                                                                                [Stage 153:===============================>                     (68 + 48) / 116][Stage 153:=====================================>               (81 + 35) / 116][Stage 153:==========================================>          (94 + 22) / 116][Stage 153:===============================================>    (105 + 11) / 116][Stage 153:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 3.189101076 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionI ndex = 193  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  parti tionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361761817 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 154:=====================================>               (79 + 34) / 113][Stage 154:=======================================>             (85 + 28) / 113][Stage 154:=============================================>       (98 + 15) / 113][Stage 154:===================================================> (109 + 4) / 113][Stage 154:====================================================>(112 + 1) / 113]                                                                                [Stage 155:=====================================>               (80 + 34) / 114][Stage 155:========================================>            (88 + 26) / 114][Stage 155:=============================================>       (98 + 16) / 114][Stage 155:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.964294476 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIn dex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partiti onIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394316704 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 156:==========================>                          (60 + 60) / 120][Stage 156:===============================>                     (72 + 48) / 120][Stage 156:=====================================>               (86 + 34) / 120][Stage 156:==============================================>     (108 + 12) / 120][Stage 156:===================================================> (117 + 3) / 120]                                                                                [Stage 157:==========================>                          (61 + 60) / 121][Stage 157:============================>                        (66 + 55) / 121][Stage 157:===================================>                 (82 + 39) / 121][Stage 157:===========================================>        (102 + 19) / 121][Stage 157:=================================================>   (112 + 9) / 121][Stage 157:===================================================> (118 + 3) / 121][Stage 157:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.552335048 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionI ndex = 127  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  parti tionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370368426 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 158:=============================>                       (65 + 50) / 115][Stage 158:==================================>                  (75 + 40) / 115][Stage 158:========================================>            (87 + 28) / 115][Stage 158:===============================================>    (105 + 10) / 115][Stage 158:====================================================>(114 + 1) / 115]                                                                                [Stage 159:====================================>                (79 + 37) / 116][Stage 159:==========================================>          (94 + 22) / 116][Stage 159:==================================================>  (110 + 6) / 116][Stage 159:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.930710098 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide77"
dataSource: String = /nidan/orc/individualORC/slide77

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionI ndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  parti tionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395144926 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 160:==========================>                          (61 + 60) / 121][Stage 160:==============================>                      (70 + 51) / 121][Stage 160:=====================================>               (86 + 35) / 121][Stage 160:=============================================>      (107 + 14) / 121][Stage 160:====================================================>(120 + 1) / 121]                                                                                [Stage 161:==========================>                          (61 + 61) / 122][Stage 161:===========================>                         (64 + 58) / 122][Stage 161:====================================>                (83 + 39) / 122][Stage 161:=============================================>      (106 + 16) / 122][Stage 161:==================================================>  (117 + 5) / 122][Stage 161:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.942206646 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionI ndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  parti tionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.33896772 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 162:=====================================>               (81 + 34) / 115][Stage 162:=========================================>           (91 + 24) / 115][Stage 162:==============================================>     (103 + 12) / 115][Stage 162:==================================================>  (110 + 5) / 115][Stage 162:====================================================>(114 + 1) / 115]                                                                                [Stage 163:========================================>            (88 + 28) / 116][Stage 163:===========================================>         (96 + 20) / 116][Stage 163:==================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.889873835 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionI ndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  parti tionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378181094 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 164:============================>                        (60 + 53) / 113][Stage 164:================================>                    (70 + 43) / 113][Stage 164:========================================>            (86 + 27) / 113][Stage 164:==================================================>  (108 + 5) / 113]                                                                                [Stage 165:===========================>                         (59 + 55) / 114][Stage 165:==============================>                      (66 + 48) / 114][Stage 165:====================================>                (78 + 36) / 114][Stage 165:===========================================>         (94 + 20) / 114][Stage 165:==================================================>  (109 + 5) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.726355913 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionI ndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  parti tionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396296189 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 166:>                                                      (0 + 0) / 113][Stage 166:===========================>                         (59 + 54) / 113][Stage 166:==============================>                      (64 + 49) / 113][Stage 166:========================================>            (86 + 27) / 113][Stage 166:==============================================>     (101 + 12) / 113][Stage 166:====================================================>(112 + 1) / 113]                                                                                [Stage 167:===========================>                         (60 + 54) / 114][Stage 167:=================================>                   (71 + 43) / 114][Stage 167:=======================================>             (85 + 29) / 114][Stage 167:==============================================>     (103 + 11) / 114][Stage 167:===================================================> (110 + 4) / 114][Stage 167:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.714012269 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIn dex = 73  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partiti onIndex = 114  OR  partitionIndex = 115  OR  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354481315 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 168:====================================>                (77 + 36) / 113][Stage 168:========================================>            (86 + 27) / 113][Stage 168:=============================================>       (97 + 16) / 113][Stage 168:===================================================> (110 + 3) / 113][Stage 168:====================================================>(112 + 1) / 113]                                                                                [Stage 169:===================================>                 (76 + 38) / 114][Stage 169:========================================>            (87 + 27) / 114][Stage 169:==============================================>     (101 + 13) / 114][Stage 169:=================================================>   (106 + 8) / 114][Stage 169:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.003689183 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionI ndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  parti tionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345240728 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 170:=====================================>               (81 + 32) / 113][Stage 170:=========================================>           (89 + 24) / 113][Stage 170:=================================================>   (105 + 8) / 113][Stage 170:==================================================>  (107 + 6) / 113][Stage 170:===================================================> (109 + 4) / 113][Stage 170:====================================================>(112 + 1) / 113]                                                                                [Stage 171:=======================================>             (84 + 30) / 114][Stage 171:============================================>        (95 + 19) / 114][Stage 171:===============================================>    (104 + 10) / 114][Stage 171:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.287212465 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIn dex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionI ndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 109  OR  partitionIndex = 110 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381091738 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 172:===========================>                         (59 + 54) / 113][Stage 172:================================>                    (69 + 44) / 113][Stage 172:==========================================>          (91 + 22) / 113][Stage 172:====================================================>(111 + 2) / 113]                                                                                [Stage 173:=============================>                       (64 + 50) / 114][Stage 173:===================================>                 (76 + 38) / 114][Stage 173:==========================================>          (91 + 23) / 114][Stage 173:==============================================>     (103 + 11) / 114][Stage 173:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.156392135 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIn dex = 37  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionI ndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 75 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368771229 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 174:================================>                    (70 + 45) / 115][Stage 174:======================================>              (83 + 32) / 115][Stage 174:===============================================>    (105 + 10) / 115][Stage 174:====================================================>(114 + 1) / 115]                                                                                [Stage 175:===============================>                     (70 + 46) / 116][Stage 175:====================================>                (79 + 37) / 116][Stage 175:=========================================>           (90 + 26) / 116][Stage 175:============================================>       (100 + 16) / 116][Stage 175:=================================================>   (108 + 8) / 116][Stage 175:==================================================>  (111 + 5) / 116][Stage 175:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 6.864831541 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide86"
dataSource: String = /nidan/orc/individualORC/slide86

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionI ndex = 123  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  parti tionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.353720817 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 176:==================================>                  (74 + 39) / 113][Stage 176:======================================>              (82 + 31) / 113][Stage 176:============================================>        (95 + 18) / 113][Stage 176:==================================================>  (107 + 6) / 113][Stage 176:===================================================> (110 + 3) / 113][Stage 176:====================================================>(111 + 2) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:==================================>                  (74 + 40) / 114][Stage 177:========================================>            (88 + 26) / 114][Stage 177:=============================================>      (100 + 14) / 114][Stage 177:===================================================> (110 + 4) / 114][Stage 177:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.608028737 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionInd ex = 9  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIn dex = 110  OR  partitionIndex = 111  OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367457949 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 178:==================================>                  (76 + 42) / 118][Stage 178:======================================>              (86 + 32) / 118][Stage 178:===========================================>         (96 + 22) / 118][Stage 178:===============================================>    (107 + 11) / 118]                                                                                [Stage 179:================================>                    (74 + 45) / 119][Stage 179:======================================>              (86 + 33) / 119][Stage 179:===========================================>        (100 + 19) / 119][Stage 179:=================================================>   (111 + 8) / 119]                                                                                Time elapsed: 3.535881741 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIn dex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionI ndex = 100  OR  partitionIndex = 113  OR  partitionIndex = 114 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 113  OR  partitionIndex = 114 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.409296365 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 180:================================>                    (72 + 46) / 118][Stage 180:==================================>                  (77 + 41) / 118][Stage 180:=====================================>               (84 + 34) / 118][Stage 180:============================================>       (102 + 16) / 118][Stage 180:====================================================>(117 + 1) / 118]                                                                                [Stage 181:================================>                    (74 + 45) / 119][Stage 181:==================================>                  (78 + 41) / 119][Stage 181:==========================================>          (95 + 24) / 119][Stage 181:==============================================>     (106 + 13) / 119][Stage 181:===================================================> (115 + 4) / 119][Stage 181:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.544683715 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide90"
dataSource: String = /nidan/orc/individualORC/slide90

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIn dex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionI ndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.335076663 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 182:=======================================>             (85 + 30) / 115][Stage 182:=========================================>           (91 + 24) / 115][Stage 182:==============================================>     (103 + 12) / 115][Stage 182:===================================================> (112 + 3) / 115]                                                                                [Stage 183:=====================================>               (83 + 33) / 116][Stage 183:========================================>            (89 + 27) / 116][Stage 183:=============================================>      (102 + 14) / 116][Stage 183:===============================================>    (106 + 10) / 116][Stage 183:=================================================>   (108 + 8) / 116][Stage 183:==================================================>  (110 + 6) / 116][Stage 183:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 7.50822768 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1  OR  partitionInd ex = 2  OR  partitionIndex = 3  OR  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionInde x = 17  OR  partitionIndex = 18  OR  partitionIndex = 30 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 1  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.344308972 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 184:===================================>                 (75 + 38) / 113][Stage 184:=========================================>           (88 + 25) / 113][Stage 184:==============================================>      (99 + 14) / 113][Stage 184:==================================================>  (108 + 5) / 113][Stage 184:===================================================> (109 + 4) / 113][Stage 184:====================================================>(111 + 2) / 113]                                                                                [Stage 185:==================================>                  (74 + 40) / 114][Stage 185:======================================>              (83 + 31) / 114][Stage 185:=========================================>           (90 + 24) / 114][Stage 185:==============================================>      (99 + 15) / 114][Stage 185:=================================================>   (106 + 8) / 114][Stage 185:==================================================>  (108 + 6) / 114][Stage 185:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 9.006966057 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIn dex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionI ndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404939445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 186:==========================>                          (61 + 60) / 121][Stage 186:================================>                    (74 + 47) / 121][Stage 186:=========================================>           (94 + 27) / 121][Stage 186:=================================================>   (112 + 9) / 121]                                                                                [Stage 187:==========================>                          (61 + 61) / 122][Stage 187:=============================>                       (67 + 55) / 122][Stage 187:=====================================>               (86 + 36) / 122][Stage 187:==============================================>     (110 + 12) / 122][Stage 187:==================================================>  (116 + 6) / 122][Stage 187:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.844053817 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionI ndex = 185  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  parti tionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.337889848 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 188:======================================>              (84 + 31) / 115][Stage 188:=========================================>           (91 + 24) / 115][Stage 188:================================================>    (106 + 9) / 115][Stage 188:==================================================>  (110 + 5) / 115][Stage 188:====================================================>(114 + 1) / 115]                                                                                [Stage 189:=======================================>             (86 + 30) / 116][Stage 189:==========================================>          (94 + 22) / 116][Stage 189:==================================================>  (111 + 5) / 116][Stage 189:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.040957057 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionI ndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  parti tionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430785148 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 190:================================>                    (72 + 46) / 118][Stage 190:===================================>                 (79 + 39) / 118][Stage 190:=========================================>           (93 + 25) / 118][Stage 190:===============================================>    (107 + 11) / 118][Stage 190:===================================================> (115 + 3) / 118]                                                                                [Stage 191:=================================>                   (76 + 43) / 119][Stage 191:====================================>                (81 + 38) / 119][Stage 191:=======================================>             (89 + 30) / 119][Stage 191:=============================================>      (104 + 15) / 119][Stage 191:====================================================>(117 + 2) / 119]                                                                                Time elapsed: 3.523274874 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide19"
dataSource: String = /nidan/orc/individualORC/slide19

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionI ndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  parti tionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351427781 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 192:================================>                    (73 + 45) / 118][Stage 192:====================================>                (81 + 37) / 118][Stage 192:============================================>       (102 + 16) / 118][Stage 192:==================================================>  (112 + 6) / 118]                                                                                [Stage 193:==================================>                  (78 + 41) / 119][Stage 193:=======================================>             (89 + 30) / 119][Stage 193:=============================================>      (104 + 15) / 119][Stage 193:==================================================>  (113 + 6) / 119][Stage 193:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.374638112 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIn dex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionI ndex = 70  OR  partitionIndex = 83  OR  partitionIndex = 84 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 83  OR  partitionIndex = 84 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.345863576 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 194:=======================================>             (86 + 29) / 115][Stage 194:===========================================>         (94 + 21) / 115][Stage 194:=================================================>   (108 + 7) / 115][Stage 194:====================================================>(113 + 2) / 115]                                                                                [Stage 195:========================================>            (88 + 28) / 116][Stage 195:===========================================>         (95 + 21) / 116][Stage 195:===============================================>    (106 + 10) / 116][Stage 195:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.139122616 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide53"
dataSource: String = /nidan/orc/individualORC/slide53

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionI ndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  parti tionIndex = 166  OR  partitionIndex = 167  OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 166  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378145685 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 196:=================================>                   (73 + 42) / 115][Stage 196:===================================>                 (78 + 37) / 115][Stage 196:============================================>        (96 + 19) / 115][Stage 196:===================================================> (112 + 3) / 115]                                                                                [Stage 197:=================================>                   (74 + 42) / 116][Stage 197:============================================>        (97 + 19) / 116][Stage 197:================================================>    (107 + 9) / 116][Stage 197:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.830522594 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionI ndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  parti tionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47612015 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 198:==========================>                          (61 + 60) / 121][Stage 198:===============================>                     (71 + 50) / 121][Stage 198:=======================================>             (91 + 30) / 121][Stage 198:=================================================>   (114 + 7) / 121]                                                                                [Stage 199:=============================>                       (67 + 55) / 122][Stage 199:==================================>                  (80 + 42) / 122][Stage 199:=========================================>           (95 + 27) / 122][Stage 199:===================================================> (118 + 4) / 122][Stage 199:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.806403799 seconds
res203: Int = 0

scala> 

scala> :quit

real	11m27.392s
user	12m22.180s
sys	1m28.664s
