Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/25 02:29:37 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 02:29:51 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 02:29:51 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 02:29:52 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/25 02:29:54 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/25 02:30:05 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170525022953-0625).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.474757683 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIn dex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:===========>                                           (25 + 90) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:================================>                      (67 + 48) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:====================================>                  (76 + 39) / 115][Stage 0:========================================>              (85 + 30) / 115][Stage 0:===========================================>           (91 + 24) / 115][Stage 0:=============================================>         (95 + 20) / 115][Stage 0:===============================================>      (101 + 14) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:===================================================>   (108 + 7) / 115][Stage 0:=====================================================> (112 + 3) / 115]                                                                                [Stage 1:========================>                              (52 + 64) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:===============================>                       (67 + 49) / 116][Stage 1:=================================>                     (70 + 46) / 116][Stage 1:====================================>                  (77 + 39) / 116][Stage 1:========================================>              (85 + 31) / 116][Stage 1:==============================================>       (100 + 16) / 116][Stage 1:=================================================>    (106 + 10) / 116][Stage 1:=====================================================> (113 + 3) / 116]                                                                                Time elapsed: 12.462131364 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide31"
dataSource: String = /nidan/orc/individualORC/slide31

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIn dex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionI ndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.782358822 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 2:======================>                                (48 + 72) / 120][Stage 2:==========================>                            (58 + 62) / 120][Stage 2:============================>                          (63 + 57) / 120][Stage 2:===============================>                       (69 + 51) / 120][Stage 2:==================================>                    (76 + 44) / 120][Stage 2:=======================================>               (87 + 33) / 120][Stage 2:================================================>     (108 + 12) / 120][Stage 2:======================================================>(118 + 2) / 120]                                                                                [Stage 3:===========================>                           (60 + 61) / 121][Stage 3:============================>                          (62 + 59) / 121][Stage 3:===============================>                       (70 + 51) / 121][Stage 3:=====================================>                 (82 + 39) / 121][Stage 3:===========================================>           (95 + 26) / 121][Stage 3:===================================================>   (114 + 7) / 121][Stage 3:=====================================================> (118 + 3) / 121][Stage 3:======================================================>(119 + 2) / 121]                                                                                Time elapsed: 6.599162676 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionI ndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  parti tionIndex = 156  OR  partitionIndex = 169  OR  partitionIndex = 170 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 169  OR  partitionIndex = 170 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.658301945 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 4:=============================>                         (62 + 53) / 115][Stage 4:==============================>                        (64 + 51) / 115][Stage 4:==================================>                    (73 + 42) / 115][Stage 4:====================================>                  (76 + 39) / 115][Stage 4:=========================================>             (87 + 28) / 115][Stage 4:=============================================>         (95 + 20) / 115][Stage 4:================================================>     (104 + 11) / 115][Stage 4:=====================================================> (111 + 4) / 115][Stage 4:======================================================>(113 + 2) / 115]                                                                                [Stage 5:==============================>                        (65 + 51) / 116][Stage 5:=================================>                     (70 + 46) / 116][Stage 5:=======================================>               (84 + 32) / 116][Stage 5:=============================================>         (96 + 20) / 116][Stage 5:=============================================>         (97 + 19) / 116][Stage 5:===============================================>      (102 + 14) / 116][Stage 5:=====================================================> (112 + 4) / 116][Stage 5:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.063317717 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionI ndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  parti tionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.559156315 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 6:=====================================>                 (78 + 37) / 115][Stage 6:======================================>                (80 + 35) / 115][Stage 6:=======================================>               (82 + 33) / 115][Stage 6:============================================>          (94 + 21) / 115][Stage 6:===============================================>      (101 + 14) / 115][Stage 6:====================================================>  (109 + 6) / 115][Stage 6:======================================================>(114 + 1) / 115]                                                                                [Stage 7:======================================>                (82 + 34) / 116][Stage 7:========================================>              (85 + 31) / 116][Stage 7:===========================================>           (91 + 25) / 116][Stage 7:================================================>     (104 + 12) / 116][Stage 7:===================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.881989012 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide58"
dataSource: String = /nidan/orc/individualORC/slide58

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionI ndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  parti tionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.537546218 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 8:==================================>                    (70 + 43) / 113][Stage 8:===================================>                   (72 + 41) / 113][Stage 8:========================================>              (83 + 30) / 113][Stage 8:=============================================>         (93 + 20) / 113][Stage 8:=================================================>    (103 + 10) / 113][Stage 8:====================================================>  (108 + 5) / 113][Stage 8:======================================================>(111 + 2) / 113]                                                                                [Stage 9:==================================>                    (71 + 43) / 114][Stage 9:====================================>                  (76 + 38) / 114][Stage 9:=========================================>             (86 + 28) / 114][Stage 9:==============================================>        (96 + 18) / 114][Stage 9:================================================>     (103 + 11) / 114][Stage 9:===================================================>   (107 + 7) / 114][Stage 9:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.991326403 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIn dex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionI ndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.553838294 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 10:>                                                       (0 + 0) / 115][Stage 10:=============================>                        (62 + 53) / 115][Stage 10:=================================>                    (71 + 44) / 115][Stage 10:====================================>                 (78 + 37) / 115][Stage 10:========================================>             (86 + 29) / 115][Stage 10:==========================================>           (91 + 24) / 115][Stage 10:==============================================>      (101 + 14) / 115][Stage 10:================================================>    (105 + 10) / 115][Stage 10:===================================================>  (109 + 6) / 115][Stage 10:====================================================> (112 + 3) / 115]                                                                                [Stage 11:================================>                     (70 + 46) / 116][Stage 11:====================================>                 (78 + 38) / 116][Stage 11:=======================================>              (85 + 31) / 116][Stage 11:========================================>             (87 + 29) / 116][Stage 11:==========================================>           (91 + 25) / 116][Stage 11:==============================================>      (101 + 15) / 116][Stage 11:===============================================>     (104 + 12) / 116][Stage 11:==================================================>   (108 + 8) / 116][Stage 11:===================================================>  (110 + 6) / 116][Stage 11:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 10.274290151 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIn dex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionI ndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.506387026 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 12:======================================>               (82 + 33) / 115][Stage 12:==========================================>           (91 + 24) / 115][Stage 12:===============================================>     (104 + 11) / 115][Stage 12:==================================================>   (107 + 8) / 115][Stage 12:===================================================>  (109 + 6) / 115][Stage 12:=====================================================>(113 + 2) / 115][Stage 12:=====================================================>(114 + 1) / 115]                                                                                [Stage 13:=====================================>                (81 + 35) / 116][Stage 13:==========================================>           (91 + 25) / 116][Stage 13:===============================================>     (103 + 13) / 116][Stage 13:===================================================>  (110 + 6) / 116][Stage 13:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.556453276 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionI ndex = 133  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  parti tionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.526825015 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 14:==============================>                       (64 + 51) / 115][Stage 14:================================>                     (70 + 45) / 115][Stage 14:====================================>                 (78 + 37) / 115][Stage 14:========================================>             (86 + 29) / 115][Stage 14:==========================================>           (90 + 25) / 115][Stage 14:============================================>         (94 + 21) / 115][Stage 14:=================================================>    (106 + 9) / 115][Stage 14:====================================================> (112 + 3) / 115][Stage 14:=====================================================>(114 + 1) / 115]                                                                                [Stage 15:===============================>                      (67 + 49) / 116][Stage 15:====================================>                 (79 + 37) / 116][Stage 15:==========================================>           (91 + 25) / 116][Stage 15:==============================================>      (102 + 14) / 116][Stage 15:==================================================>   (109 + 7) / 116][Stage 15:===================================================>  (110 + 6) / 116][Stage 15:===================================================>  (111 + 5) / 116][Stage 15:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.704958487 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionI ndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  parti tionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.550696618 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 16:===========================>                          (58 + 55) / 113][Stage 16:============================>                         (59 + 54) / 113][Stage 16:===============================>                      (66 + 47) / 113][Stage 16:=====================================>                (78 + 35) / 113][Stage 16:=============================================>        (95 + 18) / 113][Stage 16:===================================================>  (108 + 5) / 113]                                                                                [Stage 17:============================>                         (61 + 53) / 114][Stage 17:=================================>                    (70 + 44) / 114][Stage 17:========================================>             (86 + 28) / 114][Stage 17:==============================================>       (98 + 16) / 114][Stage 17:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.063801643 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIn dex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionI ndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.510403175 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 18:============================>                         (59 + 54) / 113][Stage 18:=============================>                        (62 + 51) / 113][Stage 18:=====================================>                (78 + 35) / 113][Stage 18:===========================================>          (92 + 21) / 113][Stage 18:==============================================>      (100 + 13) / 113][Stage 18:=====================================================>(111 + 2) / 113]                                                                                [Stage 19:===========================>                          (58 + 56) / 114][Stage 19:=============================>                        (63 + 51) / 114][Stage 19:===================================>                  (75 + 39) / 114][Stage 19:===========================================>          (92 + 22) / 114][Stage 19:================================================>    (104 + 10) / 114][Stage 19:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.076447557 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionI ndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  parti tionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.52627833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 20:===============================>                      (68 + 47) / 115][Stage 20:===================================>                  (76 + 39) / 115][Stage 20:==============================================>       (99 + 16) / 115][Stage 20:==================================================>   (108 + 7) / 115]                                                                                [Stage 21:=================================>                    (73 + 43) / 116][Stage 21:=======================================>              (85 + 31) / 116][Stage 21:==============================================>       (99 + 17) / 116][Stage 21:===================================================>  (111 + 5) / 116][Stage 21:====================================================> (112 + 4) / 116][Stage 21:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.772821051 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionI ndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  parti tionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.477281358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 22:==============================>                       (65 + 50) / 115][Stage 22:==================================>                   (73 + 42) / 115][Stage 22:==========================================>           (91 + 24) / 115][Stage 22:==============================================>      (101 + 14) / 115][Stage 22:====================================================> (112 + 3) / 115][Stage 22:=====================================================>(114 + 1) / 115]                                                                                [Stage 23:==============================>                       (66 + 50) / 116][Stage 23:====================================>                 (79 + 37) / 116][Stage 23:=============================================>        (97 + 19) / 116][Stage 23:===============================================>     (104 + 12) / 116][Stage 23:===================================================>  (111 + 5) / 116][Stage 23:====================================================> (113 + 3) / 116][Stage 23:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.932650277 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide41"
dataSource: String = /nidan/orc/individualORC/slide41

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIn dex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionI ndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.465985758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 24:=====================================>                (79 + 36) / 115][Stage 24:========================================>             (86 + 29) / 115][Stage 24:=============================================>        (97 + 18) / 115][Stage 24:==================================================>   (107 + 8) / 115]                                                                                [Stage 25:=====================================>                (81 + 35) / 116][Stage 25:=========================================>            (89 + 27) / 116][Stage 25:=============================================>       (100 + 16) / 116][Stage 25:===================================================>  (110 + 6) / 116][Stage 25:=====================================================>(114 + 2) / 116][Stage 25:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.545505619 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionI ndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  parti tionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.488907835 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 26:================================>                     (70 + 48) / 118][Stage 26:=================================>                    (73 + 45) / 118][Stage 26:====================================>                 (79 + 39) / 118][Stage 26:============================================>        (100 + 18) / 118][Stage 26:=====================================================>(116 + 2) / 118][Stage 26:=====================================================>(117 + 1) / 118]                                                                                [Stage 27:=================================>                    (73 + 46) / 119][Stage 27:=================================>                    (74 + 45) / 119][Stage 27:=======================================>              (88 + 31) / 119][Stage 27:=============================================>       (103 + 16) / 119][Stage 27:=================================================>    (110 + 9) / 119]                                                                                Time elapsed: 3.77060181 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionI ndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  parti tionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.504531408 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 28:==========================>                           (60 + 61) / 121][Stage 28:=============================>                        (67 + 54) / 121][Stage 28:======================================>               (87 + 34) / 121][Stage 28:==================================================>   (113 + 8) / 121]                                                                                [Stage 29:===========================>                          (61 + 61) / 122][Stage 29:============================>                         (65 + 57) / 122][Stage 29:====================================>                 (83 + 39) / 122][Stage 29:==============================================>      (106 + 16) / 122][Stage 29:===================================================>  (116 + 6) / 122]                                                                                Time elapsed: 4.632513226 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionI ndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  parti tionIndex = 212  OR  partitionIndex = 225  OR  partitionIndex = 226 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 225  OR  partitionIndex = 226 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.527709047 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 30:===========================>                          (60 + 60) / 120][Stage 30:==============================>                       (67 + 53) / 120][Stage 30:======================================>               (86 + 34) / 120][Stage 30:============================================>        (101 + 19) / 120][Stage 30:================================================>    (110 + 10) / 120][Stage 30:====================================================> (117 + 3) / 120]                                                                                [Stage 31:============================>                         (63 + 58) / 121][Stage 31:================================>                     (73 + 48) / 121][Stage 31:========================================>             (90 + 31) / 121][Stage 31:==============================================>      (107 + 14) / 121][Stage 31:===================================================>  (116 + 5) / 121]                                                                                Time elapsed: 4.024061687 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIn dex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionI ndex = 100  OR  partitionIndex = 113  OR  partitionIndex = 114 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 71  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 113  OR  partitionIndex = 114 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.460285833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 32:=================================>                    (73 + 45) / 118][Stage 32:===================================>                  (77 + 41) / 118][Stage 32:==========================================>           (92 + 26) / 118][Stage 32:==============================================>      (103 + 15) / 118][Stage 32:===================================================>  (112 + 6) / 118][Stage 32:=====================================================>(116 + 2) / 118]                                                                                [Stage 33:=================================>                    (73 + 46) / 119][Stage 33:==================================>                   (77 + 42) / 119][Stage 33:=========================================>            (92 + 27) / 119][Stage 33:=============================================>       (103 + 16) / 119][Stage 33:=====================================================>(117 + 2) / 119][Stage 33:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.030717041 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide16"
dataSource: String = /nidan/orc/individualORC/slide16

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionI ndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  parti tionIndex = 148  OR  partitionIndex = 175  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438880778 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 34:===================================>                  (75 + 38) / 113][Stage 34:=========================================>            (87 + 26) / 113][Stage 34:=============================================>        (96 + 17) / 113][Stage 34:=================================================>    (104 + 9) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:====================================>                 (76 + 38) / 114][Stage 35:=======================================>              (84 + 30) / 114][Stage 35:===========================================>          (92 + 22) / 114][Stage 35:==================================================>   (106 + 8) / 114][Stage 35:===================================================>  (109 + 5) / 114][Stage 35:====================================================> (111 + 3) / 114][Stage 35:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.523216557 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide49"
dataSource: String = /nidan/orc/individualORC/slide49

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionI ndex = 135  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  parti tionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.513478854 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 36:==========================>                           (60 + 61) / 121][Stage 36:================================>                     (73 + 48) / 121][Stage 36:======================================>               (87 + 34) / 121][Stage 36:==================================================>   (114 + 7) / 121]                                                                                [Stage 37:===========================>                          (63 + 59) / 122][Stage 37:================================>                     (73 + 49) / 122][Stage 37:====================================>                 (83 + 39) / 122][Stage 37:===============================================>     (109 + 13) / 122][Stage 37:====================================================> (119 + 3) / 122][Stage 37:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.47034394 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIn dex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 92  OR  partitionI ndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.530094411 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 38:===========================>                          (60 + 60) / 120][Stage 38:============================>                         (64 + 56) / 120][Stage 38:===================================>                  (78 + 42) / 120][Stage 38:=========================================>            (92 + 28) / 120][Stage 38:===================================================>  (115 + 5) / 120]                                                                                [Stage 39:===========================>                          (61 + 60) / 121][Stage 39:=============================>                        (65 + 56) / 121][Stage 39:=====================================>                (83 + 38) / 121][Stage 39:==============================================>      (107 + 14) / 121][Stage 39:==================================================>   (113 + 8) / 121][Stage 39:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.614441076 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide45"
dataSource: String = /nidan/orc/individualORC/slide45

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionI ndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  parti tionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203  OR  partitionIndex = 204 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.505279743 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 40:===========================>                          (60 + 60) / 120][Stage 40:============================>                         (64 + 56) / 120][Stage 40:==================================>                   (76 + 44) / 120][Stage 40:=============================================>       (102 + 18) / 120][Stage 40:=====================================================>(119 + 1) / 120]                                                                                [Stage 41:===========================>                          (61 + 60) / 121][Stage 41:==============================>                       (69 + 52) / 121][Stage 41:======================================>               (86 + 35) / 121][Stage 41:============================================>        (101 + 20) / 121][Stage 41:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.95179117 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionI ndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  parti tionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.439646336 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 42:======================================>               (81 + 34) / 115][Stage 42:========================================>             (87 + 28) / 115][Stage 42:============================================>         (95 + 20) / 115][Stage 42:===============================================>     (104 + 11) / 115][Stage 42:====================================================> (111 + 4) / 115][Stage 42:=====================================================>(114 + 1) / 115]                                                                                [Stage 43:=======================================>              (84 + 32) / 116][Stage 43:=========================================>            (90 + 26) / 116][Stage 43:===============================================>     (103 + 13) / 116][Stage 43:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 3.05194424 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIn dex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionI ndex = 92  OR  partitionIndex = 105  OR  partitionIndex = 106 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 105  OR  partitionIndex = 106 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437133746 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 44:=================================>                    (71 + 42) / 113][Stage 44:=======================================>              (82 + 31) / 113][Stage 44:=============================================>        (95 + 18) / 113][Stage 44:==================================================>   (105 + 8) / 113][Stage 44:=====================================================>(112 + 1) / 113]                                                                                [Stage 45:====================================>                 (76 + 38) / 114][Stage 45:==========================================>           (89 + 25) / 114][Stage 45:==============================================>       (99 + 15) / 114][Stage 45:==================================================>   (107 + 7) / 114][Stage 45:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.296954298 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide66"
dataSource: String = /nidan/orc/individualORC/slide66

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionI ndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  parti tionIndex = 166  OR  partitionIndex = 167  OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.481687339 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 46:===========================>                          (60 + 60) / 120][Stage 46:===============================>                      (70 + 50) / 120][Stage 46:========================================>             (90 + 30) / 120][Stage 46:=================================================>    (111 + 9) / 120]                                                                                [Stage 47:===========================>                          (61 + 60) / 121][Stage 47:=============================>                        (67 + 54) / 121][Stage 47:=====================================>                (85 + 36) / 121][Stage 47:=================================================>    (112 + 9) / 121][Stage 47:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.561458463 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionI ndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  parti tionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396660605 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 48:======================================>               (82 + 33) / 115][Stage 48:========================================>             (87 + 28) / 115][Stage 48:=============================================>        (97 + 18) / 115][Stage 48:==================================================>   (108 + 7) / 115]                                                                                [Stage 49:======================================>               (83 + 33) / 116][Stage 49:===========================================>          (94 + 22) / 116][Stage 49:===============================================>     (105 + 11) / 116][Stage 49:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.977810744 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIn dex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionI ndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419256322 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 50:==================================>                   (73 + 40) / 113][Stage 50:==========================================>           (89 + 24) / 113][Stage 50:==============================================>      (100 + 13) / 113][Stage 50:===================================================>  (108 + 5) / 113][Stage 50:====================================================> (110 + 3) / 113]                                                                                [Stage 51:====================================>                 (78 + 36) / 114][Stage 51:========================================>             (86 + 28) / 114][Stage 51:=============================================>        (97 + 17) / 114][Stage 51:===============================================>     (103 + 11) / 114][Stage 51:===================================================>  (109 + 5) / 114][Stage 51:====================================================> (111 + 3) / 114][Stage 51:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.383401021 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionI ndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  parti tionIndex = 190  OR  partitionIndex = 203  OR  partitionIndex = 204 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 203  OR  partitionIndex = 204 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.490553445 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 52:==========================>                           (60 + 61) / 121][Stage 52:============================>                         (63 + 58) / 121][Stage 52:==================================>                   (77 + 44) / 121][Stage 52:=======================================>              (89 + 32) / 121][Stage 52:===================================================>  (116 + 5) / 121][Stage 52:=====================================================>(120 + 1) / 121]                                                                                [Stage 53:===========================>                          (61 + 61) / 122][Stage 53:============================>                         (65 + 57) / 122][Stage 53:=================================>                    (75 + 47) / 122][Stage 53:==========================================>           (95 + 27) / 122][Stage 53:====================================================> (118 + 4) / 122]                                                                                Time elapsed: 4.188770826 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionInd ex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionInd ex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459207716 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 54:============================>                         (59 + 54) / 113][Stage 54:==============================>                       (64 + 49) / 113][Stage 54:==================================>                   (72 + 41) / 113][Stage 54:===============================================>      (99 + 14) / 113][Stage 54:=====================================================>(111 + 2) / 113]                                                                                [Stage 55:===========================>                          (59 + 55) / 114][Stage 55:================================>                     (68 + 46) / 114][Stage 55:========================================>             (85 + 29) / 114][Stage 55:===============================================>     (102 + 12) / 114][Stage 55:====================================================> (111 + 3) / 114][Stage 55:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 5.008334807 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionI ndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  parti tionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423942914 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 56:================================>                     (72 + 46) / 118][Stage 56:=================================>                    (73 + 45) / 118][Stage 56:=====================================>                (82 + 36) / 118][Stage 56:========================================>             (89 + 29) / 118][Stage 56:================================================>    (107 + 11) / 118][Stage 56:====================================================> (115 + 3) / 118]                                                                                [Stage 57:===================================>                  (78 + 41) / 119][Stage 57:=====================================>                (82 + 37) / 119][Stage 57:=========================================>            (91 + 28) / 119][Stage 57:=============================================>       (102 + 17) / 119][Stage 57:====================================================> (115 + 4) / 119][Stage 57:=====================================================>(117 + 2) / 119]                                                                                Time elapsed: 4.041171838 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide67"
dataSource: String = /nidan/orc/individualORC/slide67

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIn dex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionI ndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 83  OR  partitionIndex = 84 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.421872246 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 58:==============================>                       (64 + 51) / 115][Stage 58:==================================>                   (73 + 42) / 115][Stage 58:============================================>         (94 + 21) / 115][Stage 58:==================================================>   (108 + 7) / 115]                                                                                [Stage 59:=================================>                    (72 + 44) / 116][Stage 59:======================================>               (82 + 34) / 116][Stage 59:==============================================>      (102 + 14) / 116][Stage 59:===================================================>  (111 + 5) / 116][Stage 59:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 4.752930807 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionInd ex = 3  OR  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partitionInd ex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.551252628 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 60:==========================>                           (60 + 61) / 121][Stage 60:===========================>                          (62 + 59) / 121][Stage 60:===================================>                  (80 + 41) / 121][Stage 60:=============================================>       (105 + 16) / 121][Stage 60:====================================================> (118 + 3) / 121]                                                                                [Stage 61:===========================>                          (63 + 59) / 122][Stage 61:===================================>                  (80 + 42) / 122][Stage 61:===========================================>          (99 + 23) / 122][Stage 61:==================================================>   (115 + 7) / 122][Stage 61:=====================================================>(120 + 2) / 122][Stage 61:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.005626995 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIn dex = 65  OR  partitionIndex = 66  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionI ndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 93  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.48219129 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 62:===========================>                          (58 + 55) / 113][Stage 62:=================================>                    (70 + 43) / 113][Stage 62:==========================================>           (89 + 24) / 113][Stage 62:==================================================>   (105 + 8) / 113]                                                                                [Stage 63:=============================>                        (62 + 52) / 114][Stage 63:==================================>                   (72 + 42) / 114][Stage 63:==========================================>           (89 + 25) / 114][Stage 63:=================================================>    (105 + 9) / 114][Stage 63:====================================================> (111 + 3) / 114][Stage 63:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.746142099 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide38"
dataSource: String = /nidan/orc/individualORC/slide38

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionI ndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 160  OR  parti tionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.455260778 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 64:===========================>                          (60 + 60) / 120][Stage 64:=============================>                        (66 + 54) / 120][Stage 64:========================================>             (89 + 31) / 120][Stage 64:===================================================>  (114 + 6) / 120]                                                                                [Stage 65:===========================>                          (62 + 59) / 121][Stage 65:===============================>                      (71 + 50) / 121][Stage 65:=======================================>              (88 + 33) / 121][Stage 65:================================================>    (111 + 10) / 121][Stage 65:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.780570488 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionI ndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  parti tionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.471513352 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 66:==========================>                           (60 + 61) / 121][Stage 66:============================>                         (64 + 57) / 121][Stage 66:===================================>                  (79 + 42) / 121][Stage 66:============================================>        (102 + 19) / 121][Stage 66:====================================================> (117 + 4) / 121]                                                                                [Stage 67:===========================>                          (61 + 61) / 122][Stage 67:=============================>                        (66 + 56) / 122][Stage 67:===================================>                  (81 + 41) / 122][Stage 67:===========================================>         (100 + 22) / 122][Stage 67:===================================================>  (117 + 5) / 122][Stage 67:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.783541826 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide15"
dataSource: String = /nidan/orc/individualORC/slide15

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionI ndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  parti tionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444602218 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 68:============================>                         (59 + 54) / 113][Stage 68:=============================>                        (61 + 52) / 113][Stage 68:===================================>                  (74 + 39) / 113][Stage 68:===========================================>          (92 + 21) / 113][Stage 68:===================================================>  (108 + 5) / 113]                                                                                [Stage 69:============================>                         (60 + 54) / 114][Stage 69:==================================>                   (72 + 42) / 114][Stage 69:===========================================>          (91 + 23) / 114][Stage 69:=================================================>    (105 + 9) / 114][Stage 69:====================================================> (111 + 3) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.860399482 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionI ndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  parti tionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441997749 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 70:==============================>                       (66 + 49) / 115][Stage 70:======================================>               (82 + 33) / 115][Stage 70:==============================================>       (99 + 16) / 115][Stage 70:===================================================>  (109 + 6) / 115]                                                                                [Stage 71:=================================>                    (72 + 44) / 116][Stage 71:===========================================>          (93 + 23) / 116][Stage 71:===============================================>     (105 + 11) / 116][Stage 71:=====================================================>(114 + 2) / 116][Stage 71:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.007581424 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionInd ex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIn dex = 36  OR  partitionIndex = 49  OR  partitionIndex = 50 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 49  OR  partitionIndex = 50 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384901113 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 72:======================================>               (82 + 33) / 115][Stage 72:========================================>             (86 + 29) / 115][Stage 72:============================================>         (95 + 20) / 115][Stage 72:====================================================> (112 + 3) / 115]                                                                                [Stage 73:=======================================>              (85 + 31) / 116][Stage 73:============================================>         (95 + 21) / 116][Stage 73:==============================================>      (102 + 14) / 116][Stage 73:==================================================>   (109 + 7) / 116][Stage 73:====================================================> (113 + 3) / 116]                                                                                Time elapsed: 6.58315371 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionI ndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  parti tionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397307094 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 74:=====================================>                (79 + 34) / 113][Stage 74:=========================================>            (87 + 26) / 113][Stage 74:==============================================>      (100 + 13) / 113][Stage 74:==================================================>   (106 + 7) / 113][Stage 74:=====================================================>(112 + 1) / 113]                                                                                [Stage 75:===================================>                  (75 + 39) / 114][Stage 75:========================================>             (85 + 29) / 114][Stage 75:==============================================>       (99 + 15) / 114][Stage 75:================================================>    (104 + 10) / 114]                                                                                Time elapsed: 2.983570447 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIn dex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionI ndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 85 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 85 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444442714 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 76:===========================>                          (60 + 60) / 120][Stage 76:===============================>                      (71 + 49) / 120][Stage 76:========================================>             (91 + 29) / 120][Stage 76:================================================>    (109 + 11) / 120][Stage 76:====================================================> (117 + 3) / 120]                                                                                [Stage 77:===========================>                          (62 + 59) / 121][Stage 77:===============================>                      (70 + 51) / 121][Stage 77:=========================================>            (94 + 27) / 121][Stage 77:=================================================>    (112 + 9) / 121]                                                                                Time elapsed: 4.29043777 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide12"
dataSource: String = /nidan/orc/individualORC/slide12

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionI ndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  parti tionIndex = 178  OR  partitionIndex = 179  OR  partitionIndex = 180 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179  OR  partitionIndex = 180 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410006055 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 78:================================>                     (72 + 46) / 118][Stage 78:===================================>                  (78 + 40) / 118][Stage 78:=========================================>            (91 + 27) / 118][Stage 78:=================================================>    (109 + 9) / 118][Stage 78:====================================================> (114 + 4) / 118]                                                                                [Stage 79:=================================>                    (73 + 46) / 119][Stage 79:====================================>                 (80 + 39) / 119][Stage 79:==========================================>           (93 + 26) / 119][Stage 79:==============================================>      (104 + 15) / 119][Stage 79:====================================================> (116 + 3) / 119][Stage 79:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.707620317 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionInd ex = 9  OR  partitionIndex = 10  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionInd ex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.361826111 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 80:======================================>               (82 + 33) / 115][Stage 80:==========================================>           (91 + 24) / 115][Stage 80:===============================================>     (104 + 11) / 115][Stage 80:===================================================>  (110 + 5) / 115][Stage 80:=====================================================>(113 + 2) / 115]                                                                                [Stage 81:========================================>             (87 + 29) / 116][Stage 81:==============================================>       (99 + 17) / 116][Stage 81:================================================>    (106 + 10) / 116][Stage 81:===================================================>  (110 + 6) / 116][Stage 81:=====================================================>(114 + 2) / 116][Stage 81:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 5.607687529 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIn dex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionI ndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367054428 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 82:=====================================>                (79 + 36) / 115][Stage 82:======================================>               (82 + 33) / 115][Stage 82:===========================================>          (93 + 22) / 115][Stage 82:===============================================>     (104 + 11) / 115][Stage 82:=====================================================>(113 + 2) / 115]                                                                                [Stage 83:======================================>               (82 + 34) / 116][Stage 83:========================================>             (88 + 28) / 116][Stage 83:===============================================>     (105 + 11) / 116][Stage 83:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.758578455 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide71"
dataSource: String = /nidan/orc/individualORC/slide71

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionI ndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  parti tionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 163  OR  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 177  OR  partitionIndex = 178  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423239518 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 84:============================>                         (59 + 54) / 113][Stage 84:============================>                         (60 + 53) / 113][Stage 84:===================================>                  (75 + 38) / 113][Stage 84:=============================================>        (95 + 18) / 113][Stage 84:==================================================>   (106 + 7) / 113]                                                                                [Stage 85:============================>                         (60 + 54) / 114][Stage 85:==============================>                       (65 + 49) / 114][Stage 85:======================================>               (82 + 32) / 114][Stage 85:==============================================>      (101 + 13) / 114][Stage 85:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.721905221 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIn dex = 15  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionI ndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414949469 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 86:==============================>                       (66 + 49) / 115][Stage 86:====================================>                 (77 + 38) / 115][Stage 86:===========================================>          (92 + 23) / 115][Stage 86:=================================================>    (106 + 9) / 115][Stage 86:=====================================================>(114 + 1) / 115]                                                                                [Stage 87:================================>                     (69 + 47) / 116][Stage 87:=====================================>                (81 + 35) / 116][Stage 87:==========================================>           (92 + 24) / 116][Stage 87:===============================================>     (104 + 12) / 116][Stage 87:================================================>    (106 + 10) / 116][Stage 87:===================================================>  (110 + 6) / 116][Stage 87:====================================================> (113 + 3) / 116][Stage 87:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 8.913310045 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide13"
dataSource: String = /nidan/orc/individualORC/slide13

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionI ndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  parti tionIndex = 200  OR  partitionIndex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378200502 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 88:========================================>             (86 + 29) / 115][Stage 88:=============================================>        (96 + 19) / 115][Stage 88:==================================================>   (107 + 8) / 115][Stage 88:====================================================> (111 + 4) / 115]                                                                                [Stage 89:=======================================>              (85 + 31) / 116][Stage 89:=========================================>            (89 + 27) / 116][Stage 89:===============================================>     (104 + 12) / 116][Stage 89:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.875485969 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide72"
dataSource: String = /nidan/orc/individualORC/slide72

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionI ndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  parti tionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379523586 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 90:=====================================>                (79 + 34) / 113][Stage 90:=========================================>            (87 + 26) / 113][Stage 90:==============================================>       (98 + 15) / 113][Stage 90:==================================================>   (106 + 7) / 113][Stage 90:====================================================> (110 + 3) / 113][Stage 90:=====================================================>(112 + 1) / 113]                                                                                [Stage 91:===================================>                  (74 + 40) / 114][Stage 91:========================================>             (85 + 29) / 114][Stage 91:=============================================>        (95 + 19) / 114][Stage 91:===================================================>  (109 + 5) / 114][Stage 91:====================================================> (111 + 3) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.426932852 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide62"
dataSource: String = /nidan/orc/individualORC/slide62

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionI ndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  parti tionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378513002 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 92:=======================================>              (84 + 31) / 115][Stage 92:==============================================>      (101 + 14) / 115][Stage 92:==================================================>   (108 + 7) / 115][Stage 92:=====================================================>(113 + 2) / 115]                                                                                [Stage 93:======================================>               (83 + 33) / 116][Stage 93:===========================================>          (94 + 22) / 116][Stage 93:===============================================>     (104 + 12) / 116][Stage 93:===================================================>  (110 + 6) / 116][Stage 93:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.865766125 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide51"
dataSource: String = /nidan/orc/individualORC/slide51

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIn dex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionI ndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379965446 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 94:=================================>                    (71 + 42) / 113][Stage 94:======================================>               (81 + 32) / 113][Stage 94:==============================================>       (97 + 16) / 113][Stage 94:====================================================> (109 + 4) / 113][Stage 94:=====================================================>(111 + 2) / 113]                                                                                [Stage 95:=======================================>              (83 + 31) / 114][Stage 95:=============================================>        (97 + 17) / 114][Stage 95:====================================================> (110 + 4) / 114][Stage 95:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.224836135 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionI ndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  parti tionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433373066 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 96:==========================>                           (60 + 61) / 121][Stage 96:==============================>                       (69 + 52) / 121][Stage 96:=======================================>              (89 + 32) / 121][Stage 96:===================================================>  (115 + 6) / 121]                                                                                [Stage 97:===========================>                          (62 + 60) / 122][Stage 97:==============================>                       (70 + 52) / 122][Stage 97:======================================>               (87 + 35) / 122][Stage 97:==================================================>   (115 + 7) / 122][Stage 97:=====================================================>(120 + 2) / 122][Stage 97:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.851033509 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide52"
dataSource: String = /nidan/orc/individualORC/slide52

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIn dex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 100  OR  partition Index = 101  OR  partitionIndex = 113  OR  partitionIndex = 114 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418981196 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 98:===========================>                          (60 + 60) / 120][Stage 98:===============================>                      (69 + 51) / 120][Stage 98:======================================>               (85 + 35) / 120][Stage 98:=================================================>    (111 + 9) / 120]                                                                                [Stage 99:===========================>                          (62 + 59) / 121][Stage 99:=================================>                    (74 + 47) / 121][Stage 99:=========================================>            (94 + 27) / 121][Stage 99:==================================================>   (114 + 7) / 121][Stage 99:=====================================================>(119 + 2) / 121][Stage 99:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.321572327 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide40"
dataSource: String = /nidan/orc/individualORC/slide40

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIn dex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionI ndex = 80  OR  partitionIndex = 107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377028474 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 100:================================>                    (73 + 45) / 118][Stage 100:======================================>              (86 + 32) / 118][Stage 100:==============================================>     (106 + 12) / 118][Stage 100:==================================================>  (112 + 6) / 118]                                                                                [Stage 101:==================================>                  (78 + 41) / 119][Stage 101:===================================>                 (79 + 40) / 119][Stage 101:=================================================>   (111 + 8) / 119][Stage 101:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.302446514 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide27"
dataSource: String = /nidan/orc/individualORC/slide27

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIn dex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionI ndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360823639 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 102:======================================>              (83 + 32) / 115][Stage 102:=========================================>           (91 + 24) / 115][Stage 102:=============================================>       (98 + 17) / 115][Stage 102:===================================================> (111 + 4) / 115]                                                                                [Stage 103:======================================>              (84 + 32) / 116][Stage 103:==========================================>          (94 + 22) / 116][Stage 103:============================================>        (98 + 18) / 116][Stage 103:=============================================>      (101 + 15) / 116][Stage 103:=================================================>   (109 + 7) / 116][Stage 103:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 6.256735196 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIn dex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionI ndex = 70  OR  partitionIndex = 83  OR  partitionIndex = 84 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 83  OR  partitionIndex = 84 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.429521269 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 104:==========================>                          (60 + 60) / 120][Stage 104:============================>                        (65 + 55) / 120][Stage 104:=====================================>               (84 + 36) / 120][Stage 104:===============================================>    (110 + 10) / 120][Stage 104:====================================================>(119 + 1) / 120]                                                                                [Stage 105:============================>                        (65 + 56) / 121][Stage 105:===================================>                 (80 + 41) / 121][Stage 105:=======================================>             (90 + 31) / 121][Stage 105:==================================================>  (116 + 5) / 121][Stage 105:====================================================>(119 + 2) / 121][Stage 105:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.151006799 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide42"
dataSource: String = /nidan/orc/individualORC/slide42

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionInd ex = 5  OR  partitionIndex = 6  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionInde x = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.425582275 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 106:==========================>                          (60 + 61) / 121][Stage 106:============================>                        (65 + 56) / 121][Stage 106:==================================>                  (78 + 43) / 121][Stage 106:===========================================>        (102 + 19) / 121][Stage 106:====================================================>(120 + 1) / 121]                                                                                [Stage 107:==========================>                          (61 + 61) / 122][Stage 107:=============================>                       (67 + 55) / 122][Stage 107:================================>                    (75 + 47) / 122][Stage 107:==========================================>          (98 + 24) / 122][Stage 107:===================================================> (119 + 3) / 122][Stage 107:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.648649035 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide48"
dataSource: String = /nidan/orc/individualORC/slide48

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionInd ex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionI ndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363712325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 108:====================================>                (80 + 35) / 115][Stage 108:======================================>              (84 + 31) / 115][Stage 108:=============================================>      (100 + 15) / 115][Stage 108:====================================================>(114 + 1) / 115]                                                                                [Stage 109:======================================>              (85 + 31) / 116][Stage 109:============================================>        (98 + 18) / 116][Stage 109:=================================================>   (108 + 8) / 116][Stage 109:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.910550242 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionI ndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  parti tionIndex = 140  OR  partitionIndex = 167  OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420285675 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 110:==========================>                          (60 + 61) / 121][Stage 110:================================>                    (75 + 46) / 121][Stage 110:======================================>              (89 + 32) / 121][Stage 110:===============================================>    (111 + 10) / 121]                                                                                [Stage 111:==========================>                          (62 + 60) / 122][Stage 111:===============================>                     (72 + 50) / 122][Stage 111:=======================================>             (90 + 32) / 122][Stage 111:===============================================>    (111 + 11) / 122][Stage 111:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.495137849 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIn dex = 13  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionI ndex = 54  OR  partitionIndex = 55  OR  partitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 55  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412991469 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 112:===========================>                         (58 + 55) / 113][Stage 112:============================>                        (61 + 52) / 113][Stage 112:===================================>                 (75 + 38) / 113][Stage 112:==========================================>          (91 + 22) / 113][Stage 112:====================================================>(111 + 2) / 113]                                                                                [Stage 113:===========================>                         (59 + 55) / 114][Stage 113:=============================>                       (63 + 51) / 114][Stage 113:=======================================>             (84 + 30) / 114][Stage 113:=============================================>       (98 + 16) / 114][Stage 113:==================================================>  (109 + 5) / 114][Stage 113:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.381434796 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide25"
dataSource: String = /nidan/orc/individualORC/slide25

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIn dex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionI ndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386076978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 114:=================================>                   (72 + 43) / 115][Stage 114:======================================>              (84 + 31) / 115][Stage 114:===========================================>         (95 + 20) / 115][Stage 114:===================================================> (112 + 3) / 115][Stage 114:====================================================>(114 + 1) / 115]                                                                                [Stage 115:==============================>                      (66 + 50) / 116][Stage 115:===================================>                 (77 + 39) / 116][Stage 115:=========================================>           (91 + 25) / 116][Stage 115:=============================================>       (99 + 17) / 116][Stage 115:=================================================>   (108 + 8) / 116][Stage 115:==================================================>  (111 + 5) / 116][Stage 115:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 8.028381778 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide24"
dataSource: String = /nidan/orc/individualORC/slide24

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionI ndex = 105  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  parti tionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 135 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414609852 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 116:==========================>                          (60 + 60) / 120][Stage 116:============================>                        (64 + 56) / 120][Stage 116:===================================>                 (81 + 39) / 120][Stage 116:==============================================>     (107 + 13) / 120][Stage 116:====================================================>(118 + 2) / 120]                                                                                [Stage 117:==========================>                          (61 + 60) / 121][Stage 117:==============================>                      (69 + 52) / 121][Stage 117:====================================>                (84 + 37) / 121][Stage 117:===========================================>        (102 + 19) / 121][Stage 117:==================================================>  (116 + 5) / 121][Stage 117:===================================================> (118 + 3) / 121]                                                                                Time elapsed: 4.346817833 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionInd ex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionInd ex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 17  OR  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 45  OR  partitionIndex = 46 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357761321 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 118:=================================>                   (72 + 41) / 113][Stage 118:=====================================>               (81 + 32) / 113][Stage 118:===========================================>         (92 + 21) / 113][Stage 118:==============================================>     (101 + 12) / 113][Stage 118:===================================================> (110 + 3) / 113]                                                                                [Stage 119:=====================================>               (81 + 33) / 114][Stage 119:========================================>            (87 + 27) / 114][Stage 119:=============================================>       (98 + 16) / 114][Stage 119:==============================================>     (101 + 13) / 114][Stage 119:==============================================>     (102 + 12) / 114][Stage 119:==================================================>  (108 + 6) / 114][Stage 119:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 8.966948615 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIn dex = 99  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partiti onIndex = 114  OR  partitionIndex = 115  OR  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347551145 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 120:=====================================>               (82 + 33) / 115][Stage 120:============================================>        (96 + 19) / 115][Stage 120:==================================================>  (110 + 5) / 115][Stage 120:===================================================> (112 + 3) / 115]                                                                                [Stage 121:======================================>              (85 + 31) / 116][Stage 121:============================================>        (98 + 18) / 116][Stage 121:==================================================>  (111 + 5) / 116][Stage 121:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.871766784 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide54"
dataSource: String = /nidan/orc/individualORC/slide54

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionI ndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  parti tionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368612475 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 122:================================>                    (72 + 46) / 118][Stage 122:=================================>                   (74 + 44) / 118][Stage 122:=====================================>               (84 + 34) / 118][Stage 122:=======================================>             (89 + 29) / 118][Stage 122:=============================================>      (103 + 15) / 118][Stage 122:==================================================>  (113 + 5) / 118]                                                                                [Stage 123:=================================>                   (75 + 44) / 119][Stage 123:====================================>                (81 + 38) / 119][Stage 123:=======================================>             (89 + 30) / 119][Stage 123:============================================>       (102 + 17) / 119][Stage 123:===================================================> (115 + 4) / 119][Stage 123:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.224249347 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionI ndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 207  OR  parti tionIndex = 208  OR  partitionIndex = 209  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 209  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393006455 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 124:===========================>                         (58 + 55) / 113][Stage 124:===============================>                     (68 + 45) / 113][Stage 124:=====================================>               (79 + 34) / 113][Stage 124:==============================================>      (99 + 14) / 113][Stage 124:==================================================>  (108 + 5) / 113]                                                                                [Stage 125:============================>                        (61 + 53) / 114][Stage 125:=================================>                   (71 + 43) / 114][Stage 125:==========================================>          (92 + 22) / 114][Stage 125:=================================================>   (106 + 8) / 114][Stage 125:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.518086455 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide43"
dataSource: String = /nidan/orc/individualORC/slide43

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionI ndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  parti tionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 205 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 205 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390888128 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 126:===========================>                         (59 + 54) / 113][Stage 126:================================>                    (69 + 44) / 113][Stage 126:=======================================>             (84 + 29) / 113][Stage 126:================================================>    (104 + 9) / 113]                                                                                [Stage 127:============================>                        (61 + 53) / 114][Stage 127:================================>                    (70 + 44) / 114][Stage 127:========================================>            (87 + 27) / 114][Stage 127:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.224511187 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionI ndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  parti tionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396749686 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 128:================================>                    (71 + 44) / 115][Stage 128:==========================================>          (93 + 22) / 115][Stage 128:==============================================>     (103 + 12) / 115][Stage 128:===================================================> (112 + 3) / 115]                                                                                [Stage 129:===============================>                     (69 + 47) / 116][Stage 129:====================================>                (80 + 36) / 116][Stage 129:============================================>        (97 + 19) / 116][Stage 129:===============================================>    (105 + 11) / 116]                                                                                Time elapsed: 2.74587546 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIn dex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionI ndex = 44  OR  partitionIndex = 57  OR  partitionIndex = 58 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 57  OR  partitionIndex = 58 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381022374 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 130:>                                                      (0 + 0) / 118][Stage 130:================================>                    (72 + 46) / 118][Stage 130:==================================>                  (77 + 41) / 118][Stage 130:======================================>              (85 + 33) / 118][Stage 130:==========================================>          (95 + 23) / 118][Stage 130:==================================================>  (113 + 5) / 118]                                                                                [Stage 131:================================>                    (74 + 45) / 119][Stage 131:==================================>                  (78 + 41) / 119][Stage 131:=====================================>               (85 + 34) / 119][Stage 131:===========================================>        (100 + 19) / 119][Stage 131:=================================================>   (112 + 7) / 119][Stage 131:===================================================> (116 + 3) / 119][Stage 131:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.251275025 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionI ndex = 127  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  parti tionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402090243 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 132:============================>                        (60 + 53) / 113][Stage 132:================================>                    (69 + 44) / 113][Stage 132:========================================>            (87 + 26) / 113][Stage 132:===============================================>    (103 + 10) / 113][Stage 132:===================================================> (109 + 4) / 113]                                                                                [Stage 133:============================>                        (62 + 52) / 114][Stage 133:===================================>                 (76 + 38) / 114][Stage 133:=============================================>       (98 + 16) / 114][Stage 133:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.491385078 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionI ndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  parti tionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.366646044 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
org.apache.spark.sql.catalyst.parser.ParseException:
extraneous input 'partitionIndex' expecting {<EOF>, '.', '[', 'GROUP', 'ORDER', 'HAVING', 'LIMIT', 'OR', 'AND', 'IN', NOT, 'BETWEEN', 'LIKE', RLIKE, 'IS', 'WINDOW', 'UNION', 'EXCEPT', 'MINUS', 'INTERSECT', EQ, '<=>', '<>', '!=', '<', LTE, '>', GTE, '+', '-', '*', '/', '%', 'DIV', '&', '|', '^', 'SORT', 'CLUSTER', 'DISTRIBUTE'}(line 1, pos 213)

== SQL ==
SELECT imageBytes FROM data WHERE  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  partitionIndex = 120
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------^^^

  at org.apache.spark.sql.catalyst.parser.ParseException.withCommand(ParseDriver.scala:197)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parse(ParseDriver.scala:99)
  at org.apache.spark.sql.execution.SparkSqlParser.parse(SparkSqlParser.scala:45)
  at org.apache.spark.sql.catalyst.parser.AbstractSqlParser.parsePlan(ParseDriver.scala:53)
  at org.apache.spark.sql.SparkSession.sql(SparkSession.scala:592)
  at org.apache.spark.sql.SQLContext.sql(SQLContext.scala:699)
  at $anonfun$1.apply$mcI$sp(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at $anonfun$1.apply(<console>:38)
  at show_timing(<console>:30)
  ... 50 elided

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide28"
dataSource: String = /nidan/orc/individualORC/slide28

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionI ndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  parti tionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.482926252 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 134:==========================>                          (60 + 61) / 121][Stage 134:===========================>                         (63 + 58) / 121][Stage 134:================================>                    (75 + 46) / 121][Stage 134:=========================================>           (95 + 26) / 121][Stage 134:====================================================>(119 + 2) / 121]                                                                                [Stage 135:===========================>                         (63 + 59) / 122][Stage 135:==============================>                      (71 + 51) / 122][Stage 135:==========================================>          (98 + 24) / 122][Stage 135:===============================================>    (111 + 11) / 122][Stage 135:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.204198847 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide35"
dataSource: String = /nidan/orc/individualORC/slide35

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionI ndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  parti tionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41070455 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 136:==========================>                          (60 + 61) / 121][Stage 136:=============================>                       (68 + 53) / 121][Stage 136:====================================>                (84 + 37) / 121][Stage 136:==========================================>         (100 + 21) / 121][Stage 136:====================================================>(120 + 1) / 121]                                                                                [Stage 137:==========================>                          (61 + 61) / 122][Stage 137:==============================>                      (71 + 51) / 122][Stage 137:==================================>                  (80 + 42) / 122][Stage 137:==========================================>          (98 + 24) / 122][Stage 137:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 4.008645385 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionI ndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  parti tionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 150 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 150 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373794186 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 138:======================================>              (83 + 32) / 115][Stage 138:========================================>            (87 + 28) / 115][Stage 138:=============================================>       (98 + 17) / 115][Stage 138:=================================================>   (108 + 7) / 115][Stage 138:===================================================> (112 + 3) / 115]                                                                                [Stage 139:========================================>            (89 + 27) / 116][Stage 139:=============================================>      (101 + 15) / 116][Stage 139:==================================================>  (110 + 6) / 116][Stage 139:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.924795666 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide39"
dataSource: String = /nidan/orc/individualORC/slide39

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIn dex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partition Index = 106  OR  partitionIndex = 107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377791959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 140:====================================>                (80 + 35) / 115][Stage 140:==========================================>          (92 + 23) / 115][Stage 140:==================================================>  (109 + 6) / 115][Stage 140:====================================================>(114 + 1) / 115]                                                                                [Stage 141:==================================>                  (76 + 40) / 116][Stage 141:=========================================>           (90 + 26) / 116][Stage 141:=================================================>   (108 + 8) / 116][Stage 141:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.852348919 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide64"
dataSource: String = /nidan/orc/individualORC/slide64

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionI ndex = 183  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  parti tionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383975418 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 142:===========================>                         (58 + 55) / 113][Stage 142:=============================>                       (63 + 50) / 113][Stage 142:==================================>                  (73 + 40) / 113][Stage 142:=============================================>       (97 + 16) / 113][Stage 142:==================================================>  (108 + 5) / 113][Stage 142:====================================================>(112 + 1) / 113]                                                                                [Stage 143:=============================>                       (64 + 50) / 114][Stage 143:==================================>                  (75 + 39) / 114][Stage 143:=========================================>           (90 + 24) / 114][Stage 143:=============================================>       (98 + 16) / 114][Stage 143:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.758796572 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide76"
dataSource: String = /nidan/orc/individualORC/slide76

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIn dex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionI ndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.341665557 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 144:=====================================>               (81 + 34) / 115][Stage 144:=======================================>             (86 + 29) / 115][Stage 144:=============================================>      (101 + 14) / 115][Stage 144:==================================================>  (110 + 5) / 115]                                                                                [Stage 145:======================================>              (85 + 31) / 116][Stage 145:============================================>       (100 + 16) / 116][Stage 145:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.532837906 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide70"
dataSource: String = /nidan/orc/individualORC/slide70

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionI ndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  parti tionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.402662459 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 146:==========================>                          (60 + 61) / 121][Stage 146:===============================>                     (71 + 50) / 121][Stage 146:====================================>                (84 + 37) / 121][Stage 146:==============================================>     (109 + 12) / 121][Stage 146:====================================================>(120 + 1) / 121]                                                                                [Stage 147:==========================>                          (61 + 61) / 122][Stage 147:==============================>                      (71 + 51) / 122][Stage 147:====================================>                (85 + 37) / 122][Stage 147:==========================================>          (97 + 25) / 122][Stage 147:===============================================>    (112 + 10) / 122][Stage 147:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.806995983 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide80"
dataSource: String = /nidan/orc/individualORC/slide80

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionI ndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  parti tionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404116243 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 148:==========================>                          (60 + 60) / 120][Stage 148:============================>                        (64 + 56) / 120][Stage 148:===================================>                 (80 + 40) / 120][Stage 148:===========================================>        (101 + 19) / 120][Stage 148:==============================================>     (108 + 12) / 120][Stage 148:===================================================> (116 + 4) / 120]                                                                                [Stage 149:============================>                        (64 + 57) / 121][Stage 149:================================>                    (74 + 47) / 121][Stage 149:=========================================>           (95 + 26) / 121][Stage 149:==============================================>     (109 + 12) / 121][Stage 149:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.815349797 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide36"
dataSource: String = /nidan/orc/individualORC/slide36

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIn dex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partition Index = 103  OR  partitionIndex = 117  OR  partitionIndex = 118 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406211649 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 150:===========================>                         (58 + 55) / 113][Stage 150:===============================>                     (67 + 46) / 113][Stage 150:=====================================>               (81 + 32) / 113][Stage 150:=================================================>   (105 + 8) / 113]                                                                                [Stage 151:============================>                        (61 + 53) / 114][Stage 151:================================>                    (70 + 44) / 114][Stage 151:=====================================>               (81 + 33) / 114][Stage 151:=============================================>       (98 + 16) / 114][Stage 151:===================================================> (111 + 3) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.182769989 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide74"
dataSource: String = /nidan/orc/individualORC/slide74

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIn dex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partiti onIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380791464 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 152:==============================>                      (67 + 48) / 115][Stage 152:=====================================>               (81 + 34) / 115][Stage 152:==========================================>          (93 + 22) / 115][Stage 152:===============================================>    (104 + 11) / 115][Stage 152:====================================================>(114 + 1) / 115]                                                                                [Stage 153:===============================>                     (68 + 48) / 116][Stage 153:====================================>                (79 + 37) / 116][Stage 153:=======================================>             (87 + 29) / 116][Stage 153:=============================================>      (101 + 15) / 116][Stage 153:===================================================> (113 + 3) / 116][Stage 153:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.092904763 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide79"
dataSource: String = /nidan/orc/individualORC/slide79

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionInd ex = 9  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIn dex = 110  OR  partitionIndex = 111  OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354656697 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 154:=================================>                   (72 + 41) / 113][Stage 154:======================================>              (82 + 31) / 113][Stage 154:===========================================>         (92 + 21) / 113][Stage 154:=================================================>   (106 + 7) / 113]                                                                                [Stage 155:====================================>                (79 + 35) / 114][Stage 155:==========================================>          (91 + 23) / 114][Stage 155:=================================================>   (107 + 7) / 114][Stage 155:===================================================> (110 + 4) / 114][Stage 155:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.077426207 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionI ndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  parti tionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352002927 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 156:===================================>                 (76 + 37) / 113][Stage 156:=======================================>             (85 + 28) / 113][Stage 156:============================================>        (94 + 19) / 113][Stage 156:==================================================>  (107 + 6) / 113][Stage 156:====================================================>(111 + 2) / 113]                                                                                [Stage 157:=======================================>             (84 + 30) / 114][Stage 157:============================================>        (95 + 19) / 114][Stage 157:===============================================>    (104 + 10) / 114][Stage 157:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.067842508 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide21"
dataSource: String = /nidan/orc/individualORC/slide21

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIn dex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partit ionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.398833742 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 158:==========================>                          (60 + 61) / 121][Stage 158:============================>                        (65 + 56) / 121][Stage 158:======================================>              (88 + 33) / 121][Stage 158:===============================================>    (111 + 10) / 121][Stage 158:==================================================>  (116 + 5) / 121]                                                                                [Stage 159:===========================>                         (63 + 59) / 122][Stage 159:===============================>                     (72 + 50) / 122][Stage 159:======================================>              (88 + 34) / 122][Stage 159:=================================================>   (114 + 8) / 122][Stage 159:===================================================> (118 + 4) / 122][Stage 159:===================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.918729453 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionInd ex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex  = 20  OR  partitionIndex = 21  OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.356645941 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 160:=====================================>               (81 + 34) / 115][Stage 160:========================================>            (87 + 28) / 115][Stage 160:==============================================>     (102 + 13) / 115][Stage 160:===================================================> (111 + 4) / 115]                                                                                [Stage 161:========================================>            (88 + 28) / 116][Stage 161:============================================>        (98 + 18) / 116][Stage 161:============================================>       (100 + 16) / 116][Stage 161:=================================================>   (109 + 7) / 116][Stage 161:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 6.228786857 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIn dex = 13  OR  partitionIndex = 27  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionI ndex = 54  OR  partitionIndex = 55  OR  partitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 27  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 54  OR  partitionIndex = 55  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40211165 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 162:==========================>                          (60 + 61) / 121][Stage 162:=============================>                       (67 + 54) / 121][Stage 162:===================================>                 (82 + 39) / 121][Stage 162:==============================================>     (108 + 13) / 121][Stage 162:===================================================> (118 + 3) / 121]                                                                                [Stage 163:==========================>                          (62 + 60) / 122][Stage 163:===================================>                 (81 + 41) / 122][Stage 163:===========================================>         (99 + 23) / 122][Stage 163:=================================================>   (114 + 8) / 122][Stage 163:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.766958338 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIn dex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionI ndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406424444 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 164:==========================>                          (60 + 61) / 121][Stage 164:=============================>                       (67 + 54) / 121][Stage 164:====================================>                (83 + 38) / 121][Stage 164:==============================================>     (108 + 13) / 121]                                                                                [Stage 165:==========================>                          (62 + 60) / 122][Stage 165:==============================>                      (70 + 52) / 122][Stage 165:======================================>              (89 + 33) / 122][Stage 165:==============================================>     (108 + 14) / 122][Stage 165:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.816362298 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionI ndex = 129  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  parti tionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363070619 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 166:====================================>                (78 + 35) / 113][Stage 166:==========================================>          (90 + 23) / 113][Stage 166:==============================================>     (100 + 13) / 113][Stage 166:==================================================>  (107 + 6) / 113]                                                                                [Stage 167:====================================>                (79 + 35) / 114][Stage 167:=======================================>             (85 + 29) / 114][Stage 167:=============================================>      (100 + 14) / 114][Stage 167:==================================================>  (108 + 6) / 114][Stage 167:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.102010685 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide34"
dataSource: String = /nidan/orc/individualORC/slide34

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionI ndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  parti tionIndex = 160  OR  partitionIndex = 173  OR  partitionIndex = 174 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 173  OR  partitionIndex = 174 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347951489 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 168:========================================>            (87 + 28) / 115][Stage 168:============================================>        (97 + 18) / 115][Stage 168:=================================================>   (108 + 7) / 115][Stage 168:==================================================>  (110 + 5) / 115][Stage 168:===================================================> (112 + 3) / 115]                                                                                [Stage 169:========================================>            (88 + 28) / 116][Stage 169:============================================>       (100 + 16) / 116][Stage 169:==================================================>  (110 + 6) / 116]                                                                                Time elapsed: 3.00493298 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide68"
dataSource: String = /nidan/orc/individualORC/slide68

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIn dex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionI ndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53  OR  partitionIndex = 54 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36370758 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 170:================================>                    (72 + 46) / 118][Stage 170:===================================>                 (79 + 39) / 118][Stage 170:=======================================>             (88 + 30) / 118][Stage 170:============================================>       (100 + 18) / 118][Stage 170:===================================================> (114 + 4) / 118]                                                                                [Stage 171:================================>                    (74 + 45) / 119][Stage 171:===================================>                 (80 + 39) / 119][Stage 171:=========================================>           (93 + 26) / 119][Stage 171:===========================================>        (100 + 19) / 119][Stage 171:==================================================>  (114 + 5) / 119][Stage 171:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.917259164 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide20"
dataSource: String = /nidan/orc/individualORC/slide20

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionI ndex = 187  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  parti tionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347029325 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 172:======================================>              (83 + 32) / 115][Stage 172:==========================================>          (92 + 23) / 115][Stage 172:=============================================>      (101 + 14) / 115][Stage 172:====================================================>(114 + 1) / 115]                                                                                [Stage 173:=====================================>               (82 + 34) / 116][Stage 173:========================================>            (89 + 27) / 116][Stage 173:==============================================>     (103 + 13) / 116][Stage 173:==================================================>  (111 + 5) / 116][Stage 173:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 2.874153877 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide26"
dataSource: String = /nidan/orc/individualORC/slide26

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionInd ex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex  = 20  OR  partitionIndex = 21  OR  partitionIndex = 22 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 22 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367955293 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 174:================================>                    (72 + 46) / 118][Stage 174:==================================>                  (76 + 42) / 118][Stage 174:===================================>                 (80 + 38) / 118][Stage 174:==========================================>          (95 + 23) / 118][Stage 174:==============================================>     (106 + 12) / 118]                                                                                [Stage 175:================================>                    (73 + 46) / 119][Stage 175:==================================>                  (78 + 41) / 119][Stage 175:======================================>              (87 + 32) / 119][Stage 175:===========================================>         (98 + 21) / 119][Stage 175:===============================================>    (109 + 10) / 119][Stage 175:===================================================> (115 + 4) / 119][Stage 175:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.070427734 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide23"
dataSource: String = /nidan/orc/individualORC/slide23

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIn dex = 11  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionI ndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.351127776 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 176:=====================================>               (79 + 34) / 113][Stage 176:========================================>            (86 + 27) / 113][Stage 176:=============================================>       (98 + 15) / 113][Stage 176:==================================================>  (108 + 5) / 113][Stage 176:====================================================>(112 + 1) / 113]                                                                                [Stage 177:==================================>                  (75 + 39) / 114][Stage 177:=======================================>             (85 + 29) / 114][Stage 177:========================================>            (87 + 27) / 114][Stage 177:============================================>        (95 + 19) / 114][Stage 177:==============================================>     (102 + 12) / 114][Stage 177:================================================>    (105 + 9) / 114][Stage 177:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 7.4767162 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide55"
dataSource: String = /nidan/orc/individualORC/slide55

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionInd ex = 9  OR  partitionIndex = 23  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionInd ex = 110  OR  partitionIndex = 111  OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 23  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.34922657 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 178:======================================>              (83 + 32) / 115][Stage 178:==========================================>          (93 + 22) / 115][Stage 178:================================================>    (106 + 9) / 115][Stage 178:==================================================>  (109 + 6) / 115]                                                                                [Stage 179:======================================>              (84 + 32) / 116][Stage 179:==========================================>          (92 + 24) / 116][Stage 179:=============================================>      (102 + 14) / 116][Stage 179:=================================================>   (109 + 7) / 116]                                                                                Time elapsed: 3.278290266 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide69"
dataSource: String = /nidan/orc/individualORC/slide69

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIn dex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 100  OR  partition Index = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388704579 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 180:====================================>                (79 + 36) / 115][Stage 180:========================================>            (87 + 28) / 115][Stage 180:==============================================>     (102 + 13) / 115][Stage 180:====================================================>(113 + 2) / 115]                                                                                [Stage 181:=====================================>               (83 + 33) / 116][Stage 181:=========================================>           (91 + 25) / 116][Stage 181:============================================>       (100 + 16) / 116][Stage 181:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.658070302 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide78"
dataSource: String = /nidan/orc/individualORC/slide78

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIn dex = 71  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionI ndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392043889 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 182:===========================>                         (58 + 55) / 113][Stage 182:===============================>                     (67 + 46) / 113][Stage 182:===================================>                 (76 + 37) / 113][Stage 182:=========================================>           (88 + 25) / 113][Stage 182:==============================================>     (101 + 12) / 113][Stage 182:====================================================>(111 + 2) / 113]                                                                                [Stage 183:===========================>                         (59 + 55) / 114][Stage 183:==============================>                      (65 + 49) / 114][Stage 183:===================================>                 (77 + 37) / 114][Stage 183:========================================>            (88 + 26) / 114][Stage 183:==============================================>      (99 + 15) / 114][Stage 183:==============================================>     (103 + 11) / 114]                                                                                Time elapsed: 4.514117657 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide46"
dataSource: String = /nidan/orc/individualORC/slide46

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionInd ex = 1  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 15  OR  partitionIndex  = 16  OR  partitionIndex = 17  OR  partitionIndex = 18 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 0  OR  partitionIndex = 1  OR  partitionIndex = 2  OR  partitionIndex = 3  OR  partitionIndex = 15  OR  partitionIndex = 16  OR  partitionIndex = 17  OR  partitionIndex = 18 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375910735 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 184:===============================>                     (68 + 47) / 115][Stage 184:=====================================>               (81 + 34) / 115][Stage 184:============================================>        (97 + 18) / 115][Stage 184:==================================================>  (109 + 6) / 115]                                                                                [Stage 185:================================>                    (71 + 45) / 116][Stage 185:======================================>              (85 + 31) / 116][Stage 185:=============================================>      (101 + 15) / 116][Stage 185:==================================================>  (110 + 6) / 116][Stage 185:===================================================> (112 + 4) / 116][Stage 185:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 7.377687648 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIn dex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionI ndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403706185 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 186:===========================>                         (63 + 57) / 120][Stage 186:=================================>                   (75 + 45) / 120][Stage 186:==========================================>          (96 + 24) / 120][Stage 186:=================================================>   (113 + 7) / 120][Stage 186:====================================================>(118 + 2) / 120]                                                                                [Stage 187:=============================>                       (67 + 54) / 121][Stage 187:=================================>                   (77 + 44) / 121][Stage 187:==========================================>         (100 + 21) / 121][Stage 187:=================================================>   (114 + 7) / 121][Stage 187:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.912165777 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide50"
dataSource: String = /nidan/orc/individualORC/slide50

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIn dex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionI ndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 18  OR  partitionIndex = 30  OR  partitionIndex = 31  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 45  OR  partitionIndex = 46  OR  partitionIndex = 47 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395237437 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 188:===========================>                         (58 + 55) / 113][Stage 188:==============================>                      (65 + 48) / 113][Stage 188:======================================>              (83 + 30) / 113][Stage 188:==============================================>     (100 + 13) / 113][Stage 188:====================================================>(112 + 1) / 113]                                                                                [Stage 189:==============================>                      (66 + 48) / 114][Stage 189:====================================>                (79 + 35) / 114][Stage 189:=============================================>       (98 + 16) / 114][Stage 189:==================================================>  (109 + 5) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.508540086 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide44"
dataSource: String = /nidan/orc/individualORC/slide44

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionI ndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  parti tionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355254365 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 190:====================================>                (77 + 36) / 113][Stage 190:=========================================>           (89 + 24) / 113][Stage 190:==============================================>      (99 + 14) / 113][Stage 190:===================================================> (109 + 4) / 113][Stage 190:====================================================>(112 + 1) / 113]                                                                                [Stage 191:===================================>                 (76 + 38) / 114][Stage 191:=======================================>             (84 + 30) / 114][Stage 191:============================================>        (96 + 18) / 114][Stage 191:=================================================>   (107 + 7) / 114][Stage 191:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.021381543 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide29"
dataSource: String = /nidan/orc/individualORC/slide29

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionI ndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 212  OR  parti tionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380624367 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 192:===========================>                         (58 + 55) / 113][Stage 192:=============================>                       (63 + 50) / 113][Stage 192:===================================>                 (75 + 38) / 113][Stage 192:===========================================>         (93 + 20) / 113][Stage 192:===================================================> (110 + 3) / 113][Stage 192:====================================================>(112 + 1) / 113]                                                                                [Stage 193:============================>                        (62 + 52) / 114][Stage 193:=================================>                   (73 + 41) / 114][Stage 193:=========================================>           (90 + 24) / 114][Stage 193:==============================================>     (103 + 11) / 114][Stage 193:==================================================>  (109 + 5) / 114][Stage 193:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.968726201 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide61"
dataSource: String = /nidan/orc/individualORC/slide61

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionInd ex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex  = 20  OR  partitionIndex = 47  OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383567296 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 194:=================================>                   (75 + 43) / 118][Stage 194:===================================>                 (79 + 39) / 118][Stage 194:=======================================>             (89 + 29) / 118][Stage 194:============================================>        (98 + 20) / 118][Stage 194:==================================================>  (112 + 6) / 118]                                                                                [Stage 195:=================================>                   (75 + 44) / 119][Stage 195:====================================>                (81 + 38) / 119][Stage 195:=======================================>             (88 + 31) / 119][Stage 195:===========================================>         (97 + 22) / 119][Stage 195:==============================================>     (107 + 12) / 119]                                                                                Time elapsed: 3.811271797 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide14"
dataSource: String = /nidan/orc/individualORC/slide14

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIn dex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionI ndex = 88  OR  partitionIndex = 115  OR  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411256966 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 196:==========================>                          (60 + 61) / 121][Stage 196:============================>                        (64 + 57) / 121][Stage 196:==================================>                  (79 + 42) / 121][Stage 196:===========================================>        (101 + 20) / 121][Stage 196:===================================================> (118 + 3) / 121]                                                                                [Stage 197:==========================>                          (61 + 61) / 122][Stage 197:==============================>                      (70 + 52) / 122][Stage 197:=======================================>             (91 + 31) / 122][Stage 197:==============================================>     (108 + 14) / 122][Stage 197:=================================================>   (114 + 8) / 122][Stage 197:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.735519734 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide59"
dataSource: String = /nidan/orc/individualORC/slide59

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIn dex = 13  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionI ndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400649411 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{ case (bytes, index) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => f alse).size}
[Stage 198:==========================>                          (60 + 60) / 120][Stage 198:===========================>                         (62 + 58) / 120][Stage 198:===============================>                     (71 + 49) / 120][Stage 198:========================================>            (91 + 29) / 120][Stage 198:===================================================> (116 + 4) / 120]                                                                                [Stage 199:==========================>                          (61 + 60) / 121][Stage 199:============================>                        (64 + 57) / 121][Stage 199:=================================>                   (76 + 45) / 121][Stage 199:==========================================>          (96 + 25) / 121][Stage 199:===============================================>    (111 + 10) / 121][Stage 199:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 5.845938092 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/25 02:41:23 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.43:55022) dropped. RpcEnv already stopped.
17/05/25 02:41:23 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.15:44288) dropped. RpcEnv already stopped.
17/05/25 02:41:23 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.43:55022) dropped. RpcEnv already stopped.
17/05/25 02:41:23 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.15:44288) dropped. RpcEnv already stopped.

real	11m48.626s
user	12m23.600s
sys	1m38.516s
