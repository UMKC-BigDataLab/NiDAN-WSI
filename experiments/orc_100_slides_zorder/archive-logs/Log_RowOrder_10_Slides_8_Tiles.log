Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 16:38:24 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:38:39 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:38:39 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:38:40 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 16:38:42 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 16:38:53 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524163842-0569).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@55c78556

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.399372735 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:==========>                                            (22 + 93) / 115][Stage 0:========================>                              (52 + 63) / 115][Stage 0:===========================>                           (58 + 57) / 115][Stage 0:=============================>                         (61 + 54) / 115][Stage 0:===============================>                       (65 + 50) / 115][Stage 0:=================================>                     (70 + 45) / 115][Stage 0:====================================>                  (77 + 38) / 115][Stage 0:======================================>                (80 + 35) / 115][Stage 0:========================================>              (84 + 31) / 115][Stage 0:============================================>          (92 + 23) / 115][Stage 0:===============================================>      (102 + 13) / 115][Stage 0:=================================================>    (105 + 10) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:=====================================================> (112 + 3) / 115][Stage 0:======================================================>(113 + 2) / 115]                                                                                [Stage 1:==========================>                            (55 + 61) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:===============================>                       (66 + 50) / 116][Stage 1:==================================>                    (72 + 44) / 116][Stage 1:====================================>                  (78 + 38) / 116][Stage 1:=======================================>               (84 + 32) / 116][Stage 1:============================================>          (93 + 23) / 116][Stage 1:================================================>     (105 + 11) / 116][Stage 1:======================================================>(114 + 2) / 116][Stage 1:======================================================>(115 + 1) / 116]                                                                                Time elapsed: 12.760848361 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR   partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIn dex = 177  OR  partitionIndex = 178 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163  OR  partitionIndex = 177  OR  partitionIndex = 178 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.783725569 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:==============================>                        (63 + 50) / 113][Stage 2:================================>                      (67 + 46) / 113][Stage 2:===================================>                   (72 + 41) / 113][Stage 2:====================================>                  (76 + 37) / 113][Stage 2:==========================================>            (88 + 25) / 113][Stage 2:=============================================>         (93 + 20) / 113][Stage 2:================================================>      (99 + 14) / 113][Stage 2:===================================================>   (105 + 8) / 113][Stage 2:=====================================================> (109 + 4) / 113][Stage 2:======================================================>(111 + 2) / 113]                                                                                [Stage 3:===================================>                   (74 + 40) / 114][Stage 3:=====================================>                 (78 + 36) / 114][Stage 3:=======================================>               (82 + 32) / 114][Stage 3:==========================================>            (89 + 25) / 114][Stage 3:=============================================>         (95 + 19) / 114][Stage 3:================================================>     (102 + 12) / 114][Stage 3:===================================================>   (107 + 7) / 114][Stage 3:=====================================================> (111 + 3) / 114]                                                                                Time elapsed: 5.262943392 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR   partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIn dex = 204  OR  partitionIndex = 205 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 205 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.63300804 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:============================>                          (58 + 55) / 113][Stage 4:================================>                      (66 + 47) / 113][Stage 4:=====================================>                 (77 + 36) / 113][Stage 4:=======================================>               (81 + 32) / 113][Stage 4:===========================================>           (90 + 23) / 113][Stage 4:=============================================>         (94 + 19) / 113][Stage 4:=================================================>    (103 + 10) / 113][Stage 4:===================================================>   (105 + 8) / 113][Stage 4:===================================================>   (106 + 7) / 113][Stage 4:=====================================================> (110 + 3) / 113]                                                                                [Stage 5:===================================>                   (73 + 41) / 114][Stage 5:======================================>                (79 + 35) / 114][Stage 5:========================================>              (83 + 31) / 114][Stage 5:===========================================>           (91 + 23) / 114][Stage 5:===============================================>      (100 + 14) / 114][Stage 5:===================================================>   (107 + 7) / 114]                                                                                Time elapsed: 4.61770425 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  pa rtitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex =  75  OR  partitionIndex = 76 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.678470609 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:=========================>                             (53 + 60) / 113][Stage 6:===========================>                           (56 + 57) / 113][Stage 6:=============================>                         (61 + 52) / 113][Stage 6:====================================>                  (74 + 39) / 113][Stage 6:==========================================>            (87 + 26) / 113][Stage 6:================================================>      (99 + 14) / 113][Stage 6:===================================================>   (106 + 7) / 113][Stage 6:======================================================>(112 + 1) / 113]                                                                                [Stage 7:===========================>                           (58 + 56) / 114][Stage 7:=============================>                         (61 + 53) / 114][Stage 7:================================>                      (67 + 47) / 114][Stage 7:======================================>                (79 + 35) / 114][Stage 7:==========================================>            (89 + 25) / 114][Stage 7:==================================================>    (105 + 9) / 114][Stage 7:======================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.694862302 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  pa rtitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex =  57  OR  partitionIndex = 58 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.547387765 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:======================================>                (81 + 34) / 115][Stage 8:========================================>              (84 + 31) / 115][Stage 8:==========================================>            (89 + 26) / 115][Stage 8:===============================================>      (102 + 13) / 115][Stage 8:=================================================>    (105 + 10) / 115][Stage 8:====================================================>  (110 + 5) / 115][Stage 8:======================================================>(113 + 2) / 115]                                                                                [Stage 9:=======================================>               (84 + 32) / 116][Stage 9:==========================================>            (90 + 26) / 116][Stage 9:==============================================>        (99 + 17) / 116][Stage 9:===============================================>      (102 + 14) / 116][Stage 9:==================================================>    (107 + 9) / 116][Stage 9:=====================================================> (112 + 4) / 116][Stage 9:======================================================>(114 + 2) / 116]                                                                                Time elapsed: 8.040839619 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 215  OR   partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIn dex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.621311853 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:=========================>                            (57 + 63) / 120][Stage 10:===========================>                          (61 + 59) / 120][Stage 10:===============================>                      (69 + 51) / 120][Stage 10:======================================>               (85 + 35) / 120][Stage 10:============================================>        (101 + 19) / 120][Stage 10:==================================================>   (113 + 7) / 120][Stage 10:=====================================================>(119 + 1) / 120]                                                                                [Stage 11:==========================>                           (60 + 61) / 121][Stage 11:=============================>                        (66 + 55) / 121][Stage 11:=================================>                    (76 + 45) / 121][Stage 11:======================================>               (87 + 34) / 121][Stage 11:===========================================>          (98 + 23) / 121][Stage 11:=================================================>    (112 + 9) / 121][Stage 11:=====================================================>(119 + 2) / 121][Stage 11:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.556762322 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 219  OR   partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIn dex = 235  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 233  OR  partitionIndex = 234  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.643384057 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (60 + 60) / 120][Stage 12:============================>                         (63 + 57) / 120][Stage 12:==================================>                   (77 + 43) / 120][Stage 12:=============================================>       (104 + 16) / 120][Stage 12:===================================================>  (115 + 5) / 120][Stage 12:=====================================================>(119 + 1) / 120]                                                                                [Stage 13:===========================>                          (61 + 60) / 121][Stage 13:============================>                         (63 + 58) / 121][Stage 13:===============================>                      (70 + 51) / 121][Stage 13:=====================================>                (85 + 36) / 121][Stage 13:============================================>        (101 + 20) / 121][Stage 13:==================================================>   (114 + 7) / 121][Stage 13:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.225279247 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR   partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIn dex = 174  OR  partitionIndex = 175 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.568205753 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:>                                                     (0 + 112) / 121][Stage 14:==============>                                       (33 + 88) / 121][Stage 14:==========================>                           (60 + 61) / 121][Stage 14:============================>                         (63 + 58) / 121][Stage 14:=================================>                    (76 + 45) / 121][Stage 14:============================================>         (99 + 22) / 121][Stage 14:==================================================>   (113 + 8) / 121][Stage 14:====================================================> (117 + 4) / 121]                                                                                [Stage 15:===========================>                          (61 + 61) / 122][Stage 15:============================>                         (64 + 58) / 122][Stage 15:==================================>                   (77 + 45) / 122][Stage 15:==========================================>           (96 + 26) / 122][Stage 15:===============================================>     (109 + 13) / 122][Stage 15:==================================================>   (114 + 8) / 122][Stage 15:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 5.379127888 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR   partitionIndex = 139  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 166  OR  partitionIn dex = 167  OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 139  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 166  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.520967788 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:=================================>                    (71 + 42) / 113][Stage 16:=======================================>              (83 + 30) / 113][Stage 16:=============================================>        (95 + 18) / 113][Stage 16:==============================================>       (98 + 15) / 113][Stage 16:===============================================>     (101 + 12) / 113][Stage 16:================================================>    (103 + 10) / 113][Stage 16:==================================================>   (106 + 7) / 113][Stage 16:=====================================================>(111 + 2) / 113]                                                                                [Stage 17:======================================>               (81 + 33) / 114][Stage 17:=========================================>            (88 + 26) / 114][Stage 17:=============================================>        (97 + 17) / 114][Stage 17:================================================>    (104 + 10) / 114][Stage 17:===================================================>  (109 + 5) / 114][Stage 17:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 4.211332811 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR   partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIn dex = 211  OR  partitionIndex = 225 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 225 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.539782135 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:>                                                       (0 + 0) / 121][Stage 18:==========================>                           (60 + 61) / 121][Stage 18:============================>                         (64 + 57) / 121][Stage 18:====================================>                 (82 + 39) / 121][Stage 18:=============================================>       (103 + 18) / 121][Stage 18:=================================================>    (112 + 9) / 121][Stage 18:===================================================>  (116 + 5) / 121][Stage 18:=====================================================>(119 + 2) / 121]                                                                                [Stage 19:===========================>                          (62 + 60) / 122][Stage 19:==============================>                       (69 + 53) / 122][Stage 19:====================================>                 (83 + 39) / 122][Stage 19:============================================>        (102 + 20) / 122][Stage 19:==================================================>   (113 + 9) / 122][Stage 19:====================================================> (119 + 3) / 122]                                                                                Time elapsed: 4.370442484 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21  OR  par titionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 4 9  OR  partitionIndex = 50 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 49  OR  partitionIndex = 50 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.565762957 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (60 + 60) / 120][Stage 20:===============================>                      (69 + 51) / 120][Stage 20:=======================================>              (87 + 33) / 120][Stage 20:==================================================>   (112 + 8) / 120][Stage 20:=====================================================>(119 + 1) / 120]                                                                                [Stage 21:===========================>                          (61 + 60) / 121][Stage 21:=================================>                    (74 + 47) / 121][Stage 21:======================================>               (87 + 34) / 121][Stage 21:==============================================>      (107 + 14) / 121][Stage 21:==================================================>   (114 + 7) / 121][Stage 21:=====================================================>(119 + 2) / 121][Stage 21:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.513335789 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR   partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIn dex = 169  OR  partitionIndex = 170 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.547127152 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:==============================>                       (66 + 49) / 115][Stage 22:===================================>                  (76 + 39) / 115][Stage 22:===========================================>          (92 + 23) / 115][Stage 22:==================================================>   (107 + 8) / 115][Stage 22:=====================================================>(113 + 2) / 115]                                                                                [Stage 23:===============================>                      (67 + 49) / 116][Stage 23:===================================>                  (77 + 39) / 116][Stage 23:============================================>         (96 + 20) / 116][Stage 23:===============================================>     (103 + 13) / 116][Stage 23:=================================================>    (107 + 9) / 116][Stage 23:=====================================================>(114 + 2) / 116]                                                                                Time elapsed: 3.274726194 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  pa rtitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex =  107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 65  OR  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.506102461 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (57 + 56) / 113][Stage 24:============================>                         (59 + 54) / 113][Stage 24:====================================>                 (77 + 36) / 113][Stage 24:===========================================>          (90 + 23) / 113][Stage 24:===============================================>     (102 + 11) / 113][Stage 24:===================================================>  (107 + 6) / 113]                                                                                [Stage 25:============================>                         (61 + 53) / 114][Stage 25:=================================>                    (71 + 43) / 114][Stage 25:============================================>         (93 + 21) / 114][Stage 25:===============================================>     (103 + 11) / 114]                                                                                Time elapsed: 4.661278397 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  pa rtitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex =  85  OR  partitionIndex = 86 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.500558386 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:===========================>                          (58 + 55) / 113][Stage 26:===============================>                      (66 + 47) / 113][Stage 26:==========================================>           (89 + 24) / 113][Stage 26:================================================>    (103 + 10) / 113][Stage 26:===================================================>  (108 + 5) / 113][Stage 26:=====================================================>(112 + 1) / 113]                                                                                [Stage 27:===========================>                          (59 + 55) / 114][Stage 27:==============================>                       (64 + 50) / 114][Stage 27:=======================================>              (84 + 30) / 114][Stage 27:=============================================>        (97 + 17) / 114][Stage 27:===============================================>     (103 + 11) / 114][Stage 27:==================================================>   (107 + 7) / 114][Stage 27:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 5.164842268 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIn dex = 145  OR  partitionIndex = 146 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 146 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414879907 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:=======================================>              (85 + 30) / 115][Stage 28:===========================================>          (93 + 22) / 115][Stage 28:===================================================>  (109 + 6) / 115][Stage 28:=====================================================>(114 + 1) / 115]                                                                                [Stage 29:=======================================>              (84 + 32) / 116][Stage 29:=============================================>       (100 + 16) / 116][Stage 29:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.807791098 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR   partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIn dex = 165  OR  partitionIndex = 166 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 123  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 165  OR  partitionIndex = 166 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49533795 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (58 + 55) / 113][Stage 30:=================================>                    (71 + 42) / 113][Stage 30:=========================================>            (87 + 26) / 113][Stage 30:=================================================>    (104 + 9) / 113][Stage 30:=====================================================>(112 + 1) / 113]                                                                                [Stage 31:==============================>                       (64 + 50) / 114][Stage 31:====================================>                 (77 + 37) / 114][Stage 31:===========================================>          (91 + 23) / 114][Stage 31:================================================>    (104 + 10) / 114][Stage 31:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.734232329 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 62  OR  pa rtitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex =  78  OR  partitionIndex = 90 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.49750949 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:===========================>                          (58 + 55) / 113][Stage 32:============================>                         (59 + 54) / 113][Stage 32:=================================>                    (70 + 43) / 113][Stage 32:==========================================>           (89 + 24) / 113][Stage 32:===================================================>  (108 + 5) / 113]                                                                                [Stage 33:============================>                         (60 + 54) / 114][Stage 33:===============================>                      (66 + 48) / 114][Stage 33:=========================================>            (87 + 27) / 114][Stage 33:===============================================>     (102 + 12) / 114][Stage 33:====================================================> (110 + 4) / 114][Stage 33:=====================================================>(112 + 2) / 114][Stage 33:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.963921352 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIn dex = 201  OR  partitionIndex = 202 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 202 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.433338936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:=================================>                    (70 + 43) / 113][Stage 34:=======================================>              (82 + 31) / 113][Stage 34:============================================>         (93 + 20) / 113][Stage 34:===============================================>     (102 + 11) / 113][Stage 34:==================================================>   (106 + 7) / 113][Stage 34:===================================================>  (108 + 5) / 113][Stage 34:=====================================================>(111 + 2) / 113][Stage 34:=====================================================>(112 + 1) / 113]                                                                                [Stage 35:========================================>             (85 + 29) / 114][Stage 35:===========================================>          (92 + 22) / 114][Stage 35:===============================================>     (102 + 12) / 114][Stage 35:====================================================> (110 + 4) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.938260116 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185  OR  partitionIndex = 186  OR   partitionIndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIn dex = 202  OR  partitionIndex = 214 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474346328 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:================================>                     (69 + 46) / 115][Stage 36:==========================================>           (91 + 24) / 115][Stage 36:===============================================>     (103 + 12) / 115]                                                                                [Stage 37:==================================>                   (74 + 42) / 116][Stage 37:========================================>             (86 + 30) / 116][Stage 37:==============================================>      (101 + 15) / 116][Stage 37:====================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.800509698 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR   partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIn dex = 173  OR  partitionIndex = 174 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437505553 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:================================>                     (72 + 46) / 118][Stage 38:==================================>                   (75 + 43) / 118][Stage 38:====================================>                 (80 + 38) / 118][Stage 38:=============================================>        (99 + 19) / 118][Stage 38:==================================================>   (111 + 7) / 118][Stage 38:===================================================>  (113 + 5) / 118]                                                                                [Stage 39:=================================>                    (73 + 46) / 119][Stage 39:==================================>                   (76 + 43) / 119][Stage 39:=======================================>              (86 + 33) / 119][Stage 39:============================================>         (99 + 20) / 119][Stage 39:=============================================>       (103 + 16) / 119][Stage 39:==================================================>   (112 + 7) / 119][Stage 39:====================================================> (116 + 3) / 119][Stage 39:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.126256714 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  pa rtitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex =  54  OR  partitionIndex = 55 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 55 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.471553831 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:============================>                         (60 + 53) / 113][Stage 40:====================================>                 (76 + 37) / 113][Stage 40:==========================================>           (89 + 24) / 113][Stage 40:==============================================>      (100 + 13) / 113][Stage 40:==================================================>   (106 + 7) / 113][Stage 40:====================================================> (110 + 3) / 113]                                                                                [Stage 41:=============================>                        (62 + 52) / 114][Stage 41:===================================>                  (75 + 39) / 114][Stage 41:=============================================>        (96 + 18) / 114][Stage 41:===================================================>  (108 + 6) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.65636377 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  pa rtitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex =  50  OR  partitionIndex = 51 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.538435245 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:==========================>                           (60 + 61) / 121][Stage 42:==============================>                       (69 + 52) / 121][Stage 42:=======================================>              (88 + 33) / 121][Stage 42:===============================================>     (109 + 12) / 121]                                                                                [Stage 43:===========================>                          (61 + 61) / 122][Stage 43:==============================>                       (68 + 54) / 122][Stage 43:===================================>                  (81 + 41) / 122][Stage 43:============================================>        (102 + 20) / 122][Stage 43:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.674289421 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  pa rtitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex =  51  OR  partitionIndex = 52 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex = 52 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.454436604 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:===========================>                          (61 + 59) / 120][Stage 44:================================>                     (73 + 47) / 120][Stage 44:===========================================>          (97 + 23) / 120][Stage 44:===================================================>  (115 + 5) / 120][Stage 44:====================================================> (116 + 4) / 120][Stage 44:=====================================================>(119 + 1) / 120]                                                                                [Stage 45:===========================>                          (62 + 59) / 121][Stage 45:================================>                     (73 + 48) / 121][Stage 45:===========================================>         (100 + 21) / 121][Stage 45:===================================================>  (115 + 6) / 121][Stage 45:====================================================> (118 + 3) / 121][Stage 45:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.364008567 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR   partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIn dex = 233  OR  partitionIndex = 234 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 191  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 220  OR  partitionIndex = 233  OR  partitionIndex = 234 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412951773 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:================================>                     (72 + 46) / 118][Stage 46:=====================================>                (81 + 37) / 118][Stage 46:===========================================>          (94 + 24) / 118][Stage 46:================================================>    (108 + 10) / 118][Stage 46:===================================================>  (113 + 5) / 118][Stage 46:=====================================================>(116 + 2) / 118]                                                                                [Stage 47:==================================>                   (75 + 44) / 119][Stage 47:====================================>                 (81 + 38) / 119][Stage 47:========================================>             (89 + 30) / 119][Stage 47:=============================================>       (103 + 16) / 119][Stage 47:====================================================> (115 + 4) / 119][Stage 47:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.365691852 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  pa rtitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex =  83  OR  partitionIndex = 84 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 45  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 83  OR  partitionIndex = 84 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.480742967 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:==========================>                           (60 + 61) / 121][Stage 48:=============================>                        (65 + 56) / 121][Stage 48:======================================>               (87 + 34) / 121][Stage 48:==================================================>   (114 + 7) / 121][Stage 48:=====================================================>(119 + 2) / 121]                                                                                [Stage 49:===========================>                          (61 + 61) / 122][Stage 49:=================================>                    (75 + 47) / 122][Stage 49:======================================>               (88 + 34) / 122][Stage 49:=============================================>       (105 + 17) / 122][Stage 49:=====================================================>(120 + 2) / 122]                                                                                Time elapsed: 3.702388896 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 130  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 217  OR  partitionIn dex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474848491 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (60 + 60) / 120][Stage 50:============================>                         (63 + 57) / 120][Stage 50:=================================>                    (75 + 45) / 120][Stage 50:================================================>    (109 + 11) / 120][Stage 50:=====================================================>(119 + 1) / 120]                                                                                [Stage 51:===========================>                          (61 + 60) / 121][Stage 51:=============================>                        (67 + 54) / 121][Stage 51:=======================================>              (89 + 32) / 121][Stage 51:=============================================>       (104 + 17) / 121][Stage 51:====================================================> (118 + 3) / 121]                                                                                Time elapsed: 3.358072719 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR   partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIn dex = 195  OR  partitionIndex = 196 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41978041 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:=================================>                    (72 + 43) / 115][Stage 52:======================================>               (81 + 34) / 115][Stage 52:==============================================>      (101 + 14) / 115][Stage 52:===================================================>  (109 + 6) / 115][Stage 52:=====================================================>(114 + 1) / 115]                                                                                [Stage 53:================================>                     (70 + 46) / 116][Stage 53:======================================>               (83 + 33) / 116][Stage 53:===============================================>     (105 + 11) / 116][Stage 53:===================================================>  (111 + 5) / 116]                                                                                Time elapsed: 2.92868618 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 6  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 33  OR  partitionIndex = 47   OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459999243 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:===========================>                          (60 + 60) / 120][Stage 54:==============================>                       (68 + 52) / 120][Stage 54:========================================>             (89 + 31) / 120][Stage 54:===================================================>  (114 + 6) / 120][Stage 54:=====================================================>(119 + 1) / 120]                                                                                [Stage 55:===========================>                          (61 + 60) / 121][Stage 55:==============================>                       (68 + 53) / 121][Stage 55:=======================================>              (88 + 33) / 121][Stage 55:===========================================>         (100 + 21) / 121][Stage 55:====================================================> (117 + 4) / 121][Stage 55:=====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.900299614 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  pa rtitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex =  91  OR  partitionIndex = 105 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 105 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.446315653 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:==========================>                           (60 + 61) / 121][Stage 56:===============================>                      (70 + 51) / 121][Stage 56:===========================================>         (100 + 21) / 121][Stage 56:==================================================>   (113 + 8) / 121][Stage 56:=====================================================>(120 + 1) / 121]                                                                                [Stage 57:===========================>                          (61 + 61) / 122][Stage 57:============================>                         (64 + 58) / 122][Stage 57:==================================>                   (79 + 43) / 122][Stage 57:==========================================>           (96 + 26) / 122][Stage 57:================================================>    (112 + 10) / 122]                                                                                Time elapsed: 4.139696034 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125  OR  partitionIndex = 126  OR   partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIn dex = 142  OR  partitionIndex = 154 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.431369643 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:>                                                       (0 + 0) / 113][Stage 58:============================>                         (59 + 54) / 113][Stage 58:================================>                     (69 + 44) / 113][Stage 58:========================================>             (85 + 28) / 113][Stage 58:============================================>         (94 + 19) / 113][Stage 58:=================================================>    (104 + 9) / 113]                                                                                [Stage 59:=============================>                        (62 + 52) / 114][Stage 59:==================================>                   (73 + 41) / 114][Stage 59:=========================================>            (88 + 26) / 114][Stage 59:==================================================>   (106 + 8) / 114][Stage 59:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.756720783 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47   OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 32  OR  partitionIndex = 33  OR  partitionIndex = 47  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42240935 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:================================>                     (72 + 46) / 118][Stage 60:==================================>                   (75 + 43) / 118][Stage 60:====================================>                 (79 + 39) / 118][Stage 60:=========================================>            (91 + 27) / 118][Stage 60:===============================================>     (105 + 13) / 118][Stage 60:=====================================================>(116 + 2) / 118]                                                                                [Stage 61:=================================>                    (73 + 46) / 119][Stage 61:==================================>                   (75 + 44) / 119][Stage 61:====================================>                 (81 + 38) / 119][Stage 61:===========================================>          (96 + 23) / 119][Stage 61:================================================>    (109 + 10) / 119][Stage 61:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.76670202 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR   partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIn dex = 173  OR  partitionIndex = 174 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158  OR  partitionIndex = 159  OR  partitionIndex = 173  OR  partitionIndex = 174 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.442083477 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (62 + 58) / 120][Stage 62:===============================>                      (70 + 50) / 120][Stage 62:======================================>               (86 + 34) / 120][Stage 62:===================================================>  (114 + 6) / 120]                                                                                [Stage 63:===========================>                          (61 + 60) / 121][Stage 63:================================>                     (73 + 48) / 121][Stage 63:=========================================>            (93 + 28) / 121][Stage 63:==================================================>   (114 + 7) / 121][Stage 63:=====================================================>(119 + 2) / 121][Stage 63:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.881700967 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR   partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIn dex = 209  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 195  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 209  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426368849 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:===========================>                          (58 + 55) / 113][Stage 64:=============================>                        (62 + 51) / 113][Stage 64:=================================>                    (70 + 43) / 113][Stage 64:=============================================>        (95 + 18) / 113][Stage 64:====================================================> (109 + 4) / 113]                                                                                [Stage 65:===========================>                          (59 + 55) / 114][Stage 65:==================================>                   (73 + 41) / 114][Stage 65:=============================================>        (97 + 17) / 114][Stage 65:====================================================> (110 + 4) / 114][Stage 65:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.621349988 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29  OR  pa rtitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex =  57  OR  partitionIndex = 58 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 57  OR  partitionIndex = 58 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.449842713 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:=============================>                        (61 + 52) / 113][Stage 66:==================================>                   (72 + 41) / 113][Stage 66:===========================================>          (92 + 21) / 113][Stage 66:====================================================> (109 + 4) / 113][Stage 66:=====================================================>(112 + 1) / 113]                                                                                [Stage 67:==============================>                       (64 + 50) / 114][Stage 67:==================================>                   (73 + 41) / 114][Stage 67:===========================================>          (92 + 22) / 114][Stage 67:===================================================>  (108 + 6) / 114][Stage 67:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.756659841 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIn dex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42573051 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:============================>                         (59 + 54) / 113][Stage 68:==================================>                   (73 + 40) / 113][Stage 68:===========================================>          (91 + 22) / 113][Stage 68:====================================================> (109 + 4) / 113][Stage 68:=====================================================>(111 + 2) / 113]                                                                                [Stage 69:=============================>                        (63 + 51) / 114][Stage 69:===================================>                  (75 + 39) / 114][Stage 69:===========================================>          (92 + 22) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.552551504 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR   partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIn dex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 128  OR  partitionIndex = 129  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.434149505 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:============================>                         (60 + 53) / 113][Stage 70:================================>                     (67 + 46) / 113][Stage 70:=========================================>            (87 + 26) / 113][Stage 70:==================================================>   (106 + 7) / 113][Stage 70:=====================================================>(111 + 2) / 113]                                                                                [Stage 71:============================>                         (60 + 54) / 114][Stage 71:==================================>                   (73 + 41) / 114][Stage 71:===========================================>          (92 + 22) / 114][Stage 71:====================================================> (110 + 4) / 114][Stage 71:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.612352948 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  pa rtitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex =  38  OR  partitionIndex = 39 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.362449754 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:=====================================>                (80 + 35) / 115][Stage 72:=======================================>              (85 + 30) / 115][Stage 72:=============================================>        (96 + 19) / 115][Stage 72:==================================================>   (108 + 7) / 115][Stage 72:=====================================================>(113 + 2) / 115][Stage 72:=====================================================>(114 + 1) / 115]                                                                                [Stage 73:======================================>               (82 + 34) / 116][Stage 73:==========================================>           (91 + 25) / 116][Stage 73:=============================================>        (98 + 18) / 116][Stage 73:=================================================>    (107 + 9) / 116][Stage 73:===================================================>  (110 + 6) / 116][Stage 73:=====================================================>(114 + 2) / 116][Stage 73:=====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.527502362 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  pa rtitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex =  89  OR  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.427406011 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:===========================>                          (62 + 58) / 120][Stage 74:================================>                     (72 + 48) / 120][Stage 74:=========================================>            (92 + 28) / 120][Stage 74:==============================================>      (106 + 14) / 120][Stage 74:====================================================> (117 + 3) / 120]                                                                                [Stage 75:===========================>                          (62 + 59) / 121][Stage 75:================================>                     (73 + 48) / 121][Stage 75:======================================>               (87 + 34) / 121][Stage 75:==============================================>      (106 + 15) / 121][Stage 75:====================================================> (118 + 3) / 121][Stage 75:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.600226833 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 130  OR   partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIn dex = 146  OR  partitionIndex = 158 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 129  OR  partitionIndex = 130  OR  partitionIndex = 131  OR  partitionIndex = 143  OR  partitionIndex = 144  OR  partitionIndex = 145  OR  partitionIndex = 146  OR  partitionIndex = 158 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412561602 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:================================>                     (72 + 46) / 118][Stage 76:===================================>                  (78 + 40) / 118][Stage 76:========================================>             (88 + 30) / 118][Stage 76:================================================>    (108 + 10) / 118][Stage 76:=====================================================>(117 + 1) / 118]                                                                                [Stage 77:=================================>                    (73 + 46) / 119][Stage 77:===================================>                  (78 + 41) / 119][Stage 77:=======================================>              (86 + 33) / 119][Stage 77:===========================================>          (95 + 24) / 119][Stage 77:================================================>    (108 + 11) / 119][Stage 77:====================================================> (115 + 4) / 119][Stage 77:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.849363505 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  pa rtitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex =  43  OR  partitionIndex = 57 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42994233 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:==========================>                           (60 + 61) / 121][Stage 78:==============================>                       (68 + 53) / 121][Stage 78:========================================>             (90 + 31) / 121][Stage 78:===============================================>     (108 + 13) / 121][Stage 78:====================================================> (117 + 4) / 121]                                                                                [Stage 79:===========================>                          (62 + 60) / 122][Stage 79:=================================>                    (75 + 47) / 122][Stage 79:========================================>             (91 + 31) / 122][Stage 79:================================================>    (111 + 11) / 122][Stage 79:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.730355289 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 199  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 226  OR  partitionIn dex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.383553963 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:================================>                     (72 + 46) / 118][Stage 80:=================================>                    (74 + 44) / 118][Stage 80:=======================================>              (86 + 32) / 118][Stage 80:==========================================>           (93 + 25) / 118][Stage 80:===============================================>     (106 + 12) / 118][Stage 80:===================================================>  (113 + 5) / 118][Stage 80:=====================================================>(117 + 1) / 118]                                                                                [Stage 81:=================================>                    (73 + 46) / 119][Stage 81:==================================>                   (76 + 43) / 119][Stage 81:=======================================>              (86 + 33) / 119][Stage 81:===========================================>          (96 + 23) / 119][Stage 81:==============================================>      (105 + 14) / 119][Stage 81:=====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.039209126 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR   partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIn dex = 225  OR  partitionIndex = 226 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 183  OR  partitionIndex = 197  OR  partitionIndex = 198  OR  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 225  OR  partitionIndex = 226 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381107044 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:================================>                     (72 + 46) / 118][Stage 82:=================================>                    (73 + 45) / 118][Stage 82:====================================>                 (80 + 38) / 118][Stage 82:==========================================>           (93 + 25) / 118][Stage 82:=================================================>    (109 + 9) / 118][Stage 82:====================================================> (115 + 3) / 118]                                                                                [Stage 83:==================================>                   (76 + 43) / 119][Stage 83:=====================================>                (82 + 37) / 119][Stage 83:=======================================>              (87 + 32) / 119][Stage 83:=============================================>       (103 + 16) / 119][Stage 83:====================================================> (115 + 4) / 119]                                                                                Time elapsed: 3.812215744 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR   partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIn dex = 219  OR  partitionIndex = 233 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218  OR  partitionIndex = 219  OR  partitionIndex = 233 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420725918 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:==========================>                           (60 + 61) / 121][Stage 84:============================>                         (64 + 57) / 121][Stage 84:====================================>                 (82 + 39) / 121][Stage 84:============================================>        (102 + 19) / 121][Stage 84:=====================================================>(119 + 2) / 121]                                                                                [Stage 85:===========================>                          (61 + 61) / 122][Stage 85:==============================>                       (69 + 53) / 122][Stage 85:=====================================>                (84 + 38) / 122][Stage 85:===============================================>     (109 + 13) / 122][Stage 85:===================================================>  (117 + 5) / 122][Stage 85:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.3340815 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR   partitionIndex = 147  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 174  OR  partitionIn dex = 175  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 133  OR  partitionIndex = 147  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.371248112 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:=====================================>                (79 + 34) / 113][Stage 86:===========================================>          (92 + 21) / 113][Stage 86:===============================================>     (101 + 12) / 113][Stage 86:====================================================> (109 + 4) / 113]                                                                                [Stage 87:======================================>               (81 + 33) / 114][Stage 87:============================================>         (93 + 21) / 114][Stage 87:==============================================>      (100 + 14) / 114][Stage 87:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.984239447 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR   partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIn dex = 197  OR  partitionIndex = 198 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 182  OR  partitionIndex = 183  OR  partitionIndex = 195  OR  partitionIndex = 196  OR  partitionIndex = 197  OR  partitionIndex = 198 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.414499243 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:===========================>                          (58 + 55) / 113][Stage 88:=============================>                        (61 + 52) / 113][Stage 88:===================================>                  (75 + 38) / 113][Stage 88:============================================>         (94 + 19) / 113][Stage 88:====================================================> (109 + 4) / 113]                                                                                [Stage 89:==============================>                       (64 + 50) / 114][Stage 89:===================================>                  (75 + 39) / 114][Stage 89:=============================================>        (96 + 18) / 114][Stage 89:===================================================>  (108 + 6) / 114][Stage 89:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.625997162 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR   partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIn dex = 215  OR  partitionIndex = 229 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 186  OR  partitionIndex = 187  OR  partitionIndex = 200  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 229 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.426480896 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (63 + 58) / 121][Stage 90:===============================>                      (71 + 50) / 121][Stage 90:=========================================>            (92 + 29) / 121][Stage 90:==================================================>   (114 + 7) / 121]                                                                                [Stage 91:===========================>                          (62 + 60) / 122][Stage 91:==============================>                       (70 + 52) / 122][Stage 91:===========================================>          (99 + 23) / 122][Stage 91:===============================================>     (110 + 12) / 122][Stage 91:====================================================> (119 + 3) / 122][Stage 91:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.430475151 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR   partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIn dex = 167  OR  partitionIndex = 168 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 124  OR  partitionIndex = 125  OR  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 139  OR  partitionIndex = 140  OR  partitionIndex = 167  OR  partitionIndex = 168 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.411927086 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:===========================>                          (60 + 60) / 120][Stage 92:=============================>                        (65 + 55) / 120][Stage 92:======================================>               (86 + 34) / 120][Stage 92:================================================>    (109 + 11) / 120][Stage 92:=====================================================>(118 + 2) / 120]                                                                                [Stage 93:===========================>                          (61 + 60) / 121][Stage 93:===============================>                      (70 + 51) / 121][Stage 93:=====================================>                (85 + 36) / 121][Stage 93:==============================================>      (106 + 15) / 121][Stage 93:====================================================> (118 + 3) / 121][Stage 93:=====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.250956257 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR   partitionIndex = 194  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 221  OR  partitionIn dex = 235  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 194  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.412263966 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (62 + 59) / 121][Stage 94:===============================>                      (70 + 51) / 121][Stage 94:=========================================>            (94 + 27) / 121][Stage 94:=================================================>    (112 + 9) / 121][Stage 94:=====================================================>(119 + 2) / 121]                                                                                [Stage 95:===========================>                          (61 + 61) / 122][Stage 95:==============================>                       (68 + 54) / 122][Stage 95:======================================>               (86 + 36) / 122][Stage 95:==============================================>      (107 + 15) / 122][Stage 95:===================================================>  (116 + 6) / 122][Stage 95:=====================================================>(121 + 1) / 122]                                                                                Time elapsed: 3.704357385 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  pa rtitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex =  57  OR  partitionIndex = 58 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 29  OR  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 57  OR  partitionIndex = 58 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.410802168 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:===========================>                          (58 + 55) / 113][Stage 96:=============================>                        (61 + 52) / 113][Stage 96:====================================>                 (76 + 37) / 113][Stage 96:=============================================>        (96 + 17) / 113][Stage 96:====================================================> (109 + 4) / 113]                                                                                [Stage 97:===========================>                          (59 + 55) / 114][Stage 97:==============================>                       (64 + 50) / 114][Stage 97:==================================>                   (73 + 41) / 114][Stage 97:=============================================>        (96 + 18) / 114][Stage 97:===================================================>  (108 + 6) / 114][Stage 97:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.836340682 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 190  OR   partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIn dex = 206  OR  partitionIndex = 218 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 206  OR  partitionIndex = 218 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.376248211 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:==================================>                   (73 + 40) / 113][Stage 98:========================================>             (84 + 29) / 113][Stage 98:============================================>         (94 + 19) / 113][Stage 98:==================================================>   (106 + 7) / 113]                                                                                [Stage 99:=====================================>                (79 + 35) / 114][Stage 99:==========================================>           (90 + 24) / 114][Stage 99:==============================================>      (100 + 14) / 114][Stage 99:==================================================>   (106 + 8) / 114][Stage 99:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.896557407 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR   partitionIndex = 178  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIn dex = 189  OR  partitionIndex = 203 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 164  OR  partitionIndex = 165  OR  partitionIndex = 178  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 203 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367199458 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:====================================>                (78 + 35) / 113][Stage 100:========================================>            (87 + 26) / 113][Stage 100:=============================================>       (98 + 15) / 113][Stage 100:=================================================>   (106 + 7) / 113]                                                                                [Stage 101:====================================>                (79 + 35) / 114][Stage 101:=========================================>           (89 + 25) / 114][Stage 101:=============================================>       (98 + 16) / 114][Stage 101:===================================================> (111 + 3) / 114][Stage 101:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.961540127 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  pa rtitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex =  90  OR  partitionIndex = 91 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.418553824 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:==========================>                          (60 + 61) / 121][Stage 102:==================================>                  (78 + 43) / 121][Stage 102:==========================================>         (100 + 21) / 121][Stage 102:==================================================>  (115 + 6) / 121][Stage 102:====================================================>(120 + 1) / 121]                                                                                [Stage 103:==========================>                          (61 + 61) / 122][Stage 103:=============================>                       (69 + 53) / 122][Stage 103:====================================>                (84 + 38) / 122][Stage 103:===========================================>        (102 + 20) / 122][Stage 103:====================================================>(120 + 2) / 122][Stage 103:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.358020352 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 11 1  OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357195365 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:=======================================>             (86 + 29) / 115][Stage 104:============================================>        (96 + 19) / 115][Stage 104:=================================================>   (107 + 8) / 115]                                                                                [Stage 105:=====================================>               (83 + 33) / 116][Stage 105:===========================================>         (96 + 20) / 116][Stage 105:===============================================>    (105 + 11) / 116][Stage 105:=================================================>   (108 + 8) / 116][Stage 105:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 4.556277227 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 154  OR   partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIn dex = 170  OR  partitionIndex = 171 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374753454 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:================================>                    (72 + 46) / 118][Stage 106:=================================>                   (75 + 43) / 118][Stage 106:========================================>            (90 + 28) / 118][Stage 106:=============================================>      (104 + 14) / 118][Stage 106:=================================================>   (111 + 7) / 118]                                                                                [Stage 107:================================>                    (73 + 46) / 119][Stage 107:==================================>                  (78 + 41) / 119][Stage 107:=======================================>             (88 + 31) / 119][Stage 107:===========================================>         (97 + 22) / 119][Stage 107:=================================================>   (112 + 7) / 119][Stage 107:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 4.159082854 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  pa rtitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex =  77  OR  partitionIndex = 78 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77  OR  partitionIndex = 78 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370308658 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:===================================>                 (76 + 37) / 113][Stage 108:=======================================>             (84 + 29) / 113][Stage 108:============================================>        (94 + 19) / 113][Stage 108:===============================================>    (103 + 10) / 113][Stage 108:====================================================>(111 + 2) / 113]                                                                                [Stage 109:======================================>              (82 + 32) / 114][Stage 109:=======================================>             (86 + 28) / 114][Stage 109:============================================>        (96 + 18) / 114][Stage 109:=================================================>   (106 + 8) / 114][Stage 109:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.630440705 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex =  111  OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.354696528 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:=====================================>               (79 + 34) / 113][Stage 110:======================================>              (82 + 31) / 113][Stage 110:==============================================>     (100 + 13) / 113][Stage 110:====================================================>(111 + 2) / 113][Stage 110:====================================================>(112 + 1) / 113]                                                                                [Stage 111:====================================>                (79 + 35) / 114][Stage 111:========================================>            (88 + 26) / 114][Stage 111:============================================>        (96 + 18) / 114][Stage 111:===================================================> (110 + 4) / 114][Stage 111:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.30567912 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  pa rtitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex =  90  OR  partitionIndex = 102 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39783086 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:==========================>                          (60 + 61) / 121][Stage 112:============================>                        (66 + 55) / 121][Stage 112:=====================================>               (86 + 35) / 121][Stage 112:=============================================>      (106 + 15) / 121][Stage 112:====================================================>(119 + 2) / 121][Stage 112:====================================================>(120 + 1) / 121]                                                                                [Stage 113:==========================>                          (61 + 61) / 122][Stage 113:============================>                        (66 + 56) / 122][Stage 113:==================================>                  (79 + 43) / 122][Stage 113:==========================================>         (100 + 22) / 122][Stage 113:=================================================>   (113 + 9) / 122][Stage 113:====================================================>(120 + 2) / 122]                                                                                Time elapsed: 4.492960091 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  pa rtitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex =  99  OR  partitionIndex = 113 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 84  OR  partitionIndex = 85  OR  partitionIndex = 86  OR  partitionIndex = 98  OR  partitionIndex = 99  OR  partitionIndex = 113 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387337768 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:============================>                        (60 + 53) / 113][Stage 114:=================================>                   (71 + 42) / 113][Stage 114:==========================================>          (91 + 22) / 113][Stage 114:================================================>    (104 + 9) / 113][Stage 114:====================================================>(111 + 2) / 113]                                                                                [Stage 115:===========================>                         (59 + 55) / 114][Stage 115:=============================>                       (64 + 50) / 114][Stage 115:=====================================>               (80 + 34) / 114][Stage 115:===========================================>         (93 + 21) / 114][Stage 115:==================================================>  (108 + 6) / 114][Stage 115:====================================================>(112 + 2) / 114][Stage 115:=====================================================(114 + 0) / 114]                                                                                Time elapsed: 4.398413878 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103  OR   partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIn dex = 119  OR  partitionIndex = 120 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119  OR  partitionIndex = 120 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395321623 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:==========================>                          (60 + 60) / 120][Stage 116:===========================>                         (62 + 58) / 120][Stage 116:================================>                    (73 + 47) / 120][Stage 116:=======================================>             (90 + 30) / 120][Stage 116:===============================================>    (110 + 10) / 120]                                                                                [Stage 117:==========================>                          (61 + 60) / 121][Stage 117:================================>                    (74 + 47) / 121][Stage 117:========================================>            (92 + 29) / 121][Stage 117:===============================================>    (111 + 10) / 121][Stage 117:====================================================>(119 + 2) / 121][Stage 117:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.918296888 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 81  OR  pa rtitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex =  109  OR  partitionIndex = 110 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 67  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 109  OR  partitionIndex = 110 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399621101 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:==========================>                          (60 + 60) / 120][Stage 118:=================================>                   (75 + 45) / 120][Stage 118:=====================================>               (86 + 34) / 120][Stage 118:==============================================>     (107 + 13) / 120]                                                                                [Stage 119:===========================>                         (63 + 58) / 121][Stage 119:===============================>                     (72 + 49) / 121][Stage 119:=========================================>           (95 + 26) / 121][Stage 119:===============================================>    (111 + 10) / 121][Stage 119:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.562865753 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  pa rtitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex =  94  OR  partitionIndex = 95 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 66  OR  partitionIndex = 67  OR  partitionIndex = 79  OR  partitionIndex = 80  OR  partitionIndex = 81  OR  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381055754 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:================================>                    (71 + 44) / 115][Stage 120:======================================>              (83 + 32) / 115][Stage 120:=============================================>      (101 + 14) / 115][Stage 120:====================================================>(114 + 1) / 115]                                                                                [Stage 121:================================>                    (71 + 45) / 116][Stage 121:=======================================>             (87 + 29) / 116][Stage 121:==============================================>     (104 + 12) / 116][Stage 121:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 2.735094791 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  pa rtitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex  = 117  OR  partitionIndex = 118 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 117  OR  partitionIndex = 118 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.415484571 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:==========================>                          (60 + 60) / 120][Stage 122:============================>                        (64 + 56) / 120][Stage 122:===================================>                 (81 + 39) / 120][Stage 122:==============================================>     (108 + 12) / 120]                                                                                [Stage 123:===========================>                         (63 + 58) / 121][Stage 123:===============================>                     (72 + 49) / 121][Stage 123:=========================================>           (94 + 27) / 121][Stage 123:=================================================>   (112 + 9) / 121][Stage 123:===================================================> (117 + 4) / 121][Stage 123:===================================================> (118 + 3) / 121][Stage 123:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.487079343 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  pa rtitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex =  89  OR  partitionIndex = 90 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 87  OR  partitionIndex = 88  OR  partitionIndex = 89  OR  partitionIndex = 90 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.478291231 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (58 + 55) / 113][Stage 124:=============================>                       (62 + 51) / 113][Stage 124:====================================>                (77 + 36) / 113][Stage 124:=============================================>       (97 + 16) / 113][Stage 124:===================================================> (110 + 3) / 113]                                                                                [Stage 125:============================>                        (62 + 52) / 114][Stage 125:==================================>                  (75 + 39) / 114][Stage 125:==========================================>          (91 + 23) / 114][Stage 125:===================================================> (110 + 4) / 114][Stage 125:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.656290244 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39  OR  pa rtitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex =  55  OR  partitionIndex = 56 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 40  OR  partitionIndex = 41  OR  partitionIndex = 53  OR  partitionIndex = 54  OR  partitionIndex = 55  OR  partitionIndex = 56 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400128362 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:==========================>                          (60 + 60) / 120][Stage 126:==========================>                          (61 + 59) / 120][Stage 126:=================================>                   (75 + 45) / 120][Stage 126:============================================>       (103 + 17) / 120][Stage 126:==================================================>  (114 + 6) / 120]                                                                                [Stage 127:============================>                        (65 + 56) / 121][Stage 127:==================================>                  (79 + 42) / 121][Stage 127:==========================================>         (100 + 21) / 121][Stage 127:===============================================>    (110 + 11) / 121][Stage 127:====================================================>(119 + 2) / 121][Stage 127:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.833653574 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR   partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIn dex = 235  OR  partitionIndex = 236 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 192  OR  partitionIndex = 193  OR  partitionIndex = 207  OR  partitionIndex = 208  OR  partitionIndex = 220  OR  partitionIndex = 221  OR  partitionIndex = 235  OR  partitionIndex = 236 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367847484 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:================================>                    (72 + 46) / 118][Stage 128:===================================>                 (78 + 40) / 118][Stage 128:=======================================>             (88 + 30) / 118][Stage 128:=========================================>           (93 + 25) / 118][Stage 128:==================================================>  (113 + 5) / 118]                                                                                [Stage 129:=================================>                   (76 + 43) / 119][Stage 129:====================================>                (83 + 36) / 119][Stage 129:===========================================>         (97 + 22) / 119][Stage 129:===============================================>    (108 + 11) / 119][Stage 129:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.606931664 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 44  OR  pa rtitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex =  60  OR  partitionIndex = 68 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.394021447 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:==========================>                          (60 + 60) / 120][Stage 130:===============================>                     (72 + 48) / 120][Stage 130:=======================================>             (89 + 31) / 120][Stage 130:==============================================>     (107 + 13) / 120][Stage 130:===================================================> (117 + 3) / 120]                                                                                [Stage 131:===========================>                         (63 + 58) / 121][Stage 131:=================================>                   (77 + 44) / 121][Stage 131:==========================================>          (98 + 23) / 121][Stage 131:=================================================>   (113 + 8) / 121][Stage 131:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.977553531 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211  OR   partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIn dex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 210  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.370039023 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:=============================>                       (64 + 51) / 115][Stage 132:===================================>                 (77 + 38) / 115][Stage 132:========================================>            (88 + 27) / 115][Stage 132:===============================================>    (105 + 10) / 115]                                                                                [Stage 133:================================>                    (72 + 44) / 116][Stage 133:==========================================>          (92 + 24) / 116][Stage 133:================================================>    (107 + 9) / 116][Stage 133:===================================================> (113 + 3) / 116]                                                                                Time elapsed: 2.778994082 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 211  OR   partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIn dex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 211  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 225  OR  partitionIndex = 226  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39211433 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (62 + 58) / 120][Stage 134:===============================>                     (72 + 48) / 120][Stage 134:==========================================>          (96 + 24) / 120][Stage 134:=================================================>   (112 + 8) / 120][Stage 134:====================================================>(118 + 2) / 120]                                                                                [Stage 135:==========================>                          (61 + 60) / 121][Stage 135:============================>                        (66 + 55) / 121][Stage 135:===================================>                 (82 + 39) / 121][Stage 135:===========================================>        (101 + 20) / 121][Stage 135:=================================================>   (113 + 8) / 121][Stage 135:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.861972533 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  pa rtitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex =  83  OR  partitionIndex = 84 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 59  OR  partitionIndex = 60  OR  partitionIndex = 68  OR  partitionIndex = 69  OR  partitionIndex = 70  OR  partitionIndex = 71  OR  partitionIndex = 83  OR  partitionIndex = 84 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.37587044 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:=============================>                       (62 + 51) / 113][Stage 136:=================================>                   (71 + 42) / 113][Stage 136:===========================================>         (92 + 21) / 113][Stage 136:==============================================>     (102 + 11) / 113][Stage 136:====================================================>(112 + 1) / 113]                                                                                [Stage 137:===========================>                         (60 + 54) / 114][Stage 137:==============================>                      (66 + 48) / 114][Stage 137:=========================================>           (90 + 24) / 114][Stage 137:==============================================>     (101 + 13) / 114][Stage 137:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 4.475090168 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  pa rtitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex =  106  OR  partitionIndex = 107 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.357215992 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:================================>                    (72 + 46) / 118][Stage 138:====================================>                (81 + 37) / 118][Stage 138:==========================================>          (94 + 24) / 118][Stage 138:==============================================>     (106 + 12) / 118][Stage 138:====================================================>(116 + 2) / 118]                                                                                [Stage 139:================================>                    (73 + 46) / 119][Stage 139:================================>                    (74 + 45) / 119][Stage 139:====================================>                (82 + 37) / 119][Stage 139:==========================================>          (95 + 24) / 119][Stage 139:==============================================>     (106 + 13) / 119][Stage 139:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 4.262133208 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR   partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIn dex = 203  OR  partitionIndex = 204 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387240034 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:>                                                      (0 + 0) / 113][Stage 140:============================>                        (60 + 53) / 113][Stage 140:==============================>                      (65 + 48) / 113][Stage 140:=======================================>             (85 + 28) / 113][Stage 140:==================================================>  (107 + 6) / 113]                                                                                [Stage 141:===========================>                         (59 + 55) / 114][Stage 141:================================>                    (69 + 45) / 114][Stage 141:===========================================>         (94 + 20) / 114][Stage 141:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.328643386 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  pa rtitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex =  105  OR  partitionIndex = 106 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 63  OR  partitionIndex = 77  OR  partitionIndex = 78  OR  partitionIndex = 90  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 105  OR  partitionIndex = 106 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.372570184 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:================================>                    (71 + 44) / 115][Stage 142:======================================>              (84 + 31) / 115][Stage 142:============================================>        (96 + 19) / 115][Stage 142:=================================================>   (108 + 7) / 115]                                                                                [Stage 143:================================>                    (72 + 44) / 116][Stage 143:=====================================>               (82 + 34) / 116][Stage 143:===============================================>    (105 + 11) / 116][Stage 143:====================================================>(114 + 2) / 116][Stage 143:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 3.182089763 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  pa rtitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex =  58  OR  partitionIndex = 59 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 30  OR  partitionIndex = 42  OR  partitionIndex = 43  OR  partitionIndex = 44  OR  partitionIndex = 45  OR  partitionIndex = 57  OR  partitionIndex = 58  OR  partitionIndex = 59 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.355483935 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:================================>                    (70 + 43) / 113][Stage 144:=======================================>             (84 + 29) / 113][Stage 144:===========================================>         (93 + 20) / 113][Stage 144:=================================================>   (105 + 8) / 113][Stage 144:====================================================>(111 + 2) / 113]                                                                                [Stage 145:===================================>                 (77 + 37) / 114][Stage 145:========================================>            (87 + 27) / 114][Stage 145:==========================================>          (92 + 22) / 114][Stage 145:=============================================>       (98 + 16) / 114][Stage 145:================================================>    (105 + 9) / 114][Stage 145:==================================================>  (108 + 6) / 114][Stage 145:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 7.927793485 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  pa rtitionIndex = 87  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 114  OR  partitionIndex  = 115  OR  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 87  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 114  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400229507 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:==========================>                          (60 + 61) / 121][Stage 146:============================>                        (65 + 56) / 121][Stage 146:=========================================>           (94 + 27) / 121][Stage 146:=================================================>   (114 + 7) / 121]                                                                                [Stage 147:==========================>                          (62 + 60) / 122][Stage 147:=================================>                   (76 + 46) / 122][Stage 147:=========================================>           (96 + 26) / 122][Stage 147:=================================================>   (114 + 8) / 122][Stage 147:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.043047289 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  pa rtitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionInde x = 115  OR  partitionIndex = 116 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 72  OR  partitionIndex = 73  OR  partitionIndex = 100  OR  partitionIndex = 101  OR  partitionIndex = 113  OR  partitionIndex = 114  OR  partitionIndex = 115  OR  partitionIndex = 116 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.363688511 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:======================================>              (82 + 31) / 113][Stage 148:=========================================>           (88 + 25) / 113][Stage 148:==============================================>     (100 + 13) / 113][Stage 148:===================================================> (109 + 4) / 113]                                                                                [Stage 149:=======================================>             (86 + 28) / 114][Stage 149:===========================================>         (94 + 20) / 114][Stage 149:=============================================>      (100 + 14) / 114][Stage 149:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.964487632 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR   partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIn dex = 162  OR  partitionIndex = 163 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 134  OR  partitionIndex = 135  OR  partitionIndex = 147  OR  partitionIndex = 148  OR  partitionIndex = 149  OR  partitionIndex = 150  OR  partitionIndex = 162  OR  partitionIndex = 163 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358730854 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:================================>                    (72 + 46) / 118][Stage 150:=================================>                   (75 + 43) / 118][Stage 150:=======================================>             (89 + 29) / 118][Stage 150:============================================>        (98 + 20) / 118][Stage 150:==================================================>  (112 + 6) / 118]                                                                                [Stage 151:================================>                    (73 + 46) / 119][Stage 151:===================================>                 (80 + 39) / 119][Stage 151:=======================================>             (89 + 30) / 119][Stage 151:============================================>       (102 + 17) / 119][Stage 151:=================================================>   (111 + 8) / 119][Stage 151:====================================================>(118 + 1) / 119]                                                                                Time elapsed: 3.942175781 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide5"
dataSource: String = /nidan/orc/individualORC/slide5

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 159  OR   partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIn dex = 175  OR  partitionIndex = 176 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 132  OR  partitionIndex = 159  OR  partitionIndex = 160  OR  partitionIndex = 161  OR  partitionIndex = 173  OR  partitionIndex = 174  OR  partitionIndex = 175  OR  partitionIndex = 176 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.36649157 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:================================>                    (72 + 46) / 118][Stage 152:=================================>                   (74 + 44) / 118][Stage 152:====================================>                (81 + 37) / 118][Stage 152:===========================================>         (96 + 22) / 118][Stage 152:===============================================>    (107 + 11) / 118][Stage 152:====================================================>(116 + 2) / 118]                                                                                [Stage 153:================================>                    (73 + 46) / 119][Stage 153:==================================>                  (78 + 41) / 119][Stage 153:=======================================>             (88 + 31) / 119][Stage 153:=========================================>           (94 + 25) / 119][Stage 153:=============================================>      (105 + 14) / 119][Stage 153:==================================================>  (114 + 5) / 119]                                                                                Time elapsed: 3.735552755 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR   partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIn dex = 165  OR  partitionIndex = 166 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 152  OR  partitionIndex = 153  OR  partitionIndex = 165  OR  partitionIndex = 166 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.349033542 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:====================================>                (78 + 35) / 113][Stage 154:=========================================>           (88 + 25) / 113][Stage 154:============================================>        (95 + 18) / 113][Stage 154:===================================================> (109 + 4) / 113]                                                                                [Stage 155:==================================>                  (75 + 39) / 114][Stage 155:=======================================>             (86 + 28) / 114][Stage 155:==========================================>          (91 + 23) / 114][Stage 155:================================================>    (105 + 9) / 114][Stage 155:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.891344608 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  pa rtitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex =  49  OR  partitionIndex = 50 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.347224303 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:======================================>              (82 + 31) / 113][Stage 156:==========================================>          (90 + 23) / 113][Stage 156:==============================================>     (101 + 12) / 113][Stage 156:==================================================>  (108 + 5) / 113][Stage 156:====================================================>(111 + 2) / 113]                                                                                [Stage 157:=================================>                   (72 + 42) / 114][Stage 157:======================================>              (82 + 32) / 114][Stage 157:========================================>            (87 + 27) / 114][Stage 157:=============================================>       (97 + 17) / 114][Stage 157:=============================================>      (100 + 14) / 114][Stage 157:==================================================>  (108 + 6) / 114][Stage 157:====================================================>(112 + 2) / 114][Stage 157:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.850462833 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 186  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 213  OR  partitionIn dex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 186  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40001053 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:============================>                        (65 + 55) / 120][Stage 158:==================================>                  (78 + 42) / 120][Stage 158:==========================================>          (97 + 23) / 120][Stage 158:=================================================>   (112 + 8) / 120]                                                                                [Stage 159:============================>                        (64 + 57) / 121][Stage 159:=================================>                   (77 + 44) / 121][Stage 159:=======================================>             (91 + 30) / 121][Stage 159:=============================================>      (105 + 16) / 121][Stage 159:===================================================> (117 + 4) / 121]                                                                                Time elapsed: 3.727286435 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR   partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIn dex = 227  OR  partitionIndex = 228 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 184  OR  partitionIndex = 185  OR  partitionIndex = 199  OR  partitionIndex = 200  OR  partitionIndex = 212  OR  partitionIndex = 213  OR  partitionIndex = 227  OR  partitionIndex = 228 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.35446934 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===================================>                 (75 + 38) / 113][Stage 160:========================================>            (86 + 27) / 113][Stage 160:=============================================>       (96 + 17) / 113][Stage 160:=================================================>   (105 + 8) / 113][Stage 160:====================================================>(112 + 1) / 113]                                                                                [Stage 161:===================================>                 (77 + 37) / 114][Stage 161:=======================================>             (86 + 28) / 114][Stage 161:==============================================>     (102 + 12) / 114][Stage 161:===================================================> (110 + 4) / 114][Stage 161:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.922078141 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52  OR  partitionIndex = 60  OR  pa rtitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex =  76  OR  partitionIndex = 77 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 52  OR  partitionIndex = 60  OR  partitionIndex = 61  OR  partitionIndex = 62  OR  partitionIndex = 63  OR  partitionIndex = 75  OR  partitionIndex = 76  OR  partitionIndex = 77 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358606677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:==================================>                  (74 + 39) / 113][Stage 162:========================================>            (86 + 27) / 113][Stage 162:============================================>        (95 + 18) / 113][Stage 162:==============================================>     (102 + 11) / 113][Stage 162:=================================================>   (106 + 7) / 113][Stage 162:====================================================>(112 + 1) / 113]                                                                                [Stage 163:===================================>                 (77 + 37) / 114][Stage 163:=========================================>           (90 + 24) / 114][Stage 163:============================================>        (95 + 19) / 114][Stage 163:==============================================>     (102 + 12) / 114][Stage 163:==================================================>  (109 + 5) / 114][Stage 163:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.176109864 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide8"
dataSource: String = /nidan/orc/individualORC/slide8

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR   partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIn dex = 136  OR  partitionIndex = 137 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 120  OR  partitionIndex = 120  OR  partitionIndex = 121  OR  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 135  OR  partitionIndex = 136  OR  partitionIndex = 137 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379623804 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:============================>                        (60 + 53) / 113][Stage 164:==============================>                      (65 + 48) / 113][Stage 164:========================================>            (86 + 27) / 113][Stage 164:==============================================>      (99 + 14) / 113]                                                                                [Stage 165:===========================>                         (59 + 55) / 114][Stage 165:================================>                    (69 + 45) / 114][Stage 165:======================================>              (82 + 32) / 114][Stage 165:==============================================>     (101 + 13) / 114][Stage 165:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.765167484 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  part itionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21   OR  partitionIndex = 48 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 4  OR  partitionIndex = 5  OR  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 19  OR  partitionIndex = 20  OR  partitionIndex = 21  OR  partitionIndex = 48 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.368760432 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===============================>                     (68 + 47) / 115][Stage 166:=====================================>               (81 + 34) / 115][Stage 166:=============================================>      (100 + 15) / 115][Stage 166:==================================================>  (109 + 6) / 115]                                                                                [Stage 167:================================>                    (71 + 45) / 116][Stage 167:=====================================>               (81 + 35) / 116][Stage 167:=========================================>           (90 + 26) / 116][Stage 167:===============================================>    (105 + 11) / 116][Stage 167:================================================>    (107 + 9) / 116][Stage 167:===================================================> (113 + 3) / 116][Stage 167:====================================================>(114 + 2) / 116]                                                                                Time elapsed: 6.85127126 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  p artitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionInd ex = 118  OR  partitionIndex = 119 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 104  OR  partitionIndex = 105  OR  partitionIndex = 117  OR  partitionIndex = 118  OR  partitionIndex = 119 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.350320363 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:=====================================>               (81 + 34) / 115][Stage 168:========================================>            (88 + 27) / 115][Stage 168:=============================================>       (98 + 17) / 115][Stage 168:===================================================> (111 + 4) / 115][Stage 168:====================================================>(114 + 1) / 115]                                                                                [Stage 169:=====================================>               (82 + 34) / 116][Stage 169:=======================================>             (87 + 29) / 116][Stage 169:==============================================>     (104 + 12) / 116][Stage 169:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.806870687 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide9"
dataSource: String = /nidan/orc/individualORC/slide9

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 36  OR  pa rtitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex =  52  OR  partitionIndex = 60 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 35  OR  partitionIndex = 36  OR  partitionIndex = 37  OR  partitionIndex = 49  OR  partitionIndex = 50  OR  partitionIndex = 51  OR  partitionIndex = 52  OR  partitionIndex = 60 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.360580117 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:================================>                    (70 + 43) / 113][Stage 170:======================================>              (82 + 31) / 113][Stage 170:========================================>            (87 + 26) / 113][Stage 170:==============================================>     (102 + 11) / 113][Stage 170:==================================================>  (108 + 5) / 113][Stage 170:====================================================>(112 + 1) / 113]                                                                                [Stage 171:==================================>                  (75 + 39) / 114][Stage 171:======================================>              (83 + 31) / 114][Stage 171:============================================>        (95 + 19) / 114][Stage 171:==============================================>     (101 + 13) / 114][Stage 171:=================================================>   (107 + 7) / 114][Stage 171:===================================================> (110 + 4) / 114][Stage 171:===================================================> (111 + 3) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 7.259386768 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide2"
dataSource: String = /nidan/orc/individualORC/slide2

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 156  OR   partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIn dex = 172  OR  partitionIndex = 180 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 155  OR  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 169  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.352936803 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:==================================>                  (74 + 39) / 113][Stage 172:=======================================>             (84 + 29) / 113][Stage 172:=========================================>           (89 + 24) / 113][Stage 172:==============================================>     (100 + 13) / 113][Stage 172:===================================================> (110 + 3) / 113][Stage 172:====================================================>(112 + 1) / 113]                                                                                [Stage 173:===================================>                 (76 + 38) / 114][Stage 173:=======================================>             (85 + 29) / 114][Stage 173:============================================>        (96 + 18) / 114][Stage 173:==============================================>     (102 + 12) / 114][Stage 173:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.128597317 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  pa rtitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex =  39  OR  partitionIndex = 53 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 10  OR  partitionIndex = 11  OR  partitionIndex = 24  OR  partitionIndex = 25  OR  partitionIndex = 26  OR  partitionIndex = 38  OR  partitionIndex = 39  OR  partitionIndex = 53 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.334122635 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:======================================>              (83 + 32) / 115][Stage 174:=======================================>             (86 + 29) / 115][Stage 174:=============================================>       (99 + 16) / 115][Stage 174:==================================================>  (110 + 5) / 115][Stage 174:====================================================>(113 + 2) / 115]                                                                                [Stage 175:======================================>              (85 + 31) / 116][Stage 175:=========================================>           (91 + 25) / 116][Stage 175:=============================================>       (99 + 17) / 116][Stage 175:=================================================>   (108 + 8) / 116][Stage 175:===================================================> (113 + 3) / 116][Stage 175:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 6.718674979 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR   partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIn dex = 231  OR  partitionIndex = 232 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 217  OR  partitionIndex = 229  OR  partitionIndex = 230  OR  partitionIndex = 231  OR  partitionIndex = 232 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390750741 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:==========================>                          (60 + 60) / 120][Stage 176:==============================>                      (69 + 51) / 120][Stage 176:===================================>                 (80 + 40) / 120][Stage 176:==============================================>     (107 + 13) / 120][Stage 176:====================================================>(119 + 1) / 120]                                                                                [Stage 177:==========================>                          (61 + 60) / 121][Stage 177:=============================>                       (67 + 54) / 121][Stage 177:=======================================>             (90 + 31) / 121][Stage 177:===============================================>    (111 + 10) / 121][Stage 177:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 3.571880914 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  pa rtitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex  = 117  OR  partitionIndex = 118 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 74  OR  partitionIndex = 75  OR  partitionIndex = 89  OR  partitionIndex = 90  OR  partitionIndex = 102  OR  partitionIndex = 103  OR  partitionIndex = 117  OR  partitionIndex = 118 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397250677 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:==========================>                          (60 + 60) / 120][Stage 178:============================>                        (65 + 55) / 120][Stage 178:==================================>                  (78 + 42) / 120][Stage 178:============================================>       (102 + 18) / 120][Stage 178:==================================================>  (115 + 5) / 120][Stage 178:====================================================>(119 + 1) / 120]                                                                                [Stage 179:============================>                        (64 + 57) / 121][Stage 179:==================================>                  (78 + 43) / 121][Stage 179:============================================>       (104 + 17) / 121][Stage 179:===================================================> (117 + 4) / 121][Stage 179:====================================================>(119 + 2) / 121]                                                                                Time elapsed: 4.459124356 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  pa rtitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex =  29  OR  partitionIndex = 30 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 12  OR  partitionIndex = 13  OR  partitionIndex = 14  OR  partitionIndex = 15  OR  partitionIndex = 27  OR  partitionIndex = 28  OR  partitionIndex = 29  OR  partitionIndex = 30 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.358162821 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:=====================================>               (81 + 34) / 115][Stage 180:======================================>              (84 + 31) / 115][Stage 180:===========================================>         (94 + 21) / 115][Stage 180:================================================>    (106 + 9) / 115][Stage 180:===================================================> (112 + 3) / 115]                                                                                [Stage 181:=====================================>               (82 + 34) / 116][Stage 181:========================================>            (89 + 27) / 116][Stage 181:============================================>       (100 + 16) / 116][Stage 181:==============================================>     (103 + 13) / 116][Stage 181:===============================================>    (106 + 10) / 116][Stage 181:=================================================>   (109 + 7) / 116][Stage 181:==================================================>  (110 + 6) / 116][Stage 181:==================================================>  (111 + 5) / 116][Stage 181:===================================================> (112 + 4) / 116][Stage 181:====================================================>(114 + 2) / 116][Stage 181:====================================================>(115 + 1) / 116]                                                                                Time elapsed: 7.828200531 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  part itionIndex = 10  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 97  OR  partitionIndex = 11 1  OR  partitionIndex = 112 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 8  OR  partitionIndex = 9  OR  partitionIndex = 10  OR  partitionIndex = 23  OR  partitionIndex = 24  OR  partitionIndex = 97  OR  partitionIndex = 111  OR  partitionIndex = 112 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.417974825 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:==============================>                      (64 + 49) / 113][Stage 182:===================================>                 (75 + 38) / 113][Stage 182:============================================>        (95 + 18) / 113][Stage 182:==================================================>  (107 + 6) / 113][Stage 182:====================================================>(112 + 1) / 113]                                                                                [Stage 183:============================>                        (62 + 52) / 114][Stage 183:===================================>                 (77 + 37) / 114][Stage 183:===========================================>         (93 + 21) / 114][Stage 183:=================================================>   (107 + 7) / 114][Stage 183:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 4.596843307 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide6"
dataSource: String = /nidan/orc/individualORC/slide6

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR   partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIn dex = 229  OR  partitionIndex = 230 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 187  OR  partitionIndex = 201  OR  partitionIndex = 202  OR  partitionIndex = 214  OR  partitionIndex = 215  OR  partitionIndex = 216  OR  partitionIndex = 229  OR  partitionIndex = 230 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.367148858 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:=====================================>               (81 + 34) / 115][Stage 184:======================================>              (83 + 32) / 115][Stage 184:===========================================>         (95 + 20) / 115][Stage 184:===================================================> (111 + 4) / 115]                                                                                [Stage 185:=====================================>               (83 + 33) / 116][Stage 185:==========================================>          (93 + 23) / 116][Stage 185:=================================================>   (108 + 8) / 116][Stage 185:===================================================> (112 + 4) / 116]                                                                                Time elapsed: 2.837521599 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  pa rtitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex =  110  OR  partitionIndex = 111 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 82  OR  partitionIndex = 94  OR  partitionIndex = 95  OR  partitionIndex = 96  OR  partitionIndex = 97  OR  partitionIndex = 109  OR  partitionIndex = 110  OR  partitionIndex = 111 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391392243 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:==========================>                          (60 + 61) / 121][Stage 186:==============================>                      (69 + 52) / 121][Stage 186:===================================>                 (82 + 39) / 121][Stage 186:===========================================>         (99 + 22) / 121][Stage 186:==================================================>  (115 + 6) / 121]                                                                                [Stage 187:===========================>                         (64 + 58) / 122][Stage 187:=================================>                   (76 + 46) / 122][Stage 187:===========================================>        (102 + 20) / 122][Stage 187:=================================================>   (114 + 8) / 122]                                                                                Time elapsed: 3.853892586 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide10"
dataSource: String = /nidan/orc/individualORC/slide10

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 91  OR  pa rtitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex  = 107  OR  partitionIndex = 108 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 64  OR  partitionIndex = 91  OR  partitionIndex = 92  OR  partitionIndex = 93  OR  partitionIndex = 105  OR  partitionIndex = 106  OR  partitionIndex = 107  OR  partitionIndex = 108 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.403637116 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:===========================>                         (63 + 57) / 120][Stage 188:==============================>                      (70 + 50) / 120][Stage 188:=====================================>               (84 + 36) / 120][Stage 188:=============================================>      (104 + 16) / 120][Stage 188:====================================================>(119 + 1) / 120]                                                                                [Stage 189:==========================>                          (61 + 60) / 121][Stage 189:=============================>                       (68 + 53) / 121][Stage 189:====================================>                (83 + 38) / 121][Stage 189:============================================>       (103 + 18) / 121][Stage 189:===================================================> (118 + 3) / 121][Stage 189:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.221815408 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR   partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIn dex = 151  OR  partitionIndex = 165 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 122  OR  partitionIndex = 123  OR  partitionIndex = 136  OR  partitionIndex = 137  OR  partitionIndex = 138  OR  partitionIndex = 150  OR  partitionIndex = 151  OR  partitionIndex = 165 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377725012 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (59 + 54) / 113][Stage 190:=============================>                       (62 + 51) / 113][Stage 190:======================================>              (82 + 31) / 113][Stage 190:==============================================>      (99 + 14) / 113][Stage 190:====================================================>(112 + 1) / 113]                                                                                [Stage 191:============================>                        (61 + 53) / 114][Stage 191:====================================>                (78 + 36) / 114][Stage 191:==========================================>          (92 + 22) / 114][Stage 191:=================================================>   (107 + 7) / 114][Stage 191:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.619450697 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR   partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIn dex = 203  OR  partitionIndex = 204 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 165  OR  partitionIndex = 179  OR  partitionIndex = 180  OR  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 203  OR  partitionIndex = 204 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388409286 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:==========================>                          (60 + 60) / 120][Stage 192:===========================>                         (63 + 57) / 120][Stage 192:==============================>                      (70 + 50) / 120][Stage 192:===========================================>        (101 + 19) / 120][Stage 192:==================================================>  (115 + 5) / 120]                                                                                [Stage 193:============================>                        (64 + 57) / 121][Stage 193:===================================>                 (82 + 39) / 121][Stage 193:============================================>       (103 + 18) / 121][Stage 193:==================================================>  (116 + 5) / 121][Stage 193:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 3.847121604 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR   partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIn dex = 169  OR  partitionIndex = 170 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 126  OR  partitionIndex = 127  OR  partitionIndex = 141  OR  partitionIndex = 142  OR  partitionIndex = 154  OR  partitionIndex = 155  OR  partitionIndex = 169  OR  partitionIndex = 170 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39948556 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:==========================>                          (61 + 60) / 121][Stage 194:=============================>                       (68 + 53) / 121][Stage 194:=======================================>             (90 + 31) / 121][Stage 194:=================================================>   (112 + 9) / 121][Stage 194:====================================================>(120 + 1) / 121]                                                                                [Stage 195:==========================>                          (61 + 61) / 122][Stage 195:============================>                        (66 + 56) / 122][Stage 195:=================================>                   (78 + 44) / 122][Stage 195:===========================================>        (103 + 19) / 122][Stage 195:=================================================>   (113 + 9) / 122][Stage 195:====================================================>(121 + 1) / 122]                                                                                Time elapsed: 4.413287629 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide3"
dataSource: String = /nidan/orc/individualORC/slide3

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  part itionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49   OR  partitionIndex = 50 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 6  OR  partitionIndex = 7  OR  partitionIndex = 21  OR  partitionIndex = 22  OR  partitionIndex = 34  OR  partitionIndex = 35  OR  partitionIndex = 49  OR  partitionIndex = 50 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419632228 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:>                                                      (0 + 0) / 120][Stage 196:==========================>                          (60 + 60) / 120][Stage 196:============================>                        (64 + 56) / 120][Stage 196:===================================>                 (81 + 39) / 120][Stage 196:=============================================>      (106 + 14) / 120][Stage 196:====================================================>(119 + 1) / 120]                                                                                [Stage 197:==========================>                          (61 + 60) / 121][Stage 197:=============================>                       (68 + 53) / 121][Stage 197:=====================================>               (85 + 36) / 121][Stage 197:===========================================>        (102 + 19) / 121][Stage 197:=================================================>   (113 + 8) / 121][Stage 197:====================================================>(120 + 1) / 121]                                                                                Time elapsed: 4.290813128 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188  OR  partitionIndex = 189  OR   partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIn dex = 205  OR  partitionIndex = 206 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 188  OR  partitionIndex = 189  OR  partitionIndex = 190  OR  partitionIndex = 191  OR  partitionIndex = 203  OR  partitionIndex = 204  OR  partitionIndex = 205  OR  partitionIndex = 206 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.374761056 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:============================>                        (60 + 53) / 113][Stage 198:===============================>                     (67 + 46) / 113][Stage 198:========================================>            (87 + 26) / 113][Stage 198:==============================================>     (100 + 13) / 113][Stage 198:====================================================>(112 + 1) / 113]                                                                                [Stage 199:============================>                        (61 + 53) / 114][Stage 199:================================>                    (70 + 44) / 114][Stage 199:============================================>        (96 + 18) / 114][Stage 199:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.523699092 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide7"
dataSource: String = /nidan/orc/individualORC/slide7

scala> val queries = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR   partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIn dex = 181  OR  partitionIndex = 195 ", 8))
queries: List[(String, Int)] = List(("SELECT imageBytes FROM data WHERE  partitionIndex = 156  OR  partitionIndex = 157  OR  partitionIndex = 170  OR  partitionIndex = 171  OR  partitionIndex = 172  OR  partitionIndex = 180  OR  partitionIndex = 181  OR  partitionIndex = 195 ",8))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.397371022 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (62 + 59) / 121][Stage 200:==============================>                      (70 + 51) / 121][Stage 200:=====================================>               (85 + 36) / 121][Stage 200:==============================================>     (109 + 12) / 121][Stage 200:====================================================>(120 + 1) / 121]                                                                                [Stage 201:==========================>                          (61 + 61) / 122][Stage 201:=============================>                       (68 + 54) / 122][Stage 201:=====================================>               (87 + 35) / 122][Stage 201:==============================================>     (109 + 13) / 122][Stage 201:==================================================>  (117 + 5) / 122]                                                                                Time elapsed: 4.022841938 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/24 16:50:04 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.25:59798) dropped. RpcEnv already stopped.
17/05/24 16:50:04 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.39:60480) dropped. RpcEnv already stopped.
17/05/24 16:50:04 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.25:59798) dropped. RpcEnv already stopped.
17/05/24 16:50:04 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.39:60480) dropped. RpcEnv already stopped.

real	11m43.769s
user	12m23.976s
sys	1m37.796s
