Warning: Ignoring non-spark config property: hive.exec.reducers.bytes.per.reducer=67108864
Warning: Ignoring non-spark config property: hive.fetch.task.aggr=false
Warning: Ignoring non-spark config property: hive.merge.sparkfiles=false
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask=true
Warning: Ignoring non-spark config property: hive.merge.size.per.task=256000000
Warning: Ignoring non-spark config property: hive.smbjoin.cache.rows=10000
Warning: Ignoring non-spark config property: hive.merge.smallfiles.avgsize=16000000
Warning: Ignoring non-spark config property: hive.optimize.sort.dynamic.partition=false
Warning: Ignoring non-spark config property: hive.exec.orc.default.stripe.size=67108864
Warning: Ignoring non-spark config property: hive.vectorized.execution.enabled=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication.min.reducer=4
Warning: Ignoring non-spark config property: hive.orc.splits.include.file.footer=false
Warning: Ignoring non-spark config property: hive.merge.mapfiles=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.list-status.num-threads=5
Warning: Ignoring non-spark config property: hive.vectorized.groupby.checkinterval=4096
Warning: Ignoring non-spark config property: hive.compute.query.using.stats=true
Warning: Ignoring non-spark config property: mapreduce.input.fileinputformat.split.maxsize=750000000
Warning: Ignoring non-spark config property: hive.merge.orcfile.stripe.level=true
Warning: Ignoring non-spark config property: hive.auto.convert.join.noconditionaltask.size=894435328
Warning: Ignoring non-spark config property: hive.fetch.task.conversion.threshold=1073741824
Warning: Ignoring non-spark config property: hive.auto.convert.join=true
Warning: Ignoring non-spark config property: hive.optimize.reducededuplication=true
Warning: Ignoring non-spark config property: hive.vectorized.groupby.flush.percent=0.1
Warning: Ignoring non-spark config property: hive.fetch.task.conversion=more
Warning: Ignoring non-spark config property: hive.limit.pushdown.memory.usage=0.4
Warning: Ignoring non-spark config property: hive.vectorized.execution.reduce.enabled=false
Warning: Ignoring non-spark config property: hive.map.aggr=true
Warning: Ignoring non-spark config property: hive.stats.autogather=true
Warning: Ignoring non-spark config property: hive.stats.fetch.column.stats=true
Warning: Ignoring non-spark config property: hive.cbo.enable=true
Warning: Ignoring non-spark config property: hive.map.aggr.hash.percentmemory=0.5
Warning: Ignoring non-spark config property: hive.optimize.index.filter=true
Warning: Ignoring non-spark config property: hive.optimize.bucketmapjoin.sortedmerge=false
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
17/05/24 14:02:15 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 14:02:30 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 14:02:30 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 14:02:31 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
17/05/24 14:02:33 WARN spark.SparkConf: The configuration key 'spark.akka.frameSize' has been deprecated as of Spark 1.6 and may be removed in the future. Please use the new key 'spark.rpc.message.maxSize' instead.
17/05/24 14:02:44 WARN metastore.ObjectStore: Failed to get database global_temp, returning NoSuchObjectException
Spark context Web UI available at http://128.110.152.45:4040
Spark context available as 'sc' (master = spark://ctl:7077, app id = app-20170524140233-0554).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 2.1.0
      /_/
         
Using Scala version 2.11.8 (OpenJDK 64-Bit Server VM, Java 1.8.0_121)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import java.io.File
import java.io.File

scala> import java.io.FileOutputStream
import java.io.FileOutputStream

scala> import org.apache.spark.sql._
import org.apache.spark.sql._

scala> 

scala> val queryMsg = "#QUERY "
queryMsg: String = "#QUERY "

scala> val loadDBMsg = "#LOAD_DB "
loadDBMsg: String = "#LOAD_DB "

scala> val loadTable = "#LOAD_TABLE "
loadTable: String = "#LOAD_TABLE "

scala> val loadsqlHive = "#LOAD_SQL_CONTEXT "
loadsqlHive: String = "#LOAD_SQL_CONTEXT "

scala> 

scala> def show_timing[T](proc: => T): T = {
     |     val start=System.nanoTime()
     |     val res = proc
     |     val end = System.nanoTime()
     |     println("Time elapsed: " + (end-start)/1000000000.0 + " seconds")
     |     res
     | }
show_timing: [T](proc: => T)T

scala> 

scala> val writeToLocal = (in:(Array[Byte], Long, String)) =>{
     |     val bytes = in._1
     |     val output = in._3
     |     
     |     val writer = new FileOutputStream(output)
     |     writer.write(bytes)
     |     writer.close
     |     1
     |   }
writeToLocal: ((Array[Byte], Long, String)) => Int = <function1>

scala>   
     | val sqlContext = new org.apache.spark.sql.hive.HiveContext(sc)
warning: there was one deprecation warning; re-run with -deprecation for details
sqlContext: org.apache.spark.sql.hive.HiveContext = org.apache.spark.sql.hive.HiveContext@52737c1

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide4"
dataSource: String = /nidan/orc/individualORC/slide4

scala> 

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 4.421521444 seconds

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107", 8))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=107,8))

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 0:>                                                        (0 + 0) / 115][Stage 0:>                                                      (0 + 112) / 115][Stage 0:====================>                                  (42 + 73) / 115][Stage 0:============================>                          (60 + 55) / 115][Stage 0:=============================>                         (62 + 53) / 115][Stage 0:==============================>                        (64 + 51) / 115][Stage 0:=================================>                     (69 + 46) / 115][Stage 0:==================================>                    (72 + 43) / 115][Stage 0:==========================================>            (89 + 26) / 115][Stage 0:==============================================>        (97 + 18) / 115][Stage 0:================================================>     (103 + 12) / 115][Stage 0:===================================================>   (107 + 8) / 115][Stage 0:======================================================>(114 + 1) / 115]                                                                                [Stage 1:===========================>                           (58 + 58) / 116][Stage 1:==============================>                        (64 + 52) / 116][Stage 1:================================>                      (68 + 48) / 116][Stage 1:==================================>                    (73 + 43) / 116][Stage 1:=====================================>                 (80 + 36) / 116][Stage 1:==========================================>            (90 + 26) / 116][Stage 1:===============================================>      (102 + 14) / 116][Stage 1:===================================================>   (108 + 8) / 116][Stage 1:====================================================>  (111 + 5) / 116][Stage 1:=====================================================> (112 + 4) / 116]                                                                                Time elapsed: 12.506333665 seconds
res2: Int = 0

scala> 

scala>  
     | val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=34 AND partitionZIndex<=34,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.862005882 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 2:===============>                                       (31 + 82) / 113][Stage 2:===================>                                   (40 + 73) / 113][Stage 2:=======================>                               (49 + 64) / 113][Stage 2:==========================>                            (55 + 58) / 113][Stage 2:=============================>                         (60 + 53) / 113][Stage 2:=================================>                     (69 + 44) / 113][Stage 2:=========================================>             (85 + 28) / 113][Stage 2:================================================>      (99 + 14) / 113][Stage 2:=================================================>    (103 + 10) / 113][Stage 2:====================================================>  (107 + 6) / 113][Stage 2:=====================================================> (110 + 3) / 113][Stage 2:======================================================>(111 + 2) / 113]                                                                                [Stage 3:===========================>                           (57 + 57) / 114][Stage 3:============================>                          (60 + 54) / 114][Stage 3:==============================>                        (64 + 50) / 114][Stage 3:===================================>                   (73 + 41) / 114][Stage 3:==========================================>            (88 + 26) / 114][Stage 3:==================================================>    (105 + 9) / 114]                                                                                Time elapsed: 5.435866851 seconds
res5: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=224", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=224 AND partitionZIndex<=224,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.64820848 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 4:===========================>                           (57 + 56) / 113][Stage 4:============================>                          (58 + 55) / 113][Stage 4:=============================>                         (60 + 53) / 113][Stage 4:================================>                      (67 + 46) / 113][Stage 4:=====================================>                 (77 + 36) / 113][Stage 4:===========================================>           (90 + 23) / 113][Stage 4:====================================================>  (107 + 6) / 113][Stage 4:======================================================>(112 + 1) / 113]                                                                                [Stage 5:============================>                          (60 + 54) / 114][Stage 5:==============================>                        (64 + 50) / 114][Stage 5:====================================>                  (76 + 38) / 114][Stage 5:=============================================>         (95 + 19) / 114][Stage 5:==================================================>    (105 + 9) / 114][Stage 5:======================================================>(112 + 2) / 114]                                                                                Time elapsed: 4.293235844 seconds
res7: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=170", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=170 AND partitionZIndex<=170,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.73122577 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 6:============================>                          (58 + 55) / 113][Stage 6:=============================>                         (60 + 53) / 113][Stage 6:==================================>                    (70 + 43) / 113][Stage 6:==========================================>            (87 + 26) / 113][Stage 6:================================================>      (99 + 14) / 113][Stage 6:====================================================>  (108 + 5) / 113][Stage 6:======================================================>(111 + 2) / 113]                                                                                [Stage 7:===========================>                           (57 + 57) / 114][Stage 7:============================>                          (60 + 54) / 114][Stage 7:=================================>                     (70 + 44) / 114][Stage 7:=========================================>             (85 + 29) / 114][Stage 7:===============================================>      (100 + 14) / 114][Stage 7:====================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.985330089 seconds
res9: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=80", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=80 AND partitionZIndex<=80,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.610275562 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 8:============================>                          (59 + 54) / 113][Stage 8:=============================>                         (60 + 53) / 113][Stage 8:==================================>                    (70 + 43) / 113][Stage 8:==========================================>            (87 + 26) / 113][Stage 8:=================================================>    (103 + 10) / 113][Stage 8:=====================================================> (110 + 3) / 113]                                                                                [Stage 9:============================>                          (59 + 55) / 114][Stage 9:===============================>                       (66 + 48) / 114][Stage 9:=========================================>             (87 + 27) / 114][Stage 9:==================================================>    (105 + 9) / 114]                                                                                Time elapsed: 3.420717086 seconds
res11: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=198", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=198 AND partitionZIndex<=198,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.573540006 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 10:===========================>                          (58 + 55) / 113][Stage 10:=============================>                        (61 + 52) / 113][Stage 10:==================================>                   (72 + 41) / 113][Stage 10:=======================================>              (82 + 31) / 113][Stage 10:=============================================>        (95 + 18) / 113][Stage 10:===================================================>  (108 + 5) / 113]                                                                                [Stage 11:===========================>                          (59 + 55) / 114][Stage 11:===============================>                      (67 + 47) / 114][Stage 11:=========================================>            (87 + 27) / 114][Stage 11:===============================================>     (102 + 12) / 114][Stage 11:===================================================>  (109 + 5) / 114][Stage 11:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.828292009 seconds
res13: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=164", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=164 AND partitionZIndex<=164,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.544001533 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 12:===========================>                          (58 + 55) / 113][Stage 12:============================>                         (59 + 54) / 113][Stage 12:===============================>                      (65 + 48) / 113][Stage 12:=====================================>                (78 + 35) / 113][Stage 12:===========================================>          (92 + 21) / 113][Stage 12:==================================================>   (106 + 7) / 113][Stage 12:=====================================================>(111 + 2) / 113]                                                                                [Stage 13:============================>                         (61 + 53) / 114][Stage 13:================================>                     (68 + 46) / 114][Stage 13:=========================================>            (88 + 26) / 114][Stage 13:==================================================>   (107 + 7) / 114][Stage 13:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.698589703 seconds
res15: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=227", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=227 AND partitionZIndex<=227,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.587826916 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 14:===========================>                          (58 + 55) / 113][Stage 14:===============================>                      (65 + 48) / 113][Stage 14:===================================>                  (74 + 39) / 113][Stage 14:============================================>         (93 + 20) / 113][Stage 14:===================================================>  (107 + 6) / 113][Stage 14:=====================================================>(111 + 2) / 113]                                                                                [Stage 15:============================>                         (60 + 54) / 114][Stage 15:=============================>                        (62 + 52) / 114][Stage 15:====================================>                 (78 + 36) / 114][Stage 15:==============================================>       (99 + 15) / 114][Stage 15:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.466401284 seconds
res17: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=229", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=229 AND partitionZIndex<=229,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.522060025 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 16:===========================>                          (57 + 56) / 113][Stage 16:============================>                         (59 + 54) / 113][Stage 16:==============================>                       (64 + 49) / 113][Stage 16:======================================>               (81 + 32) / 113][Stage 16:==================================================>   (106 + 7) / 113][Stage 16:=====================================================>(112 + 1) / 113]                                                                                [Stage 17:============================>                         (60 + 54) / 114][Stage 17:==============================>                       (64 + 50) / 114][Stage 17:==================================>                   (72 + 42) / 114][Stage 17:==========================================>           (90 + 24) / 114][Stage 17:================================================>    (104 + 10) / 114][Stage 17:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.405939579 seconds
res19: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=2", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=2 AND partitionZIndex<=2,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.52925057 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 18:===========================>                          (58 + 55) / 113][Stage 18:=============================>                        (62 + 51) / 113][Stage 18:======================================>               (81 + 32) / 113][Stage 18:================================================>    (103 + 10) / 113][Stage 18:====================================================> (110 + 3) / 113][Stage 18:=====================================================>(112 + 1) / 113]                                                                                [Stage 19:============================>                         (60 + 54) / 114][Stage 19:==============================>                       (64 + 50) / 114][Stage 19:=====================================>                (79 + 35) / 114][Stage 19:==============================================>       (98 + 16) / 114][Stage 19:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.547083904 seconds
res21: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=197", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=197 AND partitionZIndex<=197,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.525294958 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 20:===========================>                          (58 + 55) / 113][Stage 20:=============================>                        (62 + 51) / 113][Stage 20:==================================>                   (73 + 40) / 113][Stage 20:==============================================>       (97 + 16) / 113][Stage 20:=====================================================>(111 + 2) / 113]                                                                                [Stage 21:============================>                         (60 + 54) / 114][Stage 21:=================================>                    (71 + 43) / 114][Stage 21:==========================================>           (89 + 25) / 114][Stage 21:=================================================>    (105 + 9) / 114][Stage 21:=====================================================>(112 + 2) / 114][Stage 21:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.562431444 seconds
res23: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=35", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=35 AND partitionZIndex<=35,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.603749894 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 22:===========================>                          (58 + 55) / 113][Stage 22:============================>                         (60 + 53) / 113][Stage 22:==================================>                   (73 + 40) / 113][Stage 22:=============================================>        (95 + 18) / 113][Stage 22:===================================================>  (107 + 6) / 113][Stage 22:=====================================================>(111 + 2) / 113]                                                                                [Stage 23:============================>                         (61 + 53) / 114][Stage 23:=================================>                    (70 + 44) / 114][Stage 23:==========================================>           (90 + 24) / 114][Stage 23:===============================================>     (103 + 11) / 114][Stage 23:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.38829785 seconds
res25: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=75", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=75 AND partitionZIndex<=75,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.481112698 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 24:===========================>                          (58 + 55) / 113][Stage 24:===============================>                      (66 + 47) / 113][Stage 24:=========================================>            (87 + 26) / 113][Stage 24:==================================================>   (106 + 7) / 113][Stage 24:====================================================> (109 + 4) / 113]                                                                                [Stage 25:============================>                         (60 + 54) / 114][Stage 25:=================================>                    (70 + 44) / 114][Stage 25:========================================>             (86 + 28) / 114][Stage 25:================================================>    (104 + 10) / 114][Stage 25:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.485709495 seconds
res27: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=233", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=233 AND partitionZIndex<=233,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.506310502 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 26:============================>                         (59 + 54) / 113][Stage 26:=================================>                    (70 + 43) / 113][Stage 26:=========================================>            (86 + 27) / 113][Stage 26:===============================================>      (99 + 14) / 113]                                                                                [Stage 27:============================>                         (60 + 54) / 114][Stage 27:==============================>                       (65 + 49) / 114][Stage 27:=========================================>            (87 + 27) / 114][Stage 27:===============================================>     (103 + 11) / 114][Stage 27:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.122485626 seconds
res29: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=77", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=77 AND partitionZIndex<=77,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.583006451 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 28:============================>                         (59 + 54) / 113][Stage 28:=================================>                    (70 + 43) / 113][Stage 28:=========================================>            (86 + 27) / 113][Stage 28:==================================================>   (105 + 8) / 113][Stage 28:=====================================================>(112 + 1) / 113]                                                                                [Stage 29:============================>                         (60 + 54) / 114][Stage 29:==============================>                       (65 + 49) / 114][Stage 29:====================================>                 (76 + 38) / 114][Stage 29:============================================>         (94 + 20) / 114][Stage 29:==================================================>   (107 + 7) / 114][Stage 29:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.400345016 seconds
res31: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=190", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=190 AND partitionZIndex<=190,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.512428044 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 30:===========================>                          (58 + 55) / 113][Stage 30:==============================>                       (64 + 49) / 113][Stage 30:=======================================>              (82 + 31) / 113][Stage 30:================================================>    (103 + 10) / 113][Stage 30:=====================================================>(111 + 2) / 113]                                                                                [Stage 31:===========================>                          (59 + 55) / 114][Stage 31:===============================>                      (66 + 48) / 114][Stage 31:========================================>             (85 + 29) / 114][Stage 31:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 2.978160433 seconds
res33: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=213", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=213 AND partitionZIndex<=213,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.475707225 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 32:============================>                         (59 + 54) / 113][Stage 32:================================>                     (67 + 46) / 113][Stage 32:===========================================>          (90 + 23) / 113][Stage 32:================================================>    (103 + 10) / 113]                                                                                [Stage 33:============================>                         (61 + 53) / 114][Stage 33:==================================>                   (73 + 41) / 114][Stage 33:===========================================>          (92 + 22) / 114][Stage 33:==================================================>   (107 + 7) / 114][Stage 33:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.238283546 seconds
res35: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=72", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=72 AND partitionZIndex<=72,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.474356522 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 34:===========================>                          (58 + 55) / 113][Stage 34:================================>                     (67 + 46) / 113][Stage 34:========================================>             (84 + 29) / 113][Stage 34:================================================>    (103 + 10) / 113][Stage 34:===================================================>  (107 + 6) / 113]                                                                                [Stage 35:===========================>                          (59 + 55) / 114][Stage 35:================================>                     (68 + 46) / 114][Stage 35:==========================================>           (90 + 24) / 114][Stage 35:==================================================>   (106 + 8) / 114][Stage 35:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.345977125 seconds
res37: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=210", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=210 AND partitionZIndex<=210,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.527845858 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 36:===========================>                          (58 + 55) / 113][Stage 36:=============================>                        (61 + 52) / 113][Stage 36:===================================>                  (74 + 39) / 113][Stage 36:===========================================>          (91 + 22) / 113][Stage 36:===================================================>  (107 + 6) / 113][Stage 36:=====================================================>(112 + 1) / 113]                                                                                [Stage 37:===========================>                          (59 + 55) / 114][Stage 37:============================>                         (61 + 53) / 114][Stage 37:===================================>                  (74 + 40) / 114][Stage 37:==============================================>      (100 + 14) / 114][Stage 37:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.22226329 seconds
res39: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=20", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=20 AND partitionZIndex<=20,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.48821359 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 38:============================>                         (59 + 54) / 113][Stage 38:=============================>                        (61 + 52) / 113][Stage 38:======================================>               (80 + 33) / 113][Stage 38:===============================================>      (99 + 14) / 113][Stage 38:===================================================>  (108 + 5) / 113]                                                                                [Stage 39:============================>                         (60 + 54) / 114][Stage 39:================================>                     (69 + 45) / 114][Stage 39:=========================================>            (88 + 26) / 114][Stage 39:================================================>    (104 + 10) / 114][Stage 39:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.28404728 seconds
res41: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=201", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=201 AND partitionZIndex<=201,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.472071539 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 40:=============================>                        (61 + 52) / 113][Stage 40:=================================>                    (71 + 42) / 113][Stage 40:==============================================>       (98 + 15) / 113][Stage 40:====================================================> (109 + 4) / 113]                                                                                [Stage 41:=============================>                        (62 + 52) / 114][Stage 41:==================================>                   (73 + 41) / 114][Stage 41:=============================================>        (97 + 17) / 114][Stage 41:=====================================================>(112 + 2) / 114][Stage 41:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.132533054 seconds
res43: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=124", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=124 AND partitionZIndex<=124,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.456295549 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 42:============================>                         (59 + 54) / 113][Stage 42:================================>                     (69 + 44) / 113][Stage 42:=========================================>            (86 + 27) / 113][Stage 42:==================================================>   (106 + 7) / 113][Stage 42:=====================================================>(111 + 2) / 113]                                                                                [Stage 43:=============================>                        (62 + 52) / 114][Stage 43:=================================>                    (71 + 43) / 114][Stage 43:=============================================>        (95 + 19) / 114][Stage 43:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.168814219 seconds
res45: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=6", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=6 AND partitionZIndex<=6,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.47461209 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 44:============================>                         (59 + 54) / 113][Stage 44:==================================>                   (73 + 40) / 113][Stage 44:============================================>         (93 + 20) / 113][Stage 44:====================================================> (109 + 4) / 113]                                                                                [Stage 45:============================>                         (60 + 54) / 114][Stage 45:=================================>                    (70 + 44) / 114][Stage 45:==========================================>           (90 + 24) / 114][Stage 45:==============================================>      (100 + 14) / 114][Stage 45:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.318072855 seconds
res47: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=218", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=218 AND partitionZIndex<=218,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.466816465 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 46:>                                                       (0 + 0) / 113][Stage 46:===========================>                          (58 + 55) / 113][Stage 46:==============================>                       (64 + 49) / 113][Stage 46:========================================>             (84 + 29) / 113][Stage 46:=================================================>    (104 + 9) / 113][Stage 46:=====================================================>(112 + 1) / 113]                                                                                [Stage 47:===========================>                          (59 + 55) / 114][Stage 47:===============================>                      (67 + 47) / 114][Stage 47:========================================>             (86 + 28) / 114][Stage 47:====================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.159865766 seconds
res49: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=188", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=188 AND partitionZIndex<=188,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457961237 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 48:============================>                         (60 + 53) / 113][Stage 48:=================================>                    (71 + 42) / 113][Stage 48:========================================>             (84 + 29) / 113][Stage 48:===================================================>  (107 + 6) / 113]                                                                                [Stage 49:===========================>                          (59 + 55) / 114][Stage 49:================================>                     (69 + 45) / 114][Stage 49:=========================================>            (87 + 27) / 114][Stage 49:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.03621967 seconds
res51: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=141", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=141 AND partitionZIndex<=141,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.45552833 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 50:===========================>                          (58 + 55) / 113][Stage 50:============================>                         (60 + 53) / 113][Stage 50:=====================================>                (79 + 34) / 113][Stage 50:===============================================>      (99 + 14) / 113][Stage 50:=====================================================>(111 + 2) / 113]                                                                                [Stage 51:=============================>                        (63 + 51) / 114][Stage 51:====================================>                 (78 + 36) / 114][Stage 51:==============================================>       (98 + 16) / 114][Stage 51:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.175930955 seconds
res53: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=115", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=115 AND partitionZIndex<=115,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422262342 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 52:============================>                         (59 + 54) / 113][Stage 52:===============================>                      (65 + 48) / 113][Stage 52:=====================================>                (79 + 34) / 113][Stage 52:==============================================>       (98 + 15) / 113][Stage 52:===================================================>  (108 + 5) / 113]                                                                                [Stage 53:============================>                         (60 + 54) / 114][Stage 53:==============================>                       (65 + 49) / 114][Stage 53:========================================>             (85 + 29) / 114][Stage 53:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.037099947 seconds
res55: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=184", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=184 AND partitionZIndex<=184,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.459054924 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 54:============================>                         (59 + 54) / 113][Stage 54:================================>                     (69 + 44) / 113][Stage 54:===========================================>          (90 + 23) / 113][Stage 54:===================================================>  (107 + 6) / 113]                                                                                [Stage 55:============================>                         (61 + 53) / 114][Stage 55:==================================>                   (72 + 42) / 114][Stage 55:==============================================>       (98 + 16) / 114][Stage 55:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.024454433 seconds
res57: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=106 AND partitionZIndex<=106,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.422774566 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 56:===========================>                          (58 + 55) / 113][Stage 56:===============================>                      (66 + 47) / 113][Stage 56:=========================================>            (87 + 26) / 113][Stage 56:==================================================>   (105 + 8) / 113][Stage 56:====================================================> (110 + 3) / 113][Stage 56:=====================================================>(111 + 2) / 113]                                                                                [Stage 57:============================>                         (60 + 54) / 114][Stage 57:==============================>                       (64 + 50) / 114][Stage 57:=======================================>              (83 + 31) / 114][Stage 57:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.251775865 seconds
res59: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=28 AND partitionZIndex<=28,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.457420661 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 58:============================>                         (59 + 54) / 113][Stage 58:=============================>                        (61 + 52) / 113][Stage 58:===================================>                  (75 + 38) / 113][Stage 58:=============================================>        (96 + 17) / 113][Stage 58:====================================================> (110 + 3) / 113]                                                                                [Stage 59:============================>                         (61 + 53) / 114][Stage 59:=================================>                    (71 + 43) / 114][Stage 59:==============================================>       (98 + 16) / 114][Stage 59:==================================================>   (106 + 8) / 114][Stage 59:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.216236056 seconds
res61: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=51", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=51 AND partitionZIndex<=51,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.438812201 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 60:===========================>                          (58 + 55) / 113][Stage 60:==============================>                       (63 + 50) / 113][Stage 60:==================================>                   (73 + 40) / 113][Stage 60:===============================================>      (99 + 14) / 113][Stage 60:====================================================> (110 + 3) / 113]                                                                                [Stage 61:============================>                         (61 + 53) / 114][Stage 61:=================================>                    (70 + 44) / 114][Stage 61:============================================>         (94 + 20) / 114][Stage 61:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.169551211 seconds
res63: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=101", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=101 AND partitionZIndex<=101,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.437045816 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 62:===========================>                          (58 + 55) / 113][Stage 62:=============================>                        (62 + 51) / 113][Stage 62:====================================>                 (76 + 37) / 113][Stage 62:==============================================>       (98 + 15) / 113][Stage 62:====================================================> (110 + 3) / 113]                                                                                [Stage 63:============================>                         (61 + 53) / 114][Stage 63:====================================>                 (77 + 37) / 114][Stage 63:=============================================>        (95 + 19) / 114]                                                                                Time elapsed: 2.942768153 seconds
res65: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=37", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=37 AND partitionZIndex<=37,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.430724757 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 64:============================>                         (59 + 54) / 113][Stage 64:===============================>                      (66 + 47) / 113][Stage 64:==========================================>           (88 + 25) / 113][Stage 64:==================================================>   (106 + 7) / 113]                                                                                [Stage 65:============================>                         (60 + 54) / 114][Stage 65:==================================>                   (72 + 42) / 114][Stage 65:===========================================>          (91 + 23) / 114][Stage 65:===================================================>  (108 + 6) / 114]                                                                                Time elapsed: 2.93985997 seconds
res67: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=92", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=92 AND partitionZIndex<=92,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.444159421 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 66:============================>                         (59 + 54) / 113][Stage 66:===============================>                      (65 + 48) / 113][Stage 66:=========================================>            (86 + 27) / 113][Stage 66:=================================================>    (104 + 9) / 113][Stage 66:====================================================> (110 + 3) / 113]                                                                                [Stage 67:============================>                         (61 + 53) / 114][Stage 67:====================================>                 (76 + 38) / 114][Stage 67:=========================================>            (87 + 27) / 114][Stage 67:====================================================> (110 + 4) / 114][Stage 67:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.366543822 seconds
res69: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=5", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=5 AND partitionZIndex<=5,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.423870716 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 68:============================>                         (59 + 54) / 113][Stage 68:================================>                     (68 + 45) / 113][Stage 68:==========================================>           (88 + 25) / 113][Stage 68:==================================================>   (106 + 7) / 113][Stage 68:=====================================================>(112 + 1) / 113]                                                                                [Stage 69:============================>                         (60 + 54) / 114][Stage 69:================================>                     (68 + 46) / 114][Stage 69:==========================================>           (90 + 24) / 114][Stage 69:===================================================>  (109 + 5) / 114][Stage 69:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.473234541 seconds
res71: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=59", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=59 AND partitionZIndex<=59,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.42773603 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 70:===========================>                          (58 + 55) / 113][Stage 70:==============================>                       (64 + 49) / 113][Stage 70:========================================>             (85 + 28) / 113][Stage 70:==============================================>      (100 + 13) / 113][Stage 70:=====================================================>(111 + 2) / 113]                                                                                [Stage 71:============================>                         (60 + 54) / 114][Stage 71:===============================>                      (66 + 48) / 114][Stage 71:=======================================>              (83 + 31) / 114][Stage 71:==================================================>   (107 + 7) / 114]                                                                                Time elapsed: 3.059589286 seconds
res73: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=240", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=240 AND partitionZIndex<=240,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408555227 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 72:============================>                         (59 + 54) / 113][Stage 72:==============================>                       (63 + 50) / 113][Stage 72:======================================>               (80 + 33) / 113][Stage 72:===============================================>     (102 + 11) / 113]                                                                                [Stage 73:============================>                         (60 + 54) / 114][Stage 73:================================>                     (68 + 46) / 114][Stage 73:=========================================>            (87 + 27) / 114][Stage 73:=================================================>    (105 + 9) / 114][Stage 73:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.145237595 seconds
res75: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=68", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=68 AND partitionZIndex<=68,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.523571688 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 74:============================>                         (60 + 53) / 113][Stage 74:====================================>                 (76 + 37) / 113][Stage 74:==============================================>      (100 + 13) / 113][Stage 74:====================================================> (110 + 3) / 113]                                                                                [Stage 75:============================>                         (60 + 54) / 114][Stage 75:===============================>                      (66 + 48) / 114][Stage 75:======================================>               (81 + 33) / 114][Stage 75:===============================================>     (102 + 12) / 114]                                                                                Time elapsed: 2.818172103 seconds
res77: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=167", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=167 AND partitionZIndex<=167,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.4177118 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 76:===========================>                          (58 + 55) / 113][Stage 76:=============================>                        (61 + 52) / 113][Stage 76:==================================>                   (72 + 41) / 113][Stage 76:==============================================>       (98 + 15) / 113][Stage 76:=====================================================>(111 + 2) / 113]                                                                                [Stage 77:============================>                         (60 + 54) / 114][Stage 77:=================================>                    (71 + 43) / 114][Stage 77:=========================================>            (87 + 27) / 114][Stage 77:===============================================>     (103 + 11) / 114]                                                                                Time elapsed: 3.10000446 seconds
res79: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=162", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=162 AND partitionZIndex<=162,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.441439978 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 78:============================>                         (59 + 54) / 113][Stage 78:================================>                     (68 + 45) / 113][Stage 78:==========================================>           (88 + 25) / 113][Stage 78:====================================================> (110 + 3) / 113]                                                                                [Stage 79:=============================>                        (63 + 51) / 114][Stage 79:===================================>                  (75 + 39) / 114][Stage 79:==============================================>       (99 + 15) / 114][Stage 79:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.831286059 seconds
res81: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=25 AND partitionZIndex<=25,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40544714 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 80:============================>                         (59 + 54) / 113][Stage 80:=================================>                    (71 + 42) / 113][Stage 80:==========================================>           (89 + 24) / 113][Stage 80:=================================================>    (104 + 9) / 113][Stage 80:=====================================================>(111 + 2) / 113]                                                                                [Stage 81:=============================>                        (63 + 51) / 114][Stage 81:=======================================>              (84 + 30) / 114][Stage 81:===============================================>     (103 + 11) / 114][Stage 81:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.235695463 seconds
res83: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=88 AND partitionZIndex<=88,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405595582 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 82:============================>                         (59 + 54) / 113][Stage 82:=================================>                    (70 + 43) / 113][Stage 82:========================================>             (85 + 28) / 113][Stage 82:=================================================>    (104 + 9) / 113][Stage 82:====================================================> (110 + 3) / 113]                                                                                [Stage 83:============================>                         (61 + 53) / 114][Stage 83:=================================>                    (71 + 43) / 114][Stage 83:===========================================>          (92 + 22) / 114][Stage 83:===================================================>  (108 + 6) / 114][Stage 83:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.385318506 seconds
res85: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=194 AND partitionZIndex<=194,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.39865722 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 84:============================>                         (59 + 54) / 113][Stage 84:==============================>                       (64 + 49) / 113][Stage 84:===================================>                  (74 + 39) / 113][Stage 84:===========================================>          (91 + 22) / 113][Stage 84:===================================================>  (108 + 5) / 113]                                                                                [Stage 85:=============================>                        (62 + 52) / 114][Stage 85:===================================>                  (74 + 40) / 114][Stage 85:============================================>         (93 + 21) / 114][Stage 85:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.079551581 seconds
res87: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=245 AND partitionZIndex<=245,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.413986672 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 86:============================>                         (59 + 54) / 113][Stage 86:=============================>                        (62 + 51) / 113][Stage 86:====================================>                 (77 + 36) / 113][Stage 86:============================================>         (94 + 19) / 113][Stage 86:=====================================================>(112 + 1) / 113]                                                                                [Stage 87:============================>                         (60 + 54) / 114][Stage 87:=============================>                        (63 + 51) / 114][Stage 87:==========================================>           (90 + 24) / 114][Stage 87:==================================================>   (106 + 8) / 114][Stage 87:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.94429284 seconds
res89: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=182", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=182 AND partitionZIndex<=182,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.40400288 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 88:==============================>                       (63 + 50) / 113][Stage 88:===================================>                  (74 + 39) / 113][Stage 88:=============================================>        (95 + 18) / 113][Stage 88:====================================================> (109 + 4) / 113]                                                                                [Stage 89:============================>                         (60 + 54) / 114][Stage 89:================================>                     (69 + 45) / 114][Stage 89:============================================>         (93 + 21) / 114][Stage 89:===================================================>  (109 + 5) / 114]                                                                                Time elapsed: 2.920275847 seconds
res91: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=9", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=9 AND partitionZIndex<=9,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.419721313 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 90:============================>                         (60 + 53) / 113][Stage 90:=================================>                    (71 + 42) / 113][Stage 90:=============================================>        (96 + 17) / 113][Stage 90:====================================================> (110 + 3) / 113]                                                                                [Stage 91:============================>                         (60 + 54) / 114][Stage 91:===================================>                  (74 + 40) / 114][Stage 91:=============================================>        (96 + 18) / 114][Stage 91:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.02484734 seconds
res93: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=156", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=156 AND partitionZIndex<=156,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.395424573 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 92:============================>                         (59 + 54) / 113][Stage 92:===============================>                      (65 + 48) / 113][Stage 92:======================================>               (80 + 33) / 113][Stage 92:==============================================>      (100 + 13) / 113][Stage 92:=====================================================>(112 + 1) / 113]                                                                                [Stage 93:============================>                         (61 + 53) / 114][Stage 93:================================>                     (69 + 45) / 114][Stage 93:=======================================>              (84 + 30) / 114][Stage 93:================================================>    (104 + 10) / 114][Stage 93:=====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.208834138 seconds
res95: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=18", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=18 AND partitionZIndex<=18,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.404412044 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 94:===========================>                          (58 + 55) / 113][Stage 94:===============================>                      (66 + 47) / 113][Stage 94:==========================================>           (89 + 24) / 113][Stage 94:==================================================>   (106 + 7) / 113][Stage 94:=====================================================>(112 + 1) / 113]                                                                                [Stage 95:===========================>                          (59 + 55) / 114][Stage 95:==============================>                       (64 + 50) / 114][Stage 95:=======================================>              (84 + 30) / 114][Stage 95:==============================================>      (100 + 14) / 114][Stage 95:====================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.121092073 seconds
res97: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=208", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=208 AND partitionZIndex<=208,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.540356816 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 96:============================>                         (59 + 54) / 113][Stage 96:==================================>                   (72 + 41) / 113][Stage 96:=============================================>        (96 + 17) / 113][Stage 96:====================================================> (109 + 4) / 113]                                                                                [Stage 97:===========================>                          (59 + 55) / 114][Stage 97:==============================>                       (64 + 50) / 114][Stage 97:=====================================>                (80 + 34) / 114][Stage 97:=================================================>    (105 + 9) / 114]                                                                                Time elapsed: 2.821554144 seconds
res99: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=203", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=203 AND partitionZIndex<=203,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.408368959 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 98:===========================>                          (58 + 55) / 113][Stage 98:=============================>                        (61 + 52) / 113][Stage 98:===================================>                  (74 + 39) / 113][Stage 98:============================================>         (94 + 19) / 113][Stage 98:=====================================================>(111 + 2) / 113]                                                                                [Stage 99:=============================>                        (63 + 51) / 114][Stage 99:=====================================>                (80 + 34) / 114][Stage 99:=============================================>        (96 + 18) / 114][Stage 99:=====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.03193393 seconds
res101: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=116 AND partitionZIndex<=116,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.392553467 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 100:===========================>                         (59 + 54) / 113][Stage 100:=============================>                       (63 + 50) / 113][Stage 100:=========================================>           (89 + 24) / 113][Stage 100:==================================================>  (108 + 5) / 113]                                                                                [Stage 101:===========================>                         (60 + 54) / 114][Stage 101:==============================>                      (65 + 49) / 114][Stage 101:========================================>            (87 + 27) / 114][Stage 101:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 2.842213845 seconds
res103: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=209", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=209 AND partitionZIndex<=209,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389792919 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 102:===========================>                         (59 + 54) / 113][Stage 102:=================================>                   (71 + 42) / 113][Stage 102:==========================================>          (91 + 22) / 113][Stage 102:====================================================>(111 + 2) / 113]                                                                                [Stage 103:===========================>                         (60 + 54) / 114][Stage 103:=============================>                       (63 + 51) / 114][Stage 103:==================================>                  (75 + 39) / 114][Stage 103:==============================================>      (99 + 15) / 114][Stage 103:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.894275045 seconds
res105: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=95", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=95 AND partitionZIndex<=95,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.48593242 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 104:===========================>                         (58 + 55) / 113][Stage 104:===============================>                     (67 + 46) / 113][Stage 104:=======================================>             (85 + 28) / 113][Stage 104:==================================================>  (108 + 5) / 113]                                                                                [Stage 105:=============================>                       (64 + 50) / 114][Stage 105:===================================>                 (76 + 38) / 114][Stage 105:==============================================>     (103 + 11) / 114][Stage 105:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.894754053 seconds
res107: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=31", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=31 AND partitionZIndex<=31,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405955574 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 106:===========================>                         (58 + 55) / 113][Stage 106:==============================>                      (65 + 48) / 113][Stage 106:======================================>              (82 + 31) / 113][Stage 106:==============================================>     (101 + 12) / 113][Stage 106:====================================================>(112 + 1) / 113]                                                                                [Stage 107:===========================>                         (59 + 55) / 114][Stage 107:==============================>                      (66 + 48) / 114][Stage 107:========================================>            (87 + 27) / 114][Stage 107:=================================================>   (106 + 8) / 114][Stage 107:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.084110671 seconds
res109: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=222", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=222 AND partitionZIndex<=222,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390172102 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 108:============================>                        (60 + 53) / 113][Stage 108:==============================>                      (66 + 47) / 113][Stage 108:=====================================>               (81 + 32) / 113][Stage 108:===============================================>    (103 + 10) / 113][Stage 108:====================================================>(112 + 1) / 113]                                                                                [Stage 109:===========================>                         (60 + 54) / 114][Stage 109:===============================>                     (67 + 47) / 114][Stage 109:======================================>              (83 + 31) / 114][Stage 109:================================================>    (105 + 9) / 114][Stage 109:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.019999444 seconds
res111: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=8", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=8 AND partitionZIndex<=8,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.389380681 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 110:===========================>                         (59 + 54) / 113][Stage 110:============================>                        (61 + 52) / 113][Stage 110:================================>                    (70 + 43) / 113][Stage 110:=============================================>       (97 + 16) / 113][Stage 110:===================================================> (110 + 3) / 113]                                                                                [Stage 111:=============================>                       (63 + 51) / 114][Stage 111:==================================>                  (75 + 39) / 114][Stage 111:==============================================>     (102 + 12) / 114][Stage 111:==================================================>  (108 + 6) / 114][Stage 111:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.311159743 seconds
res113: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=19", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=19 AND partitionZIndex<=19,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.479092481 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 112:===========================>                         (59 + 54) / 113][Stage 112:==============================>                      (66 + 47) / 113][Stage 112:=======================================>             (84 + 29) / 113][Stage 112:==============================================>     (102 + 11) / 113][Stage 112:====================================================>(111 + 2) / 113]                                                                                [Stage 113:=============================>                       (63 + 51) / 114][Stage 113:=================================>                   (71 + 43) / 114][Stage 113:========================================>            (88 + 26) / 114][Stage 113:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.128144819 seconds
res115: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=169 AND partitionZIndex<=169,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390788027 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 114:===========================>                         (59 + 54) / 113][Stage 114:=============================>                       (63 + 50) / 113][Stage 114:======================================>              (82 + 31) / 113][Stage 114:===============================================>    (103 + 10) / 113][Stage 114:===================================================> (109 + 4) / 113]                                                                                [Stage 115:===========================>                         (60 + 54) / 114][Stage 115:================================>                    (70 + 44) / 114][Stage 115:==========================================>          (91 + 23) / 114][Stage 115:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.059452096 seconds
res117: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=232", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=232 AND partitionZIndex<=232,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.399687518 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 116:===========================>                         (59 + 54) / 113][Stage 116:==================================>                  (73 + 40) / 113][Stage 116:==========================================>          (90 + 23) / 113][Stage 116:===============================================>    (103 + 10) / 113]                                                                                [Stage 117:===========================>                         (59 + 55) / 114][Stage 117:============================>                        (61 + 53) / 114][Stage 117:=====================================>               (81 + 33) / 114][Stage 117:============================================>        (96 + 18) / 114][Stage 117:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.838740043 seconds
res119: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=217", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=217 AND partitionZIndex<=217,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.406486701 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 118:===========================>                         (59 + 54) / 113][Stage 118:==============================>                      (65 + 48) / 113][Stage 118:=====================================>               (79 + 34) / 113][Stage 118:============================================>        (95 + 18) / 113][Stage 118:===================================================> (110 + 3) / 113]                                                                                [Stage 119:===========================>                         (60 + 54) / 114][Stage 119:=============================>                       (64 + 50) / 114][Stage 119:=====================================>               (80 + 34) / 114][Stage 119:===============================================>    (104 + 10) / 114][Stage 119:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.969272226 seconds
res121: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=38", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=38 AND partitionZIndex<=38,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.507826342 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 120:===========================>                         (58 + 55) / 113][Stage 120:==============================>                      (66 + 47) / 113][Stage 120:=======================================>             (84 + 29) / 113][Stage 120:=================================================>   (106 + 7) / 113][Stage 120:====================================================>(112 + 1) / 113]                                                                                [Stage 121:===========================>                         (59 + 55) / 114][Stage 121:===============================>                     (68 + 46) / 114][Stage 121:=======================================>             (84 + 30) / 114][Stage 121:=============================================>      (100 + 14) / 114][Stage 121:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.041584076 seconds
res123: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=133", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=133 AND partitionZIndex<=133,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386338355 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 122:===========================>                         (58 + 55) / 113][Stage 122:===================================>                 (76 + 37) / 113][Stage 122:==========================================>          (91 + 22) / 113][Stage 122:==================================================>  (107 + 6) / 113][Stage 122:====================================================>(112 + 1) / 113]                                                                                [Stage 123:===========================>                         (59 + 55) / 114][Stage 123:==============================>                      (65 + 49) / 114][Stage 123:======================================>              (82 + 32) / 114][Stage 123:==============================================>     (103 + 11) / 114]                                                                                Time elapsed: 3.03214339 seconds
res125: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=85", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=85 AND partitionZIndex<=85,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.384046869 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 124:===========================>                         (59 + 54) / 113][Stage 124:==============================>                      (64 + 49) / 113][Stage 124:=====================================>               (79 + 34) / 113][Stage 124:=============================================>       (97 + 16) / 113][Stage 124:===================================================> (110 + 3) / 113][Stage 124:====================================================>(112 + 1) / 113]                                                                                [Stage 125:===========================>                         (60 + 54) / 114][Stage 125:==============================>                      (66 + 48) / 114][Stage 125:=======================================>             (84 + 30) / 114][Stage 125:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 3.049649256 seconds
res127: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=138 AND partitionZIndex<=138,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.391337094 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 126:============================>                        (60 + 53) / 113][Stage 126:===============================>                     (68 + 45) / 113][Stage 126:========================================>            (87 + 26) / 113][Stage 126:==============================================>     (102 + 11) / 113][Stage 126:==================================================>  (108 + 5) / 113]                                                                                [Stage 127:============================>                        (62 + 52) / 114][Stage 127:================================>                    (70 + 44) / 114][Stage 127:============================================>        (96 + 18) / 114][Stage 127:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.194654989 seconds
res129: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=87", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=87 AND partitionZIndex<=87,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.496902909 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 128:===========================>                         (58 + 55) / 113][Stage 128:============================>                        (61 + 52) / 113][Stage 128:======================================>              (83 + 30) / 113][Stage 128:=================================================>   (106 + 7) / 113][Stage 128:===================================================> (110 + 3) / 113]                                                                                [Stage 129:===========================>                         (59 + 55) / 114][Stage 129:==============================>                      (65 + 49) / 114][Stage 129:====================================>                (79 + 35) / 114][Stage 129:==============================================>     (102 + 12) / 114][Stage 129:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.965390506 seconds
res131: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=110 AND partitionZIndex<=110,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379899877 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 130:=============================>                       (62 + 51) / 113][Stage 130:=====================================>               (79 + 34) / 113][Stage 130:=============================================>       (98 + 15) / 113][Stage 130:====================================================>(112 + 1) / 113]                                                                                [Stage 131:===========================>                         (59 + 55) / 114][Stage 131:===============================>                     (67 + 47) / 114][Stage 131:======================================>              (83 + 31) / 114][Stage 131:==============================================>     (103 + 11) / 114][Stage 131:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.936365475 seconds
res133: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=160 AND partitionZIndex<=160,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390282433 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 132:===========================>                         (59 + 54) / 113][Stage 132:=================================>                   (71 + 42) / 113][Stage 132:========================================>            (87 + 26) / 113][Stage 132:==================================================>  (107 + 6) / 113]                                                                                [Stage 133:============================>                        (61 + 53) / 114][Stage 133:=================================>                   (72 + 42) / 114][Stage 133:===========================================>         (93 + 21) / 114][Stage 133:====================================================>(112 + 2) / 114][Stage 133:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.25717256 seconds
res135: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=45", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=45 AND partitionZIndex<=45,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.378685335 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 134:===========================>                         (58 + 55) / 113][Stage 134:==============================>                      (66 + 47) / 113][Stage 134:=====================================>               (80 + 33) / 113][Stage 134:==============================================>     (102 + 11) / 113][Stage 134:====================================================>(112 + 1) / 113]                                                                                [Stage 135:===========================>                         (60 + 54) / 114][Stage 135:==============================>                      (65 + 49) / 114][Stage 135:======================================>              (83 + 31) / 114][Stage 135:==============================================>     (101 + 13) / 114][Stage 135:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.173253046 seconds
res137: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=94", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=94 AND partitionZIndex<=94,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385314278 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 136:===========================>                         (59 + 54) / 113][Stage 136:==================================>                  (73 + 40) / 113][Stage 136:===========================================>         (93 + 20) / 113][Stage 136:===================================================> (109 + 4) / 113]                                                                                [Stage 137:=============================>                       (63 + 51) / 114][Stage 137:================================>                    (70 + 44) / 114][Stage 137:=========================================>           (90 + 24) / 114][Stage 137:=================================================>   (107 + 7) / 114][Stage 137:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.168368276 seconds
res139: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=21 AND partitionZIndex<=21,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396789877 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 138:===========================>                         (59 + 54) / 113][Stage 138:===================================>                 (76 + 37) / 113][Stage 138:==============================================>     (102 + 11) / 113][Stage 138:====================================================>(112 + 1) / 113]                                                                                [Stage 139:===========================>                         (59 + 55) / 114][Stage 139:=================================>                   (71 + 43) / 114][Stage 139:========================================>            (87 + 27) / 114][Stage 139:==============================================>     (102 + 12) / 114][Stage 139:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.908653967 seconds
res141: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=93", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=93 AND partitionZIndex<=93,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387496827 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 140:===========================>                         (59 + 54) / 113][Stage 140:==============================>                      (65 + 48) / 113][Stage 140:=====================================>               (81 + 32) / 113][Stage 140:==================================================>  (108 + 5) / 113]                                                                                [Stage 141:============================>                        (61 + 53) / 114][Stage 141:================================>                    (69 + 45) / 114][Stage 141:=======================================>             (86 + 28) / 114][Stage 141:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.847852847 seconds
res143: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=175", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=175 AND partitionZIndex<=175,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381844709 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 142:============================>                        (60 + 53) / 113][Stage 142:===============================>                     (68 + 45) / 113][Stage 142:========================================>            (86 + 27) / 113][Stage 142:=================================================>   (105 + 8) / 113]                                                                                [Stage 143:===========================>                         (60 + 54) / 114][Stage 143:=================================>                   (71 + 43) / 114][Stage 143:==========================================>          (92 + 22) / 114][Stage 143:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.839756466 seconds
res145: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=47 AND partitionZIndex<=47,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387426568 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 144:===========================>                         (59 + 54) / 113][Stage 144:==============================>                      (64 + 49) / 113][Stage 144:=====================================>               (80 + 33) / 113][Stage 144:==============================================>     (102 + 11) / 113][Stage 144:====================================================>(111 + 2) / 113]                                                                                [Stage 145:===========================>                         (60 + 54) / 114][Stage 145:===============================>                     (68 + 46) / 114][Stage 145:======================================>              (83 + 31) / 114][Stage 145:==============================================>      (99 + 15) / 114][Stage 145:====================================================>(112 + 2) / 114][Stage 145:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.162363642 seconds
res147: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=205 AND partitionZIndex<=205,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393293429 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 146:===========================>                         (58 + 55) / 113][Stage 146:============================>                        (61 + 52) / 113][Stage 146:==================================>                  (74 + 39) / 113][Stage 146:==========================================>          (91 + 22) / 113][Stage 146:==================================================>  (108 + 5) / 113]                                                                                [Stage 147:============================>                        (62 + 52) / 114][Stage 147:===================================>                 (77 + 37) / 114][Stage 147:==============================================>     (102 + 12) / 114][Stage 147:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.053831542 seconds
res149: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=99", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=99 AND partitionZIndex<=99,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382747214 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 148:===========================>                         (59 + 54) / 113][Stage 148:==============================>                      (66 + 47) / 113][Stage 148:=====================================>               (79 + 34) / 113][Stage 148:===============================================>    (103 + 10) / 113][Stage 148:====================================================>(112 + 1) / 113]                                                                                [Stage 149:===========================>                         (60 + 54) / 114][Stage 149:=============================>                       (63 + 51) / 114][Stage 149:========================================>            (88 + 26) / 114][Stage 149:=================================================>   (107 + 7) / 114]                                                                                Time elapsed: 2.903115758 seconds
res151: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=176", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=176 AND partitionZIndex<=176,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.387801812 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 150:===========================>                         (59 + 54) / 113][Stage 150:=============================>                       (63 + 50) / 113][Stage 150:===================================>                 (75 + 38) / 113][Stage 150:=============================================>       (96 + 17) / 113][Stage 150:==================================================>  (108 + 5) / 113][Stage 150:====================================================>(112 + 1) / 113]                                                                                [Stage 151:===========================>                         (60 + 54) / 114][Stage 151:================================>                    (70 + 44) / 114][Stage 151:========================================>            (87 + 27) / 114][Stage 151:=================================================>   (106 + 8) / 114][Stage 151:====================================================>(112 + 2) / 114][Stage 151:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.353093648 seconds
res153: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=177", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=177 AND partitionZIndex<=177,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.390083841 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 152:===========================>                         (58 + 55) / 113][Stage 152:==================================>                  (74 + 39) / 113][Stage 152:============================================>        (94 + 19) / 113][Stage 152:==================================================>  (107 + 6) / 113][Stage 152:====================================================>(112 + 1) / 113]                                                                                [Stage 153:===========================>                         (60 + 54) / 114][Stage 153:===============================>                     (67 + 47) / 114][Stage 153:========================================>            (87 + 27) / 114][Stage 153:================================================>    (105 + 9) / 114][Stage 153:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.079666569 seconds
res155: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=67", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=67 AND partitionZIndex<=67,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380966511 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 154:============================>                        (61 + 52) / 113][Stage 154:==================================>                  (74 + 39) / 113][Stage 154:==============================================>     (102 + 11) / 113][Stage 154:====================================================>(111 + 2) / 113]                                                                                [Stage 155:===========================>                         (60 + 54) / 114][Stage 155:===============================>                     (67 + 47) / 114][Stage 155:========================================>            (87 + 27) / 114][Stage 155:==============================================>     (101 + 13) / 114][Stage 155:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.136234048 seconds
res157: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=152", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=152 AND partitionZIndex<=152,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.381303192 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 156:============================>                        (60 + 53) / 113][Stage 156:==================================>                  (73 + 40) / 113][Stage 156:=============================================>       (96 + 17) / 113][Stage 156:==================================================>  (108 + 5) / 113]                                                                                [Stage 157:===========================>                         (60 + 54) / 114][Stage 157:==================================>                  (74 + 40) / 114][Stage 157:===========================================>         (94 + 20) / 114][Stage 157:==================================================>  (109 + 5) / 114]                                                                                Time elapsed: 3.044604944 seconds
res159: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=189", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=189 AND partitionZIndex<=189,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379784028 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 158:============================>                        (60 + 53) / 113][Stage 158:================================>                    (69 + 44) / 113][Stage 158:======================================>              (83 + 30) / 113][Stage 158:==============================================>     (102 + 11) / 113][Stage 158:====================================================>(112 + 1) / 113]                                                                                [Stage 159:===========================>                         (59 + 55) / 114][Stage 159:=============================>                       (63 + 51) / 114][Stage 159:========================================>            (87 + 27) / 114][Stage 159:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.933294893 seconds
res161: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=242", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=242 AND partitionZIndex<=242,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.420056206 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 160:===========================>                         (59 + 54) / 113][Stage 160:==============================>                      (65 + 48) / 113][Stage 160:====================================>                (78 + 35) / 113][Stage 160:===========================================>         (93 + 20) / 113][Stage 160:===================================================> (110 + 3) / 113]                                                                                [Stage 161:============================>                        (62 + 52) / 114][Stage 161:================================>                    (70 + 44) / 114][Stage 161:==========================================>          (92 + 22) / 114][Stage 161:==================================================>  (108 + 6) / 114]                                                                                Time elapsed: 3.043136571 seconds
res163: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=57", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=57 AND partitionZIndex<=57,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.476451358 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 162:===========================>                         (59 + 54) / 113][Stage 162:==============================>                      (66 + 47) / 113][Stage 162:====================================>                (77 + 36) / 113][Stage 162:=============================================>       (98 + 15) / 113]                                                                                [Stage 163:===========================>                         (60 + 54) / 114][Stage 163:===============================>                     (68 + 46) / 114][Stage 163:===========================================>         (93 + 21) / 114][Stage 163:===============================================>    (104 + 10) / 114]                                                                                Time elapsed: 2.952060949 seconds
res165: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=168", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=168 AND partitionZIndex<=168,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.373914631 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 164:===========================>                         (59 + 54) / 113][Stage 164:============================>                        (61 + 52) / 113][Stage 164:=====================================>               (80 + 33) / 113][Stage 164:==================================================>  (107 + 6) / 113][Stage 164:===================================================> (110 + 3) / 113]                                                                                [Stage 165:=============================>                       (64 + 50) / 114][Stage 165:=================================>                   (73 + 41) / 114][Stage 165:==============================================>     (102 + 12) / 114][Stage 165:====================================================>(112 + 2) / 114][Stage 165:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.120102846 seconds
res167: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=48 AND partitionZIndex<=48,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393920919 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 166:===========================>                         (58 + 55) / 113][Stage 166:==============================>                      (64 + 49) / 113][Stage 166:========================================>            (86 + 27) / 113][Stage 166:===============================================>    (103 + 10) / 113][Stage 166:====================================================>(111 + 2) / 113]                                                                                [Stage 167:===========================>                         (60 + 54) / 114][Stage 167:==============================>                      (65 + 49) / 114][Stage 167:=====================================>               (81 + 33) / 114][Stage 167:============================================>        (96 + 18) / 114][Stage 167:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.106579286 seconds
res169: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=76", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=76 AND partitionZIndex<=76,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375403297 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 168:===========================>                         (59 + 54) / 113][Stage 168:================================>                    (70 + 43) / 113][Stage 168:=========================================>           (89 + 24) / 113][Stage 168:===================================================> (109 + 4) / 113]                                                                                [Stage 169:=============================>                       (63 + 51) / 114][Stage 169:====================================>                (78 + 36) / 114][Stage 169:==============================================>      (99 + 15) / 114][Stage 169:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.883970576 seconds
res171: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=66 AND partitionZIndex<=66,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385813534 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 170:============================>                        (60 + 53) / 113][Stage 170:==================================>                  (74 + 39) / 113][Stage 170:=========================================>           (88 + 25) / 113][Stage 170:====================================================>(111 + 2) / 113][Stage 170:====================================================>(112 + 1) / 113]                                                                                [Stage 171:===========================>                         (60 + 54) / 114][Stage 171:===============================>                     (68 + 46) / 114][Stage 171:=======================================>             (85 + 29) / 114][Stage 171:=============================================>      (100 + 14) / 114][Stage 171:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.324608163 seconds
res173: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=89 AND partitionZIndex<=89,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382035642 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 172:===========================>                         (59 + 54) / 113][Stage 172:==============================>                      (64 + 49) / 113][Stage 172:=======================================>             (84 + 29) / 113][Stage 172:==================================================>  (107 + 6) / 113]                                                                                [Stage 173:=============================>                       (64 + 50) / 114][Stage 173:=================================>                   (71 + 43) / 114][Stage 173:==========================================>          (91 + 23) / 114][Stage 173:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.919286408 seconds
res175: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=10", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=10 AND partitionZIndex<=10,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.380100936 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 174:===========================>                         (59 + 54) / 113][Stage 174:===============================>                     (67 + 46) / 113][Stage 174:=======================================>             (85 + 28) / 113][Stage 174:===================================================> (109 + 4) / 113]                                                                                [Stage 175:===========================>                         (60 + 54) / 114][Stage 175:==============================>                      (66 + 48) / 114][Stage 175:====================================>                (79 + 35) / 114][Stage 175:===========================================>         (94 + 20) / 114][Stage 175:=================================================>   (106 + 8) / 114]                                                                                Time elapsed: 2.999531508 seconds
res177: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=42", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=42 AND partitionZIndex<=42,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.377534047 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 176:===========================>                         (58 + 55) / 113][Stage 176:=============================>                       (62 + 51) / 113][Stage 176:=====================================>               (81 + 32) / 113][Stage 176:=============================================>       (98 + 15) / 113][Stage 176:=================================================>   (105 + 8) / 113]                                                                                [Stage 177:===========================>                         (60 + 54) / 114][Stage 177:==================================>                  (75 + 39) / 114][Stage 177:==============================================>      (99 + 15) / 114][Stage 177:===================================================> (111 + 3) / 114][Stage 177:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 3.174309951 seconds
res179: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=30 AND partitionZIndex<=30,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.379358075 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 178:===========================>                         (58 + 55) / 113][Stage 178:============================>                        (60 + 53) / 113][Stage 178:=================================>                   (72 + 41) / 113][Stage 178:==============================================>     (102 + 11) / 113]                                                                                [Stage 179:===========================>                         (59 + 55) / 114][Stage 179:=================================>                   (72 + 42) / 114][Stage 179:=======================================>             (85 + 29) / 114][Stage 179:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.944901694 seconds
res181: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=158 AND partitionZIndex<=158,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.382628826 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 180:===========================>                         (59 + 54) / 113][Stage 180:==============================>                      (64 + 49) / 113][Stage 180:=======================================>             (85 + 28) / 113][Stage 180:=================================================>   (106 + 7) / 113]                                                                                [Stage 181:============================>                        (62 + 52) / 114][Stage 181:==================================>                  (75 + 39) / 114][Stage 181:==========================================>          (91 + 23) / 114][Stage 181:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 2.86004627 seconds
res183: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=123", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=123 AND partitionZIndex<=123,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.41579002 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 182:===========================>                         (58 + 55) / 113][Stage 182:===============================>                     (68 + 45) / 113][Stage 182:======================================>              (83 + 30) / 113][Stage 182:==============================================>     (102 + 11) / 113]                                                                                [Stage 183:===========================>                         (59 + 55) / 114][Stage 183:=================================>                   (71 + 43) / 114][Stage 183:===========================================>         (93 + 21) / 114][Stage 183:===================================================> (110 + 4) / 114]                                                                                Time elapsed: 2.932599964 seconds
res185: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=100", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=100 AND partitionZIndex<=100,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.396604496 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 184:===========================>                         (59 + 54) / 113][Stage 184:=============================>                       (63 + 50) / 113][Stage 184:=====================================>               (79 + 34) / 113][Stage 184:=================================================>   (106 + 7) / 113][Stage 184:===================================================> (110 + 3) / 113]                                                                                [Stage 185:============================>                        (62 + 52) / 114][Stage 185:====================================>                (79 + 35) / 114][Stage 185:==============================================>     (102 + 12) / 114][Stage 185:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.931591067 seconds
res187: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=43", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=43 AND partitionZIndex<=43,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.388469189 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 186:===========================>                         (59 + 54) / 113][Stage 186:============================>                        (61 + 52) / 113][Stage 186:===================================>                 (76 + 37) / 113][Stage 186:==============================================>      (99 + 14) / 113][Stage 186:====================================================>(112 + 1) / 113]                                                                                [Stage 187:============================>                        (62 + 52) / 114][Stage 187:====================================>                (78 + 36) / 114][Stage 187:==============================================>      (99 + 15) / 114][Stage 187:==================================================>  (109 + 5) / 114][Stage 187:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.29902633 seconds
res189: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=111", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=111 AND partitionZIndex<=111,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393461426 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 188:=============================>                       (62 + 51) / 113][Stage 188:===============================>                     (67 + 46) / 113][Stage 188:===========================================>         (93 + 20) / 113][Stage 188:===================================================> (110 + 3) / 113]                                                                                [Stage 189:===========================>                         (60 + 54) / 114][Stage 189:====================================>                (79 + 35) / 114][Stage 189:=============================================>       (97 + 17) / 114][Stage 189:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.937023998 seconds
res191: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=173 AND partitionZIndex<=173,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.386918546 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 190:===========================>                         (58 + 55) / 113][Stage 190:=============================>                       (62 + 51) / 113][Stage 190:====================================>                (78 + 35) / 113][Stage 190:=============================================>       (96 + 17) / 113][Stage 190:==================================================>  (108 + 5) / 113]                                                                                [Stage 191:============================>                        (62 + 52) / 114][Stage 191:===================================>                 (76 + 38) / 114][Stage 191:==============================================>     (101 + 13) / 114][Stage 191:====================================================>(112 + 2) / 114]                                                                                Time elapsed: 2.944280968 seconds
res193: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=159", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=159 AND partitionZIndex<=159,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.375357887 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 192:===========================>                         (58 + 55) / 113][Stage 192:=============================>                       (63 + 50) / 113][Stage 192:======================================>              (82 + 31) / 113][Stage 192:=================================================>   (105 + 8) / 113]                                                                                [Stage 193:===========================>                         (60 + 54) / 114][Stage 193:=============================>                       (64 + 50) / 114][Stage 193:========================================>            (88 + 26) / 114][Stage 193:==================================================>  (109 + 5) / 114][Stage 193:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.06275974 seconds
res195: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=235", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=235 AND partitionZIndex<=235,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.400536473 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 194:===========================>                         (58 + 55) / 113][Stage 194:===============================>                     (68 + 45) / 113][Stage 194:==========================================>          (90 + 23) / 113][Stage 194:===============================================>    (103 + 10) / 113][Stage 194:====================================================>(111 + 2) / 113][Stage 194:====================================================>(112 + 1) / 113]                                                                                [Stage 195:===========================>                         (59 + 55) / 114][Stage 195:==============================>                      (65 + 49) / 114][Stage 195:========================================>            (88 + 26) / 114][Stage 195:==============================================>      (99 + 15) / 114][Stage 195:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.339955438 seconds
res197: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=65", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=65 AND partitionZIndex<=65,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.393536911 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 196:>                                                      (0 + 0) / 113][Stage 196:===========================>                         (58 + 55) / 113][Stage 196:============================>                        (61 + 52) / 113][Stage 196:=======================================>             (84 + 29) / 113][Stage 196:=================================================>   (105 + 8) / 113][Stage 196:====================================================>(111 + 2) / 113]                                                                                [Stage 197:===========================>                         (60 + 54) / 114][Stage 197:===============================>                     (68 + 46) / 114][Stage 197:=======================================>             (84 + 30) / 114][Stage 197:==============================================>     (103 + 11) / 114][Stage 197:===================================================> (111 + 3) / 114]                                                                                Time elapsed: 3.11422749 seconds
res199: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=69 AND partitionZIndex<=69,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.405186532 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 198:===========================>                         (58 + 55) / 113][Stage 198:============================>                        (60 + 53) / 113][Stage 198:=====================================>               (81 + 32) / 113][Stage 198:=================================================>   (105 + 8) / 113]                                                                                [Stage 199:============================>                        (61 + 53) / 114][Stage 199:==================================>                  (74 + 40) / 114][Stage 199:========================================>            (87 + 27) / 114][Stage 199:==================================================>  (108 + 6) / 114][Stage 199:====================================================>(112 + 2) / 114][Stage 199:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 3.136653574 seconds
res201: Int = 0

scala> 

scala> val dataSource = "/nidan/orc/individualORC/slide1"
dataSource: String = /nidan/orc/individualORC/slide1

scala> val queries = List(("SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=74", 1))
queries: List[(String, Int)] = List((SELECT imageBytes FROM data WHERE partitionZIndex>=74 AND partitionZIndex<=74,1))

scala> 

scala> // query

scala> show_timing{sqlContext.read.orc(dataSource).createOrReplaceTempView("data")}
Time elapsed: 0.385118443 seconds

scala> 

scala> show_timing{sqlContext.sql(queries(0)._1).map(_.getAs[Array[Byte]](0)).rdd.zipWithIndex.map{case (bytes, ind ex) => (bytes, index, s"o6_${index}.JPEG")}.collect.map(writeToLocal).filter(_ => false).size}
[Stage 200:===========================>                         (58 + 55) / 113][Stage 200:=============================>                       (62 + 51) / 113][Stage 200:==================================>                  (73 + 40) / 113][Stage 200:================================================>    (104 + 9) / 113][Stage 200:===================================================> (110 + 3) / 113]                                                                                [Stage 201:===========================>                         (59 + 55) / 114][Stage 201:===============================>                     (68 + 46) / 114][Stage 201:========================================>            (88 + 26) / 114][Stage 201:=================================================>   (107 + 7) / 114][Stage 201:====================================================>(113 + 1) / 114]                                                                                Time elapsed: 2.939000661 seconds
res203: Int = 0

scala> 

scala> :quit
17/05/24 14:12:00 WARN netty.Dispatcher: Message RemoteProcessDisconnected(128.110.152.36:57784) dropped. Could not find BlockManagerEndpoint1.

real	9m47.479s
user	11m28.784s
sys	0m29.452s
